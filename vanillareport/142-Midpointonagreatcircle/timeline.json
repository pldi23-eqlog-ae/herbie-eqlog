[{"compiler":[[25,15]],"method":["search"],"sampling":[[12,0.10916153336439205,0.8888867716814781,0.0019516949541298345],[11,0.10916153336439205,0.8888867716814781,0.0019516949541298345],[10,0.09356702859805033,0.9044812764478198,0.0019516949541298345],[9,0.09356702859805033,0.9044812764478198,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":349.79296875,"type":"analyze"},{"outcomes":[["body",512,"valid",469.22607421875,1842],["body",1024,"valid",2184.48388671875,4538],["body",2048,"valid",128.5244140625,111],["body",256,"valid",222.99951171875,1765]],"time":3013.97412109375,"type":"sample"},{"compiler":[[24,14]],"egraph":[[0,4,4,2.5e-6],[16,4091,210,0.087270666],[15,4064,210,0.07695575],[14,3993,210,0.066332292],[13,3889,210,0.057122917],[12,3641,210,0.04806225],[11,2980,210,0.038842125],[10,2313,210,0.029723125],[9,1785,210,0.021995],[8,1390,210,0.015567333],[7,956,210,0.010188167],[6,544,210,0.006283625],[5,381,210,0.0038385420000000003],[4,214,210,0.0022317500000000002],[3,164,210,0.001403542],[2,130,210,0.000897917],[1,100,210,0.000522042],[0,62,224,0.000234833]],"inputs":[["0","1","2","3"],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))))","(+.f64 lambda2 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda2 lambda1))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))","(+.f64 phi1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 phi1 lambda2))) (+.f64 (cos.f64 lambda1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 phi1 lambda2))))))","(+.f64 phi2 (atan2.f64 (*.f64 (cos.f64 lambda1) (sin.f64 (-.f64 phi2 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 lambda1) (cos.f64 (-.f64 phi2 lambda2))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 phi1))) (+.f64 (cos.f64 lambda2) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 phi1))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 lambda2) (sin.f64 (-.f64 lambda1 phi2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 (-.f64 lambda1 phi2))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi1) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi2) (*.f64 (cos.f64 phi1) (cos.f64 (-.f64 lambda1 lambda2))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","(+.f64 lambda2 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda2 lambda1))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1))))))","(+.f64 lambda2 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda2 lambda1))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))))","(+.f64 lambda2 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda2 lambda1))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","(+.f64 phi1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 phi1 lambda2))) (+.f64 (cos.f64 lambda1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 phi1 lambda2))))))","(+.f64 phi1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 phi1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 phi1 lambda2)) (cos.f64 lambda1))))","(+.f64 phi2 (atan2.f64 (*.f64 (cos.f64 lambda1) (sin.f64 (-.f64 phi2 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 lambda1) (cos.f64 (-.f64 phi2 lambda2))))))","(+.f64 phi2 (atan2.f64 (*.f64 (cos.f64 lambda1) (sin.f64 (-.f64 phi2 lambda2))) (fma.f64 (cos.f64 lambda1) (cos.f64 (-.f64 phi2 lambda2)) (cos.f64 phi1))))","(+.f64 phi2 (atan2.f64 (*.f64 (cos.f64 lambda1) (sin.f64 (-.f64 phi2 lambda2))) (fma.f64 (cos.f64 lambda1) (cos.f64 (-.f64 lambda2 phi2)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 phi1))) (+.f64 (cos.f64 lambda2) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 phi1))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 phi1))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 phi1)) (cos.f64 lambda2))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 lambda2) (sin.f64 (-.f64 lambda1 phi2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 (-.f64 lambda1 phi2))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 lambda2) (sin.f64 (-.f64 lambda1 phi2))) (fma.f64 (cos.f64 lambda2) (cos.f64 (-.f64 lambda1 phi2)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 lambda2) (sin.f64 (-.f64 lambda1 phi2))) (fma.f64 (cos.f64 lambda2) (cos.f64 (-.f64 phi2 lambda1)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi1) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi2) (*.f64 (cos.f64 phi1) (cos.f64 (-.f64 lambda1 lambda2))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1)) (+.f64 (cos.f64 phi2) (*.f64 (cos.f64 phi1) (cos.f64 (-.f64 lambda1 lambda2))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1)) (fma.f64 (cos.f64 phi1) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))))","(+.f64 lambda1 (atan2.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1)) (fma.f64 (cos.f64 phi1) (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2))))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":117.072021484375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[20,1017,30,0.024663001],[19,1015,30,0.022633751],[18,994,30,0.020578501],[17,951,30,0.018473208999999997],[16,907,30,0.016370626],[15,872,30,0.014372626],[14,850,30,0.012521168],[13,754,30,0.010742709],[12,650,30,0.008806083999999999],[11,604,30,0.007182750999999999],[10,458,30,0.005717793],[9,331,30,0.003983543],[8,244,30,0.002820001],[7,169,30,0.0019435009999999998],[6,115,30,0.001332001],[5,71,30,0.0008218759999999999],[4,45,30,0.0005197089999999999],[3,35,30,0.00035837499999999997],[2,28,30,0.000239125],[1,21,30,0.000147],[0,15,32,6.8166e-5]],"inputs":[["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))"]],"stop":[["saturated",1]],"time":36.830078125,"type":"simplify"},{"compiler":[[43,17]],"time":0.451904296875,"type":"eval"},{"alts":[["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","next",1.3625476773888114],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))))","fresh",1.3885002406302862]],"compiler":[[23,13],[24,14],[23,13],[24,14]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[1.3586414273888114],"time":1.657958984375,"type":"prune"},{"compiler":[[75,13]],"locations":[["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))",0.1953125,true],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))",0.43739264220461926,true],["(sin.f64 (-.f64 lambda1 lambda2))",2.854448181948309,true],["(cos.f64 (-.f64 lambda1 lambda2))",2.9312165798244525,true]],"time":15.35693359375,"type":"localize"},{"count":[[4,100]],"series":[["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","lambda2","-inf",0.2900390625],["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","lambda2","inf",0.278076171875],["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","lambda2","0",0.325927734375],["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","lambda1","-inf",0.31298828125],["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","lambda1","inf",0.27880859375],["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","lambda1","0",0.328125],["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","phi2","-inf",0.788818359375],["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","phi2","inf",0.52392578125],["(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","phi2","0",0.365966796875],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))","phi1","-inf",0.198974609375],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))","phi1","inf",0.6201171875],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))","phi1","0",0.343017578125],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))","lambda2","-inf",0.35498046875],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))","lambda2","inf",0.650146484375],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))","lambda2","0",0.343994140625],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))","lambda1","-inf",0.362060546875],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))","lambda1","inf",0.992919921875],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))","lambda1","0",0.467041015625],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))","phi2","-inf",0.5029296875],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))","phi2","inf",0.791015625],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))","phi2","0",0.56298828125],["(sin.f64 (-.f64 lambda1 lambda2))","lambda2","-inf",0.153076171875],["(sin.f64 (-.f64 lambda1 lambda2))","lambda2","inf",0.144775390625],["(sin.f64 (-.f64 lambda1 lambda2))","lambda2","0",0.297119140625],["(sin.f64 (-.f64 lambda1 lambda2))","lambda1","-inf",0.1591796875],["(sin.f64 (-.f64 lambda1 lambda2))","lambda1","inf",0.198974609375],["(sin.f64 (-.f64 lambda1 lambda2))","lambda1","0",0.275146484375],["(cos.f64 (-.f64 lambda1 lambda2))","lambda2","-inf",0.203857421875],["(cos.f64 (-.f64 lambda1 lambda2))","lambda2","inf",0.1669921875],["(cos.f64 (-.f64 lambda1 lambda2))","lambda2","0",0.385986328125],["(cos.f64 (-.f64 lambda1 lambda2))","lambda1","-inf",0.19287109375],["(cos.f64 (-.f64 lambda1 lambda2))","lambda1","inf",0.205078125],["(cos.f64 (-.f64 lambda1 lambda2))","lambda1","0",0.4599609375]],"time":12.994140625,"type":"series"},{"count":[[4,163]],"egraph":[[2,3393,37,0.027160041000000003],[1,255,37,0.004328375000000001],[0,12,37,0.0002675]],"inputs":[["(cos.f64 (-.f64 lambda1 lambda2))","(sin.f64 (-.f64 lambda1 lambda2))","(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) 1) (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (sin.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (sin.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (sin.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (-.f64 lambda1 lambda2)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (-.f64 lambda1 lambda2)))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (/.f64 (pow.f64 lambda1 3) (fma.f64 lambda1 lambda1 (*.f64 lambda2 (+.f64 lambda1 lambda2))))) (cos.f64 (/.f64 (pow.f64 lambda2 3) (fma.f64 lambda1 lambda1 (*.f64 lambda2 (+.f64 lambda1 lambda2)))))) (*.f64 (sin.f64 (/.f64 (pow.f64 lambda1 3) (fma.f64 lambda1 lambda1 (*.f64 lambda2 (+.f64 lambda1 lambda2))))) (sin.f64 (/.f64 (pow.f64 lambda2 3) (fma.f64 lambda1 lambda1 (*.f64 lambda2 (+.f64 lambda1 lambda2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (/.f64 (*.f64 lambda1 lambda1) (+.f64 lambda1 lambda2))) (cos.f64 (/.f64 (*.f64 lambda2 lambda2) (+.f64 lambda1 lambda2)))) (*.f64 (sin.f64 (/.f64 (*.f64 lambda1 lambda1) (+.f64 lambda1 lambda2))) (sin.f64 (/.f64 (*.f64 lambda2 lambda2) (+.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (exp.f64 (cos.f64 (-.f64 lambda1 lambda2)))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (-.f64 lambda1 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (-.f64 lambda1 lambda2))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (-.f64 lambda1 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda1) (neg.f64 (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (neg.f64 (sin.f64 lambda2)) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 (-.f64 lambda1 lambda2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 lambda1) (cos.f64 (*.f64 (neg.f64 lambda2) 1))) (*.f64 (sin.f64 lambda1) (sin.f64 (*.f64 (neg.f64 lambda2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (fma.f64 (neg.f64 lambda2) 1 lambda2))) (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (fma.f64 (neg.f64 lambda2) 1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (fma.f64 (neg.f64 (cbrt.f64 lambda2)) (pow.f64 (cbrt.f64 lambda2) 2) lambda2))) (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (fma.f64 (neg.f64 (cbrt.f64 lambda2)) (pow.f64 (cbrt.f64 lambda2) 2) lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 (neg.f64 lambda2) lambda2))) (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 (neg.f64 lambda2) lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (-.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) 2) (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) (sqrt.f64 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) 3) (pow.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) 3)) (fma.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (-.f64 (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (*.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 (+.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (-.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (-.f64 lambda1 lambda2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (-.f64 lambda1 lambda2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (-.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (-.f64 lambda1 lambda2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (-.f64 lambda1 lambda2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 lambda1) (cos.f64 lambda2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (sin.f64 lambda1) (neg.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) 1 (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 lambda1) (sin.f64 lambda2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cbrt.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (sqrt.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) (sqrt.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (-.f64 lambda1 lambda2)) (fma.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (-.f64 lambda1 lambda2)) (fma.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (-.f64 lambda1 lambda2)) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (sqrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (neg.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (neg.f64 (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sin.f64 (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) 1))) (fma.f64 (neg.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) 1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) 1))) (fma.f64 (neg.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) 1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) 1))) (fma.f64 (neg.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) 1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) 1))) (fma.f64 (neg.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) 1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) 1))) (fma.f64 (neg.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) 1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 lambda1) (cos.f64 (*.f64 (neg.f64 lambda2) 1))) (*.f64 (cos.f64 lambda1) (sin.f64 (*.f64 (neg.f64 lambda2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 (fma.f64 (neg.f64 lambda2) 1 lambda2))) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 (fma.f64 (neg.f64 lambda2) 1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 (fma.f64 (neg.f64 (cbrt.f64 lambda2)) (pow.f64 (cbrt.f64 lambda2) 2) lambda2))) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 (fma.f64 (neg.f64 (cbrt.f64 lambda2)) (pow.f64 (cbrt.f64 lambda2) 2) lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 (neg.f64 lambda2) lambda2))) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (sin.f64 (+.f64 (neg.f64 lambda2) lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sin.f64 (-.f64 lambda1 lambda2)))) (cbrt.f64 (exp.f64 (sin.f64 (-.f64 lambda1 lambda2)))))) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (-.f64 lambda1 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (-.f64 lambda1 lambda2))))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (-.f64 lambda1 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sin.f64 (-.f64 lambda1 lambda2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (-.f64 lambda1 lambda2)))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (-.f64 lambda1 lambda2)))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 (/.f64 (pow.f64 lambda1 3) (fma.f64 lambda1 lambda1 (*.f64 lambda2 (+.f64 lambda1 lambda2))))) (cos.f64 (/.f64 (pow.f64 lambda2 3) (fma.f64 lambda1 lambda1 (*.f64 lambda2 (+.f64 lambda1 lambda2)))))) (*.f64 (cos.f64 (/.f64 (pow.f64 lambda1 3) (fma.f64 lambda1 lambda1 (*.f64 lambda2 (+.f64 lambda1 lambda2))))) (sin.f64 (/.f64 (pow.f64 lambda2 3) (fma.f64 lambda1 lambda1 (*.f64 lambda2 (+.f64 lambda1 lambda2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 (/.f64 (*.f64 lambda1 lambda1) (+.f64 lambda1 lambda2))) (cos.f64 (/.f64 (*.f64 lambda2 lambda2) (+.f64 lambda1 lambda2)))) (*.f64 (cos.f64 (/.f64 (*.f64 lambda1 lambda1) (+.f64 lambda1 lambda2))) (sin.f64 (/.f64 (*.f64 lambda2 lambda2) (+.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (-.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) (pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) 2) (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) (sqrt.f64 (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 3) (pow.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) 3)) (fma.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) (*.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (sin.f64 (+.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sin.f64 (-.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sin.f64 (-.f64 lambda1 lambda2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 (-.f64 lambda1 lambda2)) 1 (fma.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sin.f64 (-.f64 lambda1 lambda2)) (fma.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (neg.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) (pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) 2) (fma.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) 2) (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) (sqrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (neg.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (*.f64 (cos.f64 lambda1) (neg.f64 (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 phi1) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 1) (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)))) (cbrt.f64 (exp.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 2) (cbrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) (sqrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 3) (pow.f64 (cos.f64 phi1) 3)) (fma.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (pow.f64 (cos.f64 phi1) 2) (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) (pow.f64 (cos.f64 phi1) 2)) (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (neg.f64 (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (cos.f64 phi1)) (exp.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (cos.f64 phi1))) (exp.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) (+.f64 1 (expm1.f64 (cos.f64 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 (-.f64 lambda1 lambda2))) (cos.f64 phi2))) (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 (-.f64 lambda1 lambda2))) (cos.f64 phi2))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 (-.f64 lambda1 lambda2))) (cos.f64 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 (-.f64 lambda1 lambda2))) (cos.f64 phi2)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 (-.f64 lambda1 lambda2))) (cos.f64 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (sin.f64 (-.f64 (-.f64 lambda1 lambda2) phi2)) (sin.f64 (+.f64 (-.f64 lambda1 lambda2) phi2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 3) (pow.f64 (cos.f64 phi2) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (cos.f64 phi2) 3) (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sin.f64 (-.f64 lambda1 lambda2))) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 3) (pow.f64 (cos.f64 phi2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (cos.f64 phi2) 3) (pow.f64 (sin.f64 (-.f64 lambda1 lambda2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) 1))))))"]],"rules":[["egg-rr",21],["egg-rr",29],["egg-rr",64],["egg-rr",49]],"stop":[["node limit",1]],"time":60.083984375,"type":"rewrite"},{"count":[[263,260]],"egraph":[[4,7977,1584,0.037534125],[3,3419,1584,0.023058834],[2,1616,1653,0.010027084],[1,541,1764,0.003671667],[0,181,1896,0.000901917]],"inputs":[["(cos.f64 (neg.f64 lambda2))","(+.f64 (cos.f64 (neg.f64 lambda2)) (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) lambda1)))","(+.f64 (cos.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) lambda1))))","(+.f64 (*.f64 1/6 (*.f64 (sin.f64 (neg.f64 lambda2)) (pow.f64 lambda1 3))) (+.f64 (cos.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) lambda1)))))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(cos.f64 lambda1)","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (cos.f64 lambda1))","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (cos.f64 lambda1))) (cos.f64 lambda1)))","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (sin.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (cos.f64 lambda1))) (cos.f64 lambda1))))","(cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(sin.f64 (neg.f64 lambda2))","(+.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1))","(+.f64 (sin.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)))","(+.f64 (*.f64 -1/6 (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 3))) (+.f64 (sin.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1))))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(sin.f64 lambda1)","(+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (sin.f64 lambda1))","(+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (+.f64 (sin.f64 lambda1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (sin.f64 lambda1)))))","(+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (cos.f64 lambda1))) (+.f64 (sin.f64 lambda1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (sin.f64 lambda1))))))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(+.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))","(+.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2))) (cos.f64 phi1)))","(+.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2))) (+.f64 (*.f64 1/24 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4))) (cos.f64 phi1))))","(+.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2))) (+.f64 (*.f64 1/24 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4))) (+.f64 (*.f64 -1/720 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 6))) (cos.f64 phi1)))))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda2))))","(+.f64 (cos.f64 phi1) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) lambda1))) (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda2)))))","(+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2)))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) lambda1))) (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda2))))))","(+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2)))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) lambda1))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda2))) (*.f64 1/6 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 3))))))))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (cos.f64 phi1)))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (+.f64 (cos.f64 phi1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (+.f64 (cos.f64 phi1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))))))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 1 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)))","(+.f64 1 (+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (*.f64 -1/2 (pow.f64 phi1 2))))","(+.f64 1 (+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (*.f64 -1/2 (pow.f64 phi1 2)))))","(+.f64 (*.f64 -1/720 (pow.f64 phi1 6)) (+.f64 1 (+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (*.f64 -1/2 (pow.f64 phi1 2))))))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(sin.f64 (-.f64 lambda1 lambda2))","(+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2))))","(+.f64 (*.f64 1/24 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4))) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2)))))","(+.f64 (*.f64 -1/720 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 6))) (+.f64 (*.f64 1/24 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4))) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2))))))","(*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2))","(+.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)))","(+.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)) (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 2))))))","(+.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 2)))) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 3)))))))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 lambda1))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))"]],"method":["egg-herbie"],"outputs":[["(cos.f64 (neg.f64 lambda2))","(cos.f64 lambda2)","(+.f64 (cos.f64 (neg.f64 lambda2)) (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) lambda1)))","(+.f64 (cos.f64 lambda2) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) lambda1)))","(-.f64 (cos.f64 lambda2) (neg.f64 (*.f64 lambda1 (sin.f64 lambda2))))","(fma.f64 (sin.f64 lambda2) lambda1 (cos.f64 lambda2))","(+.f64 (cos.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) lambda1))))","(+.f64 (cos.f64 lambda2) (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) lambda1))))","(+.f64 (-.f64 (cos.f64 lambda2) (neg.f64 (*.f64 lambda1 (sin.f64 lambda2)))) (*.f64 -1/2 (*.f64 lambda1 (*.f64 (cos.f64 lambda2) lambda1))))","(+.f64 (cos.f64 lambda2) (*.f64 lambda1 (+.f64 (sin.f64 lambda2) (*.f64 lambda1 (*.f64 (cos.f64 lambda2) -1/2)))))","(+.f64 (cos.f64 lambda2) (*.f64 lambda1 (fma.f64 lambda1 (*.f64 (cos.f64 lambda2) -1/2) (sin.f64 lambda2))))","(+.f64 (*.f64 1/6 (*.f64 (sin.f64 (neg.f64 lambda2)) (pow.f64 lambda1 3))) (+.f64 (cos.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) lambda1)))))","(fma.f64 1/6 (*.f64 (neg.f64 (sin.f64 lambda2)) (pow.f64 lambda1 3)) (+.f64 (cos.f64 lambda2) (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) lambda1)))))","(+.f64 (-.f64 (*.f64 -1/2 (*.f64 lambda1 (*.f64 (cos.f64 lambda2) lambda1))) (neg.f64 (*.f64 lambda1 (sin.f64 lambda2)))) (fma.f64 1/6 (*.f64 (neg.f64 (sin.f64 lambda2)) (pow.f64 lambda1 3)) (cos.f64 lambda2)))","(+.f64 (*.f64 lambda1 (+.f64 (sin.f64 lambda2) (*.f64 lambda1 (*.f64 (cos.f64 lambda2) -1/2)))) (fma.f64 (*.f64 -1/6 (sin.f64 lambda2)) (pow.f64 lambda1 3) (cos.f64 lambda2)))","(+.f64 (*.f64 lambda1 (fma.f64 lambda1 (*.f64 (cos.f64 lambda2) -1/2) (sin.f64 lambda2))) (fma.f64 (*.f64 -1/6 (sin.f64 lambda2)) (pow.f64 lambda1 3) (cos.f64 lambda2)))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(cos.f64 (fma.f64 -1 lambda1 lambda2))","(cos.f64 (-.f64 lambda2 lambda1))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(cos.f64 (fma.f64 -1 lambda1 lambda2))","(cos.f64 (-.f64 lambda2 lambda1))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(cos.f64 (fma.f64 -1 lambda1 lambda2))","(cos.f64 (-.f64 lambda2 lambda1))","(cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(cos.f64 (fma.f64 -1 lambda1 lambda2))","(cos.f64 (-.f64 lambda2 lambda1))","(cos.f64 lambda1)","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (cos.f64 lambda1))","(fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1))","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (cos.f64 lambda1))) (cos.f64 lambda1)))","(fma.f64 lambda2 (sin.f64 lambda1) (fma.f64 -1/2 (*.f64 (cos.f64 lambda1) (*.f64 lambda2 lambda2)) (cos.f64 lambda1)))","(fma.f64 lambda2 (sin.f64 lambda1) (fma.f64 -1/2 (*.f64 lambda2 (*.f64 lambda2 (cos.f64 lambda1))) (cos.f64 lambda1)))","(fma.f64 lambda2 (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (+.f64 1 (*.f64 lambda2 (*.f64 lambda2 -1/2)))))","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (sin.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (cos.f64 lambda1))) (cos.f64 lambda1))))","(fma.f64 lambda2 (sin.f64 lambda1) (fma.f64 -1/6 (*.f64 (sin.f64 lambda1) (pow.f64 lambda2 3)) (fma.f64 -1/2 (*.f64 (cos.f64 lambda1) (*.f64 lambda2 lambda2)) (cos.f64 lambda1))))","(+.f64 (fma.f64 -1/2 (*.f64 lambda2 (*.f64 lambda2 (cos.f64 lambda1))) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda1) (+.f64 lambda2 (*.f64 -1/6 (pow.f64 lambda2 3)))))","(+.f64 (*.f64 (cos.f64 lambda1) (+.f64 1 (*.f64 lambda2 (*.f64 lambda2 -1/2)))) (*.f64 (sin.f64 lambda1) (+.f64 lambda2 (*.f64 -1/6 (pow.f64 lambda2 3)))))","(cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(cos.f64 (fma.f64 -1 lambda1 lambda2))","(cos.f64 (-.f64 lambda2 lambda1))","(cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(cos.f64 (fma.f64 -1 lambda1 lambda2))","(cos.f64 (-.f64 lambda2 lambda1))","(cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(cos.f64 (fma.f64 -1 lambda1 lambda2))","(cos.f64 (-.f64 lambda2 lambda1))","(cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(cos.f64 (fma.f64 -1 lambda1 lambda2))","(cos.f64 (-.f64 lambda2 lambda1))","(sin.f64 (neg.f64 lambda2))","(neg.f64 (sin.f64 lambda2))","(+.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1))","(+.f64 (neg.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda2) lambda1))","(-.f64 (*.f64 (cos.f64 lambda2) lambda1) (sin.f64 lambda2))","(fma.f64 (cos.f64 lambda2) lambda1 (neg.f64 (sin.f64 lambda2)))","(+.f64 (sin.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)))","(+.f64 (neg.f64 (sin.f64 lambda2)) (fma.f64 -1/2 (*.f64 (neg.f64 (sin.f64 lambda2)) (*.f64 lambda1 lambda1)) (*.f64 (cos.f64 lambda2) lambda1)))","(-.f64 (fma.f64 -1/2 (*.f64 (neg.f64 (sin.f64 lambda2)) (*.f64 lambda1 lambda1)) (*.f64 (cos.f64 lambda2) lambda1)) (sin.f64 lambda2))","(-.f64 (*.f64 lambda1 (+.f64 (cos.f64 lambda2) (*.f64 lambda1 (*.f64 1/2 (sin.f64 lambda2))))) (sin.f64 lambda2))","(-.f64 (*.f64 lambda1 (+.f64 (cos.f64 lambda2) (*.f64 lambda1 (*.f64 (sin.f64 lambda2) 1/2)))) (sin.f64 lambda2))","(+.f64 (*.f64 -1/6 (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 3))) (+.f64 (sin.f64 (neg.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2))) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1))))","(fma.f64 -1/6 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 3)) (+.f64 (neg.f64 (sin.f64 lambda2)) (fma.f64 -1/2 (*.f64 (neg.f64 (sin.f64 lambda2)) (*.f64 lambda1 lambda1)) (*.f64 (cos.f64 lambda2) lambda1))))","(fma.f64 -1/6 (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 3)) (-.f64 (fma.f64 -1/2 (*.f64 (neg.f64 (sin.f64 lambda2)) (*.f64 lambda1 lambda1)) (*.f64 (cos.f64 lambda2) lambda1)) (sin.f64 lambda2)))","(+.f64 (-.f64 (*.f64 lambda1 (*.f64 lambda1 (*.f64 1/2 (sin.f64 lambda2)))) (sin.f64 lambda2)) (*.f64 (cos.f64 lambda2) (+.f64 lambda1 (*.f64 (pow.f64 lambda1 3) -1/6))))","(+.f64 (*.f64 lambda1 (*.f64 lambda1 (*.f64 (sin.f64 lambda2) 1/2))) (-.f64 (*.f64 (cos.f64 lambda2) (+.f64 lambda1 (*.f64 (pow.f64 lambda1 3) -1/6))) (sin.f64 lambda2)))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(neg.f64 (sin.f64 (fma.f64 -1 lambda1 lambda2)))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(neg.f64 (sin.f64 (fma.f64 -1 lambda1 lambda2)))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(neg.f64 (sin.f64 (fma.f64 -1 lambda1 lambda2)))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2)))","(neg.f64 (sin.f64 (fma.f64 -1 lambda1 lambda2)))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 lambda1)","(+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (sin.f64 lambda1))","(fma.f64 -1 (*.f64 lambda2 (cos.f64 lambda1)) (sin.f64 lambda1))","(-.f64 (sin.f64 lambda1) (*.f64 lambda2 (cos.f64 lambda1)))","(+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (+.f64 (sin.f64 lambda1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (sin.f64 lambda1)))))","(+.f64 (fma.f64 -1 (*.f64 lambda2 (cos.f64 lambda1)) (sin.f64 lambda1)) (*.f64 -1/2 (*.f64 (sin.f64 lambda1) (*.f64 lambda2 lambda2))))","(-.f64 (fma.f64 -1/2 (*.f64 (sin.f64 lambda1) (*.f64 lambda2 lambda2)) (sin.f64 lambda1)) (*.f64 lambda2 (cos.f64 lambda1)))","(-.f64 (*.f64 (sin.f64 lambda1) (+.f64 1 (*.f64 lambda2 (*.f64 lambda2 -1/2)))) (*.f64 lambda2 (cos.f64 lambda1)))","(fma.f64 (neg.f64 lambda2) (cos.f64 lambda1) (fma.f64 (*.f64 lambda2 (*.f64 lambda2 -1/2)) (sin.f64 lambda1) (sin.f64 lambda1)))","(+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (cos.f64 lambda1))) (+.f64 (sin.f64 lambda1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (sin.f64 lambda1))))))","(fma.f64 -1 (*.f64 lambda2 (cos.f64 lambda1)) (fma.f64 1/6 (*.f64 (cos.f64 lambda1) (pow.f64 lambda2 3)) (+.f64 (sin.f64 lambda1) (*.f64 -1/2 (*.f64 (sin.f64 lambda1) (*.f64 lambda2 lambda2))))))","(+.f64 (fma.f64 -1/2 (*.f64 (sin.f64 lambda1) (*.f64 lambda2 lambda2)) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (+.f64 (neg.f64 lambda2) (*.f64 1/6 (pow.f64 lambda2 3)))))","(+.f64 (*.f64 (sin.f64 lambda1) (+.f64 1 (*.f64 lambda2 (*.f64 lambda2 -1/2)))) (*.f64 (cos.f64 lambda1) (-.f64 (*.f64 1/6 (pow.f64 lambda2 3)) lambda2)))","(fma.f64 (sin.f64 lambda1) (+.f64 1 (*.f64 lambda2 (*.f64 lambda2 -1/2))) (*.f64 (cos.f64 lambda1) (fma.f64 1/6 (pow.f64 lambda2 3) (neg.f64 lambda2))))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(neg.f64 (sin.f64 (fma.f64 -1 lambda1 lambda2)))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(neg.f64 (sin.f64 (fma.f64 -1 lambda1 lambda2)))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(neg.f64 (sin.f64 (fma.f64 -1 lambda1 lambda2)))","(sin.f64 (-.f64 lambda1 lambda2))","(sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1))","(neg.f64 (sin.f64 (fma.f64 -1 lambda1 lambda2)))","(sin.f64 (-.f64 lambda1 lambda2))","(+.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))","(+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1))","(+.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2))) (cos.f64 phi1)))","(+.f64 (cos.f64 (-.f64 lambda1 lambda2)) (fma.f64 -1/2 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 phi2 phi2)) (cos.f64 phi1)))","(+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (fma.f64 -1/2 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) (*.f64 phi2 phi2)) (cos.f64 phi1)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 -1/2 (*.f64 phi2 phi2)) 1) (cos.f64 (-.f64 lambda2 lambda1))))","(+.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2))) (+.f64 (*.f64 1/24 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4))) (cos.f64 phi1))))","(+.f64 (cos.f64 (-.f64 lambda1 lambda2)) (fma.f64 -1/2 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 phi2 phi2)) (fma.f64 1/24 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4)) (cos.f64 phi1))))","(+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (fma.f64 -1/2 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) (*.f64 phi2 phi2)) (fma.f64 1/24 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) (pow.f64 phi2 4)) (cos.f64 phi1))))","(+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) (+.f64 (*.f64 -1/2 (*.f64 phi2 phi2)) (*.f64 1/24 (pow.f64 phi2 4))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) (+.f64 (+.f64 (*.f64 -1/2 (*.f64 phi2 phi2)) 1) (*.f64 1/24 (pow.f64 phi2 4)))))","(+.f64 (cos.f64 (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2))) (+.f64 (*.f64 1/24 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4))) (+.f64 (*.f64 -1/720 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 6))) (cos.f64 phi1)))))","(+.f64 (cos.f64 (-.f64 lambda1 lambda2)) (fma.f64 -1/2 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (*.f64 phi2 phi2)) (fma.f64 1/24 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4)) (fma.f64 -1/720 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 6)) (cos.f64 phi1)))))","(+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (fma.f64 -1/2 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) (*.f64 phi2 phi2)) (fma.f64 1/24 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) (pow.f64 phi2 4)) (fma.f64 -1/720 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) (pow.f64 phi2 6)) (cos.f64 phi1)))))","(+.f64 (+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 -1/2 (*.f64 phi2 phi2)) 1) (cos.f64 (-.f64 lambda2 lambda1)))) (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) (+.f64 (*.f64 1/24 (pow.f64 phi2 4)) (*.f64 -1/720 (pow.f64 phi2 6)))))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) (+.f64 (+.f64 (*.f64 -1/2 (*.f64 phi2 phi2)) (*.f64 1/24 (pow.f64 phi2 4))) (*.f64 -1/720 (pow.f64 phi2 6)))) (+.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi1)))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 lambda2) (cos.f64 phi2)))","(fma.f64 (cos.f64 lambda2) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) lambda1))) (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda2)))))","(+.f64 (cos.f64 phi1) (fma.f64 -1 (*.f64 (neg.f64 (sin.f64 lambda2)) (*.f64 lambda1 (cos.f64 phi2))) (*.f64 (cos.f64 lambda2) (cos.f64 phi2))))","(+.f64 (cos.f64 phi1) (-.f64 (*.f64 (cos.f64 lambda2) (cos.f64 phi2)) (*.f64 lambda1 (neg.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda2))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (fma.f64 (sin.f64 lambda2) lambda1 (cos.f64 lambda2))))","(+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2)))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) lambda1))) (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda2))))))","(fma.f64 -1/2 (*.f64 (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)) (cos.f64 phi2)) (+.f64 (cos.f64 phi1) (fma.f64 -1 (*.f64 (neg.f64 (sin.f64 lambda2)) (*.f64 lambda1 (cos.f64 phi2))) (*.f64 (cos.f64 lambda2) (cos.f64 phi2)))))","(+.f64 (-.f64 (*.f64 (cos.f64 lambda2) (cos.f64 phi2)) (*.f64 lambda1 (neg.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda2))))) (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (*.f64 lambda1 (*.f64 lambda1 (cos.f64 phi2)))) (cos.f64 phi1)))","(+.f64 (*.f64 (cos.f64 phi2) (fma.f64 (sin.f64 lambda2) lambda1 (cos.f64 lambda2))) (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (*.f64 lambda1 (*.f64 lambda1 (cos.f64 phi2)))) (cos.f64 phi1)))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (+.f64 (cos.f64 lambda2) (*.f64 lambda1 (fma.f64 lambda1 (*.f64 (cos.f64 lambda2) -1/2) (sin.f64 lambda2))))))","(+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2)))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) lambda1))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda2))) (*.f64 1/6 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 3))))))))","(fma.f64 -1/2 (*.f64 (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)) (cos.f64 phi2)) (+.f64 (cos.f64 phi1) (fma.f64 -1 (*.f64 (neg.f64 (sin.f64 lambda2)) (*.f64 lambda1 (cos.f64 phi2))) (fma.f64 (cos.f64 phi2) (cos.f64 lambda2) (*.f64 1/6 (*.f64 (neg.f64 (sin.f64 lambda2)) (*.f64 (pow.f64 lambda1 3) (cos.f64 phi2))))))))","(+.f64 (-.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 phi2) (*.f64 (neg.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda2))) (*.f64 (pow.f64 lambda1 3) 1/6))) (*.f64 lambda1 (neg.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda2))))) (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (*.f64 lambda1 (*.f64 lambda1 (cos.f64 phi2)))) (cos.f64 phi1)))","(+.f64 (cos.f64 phi1) (+.f64 (*.f64 (neg.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda2))) (+.f64 (neg.f64 lambda1) (*.f64 1/6 (pow.f64 lambda1 3)))) (*.f64 (cos.f64 phi2) (*.f64 (+.f64 (*.f64 -1/2 (*.f64 lambda1 lambda1)) 1) (cos.f64 lambda2)))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 lambda1 (fma.f64 lambda1 (*.f64 (cos.f64 lambda2) -1/2) (sin.f64 lambda2))) (fma.f64 (*.f64 -1/6 (sin.f64 lambda2)) (pow.f64 lambda1 3) (cos.f64 lambda2)))))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (cos.f64 lambda1) (cos.f64 phi1))","(fma.f64 (cos.f64 lambda1) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (cos.f64 phi1)))","(fma.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)) (fma.f64 (cos.f64 phi2) (cos.f64 lambda1) (cos.f64 phi1)))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1)) (cos.f64 phi2)))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (+.f64 (cos.f64 phi1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))))))","(fma.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (fma.f64 (cos.f64 phi2) (cos.f64 lambda1) (cos.f64 phi1)) (*.f64 -1/2 (*.f64 (*.f64 lambda2 lambda2) (*.f64 (cos.f64 lambda1) (cos.f64 phi2))))))","(+.f64 (fma.f64 -1/2 (*.f64 lambda2 (*.f64 lambda2 (*.f64 (cos.f64 lambda1) (cos.f64 phi2)))) (cos.f64 phi1)) (*.f64 (cos.f64 phi2) (fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1))))","(+.f64 (fma.f64 (cos.f64 lambda1) (cos.f64 phi2) (cos.f64 phi1)) (*.f64 (cos.f64 phi2) (fma.f64 lambda2 (sin.f64 lambda1) (*.f64 -1/2 (*.f64 lambda2 (*.f64 lambda2 (cos.f64 lambda1)))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (fma.f64 lambda2 (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (+.f64 1 (*.f64 lambda2 (*.f64 lambda2 -1/2)))))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (+.f64 (cos.f64 phi1) (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (cos.f64 lambda1))))))))","(fma.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (sin.f64 lambda1) (cos.f64 phi2))) (fma.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (fma.f64 (cos.f64 phi2) (cos.f64 lambda1) (cos.f64 phi1)) (*.f64 -1/2 (*.f64 (*.f64 lambda2 lambda2) (*.f64 (cos.f64 lambda1) (cos.f64 phi2)))))))","(fma.f64 -1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (sin.f64 lambda1) (cos.f64 phi2))) (+.f64 (fma.f64 -1/2 (*.f64 lambda2 (*.f64 lambda2 (*.f64 (cos.f64 lambda1) (cos.f64 phi2)))) (cos.f64 phi1)) (*.f64 (cos.f64 phi2) (fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1)))))","(+.f64 (cos.f64 phi1) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (+.f64 1 (*.f64 lambda2 (*.f64 lambda2 -1/2))))) (*.f64 (*.f64 (sin.f64 lambda1) (cos.f64 phi2)) (+.f64 lambda2 (*.f64 -1/6 (pow.f64 lambda2 3))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (cos.f64 lambda1) (+.f64 1 (*.f64 lambda2 (*.f64 lambda2 -1/2)))) (*.f64 (sin.f64 lambda1) (+.f64 lambda2 (*.f64 -1/6 (pow.f64 lambda2 3)))))))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (+.f64 (*.f64 -1 lambda2) lambda1)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 1 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 1)","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) 1)","(+.f64 1 (+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (*.f64 -1/2 (pow.f64 phi1 2))))","(+.f64 1 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (*.f64 -1/2 (*.f64 phi1 phi1))))","(+.f64 1 (fma.f64 -1/2 (*.f64 phi1 phi1) (*.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2))))","(+.f64 1 (+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (*.f64 -1/2 (pow.f64 phi1 2)))))","(+.f64 1 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (fma.f64 1/24 (pow.f64 phi1 4) (*.f64 -1/2 (*.f64 phi1 phi1)))))","(+.f64 1 (fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (fma.f64 1/24 (pow.f64 phi1 4) (*.f64 phi1 (*.f64 phi1 -1/2)))))","(+.f64 1 (fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (fma.f64 -1/2 (*.f64 phi1 phi1) (*.f64 1/24 (pow.f64 phi1 4)))))","(+.f64 (*.f64 -1/720 (pow.f64 phi1 6)) (+.f64 1 (+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (*.f64 -1/2 (pow.f64 phi1 2))))))","(fma.f64 -1/720 (pow.f64 phi1 6) (+.f64 1 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (fma.f64 1/24 (pow.f64 phi1 4) (*.f64 -1/2 (*.f64 phi1 phi1))))))","(+.f64 (fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (fma.f64 1/24 (pow.f64 phi1 4) (*.f64 phi1 (*.f64 phi1 -1/2)))) (fma.f64 -1/720 (pow.f64 phi1 6) 1))","(+.f64 (fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (fma.f64 -1/2 (*.f64 phi1 phi1) (*.f64 1/24 (pow.f64 phi1 4)))) (fma.f64 -1/720 (pow.f64 phi1 6) 1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 (-.f64 lambda2 lambda1)) (cos.f64 phi2) (cos.f64 phi1))","(sin.f64 (-.f64 lambda1 lambda2))","(neg.f64 (sin.f64 (fma.f64 -1 lambda1 lambda2)))","(+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2))))","(+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (*.f64 phi2 phi2) (sin.f64 (-.f64 lambda1 lambda2)))))","(fma.f64 -1/2 (*.f64 phi2 (*.f64 phi2 (sin.f64 (-.f64 lambda1 lambda2)))) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (+.f64 (*.f64 -1/2 (*.f64 phi2 phi2)) 1) (sin.f64 (-.f64 lambda1 lambda2)))","(+.f64 (*.f64 1/24 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4))) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2)))))","(fma.f64 1/24 (*.f64 (pow.f64 phi2 4) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (*.f64 phi2 phi2) (sin.f64 (-.f64 lambda1 lambda2))))))","(fma.f64 1/24 (*.f64 (pow.f64 phi2 4) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 -1/2 (*.f64 phi2 (*.f64 phi2 (sin.f64 (-.f64 lambda1 lambda2)))) (sin.f64 (-.f64 lambda1 lambda2))))","(+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 phi2 phi2)) (*.f64 1/24 (pow.f64 phi2 4)))))","(*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (+.f64 (+.f64 (*.f64 -1/2 (*.f64 phi2 phi2)) 1) (*.f64 1/24 (pow.f64 phi2 4))))","(+.f64 (*.f64 -1/720 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 6))) (+.f64 (*.f64 1/24 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 4))) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (pow.f64 phi2 2))))))","(fma.f64 -1/720 (*.f64 (pow.f64 phi2 6) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 1/24 (*.f64 (pow.f64 phi2 4) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 -1/2 (*.f64 (*.f64 phi2 phi2) (sin.f64 (-.f64 lambda1 lambda2)))))))","(fma.f64 -1/720 (*.f64 (pow.f64 phi2 6) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 1/24 (*.f64 (pow.f64 phi2 4) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 -1/2 (*.f64 phi2 (*.f64 phi2 (sin.f64 (-.f64 lambda1 lambda2)))) (sin.f64 (-.f64 lambda1 lambda2)))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 phi2 phi2)) 1) (sin.f64 (-.f64 lambda1 lambda2))) (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (+.f64 (*.f64 1/24 (pow.f64 phi2 4)) (*.f64 -1/720 (pow.f64 phi2 6)))))","(+.f64 (sin.f64 (-.f64 lambda1 lambda2)) (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (+.f64 (*.f64 -1/720 (pow.f64 phi2 6)) (+.f64 (*.f64 -1/2 (*.f64 phi2 phi2)) (*.f64 1/24 (pow.f64 phi2 4))))))","(*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2))","(*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 phi2))","(neg.f64 (*.f64 (cos.f64 phi2) (sin.f64 lambda2)))","(+.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)))","(fma.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 phi2) (*.f64 (*.f64 (cos.f64 lambda2) lambda1) (cos.f64 phi2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) lambda1) (sin.f64 lambda2)))","(*.f64 (-.f64 (*.f64 (cos.f64 lambda2) lambda1) (sin.f64 lambda2)) (cos.f64 phi2))","(*.f64 (fma.f64 (cos.f64 lambda2) lambda1 (neg.f64 (sin.f64 lambda2))) (cos.f64 phi2))","(+.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)) (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 2))))))","(fma.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 phi2) (fma.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) lambda1) (*.f64 -1/2 (*.f64 (neg.f64 (sin.f64 lambda2)) (*.f64 (*.f64 lambda1 lambda1) (cos.f64 phi2))))))","(+.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) lambda1) (sin.f64 lambda2))) (*.f64 (neg.f64 (sin.f64 lambda2)) (*.f64 (*.f64 lambda1 (*.f64 lambda1 (cos.f64 phi2))) -1/2)))","(-.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda1 (+.f64 (cos.f64 lambda2) (*.f64 lambda1 (*.f64 1/2 (sin.f64 lambda2)))))) (*.f64 (cos.f64 phi2) (sin.f64 lambda2)))","(*.f64 (cos.f64 phi2) (-.f64 (*.f64 lambda1 (+.f64 (cos.f64 lambda2) (*.f64 lambda1 (*.f64 (sin.f64 lambda2) 1/2)))) (sin.f64 lambda2)))","(+.f64 (*.f64 (sin.f64 (neg.f64 lambda2)) (cos.f64 phi2)) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 2)))) (*.f64 -1/6 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 3)))))))","(fma.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 phi2) (fma.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) lambda1) (fma.f64 -1/2 (*.f64 (neg.f64 (sin.f64 lambda2)) (*.f64 (*.f64 lambda1 lambda1) (cos.f64 phi2))) (*.f64 (*.f64 -1/6 (cos.f64 phi2)) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 3))))))","(+.f64 (*.f64 (cos.f64 phi2) (-.f64 (*.f64 (cos.f64 lambda2) lambda1) (sin.f64 lambda2))) (fma.f64 -1/2 (*.f64 (neg.f64 (sin.f64 lambda2)) (*.f64 lambda1 (*.f64 lambda1 (cos.f64 phi2)))) (*.f64 (*.f64 (*.f64 -1/6 (cos.f64 phi2)) (cos.f64 lambda2)) (pow.f64 lambda1 3))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda2) (+.f64 lambda1 (*.f64 (pow.f64 lambda1 3) -1/6)))) (*.f64 (cos.f64 phi2) (-.f64 (*.f64 lambda1 (*.f64 lambda1 (*.f64 1/2 (sin.f64 lambda2)))) (sin.f64 lambda2))))","(*.f64 (cos.f64 phi2) (+.f64 (*.f64 lambda1 (*.f64 lambda1 (*.f64 (sin.f64 lambda2) 1/2))) (-.f64 (*.f64 (cos.f64 lambda2) (+.f64 lambda1 (*.f64 (pow.f64 lambda1 3) -1/6))) (sin.f64 lambda2))))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (neg.f64 (sin.f64 (fma.f64 -1 lambda1 lambda2))) (cos.f64 phi2))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (neg.f64 (sin.f64 (fma.f64 -1 lambda1 lambda2))) (cos.f64 phi2))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (neg.f64 (sin.f64 (fma.f64 -1 lambda1 lambda2))) (cos.f64 phi2))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (neg.f64 (+.f64 (*.f64 -1 lambda1) lambda2))))","(*.f64 (neg.f64 (sin.f64 (fma.f64 -1 lambda1 lambda2))) (cos.f64 phi2))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 lambda1))","(*.f64 (sin.f64 lambda1) (cos.f64 phi2))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))","(fma.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 lambda1) (cos.f64 phi2))) (*.f64 (sin.f64 lambda1) (cos.f64 phi2)))","(-.f64 (*.f64 (sin.f64 lambda1) (cos.f64 phi2)) (*.f64 lambda2 (*.f64 (cos.f64 lambda1) (cos.f64 phi2))))","(*.f64 (cos.f64 phi2) (-.f64 (sin.f64 lambda1) (*.f64 lambda2 (cos.f64 lambda1))))","(+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))","(fma.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 lambda1) (cos.f64 phi2))) (fma.f64 -1/2 (*.f64 (*.f64 lambda2 lambda2) (*.f64 (sin.f64 lambda1) (cos.f64 phi2))) (*.f64 (sin.f64 lambda1) (cos.f64 phi2))))","(-.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 lambda2 lambda2)) 1) (*.f64 (sin.f64 lambda1) (cos.f64 phi2))) (*.f64 lambda2 (*.f64 (cos.f64 lambda1) (cos.f64 phi2))))","(fma.f64 (neg.f64 lambda2) (*.f64 (cos.f64 lambda1) (cos.f64 phi2)) (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (+.f64 1 (*.f64 lambda2 (*.f64 lambda2 -1/2))))))","(*.f64 (cos.f64 phi2) (fma.f64 (neg.f64 lambda2) (cos.f64 lambda1) (fma.f64 (*.f64 lambda2 (*.f64 lambda2 -1/2)) (sin.f64 lambda1) (sin.f64 lambda1))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))))","(fma.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 lambda1) (cos.f64 phi2))) (fma.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 lambda1) (cos.f64 phi2))) (fma.f64 -1/2 (*.f64 (*.f64 lambda2 lambda2) (*.f64 (sin.f64 lambda1) (cos.f64 phi2))) (*.f64 (sin.f64 lambda1) (cos.f64 phi2)))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 lambda2 lambda2)) 1) (*.f64 (sin.f64 lambda1) (cos.f64 phi2))) (*.f64 (*.f64 (cos.f64 lambda1) (cos.f64 phi2)) (+.f64 (*.f64 1/6 (pow.f64 lambda2 3)) (neg.f64 lambda2))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda1) (+.f64 1 (*.f64 lambda2 (*.f64 lambda2 -1/2))))) (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 lambda1) (-.f64 (*.f64 1/6 (pow.f64 lambda2 3)) lambda2))))","(*.f64 (cos.f64 phi2) (fma.f64 (sin.f64 lambda1) (+.f64 1 (*.f64 lambda2 (*.f64 lambda2 -1/2))) (*.f64 (cos.f64 lambda1) (fma.f64 1/6 (pow.f64 lambda2 3) (neg.f64 lambda2)))))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (neg.f64 (sin.f64 (fma.f64 -1 lambda1 lambda2))) (cos.f64 phi2))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (neg.f64 (sin.f64 (fma.f64 -1 lambda1 lambda2))) (cos.f64 phi2))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (neg.f64 (sin.f64 (fma.f64 -1 lambda1 lambda2))) (cos.f64 phi2))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))","(*.f64 (cos.f64 phi2) (sin.f64 (+.f64 (*.f64 -1 lambda2) lambda1)))","(*.f64 (neg.f64 (sin.f64 (fma.f64 -1 lambda1 lambda2))) (cos.f64 phi2))","(*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2)))"]],"stop":[["node limit",1]],"time":71.98486328125,"type":"simplify"},{"compiler":[[7852,1928]],"time":45.293212890625,"type":"eval"},{"alts":[["(+.f64 lambda1 (atan2.f64 (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","fresh",21.287267577385347],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (/.f64 (-.f64 (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) (pow.f64 (cos.f64 phi1) 2)) (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (neg.f64 (cos.f64 phi1))))))","fresh",4.726012577779497],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (-.f64 (exp.f64 (log1p.f64 (cos.f64 (-.f64 lambda1 lambda2)))) 1) (cos.f64 phi1))))","fresh",1.3508289273889786],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (fma.f64 lambda2 (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (+.f64 1 (*.f64 lambda2 (*.f64 lambda2 -1/2))))) (cos.f64 phi1))))","fresh",17.65595684674916],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (/.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 3) (pow.f64 (cos.f64 phi1) 3)) (fma.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (pow.f64 (cos.f64 phi1) 2) (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1)))))))","fresh",1.4066956545477396],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (fma.f64 (sin.f64 lambda2) lambda1 (cos.f64 lambda2)) (cos.f64 phi1))))","fresh",1.6766192263871678],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (pow.f64 (sqrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 2)))","fresh",14.031584128452725],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (+.f64 (fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))))))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","fresh",1.4127023718235292],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","next",1.3232956940738168],["(+.f64 lambda1 (atan2.f64 (log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","fresh",13.916009872081434],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (-.f64 lambda1 lambda2))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (-.f64 lambda1 lambda2)))))) (cos.f64 phi1))))","fresh",1.3904664466270342],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) 3)) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","fresh",1.5087179997704414],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (log.f64 (*.f64 (+.f64 1 (expm1.f64 (cos.f64 phi1))) (exp.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)))))))","fresh",1.534389014509236],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (+.f64 (cos.f64 lambda2) (*.f64 lambda1 (fma.f64 lambda1 (*.f64 (cos.f64 lambda2) -1/2) (sin.f64 lambda2)))) (cos.f64 phi1))))","fresh",1.6348234563220592],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 3)))","fresh",1.4803467737055915]],"compiler":[[55,31],[45,20],[27,17],[33,21],[59,24],[25,15],[26,16],[87,25],[45,22],[27,17],[34,17],[26,16],[29,19],[32,19],[26,16],[55,31],[45,20],[27,17],[33,21],[59,24],[25,15],[26,16],[87,25],[45,22],[27,17],[34,17],[26,16],[29,19],[32,19],[26,16]],"count":[[262,15]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[260,15],"picked":[1,0]}],"min-error":[1.0937053677617876],"time":109.966796875,"type":"prune"},{"compiler":[[204,22]],"locations":[["(fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))",0.2573296905627903,true],["(fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))",0.43739264220461926,false],["(*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))",0.502285009768442,true],["(cos.f64 (-.f64 lambda1 lambda2))",2.9312165798244525,false]],"time":28.672119140625,"type":"localize"},{"count":[[2,42]],"series":[["(fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))","lambda1","-inf",1.60986328125],["(fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))","lambda1","inf",1.843017578125],["(fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))","lambda1","0",0.58984375],["(fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))","lambda2","-inf",1.638916015625],["(fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))","lambda2","inf",1.88916015625],["(fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))","lambda2","0",1.220947265625],["(*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))","lambda1","-inf",1.340087890625],["(*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))","lambda1","inf",1.861083984375],["(*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))","lambda1","0",2.072021484375],["(*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))","lambda2","-inf",1.55810546875],["(*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))","lambda2","inf",2.055908203125],["(*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))","lambda2","0",1.81591796875]],"time":19.738037109375,"type":"series"},{"count":[[2,277]],"egraph":[[2,3136,19,0.025188874],[1,259,29,0.004360833],[0,13,33,0.000299]],"inputs":[["(*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))","(fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) 4) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 3) 2/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) 4/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6) 4)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (+.f64 lambda1 lambda2)) (fma.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (+.f64 lambda1 lambda2)) (fma.f64 (cos.f64 lambda1) (sin.f64 lambda2) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (+.f64 lambda1 lambda2)) (fma.f64 -1 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (+.f64 lambda1 lambda2)) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) 1 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (+.f64 lambda1 lambda2)) (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) 2)) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (+.f64 lambda1 lambda2)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) 2) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (sin.f64 (+.f64 lambda1 lambda2)) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (sqrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sin.f64 (+.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (cos.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (cos.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1 (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (cos.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (cos.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (cos.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (cos.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) 4) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (cos.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2) (*.f64 (cbrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (cos.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2) (*.f64 (cbrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (cos.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (sin.f64 lambda1)) (*.f64 (sqrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (cos.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (cos.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 lambda2)) (*.f64 (sqrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (cos.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2)) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (cos.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sqrt.f64 (sin.f64 lambda1))) (sqrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (cos.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2)) (cbrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (cos.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (sqrt.f64 (cos.f64 lambda2))) (sqrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (cos.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (cos.f64 lambda2))) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (cos.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (cos.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6) (neg.f64 (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))) (fma.f64 (neg.f64 (neg.f64 (sin.f64 lambda2))) (cos.f64 lambda1) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) 4) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2) (*.f64 (cbrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2) (*.f64 (cbrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (sin.f64 lambda1)) (*.f64 (sqrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 lambda2)) (*.f64 (sqrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2)) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sqrt.f64 (sin.f64 lambda1))) (sqrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2)) (cbrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (sqrt.f64 (cos.f64 lambda2))) (sqrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (cos.f64 lambda2))) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) 4) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2) (*.f64 (cbrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2) (*.f64 (cbrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (sin.f64 lambda1)) (*.f64 (sqrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 lambda2)) (*.f64 (sqrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2)) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sqrt.f64 (sin.f64 lambda1))) (sqrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2)) (cbrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (sqrt.f64 (cos.f64 lambda2))) (sqrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (cos.f64 lambda2))) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) 4) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2) (*.f64 (cbrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2) (*.f64 (cbrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (sin.f64 lambda1)) (*.f64 (sqrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 lambda2)) (*.f64 (sqrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2)) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sqrt.f64 (sin.f64 lambda1))) (sqrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2)) (cbrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (sqrt.f64 (cos.f64 lambda2))) (sqrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (cos.f64 lambda2))) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) 4) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2) (*.f64 (cbrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2) (*.f64 (cbrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (sin.f64 lambda1)) (*.f64 (sqrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 lambda2)) (*.f64 (sqrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2)) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sqrt.f64 (sin.f64 lambda1))) (sqrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2)) (cbrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (sqrt.f64 (cos.f64 lambda2))) (sqrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (cos.f64 lambda2))) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1))) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1))) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1 (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1))) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1))) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1))) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1))) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) 4) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1))) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2) (*.f64 (cbrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1))) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2) (*.f64 (cbrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1))) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (sin.f64 lambda1)) (*.f64 (sqrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1))) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1))) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 lambda2)) (*.f64 (sqrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1))) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2)) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1))) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sqrt.f64 (sin.f64 lambda1))) (sqrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1))) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2)) (cbrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1))) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (sqrt.f64 (cos.f64 lambda2))) (sqrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1))) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (cos.f64 lambda2))) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1))) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1))) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6) (neg.f64 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1))) (fma.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1 (*.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) 4) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2) (*.f64 (cbrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2) (*.f64 (cbrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (sin.f64 lambda1)) (*.f64 (sqrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 lambda2)) (*.f64 (sqrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2)) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sqrt.f64 (sin.f64 lambda1))) (sqrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2)) (cbrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (sqrt.f64 (cos.f64 lambda2))) (sqrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (cos.f64 lambda2))) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) 4) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2) (*.f64 (cbrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2) (*.f64 (cbrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (sin.f64 lambda1)) (*.f64 (sqrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 lambda2)) (*.f64 (sqrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2)) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sqrt.f64 (sin.f64 lambda1))) (sqrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2)) (cbrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (sqrt.f64 (cos.f64 lambda2))) (sqrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (cos.f64 lambda2))) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6) (neg.f64 (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2)))))) (fma.f64 (neg.f64 (sqrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) 4) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2) (*.f64 (cbrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2) (*.f64 (cbrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (sin.f64 lambda1)) (*.f64 (sqrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 lambda2)) (*.f64 (sqrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2)) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sqrt.f64 (sin.f64 lambda1))) (sqrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2)) (cbrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (sqrt.f64 (cos.f64 lambda2))) (sqrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (cos.f64 lambda2))) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) 4) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2) (*.f64 (cbrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2) (*.f64 (cbrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (sin.f64 lambda1)) (*.f64 (sqrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 lambda2)) (*.f64 (sqrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2)) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sqrt.f64 (sin.f64 lambda1))) (sqrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2)) (cbrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (sqrt.f64 (cos.f64 lambda2))) (sqrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (cos.f64 lambda2))) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (neg.f64 (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1)))) (fma.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1) (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1)))) (fma.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1) (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1 (neg.f64 (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1)))) (fma.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1) (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (neg.f64 (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1)))) (fma.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1) (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1)))) (fma.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1) (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (neg.f64 (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1)))) (fma.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1) (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) 4) (*.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1)))) (fma.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1) (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2) (*.f64 (cbrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1)))) (fma.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1) (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2) (*.f64 (cbrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1)))) (fma.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1) (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (sin.f64 lambda1)) (*.f64 (sqrt.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (neg.f64 (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1)))) (fma.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1) (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (sqrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (neg.f64 (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1)))) (fma.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1) (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 lambda2)) (*.f64 (sqrt.f64 (cos.f64 lambda2)) (sin.f64 lambda1)) (neg.f64 (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1)))) (fma.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1) (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2)) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1)))) (fma.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1) (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 lambda2) (sqrt.f64 (sin.f64 lambda1))) (sqrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1)))) (fma.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1) (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2)) (cbrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1)))) (fma.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1) (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sin.f64 lambda1) (sqrt.f64 (cos.f64 lambda2))) (sqrt.f64 (cos.f64 lambda2)) (neg.f64 (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1)))) (fma.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1) (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (cbrt.f64 (cos.f64 lambda2))) (cbrt.f64 (sin.f64 lambda1)) (neg.f64 (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1)))) (fma.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1) (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (neg.f64 (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1)))) (fma.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1) (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6)) (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 1/6) (neg.f64 (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1)))) (fma.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1) (*.f64 (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 (+.f64 lambda1 lambda2)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (+.f64 lambda1 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (+.f64 lambda1 lambda2))))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (+.f64 lambda1 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sin.f64 (+.f64 lambda1 lambda2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (+.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (+.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (+.f64 lambda1 lambda2))) (pow.f64 (cbrt.f64 (sin.f64 (+.f64 lambda1 lambda2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 (+.f64 lambda1 lambda2))) 2) (cbrt.f64 (sin.f64 (+.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 (+.f64 lambda1 lambda2))) (sqrt.f64 (sin.f64 (+.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 3) (pow.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) 3)) (+.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2) (-.f64 (pow.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) 2) (pow.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)) 2)) (sin.f64 (+.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (+.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (+.f64 lambda1 lambda2)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (+.f64 lambda1 lambda2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (+.f64 lambda1 lambda2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 (+.f64 lambda1 lambda2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 (+.f64 lambda1 lambda2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 (+.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sin.f64 (+.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (pow.f64 (exp.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (+.f64 1 (expm1.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (+.f64 1 (expm1.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (pow.f64 (exp.f64 (sin.f64 lambda2)) (cos.f64 lambda1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (cos.f64 lambda2)) (+.f64 1 (expm1.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (+.f64 1 (expm1.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (pow.f64 (exp.f64 (sin.f64 lambda1)) (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (+.f64 1 (expm1.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (+.f64 1 (expm1.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (+.f64 lambda1 lambda2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (+.f64 lambda1 lambda2))))) (#(struct:change #<rule egg-rr> (2) ((x sin.f64 (-.f64 lambda1 lambda2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sin.f64 (+.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 (+.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 (+.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sin.f64 (+.f64 lambda1 lambda2))) 1))))))"]],"rules":[["egg-rr",254],["egg-rr",23]],"stop":[["node limit",1]],"time":84.71484375,"type":"rewrite"},{"count":[[319,301]],"egraph":[[4,7723,772,0.034501917],[3,3380,772,0.018436167],[2,748,773,0.0066182509999999995],[1,243,810,0.0018905839999999998],[0,82,899,0.000514959]],"inputs":[["(pow.f64 (pow.f64 (sin.f64 lambda1) 2) 1/3)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 lambda1) 2)) 1/3) (pow.f64 lambda2 2))) (pow.f64 (pow.f64 (sin.f64 lambda1) 2) 1/3))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 lambda1) 2)) 1/3) (pow.f64 lambda2 2))) (+.f64 (pow.f64 (pow.f64 (sin.f64 lambda1) 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (sin.f64 lambda1) 4)) 1/3) (*.f64 (pow.f64 lambda2 6) (-.f64 (*.f64 -2/45 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/27 (pow.f64 (sin.f64 lambda1) 2))))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 lambda1) 2)) 1/3) (pow.f64 lambda2 2))) (+.f64 (pow.f64 (pow.f64 (sin.f64 lambda1) 2) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (sin.f64 lambda1) 4)) 1/3) (*.f64 (pow.f64 lambda2 6) (-.f64 (*.f64 -2/45 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/27 (pow.f64 (sin.f64 lambda1) 2)))))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 1/315 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -2/3 (-.f64 (*.f64 -2/45 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/27 (pow.f64 (sin.f64 lambda1) 2))))) (pow.f64 lambda2 8)) (pow.f64 (/.f64 1 (pow.f64 (sin.f64 lambda1) 4)) 1/3))))))","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(*.f64 (pow.f64 1 1/3) (sin.f64 lambda1))","(+.f64 (*.f64 (pow.f64 1 1/3) (sin.f64 lambda1)) (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (sin.f64 lambda1))) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (sin.f64 lambda1)))) (pow.f64 lambda2 2)) (+.f64 (*.f64 (pow.f64 1 1/3) (sin.f64 lambda1)) (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1)))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (sin.f64 lambda1))) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (sin.f64 lambda1)))) (pow.f64 lambda2 2)) (+.f64 (*.f64 (pow.f64 1 1/3) (sin.f64 lambda1)) (+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (cos.f64 lambda1))))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(*.f64 -1 (sin.f64 lambda2))","(+.f64 (*.f64 -1 (sin.f64 lambda2)) (*.f64 1/2 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 2))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (pow.f64 (sin.f64 lambda1) 2) 1/3)","(cbrt.f64 (pow.f64 (sin.f64 lambda1) 2))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 lambda1) 2)) 1/3) (pow.f64 lambda2 2))) (pow.f64 (pow.f64 (sin.f64 lambda1) 2) 1/3))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 lambda2 lambda2)) (cbrt.f64 (pow.f64 (sin.f64 lambda1) 2)))","(*.f64 (+.f64 (*.f64 -1/3 (*.f64 lambda2 lambda2)) 1) (cbrt.f64 (pow.f64 (sin.f64 lambda1) 2)))","(*.f64 (+.f64 1 (*.f64 -1/3 (*.f64 lambda2 lambda2))) (cbrt.f64 (pow.f64 (sin.f64 lambda1) 2)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 lambda1) 2)) 1/3) (pow.f64 lambda2 2))) (+.f64 (pow.f64 (pow.f64 (sin.f64 lambda1) 2) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (sin.f64 lambda1) 4)) 1/3) (*.f64 (pow.f64 lambda2 6) (-.f64 (*.f64 -2/45 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/27 (pow.f64 (sin.f64 lambda1) 2))))))))","(+.f64 (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 lambda2 lambda2)) (cbrt.f64 (pow.f64 (sin.f64 lambda1) 2))) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (sin.f64 lambda1) 4))) (*.f64 (pow.f64 lambda2 6) (*.f64 (pow.f64 (sin.f64 lambda1) 2) -1/135)))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 lambda2 lambda2)) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (sin.f64 lambda1) 4))) (*.f64 (pow.f64 lambda2 6) (*.f64 (pow.f64 (sin.f64 lambda1) 2) -1/135))) (cbrt.f64 (pow.f64 (sin.f64 lambda1) 2))))","(fma.f64 (cbrt.f64 (/.f64 1 (pow.f64 (sin.f64 lambda1) 4))) (*.f64 (pow.f64 lambda2 6) (*.f64 (pow.f64 (sin.f64 lambda1) 2) -1/405)) (*.f64 (+.f64 (*.f64 -1/3 (*.f64 lambda2 lambda2)) 1) (cbrt.f64 (pow.f64 (sin.f64 lambda1) 2))))","(fma.f64 (cbrt.f64 (/.f64 1 (pow.f64 (sin.f64 lambda1) 4))) (*.f64 (pow.f64 lambda2 6) (*.f64 (pow.f64 (sin.f64 lambda1) 2) -1/405)) (*.f64 (+.f64 1 (*.f64 -1/3 (*.f64 lambda2 lambda2))) (cbrt.f64 (pow.f64 (sin.f64 lambda1) 2))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (sin.f64 lambda1) 2)) 1/3) (pow.f64 lambda2 2))) (+.f64 (pow.f64 (pow.f64 (sin.f64 lambda1) 2) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (sin.f64 lambda1) 4)) 1/3) (*.f64 (pow.f64 lambda2 6) (-.f64 (*.f64 -2/45 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/27 (pow.f64 (sin.f64 lambda1) 2)))))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 1/315 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -2/3 (-.f64 (*.f64 -2/45 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/27 (pow.f64 (sin.f64 lambda1) 2))))) (pow.f64 lambda2 8)) (pow.f64 (/.f64 1 (pow.f64 (sin.f64 lambda1) 4)) 1/3))))))","(+.f64 (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 lambda2 lambda2)) (cbrt.f64 (pow.f64 (sin.f64 lambda1) 2))) (*.f64 1/3 (+.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (sin.f64 lambda1) 4))) (*.f64 (pow.f64 lambda2 6) (*.f64 (pow.f64 (sin.f64 lambda1) 2) -1/135))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (sin.f64 lambda1) 4))) (*.f64 (+.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) 1/315) (*.f64 2/3 (*.f64 (pow.f64 (sin.f64 lambda1) 2) -1/135))) (pow.f64 lambda2 8))))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 lambda2 lambda2)) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (sin.f64 lambda1) 4))) (+.f64 (*.f64 (pow.f64 lambda2 6) (*.f64 (pow.f64 (sin.f64 lambda1) 2) -1/135)) (*.f64 (-.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) 1/315) (*.f64 (pow.f64 (sin.f64 lambda1) 2) 2/405)) (pow.f64 lambda2 8)))) (cbrt.f64 (pow.f64 (sin.f64 lambda1) 2))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (sin.f64 lambda1) 4))) (fma.f64 (pow.f64 (sin.f64 lambda1) 2) (*.f64 (pow.f64 lambda2 6) -1/135) (*.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) -1/567) (pow.f64 lambda2 8)))) (*.f64 (+.f64 (*.f64 -1/3 (*.f64 lambda2 lambda2)) 1) (cbrt.f64 (pow.f64 (sin.f64 lambda1) 2))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (sin.f64 lambda1) 4))) (fma.f64 (pow.f64 (sin.f64 lambda1) 2) (*.f64 (pow.f64 lambda2 6) -1/135) (*.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) -1/567) (pow.f64 lambda2 8)))) (*.f64 (+.f64 1 (*.f64 -1/3 (*.f64 lambda2 lambda2))) (cbrt.f64 (pow.f64 (sin.f64 lambda1) 2))))","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)))","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)))","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)))","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)))","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)))","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)))","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)))","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)))","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)))","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)))","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)))","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)))","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)))","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)))","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)))","(pow.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (sin.f64 lambda1) 2) (pow.f64 (cos.f64 lambda2) 2)))","(*.f64 (pow.f64 1 1/3) (sin.f64 lambda1))","(*.f64 (sin.f64 lambda1) 1)","(sin.f64 lambda1)","(+.f64 (*.f64 (pow.f64 1 1/3) (sin.f64 lambda1)) (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))))","(fma.f64 1 (sin.f64 lambda1) (neg.f64 (*.f64 lambda2 (cos.f64 lambda1))))","(-.f64 (sin.f64 lambda1) (*.f64 lambda2 (cos.f64 lambda1)))","(fma.f64 lambda2 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda1))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (sin.f64 lambda1))) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (sin.f64 lambda1)))) (pow.f64 lambda2 2)) (+.f64 (*.f64 (pow.f64 1 1/3) (sin.f64 lambda1)) (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1)))))","(fma.f64 (*.f64 (*.f64 (sin.f64 lambda1) 1) -1/2) (*.f64 lambda2 lambda2) (fma.f64 1 (sin.f64 lambda1) (neg.f64 (*.f64 lambda2 (cos.f64 lambda1)))))","(-.f64 (fma.f64 (*.f64 lambda2 lambda2) (*.f64 (sin.f64 lambda1) -1/2) (sin.f64 lambda1)) (*.f64 lambda2 (cos.f64 lambda1)))","(-.f64 (*.f64 (sin.f64 lambda1) (+.f64 1 (*.f64 (*.f64 lambda2 lambda2) -1/2))) (*.f64 lambda2 (cos.f64 lambda1)))","(+.f64 (sin.f64 lambda1) (*.f64 lambda2 (-.f64 (*.f64 (*.f64 lambda2 -1/2) (sin.f64 lambda1)) (cos.f64 lambda1))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (sin.f64 lambda1))) (*.f64 -1/6 (*.f64 (pow.f64 1 1/3) (sin.f64 lambda1)))) (pow.f64 lambda2 2)) (+.f64 (*.f64 (pow.f64 1 1/3) (sin.f64 lambda1)) (+.f64 (*.f64 -1 (*.f64 lambda2 (cos.f64 lambda1))) (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (cos.f64 lambda1))))))","(fma.f64 (*.f64 (*.f64 (sin.f64 lambda1) 1) -1/2) (*.f64 lambda2 lambda2) (fma.f64 1 (sin.f64 lambda1) (fma.f64 -1 (*.f64 lambda2 (cos.f64 lambda1)) (*.f64 1/6 (*.f64 (cos.f64 lambda1) (pow.f64 lambda2 3))))))","(+.f64 (*.f64 (cos.f64 lambda1) (+.f64 (neg.f64 lambda2) (*.f64 1/6 (pow.f64 lambda2 3)))) (fma.f64 (*.f64 lambda2 lambda2) (*.f64 (sin.f64 lambda1) -1/2) (sin.f64 lambda1)))","(fma.f64 lambda2 (*.f64 (*.f64 lambda2 -1/2) (sin.f64 lambda1)) (fma.f64 (cos.f64 lambda1) (-.f64 (*.f64 1/6 (pow.f64 lambda2 3)) lambda2) (sin.f64 lambda1)))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(fma.f64 1 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))","(-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))","(fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (neg.f64 (sin.f64 lambda2))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(fma.f64 1 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))","(-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))","(fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (neg.f64 (sin.f64 lambda2))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(fma.f64 1 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))","(-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))","(fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (neg.f64 (sin.f64 lambda2))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(fma.f64 1 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))","(-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))","(fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (neg.f64 (sin.f64 lambda2))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(fma.f64 1 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))","(-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))","(fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (neg.f64 (sin.f64 lambda2))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(fma.f64 1 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))","(-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))","(fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (neg.f64 (sin.f64 lambda2))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(fma.f64 1 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))","(-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))","(fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (neg.f64 (sin.f64 lambda2))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(fma.f64 1 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))","(-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))","(fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (neg.f64 (sin.f64 lambda2))))","(*.f64 -1 (sin.f64 lambda2))","(neg.f64 (sin.f64 lambda2))","(+.f64 (*.f64 -1 (sin.f64 lambda2)) (*.f64 1/2 (*.f64 (sin.f64 lambda2) (pow.f64 lambda1 2))))","(fma.f64 -1 (sin.f64 lambda2) (*.f64 1/2 (*.f64 (sin.f64 lambda2) (*.f64 lambda1 lambda1))))","(-.f64 (*.f64 (sin.f64 lambda2) (*.f64 (*.f64 lambda1 lambda1) 1/2)) (sin.f64 lambda2))","(*.f64 (sin.f64 lambda2) (+.f64 (*.f64 lambda1 (*.f64 lambda1 1/2)) -1))","(*.f64 (sin.f64 lambda2) (+.f64 -1 (*.f64 lambda1 (*.f64 lambda1 1/2))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(fma.f64 1 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))","(-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))","(fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (neg.f64 (sin.f64 lambda2))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(fma.f64 1 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))","(-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))","(fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (neg.f64 (sin.f64 lambda2))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(fma.f64 1 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))","(-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))","(fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (neg.f64 (sin.f64 lambda2))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(fma.f64 1 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))","(-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))","(fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (neg.f64 (sin.f64 lambda2))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(fma.f64 1 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))","(-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))","(fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (neg.f64 (sin.f64 lambda2))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(fma.f64 1 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))","(-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))","(fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (neg.f64 (sin.f64 lambda2))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(fma.f64 1 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))","(-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))","(fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (neg.f64 (sin.f64 lambda2))))","(+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda2))) (*.f64 -1 (*.f64 (sin.f64 lambda2) (cos.f64 lambda1))))","(fma.f64 1 (*.f64 (sin.f64 lambda1) (cos.f64 lambda2)) (*.f64 (neg.f64 (sin.f64 lambda2)) (cos.f64 lambda1)))","(-.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))","(fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (neg.f64 (sin.f64 lambda2))))"]],"stop":[["node limit",1]],"time":61.3671875,"type":"simplify"},{"compiler":[[22312,4620]],"time":97.6669921875,"type":"eval"},{"alts":[["(+.f64 lambda1 (atan2.f64 (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","fresh",21.287267577385347],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) (+.f64 1 (expm1.f64 (cos.f64 phi1)))))))","fresh",1.4725408013286856],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (/.f64 (-.f64 (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) (pow.f64 (cos.f64 phi1) 2)) (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (neg.f64 (cos.f64 phi1))))))","fresh",4.726012577779497],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) 3)) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","fresh",1.5087179997704414],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2)))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) lambda1))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda2))) (*.f64 1/6 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 3))))))))))","fresh",7.454974837004675],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 3)))","fresh",1.423534957812047],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (+.f64 (fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","fresh",1.412702371823252],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (-.f64 (exp.f64 (log1p.f64 (cos.f64 (-.f64 lambda1 lambda2)))) 1) (cos.f64 phi1))))","fresh",1.3508289273889786],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) 6) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","fresh",1.3465282432148553],["(+.f64 lambda1 (atan2.f64 (log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","fresh",13.916009872081434],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (-.f64 lambda1 lambda2))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (-.f64 lambda1 lambda2)))))) (cos.f64 phi1))))","fresh",1.3904664466270342],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (/.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 3) (pow.f64 (cos.f64 phi1) 3)) (fma.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (pow.f64 (cos.f64 phi1) 2) (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1)))))))","fresh",1.357709870075207],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))))","next",0.2528746857832988],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (pow.f64 (sqrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 2)))","fresh",14.031584128452725]],"compiler":[[55,31],[51,28],[45,20],[26,16],[82,43],[48,25],[63,31],[27,17],[41,24],[27,17],[34,17],[81,33],[55,26],[26,16],[55,31],[51,28],[45,20],[26,16],[82,43],[48,25],[63,31],[27,17],[41,24],[27,17],[34,17],[81,33],[55,26],[26,16]],"count":[[447,14]],"kept":[{"done":[0,0],"fresh":[14,7],"new":[432,7],"picked":[1,0]}],"min-error":[0.051675073009749536],"time":255.617919921875,"type":"prune"},{"compiler":[[276,26]],"locations":[["(fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))",0.2573296905627903,false],["(fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))",0.3872220338418053,true],["(*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))",0.502285009768442,false],["(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))",0.5460603471339217,true]],"time":33.927001953125,"type":"localize"},{"count":[[2,72]],"series":[["(fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))","phi1","-inf",0.239013671875],["(fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))","phi1","inf",7.027099609375],["(fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))","phi1","0",0.47998046875],["(fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))","lambda2","-inf",0.412109375],["(fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))","lambda2","inf",0.406005859375],["(fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))","lambda2","0",0.5849609375],["(fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))","lambda1","-inf",0.41796875],["(fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))","lambda1","inf",0.402099609375],["(fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))","lambda1","0",0.660888671875],["(fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))","phi2","-inf",0.368896484375],["(fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))","phi2","inf",9.72998046875],["(fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))","phi2","0",0.976806640625],["(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))","lambda2","-inf",12.18408203125],["(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))","lambda2","inf",21.156982421875],["(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))","lambda2","0",1.01708984375],["(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))","lambda1","-inf",9.881103515625],["(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))","lambda1","inf",24.35302734375],["(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))","lambda1","0",1.531005859375]],"time":92.31689453125,"type":"series"},{"count":[[2,107]],"egraph":[[2,4358,20,0.032416083],[1,352,20,0.005804083],[0,18,44,0.000393375]],"inputs":[["(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))","(fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (-.f64 lambda1 lambda2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (*.f64 1/3 (cos.f64 (-.f64 lambda1 lambda2)))) (*.f64 1/3 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) (log.f64 (*.f64 (sqrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cos.f64 (-.f64 lambda1 lambda2))) (*.f64 1/2 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (log.f64 (*.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (cos.f64 (-.f64 lambda1 lambda2))) (*.f64 2 (*.f64 1/3 (cos.f64 (-.f64 lambda1 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (*.f64 1/3 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2))) (pow.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (sqrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda1))))) (*.f64 1/2 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2))) 2))) (*.f64 1/3 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda1)) (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2))))) (*.f64 1/2 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 (-.f64 lambda1 lambda2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 lambda1) (cos.f64 (neg.f64 lambda2))) (*.f64 (sin.f64 lambda1) (sin.f64 (neg.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 lambda1) (cos.f64 (*.f64 -1 lambda2))) (*.f64 (sin.f64 lambda1) (sin.f64 (*.f64 -1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 lambda1) (cos.f64 (*.f64 (neg.f64 (pow.f64 (cbrt.f64 lambda2) 2)) (cbrt.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 (*.f64 (neg.f64 (pow.f64 (cbrt.f64 lambda2) 2)) (cbrt.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 lambda1) (cos.f64 (*.f64 (neg.f64 (sqrt.f64 lambda2)) (sqrt.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 (*.f64 (neg.f64 (sqrt.f64 lambda2)) (sqrt.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (fma.f64 (neg.f64 lambda2) 1 lambda2))) (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (fma.f64 (neg.f64 lambda2) 1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (fma.f64 (neg.f64 (cbrt.f64 lambda2)) (pow.f64 (cbrt.f64 lambda2) 2) lambda2))) (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (fma.f64 (neg.f64 (cbrt.f64 lambda2)) (pow.f64 (cbrt.f64 lambda2) 2) lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (fma.f64 (neg.f64 (sqrt.f64 lambda2)) (sqrt.f64 lambda2) lambda2))) (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (sin.f64 (fma.f64 (neg.f64 (sqrt.f64 lambda2)) (sqrt.f64 lambda2) lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (-.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (-.f64 lambda1 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) (pow.f64 (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) 2) (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) (sqrt.f64 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 1/2 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 1/3 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (*.f64 3 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) 2 (*.f64 2 (+.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) 3) (pow.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) 3)) (+.f64 (pow.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) 2) (-.f64 (pow.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) 2) (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) 2) (pow.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) 2)) (-.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (-.f64 lambda1 lambda2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (-.f64 lambda1 lambda2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (-.f64 lambda1 lambda2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (-.f64 lambda1 lambda2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (-.f64 lambda1 lambda2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (-.f64 lambda1 lambda2))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (-.f64 lambda2 lambda1))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (-.f64 lambda1 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (-.f64 lambda1 lambda2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 lambda1) (sin.f64 lambda2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 lambda2) (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) 1 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 lambda1) (cos.f64 lambda2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) 1 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2) (*.f64 (cbrt.f64 (cos.f64 lambda2)) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 2) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 2) (cbrt.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2) (*.f64 (cbrt.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2) (*.f64 (cbrt.f64 (cos.f64 lambda1)) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) 2) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) 2) (cbrt.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 lambda2)) (*.f64 (sqrt.f64 (cos.f64 lambda2)) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (sqrt.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sin.f64 lambda1)) (*.f64 (sqrt.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sqrt.f64 (cos.f64 lambda1)) (cos.f64 lambda2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sin.f64 lambda2)) (*.f64 (sqrt.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) (sqrt.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) 1/2 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 (+.f64 lambda1 lambda2))) 1/2 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (cos.f64 lambda2)) 2)) (cbrt.f64 (cos.f64 lambda2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 lambda1) (sqrt.f64 (cos.f64 lambda2))) (sqrt.f64 (cos.f64 lambda2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 lambda2) (pow.f64 (cbrt.f64 (cos.f64 lambda1)) 2)) (cbrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 lambda2) (sqrt.f64 (cos.f64 lambda1))) (sqrt.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 lambda1) (sqrt.f64 (sin.f64 lambda2))) (sqrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 lambda2) (pow.f64 (cbrt.f64 (sin.f64 lambda1)) 2)) (cbrt.f64 (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sin.f64 lambda2) (sqrt.f64 (sin.f64 lambda1))) (sqrt.f64 (sin.f64 lambda1)) (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 phi1) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 1) (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)))) (cbrt.f64 (exp.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 2) (cbrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) (sqrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 3) (pow.f64 (cos.f64 phi1) 3)) (fma.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (pow.f64 (cos.f64 phi1) 2) (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) (pow.f64 (cos.f64 phi1) 2)) (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (neg.f64 (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (cos.f64 phi1)) (exp.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (cos.f64 phi1))) (exp.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) (+.f64 1 (expm1.f64 (cos.f64 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 1))))))"]],"rules":[["egg-rr",29],["egg-rr",78]],"stop":[["node limit",1]],"time":57.109130859375,"type":"rewrite"},{"count":[[179,159]],"egraph":[[3,5892,2334,0.025031833],[2,2023,2378,0.012825416],[1,548,2533,0.004005208],[0,174,2994,0.000915458]],"inputs":[["(cos.f64 lambda2)","(+.f64 (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) lambda1))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 lambda2) 2)) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda2))) (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (pow.f64 (sin.f64 lambda2) 2)))) (exp.f64 (cos.f64 lambda2))))) (pow.f64 lambda1 2))) (+.f64 (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) lambda1)))","(+.f64 (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 (sin.f64 lambda2) 3)) (+.f64 (*.f64 6 (/.f64 (+.f64 (*.f64 (exp.f64 (cos.f64 lambda2)) (+.f64 (*.f64 1/6 (pow.f64 (sin.f64 lambda2) 3)) (*.f64 -1/6 (sin.f64 lambda2)))) (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda2))))) (exp.f64 (cos.f64 lambda2)))) (*.f64 -6 (/.f64 (*.f64 (sin.f64 lambda2) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda2))) (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (pow.f64 (sin.f64 lambda2) 2))))) (exp.f64 (cos.f64 lambda2)))))) (pow.f64 lambda1 3))) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 lambda2) 2)) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda2))) (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (pow.f64 (sin.f64 lambda2) 2)))) (exp.f64 (cos.f64 lambda2))))) (pow.f64 lambda1 2))) (+.f64 (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) lambda1))))","(log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(cos.f64 lambda1)","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (cos.f64 lambda1))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 lambda2 2) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (cos.f64 lambda1)))) (exp.f64 (cos.f64 lambda1)))) (*.f64 -1 (pow.f64 (sin.f64 lambda1) 2))))) (+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (cos.f64 lambda1)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 lambda2 2) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (cos.f64 lambda1)))) (exp.f64 (cos.f64 lambda1)))) (*.f64 -1 (pow.f64 (sin.f64 lambda1) 2))))) (+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (+.f64 (*.f64 6 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda1) (cos.f64 lambda1)))) (*.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 -1/6 (sin.f64 lambda1)) (*.f64 1/6 (pow.f64 (sin.f64 lambda1) 3))))) (exp.f64 (cos.f64 lambda1)))) (+.f64 (*.f64 -6 (/.f64 (*.f64 (sin.f64 lambda1) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (cos.f64 lambda1))))) (exp.f64 (cos.f64 lambda1)))) (*.f64 2 (pow.f64 (sin.f64 lambda1) 3)))))) (cos.f64 lambda1))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(+.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi1))","(+.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (+.f64 (cos.f64 phi1) (*.f64 -1/2 (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (pow.f64 phi2 2)))))","(+.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 -1/2 (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (pow.f64 phi2 2))) (*.f64 1/24 (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (pow.f64 phi2 4))))))","(+.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (+.f64 (*.f64 -1/720 (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (pow.f64 phi2 6))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 -1/2 (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (pow.f64 phi2 2))) (*.f64 1/24 (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (pow.f64 phi2 4)))))))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2))))","(+.f64 (*.f64 1/2 (*.f64 (cos.f64 phi2) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 lambda2) 2)) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda2))) (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (pow.f64 (sin.f64 lambda2) 2)))) (exp.f64 (cos.f64 lambda2))))) (pow.f64 lambda1 2)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2)))))","(+.f64 (*.f64 1/2 (*.f64 (cos.f64 phi2) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 lambda2) 2)) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda2))) (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (pow.f64 (sin.f64 lambda2) 2)))) (exp.f64 (cos.f64 lambda2))))) (pow.f64 lambda1 2)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda2)) (*.f64 1/6 (*.f64 (cos.f64 phi2) (*.f64 (+.f64 (*.f64 2 (pow.f64 (sin.f64 lambda2) 3)) (+.f64 (*.f64 6 (/.f64 (+.f64 (*.f64 (exp.f64 (cos.f64 lambda2)) (+.f64 (*.f64 1/6 (pow.f64 (sin.f64 lambda2) 3)) (*.f64 -1/6 (sin.f64 lambda2)))) (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda2))))) (exp.f64 (cos.f64 lambda2)))) (*.f64 -6 (/.f64 (*.f64 (sin.f64 lambda2) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda2))) (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (pow.f64 (sin.f64 lambda2) 2))))) (exp.f64 (cos.f64 lambda2)))))) (pow.f64 lambda1 3))))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))","(+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (cos.f64 phi1)))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (+.f64 (cos.f64 phi1) (*.f64 1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (cos.f64 lambda1)))) (exp.f64 (cos.f64 lambda1)))) (*.f64 -1 (pow.f64 (sin.f64 lambda1) 2)))))))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 6 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda1) (cos.f64 lambda1)))) (*.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 -1/6 (sin.f64 lambda1)) (*.f64 1/6 (pow.f64 (sin.f64 lambda1) 3))))) (exp.f64 (cos.f64 lambda1)))) (+.f64 (*.f64 -6 (/.f64 (*.f64 (sin.f64 lambda1) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (cos.f64 lambda1))))) (exp.f64 (cos.f64 lambda1)))) (*.f64 2 (pow.f64 (sin.f64 lambda1) 3))))))) (*.f64 1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (cos.f64 lambda1)))) (exp.f64 (cos.f64 lambda1)))) (*.f64 -1 (pow.f64 (sin.f64 lambda1) 2))))))))))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 1 (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 phi1 2)) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2))))","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (+.f64 (*.f64 -1/2 (pow.f64 phi1 2)) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))))","(+.f64 (*.f64 -1/720 (pow.f64 phi1 6)) (+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (+.f64 (*.f64 -1/2 (pow.f64 phi1 2)) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2))))))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))"]],"method":["egg-herbie"],"outputs":[["(cos.f64 lambda2)","(+.f64 (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) lambda1))","(fma.f64 (sin.f64 lambda2) lambda1 (cos.f64 lambda2))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 lambda2) 2)) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda2))) (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (pow.f64 (sin.f64 lambda2) 2)))) (exp.f64 (cos.f64 lambda2))))) (pow.f64 lambda1 2))) (+.f64 (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) lambda1)))","(fma.f64 1/2 (*.f64 (fma.f64 -1 (pow.f64 (sin.f64 lambda2) 2) (*.f64 2 (/.f64 (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (exp.f64 (cos.f64 lambda2))) (*.f64 (*.f64 1/2 (exp.f64 (cos.f64 lambda2))) (pow.f64 (sin.f64 lambda2) 2))) (exp.f64 (cos.f64 lambda2))))) (*.f64 lambda1 lambda1)) (+.f64 (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) lambda1)))","(fma.f64 1/2 (*.f64 lambda1 (*.f64 lambda1 (-.f64 (/.f64 (*.f64 2 (fma.f64 1/2 (*.f64 (pow.f64 (sin.f64 lambda2) 2) (exp.f64 (cos.f64 lambda2))) (*.f64 (exp.f64 (cos.f64 lambda2)) (*.f64 (cos.f64 lambda2) -1/2)))) (exp.f64 (cos.f64 lambda2))) (pow.f64 (sin.f64 lambda2) 2)))) (fma.f64 (sin.f64 lambda2) lambda1 (cos.f64 lambda2)))","(fma.f64 1/2 (*.f64 lambda1 (*.f64 lambda1 (-.f64 (*.f64 (/.f64 2 (exp.f64 (cos.f64 lambda2))) (*.f64 (exp.f64 (cos.f64 lambda2)) (+.f64 (*.f64 (cos.f64 lambda2) -1/2) (*.f64 1/2 (pow.f64 (sin.f64 lambda2) 2))))) (pow.f64 (sin.f64 lambda2) 2)))) (fma.f64 (sin.f64 lambda2) lambda1 (cos.f64 lambda2)))","(+.f64 (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 (sin.f64 lambda2) 3)) (+.f64 (*.f64 6 (/.f64 (+.f64 (*.f64 (exp.f64 (cos.f64 lambda2)) (+.f64 (*.f64 1/6 (pow.f64 (sin.f64 lambda2) 3)) (*.f64 -1/6 (sin.f64 lambda2)))) (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda2))))) (exp.f64 (cos.f64 lambda2)))) (*.f64 -6 (/.f64 (*.f64 (sin.f64 lambda2) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda2))) (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (pow.f64 (sin.f64 lambda2) 2))))) (exp.f64 (cos.f64 lambda2)))))) (pow.f64 lambda1 3))) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 lambda2) 2)) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda2))) (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (pow.f64 (sin.f64 lambda2) 2)))) (exp.f64 (cos.f64 lambda2))))) (pow.f64 lambda1 2))) (+.f64 (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) lambda1))))","(fma.f64 1/6 (*.f64 (fma.f64 2 (pow.f64 (sin.f64 lambda2) 3) (fma.f64 6 (/.f64 (fma.f64 (exp.f64 (cos.f64 lambda2)) (fma.f64 1/6 (pow.f64 (sin.f64 lambda2) 3) (*.f64 (sin.f64 lambda2) -1/6)) (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (*.f64 (cos.f64 lambda2) (sin.f64 lambda2))))) (exp.f64 (cos.f64 lambda2))) (*.f64 -6 (/.f64 (*.f64 (sin.f64 lambda2) (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (exp.f64 (cos.f64 lambda2))) (*.f64 (*.f64 1/2 (exp.f64 (cos.f64 lambda2))) (pow.f64 (sin.f64 lambda2) 2)))) (exp.f64 (cos.f64 lambda2)))))) (pow.f64 lambda1 3)) (fma.f64 1/2 (*.f64 (fma.f64 -1 (pow.f64 (sin.f64 lambda2) 2) (*.f64 2 (/.f64 (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (exp.f64 (cos.f64 lambda2))) (*.f64 (*.f64 1/2 (exp.f64 (cos.f64 lambda2))) (pow.f64 (sin.f64 lambda2) 2))) (exp.f64 (cos.f64 lambda2))))) (*.f64 lambda1 lambda1)) (+.f64 (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) lambda1))))","(fma.f64 1/6 (*.f64 (fma.f64 2 (pow.f64 (sin.f64 lambda2) 3) (fma.f64 6 (/.f64 (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) (exp.f64 (cos.f64 lambda2)))) (*.f64 (exp.f64 (cos.f64 lambda2)) (fma.f64 1/6 (pow.f64 (sin.f64 lambda2) 3) (*.f64 (sin.f64 lambda2) -1/6)))) (exp.f64 (cos.f64 lambda2))) (*.f64 -6 (*.f64 (/.f64 (sin.f64 lambda2) (exp.f64 (cos.f64 lambda2))) (fma.f64 1/2 (*.f64 (pow.f64 (sin.f64 lambda2) 2) (exp.f64 (cos.f64 lambda2))) (*.f64 (exp.f64 (cos.f64 lambda2)) (*.f64 (cos.f64 lambda2) -1/2))))))) (pow.f64 lambda1 3)) (fma.f64 1/2 (*.f64 lambda1 (*.f64 lambda1 (-.f64 (/.f64 (*.f64 2 (fma.f64 1/2 (*.f64 (pow.f64 (sin.f64 lambda2) 2) (exp.f64 (cos.f64 lambda2))) (*.f64 (exp.f64 (cos.f64 lambda2)) (*.f64 (cos.f64 lambda2) -1/2)))) (exp.f64 (cos.f64 lambda2))) (pow.f64 (sin.f64 lambda2) 2)))) (fma.f64 (sin.f64 lambda2) lambda1 (cos.f64 lambda2))))","(fma.f64 1/6 (*.f64 (fma.f64 2 (pow.f64 (sin.f64 lambda2) 3) (fma.f64 -6 (*.f64 (*.f64 (exp.f64 (cos.f64 lambda2)) (+.f64 (*.f64 (cos.f64 lambda2) -1/2) (*.f64 1/2 (pow.f64 (sin.f64 lambda2) 2)))) (/.f64 (sin.f64 lambda2) (exp.f64 (cos.f64 lambda2)))) (*.f64 (/.f64 6 (exp.f64 (cos.f64 lambda2))) (*.f64 (exp.f64 (cos.f64 lambda2)) (+.f64 (fma.f64 1/6 (pow.f64 (sin.f64 lambda2) 3) (*.f64 (sin.f64 lambda2) -1/6)) (*.f64 -1/2 (*.f64 (cos.f64 lambda2) (sin.f64 lambda2)))))))) (pow.f64 lambda1 3)) (fma.f64 1/2 (*.f64 lambda1 (*.f64 lambda1 (-.f64 (*.f64 (/.f64 2 (exp.f64 (cos.f64 lambda2))) (*.f64 (exp.f64 (cos.f64 lambda2)) (+.f64 (*.f64 (cos.f64 lambda2) -1/2) (*.f64 1/2 (pow.f64 (sin.f64 lambda2) 2))))) (pow.f64 (sin.f64 lambda2) 2)))) (fma.f64 (sin.f64 lambda2) lambda1 (cos.f64 lambda2))))","(fma.f64 1/6 (*.f64 (fma.f64 2 (pow.f64 (sin.f64 lambda2) 3) (fma.f64 6 (/.f64 (exp.f64 (cos.f64 lambda2)) (/.f64 (exp.f64 (cos.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 lambda2) (sin.f64 lambda2))) (fma.f64 1/6 (pow.f64 (sin.f64 lambda2) 3) (*.f64 (sin.f64 lambda2) -1/6))))) (*.f64 -6 (*.f64 (*.f64 (exp.f64 (cos.f64 lambda2)) (+.f64 (*.f64 (cos.f64 lambda2) -1/2) (*.f64 1/2 (pow.f64 (sin.f64 lambda2) 2)))) (/.f64 (sin.f64 lambda2) (exp.f64 (cos.f64 lambda2))))))) (pow.f64 lambda1 3)) (fma.f64 1/2 (*.f64 lambda1 (*.f64 lambda1 (-.f64 (*.f64 (/.f64 2 (exp.f64 (cos.f64 lambda2))) (*.f64 (exp.f64 (cos.f64 lambda2)) (+.f64 (*.f64 (cos.f64 lambda2) -1/2) (*.f64 1/2 (pow.f64 (sin.f64 lambda2) 2))))) (pow.f64 (sin.f64 lambda2) 2)))) (fma.f64 (sin.f64 lambda2) lambda1 (cos.f64 lambda2))))","(log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(cos.f64 lambda1)","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (cos.f64 lambda1))","(fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 lambda2 2) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (cos.f64 lambda1)))) (exp.f64 (cos.f64 lambda1)))) (*.f64 -1 (pow.f64 (sin.f64 lambda1) 2))))) (+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (cos.f64 lambda1)))","(fma.f64 1/2 (*.f64 (*.f64 lambda2 lambda2) (fma.f64 2 (/.f64 (fma.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/2 (*.f64 (cos.f64 lambda1) (exp.f64 (cos.f64 lambda1))))) (exp.f64 (cos.f64 lambda1))) (neg.f64 (pow.f64 (sin.f64 lambda1) 2)))) (fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1)))","(fma.f64 1/2 (*.f64 (*.f64 lambda2 lambda2) (-.f64 (/.f64 (*.f64 2 (fma.f64 (*.f64 1/2 (exp.f64 (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2) (*.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 (cos.f64 lambda1) -1/2)))) (exp.f64 (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2))) (fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1)))","(fma.f64 1/2 (*.f64 lambda2 (*.f64 lambda2 (-.f64 (*.f64 (/.f64 2 (exp.f64 (cos.f64 lambda1))) (*.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/2 (cos.f64 lambda1))))) (pow.f64 (sin.f64 lambda1) 2)))) (fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1)))","(fma.f64 1/2 (*.f64 lambda2 (*.f64 lambda2 (-.f64 (*.f64 2 (/.f64 (exp.f64 (cos.f64 lambda1)) (/.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/2 (cos.f64 lambda1)))))) (pow.f64 (sin.f64 lambda1) 2)))) (fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 lambda2 2) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (cos.f64 lambda1)))) (exp.f64 (cos.f64 lambda1)))) (*.f64 -1 (pow.f64 (sin.f64 lambda1) 2))))) (+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (+.f64 (*.f64 6 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda1) (cos.f64 lambda1)))) (*.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 -1/6 (sin.f64 lambda1)) (*.f64 1/6 (pow.f64 (sin.f64 lambda1) 3))))) (exp.f64 (cos.f64 lambda1)))) (+.f64 (*.f64 -6 (/.f64 (*.f64 (sin.f64 lambda1) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (cos.f64 lambda1))))) (exp.f64 (cos.f64 lambda1)))) (*.f64 2 (pow.f64 (sin.f64 lambda1) 3)))))) (cos.f64 lambda1))))","(fma.f64 1/2 (*.f64 (*.f64 lambda2 lambda2) (fma.f64 2 (/.f64 (fma.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/2 (*.f64 (cos.f64 lambda1) (exp.f64 (cos.f64 lambda1))))) (exp.f64 (cos.f64 lambda1))) (neg.f64 (pow.f64 (sin.f64 lambda1) 2)))) (fma.f64 lambda2 (sin.f64 lambda1) (fma.f64 1/6 (*.f64 (pow.f64 lambda2 3) (fma.f64 6 (/.f64 (fma.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda1))) (*.f64 (exp.f64 (cos.f64 lambda1)) (fma.f64 -1/6 (sin.f64 lambda1) (*.f64 1/6 (pow.f64 (sin.f64 lambda1) 3))))) (exp.f64 (cos.f64 lambda1))) (fma.f64 -6 (/.f64 (sin.f64 lambda1) (/.f64 (exp.f64 (cos.f64 lambda1)) (fma.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/2 (*.f64 (cos.f64 lambda1) (exp.f64 (cos.f64 lambda1))))))) (*.f64 2 (pow.f64 (sin.f64 lambda1) 3))))) (cos.f64 lambda1))))","(fma.f64 1/2 (*.f64 (*.f64 lambda2 lambda2) (-.f64 (/.f64 (*.f64 2 (fma.f64 (*.f64 1/2 (exp.f64 (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2) (*.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 (cos.f64 lambda1) -1/2)))) (exp.f64 (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2))) (fma.f64 lambda2 (sin.f64 lambda1) (fma.f64 1/6 (*.f64 (pow.f64 lambda2 3) (fma.f64 6 (/.f64 (fma.f64 (exp.f64 (cos.f64 lambda1)) (fma.f64 1/6 (pow.f64 (sin.f64 lambda1) 3) (*.f64 -1/6 (sin.f64 lambda1))) (*.f64 (sin.f64 lambda1) (*.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 (cos.f64 lambda1) -1/2)))) (exp.f64 (cos.f64 lambda1))) (fma.f64 2 (pow.f64 (sin.f64 lambda1) 3) (*.f64 -6 (*.f64 (/.f64 (sin.f64 lambda1) (exp.f64 (cos.f64 lambda1))) (fma.f64 (*.f64 1/2 (exp.f64 (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2) (*.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 (cos.f64 lambda1) -1/2)))))))) (cos.f64 lambda1))))","(fma.f64 1/2 (*.f64 lambda2 (*.f64 lambda2 (-.f64 (*.f64 (/.f64 2 (exp.f64 (cos.f64 lambda1))) (*.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/2 (cos.f64 lambda1))))) (pow.f64 (sin.f64 lambda1) 2)))) (fma.f64 lambda2 (sin.f64 lambda1) (fma.f64 1/6 (*.f64 (pow.f64 lambda2 3) (fma.f64 6 (/.f64 (*.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 lambda1) (sin.f64 lambda1))) (fma.f64 1/6 (pow.f64 (sin.f64 lambda1) 3) (*.f64 -1/6 (sin.f64 lambda1))))) (exp.f64 (cos.f64 lambda1))) (fma.f64 2 (pow.f64 (sin.f64 lambda1) 3) (*.f64 (/.f64 -6 (exp.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda1) (*.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/2 (cos.f64 lambda1))))))))) (cos.f64 lambda1))))","(fma.f64 1/2 (*.f64 lambda2 (*.f64 lambda2 (-.f64 (*.f64 2 (/.f64 (exp.f64 (cos.f64 lambda1)) (/.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/2 (cos.f64 lambda1)))))) (pow.f64 (sin.f64 lambda1) 2)))) (fma.f64 lambda2 (sin.f64 lambda1) (fma.f64 1/6 (*.f64 (pow.f64 lambda2 3) (fma.f64 6 (/.f64 (exp.f64 (cos.f64 lambda1)) (/.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 lambda1) (sin.f64 lambda1))) (fma.f64 1/6 (pow.f64 (sin.f64 lambda1) 3) (*.f64 -1/6 (sin.f64 lambda1)))))) (fma.f64 2 (pow.f64 (sin.f64 lambda1) 3) (*.f64 -6 (*.f64 (/.f64 (exp.f64 (cos.f64 lambda1)) (/.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/2 (cos.f64 lambda1))))) (sin.f64 lambda1)))))) (cos.f64 lambda1))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))","(+.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi1))","(+.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi1))","(+.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1))","(+.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (+.f64 (cos.f64 phi1) (*.f64 -1/2 (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (pow.f64 phi2 2)))))","(+.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (+.f64 (cos.f64 phi1) (*.f64 -1/2 (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (*.f64 phi2 phi2)))))","(+.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (fma.f64 -1/2 (*.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (*.f64 phi2 phi2)) (cos.f64 phi1)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 -1/2 (*.f64 phi2 phi2)) 1) (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))","(+.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 -1/2 (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (pow.f64 phi2 2))) (*.f64 1/24 (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (pow.f64 phi2 4))))))","(+.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (+.f64 (cos.f64 phi1) (fma.f64 -1/2 (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (*.f64 phi2 phi2)) (*.f64 1/24 (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (pow.f64 phi2 4))))))","(+.f64 (+.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1)) (fma.f64 1/24 (*.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 phi2 4)) (*.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (*.f64 (*.f64 phi2 phi2) -1/2))))","(+.f64 (+.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi1)) (*.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 phi2 phi2)) (*.f64 1/24 (pow.f64 phi2 4)))))","(+.f64 (cos.f64 phi1) (*.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 phi2 phi2)) (+.f64 (*.f64 1/24 (pow.f64 phi2 4)) 1))))","(+.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (+.f64 (*.f64 -1/720 (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (pow.f64 phi2 6))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 -1/2 (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (pow.f64 phi2 2))) (*.f64 1/24 (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (pow.f64 phi2 4)))))))","(+.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (fma.f64 -1/720 (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (pow.f64 phi2 6)) (+.f64 (cos.f64 phi1) (fma.f64 -1/2 (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (*.f64 phi2 phi2)) (*.f64 1/24 (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (pow.f64 phi2 4)))))))","(+.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (+.f64 (fma.f64 1/24 (*.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 phi2 4)) (*.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (*.f64 (*.f64 phi2 phi2) -1/2))) (fma.f64 -1/720 (*.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 phi2 6)) (cos.f64 phi1))))","(+.f64 (cos.f64 phi1) (+.f64 (*.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 phi2 phi2)) (*.f64 1/24 (pow.f64 phi2 4)))) (*.f64 (+.f64 (*.f64 -1/720 (pow.f64 phi2 6)) 1) (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))))","(+.f64 (cos.f64 phi1) (+.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (*.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 phi2 phi2)) (+.f64 (*.f64 1/24 (pow.f64 phi2 4)) (*.f64 -1/720 (pow.f64 phi2 6)))))))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda2)) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (cos.f64 lambda2) (cos.f64 phi1))","(fma.f64 (cos.f64 lambda2) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2))))","(fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1) (fma.f64 (cos.f64 phi2) (cos.f64 lambda2) (cos.f64 phi1)))","(fma.f64 (*.f64 (sin.f64 lambda2) lambda1) (cos.f64 phi2) (fma.f64 (cos.f64 lambda2) (cos.f64 phi2) (cos.f64 phi1)))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (fma.f64 (sin.f64 lambda2) lambda1 (cos.f64 lambda2))))","(+.f64 (*.f64 1/2 (*.f64 (cos.f64 phi2) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 lambda2) 2)) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda2))) (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (pow.f64 (sin.f64 lambda2) 2)))) (exp.f64 (cos.f64 lambda2))))) (pow.f64 lambda1 2)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 lambda2)))))","(fma.f64 1/2 (*.f64 (*.f64 (fma.f64 -1 (pow.f64 (sin.f64 lambda2) 2) (*.f64 2 (/.f64 (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (exp.f64 (cos.f64 lambda2))) (*.f64 (*.f64 1/2 (exp.f64 (cos.f64 lambda2))) (pow.f64 (sin.f64 lambda2) 2))) (exp.f64 (cos.f64 lambda2))))) (*.f64 lambda1 lambda1)) (cos.f64 phi2)) (fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1) (fma.f64 (cos.f64 phi2) (cos.f64 lambda2) (cos.f64 phi1))))","(fma.f64 1/2 (*.f64 (-.f64 (/.f64 (*.f64 2 (fma.f64 1/2 (*.f64 (pow.f64 (sin.f64 lambda2) 2) (exp.f64 (cos.f64 lambda2))) (*.f64 (exp.f64 (cos.f64 lambda2)) (*.f64 (cos.f64 lambda2) -1/2)))) (exp.f64 (cos.f64 lambda2))) (pow.f64 (sin.f64 lambda2) 2)) (*.f64 (*.f64 lambda1 lambda1) (cos.f64 phi2))) (fma.f64 (*.f64 (sin.f64 lambda2) lambda1) (cos.f64 phi2) (fma.f64 (cos.f64 lambda2) (cos.f64 phi2) (cos.f64 phi1))))","(+.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 phi2) (cos.f64 phi1)) (*.f64 (cos.f64 phi2) (*.f64 lambda1 (+.f64 (*.f64 lambda1 (*.f64 1/2 (-.f64 (*.f64 (/.f64 2 (exp.f64 (cos.f64 lambda2))) (*.f64 (exp.f64 (cos.f64 lambda2)) (+.f64 (*.f64 (cos.f64 lambda2) -1/2) (*.f64 1/2 (pow.f64 (sin.f64 lambda2) 2))))) (pow.f64 (sin.f64 lambda2) 2)))) (sin.f64 lambda2)))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (fma.f64 1/2 (*.f64 lambda1 (*.f64 lambda1 (-.f64 (*.f64 (/.f64 2 (exp.f64 (cos.f64 lambda2))) (*.f64 (exp.f64 (cos.f64 lambda2)) (+.f64 (*.f64 (cos.f64 lambda2) -1/2) (*.f64 1/2 (pow.f64 (sin.f64 lambda2) 2))))) (pow.f64 (sin.f64 lambda2) 2)))) (fma.f64 (sin.f64 lambda2) lambda1 (cos.f64 lambda2)))))","(+.f64 (*.f64 1/2 (*.f64 (cos.f64 phi2) (*.f64 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 lambda2) 2)) (*.f64 2 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda2))) (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (pow.f64 (sin.f64 lambda2) 2)))) (exp.f64 (cos.f64 lambda2))))) (pow.f64 lambda1 2)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda2)) (*.f64 1/6 (*.f64 (cos.f64 phi2) (*.f64 (+.f64 (*.f64 2 (pow.f64 (sin.f64 lambda2) 3)) (+.f64 (*.f64 6 (/.f64 (+.f64 (*.f64 (exp.f64 (cos.f64 lambda2)) (+.f64 (*.f64 1/6 (pow.f64 (sin.f64 lambda2) 3)) (*.f64 -1/6 (sin.f64 lambda2)))) (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) (cos.f64 lambda2))))) (exp.f64 (cos.f64 lambda2)))) (*.f64 -6 (/.f64 (*.f64 (sin.f64 lambda2) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda2))) (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (pow.f64 (sin.f64 lambda2) 2))))) (exp.f64 (cos.f64 lambda2)))))) (pow.f64 lambda1 3))))))))","(fma.f64 1/2 (*.f64 (*.f64 (fma.f64 -1 (pow.f64 (sin.f64 lambda2) 2) (*.f64 2 (/.f64 (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (exp.f64 (cos.f64 lambda2))) (*.f64 (*.f64 1/2 (exp.f64 (cos.f64 lambda2))) (pow.f64 (sin.f64 lambda2) 2))) (exp.f64 (cos.f64 lambda2))))) (*.f64 lambda1 lambda1)) (cos.f64 phi2)) (fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1) (+.f64 (cos.f64 phi1) (fma.f64 (cos.f64 phi2) (cos.f64 lambda2) (*.f64 1/6 (*.f64 (*.f64 (fma.f64 2 (pow.f64 (sin.f64 lambda2) 3) (fma.f64 6 (/.f64 (fma.f64 (exp.f64 (cos.f64 lambda2)) (fma.f64 1/6 (pow.f64 (sin.f64 lambda2) 3) (*.f64 (sin.f64 lambda2) -1/6)) (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda2)) (*.f64 (cos.f64 lambda2) (sin.f64 lambda2))))) (exp.f64 (cos.f64 lambda2))) (*.f64 -6 (/.f64 (*.f64 (sin.f64 lambda2) (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (exp.f64 (cos.f64 lambda2))) (*.f64 (*.f64 1/2 (exp.f64 (cos.f64 lambda2))) (pow.f64 (sin.f64 lambda2) 2)))) (exp.f64 (cos.f64 lambda2)))))) (pow.f64 lambda1 3)) (cos.f64 phi2)))))))","(+.f64 (fma.f64 1/2 (*.f64 (-.f64 (/.f64 (*.f64 2 (fma.f64 1/2 (*.f64 (pow.f64 (sin.f64 lambda2) 2) (exp.f64 (cos.f64 lambda2))) (*.f64 (exp.f64 (cos.f64 lambda2)) (*.f64 (cos.f64 lambda2) -1/2)))) (exp.f64 (cos.f64 lambda2))) (pow.f64 (sin.f64 lambda2) 2)) (*.f64 (*.f64 lambda1 lambda1) (cos.f64 phi2))) (fma.f64 (*.f64 (sin.f64 lambda2) lambda1) (cos.f64 phi2) (fma.f64 (cos.f64 lambda2) (cos.f64 phi2) (cos.f64 phi1)))) (*.f64 (*.f64 (*.f64 1/6 (cos.f64 phi2)) (pow.f64 lambda1 3)) (fma.f64 2 (pow.f64 (sin.f64 lambda2) 3) (fma.f64 6 (/.f64 (fma.f64 -1/2 (*.f64 (cos.f64 lambda2) (*.f64 (sin.f64 lambda2) (exp.f64 (cos.f64 lambda2)))) (*.f64 (exp.f64 (cos.f64 lambda2)) (fma.f64 1/6 (pow.f64 (sin.f64 lambda2) 3) (*.f64 (sin.f64 lambda2) -1/6)))) (exp.f64 (cos.f64 lambda2))) (*.f64 -6 (*.f64 (/.f64 (sin.f64 lambda2) (exp.f64 (cos.f64 lambda2))) (fma.f64 1/2 (*.f64 (pow.f64 (sin.f64 lambda2) 2) (exp.f64 (cos.f64 lambda2))) (*.f64 (exp.f64 (cos.f64 lambda2)) (*.f64 (cos.f64 lambda2) -1/2)))))))))","(+.f64 (cos.f64 phi1) (+.f64 (*.f64 (cos.f64 phi2) (+.f64 (cos.f64 lambda2) (*.f64 1/6 (*.f64 (fma.f64 2 (pow.f64 (sin.f64 lambda2) 3) (fma.f64 -6 (*.f64 (*.f64 (exp.f64 (cos.f64 lambda2)) (+.f64 (*.f64 (cos.f64 lambda2) -1/2) (*.f64 1/2 (pow.f64 (sin.f64 lambda2) 2)))) (/.f64 (sin.f64 lambda2) (exp.f64 (cos.f64 lambda2)))) (*.f64 (/.f64 6 (exp.f64 (cos.f64 lambda2))) (*.f64 (exp.f64 (cos.f64 lambda2)) (+.f64 (fma.f64 1/6 (pow.f64 (sin.f64 lambda2) 3) (*.f64 (sin.f64 lambda2) -1/6)) (*.f64 -1/2 (*.f64 (cos.f64 lambda2) (sin.f64 lambda2)))))))) (pow.f64 lambda1 3))))) (*.f64 (cos.f64 phi2) (*.f64 lambda1 (+.f64 (*.f64 lambda1 (*.f64 1/2 (-.f64 (*.f64 (/.f64 2 (exp.f64 (cos.f64 lambda2))) (*.f64 (exp.f64 (cos.f64 lambda2)) (+.f64 (*.f64 (cos.f64 lambda2) -1/2) (*.f64 1/2 (pow.f64 (sin.f64 lambda2) 2))))) (pow.f64 (sin.f64 lambda2) 2)))) (sin.f64 lambda2))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (fma.f64 1/6 (*.f64 (fma.f64 2 (pow.f64 (sin.f64 lambda2) 3) (fma.f64 6 (/.f64 (exp.f64 (cos.f64 lambda2)) (/.f64 (exp.f64 (cos.f64 lambda2)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 lambda2) (sin.f64 lambda2))) (fma.f64 1/6 (pow.f64 (sin.f64 lambda2) 3) (*.f64 (sin.f64 lambda2) -1/6))))) (*.f64 -6 (*.f64 (*.f64 (exp.f64 (cos.f64 lambda2)) (+.f64 (*.f64 (cos.f64 lambda2) -1/2) (*.f64 1/2 (pow.f64 (sin.f64 lambda2) 2)))) (/.f64 (sin.f64 lambda2) (exp.f64 (cos.f64 lambda2))))))) (pow.f64 lambda1 3)) (fma.f64 1/2 (*.f64 lambda1 (*.f64 lambda1 (-.f64 (*.f64 (/.f64 2 (exp.f64 (cos.f64 lambda2))) (*.f64 (exp.f64 (cos.f64 lambda2)) (+.f64 (*.f64 (cos.f64 lambda2) -1/2) (*.f64 1/2 (pow.f64 (sin.f64 lambda2) 2))))) (pow.f64 (sin.f64 lambda2) 2)))) (fma.f64 (sin.f64 lambda2) lambda1 (cos.f64 lambda2))))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)))))))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (cos.f64 lambda1) (cos.f64 phi1))","(fma.f64 (cos.f64 lambda1) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (cos.f64 phi1)))","(fma.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)) (fma.f64 (cos.f64 phi2) (cos.f64 lambda1) (cos.f64 phi1)))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1))))","(+.f64 (cos.f64 phi1) (*.f64 (fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1)) (cos.f64 phi2)))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (+.f64 (cos.f64 phi1) (*.f64 1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (cos.f64 lambda1)))) (exp.f64 (cos.f64 lambda1)))) (*.f64 -1 (pow.f64 (sin.f64 lambda1) 2)))))))))","(fma.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (fma.f64 (cos.f64 phi2) (cos.f64 lambda1) (cos.f64 phi1)) (*.f64 1/2 (*.f64 (*.f64 (*.f64 lambda2 lambda2) (cos.f64 phi2)) (fma.f64 2 (/.f64 (fma.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/2 (*.f64 (cos.f64 lambda1) (exp.f64 (cos.f64 lambda1))))) (exp.f64 (cos.f64 lambda1))) (neg.f64 (pow.f64 (sin.f64 lambda1) 2)))))))","(+.f64 (fma.f64 1/2 (*.f64 (-.f64 (/.f64 (*.f64 2 (fma.f64 (*.f64 1/2 (exp.f64 (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2) (*.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 (cos.f64 lambda1) -1/2)))) (exp.f64 (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 (*.f64 lambda2 lambda2) (cos.f64 phi2))) (cos.f64 phi1)) (*.f64 (cos.f64 phi2) (fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1))))","(+.f64 (fma.f64 (cos.f64 lambda1) (cos.f64 phi2) (cos.f64 phi1)) (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 1/2 (*.f64 lambda2 lambda2)) (-.f64 (*.f64 (/.f64 2 (exp.f64 (cos.f64 lambda1))) (*.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/2 (cos.f64 lambda1))))) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 lambda2 (sin.f64 lambda1)))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (fma.f64 1/2 (*.f64 lambda2 (*.f64 lambda2 (-.f64 (*.f64 2 (/.f64 (exp.f64 (cos.f64 lambda1)) (/.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/2 (cos.f64 lambda1)))))) (pow.f64 (sin.f64 lambda1) 2)))) (fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1)))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 6 (/.f64 (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 (sin.f64 lambda1) (cos.f64 lambda1)))) (*.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 -1/6 (sin.f64 lambda1)) (*.f64 1/6 (pow.f64 (sin.f64 lambda1) 3))))) (exp.f64 (cos.f64 lambda1)))) (+.f64 (*.f64 -6 (/.f64 (*.f64 (sin.f64 lambda1) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (cos.f64 lambda1))))) (exp.f64 (cos.f64 lambda1)))) (*.f64 2 (pow.f64 (sin.f64 lambda1) 3))))))) (*.f64 1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (cos.f64 lambda1)))) (exp.f64 (cos.f64 lambda1)))) (*.f64 -1 (pow.f64 (sin.f64 lambda1) 2))))))))))","(fma.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (fma.f64 (cos.f64 phi2) (cos.f64 lambda1) (cos.f64 phi1)) (fma.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (fma.f64 6 (/.f64 (fma.f64 -1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 (cos.f64 lambda1) (sin.f64 lambda1))) (*.f64 (exp.f64 (cos.f64 lambda1)) (fma.f64 -1/6 (sin.f64 lambda1) (*.f64 1/6 (pow.f64 (sin.f64 lambda1) 3))))) (exp.f64 (cos.f64 lambda1))) (fma.f64 -6 (/.f64 (sin.f64 lambda1) (/.f64 (exp.f64 (cos.f64 lambda1)) (fma.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/2 (*.f64 (cos.f64 lambda1) (exp.f64 (cos.f64 lambda1))))))) (*.f64 2 (pow.f64 (sin.f64 lambda1) 3)))) (cos.f64 phi2))) (*.f64 1/2 (*.f64 (*.f64 (*.f64 lambda2 lambda2) (cos.f64 phi2)) (fma.f64 2 (/.f64 (fma.f64 1/2 (*.f64 (exp.f64 (cos.f64 lambda1)) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/2 (*.f64 (cos.f64 lambda1) (exp.f64 (cos.f64 lambda1))))) (exp.f64 (cos.f64 lambda1))) (neg.f64 (pow.f64 (sin.f64 lambda1) 2))))))))","(+.f64 (+.f64 (fma.f64 1/2 (*.f64 (-.f64 (/.f64 (*.f64 2 (fma.f64 (*.f64 1/2 (exp.f64 (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2) (*.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 (cos.f64 lambda1) -1/2)))) (exp.f64 (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 (*.f64 lambda2 lambda2) (cos.f64 phi2))) (cos.f64 phi1)) (*.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (cos.f64 phi2))) (fma.f64 6 (/.f64 (fma.f64 (exp.f64 (cos.f64 lambda1)) (fma.f64 1/6 (pow.f64 (sin.f64 lambda1) 3) (*.f64 -1/6 (sin.f64 lambda1))) (*.f64 (sin.f64 lambda1) (*.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 (cos.f64 lambda1) -1/2)))) (exp.f64 (cos.f64 lambda1))) (fma.f64 2 (pow.f64 (sin.f64 lambda1) 3) (*.f64 -6 (*.f64 (/.f64 (sin.f64 lambda1) (exp.f64 (cos.f64 lambda1))) (fma.f64 (*.f64 1/2 (exp.f64 (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2) (*.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 (cos.f64 lambda1) -1/2))))))))) (*.f64 (cos.f64 phi2) (fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1))))","(+.f64 (cos.f64 phi1) (+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (*.f64 lambda2 lambda2) (*.f64 1/2 (-.f64 (*.f64 (/.f64 2 (exp.f64 (cos.f64 lambda1))) (*.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/2 (cos.f64 lambda1))))) (pow.f64 (sin.f64 lambda1) 2)))) (*.f64 (fma.f64 6 (/.f64 (*.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 lambda1) (sin.f64 lambda1))) (fma.f64 1/6 (pow.f64 (sin.f64 lambda1) 3) (*.f64 -1/6 (sin.f64 lambda1))))) (exp.f64 (cos.f64 lambda1))) (fma.f64 2 (pow.f64 (sin.f64 lambda1) 3) (*.f64 (/.f64 -6 (exp.f64 (cos.f64 lambda1))) (*.f64 (sin.f64 lambda1) (*.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/2 (cos.f64 lambda1)))))))) (*.f64 1/6 (pow.f64 lambda2 3))))) (*.f64 (fma.f64 lambda2 (sin.f64 lambda1) (cos.f64 lambda1)) (cos.f64 phi2))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (fma.f64 1/2 (*.f64 lambda2 (*.f64 lambda2 (-.f64 (*.f64 2 (/.f64 (exp.f64 (cos.f64 lambda1)) (/.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/2 (cos.f64 lambda1)))))) (pow.f64 (sin.f64 lambda1) 2)))) (fma.f64 lambda2 (sin.f64 lambda1) (fma.f64 1/6 (*.f64 (pow.f64 lambda2 3) (fma.f64 6 (/.f64 (exp.f64 (cos.f64 lambda1)) (/.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 lambda1) (sin.f64 lambda1))) (fma.f64 1/6 (pow.f64 (sin.f64 lambda1) 3) (*.f64 -1/6 (sin.f64 lambda1)))))) (fma.f64 2 (pow.f64 (sin.f64 lambda1) 3) (*.f64 -6 (*.f64 (/.f64 (exp.f64 (cos.f64 lambda1)) (/.f64 (exp.f64 (cos.f64 lambda1)) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/2 (cos.f64 lambda1))))) (sin.f64 lambda1)))))) (cos.f64 lambda1))))))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 1 (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)) 1)","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 phi1 2)) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2))))","(+.f64 1 (fma.f64 -1/2 (*.f64 phi1 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2))))","(+.f64 1 (fma.f64 -1/2 (*.f64 phi1 phi1) (*.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2))))","(+.f64 1 (fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (*.f64 -1/2 (*.f64 phi1 phi1))))","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (+.f64 (*.f64 -1/2 (pow.f64 phi1 2)) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))))","(+.f64 1 (fma.f64 1/24 (pow.f64 phi1 4) (fma.f64 -1/2 (*.f64 phi1 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))))","(+.f64 (fma.f64 1/24 (pow.f64 phi1 4) (*.f64 (*.f64 -1/2 phi1) phi1)) (fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) 1))","(+.f64 (fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) 1) (fma.f64 1/24 (pow.f64 phi1 4) (*.f64 -1/2 (*.f64 phi1 phi1))))","(+.f64 (*.f64 -1/720 (pow.f64 phi1 6)) (+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (+.f64 (*.f64 -1/2 (pow.f64 phi1 2)) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2))))))","(fma.f64 -1/720 (pow.f64 phi1 6) (+.f64 1 (fma.f64 1/24 (pow.f64 phi1 4) (fma.f64 -1/2 (*.f64 phi1 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2))))))","(+.f64 (fma.f64 1/24 (pow.f64 phi1 4) (fma.f64 -1/2 (*.f64 phi1 phi1) (*.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2)))) (fma.f64 -1/720 (pow.f64 phi1 6) 1))","(+.f64 (fma.f64 1/24 (pow.f64 phi1 4) (fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (*.f64 -1/2 (*.f64 phi1 phi1)))) (fma.f64 -1/720 (pow.f64 phi1 6) 1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (log.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 (cos.f64 lambda2) (cos.f64 lambda1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (cos.f64 phi2) (cos.f64 phi1))"]],"stop":[["node limit",1]],"time":66.2060546875,"type":"simplify"},{"compiler":[[27919,5276]],"time":111.518798828125,"type":"eval"},{"alts":[["(+.f64 lambda1 (atan2.f64 (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","fresh",21.287267577385347],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (/.f64 (-.f64 (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) (pow.f64 (cos.f64 phi1) 2)) (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (neg.f64 (cos.f64 phi1))))))","fresh",4.726012577779497],["(+.f64 lambda1 (atan2.f64 (log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","fresh",13.916009872081434],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cos.f64 phi1))))","next",0.2629721955517408],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (/.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 3) (pow.f64 (cos.f64 phi1) 3)) (fma.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (pow.f64 (cos.f64 phi1) 2) (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1)))))))","fresh",1.357709870075207],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (+.f64 (*.f64 2 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2))))) (cos.f64 phi1))))","fresh",0.2753547150886248],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (-.f64 (exp.f64 (log1p.f64 (cos.f64 (-.f64 lambda1 lambda2)))) 1) (cos.f64 phi1))))","fresh",1.3508289273889786],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (+.f64 (fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))) (fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))))","fresh",0.3445047935349895],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) 3)) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","fresh",1.5087179997704414],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) 6) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))))","fresh",0.2761072349243373],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 3)))","fresh",1.423534957812047],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (pow.f64 (sqrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 2)))","fresh",14.031584128452725],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (log.f64 (exp.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))))","fresh",1.3794245860603174]],"compiler":[[55,31],[45,20],[27,17],[66,33],[81,33],[66,33],[27,17],[73,37],[26,16],[51,28],[48,25],[26,16],[47,24],[55,31],[45,20],[27,17],[66,33],[81,33],[66,33],[27,17],[73,37],[26,16],[51,28],[48,25],[26,16],[47,24]],"count":[[474,13]],"kept":[{"done":[0,0],"fresh":[13,8],"new":[460,5],"picked":[1,0]}],"min-error":[0.051675073009749536],"time":293.711181640625,"type":"prune"},{"compiler":[[365,87]],"locations":[["(fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cos.f64 phi1))",0.3872220338418053,true],["(*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))))",0.502285009768442,false],["(pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))",0.5957413086106522,true],["(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))))))",0.8917501084619441,true]],"time":71.837890625,"type":"localize"},{"count":[[3,96]],"series":[["(fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cos.f64 phi1))","phi1","-inf",0.3330078125],["(fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cos.f64 phi1))","phi1","inf",15.156982421875],["(fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cos.f64 phi1))","phi1","0",0.7451171875],["(fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cos.f64 phi1))","lambda2","-inf",0.817138671875],["(fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cos.f64 phi1))","lambda2","inf",0.677978515625],["(fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cos.f64 phi1))","lambda2","0",0.88916015625],["(fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cos.f64 phi1))","lambda1","-inf",0.655029296875],["(fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cos.f64 phi1))","lambda1","inf",0.68994140625],["(fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cos.f64 phi1))","lambda1","0",0.97412109375],["(fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cos.f64 phi1))","phi2","-inf",0.494140625],["(fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cos.f64 phi1))","phi2","inf",38.177978515625],["(fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cos.f64 phi1))","phi2","0",1.526123046875],["(pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))","lambda2","-inf",0.15380859375],["(pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))","lambda2","inf",0.172119140625],["(pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))","lambda2","0",0.534912109375],["(pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))","lambda1","-inf",0.156982421875],["(pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))","lambda1","inf",0.18310546875],["(pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))","lambda1","0",0.818115234375],["(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))))))","lambda2","-inf",15.633056640625],["(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))))))","lambda2","inf",29.885009765625],["(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))))))","lambda2","0",2.34814453125],["(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))))))","lambda1","-inf",29.97802734375],["(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))))))","lambda1","inf",53.755126953125],["(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))))))","lambda1","0",2.125]],"time":197.592041015625,"type":"series"},{"count":[[3,68]],"egraph":[[2,6429,80,0.04334091700000001],[1,509,80,0.009451417],[0,25,92,0.000626417]],"inputs":[["(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))))))","(pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))","(fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cos.f64 phi1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (log.f64 (sqrt.f64 (exp.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) 1) (*.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (pow.f64 (cbrt.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) 2) (cbrt.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (sqrt.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) 3) (pow.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) 3)) (+.f64 (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (-.f64 (*.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2))))) (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (*.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))))) (-.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))) 2) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (/.f64 (cos.f64 lambda2) 1)) (pow.f64 (exp.f64 (cos.f64 lambda1)) (/.f64 (cos.f64 lambda2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 (*.f64 2 (cos.f64 lambda2))) (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 lambda1))) 2) (*.f64 2 (cos.f64 lambda2))) (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 lambda1))) (*.f64 2 (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (exp.f64 (cos.f64 lambda1))) (*.f64 2 (cos.f64 lambda2))) (pow.f64 (sqrt.f64 (exp.f64 (cos.f64 lambda1))) (*.f64 2 (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))) 2) 1) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))))) 2)) (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))) 2) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (/.f64 (cos.f64 lambda2) 1)))) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (/.f64 (cos.f64 lambda2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (*.f64 2 (cos.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) 2)) (cos.f64 lambda2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) 1) (cos.f64 phi1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1))) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1))) 2) (cbrt.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1))) (sqrt.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) 3) (pow.f64 (cos.f64 phi1) 3)) (+.f64 (*.f64 (*.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) (*.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (-.f64 (pow.f64 (cos.f64 phi1) 2) (*.f64 (*.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) (cos.f64 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) (*.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) (neg.f64 (pow.f64 (cos.f64 phi1) 2))) (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (neg.f64 (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1))) 1))))))"]],"rules":[["egg-rr",23],["egg-rr",21],["egg-rr",24]],"stop":[["node limit",1]],"time":71.257080078125,"type":"rewrite"},{"count":[[164,139]],"egraph":[[2,3226,4115,0.019288625],[1,849,4709,0.006449041],[0,262,4983,0.001451625]],"inputs":[["(log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1/3))","(+.f64 (*.f64 (sin.f64 lambda2) lambda1) (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1/3)))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 2 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (cos.f64 lambda2)))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda2)))) 1/3)))) (pow.f64 lambda1 2))) (+.f64 (*.f64 (sin.f64 lambda2) lambda1) (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1/3))))","(+.f64 (*.f64 1/6 (*.f64 (+.f64 (*.f64 -6 (*.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (cos.f64 lambda2)))) (sin.f64 lambda2)) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda2)))) 1/3))) (+.f64 (*.f64 6 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda2)))) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (sin.f64 lambda2) 3)) (*.f64 -1/6 (sin.f64 lambda2))) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (*.f64 (sin.f64 lambda2) (cos.f64 lambda2))))))) (*.f64 2 (pow.f64 (sin.f64 lambda2) 3)))) (pow.f64 lambda1 3))) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 2 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (cos.f64 lambda2)))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda2)))) 1/3)))) (pow.f64 lambda1 2))) (+.f64 (*.f64 (sin.f64 lambda2) lambda1) (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1/3)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) 1/3))","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) 1/3)))","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) 1/3)) (*.f64 1/2 (*.f64 (pow.f64 lambda2 2) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (cos.f64 lambda1)))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (pow.f64 (sin.f64 lambda1) 2))))))))","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (+.f64 (*.f64 -6 (*.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (cos.f64 lambda1)))) (sin.f64 lambda1)) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3))) (+.f64 (*.f64 2 (pow.f64 (sin.f64 lambda1) 3)) (*.f64 6 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (+.f64 (*.f64 -1/6 (sin.f64 lambda1)) (*.f64 1/6 (pow.f64 (sin.f64 lambda1) 3)))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda1))))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3))))))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) 1/3)) (*.f64 1/2 (*.f64 (pow.f64 lambda2 2) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (cos.f64 lambda1)))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (pow.f64 (sin.f64 lambda1) 2)))))))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(exp.f64 (*.f64 2 (cos.f64 lambda2)))","(+.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)))))","(+.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) (*.f64 (+.f64 (*.f64 1/12 (cos.f64 lambda2)) (*.f64 1/2 (pow.f64 (cos.f64 lambda2) 2))) (pow.f64 lambda1 4))) (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))))))","(+.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (cos.f64 lambda2) 3)) (+.f64 (*.f64 -1/360 (cos.f64 lambda2)) (*.f64 -1/12 (pow.f64 (cos.f64 lambda2) 2)))) (pow.f64 lambda1 6))) (+.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) (*.f64 (+.f64 (*.f64 1/12 (cos.f64 lambda2)) (*.f64 1/2 (pow.f64 (cos.f64 lambda2) 2))) (pow.f64 lambda1 4))) (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)))))))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(exp.f64 (*.f64 2 (cos.f64 lambda1)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 lambda2 2) (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) (cos.f64 lambda1)))) (exp.f64 (*.f64 2 (cos.f64 lambda1))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 lambda2 2) (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) (cos.f64 lambda1)))) (+.f64 (*.f64 (+.f64 (*.f64 1/12 (cos.f64 lambda1)) (*.f64 1/2 (pow.f64 (cos.f64 lambda1) 2))) (*.f64 (pow.f64 lambda2 4) (exp.f64 (*.f64 2 (cos.f64 lambda1))))) (exp.f64 (*.f64 2 (cos.f64 lambda1)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 lambda2 2) (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) (cos.f64 lambda1)))) (+.f64 (*.f64 (+.f64 (*.f64 1/12 (cos.f64 lambda1)) (*.f64 1/2 (pow.f64 (cos.f64 lambda1) 2))) (*.f64 (pow.f64 lambda2 4) (exp.f64 (*.f64 2 (cos.f64 lambda1))))) (+.f64 (*.f64 (pow.f64 lambda2 6) (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) (+.f64 (*.f64 -1/360 (cos.f64 lambda1)) (+.f64 (*.f64 -1/6 (pow.f64 (cos.f64 lambda1) 3)) (*.f64 -1/12 (pow.f64 (cos.f64 lambda1) 2)))))) (exp.f64 (*.f64 2 (cos.f64 lambda1))))))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (cos.f64 phi1) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))))","(+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (pow.f64 phi2 2))) (+.f64 (cos.f64 phi1) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))))","(+.f64 (*.f64 1/24 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (pow.f64 phi2 4))) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (pow.f64 phi2 2))) (+.f64 (cos.f64 phi1) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))))))","(+.f64 (*.f64 1/24 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (pow.f64 phi2 4))) (+.f64 (*.f64 -1/720 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (pow.f64 phi2 6))) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (pow.f64 phi2 2))) (+.f64 (cos.f64 phi1) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))))))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (cos.f64 lambda2)) (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1/3))) (cos.f64 phi2)) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (cos.f64 lambda2)) (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1/3))) (cos.f64 phi2))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (cos.f64 lambda2)) (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1/3))) (cos.f64 phi2)) (*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 2 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (cos.f64 lambda2)))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda2)))) 1/3))))) (*.f64 -1/6 (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 2))))))","(+.f64 (*.f64 1/6 (*.f64 (cos.f64 phi2) (*.f64 (+.f64 (*.f64 -6 (*.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (cos.f64 lambda2)))) (sin.f64 lambda2)) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda2)))) 1/3))) (+.f64 (*.f64 6 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda2)))) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (*.f64 (sin.f64 lambda2) (cos.f64 lambda2)))) (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (+.f64 (*.f64 1/6 (pow.f64 (sin.f64 lambda2) 3)) (*.f64 -1/6 (sin.f64 lambda2))))))) (*.f64 2 (pow.f64 (sin.f64 lambda2) 3)))) (pow.f64 lambda1 3)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (cos.f64 lambda2)) (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1/3))) (cos.f64 phi2)) (*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 2 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (cos.f64 lambda2)))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda2)))) 1/3))))) (*.f64 -1/6 (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 2)))))))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) 1/3)) (*.f64 1/3 (cos.f64 lambda1)))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) 1/3)) (*.f64 1/3 (cos.f64 lambda1)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (cos.f64 phi1)))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) 1/3)) (*.f64 1/3 (cos.f64 lambda1)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (cos.f64 lambda1)))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (pow.f64 (sin.f64 lambda1) 2))))) (*.f64 -1/6 (cos.f64 lambda1))) (*.f64 (pow.f64 lambda2 2) (cos.f64 phi2))))))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) 1/3)) (*.f64 1/3 (cos.f64 lambda1)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 -6 (*.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (cos.f64 lambda1)))) (sin.f64 lambda1)) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3))) (+.f64 (*.f64 2 (pow.f64 (sin.f64 lambda1) 3)) (*.f64 6 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (+.f64 (*.f64 -1/6 (sin.f64 lambda1)) (*.f64 1/6 (pow.f64 (sin.f64 lambda1) 3)))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda1))))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3)))))))) (*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (cos.f64 lambda1)))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (pow.f64 (sin.f64 lambda1) 2))))) (*.f64 -1/6 (cos.f64 lambda1))) (*.f64 (pow.f64 lambda2 2) (cos.f64 phi2)))))))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(+.f64 1 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 phi1 2)) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2))))","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (+.f64 (*.f64 -1/2 (pow.f64 phi1 2)) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))))","(+.f64 (*.f64 -1/720 (pow.f64 phi1 6)) (+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (+.f64 (*.f64 -1/2 (pow.f64 phi1 2)) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2))))))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))"]],"method":["egg-herbie"],"outputs":[["(log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1/3))","(log.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))))","(*.f64 1/3 (*.f64 2 (cos.f64 lambda2)))","(+.f64 (*.f64 (sin.f64 lambda2) lambda1) (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1/3)))","(fma.f64 (sin.f64 lambda2) lambda1 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))))","(fma.f64 1/3 (*.f64 2 (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) lambda1))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 2 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (cos.f64 lambda2)))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda2)))) 1/3)))) (pow.f64 lambda1 2))) (+.f64 (*.f64 (sin.f64 lambda2) lambda1) (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1/3))))","(fma.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 lambda2) 2)) (*.f64 2 (*.f64 (fma.f64 1/2 (*.f64 (pow.f64 (sin.f64 lambda2) 2) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))) (*.f64 -1/3 (*.f64 (cos.f64 lambda2) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))))) (cbrt.f64 (exp.f64 (neg.f64 (*.f64 2 (cos.f64 lambda2)))))))) (*.f64 lambda1 lambda1)) (fma.f64 (sin.f64 lambda2) lambda1 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))))))","(fma.f64 1/2 (*.f64 lambda1 (*.f64 lambda1 (-.f64 (*.f64 (fma.f64 1/2 (*.f64 (pow.f64 (sin.f64 lambda2) 2) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (*.f64 (cos.f64 lambda2) -1/3))) (*.f64 (cbrt.f64 (exp.f64 (*.f64 (cos.f64 lambda2) -2))) 2)) (pow.f64 (sin.f64 lambda2) 2)))) (fma.f64 1/3 (*.f64 2 (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) lambda1)))","(fma.f64 (+.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda2) 2)) (*.f64 -1/3 (cos.f64 lambda2)))) (cbrt.f64 (pow.f64 (exp.f64 -2) (cos.f64 lambda2)))) (*.f64 (pow.f64 (sin.f64 lambda2) 2) -1/2)) (*.f64 lambda1 lambda1) (fma.f64 1/3 (*.f64 2 (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) lambda1)))","(+.f64 (*.f64 1/6 (*.f64 (+.f64 (*.f64 -6 (*.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (cos.f64 lambda2)))) (sin.f64 lambda2)) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda2)))) 1/3))) (+.f64 (*.f64 6 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda2)))) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (pow.f64 (sin.f64 lambda2) 3)) (*.f64 -1/6 (sin.f64 lambda2))) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3)) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (*.f64 (sin.f64 lambda2) (cos.f64 lambda2))))))) (*.f64 2 (pow.f64 (sin.f64 lambda2) 3)))) (pow.f64 lambda1 3))) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 2 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (cos.f64 lambda2)))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda2)))) 1/3)))) (pow.f64 lambda1 2))) (+.f64 (*.f64 (sin.f64 lambda2) lambda1) (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1/3)))))","(fma.f64 1/6 (*.f64 (pow.f64 lambda1 3) (fma.f64 -6 (*.f64 (fma.f64 1/2 (*.f64 (pow.f64 (sin.f64 lambda2) 2) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))) (*.f64 -1/3 (*.f64 (cos.f64 lambda2) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))))) (*.f64 (sin.f64 lambda2) (cbrt.f64 (exp.f64 (neg.f64 (*.f64 2 (cos.f64 lambda2))))))) (fma.f64 6 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 2 (cos.f64 lambda2))))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (*.f64 (cos.f64 lambda2) (sin.f64 lambda2))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (fma.f64 1/6 (pow.f64 (sin.f64 lambda2) 3) (*.f64 (sin.f64 lambda2) -1/6))))) (*.f64 2 (pow.f64 (sin.f64 lambda2) 3))))) (fma.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 lambda2) 2)) (*.f64 2 (*.f64 (fma.f64 1/2 (*.f64 (pow.f64 (sin.f64 lambda2) 2) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))) (*.f64 -1/3 (*.f64 (cos.f64 lambda2) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))))) (cbrt.f64 (exp.f64 (neg.f64 (*.f64 2 (cos.f64 lambda2)))))))) (*.f64 lambda1 lambda1)) (fma.f64 (sin.f64 lambda2) lambda1 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))))))","(fma.f64 1/6 (*.f64 (pow.f64 lambda1 3) (fma.f64 (*.f64 (*.f64 -6 (sin.f64 lambda2)) (fma.f64 1/2 (*.f64 (pow.f64 (sin.f64 lambda2) 2) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (*.f64 (cos.f64 lambda2) -1/3)))) (cbrt.f64 (exp.f64 (*.f64 (cos.f64 lambda2) -2))) (fma.f64 2 (pow.f64 (sin.f64 lambda2) 3) (*.f64 (cbrt.f64 (exp.f64 (*.f64 (cos.f64 lambda2) -2))) (*.f64 (fma.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (fma.f64 1/6 (pow.f64 (sin.f64 lambda2) 3) (*.f64 (sin.f64 lambda2) -1/6)) (*.f64 (*.f64 -1/3 (*.f64 (cos.f64 lambda2) (sin.f64 lambda2))) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))))) 6))))) (fma.f64 1/2 (*.f64 lambda1 (*.f64 lambda1 (-.f64 (*.f64 (fma.f64 1/2 (*.f64 (pow.f64 (sin.f64 lambda2) 2) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (*.f64 (cos.f64 lambda2) -1/3))) (*.f64 (cbrt.f64 (exp.f64 (*.f64 (cos.f64 lambda2) -2))) 2)) (pow.f64 (sin.f64 lambda2) 2)))) (fma.f64 1/3 (*.f64 2 (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) lambda1))))","(fma.f64 1/6 (*.f64 (pow.f64 lambda1 3) (+.f64 (*.f64 2 (pow.f64 (sin.f64 lambda2) 3)) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 -2) (cos.f64 lambda2))) (+.f64 (*.f64 (*.f64 -6 (sin.f64 lambda2)) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda2) 2)) (*.f64 -1/3 (cos.f64 lambda2))))) (*.f64 6 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 lambda2) (sin.f64 lambda2))) (fma.f64 1/6 (pow.f64 (sin.f64 lambda2) 3) (*.f64 (sin.f64 lambda2) -1/6))))))))) (fma.f64 (+.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda2) 2)) (*.f64 -1/3 (cos.f64 lambda2)))) (cbrt.f64 (pow.f64 (exp.f64 -2) (cos.f64 lambda2)))) (*.f64 (pow.f64 (sin.f64 lambda2) 2) -1/2)) (*.f64 lambda1 lambda1) (fma.f64 1/3 (*.f64 2 (cos.f64 lambda2)) (*.f64 (sin.f64 lambda2) lambda1))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) 1/3))","(log.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))))","(*.f64 1/3 (*.f64 2 (cos.f64 lambda1)))","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) 1/3)))","(fma.f64 lambda2 (sin.f64 lambda1) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)))))","(fma.f64 1/3 (*.f64 2 (cos.f64 lambda1)) (*.f64 lambda2 (sin.f64 lambda1)))","(fma.f64 lambda2 (sin.f64 lambda1) (*.f64 1/3 (*.f64 2 (cos.f64 lambda1))))","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) 1/3)) (*.f64 1/2 (*.f64 (pow.f64 lambda2 2) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (cos.f64 lambda1)))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (pow.f64 (sin.f64 lambda1) 2))))))))","(+.f64 (fma.f64 lambda2 (sin.f64 lambda1) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))))) (*.f64 (*.f64 1/2 (*.f64 lambda2 lambda2)) (fma.f64 2 (*.f64 (fma.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/3 (*.f64 (cos.f64 lambda1) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)))))) (cbrt.f64 (exp.f64 (neg.f64 (*.f64 2 (cos.f64 lambda1)))))) (*.f64 -1 (pow.f64 (sin.f64 lambda1) 2)))))","(fma.f64 lambda2 (sin.f64 lambda1) (fma.f64 1/3 (*.f64 2 (cos.f64 lambda1)) (*.f64 1/2 (*.f64 lambda2 (*.f64 lambda2 (-.f64 (*.f64 (fma.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/3 (*.f64 (cos.f64 lambda1) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)))))) (*.f64 (cbrt.f64 (exp.f64 (*.f64 (cos.f64 lambda1) -2))) 2)) (pow.f64 (sin.f64 lambda1) 2)))))))","(fma.f64 lambda2 (sin.f64 lambda1) (fma.f64 1/3 (*.f64 2 (cos.f64 lambda1)) (*.f64 (*.f64 lambda2 lambda2) (+.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/3 (cos.f64 lambda1)))) (cbrt.f64 (pow.f64 (exp.f64 -2) (cos.f64 lambda1)))) (*.f64 (pow.f64 (sin.f64 lambda1) 2) -1/2)))))","(+.f64 (*.f64 lambda2 (sin.f64 lambda1)) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (+.f64 (*.f64 -6 (*.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (cos.f64 lambda1)))) (sin.f64 lambda1)) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3))) (+.f64 (*.f64 2 (pow.f64 (sin.f64 lambda1) 3)) (*.f64 6 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (+.f64 (*.f64 -1/6 (sin.f64 lambda1)) (*.f64 1/6 (pow.f64 (sin.f64 lambda1) 3)))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda1))))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3))))))) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) 1/3)) (*.f64 1/2 (*.f64 (pow.f64 lambda2 2) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (cos.f64 lambda1)))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (pow.f64 (sin.f64 lambda1) 2)))))))))","(fma.f64 lambda2 (sin.f64 lambda1) (fma.f64 1/6 (*.f64 (pow.f64 lambda2 3) (fma.f64 -6 (*.f64 (fma.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/3 (*.f64 (cos.f64 lambda1) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)))))) (*.f64 (sin.f64 lambda1) (cbrt.f64 (exp.f64 (neg.f64 (*.f64 2 (cos.f64 lambda1))))))) (fma.f64 2 (pow.f64 (sin.f64 lambda1) 3) (*.f64 (*.f64 6 (fma.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (fma.f64 -1/6 (sin.f64 lambda1) (*.f64 1/6 (pow.f64 (sin.f64 lambda1) 3))) (*.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda1) (cos.f64 lambda1)))))) (cbrt.f64 (exp.f64 (neg.f64 (*.f64 2 (cos.f64 lambda1))))))))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)))) (*.f64 (*.f64 1/2 (*.f64 lambda2 lambda2)) (fma.f64 2 (*.f64 (fma.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/3 (*.f64 (cos.f64 lambda1) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)))))) (cbrt.f64 (exp.f64 (neg.f64 (*.f64 2 (cos.f64 lambda1)))))) (*.f64 -1 (pow.f64 (sin.f64 lambda1) 2)))))))","(fma.f64 lambda2 (sin.f64 lambda1) (fma.f64 1/6 (*.f64 (pow.f64 lambda2 3) (fma.f64 -6 (*.f64 (fma.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/3 (*.f64 (cos.f64 lambda1) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)))))) (*.f64 (sin.f64 lambda1) (cbrt.f64 (exp.f64 (*.f64 (cos.f64 lambda1) -2))))) (fma.f64 2 (pow.f64 (sin.f64 lambda1) 3) (*.f64 6 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (cos.f64 lambda1) -2))) (fma.f64 -1/3 (*.f64 (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (fma.f64 1/6 (pow.f64 (sin.f64 lambda1) 3) (*.f64 -1/6 (sin.f64 lambda1)))))))))) (fma.f64 1/3 (*.f64 2 (cos.f64 lambda1)) (*.f64 1/2 (*.f64 lambda2 (*.f64 lambda2 (-.f64 (*.f64 (fma.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/3 (*.f64 (cos.f64 lambda1) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)))))) (*.f64 (cbrt.f64 (exp.f64 (*.f64 (cos.f64 lambda1) -2))) 2)) (pow.f64 (sin.f64 lambda1) 2))))))))","(fma.f64 lambda2 (sin.f64 lambda1) (fma.f64 1/6 (*.f64 (pow.f64 lambda2 3) (+.f64 (*.f64 2 (pow.f64 (sin.f64 lambda1) 3)) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 -2) (cos.f64 lambda1))) (+.f64 (*.f64 -6 (*.f64 (sin.f64 lambda1) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/3 (cos.f64 lambda1)))))) (*.f64 6 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (+.f64 (fma.f64 1/6 (pow.f64 (sin.f64 lambda1) 3) (*.f64 -1/6 (sin.f64 lambda1))) (*.f64 -1/3 (*.f64 (sin.f64 lambda1) (cos.f64 lambda1)))))))))) (fma.f64 1/3 (*.f64 2 (cos.f64 lambda1)) (*.f64 (*.f64 lambda2 lambda2) (+.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/3 (cos.f64 lambda1)))) (cbrt.f64 (pow.f64 (exp.f64 -2) (cos.f64 lambda1)))) (*.f64 (pow.f64 (sin.f64 lambda1) 2) -1/2))))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))","(log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))","(+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(exp.f64 (*.f64 2 (cos.f64 lambda2)))","(pow.f64 (exp.f64 2) (cos.f64 lambda2))","(+.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)))))","(+.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (neg.f64 (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)))))","(-.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1))))","(*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (-.f64 1 (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1))))","(+.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) (*.f64 (+.f64 (*.f64 1/12 (cos.f64 lambda2)) (*.f64 1/2 (pow.f64 (cos.f64 lambda2) 2))) (pow.f64 lambda1 4))) (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2))))))","(+.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (fma.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (*.f64 (fma.f64 1/12 (cos.f64 lambda2) (*.f64 1/2 (pow.f64 (cos.f64 lambda2) 2))) (pow.f64 lambda1 4)) (neg.f64 (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1))))))","(-.f64 (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (+.f64 1 (*.f64 (fma.f64 (cos.f64 lambda2) 1/12 (*.f64 1/2 (pow.f64 (cos.f64 lambda2) 2))) (pow.f64 lambda1 4)))) (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1))))","(*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (-.f64 (+.f64 (*.f64 (*.f64 (cos.f64 lambda2) (+.f64 1/12 (*.f64 (cos.f64 lambda2) 1/2))) (pow.f64 lambda1 4)) 1) (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1))))","(+.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (cos.f64 lambda2) 3)) (+.f64 (*.f64 -1/360 (cos.f64 lambda2)) (*.f64 -1/12 (pow.f64 (cos.f64 lambda2) 2)))) (pow.f64 lambda1 6))) (+.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) (*.f64 (+.f64 (*.f64 1/12 (cos.f64 lambda2)) (*.f64 1/2 (pow.f64 (cos.f64 lambda2) 2))) (pow.f64 lambda1 4))) (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) (*.f64 (cos.f64 lambda2) (pow.f64 lambda1 2)))))))","(fma.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (*.f64 (fma.f64 -1/6 (pow.f64 (cos.f64 lambda2) 3) (fma.f64 -1/360 (cos.f64 lambda2) (*.f64 (pow.f64 (cos.f64 lambda2) 2) -1/12))) (pow.f64 lambda1 6)) (+.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (fma.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (*.f64 (fma.f64 1/12 (cos.f64 lambda2) (*.f64 1/2 (pow.f64 (cos.f64 lambda2) 2))) (pow.f64 lambda1 4)) (neg.f64 (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)))))))","(fma.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (*.f64 (fma.f64 -1/6 (pow.f64 (cos.f64 lambda2) 3) (fma.f64 (cos.f64 lambda2) -1/360 (*.f64 (pow.f64 (cos.f64 lambda2) 2) -1/12))) (pow.f64 lambda1 6)) (-.f64 (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (+.f64 1 (*.f64 (fma.f64 (cos.f64 lambda2) 1/12 (*.f64 1/2 (pow.f64 (cos.f64 lambda2) 2))) (pow.f64 lambda1 4)))) (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)))))","(fma.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (*.f64 (fma.f64 -1/6 (pow.f64 (cos.f64 lambda2) 3) (*.f64 (cos.f64 lambda2) (+.f64 -1/360 (*.f64 -1/12 (cos.f64 lambda2))))) (pow.f64 lambda1 6)) (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (-.f64 (+.f64 (*.f64 (*.f64 (cos.f64 lambda2) (+.f64 1/12 (*.f64 (cos.f64 lambda2) 1/2))) (pow.f64 lambda1 4)) 1) (*.f64 (cos.f64 lambda2) (*.f64 lambda1 lambda1)))))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (cos.f64 lambda2))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (cos.f64 lambda2))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (cos.f64 lambda2))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (cos.f64 lambda2))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (cos.f64 lambda2))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (cos.f64 lambda2))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (cos.f64 lambda2))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (cos.f64 lambda2))","(exp.f64 (*.f64 2 (cos.f64 lambda1)))","(pow.f64 (exp.f64 2) (cos.f64 lambda1))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 lambda2 2) (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) (cos.f64 lambda1)))) (exp.f64 (*.f64 2 (cos.f64 lambda1))))","(fma.f64 -1 (*.f64 (*.f64 lambda2 lambda2) (*.f64 (cos.f64 lambda1) (pow.f64 (exp.f64 2) (cos.f64 lambda1)))) (pow.f64 (exp.f64 2) (cos.f64 lambda1)))","(-.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (*.f64 (cos.f64 lambda1) (*.f64 lambda2 lambda2))))","(*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (-.f64 1 (*.f64 (*.f64 lambda2 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 lambda2 2) (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) (cos.f64 lambda1)))) (+.f64 (*.f64 (+.f64 (*.f64 1/12 (cos.f64 lambda1)) (*.f64 1/2 (pow.f64 (cos.f64 lambda1) 2))) (*.f64 (pow.f64 lambda2 4) (exp.f64 (*.f64 2 (cos.f64 lambda1))))) (exp.f64 (*.f64 2 (cos.f64 lambda1)))))","(fma.f64 -1 (*.f64 (*.f64 lambda2 lambda2) (*.f64 (cos.f64 lambda1) (pow.f64 (exp.f64 2) (cos.f64 lambda1)))) (fma.f64 (fma.f64 1/12 (cos.f64 lambda1) (*.f64 1/2 (pow.f64 (cos.f64 lambda1) 2))) (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (pow.f64 lambda2 4)) (pow.f64 (exp.f64 2) (cos.f64 lambda1))))","(-.f64 (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (+.f64 1 (*.f64 (fma.f64 (cos.f64 lambda1) 1/12 (*.f64 1/2 (pow.f64 (cos.f64 lambda1) 2))) (pow.f64 lambda2 4)))) (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (*.f64 (cos.f64 lambda1) (*.f64 lambda2 lambda2))))","(*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (-.f64 (+.f64 (*.f64 (*.f64 (cos.f64 lambda1) (+.f64 1/12 (*.f64 1/2 (cos.f64 lambda1)))) (pow.f64 lambda2 4)) 1) (*.f64 (*.f64 lambda2 lambda2) (cos.f64 lambda1))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 lambda2 2) (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) (cos.f64 lambda1)))) (+.f64 (*.f64 (+.f64 (*.f64 1/12 (cos.f64 lambda1)) (*.f64 1/2 (pow.f64 (cos.f64 lambda1) 2))) (*.f64 (pow.f64 lambda2 4) (exp.f64 (*.f64 2 (cos.f64 lambda1))))) (+.f64 (*.f64 (pow.f64 lambda2 6) (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) (+.f64 (*.f64 -1/360 (cos.f64 lambda1)) (+.f64 (*.f64 -1/6 (pow.f64 (cos.f64 lambda1) 3)) (*.f64 -1/12 (pow.f64 (cos.f64 lambda1) 2)))))) (exp.f64 (*.f64 2 (cos.f64 lambda1))))))","(fma.f64 -1 (*.f64 (*.f64 lambda2 lambda2) (*.f64 (cos.f64 lambda1) (pow.f64 (exp.f64 2) (cos.f64 lambda1)))) (fma.f64 (fma.f64 1/12 (cos.f64 lambda1) (*.f64 1/2 (pow.f64 (cos.f64 lambda1) 2))) (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (pow.f64 lambda2 4)) (fma.f64 (pow.f64 lambda2 6) (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (fma.f64 -1/360 (cos.f64 lambda1) (fma.f64 -1/6 (pow.f64 (cos.f64 lambda1) 3) (*.f64 -1/12 (pow.f64 (cos.f64 lambda1) 2))))) (pow.f64 (exp.f64 2) (cos.f64 lambda1)))))","(+.f64 (-.f64 (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (+.f64 1 (*.f64 (fma.f64 (cos.f64 lambda1) 1/12 (*.f64 1/2 (pow.f64 (cos.f64 lambda1) 2))) (pow.f64 lambda2 4)))) (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (*.f64 (cos.f64 lambda1) (*.f64 lambda2 lambda2)))) (*.f64 (pow.f64 lambda2 6) (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (fma.f64 (cos.f64 lambda1) -1/360 (fma.f64 -1/6 (pow.f64 (cos.f64 lambda1) 3) (*.f64 -1/12 (pow.f64 (cos.f64 lambda1) 2)))))))","(+.f64 (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (-.f64 1 (*.f64 (*.f64 lambda2 lambda2) (cos.f64 lambda1)))) (*.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (+.f64 (*.f64 (*.f64 (cos.f64 lambda1) (+.f64 1/12 (*.f64 1/2 (cos.f64 lambda1)))) (pow.f64 lambda2 4)) (*.f64 (pow.f64 lambda2 6) (fma.f64 (cos.f64 lambda1) -1/360 (*.f64 (pow.f64 (cos.f64 lambda1) 2) (+.f64 (*.f64 -1/6 (cos.f64 lambda1)) -1/12)))))))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (cos.f64 lambda2))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (cos.f64 lambda2))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (cos.f64 lambda2))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (cos.f64 lambda2))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (cos.f64 lambda2))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (cos.f64 lambda2))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (cos.f64 lambda2))","(exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))","(pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))","(pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)) (cos.f64 lambda2))","(+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (cos.f64 phi1) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))))","(fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (cos.f64 phi1)))","(+.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))))) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (cos.f64 phi1)))","(+.f64 (+.f64 (cos.f64 phi1) (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))","(+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (pow.f64 phi2 2))) (+.f64 (cos.f64 phi1) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))))","(fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (fma.f64 -1/2 (*.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (*.f64 phi2 phi2)) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (cos.f64 phi1))))","(fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (fma.f64 (*.f64 -1/2 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))))))) (*.f64 phi2 phi2) (+.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))))) (cos.f64 phi1))))","(+.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (fma.f64 -1/2 (*.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (*.f64 phi2 phi2)) (cos.f64 phi1)))","(+.f64 (*.f64 1/24 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (pow.f64 phi2 4))) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (pow.f64 phi2 2))) (+.f64 (cos.f64 phi1) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))))))","(fma.f64 1/24 (*.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (pow.f64 phi2 4)) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (fma.f64 -1/2 (*.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (*.f64 phi2 phi2)) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (cos.f64 phi1)))))","(fma.f64 1/24 (*.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (pow.f64 phi2 4)) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (fma.f64 (*.f64 -1/2 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))))))) (*.f64 phi2 phi2) (+.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))))) (cos.f64 phi1)))))","(fma.f64 1/24 (*.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (pow.f64 phi2 4)) (+.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (fma.f64 -1/2 (*.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (*.f64 phi2 phi2)) (cos.f64 phi1))))","(+.f64 (*.f64 1/24 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (pow.f64 phi2 4))) (+.f64 (*.f64 -1/720 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (pow.f64 phi2 6))) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (pow.f64 phi2 2))) (+.f64 (cos.f64 phi1) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))))))","(fma.f64 1/24 (*.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (pow.f64 phi2 4)) (fma.f64 -1/720 (*.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (pow.f64 phi2 6)) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (fma.f64 -1/2 (*.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (*.f64 phi2 phi2)) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)))))) (cos.f64 phi1))))))","(fma.f64 1/24 (*.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (pow.f64 phi2 4)) (fma.f64 -1/720 (*.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (pow.f64 phi2 6)) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (fma.f64 (*.f64 -1/2 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))))))) (*.f64 phi2 phi2) (+.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1))))) (cos.f64 phi1))))))","(+.f64 (fma.f64 -1/2 (*.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (*.f64 phi2 phi2)) (cos.f64 phi1)) (+.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (*.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (+.f64 (*.f64 1/24 (pow.f64 phi2 4)) (*.f64 -1/720 (pow.f64 phi2 6))))))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (+.f64 (*.f64 1/3 (cos.f64 lambda2)) (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1/3))) (cos.f64 phi2)) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (cos.f64 lambda2) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (*.f64 1/3 (+.f64 (*.f64 2 (cos.f64 lambda2)) (cos.f64 lambda2))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (*.f64 1/3 (*.f64 3 (cos.f64 lambda2))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (cos.f64 lambda2)) (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1/3))) (cos.f64 phi2))))","(fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1) (fma.f64 (fma.f64 1/3 (cos.f64 lambda2) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))))) (cos.f64 phi2) (cos.f64 phi1)))","(fma.f64 (*.f64 (sin.f64 lambda2) lambda1) (cos.f64 phi2) (fma.f64 (cos.f64 phi2) (*.f64 1/3 (+.f64 (*.f64 2 (cos.f64 lambda2)) (cos.f64 lambda2))) (cos.f64 phi1)))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (sin.f64 lambda2) lambda1) (*.f64 1/3 (*.f64 3 (cos.f64 lambda2))))))","(+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (cos.f64 lambda2)) (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1/3))) (cos.f64 phi2)) (*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 2 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (cos.f64 lambda2)))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda2)))) 1/3))))) (*.f64 -1/6 (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 2))))))","(fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1) (+.f64 (fma.f64 (fma.f64 1/3 (cos.f64 lambda2) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))))) (cos.f64 phi2) (cos.f64 phi1)) (*.f64 (fma.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 lambda2) 2)) (*.f64 2 (*.f64 (fma.f64 1/2 (*.f64 (pow.f64 (sin.f64 lambda2) 2) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))) (*.f64 -1/3 (*.f64 (cos.f64 lambda2) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))))) (cbrt.f64 (exp.f64 (neg.f64 (*.f64 2 (cos.f64 lambda2)))))))) (*.f64 (cos.f64 lambda2) -1/6)) (*.f64 (*.f64 lambda1 lambda1) (cos.f64 phi2)))))","(+.f64 (fma.f64 (*.f64 (sin.f64 lambda2) lambda1) (cos.f64 phi2) (fma.f64 (cos.f64 phi2) (*.f64 1/3 (+.f64 (*.f64 2 (cos.f64 lambda2)) (cos.f64 lambda2))) (cos.f64 phi1))) (*.f64 (fma.f64 1/2 (-.f64 (*.f64 (fma.f64 1/2 (*.f64 (pow.f64 (sin.f64 lambda2) 2) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (*.f64 (cos.f64 lambda2) -1/3))) (*.f64 (cbrt.f64 (exp.f64 (*.f64 (cos.f64 lambda2) -2))) 2)) (pow.f64 (sin.f64 lambda2) 2)) (*.f64 (cos.f64 lambda2) -1/6)) (*.f64 (*.f64 lambda1 lambda1) (cos.f64 phi2))))","(+.f64 (fma.f64 (cos.f64 phi2) (*.f64 1/3 (*.f64 3 (cos.f64 lambda2))) (cos.f64 phi1)) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (fma.f64 (cos.f64 lambda2) -1/6 (+.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda2) 2)) (*.f64 -1/3 (cos.f64 lambda2)))) (cbrt.f64 (pow.f64 (exp.f64 -2) (cos.f64 lambda2)))) (*.f64 (pow.f64 (sin.f64 lambda2) 2) -1/2))) (*.f64 lambda1 lambda1)) (*.f64 (sin.f64 lambda2) lambda1))))","(+.f64 (*.f64 1/6 (*.f64 (cos.f64 phi2) (*.f64 (+.f64 (*.f64 -6 (*.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (cos.f64 lambda2)))) (sin.f64 lambda2)) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda2)))) 1/3))) (+.f64 (*.f64 6 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda2)))) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (*.f64 (sin.f64 lambda2) (cos.f64 lambda2)))) (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (+.f64 (*.f64 1/6 (pow.f64 (sin.f64 lambda2) 3)) (*.f64 -1/6 (sin.f64 lambda2))))))) (*.f64 2 (pow.f64 (sin.f64 lambda2) 3)))) (pow.f64 lambda1 3)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1)) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (cos.f64 lambda2)) (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1/3))) (cos.f64 phi2)) (*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 2 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (pow.f64 (sin.f64 lambda2) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (cos.f64 lambda2))) 1) 1/3) (cos.f64 lambda2)))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda2)))) 1/3))))) (*.f64 -1/6 (cos.f64 lambda2))) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 2)))))))","(fma.f64 1/6 (*.f64 (cos.f64 phi2) (*.f64 (pow.f64 lambda1 3) (fma.f64 -6 (*.f64 (fma.f64 1/2 (*.f64 (pow.f64 (sin.f64 lambda2) 2) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))) (*.f64 -1/3 (*.f64 (cos.f64 lambda2) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))))) (*.f64 (sin.f64 lambda2) (cbrt.f64 (exp.f64 (neg.f64 (*.f64 2 (cos.f64 lambda2))))))) (fma.f64 6 (*.f64 (cbrt.f64 (exp.f64 (neg.f64 (*.f64 2 (cos.f64 lambda2))))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (*.f64 (cos.f64 lambda2) (sin.f64 lambda2))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (fma.f64 1/6 (pow.f64 (sin.f64 lambda2) 3) (*.f64 (sin.f64 lambda2) -1/6))))) (*.f64 2 (pow.f64 (sin.f64 lambda2) 3)))))) (fma.f64 (cos.f64 phi2) (*.f64 (sin.f64 lambda2) lambda1) (+.f64 (fma.f64 (fma.f64 1/3 (cos.f64 lambda2) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))))) (cos.f64 phi2) (cos.f64 phi1)) (*.f64 (fma.f64 1/2 (+.f64 (*.f64 -1 (pow.f64 (sin.f64 lambda2) 2)) (*.f64 2 (*.f64 (fma.f64 1/2 (*.f64 (pow.f64 (sin.f64 lambda2) 2) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))) (*.f64 -1/3 (*.f64 (cos.f64 lambda2) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))))) (cbrt.f64 (exp.f64 (neg.f64 (*.f64 2 (cos.f64 lambda2)))))))) (*.f64 (cos.f64 lambda2) -1/6)) (*.f64 (*.f64 lambda1 lambda1) (cos.f64 phi2))))))","(fma.f64 1/6 (*.f64 (pow.f64 lambda1 3) (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (*.f64 -6 (sin.f64 lambda2)) (fma.f64 1/2 (*.f64 (pow.f64 (sin.f64 lambda2) 2) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (*.f64 (cos.f64 lambda2) -1/3)))) (cbrt.f64 (exp.f64 (*.f64 (cos.f64 lambda2) -2))) (fma.f64 2 (pow.f64 (sin.f64 lambda2) 3) (*.f64 (cbrt.f64 (exp.f64 (*.f64 (cos.f64 lambda2) -2))) (*.f64 (fma.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (fma.f64 1/6 (pow.f64 (sin.f64 lambda2) 3) (*.f64 (sin.f64 lambda2) -1/6)) (*.f64 (*.f64 -1/3 (*.f64 (cos.f64 lambda2) (sin.f64 lambda2))) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))))) 6)))))) (+.f64 (fma.f64 (*.f64 (sin.f64 lambda2) lambda1) (cos.f64 phi2) (fma.f64 (cos.f64 phi2) (*.f64 1/3 (+.f64 (*.f64 2 (cos.f64 lambda2)) (cos.f64 lambda2))) (cos.f64 phi1))) (*.f64 (fma.f64 1/2 (-.f64 (*.f64 (fma.f64 1/2 (*.f64 (pow.f64 (sin.f64 lambda2) 2) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (*.f64 (cos.f64 lambda2) -1/3))) (*.f64 (cbrt.f64 (exp.f64 (*.f64 (cos.f64 lambda2) -2))) 2)) (pow.f64 (sin.f64 lambda2) 2)) (*.f64 (cos.f64 lambda2) -1/6)) (*.f64 (*.f64 lambda1 lambda1) (cos.f64 phi2)))))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 3 (cos.f64 lambda2))) (*.f64 (fma.f64 (cos.f64 lambda2) -1/6 (+.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda2) 2)) (*.f64 -1/3 (cos.f64 lambda2)))) (cbrt.f64 (pow.f64 (exp.f64 -2) (cos.f64 lambda2)))) (*.f64 (pow.f64 (sin.f64 lambda2) 2) -1/2))) (*.f64 lambda1 lambda1)))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (sin.f64 lambda2) lambda1) (*.f64 (+.f64 (*.f64 2 (pow.f64 (sin.f64 lambda2) 3)) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 -2) (cos.f64 lambda2))) (+.f64 (*.f64 (*.f64 -6 (sin.f64 lambda2)) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda2) 2)) (*.f64 -1/3 (cos.f64 lambda2))))) (*.f64 6 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2))) (+.f64 (*.f64 -1/3 (*.f64 (cos.f64 lambda2) (sin.f64 lambda2))) (fma.f64 1/6 (pow.f64 (sin.f64 lambda2) 3) (*.f64 (sin.f64 lambda2) -1/6)))))))) (*.f64 (pow.f64 lambda1 3) 1/6))))))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) 1/3)) (*.f64 1/3 (cos.f64 lambda1)))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)))) (*.f64 1/3 (cos.f64 lambda1))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (*.f64 1/3 (+.f64 (*.f64 2 (cos.f64 lambda1)) (cos.f64 lambda1))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (*.f64 1/3 (*.f64 3 (cos.f64 lambda1))) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) 1/3)) (*.f64 1/3 (cos.f64 lambda1)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (cos.f64 phi1)))","(fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)))) (*.f64 1/3 (cos.f64 lambda1))) (fma.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)) (cos.f64 phi1)))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (+.f64 (*.f64 2 (cos.f64 lambda1)) (cos.f64 lambda1))) (*.f64 lambda2 (sin.f64 lambda1)))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 3 (cos.f64 lambda1))) (*.f64 lambda2 (sin.f64 lambda1)))))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) 1/3)) (*.f64 1/3 (cos.f64 lambda1)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (cos.f64 lambda1)))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (pow.f64 (sin.f64 lambda1) 2))))) (*.f64 -1/6 (cos.f64 lambda1))) (*.f64 (pow.f64 lambda2 2) (cos.f64 phi2))))))","(fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)))) (*.f64 1/3 (cos.f64 lambda1))) (+.f64 (fma.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)) (cos.f64 phi1)) (*.f64 (fma.f64 1/2 (fma.f64 2 (*.f64 (fma.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/3 (*.f64 (cos.f64 lambda1) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)))))) (cbrt.f64 (exp.f64 (neg.f64 (*.f64 2 (cos.f64 lambda1)))))) (*.f64 -1 (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/6 (cos.f64 lambda1))) (*.f64 (*.f64 lambda2 lambda2) (cos.f64 phi2)))))","(+.f64 (fma.f64 (fma.f64 1/2 (-.f64 (*.f64 (fma.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/3 (*.f64 (cos.f64 lambda1) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)))))) (*.f64 (cbrt.f64 (exp.f64 (*.f64 (cos.f64 lambda1) -2))) 2)) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/6 (cos.f64 lambda1))) (*.f64 lambda2 (*.f64 lambda2 (cos.f64 phi2))) (cos.f64 phi1)) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (+.f64 (*.f64 2 (cos.f64 lambda1)) (cos.f64 lambda1))) (*.f64 lambda2 (sin.f64 lambda1)))))","(+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (+.f64 (+.f64 (*.f64 1/3 (*.f64 3 (cos.f64 lambda1))) (*.f64 lambda2 (sin.f64 lambda1))) (*.f64 (*.f64 lambda2 lambda2) (fma.f64 -1/6 (cos.f64 lambda1) (+.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/3 (cos.f64 lambda1)))) (cbrt.f64 (pow.f64 (exp.f64 -2) (cos.f64 lambda1)))) (*.f64 (pow.f64 (sin.f64 lambda1) 2) -1/2)))))))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 2 (cos.f64 lambda1))) 1/3)) (*.f64 1/3 (cos.f64 lambda1)))) (+.f64 (*.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 -6 (*.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (cos.f64 lambda1)))) (sin.f64 lambda1)) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3))) (+.f64 (*.f64 2 (pow.f64 (sin.f64 lambda1) 3)) (*.f64 6 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (+.f64 (*.f64 -1/6 (sin.f64 lambda1)) (*.f64 1/6 (pow.f64 (sin.f64 lambda1) 3)))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (*.f64 (sin.f64 lambda1) (cos.f64 lambda1))))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3)))))))) (*.f64 (+.f64 (*.f64 1/2 (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3) (cos.f64 lambda1)))) (pow.f64 (/.f64 1 (exp.f64 (*.f64 2 (cos.f64 lambda1)))) 1/3))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (pow.f64 (sin.f64 lambda1) 2))))) (*.f64 -1/6 (cos.f64 lambda1))) (*.f64 (pow.f64 lambda2 2) (cos.f64 phi2)))))))","(fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)))) (*.f64 1/3 (cos.f64 lambda1))) (+.f64 (fma.f64 (cos.f64 phi2) (*.f64 lambda2 (sin.f64 lambda1)) (cos.f64 phi1)) (fma.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (fma.f64 -6 (*.f64 (fma.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/3 (*.f64 (cos.f64 lambda1) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)))))) (*.f64 (sin.f64 lambda1) (cbrt.f64 (exp.f64 (neg.f64 (*.f64 2 (cos.f64 lambda1))))))) (fma.f64 2 (pow.f64 (sin.f64 lambda1) 3) (*.f64 (*.f64 6 (fma.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (fma.f64 -1/6 (sin.f64 lambda1) (*.f64 1/6 (pow.f64 (sin.f64 lambda1) 3))) (*.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (*.f64 (sin.f64 lambda1) (cos.f64 lambda1)))))) (cbrt.f64 (exp.f64 (neg.f64 (*.f64 2 (cos.f64 lambda1)))))))) (cos.f64 phi2))) (*.f64 (fma.f64 1/2 (fma.f64 2 (*.f64 (fma.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/3 (*.f64 (cos.f64 lambda1) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)))))) (cbrt.f64 (exp.f64 (neg.f64 (*.f64 2 (cos.f64 lambda1)))))) (*.f64 -1 (pow.f64 (sin.f64 lambda1) 2))) (*.f64 -1/6 (cos.f64 lambda1))) (*.f64 (*.f64 lambda2 lambda2) (cos.f64 phi2))))))","(+.f64 (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (+.f64 (*.f64 2 (cos.f64 lambda1)) (cos.f64 lambda1))) (*.f64 lambda2 (sin.f64 lambda1))))) (fma.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (fma.f64 -6 (*.f64 (fma.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/3 (*.f64 (cos.f64 lambda1) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)))))) (*.f64 (sin.f64 lambda1) (cbrt.f64 (exp.f64 (*.f64 (cos.f64 lambda1) -2))))) (fma.f64 2 (pow.f64 (sin.f64 lambda1) 3) (*.f64 6 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (cos.f64 lambda1) -2))) (fma.f64 -1/3 (*.f64 (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (fma.f64 1/6 (pow.f64 (sin.f64 lambda1) 3) (*.f64 -1/6 (sin.f64 lambda1))))))))) (cos.f64 phi2))) (*.f64 (*.f64 lambda2 lambda2) (*.f64 (cos.f64 phi2) (fma.f64 1/2 (-.f64 (*.f64 (fma.f64 1/2 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/3 (*.f64 (cos.f64 lambda1) (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1)))))) (*.f64 (cbrt.f64 (exp.f64 (*.f64 (cos.f64 lambda1) -2))) 2)) (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/6 (cos.f64 lambda1)))))))","(+.f64 (cos.f64 phi1) (+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 3 (cos.f64 lambda1))) (*.f64 lambda2 (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (+.f64 (*.f64 (*.f64 lambda2 lambda2) (fma.f64 -1/6 (cos.f64 lambda1) (+.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/3 (cos.f64 lambda1)))) (cbrt.f64 (pow.f64 (exp.f64 -2) (cos.f64 lambda1)))) (*.f64 (pow.f64 (sin.f64 lambda1) 2) -1/2)))) (*.f64 (+.f64 (*.f64 2 (pow.f64 (sin.f64 lambda1) 3)) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 -2) (cos.f64 lambda1))) (+.f64 (*.f64 -6 (*.f64 (sin.f64 lambda1) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (+.f64 (*.f64 1/2 (pow.f64 (sin.f64 lambda1) 2)) (*.f64 -1/3 (cos.f64 lambda1)))))) (*.f64 6 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda1))) (+.f64 (fma.f64 1/6 (pow.f64 (sin.f64 lambda1) 3) (*.f64 -1/6 (sin.f64 lambda1))) (*.f64 -1/3 (*.f64 (sin.f64 lambda1) (cos.f64 lambda1))))))))) (*.f64 1/6 (pow.f64 lambda2 3)))))))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (*.f64 (cos.f64 phi2) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3))))) (cos.f64 phi1))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 1 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(+.f64 1 (*.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi2)))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) 1)","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 phi1 2)) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2))))","(+.f64 1 (fma.f64 -1/2 (*.f64 phi1 phi1) (*.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi2))))","(+.f64 1 (fma.f64 -1/2 (*.f64 phi1 phi1) (*.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2))))","(+.f64 1 (fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (*.f64 phi1 (*.f64 phi1 -1/2))))","(+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (+.f64 (*.f64 -1/2 (pow.f64 phi1 2)) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))))","(+.f64 1 (fma.f64 1/24 (pow.f64 phi1 4) (fma.f64 -1/2 (*.f64 phi1 phi1) (*.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi2)))))","(+.f64 1 (fma.f64 1/24 (pow.f64 phi1 4) (fma.f64 -1/2 (*.f64 phi1 phi1) (*.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2)))))","(+.f64 (fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) 1) (fma.f64 1/24 (pow.f64 phi1 4) (*.f64 phi1 (*.f64 phi1 -1/2))))","(+.f64 (*.f64 -1/720 (pow.f64 phi1 6)) (+.f64 1 (+.f64 (*.f64 1/24 (pow.f64 phi1 4)) (+.f64 (*.f64 -1/2 (pow.f64 phi1 2)) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2))))))","(fma.f64 -1/720 (pow.f64 phi1 6) (+.f64 1 (fma.f64 1/24 (pow.f64 phi1 4) (fma.f64 -1/2 (*.f64 phi1 phi1) (*.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi2))))))","(+.f64 (fma.f64 1/24 (pow.f64 phi1 4) (fma.f64 -1/2 (*.f64 phi1 phi1) (*.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2)))) (fma.f64 -1/720 (pow.f64 phi1 6) 1))","(+.f64 (fma.f64 1/24 (pow.f64 phi1 4) (fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (*.f64 phi1 (*.f64 phi1 -1/2)))) (fma.f64 -1/720 (pow.f64 phi1 6) 1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))","(+.f64 (cos.f64 phi1) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1))) (pow.f64 (*.f64 1 (exp.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) 1/3)))) (cos.f64 phi2)))","(fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda2)) (sin.f64 lambda1)) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))))) (cos.f64 phi1))","(fma.f64 (fma.f64 1/3 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1)) (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (cos.f64 lambda2)) (cos.f64 lambda1)))))) (cos.f64 phi2) (cos.f64 phi1))","(fma.f64 (+.f64 (*.f64 (sin.f64 lambda2) (sin.f64 lambda1)) (*.f64 1/3 (+.f64 (*.f64 2 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))) (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi2) (cos.f64 phi1))"]],"stop":[["node limit",1]],"time":68.072998046875,"type":"simplify"},{"compiler":[[13389,4439]],"time":76.663818359375,"type":"eval"},{"alts":[["(+.f64 lambda1 (atan2.f64 (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","fresh",21.287267577385347],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (/.f64 (-.f64 (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) (pow.f64 (cos.f64 phi1) 2)) (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (neg.f64 (cos.f64 phi1))))))","fresh",4.726012577779497],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))))) 2)) (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))))))))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cos.f64 phi1))))","fresh",0.2691634553201828],["(+.f64 lambda1 (atan2.f64 (log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","fresh",13.916009872081434],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) 6) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))))","fresh",0.2761072349243373],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (log.f64 (exp.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1))))))","fresh",0.30509732776979936],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (/.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) 3) (pow.f64 (cos.f64 phi1) 3)) (+.f64 (*.f64 (*.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) (*.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (-.f64 (pow.f64 (cos.f64 phi1) 2) (*.f64 (*.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) (cos.f64 phi1)))))))","fresh",0.3049239132410554],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (-.f64 (exp.f64 (log1p.f64 (cos.f64 (-.f64 lambda1 lambda2)))) 1) (cos.f64 phi1))))","fresh",1.3508289273889786],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (+.f64 (fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))) (fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))))","fresh",0.3445047935349895],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1))) 3)))","fresh",0.3755323880981223],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (pow.f64 (sqrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 2)))","fresh",14.031584128452725]],"compiler":[[55,31],[45,20],[93,50],[27,17],[51,28],[65,32],[154,69],[27,17],[73,37],[66,33],[26,16]],"count":[[185,11]],"kept":[{"done":[0,0],"fresh":[12,7],"new":[172,4],"picked":[1,0]}],"min-error":[0.051675073009749536],"time":60.09716796875,"type":"prune"},{"accuracy":[0.25287468578329875],"baseline":[0.2528746857832988],"branch":[["lambda1",0.2528746857832988,1],["lambda2",0.2528746857832988,1],["phi1",0.25287468578329875,1],["phi2",0.2528746857832988,1],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))))",0.25287468578329875,1],["(cos.f64 phi2)",0.2528746857832988,1],["(cos.f64 phi1)",0.25287468578329875,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[24,14],[6,5],[6,5],[1597,398]],"count":[[33,1]],"inputs":[["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))))) 2)) (cbrt.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2))))))))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (log.f64 (exp.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (/.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) 3) (pow.f64 (cos.f64 phi1) 3)) (+.f64 (*.f64 (*.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) (*.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))))) (-.f64 (pow.f64 (cos.f64 phi1) 2) (*.f64 (*.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))))) (cos.f64 phi1)))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 phi2) (fma.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)) (+.f64 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (*.f64 2 (cos.f64 lambda2)))) (*.f64 (sin.f64 lambda1) (sin.f64 lambda2)))) (cos.f64 phi1))) 3)))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2)) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda1)) (*.f64 2 (cos.f64 lambda2)))))) (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (+.f64 (*.f64 2 (*.f64 1/3 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2)))) (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (exp.f64 (sin.f64 lambda1)) (sin.f64 lambda2))))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (+.f64 (fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 lambda2))) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)) (*.f64 (cbrt.f64 (sin.f64 lambda2)) (*.f64 (cos.f64 lambda1) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))))) (fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) 6) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (log.f64 (exp.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (log.f64 (*.f64 (exp.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) (+.f64 1 (expm1.f64 (cos.f64 phi1)))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (+.f64 (*.f64 -1/2 (*.f64 (cos.f64 phi2) (*.f64 (cos.f64 (neg.f64 lambda2)) (pow.f64 lambda1 2)))) (+.f64 (cos.f64 phi1) (+.f64 (*.f64 -1 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) lambda1))) (+.f64 (*.f64 (cos.f64 phi2) (cos.f64 (neg.f64 lambda2))) (*.f64 1/6 (*.f64 (sin.f64 (neg.f64 lambda2)) (*.f64 (cos.f64 phi2) (pow.f64 lambda1 3))))))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 3)))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (+.f64 (fma.f64 (cos.f64 lambda2) (sin.f64 lambda1) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1))) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 lambda2)) (cos.f64 lambda1)) (pow.f64 (cbrt.f64 (sin.f64 lambda2)) 2))))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) 6) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (/.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 3) (pow.f64 (cos.f64 phi1) 3)) (fma.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (pow.f64 (cos.f64 phi1) 2) (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1)))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (+.f64 (*.f64 1/6 (*.f64 (pow.f64 lambda2 3) (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1 (*.f64 lambda2 (*.f64 (cos.f64 phi2) (cos.f64 lambda1)))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 lambda2 2) (*.f64 (cos.f64 phi2) (sin.f64 lambda1)))) (*.f64 (cos.f64 phi2) (sin.f64 lambda1))))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (/.f64 (-.f64 (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))) (pow.f64 (cos.f64 phi1) 2)) (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (neg.f64 (cos.f64 phi1))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (-.f64 (exp.f64 (log1p.f64 (cos.f64 (-.f64 lambda1 lambda2)))) 1) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (fma.f64 lambda2 (sin.f64 lambda1) (*.f64 (cos.f64 lambda1) (+.f64 1 (*.f64 lambda2 (*.f64 lambda2 -1/2))))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (/.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) 3) (pow.f64 (cos.f64 phi1) 3)) (fma.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (-.f64 (pow.f64 (cos.f64 phi1) 2) (*.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)) (cos.f64 phi1)))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (fma.f64 (sin.f64 lambda2) lambda1 (cos.f64 lambda2)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (pow.f64 (sqrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 2)))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (+.f64 (fma.f64 (sin.f64 lambda1) (cos.f64 lambda2) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2))) (cbrt.f64 (*.f64 (cos.f64 lambda1) (sin.f64 lambda2)))))))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2))))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (+.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (-.f64 lambda1 lambda2))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (-.f64 lambda1 lambda2)))))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (pow.f64 (cbrt.f64 (sin.f64 (-.f64 lambda1 lambda2))) 3)) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (log.f64 (*.f64 (+.f64 1 (expm1.f64 (cos.f64 phi1))) (exp.f64 (*.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2)))))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (+.f64 (cos.f64 lambda2) (*.f64 lambda1 (fma.f64 lambda1 (*.f64 (cos.f64 lambda2) -1/2) (sin.f64 lambda2)))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi2) (cos.f64 phi1))) 3)))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (fma.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2)) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))))"]],"link":["."],"name":["Midpoint on a great circle"],"oracle":[48.080358698572475],"outputs":[["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))))"]],"time":97.77685546875,"times":[["lambda1",9.8408203125],["lambda2",9.799072265625],["phi1",9.633056640625],["phi2",9.841064453125],["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (sin.f64 (-.f64 lambda1 lambda2))) (+.f64 (cos.f64 phi1) (*.f64 (cos.f64 phi2) (cos.f64 (-.f64 lambda1 lambda2))))))",9.951171875],["(cos.f64 phi2)",8.676025390625],["(cos.f64 phi1)",16.27783203125]],"type":"regimes"},{"compiler":[[55,26]],"egraph":[[5,59,86,0.00041199899999999997],[4,58,86,0.00034049899999999997],[3,55,86,0.000268291],[2,48,86,0.000193624],[1,40,86,0.000122249],[0,27,86,6.0291e-5]],"inputs":[["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda1) (cos.f64 lambda2))))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (neg.f64 (cos.f64 lambda1)) (sin.f64 lambda2)))) (fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi1))))","(+.f64 lambda1 (atan2.f64 (*.f64 (cos.f64 phi2) (fma.f64 (*.f64 (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1)))) (cbrt.f64 (*.f64 (cos.f64 lambda2) (sin.f64 lambda1))) (*.f64 (cos.f64 lambda1) (neg.f64 (sin.f64 lambda2))))) (fma.f64 (cos.f64 phi2) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 lambda1) (sin.f64 lambda2))) (exp.f64 (*.f64 (cos.f64 lambda2) (cos.f64 lambda1))))) (cos.f64 phi1))))"]],"stop":[["fuel",1],["saturated",1]],"time":9.898193359375,"type":"simplify"},{"time":0.014892578125,"type":"soundness"},{"compiler":[[55,26]],"remove-preprocessing":[[]],"time":16.037109375,"type":"end"}]