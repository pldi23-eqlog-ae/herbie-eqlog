[{"compiler":[[31,25]],"method":["search"],"sampling":[[12,0.00011906400322914125,3.840774297714233e-6,0.9998770952224731],[11,0.00011906400322914125,3.840774297714233e-6,0.9998770952224731],[10,0.00011522322893142702,7.681548595428467e-6,0.9998770952224731],[9,0.00011522322893142702,7.681548595428467e-6,0.9998770952224731],[8,0.00010754168033599855,1.5363097190856934e-5,0.9998770952224731],[7,0.00010754168033599855,1.5363097190856934e-5,0.9998770952224731],[6,9.217858314514162e-5,3.072619438171387e-5,0.9998770952224731],[5,9.217858314514162e-5,3.072619438171387e-5,0.9998770952224731],[4,6.145238876342775e-5,6.145238876342773e-5,0.9998770952224731],[3,6.145238876342775e-5,6.145238876342773e-5,0.9998770952224731],[2,0.0,0.0001229047775268555,0.9998770952224731],[1,0.0,0.0001229047775268555,0.9998770952224731],[0,0.0,0.0001229047775268555,0.9998770952224731]],"time":13.39306640625,"type":"analyze"},{"outcomes":[["body",256,"valid",517.593994140625,8256]],"time":524.997802734375,"type":"sample"},{"compiler":[[16,14]],"egraph":[[0,2,2,1.458e-6],[20,7846,26,0.125595707],[19,6480,26,0.116891957],[18,5465,26,0.103777332],[17,5009,26,0.090387082],[16,4750,26,0.078660124],[15,4578,26,0.069863957],[14,3918,26,0.060873291],[13,3824,26,0.051940124000000004],[12,3663,26,0.044199458000000004],[11,3148,26,0.035793874],[10,2651,26,0.027322624],[9,2497,26,0.021617416],[8,1881,26,0.015771416],[7,1145,26,0.010679625],[6,786,26,0.007328083],[5,593,30,0.0047925],[4,434,30,0.0030889999999999997],[3,249,30,0.001774875],[2,105,34,0.000821583],[1,52,38,0.00034425],[0,21,40,0.000121041]],"inputs":[["0","1"],["(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))","(*.f64 (*.f64 3 u) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 s 1/4) 3/4)))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))","(*.f64 (*.f64 3 s) (neg.f64 (log.f64 (-.f64 1 (-.f64 (/.f64 u 3/4) 1/3)))))","(*.f64 s (*.f64 3 (neg.f64 (log1p.f64 (/.f64 (neg.f64 (+.f64 u -1/4)) 3/4)))))","(*.f64 s (*.f64 -3 (log1p.f64 (/.f64 (+.f64 1/4 (neg.f64 u)) 3/4))))","(*.f64 s (*.f64 (log.f64 (-.f64 4/3 (/.f64 u 3/4))) -3))","(*.f64 s (*.f64 (log.f64 (+.f64 (/.f64 u -3/4) 4/3)) -3))","(*.f64 s (*.f64 (log.f64 (+.f64 (*.f64 -4/3 u) 4/3)) -3))","(*.f64 s (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3))","(*.f64 s (*.f64 (log.f64 (fma.f64 u -4/3 4/3)) -3))","(*.f64 (*.f64 3 u) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 s 1/4) 3/4)))))","(*.f64 (*.f64 3 u) (neg.f64 (log.f64 (-.f64 1 (-.f64 (/.f64 s 3/4) 1/3)))))","(*.f64 u (*.f64 3 (neg.f64 (log1p.f64 (/.f64 (neg.f64 (+.f64 s -1/4)) 3/4)))))","(*.f64 u (*.f64 -3 (log1p.f64 (/.f64 (neg.f64 (+.f64 s -1/4)) 3/4))))","(*.f64 u (*.f64 (log.f64 (-.f64 4/3 (/.f64 s 3/4))) -3))","(*.f64 (log.f64 (+.f64 (/.f64 s -3/4) 4/3)) (*.f64 u -3))","(*.f64 (log.f64 (+.f64 (*.f64 -4/3 s) 4/3)) (*.f64 u -3))","(*.f64 (log.f64 (fma.f64 -4/3 s 4/3)) (*.f64 u -3))","(*.f64 (log.f64 (fma.f64 s -4/3 4/3)) (*.f64 u -3))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":151.0009765625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[16,2696,13,0.04566879],[15,2696,13,0.040089415],[14,2695,13,0.035362206],[13,2660,13,0.030616498000000002],[12,2344,13,0.025632832],[11,1906,13,0.019660373000000002],[10,1642,13,0.014810832000000001],[9,1258,13,0.011642207000000002],[8,1017,13,0.008196707000000001],[7,634,13,0.005787291],[6,440,13,0.004045666],[5,333,15,0.002677291],[4,241,15,0.001758416],[3,139,15,0.001007708],[2,61,17,0.000460417],[1,33,19,0.000194375],[0,14,20,8.7542e-5]],"inputs":[["(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))","(*.f64 3 (*.f64 s (neg.f64 (log.f64 (-.f64 1 (/.f64 (+.f64 u -1/4) 3/4))))))","(*.f64 (*.f64 3 s) (neg.f64 (log1p.f64 (/.f64 (neg.f64 (+.f64 u -1/4)) 3/4))))","(*.f64 s (*.f64 -3 (log1p.f64 (+.f64 (neg.f64 (/.f64 u 3/4)) 1/3))))","(*.f64 s (*.f64 (log.f64 (-.f64 4/3 (/.f64 u 3/4))) -3))","(*.f64 s (*.f64 (log.f64 (+.f64 (/.f64 u -3/4) 4/3)) -3))","(*.f64 s (*.f64 (log1p.f64 (+.f64 1/3 (*.f64 u -4/3))) -3))","(*.f64 s (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3))"]],"stop":[["saturated",1]],"time":56.76708984375,"type":"simplify"},{"compiler":[[25,21]],"time":0.492919921875,"type":"eval"},{"alts":[["(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))","fresh",1.3783629863701992],["(*.f64 s (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3))","next",0.7364490356001465]],"compiler":[[16,14],[11,9],[16,14],[11,9]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.52735646953638],"time":1.481201171875,"type":"prune"},{"compiler":[[32,25]],"locations":[["(*.f64 s (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3))",0.2578125,true],["(*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3)",0.26953125,true],["(fma.f64 u -4/3 1/3)",0.31640625,true],["(log1p.f64 (fma.f64 u -4/3 1/3))",0.3923560070753776,true]],"time":10.323974609375,"type":"localize"},{"count":[[4,60]],"series":[["(*.f64 s (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3))","u","-inf",0.3369140625],["(*.f64 s (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3))","u","inf",0.3271484375],["(*.f64 s (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3))","u","0",0.30908203125],["(*.f64 s (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3))","s","-inf",0.277099609375],["(*.f64 s (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3))","s","inf",0.47998046875],["(*.f64 s (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3))","s","0",23.43896484375],["(*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3)","u","-inf",0.534912109375],["(*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3)","u","inf",0.281982421875],["(*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3)","u","0",0.20703125],["(fma.f64 u -4/3 1/3)","u","-inf",0.35888671875],["(fma.f64 u -4/3 1/3)","u","inf",0.276123046875],["(fma.f64 u -4/3 1/3)","u","0",0.22412109375],["(log1p.f64 (fma.f64 u -4/3 1/3))","u","-inf",0.342041015625],["(log1p.f64 (fma.f64 u -4/3 1/3))","u","inf",0.421875],["(log1p.f64 (fma.f64 u -4/3 1/3))","u","0",0.385986328125]],"time":28.458984375,"type":"series"},{"count":[[4,60]],"egraph":[[2,2216,35,0.020240917],[1,202,35,0.003314542],[0,10,35,0.000344417]],"inputs":[["(log1p.f64 (fma.f64 u -4/3 1/3))","(fma.f64 u -4/3 1/3)","(*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3)","(*.f64 s (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (log1p.f64 (fma.f64 u -4/3 1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (sqrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 (fma.f64 u -4/3 1/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/3 (*.f64 u -4/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 u -4/3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 u -4/3) 1) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (fma.f64 u -4/3 1/3) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 u -4/3 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 u -4/3 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 u -4/3 1/3)) (pow.f64 (cbrt.f64 (fma.f64 u -4/3 1/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 u -4/3 1/3)) 2) (cbrt.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 u -4/3 1/3)) (sqrt.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 u -4/3) 3) 1/27) (+.f64 (*.f64 (*.f64 u -4/3) (*.f64 u -4/3)) (-.f64 1/9 (*.f64 (*.f64 u -4/3) 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 u -4/3) (*.f64 u -4/3)) 1/9) (-.f64 (*.f64 u -4/3) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 u -4/3 1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 u -4/3 1/3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 u -4/3 1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 u -4/3 1/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 u -4/3 1/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 u -4/3 1/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 u -4/3 1/3)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 9))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (+.f64 (fma.f64 u -4/3 1/3) 1) -3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (+.f64 (fma.f64 u -4/3 1/3) 1) -3) s))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3) 3) (pow.f64 s 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 s 3) (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))))))))"]],"rules":[["egg-rr",13],["egg-rr",11],["egg-rr",21],["egg-rr",15]],"stop":[["node limit",1]],"time":45.927001953125,"type":"rewrite"},{"count":[[120,139]],"egraph":[[4,6899,914,0.030676666999999998],[3,2753,914,0.016949208],[2,912,928,0.006183292],[1,314,963,0.001943958],[0,102,1020,0.000512625]],"inputs":[["(log.f64 4/3)","(+.f64 (log.f64 4/3) (*.f64 -1 u))","(+.f64 (log.f64 4/3) (+.f64 (*.f64 -1/2 (pow.f64 u 2)) (*.f64 -1 u)))","(+.f64 (*.f64 -1/3 (pow.f64 u 3)) (+.f64 (log.f64 4/3) (+.f64 (*.f64 -1/2 (pow.f64 u 2)) (*.f64 -1 u))))","(+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4/3)) (/.f64 1 u))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (/.f64 1 u)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 u 3))) (/.f64 1 u))))","(+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4/3)) (/.f64 1 u))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (/.f64 1 u)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 u 3))) (/.f64 1 u))))","1/3","(+.f64 (*.f64 -4/3 u) 1/3)","(+.f64 (*.f64 -4/3 u) 1/3)","(+.f64 (*.f64 -4/3 u) 1/3)","(*.f64 -4/3 u)","(+.f64 1/3 (*.f64 -4/3 u))","(+.f64 1/3 (*.f64 -4/3 u))","(+.f64 1/3 (*.f64 -4/3 u))","(*.f64 -4/3 u)","(+.f64 1/3 (*.f64 -4/3 u))","(+.f64 1/3 (*.f64 -4/3 u))","(+.f64 1/3 (*.f64 -4/3 u))","(*.f64 -3 (log.f64 4/3))","(+.f64 (*.f64 3 u) (*.f64 -3 (log.f64 4/3)))","(+.f64 (*.f64 3/2 (pow.f64 u 2)) (+.f64 (*.f64 3 u) (*.f64 -3 (log.f64 4/3))))","(+.f64 (pow.f64 u 3) (+.f64 (*.f64 3/2 (pow.f64 u 2)) (+.f64 (*.f64 3 u) (*.f64 -3 (log.f64 4/3)))))","(*.f64 -3 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))","(+.f64 (*.f64 -3 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))) (*.f64 3 (/.f64 1 u)))","(+.f64 (*.f64 3/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 3 (/.f64 1 u)) (*.f64 -3 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))))","(+.f64 (/.f64 1 (pow.f64 u 3)) (+.f64 (*.f64 3/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 3 (/.f64 1 u)) (*.f64 -3 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))))))","(*.f64 -3 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))","(+.f64 (*.f64 3 (/.f64 1 u)) (*.f64 -3 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))))","(+.f64 (*.f64 3/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 3 (/.f64 1 u)) (*.f64 -3 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))))","(+.f64 (/.f64 1 (pow.f64 u 3)) (+.f64 (*.f64 3/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 3 (/.f64 1 u)) (*.f64 -3 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 -3 (*.f64 s (log.f64 4/3)))","(+.f64 (*.f64 3 (*.f64 s u)) (*.f64 -3 (*.f64 s (log.f64 4/3))))","(+.f64 (*.f64 3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s u)) (*.f64 -3 (*.f64 s (log.f64 4/3)))))","(+.f64 (*.f64 3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s u)) (+.f64 (*.f64 s (pow.f64 u 3)) (*.f64 -3 (*.f64 s (log.f64 4/3))))))","(*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))))","(+.f64 (*.f64 3 (/.f64 s u)) (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))))","(+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2)))))","(+.f64 (/.f64 s (pow.f64 u 3)) (+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2))))))","(*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))))","(+.f64 (*.f64 3 (/.f64 s u)) (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))))","(+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2)))))","(+.f64 (/.f64 s (pow.f64 u 3)) (+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2))))))"]],"method":["egg-herbie"],"outputs":[["(log.f64 4/3)","(+.f64 (log.f64 4/3) (*.f64 -1 u))","(+.f64 (log.f64 4/3) (neg.f64 u))","(-.f64 (log.f64 4/3) u)","(+.f64 (log.f64 4/3) (+.f64 (*.f64 -1/2 (pow.f64 u 2)) (*.f64 -1 u)))","(+.f64 (log.f64 4/3) (fma.f64 -1/2 (*.f64 u u) (neg.f64 u)))","(+.f64 (log.f64 4/3) (-.f64 (*.f64 u (*.f64 u -1/2)) u))","(-.f64 (fma.f64 u (*.f64 u -1/2) (log.f64 4/3)) u)","(+.f64 (*.f64 -1/3 (pow.f64 u 3)) (+.f64 (log.f64 4/3) (+.f64 (*.f64 -1/2 (pow.f64 u 2)) (*.f64 -1 u))))","(fma.f64 -1/3 (pow.f64 u 3) (+.f64 (log.f64 4/3) (fma.f64 -1/2 (*.f64 u u) (neg.f64 u))))","(+.f64 (-.f64 (*.f64 u (*.f64 u -1/2)) u) (fma.f64 -1/3 (pow.f64 u 3) (log.f64 4/3)))","(-.f64 (fma.f64 -1/3 (pow.f64 u 3) (fma.f64 u (*.f64 u -1/2) (log.f64 4/3))) u)","(fma.f64 -1/3 (pow.f64 u 3) (-.f64 (fma.f64 u (*.f64 u -1/2) (log.f64 4/3)) u))","(+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))","(fma.f64 -1 (neg.f64 (log.f64 u)) (log.f64 -4/3))","(+.f64 (log.f64 -4/3) (log.f64 u))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4/3)) (/.f64 1 u))","(-.f64 (fma.f64 -1 (neg.f64 (log.f64 u)) (log.f64 -4/3)) (/.f64 1 u))","(+.f64 (log.f64 -4/3) (-.f64 (log.f64 u) (/.f64 1 u)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (/.f64 1 u)))","(-.f64 (fma.f64 -1 (neg.f64 (log.f64 u)) (log.f64 -4/3)) (+.f64 (/.f64 1 u) (/.f64 1/2 (*.f64 u u))))","(+.f64 (log.f64 -4/3) (-.f64 (log.f64 u) (+.f64 (/.f64 1 u) (/.f64 1/2 (*.f64 u u)))))","(+.f64 (log.f64 -4/3) (+.f64 (-.f64 (log.f64 u) (/.f64 1 u)) (/.f64 -1/2 (*.f64 u u))))","(+.f64 (log.f64 -4/3) (+.f64 (/.f64 -1/2 (*.f64 u u)) (-.f64 (log.f64 u) (/.f64 1 u))))","(+.f64 (log.f64 -4/3) (+.f64 (/.f64 -1 u) (-.f64 (log.f64 u) (/.f64 1/2 (*.f64 u u)))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 u))) (log.f64 -4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 u 3))) (/.f64 1 u))))","(-.f64 (fma.f64 -1 (neg.f64 (log.f64 u)) (log.f64 -4/3)) (+.f64 (/.f64 1/2 (*.f64 u u)) (+.f64 (/.f64 1 u) (/.f64 1/3 (pow.f64 u 3)))))","(-.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (+.f64 (/.f64 1/2 (*.f64 u u)) (+.f64 (/.f64 1 u) (/.f64 1/3 (pow.f64 u 3)))))","(+.f64 (log.f64 -4/3) (-.f64 (log.f64 u) (+.f64 (/.f64 1/2 (*.f64 u u)) (+.f64 (/.f64 1 u) (/.f64 1/3 (pow.f64 u 3))))))","(+.f64 (+.f64 (log.f64 -4/3) (-.f64 (log.f64 u) (/.f64 1 u))) (-.f64 (/.f64 -1/2 (*.f64 u u)) (/.f64 1/3 (pow.f64 u 3))))","(+.f64 (log.f64 -4/3) (-.f64 (/.f64 -1/3 (pow.f64 u 3)) (+.f64 (/.f64 1 u) (-.f64 (/.f64 1/2 (*.f64 u u)) (log.f64 u)))))","(+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))","(fma.f64 -1 (log.f64 (/.f64 -1 u)) (log.f64 4/3))","(-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4/3)) (/.f64 1 u))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 u)) (log.f64 4/3)) (/.f64 1 u))","(+.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (/.f64 -1 u))","(-.f64 (+.f64 (log.f64 4/3) (/.f64 -1 u)) (log.f64 (/.f64 -1 u)))","(+.f64 (log.f64 4/3) (-.f64 (/.f64 -1 u) (log.f64 (/.f64 -1 u))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (/.f64 1 u)))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 u)) (log.f64 4/3)) (+.f64 (/.f64 1 u) (/.f64 1/2 (*.f64 u u))))","(+.f64 (-.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (/.f64 1/2 (*.f64 u u))) (/.f64 -1 u))","(-.f64 (+.f64 (log.f64 4/3) (+.f64 (/.f64 -1 u) (/.f64 -1/2 (*.f64 u u)))) (log.f64 (/.f64 -1 u)))","(+.f64 (+.f64 (log.f64 4/3) (-.f64 (/.f64 -1 u) (log.f64 (/.f64 -1 u)))) (/.f64 -1/2 (*.f64 u u)))","(+.f64 (+.f64 (log.f64 4/3) (/.f64 -1 u)) (-.f64 (/.f64 -1/2 (*.f64 u u)) (log.f64 (/.f64 -1 u))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 u))) (log.f64 4/3)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 u 3))) (/.f64 1 u))))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 u)) (log.f64 4/3)) (+.f64 (/.f64 1/2 (*.f64 u u)) (+.f64 (/.f64 1 u) (/.f64 1/3 (pow.f64 u 3)))))","(-.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (+.f64 (/.f64 1/2 (*.f64 u u)) (+.f64 (/.f64 1 u) (/.f64 1/3 (pow.f64 u 3)))))","(+.f64 (-.f64 (log.f64 4/3) (+.f64 (log.f64 (/.f64 -1 u)) (+.f64 (/.f64 1 u) (/.f64 1/3 (pow.f64 u 3))))) (/.f64 -1/2 (*.f64 u u)))","(+.f64 (+.f64 (log.f64 4/3) (-.f64 (/.f64 -1 u) (log.f64 (/.f64 -1 u)))) (-.f64 (/.f64 -1/2 (*.f64 u u)) (/.f64 1/3 (pow.f64 u 3))))","(+.f64 (+.f64 (+.f64 (log.f64 4/3) (/.f64 -1 u)) (-.f64 (/.f64 -1/2 (*.f64 u u)) (log.f64 (/.f64 -1 u)))) (/.f64 -1/3 (pow.f64 u 3)))","1/3","(+.f64 (*.f64 -4/3 u) 1/3)","(fma.f64 -4/3 u 1/3)","(fma.f64 u -4/3 1/3)","(+.f64 (*.f64 -4/3 u) 1/3)","(fma.f64 -4/3 u 1/3)","(fma.f64 u -4/3 1/3)","(+.f64 (*.f64 -4/3 u) 1/3)","(fma.f64 -4/3 u 1/3)","(fma.f64 u -4/3 1/3)","(*.f64 -4/3 u)","(*.f64 u -4/3)","(+.f64 1/3 (*.f64 -4/3 u))","(fma.f64 -4/3 u 1/3)","(fma.f64 u -4/3 1/3)","(+.f64 1/3 (*.f64 -4/3 u))","(fma.f64 -4/3 u 1/3)","(fma.f64 u -4/3 1/3)","(+.f64 1/3 (*.f64 -4/3 u))","(fma.f64 -4/3 u 1/3)","(fma.f64 u -4/3 1/3)","(*.f64 -4/3 u)","(*.f64 u -4/3)","(+.f64 1/3 (*.f64 -4/3 u))","(fma.f64 -4/3 u 1/3)","(fma.f64 u -4/3 1/3)","(+.f64 1/3 (*.f64 -4/3 u))","(fma.f64 -4/3 u 1/3)","(fma.f64 u -4/3 1/3)","(+.f64 1/3 (*.f64 -4/3 u))","(fma.f64 -4/3 u 1/3)","(fma.f64 u -4/3 1/3)","(*.f64 -3 (log.f64 4/3))","(*.f64 (log.f64 4/3) -3)","(+.f64 (*.f64 3 u) (*.f64 -3 (log.f64 4/3)))","(fma.f64 3 u (*.f64 (log.f64 4/3) -3))","(fma.f64 (log.f64 4/3) -3 (*.f64 u 3))","(+.f64 (*.f64 3/2 (pow.f64 u 2)) (+.f64 (*.f64 3 u) (*.f64 -3 (log.f64 4/3))))","(fma.f64 3/2 (*.f64 u u) (fma.f64 3 u (*.f64 (log.f64 4/3) -3)))","(fma.f64 (*.f64 u u) 3/2 (fma.f64 (log.f64 4/3) -3 (*.f64 u 3)))","(fma.f64 (log.f64 4/3) -3 (*.f64 u (+.f64 3 (*.f64 u 3/2))))","(+.f64 (pow.f64 u 3) (+.f64 (*.f64 3/2 (pow.f64 u 2)) (+.f64 (*.f64 3 u) (*.f64 -3 (log.f64 4/3)))))","(+.f64 (pow.f64 u 3) (fma.f64 3/2 (*.f64 u u) (fma.f64 3 u (*.f64 (log.f64 4/3) -3))))","(+.f64 (fma.f64 (log.f64 4/3) -3 (*.f64 u 3)) (*.f64 (*.f64 u u) (+.f64 u 3/2)))","(fma.f64 (*.f64 u u) (+.f64 u 3/2) (fma.f64 (log.f64 4/3) -3 (*.f64 u 3)))","(*.f64 -3 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))","(*.f64 (fma.f64 -1 (neg.f64 (log.f64 u)) (log.f64 -4/3)) -3)","(*.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) -3)","(+.f64 (*.f64 -3 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))) (*.f64 3 (/.f64 1 u)))","(fma.f64 -3 (fma.f64 -1 (neg.f64 (log.f64 u)) (log.f64 -4/3)) (/.f64 3 u))","(fma.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) -3 (/.f64 3 u))","(+.f64 (*.f64 3/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 3 (/.f64 1 u)) (*.f64 -3 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))))","(+.f64 (/.f64 3/2 (*.f64 u u)) (fma.f64 -3 (fma.f64 -1 (neg.f64 (log.f64 u)) (log.f64 -4/3)) (/.f64 3 u)))","(+.f64 (/.f64 3/2 (*.f64 u u)) (fma.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) -3 (/.f64 3 u)))","(+.f64 (/.f64 3 u) (fma.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) -3 (/.f64 3/2 (*.f64 u u))))","(fma.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) -3 (+.f64 (/.f64 3 u) (/.f64 3/2 (*.f64 u u))))","(+.f64 (/.f64 1 (pow.f64 u 3)) (+.f64 (*.f64 3/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 3 (/.f64 1 u)) (*.f64 -3 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))))))","(+.f64 (+.f64 (/.f64 1 (pow.f64 u 3)) (/.f64 3/2 (*.f64 u u))) (fma.f64 -3 (fma.f64 -1 (neg.f64 (log.f64 u)) (log.f64 -4/3)) (/.f64 3 u)))","(+.f64 (/.f64 1 (pow.f64 u 3)) (+.f64 (/.f64 3/2 (*.f64 u u)) (fma.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) -3 (/.f64 3 u))))","(+.f64 (fma.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) -3 (/.f64 3/2 (*.f64 u u))) (+.f64 (/.f64 3 u) (/.f64 1 (pow.f64 u 3))))","(+.f64 (/.f64 1 (pow.f64 u 3)) (+.f64 (/.f64 3 u) (fma.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) -3 (/.f64 3/2 (*.f64 u u)))))","(+.f64 (/.f64 1 (pow.f64 u 3)) (fma.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) -3 (+.f64 (/.f64 3 u) (/.f64 3/2 (*.f64 u u)))))","(*.f64 -3 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))","(*.f64 (fma.f64 -1 (log.f64 (/.f64 -1 u)) (log.f64 4/3)) -3)","(*.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) -3)","(+.f64 (*.f64 3 (/.f64 1 u)) (*.f64 -3 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))))","(+.f64 (/.f64 3 u) (*.f64 (fma.f64 -1 (log.f64 (/.f64 -1 u)) (log.f64 4/3)) -3))","(fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) -3 (/.f64 3 u))","(+.f64 (*.f64 3/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 3 (/.f64 1 u)) (*.f64 -3 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))))","(+.f64 (+.f64 (/.f64 3/2 (*.f64 u u)) (/.f64 3 u)) (*.f64 (fma.f64 -1 (log.f64 (/.f64 -1 u)) (log.f64 4/3)) -3))","(+.f64 (/.f64 3/2 (*.f64 u u)) (fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) -3 (/.f64 3 u)))","(+.f64 (/.f64 3 u) (fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) -3 (/.f64 3/2 (*.f64 u u))))","(+.f64 (/.f64 1 (pow.f64 u 3)) (+.f64 (*.f64 3/2 (/.f64 1 (pow.f64 u 2))) (+.f64 (*.f64 3 (/.f64 1 u)) (*.f64 -3 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))))))","(+.f64 (/.f64 1 (pow.f64 u 3)) (+.f64 (+.f64 (/.f64 3/2 (*.f64 u u)) (/.f64 3 u)) (*.f64 (fma.f64 -1 (log.f64 (/.f64 -1 u)) (log.f64 4/3)) -3)))","(+.f64 (/.f64 1 (pow.f64 u 3)) (+.f64 (/.f64 3/2 (*.f64 u u)) (fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) -3 (/.f64 3 u))))","(+.f64 (/.f64 1 (pow.f64 u 3)) (+.f64 (/.f64 3 u) (fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) -3 (/.f64 3/2 (*.f64 u u)))))","(+.f64 (fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) -3 (/.f64 3 u)) (+.f64 (/.f64 1 (pow.f64 u 3)) (/.f64 3/2 (*.f64 u u))))","(+.f64 (/.f64 3/2 (*.f64 u u)) (+.f64 (/.f64 1 (pow.f64 u 3)) (fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) -3 (/.f64 3 u))))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 s (*.f64 -3 (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 -3 s))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 s (*.f64 -3 (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 -3 s))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 s (*.f64 -3 (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 -3 s))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 s (*.f64 -3 (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 -3 s))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 s (*.f64 -3 (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 -3 s))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 s (*.f64 -3 (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 -3 s))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 s (*.f64 -3 (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 -3 s))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 s (*.f64 -3 (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 -3 s))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 s (*.f64 -3 (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 -3 s))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 s (*.f64 -3 (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 -3 s))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 s (*.f64 -3 (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 -3 s))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 -3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 -3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 s (*.f64 -3 (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 -3 s))","(*.f64 -3 (*.f64 s (log.f64 4/3)))","(*.f64 -3 (*.f64 (log.f64 4/3) s))","(*.f64 (log.f64 4/3) (*.f64 -3 s))","(+.f64 (*.f64 3 (*.f64 s u)) (*.f64 -3 (*.f64 s (log.f64 4/3))))","(fma.f64 3 (*.f64 u s) (*.f64 -3 (*.f64 (log.f64 4/3) s)))","(fma.f64 -3 (*.f64 (log.f64 4/3) s) (*.f64 3 (*.f64 u s)))","(*.f64 s (fma.f64 (log.f64 4/3) -3 (*.f64 u 3)))","(*.f64 (fma.f64 (log.f64 4/3) -3 (*.f64 u 3)) s)","(+.f64 (*.f64 3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s u)) (*.f64 -3 (*.f64 s (log.f64 4/3)))))","(fma.f64 3/2 (*.f64 (*.f64 u u) s) (fma.f64 3 (*.f64 u s) (*.f64 -3 (*.f64 (log.f64 4/3) s))))","(fma.f64 3/2 (*.f64 u (*.f64 u s)) (fma.f64 -3 (*.f64 (log.f64 4/3) s) (*.f64 3 (*.f64 u s))))","(fma.f64 (log.f64 4/3) (*.f64 -3 s) (*.f64 s (*.f64 u (+.f64 3 (*.f64 u 3/2)))))","(*.f64 s (fma.f64 (log.f64 4/3) -3 (*.f64 u (+.f64 3 (*.f64 u 3/2)))))","(+.f64 (*.f64 3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s u)) (+.f64 (*.f64 s (pow.f64 u 3)) (*.f64 -3 (*.f64 s (log.f64 4/3))))))","(fma.f64 3/2 (*.f64 (*.f64 u u) s) (fma.f64 3 (*.f64 u s) (fma.f64 s (pow.f64 u 3) (*.f64 -3 (*.f64 (log.f64 4/3) s)))))","(fma.f64 3/2 (*.f64 u (*.f64 u s)) (fma.f64 3 (*.f64 u s) (fma.f64 (pow.f64 u 3) s (*.f64 (log.f64 4/3) (*.f64 -3 s)))))","(+.f64 (*.f64 s (fma.f64 (log.f64 4/3) -3 (pow.f64 u 3))) (*.f64 s (*.f64 u (+.f64 3 (*.f64 u 3/2)))))","(*.f64 s (fma.f64 (*.f64 u u) (+.f64 u 3/2) (fma.f64 (log.f64 4/3) -3 (*.f64 u 3))))","(*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))))","(*.f64 (*.f64 -3 s) (fma.f64 -1 (neg.f64 (log.f64 u)) (log.f64 -4/3)))","(*.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (*.f64 -3 s))","(+.f64 (*.f64 3 (/.f64 s u)) (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))))","(fma.f64 3 (/.f64 s u) (*.f64 (*.f64 -3 s) (fma.f64 -1 (neg.f64 (log.f64 u)) (log.f64 -4/3))))","(fma.f64 -3 (*.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) s) (*.f64 3 (/.f64 s u)))","(fma.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (*.f64 -3 s) (*.f64 3 (/.f64 s u)))","(*.f64 s (fma.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) -3 (/.f64 3 u)))","(+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2)))))","(fma.f64 3 (/.f64 s u) (fma.f64 -3 (*.f64 (fma.f64 -1 (neg.f64 (log.f64 u)) (log.f64 -4/3)) s) (*.f64 3/2 (/.f64 s (*.f64 u u)))))","(fma.f64 3 (/.f64 s u) (fma.f64 -3 (*.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) s) (*.f64 3/2 (/.f64 s (*.f64 u u)))))","(fma.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (*.f64 -3 s) (*.f64 (/.f64 s u) (+.f64 (/.f64 3/2 u) 3)))","(fma.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (*.f64 -3 s) (*.f64 (/.f64 s u) (+.f64 3 (/.f64 3/2 u))))","(+.f64 (/.f64 s (pow.f64 u 3)) (+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2))))))","(+.f64 (fma.f64 3 (/.f64 s u) (fma.f64 -3 (*.f64 (fma.f64 -1 (neg.f64 (log.f64 u)) (log.f64 -4/3)) s) (*.f64 3/2 (/.f64 s (*.f64 u u))))) (/.f64 s (pow.f64 u 3)))","(+.f64 (fma.f64 3 (/.f64 s u) (fma.f64 -3 (*.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) s) (*.f64 3/2 (/.f64 s (*.f64 u u))))) (/.f64 s (pow.f64 u 3)))","(+.f64 (fma.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (*.f64 -3 s) (*.f64 (/.f64 s u) (+.f64 (/.f64 3/2 u) 3))) (/.f64 s (pow.f64 u 3)))","(+.f64 (fma.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (*.f64 -3 s) (*.f64 (/.f64 s u) (+.f64 3 (/.f64 3/2 u)))) (/.f64 s (pow.f64 u 3)))","(*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))))","(*.f64 (*.f64 -3 s) (fma.f64 -1 (log.f64 (/.f64 -1 u)) (log.f64 4/3)))","(*.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 -3 s))","(+.f64 (*.f64 3 (/.f64 s u)) (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))))","(fma.f64 3 (/.f64 s u) (*.f64 (*.f64 -3 s) (fma.f64 -1 (log.f64 (/.f64 -1 u)) (log.f64 4/3))))","(fma.f64 3 (/.f64 s u) (*.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 -3 s)))","(fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 -3 s) (*.f64 3 (/.f64 s u)))","(*.f64 s (fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) -3 (/.f64 3 u)))","(+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2)))))","(fma.f64 3 (/.f64 s u) (fma.f64 -3 (*.f64 (fma.f64 -1 (log.f64 (/.f64 -1 u)) (log.f64 4/3)) s) (*.f64 3/2 (/.f64 s (*.f64 u u)))))","(fma.f64 3 (/.f64 s u) (fma.f64 3/2 (/.f64 s (*.f64 u u)) (*.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 -3 s))))","(fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 -3 s) (*.f64 (/.f64 s u) (+.f64 (/.f64 3/2 u) 3)))","(fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 -3 s) (*.f64 (/.f64 s u) (+.f64 3 (/.f64 3/2 u))))","(+.f64 (/.f64 s (pow.f64 u 3)) (+.f64 (*.f64 3 (/.f64 s u)) (+.f64 (*.f64 -3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 3/2 (/.f64 s (pow.f64 u 2))))))","(+.f64 (/.f64 s (pow.f64 u 3)) (fma.f64 3 (/.f64 s u) (fma.f64 -3 (*.f64 (fma.f64 -1 (log.f64 (/.f64 -1 u)) (log.f64 4/3)) s) (*.f64 3/2 (/.f64 s (*.f64 u u))))))","(+.f64 (/.f64 s (pow.f64 u 3)) (fma.f64 3 (/.f64 s u) (fma.f64 3/2 (/.f64 s (*.f64 u u)) (*.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 -3 s)))))","(+.f64 (/.f64 s (pow.f64 u 3)) (fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 -3 s) (*.f64 (/.f64 s u) (+.f64 (/.f64 3/2 u) 3))))","(+.f64 (/.f64 s (pow.f64 u 3)) (fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 -3 s) (*.f64 (/.f64 s u) (+.f64 3 (/.f64 3/2 u)))))"]],"stop":[["node limit",1]],"time":54.9169921875,"type":"simplify"},{"compiler":[[2085,1645]],"time":28.138916015625,"type":"eval"},{"alts":[["(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 -3 s))","fresh",1.1110494189039757],["(*.f64 s (pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3)) 3))","fresh",0.9501389975139783],["(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","fresh",1.3454894560782766],["(*.f64 s (pow.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3) 3) 1/3))","fresh",0.8519026567755411],["(*.f64 s (log1p.f64 (expm1.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3))))","fresh",0.7403552856001465],["(*.f64 s (sqrt.f64 (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 9)))","next",0.7281461805920064],["(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))","fresh",1.3783629863701992],["(pow.f64 (sqrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) 2)","fresh",0.8871842649049686],["(pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) 3)","fresh",0.8900063978130588],["(pow.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) 3) 1/3)","fresh",39.483229295013814],["(*.f64 s (*.f64 (-.f64 (+.f64 1 (log1p.f64 (fma.f64 u -4/3 1/3))) 1) -3))","fresh",1.1948894794574532],["(*.f64 s (*.f64 (log1p.f64 (log.f64 (exp.f64 (fma.f64 u -4/3 1/3)))) -3))","fresh",1.335303293566098]],"compiler":[[11,9],[14,12],[12,10],[15,13],[13,11],[14,12],[16,14],[14,12],[14,12],[15,13],[15,13],[13,11],[11,9],[14,12],[12,10],[15,13],[13,11],[14,12],[16,14],[14,12],[14,12],[15,13],[15,13],[13,11]],"count":[[141,12]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[139,11],"picked":[1,0]}],"min-error":[0.0546875],"time":19.8759765625,"type":"prune"},{"compiler":[[55,46]],"locations":[["(*.f64 s (sqrt.f64 (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 9)))",0.2578125,true],["(fma.f64 u -4/3 1/3)",0.31640625,false],["(log1p.f64 (fma.f64 u -4/3 1/3))",0.3923560070753776,false],["(pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)",0.484375,true]],"time":17.657958984375,"type":"localize"},{"count":[[2,36]],"series":[["(*.f64 s (sqrt.f64 (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 9)))","u","-inf",0.275146484375],["(*.f64 s (sqrt.f64 (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 9)))","u","inf",0.279052734375],["(*.f64 s (sqrt.f64 (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 9)))","u","0",0.26611328125],["(*.f64 s (sqrt.f64 (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 9)))","s","-inf",0.164794921875],["(*.f64 s (sqrt.f64 (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 9)))","s","inf",0.18212890625],["(*.f64 s (sqrt.f64 (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 9)))","s","0",0.31591796875],["(pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)","u","-inf",0.721923828125],["(pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)","u","inf",0.508056640625],["(pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)","u","0",0.4150390625]],"time":3.2919921875,"type":"series"},{"count":[[2,61]],"egraph":[[2,2812,23,0.025218583],[1,266,23,0.004490333],[0,13,28,0.000474]],"inputs":[["(pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)","(*.f64 s (sqrt.f64 (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 9)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (log1p.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 4) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 2) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 3/2) (sqrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 5) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 6)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2 (log.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 1) (log.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (*.f64 (log.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 1) (*.f64 (log.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 (fma.f64 u -4/3 1/3) 1) (*.f64 3 s))) 2)) (log.f64 (cbrt.f64 (pow.f64 (+.f64 (fma.f64 u -4/3 1/3) 1) (*.f64 3 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (+.f64 (fma.f64 u -4/3 1/3) 1) (*.f64 3 s)))) (log.f64 (sqrt.f64 (pow.f64 (+.f64 (fma.f64 u -4/3 1/3) 1) (*.f64 3 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)))) 2)) (cbrt.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s))))) (sqrt.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (+.f64 (fma.f64 u -4/3 1/3) 1) (*.f64 3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 s) 1) (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log.f64 s) (*.f64 (fma.f64 2 (log.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (log.f64 9)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 s) 1) (*.f64 (fma.f64 2 (log.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (log.f64 9)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log.f64 s) (*.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 3)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 s) 1) (*.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 3)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (fma.f64 2 (log.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (log.f64 9)) 1/2) (log.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 3)) 1) (log.f64 s)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 3)) (*.f64 (log.f64 s) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (fma.f64 2 (log.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (log.f64 9)) 1/2) (*.f64 (log.f64 s) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 3)) 1) (*.f64 (log.f64 s) 1)))))))"]],"rules":[["egg-rr",34],["egg-rr",27]],"stop":[["node limit",1]],"time":46.273193359375,"type":"rewrite"},{"count":[[97,110]],"egraph":[[3,4823,843,0.02177925],[2,1146,871,0.008976083999999999],[1,347,917,0.002236292],[0,116,1015,0.000523375]],"inputs":[["(pow.f64 (log.f64 4/3) 2)","(+.f64 (pow.f64 (log.f64 4/3) 2) (*.f64 -2 (*.f64 (log.f64 4/3) u)))","(+.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 (*.f64 (+.f64 1 (*.f64 -1 (log.f64 4/3))) (pow.f64 u 2)) (*.f64 -2 (*.f64 (log.f64 4/3) u))))","(+.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (log.f64 4/3))) (pow.f64 u 3)) (+.f64 (*.f64 (+.f64 1 (*.f64 -1 (log.f64 4/3))) (pow.f64 u 2)) (*.f64 -2 (*.f64 (log.f64 4/3) u)))))","(pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2)","(+.f64 (*.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) u)) (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) u)) (+.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 2)) (*.f64 -1 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) (pow.f64 u 2))))))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) u)) (+.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 3)) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) (pow.f64 u 3))) (+.f64 (/.f64 1 (pow.f64 u 2)) (*.f64 -1 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) (pow.f64 u 2))))))))","(pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2)","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) u)))","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) u)) (*.f64 -1 (/.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) (pow.f64 u 2))))))","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) u)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2/3 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) 1) (pow.f64 u 3))) (*.f64 -1 (/.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) (pow.f64 u 2)))))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 4/3)))","(+.f64 (*.f64 3 (*.f64 s (log.f64 4/3))) (*.f64 -3 (*.f64 s u)))","(+.f64 (*.f64 -3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s (log.f64 4/3))) (*.f64 -3 (*.f64 s u))))","(+.f64 (*.f64 -3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s (log.f64 4/3))) (+.f64 (*.f64 -1 (*.f64 s (pow.f64 u 3))) (*.f64 -3 (*.f64 s u)))))","(*.f64 3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))))","(+.f64 (*.f64 -3 (/.f64 s u)) (*.f64 3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))))","(+.f64 (*.f64 -3 (/.f64 s u)) (+.f64 (*.f64 3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 -3/2 (/.f64 s (pow.f64 u 2)))))","(+.f64 (*.f64 -3 (/.f64 s u)) (+.f64 (*.f64 3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (+.f64 (*.f64 -3/2 (/.f64 s (pow.f64 u 2))) (*.f64 -1 (/.f64 s (pow.f64 u 3))))))","(*.f64 3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))))","(+.f64 (*.f64 -3 (/.f64 s u)) (*.f64 3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))))","(+.f64 (*.f64 -3 (/.f64 s u)) (+.f64 (*.f64 3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 -3/2 (/.f64 s (pow.f64 u 2)))))","(+.f64 (*.f64 -3 (/.f64 s u)) (+.f64 (*.f64 3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (+.f64 (*.f64 -3/2 (/.f64 s (pow.f64 u 2))) (*.f64 -1 (/.f64 s (pow.f64 u 3))))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (log.f64 4/3) 2)","(+.f64 (pow.f64 (log.f64 4/3) 2) (*.f64 -2 (*.f64 (log.f64 4/3) u)))","(fma.f64 -2 (*.f64 (log.f64 4/3) u) (pow.f64 (log.f64 4/3) 2))","(*.f64 (log.f64 4/3) (+.f64 (log.f64 4/3) (*.f64 -2 u)))","(+.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 (*.f64 (+.f64 1 (*.f64 -1 (log.f64 4/3))) (pow.f64 u 2)) (*.f64 -2 (*.f64 (log.f64 4/3) u))))","(+.f64 (pow.f64 (log.f64 4/3) 2) (fma.f64 (+.f64 1 (neg.f64 (log.f64 4/3))) (*.f64 u u) (*.f64 -2 (*.f64 (log.f64 4/3) u))))","(+.f64 (pow.f64 (log.f64 4/3) 2) (fma.f64 -2 (*.f64 (log.f64 4/3) u) (*.f64 u (*.f64 u (-.f64 1 (log.f64 4/3))))))","(fma.f64 u (*.f64 u (-.f64 1 (log.f64 4/3))) (*.f64 (log.f64 4/3) (+.f64 (log.f64 4/3) (*.f64 -2 u))))","(+.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (log.f64 4/3))) (pow.f64 u 3)) (+.f64 (*.f64 (+.f64 1 (*.f64 -1 (log.f64 4/3))) (pow.f64 u 2)) (*.f64 -2 (*.f64 (log.f64 4/3) u)))))","(+.f64 (pow.f64 (log.f64 4/3) 2) (fma.f64 (+.f64 1 (*.f64 (log.f64 4/3) -2/3)) (pow.f64 u 3) (fma.f64 (+.f64 1 (neg.f64 (log.f64 4/3))) (*.f64 u u) (*.f64 -2 (*.f64 (log.f64 4/3) u)))))","(+.f64 (pow.f64 (log.f64 4/3) 2) (fma.f64 (fma.f64 (log.f64 4/3) -2/3 1) (pow.f64 u 3) (fma.f64 -2 (*.f64 (log.f64 4/3) u) (*.f64 u (*.f64 u (-.f64 1 (log.f64 4/3)))))))","(fma.f64 (fma.f64 (log.f64 4/3) -2/3 1) (pow.f64 u 3) (fma.f64 u (*.f64 u (-.f64 1 (log.f64 4/3))) (*.f64 (log.f64 4/3) (+.f64 (log.f64 4/3) (*.f64 -2 u)))))","(pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2)","(pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 2)","(pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2)","(+.f64 (*.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) u)) (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2))","(fma.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) u) (pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 2))","(fma.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) u) (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2))","(*.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (+.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (/.f64 -2 u)))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) u)) (+.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 2)) (*.f64 -1 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) (pow.f64 u 2))))))","(+.f64 (fma.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) u) (pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 2)) (+.f64 (/.f64 1 (*.f64 u u)) (neg.f64 (/.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) (*.f64 u u)))))","(+.f64 (fma.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) u) (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2)) (-.f64 (/.f64 1 (*.f64 u u)) (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (*.f64 u u))))","(+.f64 (+.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2) (/.f64 1 (*.f64 u u))) (*.f64 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) u) (+.f64 (/.f64 -1 u) -2)))","(+.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2) (+.f64 (/.f64 1 (*.f64 u u)) (*.f64 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) u) (+.f64 (/.f64 -1 u) -2))))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) u)) (+.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 3)) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) (pow.f64 u 3))) (+.f64 (/.f64 1 (pow.f64 u 2)) (*.f64 -1 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) (pow.f64 u 2))))))))","(+.f64 (fma.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) u) (pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 2)) (+.f64 (/.f64 1 (pow.f64 u 3)) (fma.f64 -2/3 (/.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) (pow.f64 u 3)) (+.f64 (/.f64 1 (*.f64 u u)) (neg.f64 (/.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) (*.f64 u u)))))))","(+.f64 (fma.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) u) (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2)) (+.f64 (/.f64 1 (pow.f64 u 3)) (-.f64 (fma.f64 -2/3 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (pow.f64 u 3)) (/.f64 1 (*.f64 u u))) (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (*.f64 u u)))))","(+.f64 (+.f64 (+.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2) (/.f64 1 (*.f64 u u))) (*.f64 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) u) (+.f64 (/.f64 -1 u) -2))) (fma.f64 -2/3 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (pow.f64 u 3)) (/.f64 1 (pow.f64 u 3))))","(+.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2) (+.f64 (/.f64 1 (pow.f64 u 3)) (+.f64 (/.f64 1 (*.f64 u u)) (*.f64 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) u) (+.f64 (+.f64 (/.f64 -1 u) (/.f64 -2/3 (*.f64 u u))) -2)))))","(pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2)","(pow.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 2)","(pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2)","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) u)))","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 2) (neg.f64 (/.f64 (fma.f64 -2 (log.f64 (/.f64 -1 u)) (*.f64 (log.f64 4/3) 2)) u)))","(-.f64 (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2) (/.f64 (fma.f64 (log.f64 4/3) 2 (*.f64 -2 (log.f64 (/.f64 -1 u)))) u))","(+.f64 (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2) (/.f64 (*.f64 2 (-.f64 (log.f64 (/.f64 -1 u)) (log.f64 4/3))) u))","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) u)) (*.f64 -1 (/.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) (pow.f64 u 2))))))","(+.f64 (+.f64 (pow.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 2) (/.f64 1 (*.f64 u u))) (fma.f64 -1 (/.f64 (fma.f64 -2 (log.f64 (/.f64 -1 u)) (*.f64 (log.f64 4/3) 2)) u) (neg.f64 (/.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) (*.f64 u u)))))","(+.f64 (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2) (-.f64 (-.f64 (/.f64 1 (*.f64 u u)) (/.f64 (fma.f64 (log.f64 4/3) 2 (*.f64 -2 (log.f64 (/.f64 -1 u)))) u)) (/.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 u u))))","(-.f64 (-.f64 (/.f64 1 (*.f64 u u)) (/.f64 (fma.f64 (log.f64 4/3) 2 (*.f64 -2 (log.f64 (/.f64 -1 u)))) u)) (-.f64 (/.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 u u)) (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2)))","(+.f64 (/.f64 1 (*.f64 u u)) (-.f64 (/.f64 (*.f64 2 (-.f64 (log.f64 (/.f64 -1 u)) (log.f64 4/3))) u) (-.f64 (/.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 u u)) (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2))))","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) u)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2/3 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) 1) (pow.f64 u 3))) (*.f64 -1 (/.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) (pow.f64 u 2)))))))","(+.f64 (+.f64 (pow.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 2) (/.f64 1 (*.f64 u u))) (fma.f64 -1 (/.f64 (fma.f64 -2 (log.f64 (/.f64 -1 u)) (*.f64 (log.f64 4/3) 2)) u) (fma.f64 -1 (/.f64 (fma.f64 2/3 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) -1) (pow.f64 u 3)) (neg.f64 (/.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) (*.f64 u u))))))","(+.f64 (/.f64 1 (*.f64 u u)) (+.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u)))) (*.f64 u u)) (/.f64 (fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2/3 -1) (pow.f64 u 3))) (/.f64 (fma.f64 (log.f64 4/3) 2 (*.f64 -2 (log.f64 (/.f64 -1 u)))) u)) (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2)))","(+.f64 (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2) (-.f64 (-.f64 (/.f64 1 (*.f64 u u)) (/.f64 (fma.f64 (log.f64 4/3) 2 (*.f64 -2 (log.f64 (/.f64 -1 u)))) u)) (+.f64 (/.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 u u)) (/.f64 (fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2/3 -1) (pow.f64 u 3)))))","(+.f64 (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2) (+.f64 (/.f64 (*.f64 2 (-.f64 (log.f64 (/.f64 -1 u)) (log.f64 4/3))) u) (-.f64 (/.f64 1 (*.f64 u u)) (+.f64 (*.f64 (+.f64 (/.f64 2/3 u) 1) (/.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 u u))) (/.f64 -1 (pow.f64 u 3))))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 (*.f64 3 s) (log.f64 (fma.f64 -4/3 u 4/3)))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 u -4/3 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 4/3)))","(*.f64 3 (*.f64 (log.f64 4/3) s))","(*.f64 (log.f64 4/3) (*.f64 3 s))","(+.f64 (*.f64 3 (*.f64 s (log.f64 4/3))) (*.f64 -3 (*.f64 s u)))","(fma.f64 3 (*.f64 (log.f64 4/3) s) (*.f64 (*.f64 -3 s) u))","(fma.f64 3 (*.f64 (log.f64 4/3) s) (*.f64 u (*.f64 s -3)))","(*.f64 s (+.f64 (*.f64 (log.f64 4/3) 3) (*.f64 u -3)))","(+.f64 (*.f64 -3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s (log.f64 4/3))) (*.f64 -3 (*.f64 s u))))","(fma.f64 -3/2 (*.f64 (*.f64 u u) s) (fma.f64 3 (*.f64 (log.f64 4/3) s) (*.f64 (*.f64 -3 s) u)))","(fma.f64 -3/2 (*.f64 u (*.f64 u s)) (fma.f64 3 (*.f64 (log.f64 4/3) s) (*.f64 u (*.f64 s -3))))","(fma.f64 (log.f64 4/3) (*.f64 3 s) (*.f64 u (+.f64 (*.f64 s -3) (*.f64 u (*.f64 s -3/2)))))","(*.f64 s (+.f64 (*.f64 (log.f64 4/3) 3) (*.f64 u (+.f64 -3 (*.f64 u -3/2)))))","(+.f64 (*.f64 -3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s (log.f64 4/3))) (+.f64 (*.f64 -1 (*.f64 s (pow.f64 u 3))) (*.f64 -3 (*.f64 s u)))))","(fma.f64 -3/2 (*.f64 (*.f64 u u) s) (fma.f64 3 (*.f64 (log.f64 4/3) s) (fma.f64 -1 (*.f64 (pow.f64 u 3) s) (*.f64 (*.f64 -3 s) u))))","(fma.f64 -3/2 (*.f64 u (*.f64 u s)) (fma.f64 3 (*.f64 (log.f64 4/3) s) (fma.f64 -3 (*.f64 u s) (*.f64 (pow.f64 u 3) (neg.f64 s)))))","(fma.f64 (log.f64 4/3) (*.f64 3 s) (fma.f64 (*.f64 u u) (*.f64 s -3/2) (*.f64 s (-.f64 (*.f64 u -3) (pow.f64 u 3)))))","(*.f64 s (+.f64 (-.f64 (*.f64 (log.f64 4/3) 3) (pow.f64 u 3)) (*.f64 u (+.f64 -3 (*.f64 u -3/2)))))","(*.f64 3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))))","(*.f64 3 (*.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) s))","(*.f64 3 (*.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) s))","(+.f64 (*.f64 -3 (/.f64 s u)) (*.f64 3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))))","(fma.f64 -3 (/.f64 s u) (*.f64 3 (*.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) s)))","(fma.f64 3 (*.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) s) (*.f64 -3 (/.f64 s u)))","(*.f64 s (+.f64 (*.f64 3 (+.f64 (log.f64 -4/3) (log.f64 u))) (/.f64 -3 u)))","(+.f64 (*.f64 -3 (/.f64 s u)) (+.f64 (*.f64 3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 -3/2 (/.f64 s (pow.f64 u 2)))))","(fma.f64 -3 (/.f64 s u) (fma.f64 3 (*.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) s) (*.f64 -3/2 (/.f64 s (*.f64 u u)))))","(fma.f64 -3 (/.f64 s u) (fma.f64 3 (*.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) s) (*.f64 -3/2 (/.f64 s (*.f64 u u)))))","(fma.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (*.f64 3 s) (*.f64 (/.f64 s u) (+.f64 (/.f64 -3/2 u) -3)))","(fma.f64 3 (*.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) s) (*.f64 (/.f64 s u) (+.f64 (/.f64 -3/2 u) -3)))","(+.f64 (*.f64 -3 (/.f64 s u)) (+.f64 (*.f64 3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (+.f64 (*.f64 -3/2 (/.f64 s (pow.f64 u 2))) (*.f64 -1 (/.f64 s (pow.f64 u 3))))))","(fma.f64 -3 (/.f64 s u) (fma.f64 3 (*.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) s) (fma.f64 -3/2 (/.f64 s (*.f64 u u)) (neg.f64 (/.f64 s (pow.f64 u 3))))))","(fma.f64 -3 (/.f64 s u) (fma.f64 (*.f64 3 s) (+.f64 (log.f64 -4/3) (log.f64 u)) (fma.f64 -3/2 (/.f64 s (*.f64 u u)) (/.f64 (neg.f64 s) (pow.f64 u 3)))))","(-.f64 (fma.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (*.f64 3 s) (*.f64 (/.f64 s u) (+.f64 (/.f64 -3/2 u) -3))) (/.f64 s (pow.f64 u 3)))","(-.f64 (fma.f64 3 (*.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) s) (*.f64 (/.f64 s u) (+.f64 (/.f64 -3/2 u) -3))) (/.f64 s (pow.f64 u 3)))","(*.f64 3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))))","(*.f64 3 (*.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) s))","(*.f64 3 (*.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) s))","(*.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 3 s))","(+.f64 (*.f64 -3 (/.f64 s u)) (*.f64 3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))))","(fma.f64 -3 (/.f64 s u) (*.f64 3 (*.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) s)))","(fma.f64 (*.f64 3 s) (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 -3 (/.f64 s u)))","(fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 3 s) (*.f64 -3 (/.f64 s u)))","(*.f64 s (+.f64 (/.f64 -3 u) (*.f64 3 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))))))","(+.f64 (*.f64 -3 (/.f64 s u)) (+.f64 (*.f64 3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 -3/2 (/.f64 s (pow.f64 u 2)))))","(fma.f64 -3 (/.f64 s u) (fma.f64 3 (*.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) s) (*.f64 -3/2 (/.f64 s (*.f64 u u)))))","(fma.f64 -3 (/.f64 s u) (fma.f64 (*.f64 3 s) (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 -3/2 (/.f64 s (*.f64 u u)))))","(fma.f64 3 (*.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) s) (*.f64 (/.f64 s u) (+.f64 (/.f64 -3/2 u) -3)))","(fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 3 s) (*.f64 (/.f64 s u) (+.f64 (/.f64 -3/2 u) -3)))","(+.f64 (*.f64 -3 (/.f64 s u)) (+.f64 (*.f64 3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (+.f64 (*.f64 -3/2 (/.f64 s (pow.f64 u 2))) (*.f64 -1 (/.f64 s (pow.f64 u 3))))))","(fma.f64 -3 (/.f64 s u) (fma.f64 3 (*.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) s) (fma.f64 -3/2 (/.f64 s (*.f64 u u)) (neg.f64 (/.f64 s (pow.f64 u 3))))))","(fma.f64 -3 (/.f64 s u) (fma.f64 (*.f64 3 s) (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (fma.f64 -3/2 (/.f64 s (*.f64 u u)) (/.f64 (neg.f64 s) (pow.f64 u 3)))))","(fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 3 s) (-.f64 (*.f64 (/.f64 s u) (+.f64 (/.f64 -3/2 u) -3)) (/.f64 s (pow.f64 u 3))))","(-.f64 (fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 3 s) (*.f64 (/.f64 s u) (+.f64 (/.f64 -3/2 u) -3))) (/.f64 s (pow.f64 u 3)))"]],"stop":[["node limit",1]],"time":42.219970703125,"type":"simplify"},{"compiler":[[3329,2750]],"time":47.94189453125,"type":"eval"},{"alts":[["(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 -3 s))","fresh",1.1110494189039757],["(*.f64 s (pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3)) 3))","fresh",0.9501389975139783],["(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","fresh",1.3454894560782766],["(*.f64 s (pow.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3) 3) 1/3))","fresh",0.8519026567755411],["(*.f64 s (sqrt.f64 (*.f64 (expm1.f64 (log1p.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2))) 9)))","fresh",0.7206973892029106],["(pow.f64 (sqrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) 2)","fresh",0.8871842649049686],["(*.f64 s (sqrt.f64 (*.f64 (pow.f64 (-.f64 (+.f64 1 (log1p.f64 (fma.f64 u -4/3 1/3))) 1) 2) 9)))","fresh",1.1940354158384088],["(*.f64 s (log1p.f64 (expm1.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3))))","fresh",0.7403552856001465],["(*.f64 s (sqrt.f64 (*.f64 (pow.f64 (log1p.f64 (log.f64 (exp.f64 (fma.f64 u -4/3 1/3)))) 2) 9)))","fresh",1.3260295993542912],["(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))","fresh",1.3783629863701992],["(pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) 3)","fresh",0.8900063978130588],["(pow.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) 3) 1/3)","fresh",39.483229295013814],["(*.f64 s (sqrt.f64 (*.f64 (sqrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) 9)))","next",0.7057361587397947]],"compiler":[[11,9],[14,12],[12,10],[15,13],[16,14],[14,12],[18,16],[13,11],[16,14],[16,14],[14,12],[15,13],[15,13],[11,9],[14,12],[12,10],[15,13],[16,14],[14,12],[18,16],[13,11],[16,14],[16,14],[14,12],[15,13],[15,13]],"count":[[187,13]],"kept":[{"done":[0,0],"fresh":[11,9],"new":[175,4],"picked":[1,0]}],"min-error":[0.046875],"time":24.31494140625,"type":"prune"},{"compiler":[[66,56]],"locations":[["(*.f64 s (sqrt.f64 (*.f64 (sqrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) 9)))",0.2578125,true],["(fma.f64 u -4/3 1/3)",0.31640625,false],["(log1p.f64 (fma.f64 u -4/3 1/3))",0.3923560070753776,false],["(pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)",0.8541529786536596,true]],"time":21.447998046875,"type":"localize"},{"count":[[2,36]],"series":[["(*.f64 s (sqrt.f64 (*.f64 (sqrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) 9)))","u","-inf",0.201904296875],["(*.f64 s (sqrt.f64 (*.f64 (sqrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) 9)))","u","inf",0.213134765625],["(*.f64 s (sqrt.f64 (*.f64 (sqrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) 9)))","u","0",0.171875],["(*.f64 s (sqrt.f64 (*.f64 (sqrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) 9)))","s","-inf",0.18310546875],["(*.f64 s (sqrt.f64 (*.f64 (sqrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) 9)))","s","inf",0.1572265625],["(*.f64 s (sqrt.f64 (*.f64 (sqrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) 9)))","s","0",0.19677734375],["(pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)","u","-inf",0.885986328125],["(pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)","u","inf",1.02197265625],["(pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)","u","0",0.55615234375]],"time":3.774169921875,"type":"series"},{"count":[[2,53]],"egraph":[[2,3048,23,0.026359458000000002],[1,286,23,0.004780167],[0,14,28,0.000490042]],"inputs":[["(pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)","(*.f64 s (sqrt.f64 (*.f64 (sqrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) 9)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 3) (log1p.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 4) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 8))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 8) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4) 5/6) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 8))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 12))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 8 (log.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 12)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 4)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 1) 4))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) 1/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)) 1) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 (fma.f64 u -4/3 1/3) 1) (*.f64 3 s))) 2)) (log.f64 (cbrt.f64 (pow.f64 (+.f64 (fma.f64 u -4/3 1/3) 1) (*.f64 3 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (+.f64 (fma.f64 u -4/3 1/3) 1) (*.f64 3 s)))) (log.f64 (sqrt.f64 (pow.f64 (+.f64 (fma.f64 u -4/3 1/3) 1) (*.f64 3 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)))) 2)) (cbrt.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s))))) (sqrt.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (+.f64 (fma.f64 u -4/3 1/3) 1) (*.f64 3 s)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 3 s))) 1) 1))))))"]],"rules":[["egg-rr",24],["egg-rr",29]],"stop":[["node limit",1]],"time":47.0400390625,"type":"rewrite"},{"count":[[89,102]],"egraph":[[2,1877,1236,0.01453225],[1,512,1267,0.0036142500000000003],[0,152,1414,0.000710333]],"inputs":[["(pow.f64 (log.f64 4/3) 4)","(+.f64 (pow.f64 (log.f64 4/3) 4) (*.f64 -4 (*.f64 (pow.f64 (log.f64 4/3) 3) u)))","(+.f64 (pow.f64 (log.f64 4/3) 4) (+.f64 (*.f64 -4 (*.f64 (pow.f64 (log.f64 4/3) 3) u)) (*.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 1 (*.f64 -1 (log.f64 4/3))))) (*.f64 4 (pow.f64 (log.f64 4/3) 2))) (pow.f64 u 2))))","(+.f64 (pow.f64 (log.f64 4/3) 4) (+.f64 (*.f64 -4 (*.f64 (pow.f64 (log.f64 4/3) 3) u)) (+.f64 (*.f64 (+.f64 (*.f64 -4 (*.f64 (log.f64 4/3) (+.f64 1 (*.f64 -1 (log.f64 4/3))))) (*.f64 2 (*.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 1 (*.f64 -2/3 (log.f64 4/3)))))) (pow.f64 u 3)) (*.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 1 (*.f64 -1 (log.f64 4/3))))) (*.f64 4 (pow.f64 (log.f64 4/3) 2))) (pow.f64 u 2)))))","(pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 4)","(+.f64 (*.f64 -4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 3) u)) (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 4))","(+.f64 (*.f64 4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2) (pow.f64 u 2))) (+.f64 (*.f64 -4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 3) u)) (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2)) (pow.f64 u 2))) (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 4))))","(+.f64 (*.f64 4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2) (pow.f64 u 2))) (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2)) (pow.f64 u 3))) (+.f64 (*.f64 -4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 3) u)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))) (pow.f64 u 3))) (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2)) (pow.f64 u 2))) (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 4))))))","(pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 4)","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 4) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3)))) u)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (*.f64 -1 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) 1)) (pow.f64 u 2))) (+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 4) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3)))) u)) (/.f64 (pow.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) 2) (pow.f64 u 2)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (*.f64 -1 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) 1)) (pow.f64 u 2))) (+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 4) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (-.f64 (*.f64 2/3 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) 1))) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) 1) (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3)))))) (pow.f64 u 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3)))) u)) (/.f64 (pow.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) 2) (pow.f64 u 2))))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 4/3)))","(+.f64 (*.f64 3 (*.f64 s (log.f64 4/3))) (*.f64 -3 (*.f64 s u)))","(+.f64 (*.f64 -3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s (log.f64 4/3))) (*.f64 -3 (*.f64 s u))))","(+.f64 (*.f64 -3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s (log.f64 4/3))) (+.f64 (*.f64 -1 (*.f64 s (pow.f64 u 3))) (*.f64 -3 (*.f64 s u)))))","(*.f64 3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))))","(+.f64 (*.f64 -3 (/.f64 s u)) (*.f64 3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))))","(+.f64 (*.f64 -3 (/.f64 s u)) (+.f64 (*.f64 3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 -3/2 (/.f64 s (pow.f64 u 2)))))","(+.f64 (*.f64 -3 (/.f64 s u)) (+.f64 (*.f64 3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (+.f64 (*.f64 -3/2 (/.f64 s (pow.f64 u 2))) (*.f64 -1 (/.f64 s (pow.f64 u 3))))))","(*.f64 3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))))","(+.f64 (*.f64 -3 (/.f64 s u)) (*.f64 3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))))","(+.f64 (*.f64 -3 (/.f64 s u)) (+.f64 (*.f64 3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 -3/2 (/.f64 s (pow.f64 u 2)))))","(+.f64 (*.f64 -3 (/.f64 s u)) (+.f64 (*.f64 3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (+.f64 (*.f64 -3/2 (/.f64 s (pow.f64 u 2))) (*.f64 -1 (/.f64 s (pow.f64 u 3))))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (log.f64 4/3) 4)","(+.f64 (pow.f64 (log.f64 4/3) 4) (*.f64 -4 (*.f64 (pow.f64 (log.f64 4/3) 3) u)))","(fma.f64 -4 (*.f64 (pow.f64 (log.f64 4/3) 3) u) (pow.f64 (log.f64 4/3) 4))","(*.f64 (pow.f64 (log.f64 4/3) 3) (+.f64 (log.f64 4/3) (*.f64 -4 u)))","(+.f64 (pow.f64 (log.f64 4/3) 4) (+.f64 (*.f64 -4 (*.f64 (pow.f64 (log.f64 4/3) 3) u)) (*.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 1 (*.f64 -1 (log.f64 4/3))))) (*.f64 4 (pow.f64 (log.f64 4/3) 2))) (pow.f64 u 2))))","(+.f64 (pow.f64 (log.f64 4/3) 4) (fma.f64 -4 (*.f64 (pow.f64 (log.f64 4/3) 3) u) (*.f64 (fma.f64 2 (*.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 1 (neg.f64 (log.f64 4/3)))) (*.f64 4 (pow.f64 (log.f64 4/3) 2))) (*.f64 u u))))","(+.f64 (fma.f64 -4 (*.f64 (pow.f64 (log.f64 4/3) 3) u) (pow.f64 (log.f64 4/3) 4)) (*.f64 u (*.f64 u (fma.f64 4 (pow.f64 (log.f64 4/3) 2) (*.f64 (-.f64 1 (log.f64 4/3)) (*.f64 2 (pow.f64 (log.f64 4/3) 2)))))))","(+.f64 (*.f64 (pow.f64 (log.f64 4/3) 3) (+.f64 (log.f64 4/3) (*.f64 -4 u))) (*.f64 u (*.f64 u (*.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 (*.f64 2 (-.f64 1 (log.f64 4/3))) 4)))))","(+.f64 (pow.f64 (log.f64 4/3) 4) (+.f64 (*.f64 -4 (*.f64 (pow.f64 (log.f64 4/3) 3) u)) (+.f64 (*.f64 (+.f64 (*.f64 -4 (*.f64 (log.f64 4/3) (+.f64 1 (*.f64 -1 (log.f64 4/3))))) (*.f64 2 (*.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 1 (*.f64 -2/3 (log.f64 4/3)))))) (pow.f64 u 3)) (*.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 1 (*.f64 -1 (log.f64 4/3))))) (*.f64 4 (pow.f64 (log.f64 4/3) 2))) (pow.f64 u 2)))))","(+.f64 (pow.f64 (log.f64 4/3) 4) (fma.f64 -4 (*.f64 (pow.f64 (log.f64 4/3) 3) u) (fma.f64 (fma.f64 -4 (*.f64 (log.f64 4/3) (+.f64 1 (neg.f64 (log.f64 4/3)))) (*.f64 2 (*.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 1 (*.f64 (log.f64 4/3) -2/3))))) (pow.f64 u 3) (*.f64 (fma.f64 2 (*.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 1 (neg.f64 (log.f64 4/3)))) (*.f64 4 (pow.f64 (log.f64 4/3) 2))) (*.f64 u u)))))","(+.f64 (fma.f64 -4 (*.f64 (pow.f64 (log.f64 4/3) 3) u) (pow.f64 (log.f64 4/3) 4)) (fma.f64 (fma.f64 4 (pow.f64 (log.f64 4/3) 2) (*.f64 (-.f64 1 (log.f64 4/3)) (*.f64 2 (pow.f64 (log.f64 4/3) 2)))) (*.f64 u u) (*.f64 (fma.f64 (*.f64 (log.f64 4/3) -4) (-.f64 1 (log.f64 4/3)) (*.f64 (*.f64 2 (fma.f64 (log.f64 4/3) -2/3 1)) (pow.f64 (log.f64 4/3) 2))) (pow.f64 u 3))))","(+.f64 (*.f64 (pow.f64 (log.f64 4/3) 3) (+.f64 (log.f64 4/3) (*.f64 -4 u))) (*.f64 (*.f64 u u) (+.f64 (*.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 (*.f64 2 (-.f64 1 (log.f64 4/3))) 4)) (*.f64 (fma.f64 -4 (-.f64 (log.f64 4/3) (pow.f64 (log.f64 4/3) 2)) (*.f64 (fma.f64 (log.f64 4/3) -2/3 1) (*.f64 2 (pow.f64 (log.f64 4/3) 2)))) u))))","(pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 4)","(pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 4)","(pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 4)","(+.f64 (*.f64 -4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 3) u)) (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 4))","(fma.f64 -4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 3) u) (pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 4))","(fma.f64 -4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 3) u) (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 4))","(+.f64 (*.f64 4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2) (pow.f64 u 2))) (+.f64 (*.f64 -4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 3) u)) (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2)) (pow.f64 u 2))) (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 4))))","(fma.f64 4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 2) (*.f64 u u)) (fma.f64 -4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 3) u) (fma.f64 2 (/.f64 (+.f64 1 (neg.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))))) (/.f64 (*.f64 u u) (pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 2))) (pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 4))))","(fma.f64 4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2) (*.f64 u u)) (fma.f64 -4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 3) u) (fma.f64 2 (*.f64 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2) u) (/.f64 (-.f64 1 (+.f64 (log.f64 -4/3) (log.f64 u))) u)) (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 4))))","(fma.f64 4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2) (*.f64 u u)) (fma.f64 -4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 3) u) (fma.f64 2 (*.f64 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2) (*.f64 u u)) (-.f64 (-.f64 1 (log.f64 u)) (log.f64 -4/3))) (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 4))))","(+.f64 (*.f64 4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2) (pow.f64 u 2))) (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2)) (pow.f64 u 3))) (+.f64 (*.f64 -4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 3) u)) (+.f64 (*.f64 -4 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))) (pow.f64 u 3))) (+.f64 (*.f64 2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2)) (pow.f64 u 2))) (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 4))))))","(fma.f64 4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 2) (*.f64 u u)) (fma.f64 2 (/.f64 (+.f64 1 (*.f64 -2/3 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))))) (/.f64 (pow.f64 u 3) (pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 2))) (fma.f64 -4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 3) u) (fma.f64 -4 (/.f64 (+.f64 1 (neg.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))))) (/.f64 (pow.f64 u 3) (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))))) (fma.f64 2 (/.f64 (+.f64 1 (neg.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))))) (/.f64 (*.f64 u u) (pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 2))) (pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 4))))))","(fma.f64 4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2) (*.f64 u u)) (fma.f64 2 (*.f64 (/.f64 (fma.f64 -2/3 (+.f64 (log.f64 -4/3) (log.f64 u)) 1) (pow.f64 u 3)) (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2)) (fma.f64 -4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 3) u) (fma.f64 -4 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (/.f64 (pow.f64 u 3) (-.f64 1 (+.f64 (log.f64 -4/3) (log.f64 u))))) (fma.f64 2 (*.f64 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2) u) (/.f64 (-.f64 1 (+.f64 (log.f64 -4/3) (log.f64 u))) u)) (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 4))))))","(fma.f64 4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2) (*.f64 u u)) (fma.f64 2 (*.f64 (/.f64 (fma.f64 -2/3 (+.f64 (log.f64 -4/3) (log.f64 u)) 1) (pow.f64 u 3)) (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2)) (fma.f64 -4 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 3) u) (fma.f64 -4 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (/.f64 (pow.f64 u 3) (-.f64 (-.f64 1 (log.f64 u)) (log.f64 -4/3)))) (fma.f64 2 (*.f64 (/.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2) (*.f64 u u)) (-.f64 (-.f64 1 (log.f64 u)) (log.f64 -4/3))) (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 4))))))","(pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 4)","(pow.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 4)","(pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 4)","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 4) (*.f64 -2 (/.f64 (*.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3)))) u)))","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 4) (*.f64 -2 (/.f64 (pow.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 2) (/.f64 u (fma.f64 -2 (log.f64 (/.f64 -1 u)) (*.f64 (log.f64 4/3) 2))))))","(fma.f64 -2 (/.f64 (fma.f64 (log.f64 4/3) 2 (*.f64 (log.f64 (/.f64 -1 u)) -2)) (/.f64 u (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2))) (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 4))","(fma.f64 -2 (*.f64 (/.f64 (fma.f64 (log.f64 (/.f64 -1 u)) -2 (*.f64 (log.f64 4/3) 2)) u) (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2)) (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 4))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (*.f64 -1 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) 1)) (pow.f64 u 2))) (+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 4) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3)))) u)) (/.f64 (pow.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) 2) (pow.f64 u 2)))))","(fma.f64 2 (/.f64 (pow.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 2) (/.f64 (*.f64 u u) (fma.f64 -1 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 1))) (+.f64 (pow.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 4) (fma.f64 -2 (/.f64 (pow.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 2) (/.f64 u (fma.f64 -2 (log.f64 (/.f64 -1 u)) (*.f64 (log.f64 4/3) 2)))) (/.f64 (pow.f64 (fma.f64 -2 (log.f64 (/.f64 -1 u)) (*.f64 (log.f64 4/3) 2)) 2) (*.f64 u u)))))","(+.f64 (fma.f64 -2 (/.f64 (fma.f64 (log.f64 4/3) 2 (*.f64 (log.f64 (/.f64 -1 u)) -2)) (/.f64 u (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2))) (/.f64 (pow.f64 (fma.f64 (log.f64 4/3) 2 (*.f64 (log.f64 (/.f64 -1 u)) -2)) 2) (*.f64 u u))) (fma.f64 2 (*.f64 (/.f64 (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2) u) (/.f64 (-.f64 1 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u)))) u)) (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 4)))","(+.f64 (fma.f64 -2 (*.f64 (/.f64 (fma.f64 (log.f64 (/.f64 -1 u)) -2 (*.f64 (log.f64 4/3) 2)) u) (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2)) (/.f64 (pow.f64 (fma.f64 (log.f64 (/.f64 -1 u)) -2 (*.f64 (log.f64 4/3) 2)) 2) (*.f64 u u))) (fma.f64 2 (/.f64 (+.f64 1 (-.f64 (log.f64 (/.f64 -1 u)) (log.f64 4/3))) (/.f64 (*.f64 u u) (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2))) (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 4)))","(+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (*.f64 -1 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) 1)) (pow.f64 u 2))) (+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 4) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (-.f64 (*.f64 2/3 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) 1))) (*.f64 2 (*.f64 (+.f64 (*.f64 -1 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) 1) (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3)))))) (pow.f64 u 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3)))) u)) (/.f64 (pow.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) 2) (pow.f64 u 2))))))","(fma.f64 2 (/.f64 (pow.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 2) (/.f64 (*.f64 u u) (fma.f64 -1 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 1))) (+.f64 (pow.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 4) (fma.f64 -1 (/.f64 (*.f64 2 (+.f64 (*.f64 (pow.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 2) (fma.f64 2/3 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) -1)) (*.f64 (fma.f64 -2 (log.f64 (/.f64 -1 u)) (*.f64 (log.f64 4/3) 2)) (fma.f64 -1 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 1)))) (pow.f64 u 3)) (fma.f64 -2 (/.f64 (pow.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 2) (/.f64 u (fma.f64 -2 (log.f64 (/.f64 -1 u)) (*.f64 (log.f64 4/3) 2)))) (/.f64 (pow.f64 (fma.f64 -2 (log.f64 (/.f64 -1 u)) (*.f64 (log.f64 4/3) 2)) 2) (*.f64 u u))))))","(+.f64 (-.f64 (fma.f64 -2 (/.f64 (fma.f64 (log.f64 4/3) 2 (*.f64 (log.f64 (/.f64 -1 u)) -2)) (/.f64 u (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2))) (/.f64 (pow.f64 (fma.f64 (log.f64 4/3) 2 (*.f64 (log.f64 (/.f64 -1 u)) -2)) 2) (*.f64 u u))) (/.f64 2 (/.f64 (pow.f64 u 3) (fma.f64 (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2) (fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2/3 -1) (*.f64 (fma.f64 (log.f64 4/3) 2 (*.f64 (log.f64 (/.f64 -1 u)) -2)) (-.f64 1 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))))))))) (fma.f64 2 (*.f64 (/.f64 (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2) u) (/.f64 (-.f64 1 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u)))) u)) (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 4)))","(+.f64 (fma.f64 -2 (*.f64 (/.f64 (fma.f64 (log.f64 (/.f64 -1 u)) -2 (*.f64 (log.f64 4/3) 2)) u) (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2)) (/.f64 (pow.f64 (fma.f64 (log.f64 (/.f64 -1 u)) -2 (*.f64 (log.f64 4/3) 2)) 2) (*.f64 u u))) (-.f64 (fma.f64 2 (/.f64 (+.f64 1 (-.f64 (log.f64 (/.f64 -1 u)) (log.f64 4/3))) (/.f64 (*.f64 u u) (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2))) (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 4)) (*.f64 (/.f64 2 (pow.f64 u 3)) (fma.f64 (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2) (fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2/3 -1) (*.f64 (fma.f64 (log.f64 (/.f64 -1 u)) -2 (*.f64 (log.f64 4/3) 2)) (+.f64 1 (-.f64 (log.f64 (/.f64 -1 u)) (log.f64 4/3))))))))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 -4/3 u 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 -4/3 u 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 -4/3 u 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 -4/3 u 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 -4/3 u 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 -4/3 u 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 -4/3 u 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 -4/3 u 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 -4/3 u 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 -4/3 u 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 -4/3 u 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 3 (*.f64 s (log.f64 (fma.f64 -4/3 u 4/3))))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 3 s))","(*.f64 3 (*.f64 s (log.f64 4/3)))","(*.f64 3 (*.f64 (log.f64 4/3) s))","(*.f64 s (*.f64 (log.f64 4/3) 3))","(*.f64 (log.f64 4/3) (*.f64 3 s))","(+.f64 (*.f64 3 (*.f64 s (log.f64 4/3))) (*.f64 -3 (*.f64 s u)))","(fma.f64 3 (*.f64 (log.f64 4/3) s) (*.f64 -3 (*.f64 u s)))","(fma.f64 3 (*.f64 (log.f64 4/3) s) (*.f64 s (*.f64 u -3)))","(*.f64 s (+.f64 (*.f64 3 (log.f64 4/3)) (*.f64 -3 u)))","(+.f64 (*.f64 -3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s (log.f64 4/3))) (*.f64 -3 (*.f64 s u))))","(fma.f64 -3/2 (*.f64 (*.f64 u u) s) (fma.f64 3 (*.f64 (log.f64 4/3) s) (*.f64 -3 (*.f64 u s))))","(fma.f64 -3/2 (*.f64 (*.f64 u u) s) (fma.f64 3 (*.f64 (log.f64 4/3) s) (*.f64 s (*.f64 u -3))))","(fma.f64 -3/2 (*.f64 (*.f64 u u) s) (*.f64 s (+.f64 (*.f64 3 (log.f64 4/3)) (*.f64 -3 u))))","(+.f64 (*.f64 -3/2 (*.f64 s (pow.f64 u 2))) (+.f64 (*.f64 3 (*.f64 s (log.f64 4/3))) (+.f64 (*.f64 -1 (*.f64 s (pow.f64 u 3))) (*.f64 -3 (*.f64 s u)))))","(fma.f64 -3/2 (*.f64 (*.f64 u u) s) (fma.f64 3 (*.f64 (log.f64 4/3) s) (fma.f64 -1 (*.f64 (pow.f64 u 3) s) (*.f64 -3 (*.f64 u s)))))","(fma.f64 -3/2 (*.f64 (*.f64 u u) s) (fma.f64 3 (*.f64 (log.f64 4/3) s) (-.f64 (*.f64 s (*.f64 u -3)) (*.f64 (pow.f64 u 3) s))))","(fma.f64 -3/2 (*.f64 (*.f64 u u) s) (fma.f64 3 (*.f64 (log.f64 4/3) s) (*.f64 s (-.f64 (*.f64 -3 u) (pow.f64 u 3)))))","(*.f64 3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u))))))","(*.f64 3 (*.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) s))","(*.f64 3 (*.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) s))","(*.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (*.f64 3 s))","(+.f64 (*.f64 -3 (/.f64 s u)) (*.f64 3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))))","(fma.f64 -3 (/.f64 s u) (*.f64 3 (*.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) s)))","(fma.f64 3 (*.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) s) (/.f64 -3 (/.f64 u s)))","(fma.f64 (*.f64 3 s) (+.f64 (log.f64 -4/3) (log.f64 u)) (*.f64 -3 (/.f64 s u)))","(+.f64 (*.f64 -3 (/.f64 s u)) (+.f64 (*.f64 3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (*.f64 -3/2 (/.f64 s (pow.f64 u 2)))))","(fma.f64 -3 (/.f64 s u) (fma.f64 3 (*.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) s) (*.f64 -3/2 (/.f64 s (*.f64 u u)))))","(fma.f64 -3 (/.f64 s u) (fma.f64 3 (*.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) s) (*.f64 -3/2 (/.f64 s (*.f64 u u)))))","(+.f64 (*.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (*.f64 3 s)) (*.f64 (/.f64 s u) (+.f64 -3 (/.f64 -3/2 u))))","(+.f64 (*.f64 -3 (/.f64 s u)) (+.f64 (*.f64 3 (*.f64 s (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))))) (+.f64 (*.f64 -3/2 (/.f64 s (pow.f64 u 2))) (*.f64 -1 (/.f64 s (pow.f64 u 3))))))","(fma.f64 -3 (/.f64 s u) (fma.f64 3 (*.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) s) (fma.f64 -3/2 (/.f64 s (*.f64 u u)) (neg.f64 (/.f64 s (pow.f64 u 3))))))","(fma.f64 -3 (/.f64 s u) (-.f64 (fma.f64 3 (*.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) s) (*.f64 -3/2 (/.f64 s (*.f64 u u)))) (/.f64 s (pow.f64 u 3))))","(fma.f64 -3 (/.f64 s u) (fma.f64 (*.f64 3 s) (+.f64 (log.f64 -4/3) (log.f64 u)) (*.f64 (/.f64 s (*.f64 u u)) (+.f64 -3/2 (/.f64 -1 u)))))","(*.f64 3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))))","(*.f64 3 (*.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) s))","(*.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 3 s))","(+.f64 (*.f64 -3 (/.f64 s u)) (*.f64 3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))))","(fma.f64 -3 (/.f64 s u) (*.f64 3 (*.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) s)))","(fma.f64 3 (*.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) s) (/.f64 -3 (/.f64 u s)))","(fma.f64 3 (*.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) s) (*.f64 -3 (/.f64 s u)))","(+.f64 (*.f64 -3 (/.f64 s u)) (+.f64 (*.f64 3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (*.f64 -3/2 (/.f64 s (pow.f64 u 2)))))","(fma.f64 -3 (/.f64 s u) (fma.f64 3 (*.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) s) (*.f64 -3/2 (/.f64 s (*.f64 u u)))))","(fma.f64 -3 (/.f64 s u) (fma.f64 -3/2 (/.f64 s (*.f64 u u)) (*.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 3 s))))","(+.f64 (*.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 3 s)) (*.f64 (/.f64 s u) (+.f64 -3 (/.f64 -3/2 u))))","(+.f64 (*.f64 -3 (/.f64 s u)) (+.f64 (*.f64 3 (*.f64 s (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))))) (+.f64 (*.f64 -3/2 (/.f64 s (pow.f64 u 2))) (*.f64 -1 (/.f64 s (pow.f64 u 3))))))","(fma.f64 -3 (/.f64 s u) (fma.f64 3 (*.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) s) (fma.f64 -3/2 (/.f64 s (*.f64 u u)) (neg.f64 (/.f64 s (pow.f64 u 3))))))","(fma.f64 -3 (/.f64 s u) (-.f64 (fma.f64 -3/2 (/.f64 s (*.f64 u u)) (*.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 3 s))) (/.f64 s (pow.f64 u 3))))","(fma.f64 -3 (/.f64 s u) (fma.f64 3 (*.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) s) (*.f64 (/.f64 s (*.f64 u u)) (+.f64 -3/2 (/.f64 -1 u)))))"]],"stop":[["node limit",1]],"time":36.079833984375,"type":"simplify"},{"compiler":[[3858,3240]],"time":51.796142578125,"type":"eval"},{"alts":[["(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 -3 s))","fresh",1.1110494189039757],["(*.f64 s (pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3)) 3))","fresh",0.9501389975139783],["(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","fresh",1.3454894560782766],["(*.f64 s (pow.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3) 3) 1/3))","fresh",0.8519026567755411],["(*.f64 s (sqrt.f64 (*.f64 (expm1.f64 (log1p.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2))) 9)))","next",0.7206973892029106],["(pow.f64 (sqrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) 2)","fresh",0.8871842649049686],["(*.f64 s (sqrt.f64 (*.f64 (pow.f64 (-.f64 (+.f64 1 (log1p.f64 (fma.f64 u -4/3 1/3))) 1) 2) 9)))","fresh",1.1940354158384088],["(*.f64 s (log1p.f64 (expm1.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3))))","fresh",0.7403552856001465],["(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))","fresh",1.3783629863701992],["(*.f64 s (sqrt.f64 (*.f64 (sqrt.f64 (pow.f64 (log1p.f64 (log.f64 (exp.f64 (fma.f64 u -4/3 1/3)))) 4)) 9)))","fresh",1.3123740446725236],["(pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) 3)","fresh",0.8900063978130588],["(pow.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) 3) 1/3)","fresh",39.483229295013814],["(*.f64 s (sqrt.f64 (*.f64 (sqrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) 9)))","done",0.7057361587397947]],"compiler":[[11,9],[14,12],[12,10],[15,13],[16,14],[14,12],[18,16],[13,11],[16,14],[17,15],[14,12],[15,13],[15,13],[11,9],[14,12],[12,10],[15,13],[16,14],[14,12],[18,16],[13,11],[16,14],[17,15],[14,12],[15,13]],"count":[[180,13]],"kept":[{"done":[0,0],"fresh":[12,11],"new":[167,1],"picked":[1,1]}],"min-error":[0.046875],"time":23.86181640625,"type":"prune"},{"compiler":[[78,67]],"locations":[["(fma.f64 u -4/3 1/3)",0.31640625,false],["(log1p.f64 (fma.f64 u -4/3 1/3))",0.3923560070753776,false],["(expm1.f64 (log1p.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))",0.40919877930532605,true],["(pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)",0.484375,false]],"time":30.6650390625,"type":"localize"},{"count":[[1,12]],"series":[["(expm1.f64 (log1p.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))","u","-inf",0.26513671875],["(expm1.f64 (log1p.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))","u","inf",0.2490234375],["(expm1.f64 (log1p.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))","u","0",0.27197265625]],"time":0.85595703125,"type":"series"},{"count":[[1,22]],"egraph":[[2,1868,10,0.018134833],[1,183,10,0.0030210410000000004],[0,10,10,0.000355708]],"inputs":[["(expm1.f64 (log1p.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (log1p.f64 (fma.f64 u -4/3 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 2) (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 2) (*.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (*.f64 (sqrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (sqrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))) (sqrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 2)) (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1) 3) 1) (+.f64 (*.f64 (+.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1) (+.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1)) (+.f64 1 (*.f64 (+.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1) (+.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1)) 1) (+.f64 (+.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 2) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (log1p.f64 (fma.f64 u -4/3 1/3)))))))))"]],"rules":[["egg-rr",22]],"stop":[["node limit",1]],"time":36.072998046875,"type":"rewrite"},{"count":[[34,45]],"egraph":[[3,3144,409,0.017178791],[2,733,426,0.005663332],[1,215,451,0.001387374],[0,74,524,0.000323791]],"inputs":[["(pow.f64 (log.f64 4/3) 2)","(+.f64 (pow.f64 (log.f64 4/3) 2) (*.f64 -2 (*.f64 (log.f64 4/3) u)))","(+.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 (*.f64 (+.f64 1 (*.f64 -1 (log.f64 4/3))) (pow.f64 u 2)) (*.f64 -2 (*.f64 (log.f64 4/3) u))))","(+.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (log.f64 4/3))) (pow.f64 u 3)) (+.f64 (*.f64 (+.f64 1 (*.f64 -1 (log.f64 4/3))) (pow.f64 u 2)) (*.f64 -2 (*.f64 (log.f64 4/3) u)))))","(pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2)","(+.f64 (*.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) u)) (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) u)) (+.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 2)) (*.f64 -1 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) (pow.f64 u 2))))))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) u)) (+.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 3)) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) (pow.f64 u 3))) (+.f64 (/.f64 1 (pow.f64 u 2)) (*.f64 -1 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) (pow.f64 u 2))))))))","(pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2)","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) u)))","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) u)) (*.f64 -1 (/.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) (pow.f64 u 2))))))","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) u)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2/3 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) 1) (pow.f64 u 3))) (*.f64 -1 (/.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) (pow.f64 u 2)))))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (log.f64 4/3) 2)","(+.f64 (pow.f64 (log.f64 4/3) 2) (*.f64 -2 (*.f64 (log.f64 4/3) u)))","(+.f64 (pow.f64 (log.f64 4/3) 2) (*.f64 (*.f64 -2 (log.f64 4/3)) u))","(fma.f64 -2 (*.f64 (log.f64 4/3) u) (pow.f64 (log.f64 4/3) 2))","(*.f64 (log.f64 4/3) (+.f64 (log.f64 4/3) (*.f64 -2 u)))","(+.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 (*.f64 (+.f64 1 (*.f64 -1 (log.f64 4/3))) (pow.f64 u 2)) (*.f64 -2 (*.f64 (log.f64 4/3) u))))","(+.f64 (pow.f64 (log.f64 4/3) 2) (fma.f64 (+.f64 1 (neg.f64 (log.f64 4/3))) (*.f64 u u) (*.f64 (*.f64 -2 (log.f64 4/3)) u)))","(+.f64 (pow.f64 (log.f64 4/3) 2) (fma.f64 -2 (*.f64 (log.f64 4/3) u) (*.f64 (-.f64 1 (log.f64 4/3)) (*.f64 u u))))","(fma.f64 u (*.f64 u (-.f64 1 (log.f64 4/3))) (*.f64 (log.f64 4/3) (+.f64 (log.f64 4/3) (*.f64 -2 u))))","(+.f64 (pow.f64 (log.f64 4/3) 2) (+.f64 (*.f64 (+.f64 1 (*.f64 -2/3 (log.f64 4/3))) (pow.f64 u 3)) (+.f64 (*.f64 (+.f64 1 (*.f64 -1 (log.f64 4/3))) (pow.f64 u 2)) (*.f64 -2 (*.f64 (log.f64 4/3) u)))))","(+.f64 (pow.f64 (log.f64 4/3) 2) (fma.f64 (+.f64 1 (*.f64 (log.f64 4/3) -2/3)) (pow.f64 u 3) (fma.f64 (+.f64 1 (neg.f64 (log.f64 4/3))) (*.f64 u u) (*.f64 (*.f64 -2 (log.f64 4/3)) u))))","(+.f64 (pow.f64 (log.f64 4/3) 2) (fma.f64 (fma.f64 (log.f64 4/3) -2/3 1) (pow.f64 u 3) (fma.f64 -2 (*.f64 (log.f64 4/3) u) (*.f64 (-.f64 1 (log.f64 4/3)) (*.f64 u u)))))","(fma.f64 (fma.f64 (log.f64 4/3) -2/3 1) (pow.f64 u 3) (fma.f64 u (*.f64 u (-.f64 1 (log.f64 4/3))) (*.f64 (log.f64 4/3) (+.f64 (log.f64 4/3) (*.f64 -2 u)))))","(pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2)","(pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 2)","(pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2)","(+.f64 (*.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) u)) (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2))","(fma.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) u) (pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 2))","(fma.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) u) (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2))","(*.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (+.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (/.f64 -2 u)))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) u)) (+.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 2)) (*.f64 -1 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) (pow.f64 u 2))))))","(+.f64 (fma.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) u) (pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 2)) (+.f64 (/.f64 1 (*.f64 u u)) (neg.f64 (/.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) (*.f64 u u)))))","(+.f64 (fma.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) u) (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2)) (-.f64 (/.f64 1 (*.f64 u u)) (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (*.f64 u u))))","(+.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2) (+.f64 (/.f64 1 (*.f64 u u)) (*.f64 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) u) (+.f64 (/.f64 -1 u) -2))))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) u)) (+.f64 (pow.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 3)) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) (pow.f64 u 3))) (+.f64 (/.f64 1 (pow.f64 u 2)) (*.f64 -1 (/.f64 (+.f64 (log.f64 -4/3) (*.f64 -1 (log.f64 (/.f64 1 u)))) (pow.f64 u 2))))))))","(+.f64 (fma.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) u) (pow.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) 2)) (+.f64 (/.f64 1 (pow.f64 u 3)) (fma.f64 -2/3 (/.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) (pow.f64 u 3)) (+.f64 (/.f64 1 (*.f64 u u)) (neg.f64 (/.f64 (+.f64 (log.f64 -4/3) (neg.f64 (neg.f64 (log.f64 u)))) (*.f64 u u)))))))","(+.f64 (fma.f64 -2 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) u) (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2)) (+.f64 (/.f64 1 (pow.f64 u 3)) (-.f64 (fma.f64 -2/3 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (pow.f64 u 3)) (/.f64 1 (*.f64 u u))) (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (*.f64 u u)))))","(+.f64 (+.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2) (/.f64 1 (pow.f64 u 3))) (+.f64 (fma.f64 -2/3 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) (pow.f64 u 3)) (/.f64 1 (*.f64 u u))) (*.f64 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) u) (+.f64 (/.f64 -1 u) -2))))","(+.f64 (+.f64 (pow.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) 2) (/.f64 1 (pow.f64 u 3))) (+.f64 (/.f64 1 (*.f64 u u)) (*.f64 (/.f64 (+.f64 (log.f64 -4/3) (log.f64 u)) u) (+.f64 (+.f64 (/.f64 -1 u) (/.f64 -2/3 (*.f64 u u))) -2))))","(pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2)","(pow.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 2)","(pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2)","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) u)))","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 2) (neg.f64 (/.f64 (fma.f64 -2 (log.f64 (/.f64 -1 u)) (*.f64 (log.f64 4/3) 2)) u)))","(-.f64 (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2) (/.f64 (fma.f64 (log.f64 4/3) 2 (*.f64 -2 (log.f64 (/.f64 -1 u)))) u))","(+.f64 (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2) (/.f64 (*.f64 2 (-.f64 (log.f64 (/.f64 -1 u)) (log.f64 4/3))) u))","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) u)) (*.f64 -1 (/.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) (pow.f64 u 2))))))","(+.f64 (+.f64 (pow.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 2) (/.f64 1 (*.f64 u u))) (*.f64 -1 (+.f64 (/.f64 (fma.f64 -2 (log.f64 (/.f64 -1 u)) (*.f64 (log.f64 4/3) 2)) u) (/.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) (*.f64 u u)))))","(+.f64 (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2) (-.f64 (-.f64 (/.f64 1 (*.f64 u u)) (/.f64 (fma.f64 (log.f64 4/3) 2 (*.f64 -2 (log.f64 (/.f64 -1 u)))) u)) (/.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 u u))))","(-.f64 (-.f64 (+.f64 (/.f64 1 (*.f64 u u)) (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2)) (/.f64 (fma.f64 (log.f64 4/3) 2 (*.f64 -2 (log.f64 (/.f64 -1 u)))) u)) (/.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 u u)))","(+.f64 (/.f64 1 (*.f64 u u)) (+.f64 (/.f64 (*.f64 2 (-.f64 (log.f64 (/.f64 -1 u)) (log.f64 4/3))) u) (-.f64 (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2) (/.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 u u)))))","(+.f64 (pow.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) 2) (+.f64 (/.f64 1 (pow.f64 u 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 u))) (*.f64 2 (log.f64 4/3))) u)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2/3 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u))))) 1) (pow.f64 u 3))) (*.f64 -1 (/.f64 (+.f64 (log.f64 4/3) (*.f64 -1 (log.f64 (/.f64 -1 u)))) (pow.f64 u 2)))))))","(+.f64 (+.f64 (pow.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) 2) (/.f64 1 (*.f64 u u))) (fma.f64 -1 (/.f64 (fma.f64 -2 (log.f64 (/.f64 -1 u)) (*.f64 (log.f64 4/3) 2)) u) (fma.f64 -1 (/.f64 (fma.f64 2/3 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) -1) (pow.f64 u 3)) (neg.f64 (/.f64 (+.f64 (log.f64 4/3) (neg.f64 (log.f64 (/.f64 -1 u)))) (*.f64 u u))))))","(+.f64 (/.f64 1 (*.f64 u u)) (+.f64 (-.f64 (-.f64 (/.f64 (neg.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u)))) (*.f64 u u)) (/.f64 (fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2/3 -1) (pow.f64 u 3))) (/.f64 (fma.f64 (log.f64 4/3) 2 (*.f64 -2 (log.f64 (/.f64 -1 u)))) u)) (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2)))","(+.f64 (-.f64 (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2) (/.f64 (fma.f64 (log.f64 4/3) 2 (*.f64 -2 (log.f64 (/.f64 -1 u)))) u)) (-.f64 (-.f64 (/.f64 1 (*.f64 u u)) (/.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 u u))) (/.f64 (fma.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2/3 -1) (pow.f64 u 3))))","(+.f64 (/.f64 (*.f64 2 (-.f64 (log.f64 (/.f64 -1 u)) (log.f64 4/3))) u) (+.f64 (+.f64 (*.f64 (/.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) (*.f64 u u)) (-.f64 -1 (/.f64 2/3 u))) (/.f64 1 (pow.f64 u 3))) (+.f64 (/.f64 1 (*.f64 u u)) (pow.f64 (-.f64 (log.f64 4/3) (log.f64 (/.f64 -1 u))) 2))))"]],"stop":[["node limit",1]],"time":32.51708984375,"type":"simplify"},{"compiler":[[3784,3220]],"time":52.47900390625,"type":"eval"},{"alts":[["(*.f64 s (sqrt.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 2) (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4))) 9)))","fresh",0.7182453246739147],["(*.f64 s (sqrt.f64 (*.f64 (expm1.f64 (log1p.f64 (pow.f64 (-.f64 (+.f64 1 (log1p.f64 (fma.f64 u -4/3 1/3))) 1) 2))) 9)))","fresh",1.192777884217755],["(*.f64 s (log1p.f64 (expm1.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3))))","fresh",0.7403552856001465],["(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 -3 s))","fresh",1.1110494189039757],["(*.f64 s (pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3)) 3))","fresh",0.9501389975139783],["(*.f64 s (sqrt.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 2) 3) 9)))","fresh",0.9320555732167924],["(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","fresh",1.3454894560782766],["(*.f64 s (sqrt.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 3) 1/3) 9)))","fresh",0.777881209598504],["(pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) 3)","fresh",0.8900063978130588],["(*.f64 s (sqrt.f64 (*.f64 (/.f64 (-.f64 (pow.f64 (+.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1) 3) 1) (+.f64 (*.f64 (+.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1) (+.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1)) (+.f64 1 (*.f64 (+.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1) 1)))) 9)))","fresh",2.152660568508536],["(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))","fresh",1.3783629863701992],["(*.f64 s (sqrt.f64 (*.f64 (sqrt.f64 (pow.f64 (log1p.f64 (log.f64 (exp.f64 (fma.f64 u -4/3 1/3)))) 4)) 9)))","fresh",1.3123740446725236],["(pow.f64 (sqrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) 2)","fresh",0.8871842649049686],["(pow.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) 3) 1/3)","fresh",39.483229295013814]],"compiler":[[24,21],[20,18],[13,11],[11,9],[14,12],[17,15],[12,10],[18,16],[14,12],[54,49],[16,14],[17,15],[14,12],[15,13]],"count":[[173,14]],"kept":[{"done":[1,0],"fresh":[11,9],"new":[160,5],"picked":[1,0]}],"min-error":[0.03515625],"time":21.39111328125,"type":"prune"},{"accuracy":[0.7057361587397947],"baseline":[0.7057361587397947],"branch":[["s",0.7057361587397947,1],["u",0.7057361587397948,1],["(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))",0.7057361587397947,1],["(*.f64 3 s)",0.7057361587397947,1],["(log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4))))",0.7057361587397948,1],["(/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))",0.7057361587397948,1],["(-.f64 1 (/.f64 (-.f64 u 1/4) 3/4))",0.7057361587397947,1],["(/.f64 (-.f64 u 1/4) 3/4)",0.7057361587397948,1],["(-.f64 u 1/4)",0.7057361587397948,1]],"compiler":[[3,2],[3,2],[16,14],[5,4],[12,11],[11,10],[9,8],[7,6],[5,4],[348,298]],"count":[[23,1]],"inputs":[["(*.f64 s (sqrt.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 2) (cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4))) 9)))","(*.f64 s (sqrt.f64 (*.f64 (expm1.f64 (log1p.f64 (pow.f64 (-.f64 (+.f64 1 (log1p.f64 (fma.f64 u -4/3 1/3))) 1) 2))) 9)))","(*.f64 s (sqrt.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 u -4/3 1/3))) 2) 3) 9)))","(*.f64 s (sqrt.f64 (*.f64 (pow.f64 (pow.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 3) 1/3) 9)))","(*.f64 s (sqrt.f64 (*.f64 (/.f64 (-.f64 (pow.f64 (+.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1) 3) 1) (+.f64 (*.f64 (+.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1) (+.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1)) (+.f64 1 (*.f64 (+.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 1) 1)))) 9)))","(*.f64 s (sqrt.f64 (*.f64 (sqrt.f64 (pow.f64 (log1p.f64 (log.f64 (exp.f64 (fma.f64 u -4/3 1/3)))) 4)) 9)))","(*.f64 s (sqrt.f64 (*.f64 (expm1.f64 (log1p.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2))) 9)))","(*.f64 s (sqrt.f64 (*.f64 (pow.f64 (-.f64 (+.f64 1 (log1p.f64 (fma.f64 u -4/3 1/3))) 1) 2) 9)))","(*.f64 s (sqrt.f64 (*.f64 (pow.f64 (log1p.f64 (log.f64 (exp.f64 (fma.f64 u -4/3 1/3)))) 2) 9)))","(*.f64 s (sqrt.f64 (*.f64 (sqrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) 9)))","(*.f64 (log.f64 (fma.f64 u -4/3 4/3)) (*.f64 -3 s))","(*.f64 s (pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3)) 3))","(*.f64 -3 (*.f64 s (log.f64 (+.f64 (*.f64 -4/3 u) 4/3))))","(*.f64 s (pow.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3) 3) 1/3))","(*.f64 s (log1p.f64 (expm1.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3))))","(*.f64 s (sqrt.f64 (*.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 2) 9)))","(pow.f64 (sqrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) 2)","(pow.f64 (cbrt.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s))) 3)","(pow.f64 (pow.f64 (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) (*.f64 -3 s)) 3) 1/3)","(*.f64 s (*.f64 (-.f64 (+.f64 1 (log1p.f64 (fma.f64 u -4/3 1/3))) 1) -3))","(*.f64 s (*.f64 (log1p.f64 (log.f64 (exp.f64 (fma.f64 u -4/3 1/3)))) -3))","(*.f64 s (*.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) -3))","(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))"]],"link":["."],"name":["Disney BSSRDF, sample scattering profile, upper"],"oracle":[39.62142146340177],"outputs":[["(*.f64 s (sqrt.f64 (*.f64 (sqrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) 9)))"]],"time":78.82080078125,"times":[["s",7.7900390625],["u",7.8369140625],["(*.f64 (*.f64 3 s) (log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))))",7.989013671875],["(*.f64 3 s)",7.614990234375],["(log.f64 (/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4))))",8.032958984375],["(/.f64 1 (-.f64 1 (/.f64 (-.f64 u 1/4) 3/4)))",8.006103515625],["(-.f64 1 (/.f64 (-.f64 u 1/4) 3/4))",7.739013671875],["(/.f64 (-.f64 u 1/4) 3/4)",7.81201171875],["(-.f64 u 1/4)",7.97412109375]],"type":"regimes"},{"compiler":[[15,13]],"egraph":[[1,16,20,4.2958e-5],[0,14,20,2.5458e-5]],"inputs":[["(*.f64 s (sqrt.f64 (*.f64 (sqrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) 9)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 s (sqrt.f64 (*.f64 (sqrt.f64 (pow.f64 (log1p.f64 (fma.f64 u -4/3 1/3)) 4)) 9)))"]],"stop":[["fuel",1],["saturated",1]],"time":8.443115234375,"type":"simplify"},{"time":0.015869140625,"type":"soundness"},{"compiler":[[15,13]],"remove-preprocessing":[[]],"time":11.01123046875,"type":"end"}]