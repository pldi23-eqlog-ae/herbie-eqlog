[{"compiler":[[14,9]],"method":["search"],"sampling":[[12,0.18722547588549787,0.3988292689435866,0.4139452551709155],[11,0.13261804541889433,0.5012182010684683,0.3661637535126374],[10,0.10921486093320709,0.5304721816755773,0.3603129573912156],[9,0.062408491961832624,0.6864934115801589,0.2510980964580085],[8,0.0,0.8113103955038241,0.1886896044961759],[7,0.0,0.8113103955038241,0.1886896044961759],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":86.6708984375,"type":"analyze"},{"outcomes":[["body",256,"invalid",164.328369140625,4033],["body",256,"valid",370.81640625,8256]],"time":546.170166015625,"type":"sample"},{"compiler":[[13,8]],"egraph":[[0,3,3,2.792e-6],[13,7832,60,0.092036998],[12,7297,60,0.07951404],[11,7236,60,0.068655498],[10,7138,60,0.059785122999999996],[9,6923,60,0.05130308199999999],[8,6400,60,0.042518789999999994],[7,5197,60,0.032185914999999996],[6,3604,60,0.021617499],[5,1463,60,0.011443791],[4,503,60,0.0038609160000000003],[3,200,60,0.001323041],[2,93,60,0.000579791],[1,56,60,0.000269875],[0,19,60,8.8e-5]],"inputs":[["0","1","2"],["(*.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z))))","(*.f64 y (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 z z))))","(*.f64 z (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 x x))))","(*.f64 x (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 y y))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(*.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z))))","(*.f64 y (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 z z))))","(*.f64 z (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 x x))))","(*.f64 x (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 y y))))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":117.875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[14,7054,15,0.088680625],[13,7054,15,0.072145417],[12,6939,15,0.06197525],[11,6693,15,0.052635167000000004],[10,6272,15,0.044134625000000004],[9,5409,15,0.03572675],[8,3918,15,0.025456917],[7,1672,15,0.015566083999999999],[6,847,15,0.006248126],[5,387,15,0.002934959],[4,136,15,0.001111168],[3,60,15,0.000469376],[2,31,15,0.000238793],[1,19,15,0.000126709],[0,9,15,4.9709e-5]],"inputs":[["(*.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z))))","(*.f64 x (sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z)))))"]],"stop":[["node limit",1]],"time":100.573974609375,"type":"simplify"},{"compiler":[[23,13]],"time":0.388916015625,"type":"eval"},{"alts":[["(*.f64 x (sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z)))))","next",27.380925945078967]],"compiler":[[13,8],[13,8]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[27.380925945078967],"time":0.884033203125,"type":"prune"},{"compiler":[[37,8]],"locations":[["(*.f64 x (sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z)))))",0.00390625,true],["(fma.f64 y y (*.f64 z (neg.f64 z)))",3.2499642188722824,true],["(sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z))))",27.965901301557608,true]],"time":6.196044921875,"type":"localize"},{"count":[[3,60]],"series":[["(*.f64 x (sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z)))))","z","-inf",0.320068359375],["(*.f64 x (sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z)))))","z","inf",0.33203125],["(*.f64 x (sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z)))))","z","0",0.72509765625],["(*.f64 x (sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z)))))","y","-inf",0.291015625],["(*.f64 x (sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z)))))","y","inf",0.326904296875],["(*.f64 x (sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z)))))","y","0",0.493896484375],["(*.f64 x (sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z)))))","x","-inf",0.342041015625],["(*.f64 x (sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z)))))","x","inf",0.410888671875],["(*.f64 x (sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z)))))","x","0",0.78515625],["(fma.f64 y y (*.f64 z (neg.f64 z)))","z","-inf",0.162109375],["(fma.f64 y y (*.f64 z (neg.f64 z)))","z","inf",0.2412109375],["(fma.f64 y y (*.f64 z (neg.f64 z)))","z","0",0.471923828125],["(fma.f64 y y (*.f64 z (neg.f64 z)))","y","-inf",0.284912109375],["(fma.f64 y y (*.f64 z (neg.f64 z)))","y","inf",0.322021484375],["(fma.f64 y y (*.f64 z (neg.f64 z)))","y","0",0.362060546875],["(sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z))))","z","-inf",0.30908203125],["(sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z))))","z","inf",0.41796875],["(sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z))))","z","0",0.367919921875],["(sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z))))","y","-inf",0.423828125],["(sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z))))","y","inf",0.510009765625],["(sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z))))","y","0",0.705078125]],"time":8.9189453125,"type":"series"},{"count":[[3,61]],"egraph":[[2,2210,18,0.018557498999999998],[1,181,18,0.003016833],[0,9,37,0.00019525]],"inputs":[["(sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z))))","(fma.f64 y y (*.f64 z (neg.f64 z)))","(*.f64 x (sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (hypot.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 y z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (hypot.f64 y z)) 2) (cbrt.f64 (hypot.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 y z)) (pow.f64 (cbrt.f64 (hypot.f64 y z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (hypot.f64 y z)) (sqrt.f64 (hypot.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 y z)) 2) 2)) (sqrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (hypot.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 y z)) 2) 2) 1/2) (pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 y z)) 2) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 y z) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 y z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 y z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 y z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (hypot.f64 y z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (hypot.f64 y z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 y z)))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 y z)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z z) (*.f64 y y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y y) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y y) 1) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 y y) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 (hypot.f64 y z) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 y z) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 y z) (hypot.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (hypot.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (hypot.f64 y z)) 2) (pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 y z)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (hypot.f64 y z)) 2) (*.f64 (cbrt.f64 (hypot.f64 y z)) (hypot.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 y z)) 2) 2) (pow.f64 (cbrt.f64 (hypot.f64 y z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (hypot.f64 y z)) (*.f64 (sqrt.f64 (hypot.f64 y z)) (hypot.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 y z) (sqrt.f64 (hypot.f64 y z))) (sqrt.f64 (hypot.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 y z) (pow.f64 (cbrt.f64 (hypot.f64 y z)) 2)) (cbrt.f64 (hypot.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 y y) 3) (pow.f64 (*.f64 z z) 3)) (+.f64 (*.f64 (*.f64 y y) (*.f64 y y)) (-.f64 (*.f64 z (pow.f64 z 3)) (*.f64 (*.f64 y y) (*.f64 z z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 y y) (*.f64 y y)) (*.f64 z (pow.f64 z 3))) (pow.f64 (hypot.f64 y z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 y z) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 y z) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (hypot.f64 y z) 2) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (hypot.f64 y z) 2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 y z)) 2) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (pow.f64 (hypot.f64 y z) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (hypot.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 y z) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (hypot.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (hypot.f64 y z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (pow.f64 (hypot.f64 y z) 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (hypot.f64 y z) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (hypot.f64 y z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (hypot.f64 y z) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (hypot.f64 y z) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (hypot.f64 y z) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (hypot.f64 y z) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (hypot.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (hypot.f64 y z) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (hypot.f64 y z) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (hypot.f64 y z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (hypot.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (hypot.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (hypot.f64 y z) x)))))))"]],"rules":[["egg-rr",13],["egg-rr",27],["egg-rr",21]],"stop":[["node limit",1]],"time":40.471923828125,"type":"rewrite"},{"count":[[121,100]],"egraph":[[4,5389,898,0.024326251],[3,2281,902,0.012522793],[2,592,934,0.004386501],[1,197,942,0.001327126],[0,70,978,0.000354209]],"inputs":[["y","(+.f64 y (*.f64 -1/2 (/.f64 (pow.f64 z 2) y)))","(+.f64 y (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 z 2) y)) (*.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)))))","(+.f64 (*.f64 -1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5))) (+.f64 y (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 z 2) y)) (*.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3))))))","(*.f64 -1 y)","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 z 2) y)) (*.f64 -1 y))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 z 2) y)) (+.f64 (*.f64 -1 y) (*.f64 1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)))))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 z 2) y)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5))) (+.f64 (*.f64 -1 y) (*.f64 1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3))))))","y","(+.f64 y (*.f64 -1/2 (/.f64 (pow.f64 z 2) y)))","(+.f64 y (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 z 2) y)) (*.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)))))","(+.f64 (*.f64 -1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5))) (+.f64 y (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 z 2) y)) (*.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3))))))","(*.f64 -1 (pow.f64 z 2))","(+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))","(+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))","(+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))","(pow.f64 y 2)","(+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))","(+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))","(+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))","(pow.f64 y 2)","(+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))","(+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))","(+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))","(pow.f64 y 2)","(+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))","(+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))","(+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))","(*.f64 -1 (pow.f64 z 2))","(+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))","(+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))","(+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))","(*.f64 -1 (pow.f64 z 2))","(+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))","(+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))","(+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))) x)","(*.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))) x)","(*.f64 y x)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (*.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 y x) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3)))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 y x) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3))))))","(*.f64 -1 (*.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (*.f64 -1 (*.f64 y x)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3))) (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 5))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3))) (*.f64 -1 (*.f64 y x)))))","(*.f64 y x)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (*.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 y x) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3)))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 y x) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3))))))"]],"method":["egg-herbie"],"outputs":[["y","(+.f64 y (*.f64 -1/2 (/.f64 (pow.f64 z 2) y)))","(+.f64 y (*.f64 -1/2 (/.f64 (*.f64 z z) y)))","(fma.f64 -1/2 (/.f64 z (/.f64 y z)) y)","(fma.f64 -1/2 (*.f64 z (/.f64 z y)) y)","(+.f64 y (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 z 2) y)) (*.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)))))","(+.f64 y (fma.f64 -1/2 (/.f64 (*.f64 z z) y) (*.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)))))","(+.f64 y (fma.f64 -1/2 (/.f64 z (/.f64 y z)) (/.f64 -1/8 (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(fma.f64 -1/2 (/.f64 z (/.f64 y z)) (fma.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) y))","(fma.f64 -1/2 (*.f64 z (/.f64 z y)) (fma.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) y))","(fma.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) (fma.f64 -1/2 (*.f64 z (/.f64 z y)) y))","(+.f64 (*.f64 -1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5))) (+.f64 y (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 z 2) y)) (*.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3))))))","(fma.f64 -1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5)) (+.f64 y (fma.f64 -1/2 (/.f64 (*.f64 z z) y) (*.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3))))))","(+.f64 (fma.f64 -1/2 (/.f64 z (/.f64 y z)) (/.f64 -1/8 (/.f64 (pow.f64 y 3) (pow.f64 z 4)))) (fma.f64 -1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5)) y))","(fma.f64 -1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5)) (fma.f64 -1/2 (/.f64 z (/.f64 y z)) (fma.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) y)))","(fma.f64 -1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5)) (fma.f64 -1/2 (*.f64 z (/.f64 z y)) (fma.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) y)))","(fma.f64 -1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5)) (fma.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) (fma.f64 -1/2 (*.f64 z (/.f64 z y)) y)))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 z 2) y)) (*.f64 -1 y))","(fma.f64 1/2 (/.f64 (*.f64 z z) y) (neg.f64 y))","(-.f64 (*.f64 (/.f64 z (/.f64 y z)) 1/2) y)","(-.f64 (*.f64 (/.f64 1/2 y) (*.f64 z z)) y)","(-.f64 (*.f64 (*.f64 z z) (/.f64 1/2 y)) y)","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 z 2) y)) (+.f64 (*.f64 -1 y) (*.f64 1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)))))","(fma.f64 1/2 (/.f64 (*.f64 z z) y) (fma.f64 -1 y (*.f64 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) 1/8)))","(fma.f64 (/.f64 z (/.f64 y z)) 1/2 (-.f64 (/.f64 1/8 (/.f64 (pow.f64 y 3) (pow.f64 z 4))) y))","(-.f64 (fma.f64 (/.f64 z (/.f64 y z)) 1/2 (/.f64 (pow.f64 z 4) (/.f64 (pow.f64 y 3) 1/8))) y)","(-.f64 (*.f64 (pow.f64 z 4) (/.f64 1/8 (pow.f64 y 3))) (fma.f64 -1/2 (*.f64 z (/.f64 z y)) y))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 z 2) y)) (+.f64 (*.f64 1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5))) (+.f64 (*.f64 -1 y) (*.f64 1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3))))))","(fma.f64 1/2 (/.f64 (*.f64 z z) y) (fma.f64 1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5)) (fma.f64 -1 y (*.f64 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) 1/8))))","(fma.f64 (/.f64 z (/.f64 y z)) 1/2 (fma.f64 (/.f64 (pow.f64 z 6) (pow.f64 y 5)) 1/16 (-.f64 (/.f64 1/8 (/.f64 (pow.f64 y 3) (pow.f64 z 4))) y)))","(fma.f64 (/.f64 z (/.f64 y z)) 1/2 (-.f64 (fma.f64 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) 1/8 (*.f64 (/.f64 1/16 (pow.f64 y 5)) (pow.f64 z 6))) y))","(-.f64 (fma.f64 (*.f64 z (/.f64 z y)) 1/2 (*.f64 (pow.f64 z 6) (/.f64 1/16 (pow.f64 y 5)))) (fma.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) y))","(-.f64 (*.f64 (pow.f64 z 4) (/.f64 1/8 (pow.f64 y 3))) (fma.f64 -1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5)) (fma.f64 -1/2 (*.f64 z (/.f64 z y)) y)))","y","(+.f64 y (*.f64 -1/2 (/.f64 (pow.f64 z 2) y)))","(+.f64 y (*.f64 -1/2 (/.f64 (*.f64 z z) y)))","(fma.f64 -1/2 (/.f64 z (/.f64 y z)) y)","(fma.f64 -1/2 (*.f64 z (/.f64 z y)) y)","(+.f64 y (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 z 2) y)) (*.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)))))","(+.f64 y (fma.f64 -1/2 (/.f64 (*.f64 z z) y) (*.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)))))","(+.f64 y (fma.f64 -1/2 (/.f64 z (/.f64 y z)) (/.f64 -1/8 (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(fma.f64 -1/2 (/.f64 z (/.f64 y z)) (fma.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) y))","(fma.f64 -1/2 (*.f64 z (/.f64 z y)) (fma.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) y))","(fma.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) (fma.f64 -1/2 (*.f64 z (/.f64 z y)) y))","(+.f64 (*.f64 -1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5))) (+.f64 y (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 z 2) y)) (*.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3))))))","(fma.f64 -1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5)) (+.f64 y (fma.f64 -1/2 (/.f64 (*.f64 z z) y) (*.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3))))))","(+.f64 (fma.f64 -1/2 (/.f64 z (/.f64 y z)) (/.f64 -1/8 (/.f64 (pow.f64 y 3) (pow.f64 z 4)))) (fma.f64 -1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5)) y))","(fma.f64 -1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5)) (fma.f64 -1/2 (/.f64 z (/.f64 y z)) (fma.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) y)))","(fma.f64 -1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5)) (fma.f64 -1/2 (*.f64 z (/.f64 z y)) (fma.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) y)))","(fma.f64 -1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5)) (fma.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) (fma.f64 -1/2 (*.f64 z (/.f64 z y)) y)))","(*.f64 -1 (pow.f64 z 2))","(neg.f64 (*.f64 z z))","(*.f64 z (neg.f64 z))","(+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))","(fma.f64 -1 (*.f64 z z) (*.f64 y y))","(-.f64 (*.f64 y y) (*.f64 z z))","(+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))","(fma.f64 -1 (*.f64 z z) (*.f64 y y))","(-.f64 (*.f64 y y) (*.f64 z z))","(+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))","(fma.f64 -1 (*.f64 z z) (*.f64 y y))","(-.f64 (*.f64 y y) (*.f64 z z))","(pow.f64 y 2)","(*.f64 y y)","(+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))","(fma.f64 -1 (*.f64 z z) (*.f64 y y))","(-.f64 (*.f64 y y) (*.f64 z z))","(+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))","(fma.f64 -1 (*.f64 z z) (*.f64 y y))","(-.f64 (*.f64 y y) (*.f64 z z))","(+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))","(fma.f64 -1 (*.f64 z z) (*.f64 y y))","(-.f64 (*.f64 y y) (*.f64 z z))","(pow.f64 y 2)","(*.f64 y y)","(+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))","(fma.f64 -1 (*.f64 z z) (*.f64 y y))","(-.f64 (*.f64 y y) (*.f64 z z))","(+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))","(fma.f64 -1 (*.f64 z z) (*.f64 y y))","(-.f64 (*.f64 y y) (*.f64 z z))","(+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))","(fma.f64 -1 (*.f64 z z) (*.f64 y y))","(-.f64 (*.f64 y y) (*.f64 z z))","(pow.f64 y 2)","(*.f64 y y)","(+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))","(fma.f64 -1 (*.f64 z z) (*.f64 y y))","(-.f64 (*.f64 y y) (*.f64 z z))","(+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))","(fma.f64 -1 (*.f64 z z) (*.f64 y y))","(-.f64 (*.f64 y y) (*.f64 z z))","(+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))","(fma.f64 -1 (*.f64 z z) (*.f64 y y))","(-.f64 (*.f64 y y) (*.f64 z z))","(*.f64 -1 (pow.f64 z 2))","(neg.f64 (*.f64 z z))","(*.f64 z (neg.f64 z))","(+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))","(fma.f64 -1 (*.f64 z z) (*.f64 y y))","(-.f64 (*.f64 y y) (*.f64 z z))","(+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))","(fma.f64 -1 (*.f64 z z) (*.f64 y y))","(-.f64 (*.f64 y y) (*.f64 z z))","(+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))","(fma.f64 -1 (*.f64 z z) (*.f64 y y))","(-.f64 (*.f64 y y) (*.f64 z z))","(*.f64 -1 (pow.f64 z 2))","(neg.f64 (*.f64 z z))","(*.f64 z (neg.f64 z))","(+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))","(fma.f64 -1 (*.f64 z z) (*.f64 y y))","(-.f64 (*.f64 y y) (*.f64 z z))","(+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))","(fma.f64 -1 (*.f64 z z) (*.f64 y y))","(-.f64 (*.f64 y y) (*.f64 z z))","(+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))","(fma.f64 -1 (*.f64 z z) (*.f64 y y))","(-.f64 (*.f64 y y) (*.f64 z z))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))) x)","(*.f64 x (sqrt.f64 (fma.f64 -1 (*.f64 z z) (*.f64 y y))))","(*.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z))))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))) x)","(*.f64 x (sqrt.f64 (fma.f64 -1 (*.f64 z z) (*.f64 y y))))","(*.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z))))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))) x)","(*.f64 x (sqrt.f64 (fma.f64 -1 (*.f64 z z) (*.f64 y y))))","(*.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z))))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))) x)","(*.f64 x (sqrt.f64 (fma.f64 -1 (*.f64 z z) (*.f64 y y))))","(*.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z))))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))) x)","(*.f64 x (sqrt.f64 (fma.f64 -1 (*.f64 z z) (*.f64 y y))))","(*.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z))))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))) x)","(*.f64 x (sqrt.f64 (fma.f64 -1 (*.f64 z z) (*.f64 y y))))","(*.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z))))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))) x)","(*.f64 x (sqrt.f64 (fma.f64 -1 (*.f64 z z) (*.f64 y y))))","(*.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z))))","(*.f64 (sqrt.f64 (+.f64 (pow.f64 y 2) (*.f64 -1 (pow.f64 z 2)))) x)","(*.f64 x (sqrt.f64 (fma.f64 -1 (*.f64 z z) (*.f64 y y))))","(*.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))) x)","(*.f64 x (sqrt.f64 (fma.f64 -1 (*.f64 z z) (*.f64 y y))))","(*.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))) x)","(*.f64 x (sqrt.f64 (fma.f64 -1 (*.f64 z z) (*.f64 y y))))","(*.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))) x)","(*.f64 x (sqrt.f64 (fma.f64 -1 (*.f64 z z) (*.f64 y y))))","(*.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z))))","(*.f64 (sqrt.f64 (+.f64 (*.f64 -1 (pow.f64 z 2)) (pow.f64 y 2))) x)","(*.f64 x (sqrt.f64 (fma.f64 -1 (*.f64 z z) (*.f64 y y))))","(*.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z))))","(*.f64 y x)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (*.f64 y x))","(fma.f64 -1/2 (/.f64 (*.f64 z z) (/.f64 y x)) (*.f64 y x))","(fma.f64 y x (*.f64 -1/2 (/.f64 z (/.f64 (/.f64 y x) z))))","(fma.f64 -1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (*.f64 y x))","(*.f64 x (fma.f64 -1/2 (*.f64 z (/.f64 z y)) y))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 y x) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3)))))","(fma.f64 -1/2 (/.f64 (*.f64 z z) (/.f64 y x)) (fma.f64 y x (*.f64 -1/8 (/.f64 (pow.f64 z 4) (/.f64 (pow.f64 y 3) x)))))","(fma.f64 -1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (fma.f64 y x (*.f64 -1/8 (/.f64 (pow.f64 z 4) (/.f64 (pow.f64 y 3) x)))))","(fma.f64 y x (fma.f64 -1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (/.f64 (*.f64 -1/8 (*.f64 (pow.f64 z 4) x)) (pow.f64 y 3))))","(fma.f64 y x (*.f64 x (fma.f64 -1/2 (*.f64 z (/.f64 z y)) (*.f64 (pow.f64 z 4) (/.f64 -1/8 (pow.f64 y 3))))))","(fma.f64 -1/8 (*.f64 (pow.f64 z 4) (/.f64 x (pow.f64 y 3))) (*.f64 x (fma.f64 -1/2 (*.f64 z (/.f64 z y)) y)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 y x) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3))))))","(fma.f64 -1/16 (/.f64 (pow.f64 z 6) (/.f64 (pow.f64 y 5) x)) (fma.f64 -1/2 (/.f64 (*.f64 z z) (/.f64 y x)) (fma.f64 y x (*.f64 -1/8 (/.f64 (pow.f64 z 4) (/.f64 (pow.f64 y 3) x))))))","(fma.f64 -1/16 (/.f64 (pow.f64 z 6) (/.f64 (pow.f64 y 5) x)) (fma.f64 -1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (fma.f64 y x (*.f64 -1/8 (/.f64 (pow.f64 z 4) (/.f64 (pow.f64 y 3) x))))))","(fma.f64 -1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (fma.f64 -1/16 (*.f64 (/.f64 x (pow.f64 y 5)) (pow.f64 z 6)) (fma.f64 y x (/.f64 (*.f64 -1/8 (*.f64 (pow.f64 z 4) x)) (pow.f64 y 3)))))","(+.f64 (*.f64 x (fma.f64 -1/2 (*.f64 z (/.f64 z y)) y)) (*.f64 x (fma.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) (/.f64 (pow.f64 z 6) (/.f64 (pow.f64 y 5) -1/16)))))","(fma.f64 x (fma.f64 -1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5)) y) (*.f64 x (fma.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) (*.f64 (*.f64 z z) (/.f64 -1/2 y)))))","(*.f64 -1 (*.f64 y x))","(*.f64 (neg.f64 y) x)","(*.f64 y (neg.f64 x))","(neg.f64 (*.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (*.f64 -1 (*.f64 y x)))","(fma.f64 1/2 (/.f64 (*.f64 z z) (/.f64 y x)) (*.f64 (neg.f64 y) x))","(fma.f64 1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (*.f64 y (neg.f64 x)))","(fma.f64 1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (neg.f64 (*.f64 y x)))","(*.f64 x (-.f64 (*.f64 (*.f64 z z) (/.f64 1/2 y)) y))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3))) (*.f64 -1 (*.f64 y x))))","(fma.f64 1/2 (/.f64 (*.f64 z z) (/.f64 y x)) (fma.f64 1/8 (/.f64 (pow.f64 z 4) (/.f64 (pow.f64 y 3) x)) (*.f64 (neg.f64 y) x)))","(fma.f64 1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (-.f64 (*.f64 1/8 (/.f64 (pow.f64 z 4) (/.f64 (pow.f64 y 3) x))) (*.f64 y x)))","(fma.f64 1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3)) (fma.f64 1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (neg.f64 (*.f64 y x))))","(fma.f64 (*.f64 z (/.f64 z y)) (*.f64 1/2 x) (*.f64 x (fma.f64 (/.f64 1/8 (pow.f64 y 3)) (pow.f64 z 4) (neg.f64 y))))","(-.f64 (/.f64 (*.f64 (pow.f64 z 4) 1/8) (/.f64 (pow.f64 y 3) x)) (*.f64 x (fma.f64 -1/2 (*.f64 z (/.f64 z y)) y)))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 5))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3))) (*.f64 -1 (*.f64 y x)))))","(fma.f64 1/16 (/.f64 (pow.f64 z 6) (/.f64 (pow.f64 y 5) x)) (fma.f64 1/2 (/.f64 (*.f64 z z) (/.f64 y x)) (fma.f64 1/8 (/.f64 (pow.f64 z 4) (/.f64 (pow.f64 y 3) x)) (*.f64 (neg.f64 y) x))))","(fma.f64 1/16 (/.f64 (pow.f64 z 6) (/.f64 (pow.f64 y 5) x)) (fma.f64 1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (-.f64 (*.f64 1/8 (/.f64 (pow.f64 z 4) (/.f64 (pow.f64 y 3) x))) (*.f64 y x))))","(fma.f64 1/16 (*.f64 (/.f64 x (pow.f64 y 5)) (pow.f64 z 6)) (fma.f64 1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3)) (fma.f64 1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (neg.f64 (*.f64 y x)))))","(-.f64 (*.f64 x (fma.f64 (*.f64 z (/.f64 z y)) 1/2 (*.f64 (pow.f64 z 6) (/.f64 1/16 (pow.f64 y 5))))) (*.f64 x (fma.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) y)))","(fma.f64 x (fma.f64 (*.f64 z (/.f64 z y)) 1/2 (*.f64 (pow.f64 z 4) (/.f64 1/8 (pow.f64 y 3)))) (*.f64 x (-.f64 (/.f64 (*.f64 (pow.f64 z 6) 1/16) (pow.f64 y 5)) y)))","(*.f64 y x)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (*.f64 y x))","(fma.f64 -1/2 (/.f64 (*.f64 z z) (/.f64 y x)) (*.f64 y x))","(fma.f64 y x (*.f64 -1/2 (/.f64 z (/.f64 (/.f64 y x) z))))","(fma.f64 -1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (*.f64 y x))","(*.f64 x (fma.f64 -1/2 (*.f64 z (/.f64 z y)) y))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 y x) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3)))))","(fma.f64 -1/2 (/.f64 (*.f64 z z) (/.f64 y x)) (fma.f64 y x (*.f64 -1/8 (/.f64 (pow.f64 z 4) (/.f64 (pow.f64 y 3) x)))))","(fma.f64 -1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (fma.f64 y x (*.f64 -1/8 (/.f64 (pow.f64 z 4) (/.f64 (pow.f64 y 3) x)))))","(fma.f64 y x (fma.f64 -1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (/.f64 (*.f64 -1/8 (*.f64 (pow.f64 z 4) x)) (pow.f64 y 3))))","(fma.f64 y x (*.f64 x (fma.f64 -1/2 (*.f64 z (/.f64 z y)) (*.f64 (pow.f64 z 4) (/.f64 -1/8 (pow.f64 y 3))))))","(fma.f64 -1/8 (*.f64 (pow.f64 z 4) (/.f64 x (pow.f64 y 3))) (*.f64 x (fma.f64 -1/2 (*.f64 z (/.f64 z y)) y)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 y x) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3))))))","(fma.f64 -1/16 (/.f64 (pow.f64 z 6) (/.f64 (pow.f64 y 5) x)) (fma.f64 -1/2 (/.f64 (*.f64 z z) (/.f64 y x)) (fma.f64 y x (*.f64 -1/8 (/.f64 (pow.f64 z 4) (/.f64 (pow.f64 y 3) x))))))","(fma.f64 -1/16 (/.f64 (pow.f64 z 6) (/.f64 (pow.f64 y 5) x)) (fma.f64 -1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (fma.f64 y x (*.f64 -1/8 (/.f64 (pow.f64 z 4) (/.f64 (pow.f64 y 3) x))))))","(fma.f64 -1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (fma.f64 -1/16 (*.f64 (/.f64 x (pow.f64 y 5)) (pow.f64 z 6)) (fma.f64 y x (/.f64 (*.f64 -1/8 (*.f64 (pow.f64 z 4) x)) (pow.f64 y 3)))))","(+.f64 (*.f64 x (fma.f64 -1/2 (*.f64 z (/.f64 z y)) y)) (*.f64 x (fma.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) (/.f64 (pow.f64 z 6) (/.f64 (pow.f64 y 5) -1/16)))))","(fma.f64 x (fma.f64 -1/16 (/.f64 (pow.f64 z 6) (pow.f64 y 5)) y) (*.f64 x (fma.f64 -1/8 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) (*.f64 (*.f64 z z) (/.f64 -1/2 y)))))"]],"stop":[["node limit",1]],"time":45.93017578125,"type":"simplify"},{"compiler":[[1305,702]],"time":15.046875,"type":"eval"},{"alts":[["(*.f64 x (hypot.f64 y z))","next",0.5318131459842362],["(*.f64 x (sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z)))))","done",27.380925945078967],["(neg.f64 (*.f64 y x))","fresh",28.311941250375515]],"compiler":[[8,5],[13,8],[7,5],[8,5],[7,5]],"count":[[101,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[100,2],"picked":[1,1]}],"min-error":[0.10012884590094194],"time":19.34912109375,"type":"prune"},{"compiler":[[14,5]],"locations":[["(*.f64 x (hypot.f64 y z))",0.0078125,true]],"time":3.161865234375,"type":"localize"},{"count":[[1,36]],"series":[["(*.f64 x (hypot.f64 y z))","z","-inf",0.294921875],["(*.f64 x (hypot.f64 y z))","z","inf",0.4951171875],["(*.f64 x (hypot.f64 y z))","z","0",0.343017578125],["(*.f64 x (hypot.f64 y z))","y","-inf",0.282958984375],["(*.f64 x (hypot.f64 y z))","y","inf",0.365966796875],["(*.f64 x (hypot.f64 y z))","y","0",0.472900390625],["(*.f64 x (hypot.f64 y z))","x","-inf",0.85107421875],["(*.f64 x (hypot.f64 y z))","x","inf",0.33984375],["(*.f64 x (hypot.f64 y z))","x","0",0.630126953125]],"time":4.2080078125,"type":"series"},{"count":[[1,11]],"egraph":[[2,1383,7,0.014670873999999999],[1,118,7,0.0018313329999999999],[0,6,7,0.000139291]],"inputs":[["(*.f64 x (hypot.f64 y z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (hypot.f64 y z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (hypot.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (hypot.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (hypot.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (hypot.f64 y z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (hypot.f64 y z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (hypot.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (hypot.f64 y z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (hypot.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (hypot.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (hypot.f64 y z))))))))"]],"rules":[["egg-rr",11]],"stop":[["node limit",1]],"time":31.175048828125,"type":"rewrite"},{"count":[[47,43]],"egraph":[[4,6789,688,0.030435749999999998],[3,3517,688,0.016080542],[2,760,718,0.005968167],[1,231,718,0.00163325],[0,77,814,0.000389917]],"inputs":[["(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 z x)","(+.f64 (*.f64 z x) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) x) z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) x) z)) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 z 3)))))","(+.f64 (*.f64 z x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) x) z)) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 y 6) x) (pow.f64 z 5))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 z 3))))))","(*.f64 y x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (*.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 y x) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3)))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 5))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 y x) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3))))))","(*.f64 -1 (*.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (*.f64 -1 (*.f64 y x)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3))) (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3))) (*.f64 -1 (*.f64 y x)))))","(*.f64 y x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (*.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 y x) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3)))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 5))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 y x) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3))))))","(*.f64 z x)","(+.f64 (*.f64 z x) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) x) z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) x) z)) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 z 3)))))","(+.f64 (*.f64 z x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) x) z)) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 y 6) x) (pow.f64 z 5))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 z 3))))))","(*.f64 -1 (*.f64 z x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) x) z)) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) x) z)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 z 3))) (*.f64 -1 (*.f64 z x))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) x) z)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 z 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 y 6) x) (pow.f64 z 5))) (*.f64 -1 (*.f64 z x)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))) x)","(*.f64 (hypot.f64 z y) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))) x)","(*.f64 (hypot.f64 z y) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))) x)","(*.f64 (hypot.f64 z y) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))) x)","(*.f64 (hypot.f64 z y) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))) x)","(*.f64 (hypot.f64 z y) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))) x)","(*.f64 (hypot.f64 z y) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))) x)","(*.f64 (hypot.f64 z y) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))) x)","(*.f64 (hypot.f64 z y) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))) x)","(*.f64 (hypot.f64 z y) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))) x)","(*.f64 (hypot.f64 z y) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))) x)","(*.f64 (hypot.f64 z y) x)","(*.f64 (sqrt.f64 (+.f64 (pow.f64 z 2) (pow.f64 y 2))) x)","(*.f64 (sqrt.f64 (+.f64 (*.f64 z z) (*.f64 y y))) x)","(*.f64 (hypot.f64 z y) x)","(*.f64 z x)","(+.f64 (*.f64 z x) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) x) z)))","(fma.f64 z x (/.f64 (*.f64 1/2 (*.f64 (*.f64 y y) x)) z))","(fma.f64 z x (*.f64 1/2 (/.f64 x (/.f64 z (*.f64 y y)))))","(fma.f64 z x (*.f64 1/2 (/.f64 y (/.f64 z (*.f64 y x)))))","(*.f64 x (-.f64 z (/.f64 (*.f64 (*.f64 y y) -1/2) z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) x) z)) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 z 3)))))","(fma.f64 z x (fma.f64 1/2 (/.f64 (*.f64 (*.f64 y y) x) z) (*.f64 -1/8 (/.f64 (pow.f64 y 4) (/.f64 (pow.f64 z 3) x)))))","(fma.f64 z x (fma.f64 1/2 (/.f64 x (/.f64 z (*.f64 y y))) (*.f64 -1/8 (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 3)) x))))","(fma.f64 z x (fma.f64 1/2 (/.f64 y (/.f64 z (*.f64 y x))) (*.f64 -1/8 (*.f64 x (/.f64 (pow.f64 y 4) (pow.f64 z 3))))))","(fma.f64 1/2 (*.f64 (/.f64 x z) (*.f64 y y)) (*.f64 x (+.f64 z (*.f64 -1/8 (/.f64 (pow.f64 y 4) (pow.f64 z 3))))))","(+.f64 (*.f64 z x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) x) z)) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 y 6) x) (pow.f64 z 5))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 z 3))))))","(fma.f64 z x (fma.f64 1/2 (/.f64 (*.f64 (*.f64 y y) x) z) (fma.f64 1/16 (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 z 5) x)) (*.f64 -1/8 (/.f64 (pow.f64 y 4) (/.f64 (pow.f64 z 3) x))))))","(fma.f64 z x (fma.f64 1/2 (/.f64 x (/.f64 z (*.f64 y y))) (fma.f64 -1/8 (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 3)) x) (*.f64 1/16 (*.f64 (/.f64 (pow.f64 y 6) (pow.f64 z 5)) x)))))","(fma.f64 z x (fma.f64 1/2 (/.f64 y (/.f64 z (*.f64 y x))) (fma.f64 -1/8 (*.f64 x (/.f64 (pow.f64 y 4) (pow.f64 z 3))) (*.f64 (/.f64 1/16 (pow.f64 z 5)) (*.f64 x (pow.f64 y 6))))))","(fma.f64 z x (fma.f64 1/16 (*.f64 (/.f64 x (pow.f64 z 5)) (pow.f64 y 6)) (*.f64 x (+.f64 (/.f64 (*.f64 y (*.f64 y 1/2)) z) (/.f64 (*.f64 -1/8 (pow.f64 y 4)) (pow.f64 z 3))))))","(*.f64 y x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (*.f64 y x))","(fma.f64 1/2 (/.f64 (*.f64 z z) (/.f64 y x)) (*.f64 y x))","(fma.f64 y x (*.f64 1/2 (/.f64 z (/.f64 (/.f64 y x) z))))","(fma.f64 y x (/.f64 (*.f64 (*.f64 1/2 z) z) (/.f64 y x)))","(*.f64 x (-.f64 y (*.f64 -1/2 (/.f64 z (/.f64 y z)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 y x) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3)))))","(fma.f64 1/2 (/.f64 (*.f64 z z) (/.f64 y x)) (fma.f64 y x (*.f64 -1/8 (/.f64 (pow.f64 z 4) (/.f64 (pow.f64 y 3) x)))))","(fma.f64 1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (fma.f64 y x (*.f64 -1/8 (/.f64 x (/.f64 (pow.f64 y 3) (pow.f64 z 4))))))","(fma.f64 y x (fma.f64 1/2 (*.f64 x (/.f64 z (/.f64 y z))) (*.f64 -1/8 (/.f64 x (/.f64 (pow.f64 y 3) (pow.f64 z 4))))))","(fma.f64 1/2 (*.f64 x (/.f64 z (/.f64 y z))) (*.f64 x (-.f64 y (/.f64 (*.f64 (pow.f64 z 4) 1/8) (pow.f64 y 3)))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 5))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 y x) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3))))))","(fma.f64 1/16 (/.f64 (pow.f64 z 6) (/.f64 (pow.f64 y 5) x)) (fma.f64 1/2 (/.f64 (*.f64 z z) (/.f64 y x)) (fma.f64 y x (*.f64 -1/8 (/.f64 (pow.f64 z 4) (/.f64 (pow.f64 y 3) x))))))","(fma.f64 1/16 (*.f64 (/.f64 (pow.f64 z 6) (pow.f64 y 5)) x) (fma.f64 1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (fma.f64 y x (*.f64 -1/8 (/.f64 x (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))))","(fma.f64 1/2 (*.f64 x (/.f64 z (/.f64 y z))) (fma.f64 1/16 (/.f64 x (/.f64 (pow.f64 y 5) (pow.f64 z 6))) (fma.f64 y x (*.f64 -1/8 (/.f64 x (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))))","(fma.f64 1/2 (*.f64 x (/.f64 z (/.f64 y z))) (fma.f64 1/16 (*.f64 x (/.f64 (pow.f64 z 6) (pow.f64 y 5))) (*.f64 x (-.f64 y (/.f64 (*.f64 (pow.f64 z 4) 1/8) (pow.f64 y 3))))))","(fma.f64 1/16 (*.f64 x (/.f64 (pow.f64 z 6) (pow.f64 y 5))) (fma.f64 1/2 (*.f64 x (/.f64 z (/.f64 y z))) (*.f64 x (-.f64 y (/.f64 (*.f64 (pow.f64 z 4) 1/8) (pow.f64 y 3))))))","(*.f64 -1 (*.f64 y x))","(neg.f64 (*.f64 y x))","(*.f64 y (neg.f64 x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (*.f64 -1 (*.f64 y x)))","(fma.f64 -1/2 (/.f64 (*.f64 z z) (/.f64 y x)) (neg.f64 (*.f64 y x)))","(-.f64 (*.f64 (/.f64 z (/.f64 (/.f64 y x) z)) -1/2) (*.f64 y x))","(-.f64 (*.f64 (*.f64 x (/.f64 z (/.f64 y z))) -1/2) (*.f64 y x))","(*.f64 x (-.f64 (/.f64 (*.f64 (*.f64 z z) -1/2) y) y))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3))) (*.f64 -1 (*.f64 y x))))","(fma.f64 -1/2 (/.f64 (*.f64 z z) (/.f64 y x)) (fma.f64 1/8 (/.f64 (pow.f64 z 4) (/.f64 (pow.f64 y 3) x)) (neg.f64 (*.f64 y x))))","(fma.f64 (/.f64 z (/.f64 (/.f64 y x) z)) -1/2 (-.f64 (*.f64 (/.f64 x (/.f64 (pow.f64 y 3) (pow.f64 z 4))) 1/8) (*.f64 y x)))","(-.f64 (fma.f64 (*.f64 x (/.f64 z (/.f64 y z))) -1/2 (*.f64 (/.f64 x (/.f64 (pow.f64 y 3) (pow.f64 z 4))) 1/8)) (*.f64 y x))","(fma.f64 (/.f64 (pow.f64 z 4) (pow.f64 y 3)) (*.f64 x 1/8) (*.f64 x (-.f64 (/.f64 (*.f64 (*.f64 z z) -1/2) y) y)))","(fma.f64 (*.f64 x (/.f64 z (/.f64 y z))) -1/2 (*.f64 x (-.f64 (/.f64 (*.f64 (pow.f64 z 4) 1/8) (pow.f64 y 3)) y)))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3))) (*.f64 -1 (*.f64 y x)))))","(fma.f64 -1/16 (/.f64 (pow.f64 z 6) (/.f64 (pow.f64 y 5) x)) (fma.f64 -1/2 (/.f64 (*.f64 z z) (/.f64 y x)) (fma.f64 1/8 (/.f64 (pow.f64 z 4) (/.f64 (pow.f64 y 3) x)) (neg.f64 (*.f64 y x)))))","(fma.f64 (*.f64 (/.f64 (pow.f64 z 6) (pow.f64 y 5)) x) -1/16 (fma.f64 (/.f64 z (/.f64 (/.f64 y x) z)) -1/2 (-.f64 (*.f64 (/.f64 x (/.f64 (pow.f64 y 3) (pow.f64 z 4))) 1/8) (*.f64 y x))))","(-.f64 (fma.f64 (/.f64 x (/.f64 (pow.f64 y 5) (pow.f64 z 6))) -1/16 (fma.f64 (*.f64 x (/.f64 z (/.f64 y z))) -1/2 (*.f64 (/.f64 x (/.f64 (pow.f64 y 3) (pow.f64 z 4))) 1/8))) (*.f64 y x))","(fma.f64 (*.f64 x (/.f64 z (/.f64 y z))) -1/2 (fma.f64 (*.f64 x (/.f64 (pow.f64 z 6) (pow.f64 y 5))) -1/16 (*.f64 x (-.f64 (/.f64 (*.f64 (pow.f64 z 4) 1/8) (pow.f64 y 3)) y))))","(*.f64 y x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (*.f64 y x))","(fma.f64 1/2 (/.f64 (*.f64 z z) (/.f64 y x)) (*.f64 y x))","(fma.f64 y x (*.f64 1/2 (/.f64 z (/.f64 (/.f64 y x) z))))","(fma.f64 y x (/.f64 (*.f64 (*.f64 1/2 z) z) (/.f64 y x)))","(*.f64 x (-.f64 y (*.f64 -1/2 (/.f64 z (/.f64 y z)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 y x) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3)))))","(fma.f64 1/2 (/.f64 (*.f64 z z) (/.f64 y x)) (fma.f64 y x (*.f64 -1/8 (/.f64 (pow.f64 z 4) (/.f64 (pow.f64 y 3) x)))))","(fma.f64 1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (fma.f64 y x (*.f64 -1/8 (/.f64 x (/.f64 (pow.f64 y 3) (pow.f64 z 4))))))","(fma.f64 y x (fma.f64 1/2 (*.f64 x (/.f64 z (/.f64 y z))) (*.f64 -1/8 (/.f64 x (/.f64 (pow.f64 y 3) (pow.f64 z 4))))))","(fma.f64 1/2 (*.f64 x (/.f64 z (/.f64 y z))) (*.f64 x (-.f64 y (/.f64 (*.f64 (pow.f64 z 4) 1/8) (pow.f64 y 3)))))","(+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 z 6) x) (pow.f64 y 5))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 z 2) x) y)) (+.f64 (*.f64 y x) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 z 4) x) (pow.f64 y 3))))))","(fma.f64 1/16 (/.f64 (pow.f64 z 6) (/.f64 (pow.f64 y 5) x)) (fma.f64 1/2 (/.f64 (*.f64 z z) (/.f64 y x)) (fma.f64 y x (*.f64 -1/8 (/.f64 (pow.f64 z 4) (/.f64 (pow.f64 y 3) x))))))","(fma.f64 1/16 (*.f64 (/.f64 (pow.f64 z 6) (pow.f64 y 5)) x) (fma.f64 1/2 (/.f64 z (/.f64 (/.f64 y x) z)) (fma.f64 y x (*.f64 -1/8 (/.f64 x (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))))","(fma.f64 1/2 (*.f64 x (/.f64 z (/.f64 y z))) (fma.f64 1/16 (/.f64 x (/.f64 (pow.f64 y 5) (pow.f64 z 6))) (fma.f64 y x (*.f64 -1/8 (/.f64 x (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))))","(fma.f64 1/2 (*.f64 x (/.f64 z (/.f64 y z))) (fma.f64 1/16 (*.f64 x (/.f64 (pow.f64 z 6) (pow.f64 y 5))) (*.f64 x (-.f64 y (/.f64 (*.f64 (pow.f64 z 4) 1/8) (pow.f64 y 3))))))","(fma.f64 1/16 (*.f64 x (/.f64 (pow.f64 z 6) (pow.f64 y 5))) (fma.f64 1/2 (*.f64 x (/.f64 z (/.f64 y z))) (*.f64 x (-.f64 y (/.f64 (*.f64 (pow.f64 z 4) 1/8) (pow.f64 y 3))))))","(*.f64 z x)","(+.f64 (*.f64 z x) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) x) z)))","(fma.f64 z x (/.f64 (*.f64 1/2 (*.f64 (*.f64 y y) x)) z))","(fma.f64 z x (*.f64 1/2 (/.f64 x (/.f64 z (*.f64 y y)))))","(fma.f64 z x (*.f64 1/2 (/.f64 y (/.f64 z (*.f64 y x)))))","(*.f64 x (-.f64 z (/.f64 (*.f64 (*.f64 y y) -1/2) z)))","(+.f64 (*.f64 z x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) x) z)) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 z 3)))))","(fma.f64 z x (fma.f64 1/2 (/.f64 (*.f64 (*.f64 y y) x) z) (*.f64 -1/8 (/.f64 (pow.f64 y 4) (/.f64 (pow.f64 z 3) x)))))","(fma.f64 z x (fma.f64 1/2 (/.f64 x (/.f64 z (*.f64 y y))) (*.f64 -1/8 (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 3)) x))))","(fma.f64 z x (fma.f64 1/2 (/.f64 y (/.f64 z (*.f64 y x))) (*.f64 -1/8 (*.f64 x (/.f64 (pow.f64 y 4) (pow.f64 z 3))))))","(fma.f64 1/2 (*.f64 (/.f64 x z) (*.f64 y y)) (*.f64 x (+.f64 z (*.f64 -1/8 (/.f64 (pow.f64 y 4) (pow.f64 z 3))))))","(+.f64 (*.f64 z x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 y 2) x) z)) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 y 6) x) (pow.f64 z 5))) (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 z 3))))))","(fma.f64 z x (fma.f64 1/2 (/.f64 (*.f64 (*.f64 y y) x) z) (fma.f64 1/16 (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 z 5) x)) (*.f64 -1/8 (/.f64 (pow.f64 y 4) (/.f64 (pow.f64 z 3) x))))))","(fma.f64 z x (fma.f64 1/2 (/.f64 x (/.f64 z (*.f64 y y))) (fma.f64 -1/8 (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 3)) x) (*.f64 1/16 (*.f64 (/.f64 (pow.f64 y 6) (pow.f64 z 5)) x)))))","(fma.f64 z x (fma.f64 1/2 (/.f64 y (/.f64 z (*.f64 y x))) (fma.f64 -1/8 (*.f64 x (/.f64 (pow.f64 y 4) (pow.f64 z 3))) (*.f64 (/.f64 1/16 (pow.f64 z 5)) (*.f64 x (pow.f64 y 6))))))","(fma.f64 z x (fma.f64 1/16 (*.f64 (/.f64 x (pow.f64 z 5)) (pow.f64 y 6)) (*.f64 x (+.f64 (/.f64 (*.f64 y (*.f64 y 1/2)) z) (/.f64 (*.f64 -1/8 (pow.f64 y 4)) (pow.f64 z 3))))))","(*.f64 -1 (*.f64 z x))","(neg.f64 (*.f64 z x))","(*.f64 z (neg.f64 x))","(*.f64 x (neg.f64 z))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) x) z)) (*.f64 -1 (*.f64 z x)))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) x) z) (neg.f64 (*.f64 z x)))","(-.f64 (*.f64 (/.f64 x (/.f64 z (*.f64 y y))) -1/2) (*.f64 z x))","(-.f64 (*.f64 (/.f64 -1/2 z) (*.f64 (*.f64 y y) x)) (*.f64 z x))","(*.f64 x (-.f64 (/.f64 (*.f64 (*.f64 y y) -1/2) z) z))","(*.f64 x (-.f64 (*.f64 -1/2 (*.f64 (/.f64 y z) y)) z))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) x) z)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 z 3))) (*.f64 -1 (*.f64 z x))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) x) z) (fma.f64 1/8 (/.f64 (pow.f64 y 4) (/.f64 (pow.f64 z 3) x)) (neg.f64 (*.f64 z x))))","(-.f64 (fma.f64 (/.f64 x (/.f64 z (*.f64 y y))) -1/2 (/.f64 1/8 (/.f64 (pow.f64 z 3) (*.f64 x (pow.f64 y 4))))) (*.f64 z x))","(-.f64 (fma.f64 (*.f64 x (/.f64 (pow.f64 y 4) (pow.f64 z 3))) 1/8 (*.f64 (/.f64 -1/2 z) (*.f64 (*.f64 y y) x))) (*.f64 z x))","(fma.f64 (*.f64 (/.f64 x z) (*.f64 y y)) -1/2 (*.f64 x (-.f64 (/.f64 (*.f64 (pow.f64 y 4) 1/8) (pow.f64 z 3)) z)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 y 2) x) z)) (+.f64 (*.f64 1/8 (/.f64 (*.f64 (pow.f64 y 4) x) (pow.f64 z 3))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 y 6) x) (pow.f64 z 5))) (*.f64 -1 (*.f64 z x)))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 y y) x) z) (fma.f64 1/8 (/.f64 (pow.f64 y 4) (/.f64 (pow.f64 z 3) x)) (fma.f64 -1/16 (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 z 5) x)) (neg.f64 (*.f64 z x)))))","(fma.f64 (/.f64 x (/.f64 z (*.f64 y y))) -1/2 (fma.f64 (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 z 3)) x) 1/8 (-.f64 (/.f64 (*.f64 (*.f64 -1/16 x) (pow.f64 y 6)) (pow.f64 z 5)) (*.f64 z x))))","(-.f64 (fma.f64 (/.f64 y (/.f64 z (*.f64 y x))) -1/2 (fma.f64 (*.f64 x (/.f64 (pow.f64 y 4) (pow.f64 z 3))) 1/8 (*.f64 (/.f64 -1/16 (pow.f64 z 5)) (*.f64 x (pow.f64 y 6))))) (*.f64 z x))","(fma.f64 (*.f64 (/.f64 x z) (*.f64 y y)) -1/2 (fma.f64 (*.f64 (/.f64 x (pow.f64 z 5)) (pow.f64 y 6)) -1/16 (*.f64 x (-.f64 (/.f64 (*.f64 (pow.f64 y 4) 1/8) (pow.f64 z 3)) z))))"]],"stop":[["node limit",1]],"time":49.674072265625,"type":"simplify"},{"compiler":[[703,408]],"time":8.39501953125,"type":"eval"},{"alts":[["(*.f64 x (hypot.f64 y z))","done",0.5318131459842362],["(*.f64 x (sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z)))))","done",27.380925945078967],["(neg.f64 (*.f64 y x))","next",28.311941250375515]],"compiler":[[8,5],[13,8],[7,5],[7,5]],"count":[[46,3]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[43,0],"picked":[1,1]}],"min-error":[0.10012884590094194],"time":5.989990234375,"type":"prune"},{"compiler":[[12,5]],"time":2.802978515625,"type":"localize"},{"compiler":[[3,3]],"time":0.0888671875,"type":"eval"},{"alts":[["(*.f64 x (hypot.f64 y z))","done",0.5318131459842362],["(*.f64 x (sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z)))))","done",27.380925945078967],["(neg.f64 (*.f64 y x))","done",28.311941250375515]],"compiler":[[8,5],[13,8],[7,5]],"count":[[3,3]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[0,0],"picked":[1,1]}],"min-error":[0.10012884590094194],"time":0.886962890625,"type":"prune"},{"accuracy":[0.5318131459842362],"baseline":[0.5318131459842362],"branch":[["x",0.5318131459842362,1],["y",0.5318131459842363,1],["z",0.5318131459842362,1],["(*.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z))))",0.5318131459842362,1],["(sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z)))",0.5318131459842362,1],["(-.f64 (*.f64 y y) (*.f64 z z))",0.5318131459842362,1],["(*.f64 y y)",0.5318131459842362,1],["(*.f64 z z)",0.5318131459842362,1],["(*.f64 z z)",0.5318131459842362,1]],"compiler":[[4,3],[4,3],[4,3],[13,8],[11,7],[10,6],[6,4],[6,4],[6,4],[32,17]],"count":[[4,1]],"inputs":[["(*.f64 x (hypot.f64 y z))","(neg.f64 (*.f64 y x))","(*.f64 x (sqrt.f64 (fma.f64 y y (*.f64 z (neg.f64 z)))))","(*.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z))))"]],"link":["."],"name":["Diagrams.TwoD.Apollonian:initialConfig from diagrams-contrib-1.3.0.5, B"],"oracle":[42.77480848109625],"outputs":[["(*.f64 x (hypot.f64 y z))"]],"time":26.927001953125,"times":[["x",3.35595703125],["y",3.259033203125],["z",3.241943359375],["(*.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z))))",2.820068359375],["(sqrt.f64 (-.f64 (*.f64 y y) (*.f64 z z)))",2.884033203125],["(-.f64 (*.f64 y y) (*.f64 z z))",2.85205078125],["(*.f64 y y)",2.77294921875],["(*.f64 z z)",2.532958984375],["(*.f64 z z)",2.1650390625]],"type":"regimes"},{"compiler":[[8,5]],"egraph":[[1,7,7,2.4167e-5],[0,6,7,1.475e-5]],"inputs":[["(*.f64 x (hypot.f64 y z))"]],"method":["egg-herbie"],"outputs":[["(*.f64 x (hypot.f64 y z))"]],"stop":[["done",1],["saturated",1]],"time":8.18505859375,"type":"simplify"},{"time":0.012939453125,"type":"soundness"},{"compiler":[[8,5]],"remove-preprocessing":[[]],"time":7.319091796875,"type":"end"}]