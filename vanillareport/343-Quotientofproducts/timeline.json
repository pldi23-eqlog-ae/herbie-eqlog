[{"compiler":[[12,8]],"method":["search"],"sampling":[[12,0.25341070245305297,0.7426882894970245,0.0039010080499225497],[11,0.18713405719610066,0.8109142478497695,0.0019516949541298345],[10,0.12475603813073377,0.8732922669151364,0.0019516949541298345],[9,0.062378019065366885,0.9356702859805033,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":119.577880859375,"type":"analyze"},{"outcomes":[["body",256,"invalid",87.037109375,2052],["body",256,"valid",355.977783203125,8256]],"time":452.822998046875,"type":"sample"},{"compiler":[[11,7]],"egraph":[[1,4,4,1.0624999999999999e-5],[0,4,4,9.542e-6],[4,289,70,0.0016052489999999998],[3,262,70,0.0011424579999999998],[2,158,70,0.000648583],[1,73,70,0.000292083],[0,22,70,0.000102833]],"inputs":[["0","1","2","3"],["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","(/.f64 (*.f64 a2 a1) (*.f64 b1 b2))","(/.f64 (*.f64 b1 a2) (*.f64 a1 b2))","(/.f64 (*.f64 b2 a2) (*.f64 b1 a1))","(/.f64 (*.f64 a1 b1) (*.f64 a2 b2))","(/.f64 (*.f64 a1 b2) (*.f64 b1 a2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","0","2","3","2"],["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","(/.f64 a1 (/.f64 (*.f64 b1 b2) a2))","(/.f64 a1 (/.f64 b2 (/.f64 a2 b1)))","(/.f64 a1 (*.f64 (/.f64 b1 a2) b2))","(/.f64 a1 (*.f64 b2 (/.f64 b1 a2)))","(/.f64 (*.f64 a2 a1) (*.f64 b1 b2))","(/.f64 a1 (/.f64 (*.f64 b1 b2) a2))","(/.f64 a1 (/.f64 b2 (/.f64 a2 b1)))","(/.f64 a1 (*.f64 (/.f64 b1 a2) b2))","(/.f64 a1 (*.f64 b2 (/.f64 b1 a2)))","(/.f64 (*.f64 b1 a2) (*.f64 a1 b2))","(*.f64 (/.f64 b1 a1) (/.f64 a2 b2))","(*.f64 (/.f64 b1 b2) (/.f64 a2 a1))","(*.f64 a2 (/.f64 b1 (*.f64 a1 b2)))","(/.f64 (*.f64 b2 a2) (*.f64 b1 a1))","(*.f64 (/.f64 b2 b1) (/.f64 a2 a1))","(*.f64 (/.f64 a2 b1) (/.f64 b2 a1))","(*.f64 b2 (/.f64 (/.f64 a2 b1) a1))","(/.f64 (*.f64 a1 b1) (*.f64 a2 b2))","(*.f64 (/.f64 a1 a2) (/.f64 b1 b2))","(*.f64 (/.f64 a1 b2) (/.f64 b1 a2))","(/.f64 (*.f64 a1 (/.f64 b1 a2)) b2)","(*.f64 a1 (/.f64 (/.f64 b1 a2) b2))","(/.f64 (*.f64 a1 b2) (*.f64 b1 a2))","(*.f64 (/.f64 a1 b1) (/.f64 b2 a2))","(*.f64 (/.f64 a1 a2) (/.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 a1 (/.f64 (*.f64 b1 b2) a2))","(/.f64 a1 (/.f64 b2 (/.f64 a2 b1)))","(/.f64 a1 (*.f64 (/.f64 b1 a2) b2))","(/.f64 a1 (*.f64 b2 (/.f64 b1 a2)))"]],"stop":[["unsound",1],["saturated",1]],"symmetry":[["(sort a1 a2)","(sort b1 b2)"]],"time":24.55517578125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[5,79,10,0.000624333],[4,79,10,0.000490374],[3,67,10,0.000347208],[2,38,10,0.000206874],[1,17,10,0.000105333],[0,8,10,4.4916e-5]],"inputs":[["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","(*.f64 (/.f64 a1 b1) (/.f64 a2 b2))","(*.f64 a2 (/.f64 a1 (*.f64 b1 b2)))","(*.f64 a1 (/.f64 a2 (*.f64 b1 b2)))"]],"stop":[["saturated",1]],"time":11.421875,"type":"simplify"},{"compiler":[[18,9]],"time":0.31396484375,"type":"eval"},{"alts":[["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","next",8.36046894093571],["(*.f64 a1 (/.f64 a2 (*.f64 b1 b2)))","fresh",11.668195119186594]],"compiler":[[11,7],[11,7],[11,7],[11,7]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[5.2884205357028256],"time":1.669189453125,"type":"prune"},{"compiler":[[21,7]],"locations":[["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))",8.17044042101826,true]],"time":4.216796875,"type":"localize"},{"count":[[1,48]],"series":[["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","b2","-inf",0.305908203125],["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","b2","inf",0.402099609375],["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","b2","0",0.509033203125],["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","b1","-inf",0.326904296875],["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","b1","inf",0.4521484375],["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","b1","0",0.901123046875],["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","a2","-inf",0.33203125],["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","a2","inf",0.530029296875],["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","a2","0",0.757080078125],["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","a1","-inf",0.31591796875],["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","a1","inf",0.52587890625],["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","a1","0",0.80517578125]],"time":6.33203125,"type":"series"},{"count":[[1,73]],"egraph":[[2,2503,10,0.023298791],[1,169,10,0.0030503329999999997],[0,8,10,0.000170708]],"inputs":[["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 a2 b2)) (/.f64 a1 b1))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 a2 b2)) (/.f64 a1 b1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 a2 b2)) (/.f64 a1 b1)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 a2 b2)) (/.f64 a1 b1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a1 (/.f64 1 (/.f64 b1 (/.f64 a2 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a1 (*.f64 a2 (/.f64 1 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a2 (*.f64 a1 (/.f64 1 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a1 a2) (/.f64 1 (*.f64 b1 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2))) (cbrt.f64 (pow.f64 (/.f64 b1 (/.f64 (*.f64 a1 a2) b2)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 b1 (/.f64 (*.f64 a1 a2) b2)) -2)) (cbrt.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 a1 a2)) 2) (*.f64 (cbrt.f64 (*.f64 a1 a2)) (/.f64 1 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2))) (sqrt.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 a1 a2)) (*.f64 (sqrt.f64 (*.f64 a1 a2)) (/.f64 1 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a1 (neg.f64 a2)) (/.f64 1 (*.f64 b1 (neg.f64 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a1 b1) (/.f64 a2 b2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a2 b2) (/.f64 a1 b1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 b1 b2)) (*.f64 a1 a2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 a1 a2) b1) (/.f64 1 b2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a1 1) (/.f64 a2 (*.f64 b1 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a2 b1) (/.f64 a1 b2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a2 1) (/.f64 a1 (*.f64 b1 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 a1 a2)) 2) 1) (/.f64 (cbrt.f64 (*.f64 a1 a2)) (*.f64 b1 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 a1 a2)) 1) (/.f64 (sqrt.f64 (*.f64 a1 a2)) (*.f64 b1 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 a1 a2)) b1) (/.f64 (sqrt.f64 (*.f64 a1 a2)) b2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a1 b2) (/.f64 a2 b1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 b1) (/.f64 (*.f64 a1 a2) b2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 a1 a2)) 2) b1) (/.f64 (cbrt.f64 (*.f64 a1 a2)) b2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 a1 a2)) b2) (/.f64 (sqrt.f64 (*.f64 a1 a2)) b1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 b2) (/.f64 (*.f64 a1 a2) b1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 a1 a2)) 2) b2) (/.f64 (cbrt.f64 (*.f64 a1 a2)) b1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a1 (*.f64 b1 b2)) a2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a1 (pow.f64 (cbrt.f64 (*.f64 b1 b2)) 2)) (/.f64 a2 (cbrt.f64 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a2 (pow.f64 (cbrt.f64 (*.f64 b1 b2)) 2)) (/.f64 a1 (cbrt.f64 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 b1 b2)) -2) (/.f64 (*.f64 a1 a2) (cbrt.f64 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 a1 a2)) 2) (pow.f64 (cbrt.f64 (*.f64 b1 b2)) 2)) (cbrt.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 a1 a2)) (pow.f64 (cbrt.f64 (*.f64 b1 b2)) 2)) (/.f64 (sqrt.f64 (*.f64 a1 a2)) (cbrt.f64 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a1 (sqrt.f64 (*.f64 b1 b2))) (/.f64 a2 (sqrt.f64 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a2 (sqrt.f64 (*.f64 b1 b2))) (/.f64 a1 (sqrt.f64 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 b1 b2) -1/2) (/.f64 (*.f64 a1 a2) (sqrt.f64 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 a1 a2)) 2) (sqrt.f64 (*.f64 b1 b2))) (/.f64 (cbrt.f64 (*.f64 a1 a2)) (sqrt.f64 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 b1 (/.f64 (*.f64 a1 a2) b2)) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 b1 (/.f64 (*.f64 a1 a2) b2)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 b1 (/.f64 (*.f64 a1 a2) b2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 a1 a2) 3) (pow.f64 (*.f64 b1 b2) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 b1 (/.f64 (*.f64 a1 a2) b2)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2)))) 2)) (cbrt.f64 (log.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2))))) (sqrt.f64 (log.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 a1 a2) (*.f64 b1 (neg.f64 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 b1 (/.f64 (*.f64 a1 a2) b2)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 a2 b2)) (/.f64 a1 b1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 b1 (/.f64 (*.f64 a1 a2) b2)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 a1 a2) 3) (pow.f64 (*.f64 b1 b2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 b1 (/.f64 (*.f64 a1 a2) b2)) -3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 b1 (/.f64 (*.f64 a1 a2) b2))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 a1) 1) (log.f64 (/.f64 b1 (/.f64 a2 b2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 (*.f64 a1 a2)) 1) (log.f64 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 (*.f64 a1 a2)) (*.f64 (log.f64 (*.f64 b1 b2)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 (*.f64 a1 a2)) 1) (*.f64 (log.f64 (*.f64 b1 b2)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 (/.f64 (*.f64 a1 a2) b1)) (*.f64 (log.f64 b2) 1)))))))"]],"rules":[["egg-rr",73]],"stop":[["node limit",1]],"time":43.156005859375,"type":"rewrite"},{"count":[[121,75]],"egraph":[[5,79,480,0.0008142500000000001],[4,79,480,0.000639916],[3,67,480,0.00046525],[2,38,480,0.000293416],[1,17,480,0.00016270800000000001],[0,8,480,7.2166e-5]],"inputs":[["(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 a2 (/.f64 a1 (*.f64 b2 b1)))","(*.f64 a1 (/.f64 a2 (*.f64 b2 b1)))"]],"stop":[["saturated",1]],"time":17.26611328125,"type":"simplify"},{"compiler":[[919,287]],"time":7.781005859375,"type":"eval"},{"alts":[["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","done",8.36046894093571],["(*.f64 (/.f64 1 b1) (/.f64 (*.f64 a1 a2) b2))","fresh",11.271514496993047],["(*.f64 (/.f64 a2 b1) (/.f64 a1 b2))","fresh",11.390867900850349],["(*.f64 (/.f64 a2 b2) (/.f64 a1 b1))","fresh",12.910884709112464],["(*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)","next",8.329489262484314],["(*.f64 (/.f64 1 b2) (/.f64 (*.f64 a1 a2) b1))","fresh",10.063341439427989],["(pow.f64 (cbrt.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2))) 3)","fresh",13.12418326334976],["(*.f64 a1 (/.f64 a2 (*.f64 b1 b2)))","fresh",11.668195119186594]],"compiler":[[11,7],[13,9],[11,7],[11,7],[11,7],[13,9],[14,10],[11,7],[13,9],[11,7],[11,7],[11,7],[13,9],[14,10],[11,7]],"count":[[77,8]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[75,6],"picked":[1,1]}],"min-error":[0.00390625],"time":15.35986328125,"type":"prune"},{"compiler":[[23,7]],"locations":[["(*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)",4.265307664719743,true],["(/.f64 a1 (*.f64 b1 b2))",4.585469958617038,true]],"time":4.407958984375,"type":"localize"},{"count":[[2,84]],"series":[["(*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)","a2","-inf",0.152099609375],["(*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)","a2","inf",0.15185546875],["(*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)","a2","0",0.160888671875],["(*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)","b2","-inf",0.15087890625],["(*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)","b2","inf",0.1669921875],["(*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)","b2","0",0.143798828125],["(*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)","b1","-inf",0.152099609375],["(*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)","b1","inf",0.168212890625],["(*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)","b1","0",0.14501953125],["(*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)","a1","-inf",0.155029296875],["(*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)","a1","inf",0.176025390625],["(*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)","a1","0",0.158935546875],["(/.f64 a1 (*.f64 b1 b2))","b2","-inf",1.373046875],["(/.f64 a1 (*.f64 b1 b2))","b2","inf",0.329833984375],["(/.f64 a1 (*.f64 b1 b2))","b2","0",0.31201171875],["(/.f64 a1 (*.f64 b1 b2))","b1","-inf",0.31689453125],["(/.f64 a1 (*.f64 b1 b2))","b1","inf",0.35205078125],["(/.f64 a1 (*.f64 b1 b2))","b1","0",0.3759765625],["(/.f64 a1 (*.f64 b1 b2))","a1","-inf",0.35498046875],["(/.f64 a1 (*.f64 b1 b2))","a1","inf",0.34912109375],["(/.f64 a1 (*.f64 b1 b2))","a1","0",0.416015625]],"time":6.302001953125,"type":"series"},{"count":[[2,65]],"egraph":[[2,2289,17,0.021288249000000002],[1,166,17,0.002923166],[0,8,17,0.000169666]],"inputs":[["(/.f64 a1 (*.f64 b1 b2))","(*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 a1 (*.f64 b1 b2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a1 (/.f64 (/.f64 1 b1) b2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a1 (*.f64 b1 b2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 a1 (*.f64 b1 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 a1) 2) (*.f64 (cbrt.f64 a1) (/.f64 (/.f64 1 b1) b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 a1 (*.f64 b1 b2))) (pow.f64 (cbrt.f64 (/.f64 a1 (*.f64 b1 b2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 a1 (*.f64 b1 b2))) 2) (cbrt.f64 (/.f64 a1 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 a1) (*.f64 (sqrt.f64 a1) (/.f64 (/.f64 1 b1) b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 a1 (*.f64 b1 b2))) (sqrt.f64 (/.f64 a1 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 a1) (/.f64 1 (*.f64 b1 (neg.f64 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 b1) b2) a1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a1 b1) (/.f64 1 b2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) 1) (/.f64 (cbrt.f64 a1) (*.f64 b1 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 a1) 1) (/.f64 (sqrt.f64 a1) (*.f64 b1 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 a1) b1) (/.f64 (sqrt.f64 a1) b2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 b1) (/.f64 a1 b2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 a1) b2) (/.f64 (sqrt.f64 a1) b1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 b2) (/.f64 a1 b1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b2) (/.f64 (cbrt.f64 a1) b1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 b1 b2)) 2)) (/.f64 a1 (cbrt.f64 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) (pow.f64 (cbrt.f64 (*.f64 b1 b2)) 2)) (cbrt.f64 (/.f64 a1 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 a1) (pow.f64 (cbrt.f64 (*.f64 b1 b2)) 2)) (/.f64 (sqrt.f64 a1) (cbrt.f64 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (*.f64 b1 b2))) (/.f64 a1 (sqrt.f64 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) (sqrt.f64 (*.f64 b1 b2))) (/.f64 (cbrt.f64 a1) (sqrt.f64 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 a1 (*.f64 b1 b2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 a1 (*.f64 b1 b2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 a1 (*.f64 b1 b2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 a1 (*.f64 b1 b2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 b1 (/.f64 a1 b2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 a1 (*.f64 b1 (neg.f64 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 a1 (*.f64 b1 b2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 a1 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 a1 (*.f64 b1 b2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 a1 3) (pow.f64 (*.f64 b1 b2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 a1 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 a1 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 a1 (*.f64 b1 b2))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (*.f64 a2 (/.f64 a1 b1)) b2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 a1 (/.f64 (*.f64 b1 b2) a2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 a2 (/.f64 b1 (/.f64 a1 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 b1 b2) (*.f64 a1 a2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a1 a2) (*.f64 b1 b2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 a1 a2)) (*.f64 b1 (neg.f64 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a1 a2) b1) b2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a1 a2) b2) b1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a1 a2) 1) (*.f64 b1 b2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a1 a2) (pow.f64 (cbrt.f64 (*.f64 b1 b2)) 2)) (cbrt.f64 (*.f64 b1 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 a1 a2) (sqrt.f64 (*.f64 b1 b2))) (sqrt.f64 (*.f64 b1 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 a1) a2) (*.f64 b1 (neg.f64 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 a1 b1) a2) b2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a2 (neg.f64 a1)) (*.f64 b1 (neg.f64 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a2 (/.f64 a1 b1)) b2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 a2 (/.f64 a1 b1)) b2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 a2 (/.f64 a1 b1)) b2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 a2 (/.f64 a1 b1)) b2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (*.f64 a2 (/.f64 a1 b1)) b2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (*.f64 a2 (/.f64 a1 b1)) b2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 a1 (*.f64 b1 b2))) a2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 a2 (/.f64 a1 b1)) b2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 a1 (*.f64 b1 b2)) 3) (pow.f64 a2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 a2 3) (pow.f64 (/.f64 a1 (*.f64 b1 b2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (*.f64 a2 (/.f64 a1 b1)) b2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (*.f64 a2 (/.f64 a1 b1)) b2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (*.f64 a2 (/.f64 a1 b1)) b2)))))))"]],"rules":[["egg-rr",27],["egg-rr",38]],"stop":[["node limit",1]],"time":41.619140625,"type":"rewrite"},{"count":[[149,69]],"egraph":[[5,79,732,0.000936583],[4,79,732,0.00074475],[3,67,732,0.000552083],[2,40,732,0.000360666],[1,19,732,0.000205375],[0,9,732,9.2291e-5]],"inputs":[["(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))"]],"method":["egg-herbie"],"outputs":[["(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)"]],"stop":[["saturated",1]],"time":20.348876953125,"type":"simplify"},{"compiler":[[739,268]],"time":7.112060546875,"type":"eval"},{"alts":[["(*.f64 (*.f64 (/.f64 1 b2) (/.f64 a1 b1)) a2)","fresh",9.35485700441393],["(*.f64 (/.f64 a2 b2) (/.f64 a1 b1))","fresh",12.910884709112464],["(/.f64 (/.f64 (*.f64 a1 a2) b1) b2)","fresh",10.034363684689268],["(*.f64 (/.f64 a2 b1) (/.f64 a1 b2))","fresh",11.390867900850349],["(*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)","done",8.329489262484314],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2)) a2)","next",8.608472418172724],["(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","fresh",11.188401818966858],["(*.f64 a1 (/.f64 a2 (*.f64 b1 b2)))","fresh",11.668195119186594]],"compiler":[[13,9],[11,7],[11,7],[11,7],[11,7],[17,11],[11,7],[11,7],[13,9],[11,7],[11,7],[11,7],[17,11],[11,7],[11,7]],"count":[[77,8]],"kept":[{"done":[1,0],"fresh":[6,3],"new":[69,4],"picked":[1,1]}],"min-error":[0],"time":15.0849609375,"type":"prune"},{"compiler":[[49,21]],"locations":[["(/.f64 (cbrt.f64 a1) b2)",0.2734375,true],["(pow.f64 (cbrt.f64 a1) 2)",0.5381050293053261,true],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2)) a2)",4.265307664719743,true],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2))",5.017025932556441,true]],"time":10.51806640625,"type":"localize"},{"count":[[4,96]],"series":[["(/.f64 (cbrt.f64 a1) b2)","b2","-inf",0.323974609375],["(/.f64 (cbrt.f64 a1) b2)","b2","inf",0.409912109375],["(/.f64 (cbrt.f64 a1) b2)","b2","0",1.322998046875],["(/.f64 (cbrt.f64 a1) b2)","a1","-inf",0.399169921875],["(/.f64 (cbrt.f64 a1) b2)","a1","inf",0.26220703125],["(/.f64 (cbrt.f64 a1) b2)","a1","0",0.383056640625],["(pow.f64 (cbrt.f64 a1) 2)","a1","-inf",0.5830078125],["(pow.f64 (cbrt.f64 a1) 2)","a1","inf",0.4140625],["(pow.f64 (cbrt.f64 a1) 2)","a1","0",0.5],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2)) a2)","a2","-inf",0.22705078125],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2)) a2)","a2","inf",0.2509765625],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2)) a2)","a2","0",0.89306640625],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2)) a2)","b2","-inf",0.22900390625],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2)) a2)","b2","inf",0.2509765625],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2)) a2)","b2","0",0.903076171875],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2)) a2)","b1","-inf",0.2548828125],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2)) a2)","b1","inf",0.233154296875],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2)) a2)","b1","0",0.900146484375],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2)) a2)","a1","-inf",0.662841796875],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2)) a2)","a1","inf",0.22509765625],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2)) a2)","a1","0",0.905029296875],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2))","b2","-inf",0.254150390625],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2))","b2","inf",0.226806640625],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2))","b2","0",1.02001953125],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2))","b1","-inf",0.240966796875],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2))","b1","inf",0.833984375],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2))","b1","0",0.97998046875],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2))","a1","-inf",1.5341796875],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2))","a1","inf",0.26904296875],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2))","a1","0",2.283935546875]],"time":18.544921875,"type":"series"},{"count":[[4,147]],"egraph":[[2,3475,29,0.029003834],[1,259,29,0.004538917],[0,12,29,0.000296875]],"inputs":[["(*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2))","(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2)) a2)","(pow.f64 (cbrt.f64 a1) 2)","(/.f64 (cbrt.f64 a1) b2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 a1 (*.f64 b1 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 a1 (*.f64 b1 b2)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 a1 (*.f64 b1 b2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 a1 (*.f64 b1 b2))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 a1 (*.f64 b1 b2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 a1 (*.f64 b1 b2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 a1 (*.f64 b1 b2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 a1) (*.f64 (*.f64 b1 (pow.f64 (cbrt.f64 a1) -2)) b2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 a1) (*.f64 b2 (*.f64 b1 (pow.f64 (cbrt.f64 a1) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 a1) 2) (*.f64 b1 (/.f64 b2 (cbrt.f64 a1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 a1) 2) (*.f64 (/.f64 b2 (cbrt.f64 a1)) b1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 a1) 2) (/.f64 (*.f64 b1 b2) (cbrt.f64 a1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 a1) 2) (/.f64 b1 (/.f64 (cbrt.f64 a1) b2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 b2 (cbrt.f64 a1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (cbrt.f64 a1) b2) (*.f64 b1 (pow.f64 (cbrt.f64 a1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (*.f64 b1 (pow.f64 (cbrt.f64 a1) -2)) (/.f64 b2 (cbrt.f64 a1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 b2 (cbrt.f64 a1)) (*.f64 b1 (pow.f64 (cbrt.f64 a1) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 b1 b2) a1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 b1 (/.f64 a1 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 b2 (/.f64 a1 b1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 a1) (/.f64 (*.f64 b1 b2) (sqrt.f64 a1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 a1)) (*.f64 (*.f64 b1 (pow.f64 (cbrt.f64 a1) -2)) (neg.f64 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (cbrt.f64 a1) 2)) (*.f64 (/.f64 b2 (cbrt.f64 a1)) (neg.f64 b1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 a1 b2) b1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 a1 b1) b2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 a1) (neg.f64 (*.f64 b1 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 a1 b2)) (neg.f64 b1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 a1 b1)) (neg.f64 b2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 a1)) 1) (*.f64 (neg.f64 b2) (*.f64 b1 (pow.f64 (cbrt.f64 a1) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (cbrt.f64 a1) 2)) 1) (*.f64 (neg.f64 b1) (/.f64 b2 (cbrt.f64 a1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (cbrt.f64 a1) 2)) (cbrt.f64 a1)) (*.f64 (neg.f64 b1) b2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 a1) 2) (neg.f64 (cbrt.f64 a1))) (*.f64 b1 (neg.f64 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (cbrt.f64 a1) 2)) (neg.f64 (cbrt.f64 a1))) (*.f64 (neg.f64 b1) (neg.f64 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 a1)) (pow.f64 (cbrt.f64 a1) 2)) (*.f64 (neg.f64 b2) b1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 a1) (neg.f64 (pow.f64 (cbrt.f64 a1) 2))) (*.f64 b2 (neg.f64 b1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 a1)) (neg.f64 (pow.f64 (cbrt.f64 a1) 2))) (*.f64 (neg.f64 b2) (neg.f64 b1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 a1 b2) 1) b1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 a1 b2) (pow.f64 (cbrt.f64 b1) 2)) (cbrt.f64 b1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 a1 b2) (sqrt.f64 b1)) (sqrt.f64 b1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 a1 b1) 1) b2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 a1 b1) (pow.f64 (cbrt.f64 b2) 2)) (cbrt.f64 b2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 a1 b1) (sqrt.f64 b2)) (sqrt.f64 b2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (cbrt.f64 a1) 2)) (/.f64 (cbrt.f64 a1) b2)) (neg.f64 b1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (cbrt.f64 a1)) (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1)) (neg.f64 b2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (neg.f64 (cbrt.f64 a1))) (neg.f64 b2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (cbrt.f64 a1) b2) (neg.f64 (pow.f64 (cbrt.f64 a1) 2))) (neg.f64 b1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 a1 (*.f64 b1 b2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 a1 (*.f64 b1 b2)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 a1 (*.f64 b1 b2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 a1 (*.f64 b1 b2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 a1 (*.f64 b1 b2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 b1 (pow.f64 (cbrt.f64 a1) -2)) (/.f64 b2 (cbrt.f64 a1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 b2 (cbrt.f64 a1)) (*.f64 b1 (pow.f64 (cbrt.f64 a1) -2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 b1 b2) a1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 b1 (/.f64 a1 b2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 b2 (/.f64 a1 b1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 a1 (*.f64 b1 b2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 a1 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 a1 (*.f64 b1 b2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 a1 (*.f64 b1 b2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 a1 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 a1 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 a1 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 a1 (*.f64 b1 b2))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 a1 (*.f64 b1 b2)) a2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 a2) (/.f64 a1 (*.f64 b1 b2)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 a2) (/.f64 a1 (*.f64 b1 b2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 a2) (/.f64 a1 (*.f64 b1 b2))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 a2) (/.f64 a1 (*.f64 b1 b2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 a1 (*.f64 b1 b2)) a2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cbrt.f64 a1) a2) b2) (*.f64 b1 (pow.f64 (cbrt.f64 a1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 a1) 2) (/.f64 (*.f64 (cbrt.f64 a1) a2) b2)) b1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (cbrt.f64 a1) 2)) (/.f64 (*.f64 (cbrt.f64 a1) a2) b2)) (neg.f64 b1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a1 a2) (*.f64 b1 b2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 a1 b2) a2) b1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 a1 b1) a2) b2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a2 a1) (*.f64 b1 b2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a2 (/.f64 a1 b2)) b1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 a2 (/.f64 a1 b1)) b2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 a1 (*.f64 b1 b2)) a2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 a1 (*.f64 b1 b2)) a2) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 a1 (*.f64 b1 b2)) a2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 a1 (*.f64 b1 b2)) a2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 a2) (/.f64 a1 (*.f64 b1 b2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 a1 (*.f64 b1 b2)) a2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 a1 (*.f64 b1 b2)) a2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 a1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 a1) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 a1) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 a1) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 a1) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 a1) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a1) (cbrt.f64 a1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 a1) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 a1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a1)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 a1)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a1)) 4) (pow.f64 (cbrt.f64 (cbrt.f64 a1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 a1) (pow.f64 a1 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a1 1/6) (sqrt.f64 a1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 a1) (pow.f64 (cbrt.f64 (cbrt.f64 a1)) 2)) (cbrt.f64 (cbrt.f64 a1)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 a1 (cbrt.f64 a1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 a1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 a1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 a1 a1))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 a1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 a1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 a1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 a1)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (cbrt.f64 a1) b2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (cbrt.f64 a1) b2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (cbrt.f64 a1) b2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (cbrt.f64 a1) b2)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (cbrt.f64 a1) b2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (cbrt.f64 a1) b2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 a1) (/.f64 1 b2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 a1) b2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (cbrt.f64 a1) b2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a1)) 2) (*.f64 (cbrt.f64 (cbrt.f64 a1)) (/.f64 1 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (cbrt.f64 a1) b2)) (pow.f64 (cbrt.f64 (/.f64 (cbrt.f64 a1) b2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (cbrt.f64 a1) b2)) 2) (cbrt.f64 (/.f64 (cbrt.f64 a1) b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (cbrt.f64 a1) b2)) (sqrt.f64 (/.f64 (cbrt.f64 a1) b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 a1 1/6) (*.f64 (pow.f64 a1 1/6) (/.f64 1 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 a1)) (/.f64 1 (neg.f64 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 b2) (cbrt.f64 a1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a1)) 2) 1) (/.f64 (cbrt.f64 (cbrt.f64 a1)) b2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 a1 1/6) 1) (/.f64 (pow.f64 a1 1/6) b2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 b2) -2) (/.f64 (cbrt.f64 a1) (cbrt.f64 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a1)) 2) (pow.f64 (cbrt.f64 b2) 2)) (cbrt.f64 (/.f64 (cbrt.f64 a1) b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 a1 1/6) (pow.f64 (cbrt.f64 b2) 2)) (/.f64 (pow.f64 a1 1/6) (cbrt.f64 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b2 -1/2) (/.f64 (cbrt.f64 a1) (sqrt.f64 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (cbrt.f64 a1)) 2) (sqrt.f64 b2)) (/.f64 (cbrt.f64 (cbrt.f64 a1)) (sqrt.f64 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 a1) b2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (cbrt.f64 a1) b2) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (cbrt.f64 a1) b2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (cbrt.f64 a1) b2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (cbrt.f64 a1) b2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 b2 (cbrt.f64 a1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 a1 (pow.f64 b2 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 b2 (cbrt.f64 a1)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (cbrt.f64 a1) (neg.f64 b2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (cbrt.f64 a1) b2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (cbrt.f64 a1) b2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (cbrt.f64 a1) b2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (cbrt.f64 a1) b2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 a1 (pow.f64 b2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (cbrt.f64 a1) b2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (cbrt.f64 a1) b2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (cbrt.f64 a1) b2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (cbrt.f64 a1) b2)) 1))))))"]],"rules":[["egg-rr",39],["egg-rr",20],["egg-rr",26],["egg-rr",62]],"stop":[["node limit",1]],"time":56.123046875,"type":"rewrite"},{"count":[[243,152]],"egraph":[[15,7748,804,0.06372333200000001],[14,7130,804,0.056113749000000004],[13,6587,804,0.047438624000000006],[12,4090,804,0.039007666],[11,3804,804,0.029624375],[10,3556,804,0.025148875],[9,3416,804,0.020940416],[8,3310,804,0.017360875],[7,3113,804,0.014105833000000002],[6,1418,804,0.010517375],[5,874,804,0.0060445],[4,479,804,0.0036615830000000004],[3,237,804,0.0017843750000000002],[2,97,804,0.0007675830000000001],[1,39,804,0.000349708],[0,15,840,0.0001385]],"inputs":[["(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))"]],"method":["egg-herbie"],"outputs":[["(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 a1 (*.f64 b2 b1))","(/.f64 (/.f64 a1 b2) b1)","(/.f64 (/.f64 a1 b1) b2)","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(/.f64 (*.f64 a1 a2) (*.f64 b2 b1))","(*.f64 (/.f64 a1 b2) (/.f64 a2 b1))","(*.f64 (/.f64 a1 (*.f64 b2 b1)) a2)","(*.f64 a1 (/.f64 (/.f64 a2 b1) b2))","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(/.f64 (*.f64 (cbrt.f64 a1) 1) b2)","(/.f64 (cbrt.f64 a1) b2)","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(/.f64 (*.f64 (cbrt.f64 a1) 1) b2)","(/.f64 (cbrt.f64 a1) b2)","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(/.f64 (*.f64 (cbrt.f64 a1) 1) b2)","(/.f64 (cbrt.f64 a1) b2)","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(/.f64 (*.f64 (cbrt.f64 a1) 1) b2)","(/.f64 (cbrt.f64 a1) b2)","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(/.f64 (*.f64 (cbrt.f64 a1) 1) b2)","(/.f64 (cbrt.f64 a1) b2)","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(/.f64 (*.f64 (cbrt.f64 a1) 1) b2)","(/.f64 (cbrt.f64 a1) b2)","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(/.f64 (*.f64 (cbrt.f64 a1) 1) b2)","(/.f64 (cbrt.f64 a1) b2)","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(/.f64 (*.f64 (cbrt.f64 a1) 1) b2)","(/.f64 (cbrt.f64 a1) b2)","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(/.f64 (*.f64 (cbrt.f64 a1) 1) b2)","(/.f64 (cbrt.f64 a1) b2)","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(/.f64 (*.f64 (cbrt.f64 a1) 1) b2)","(/.f64 (cbrt.f64 a1) b2)","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(/.f64 (*.f64 (cbrt.f64 a1) 1) b2)","(/.f64 (cbrt.f64 a1) b2)","(*.f64 (pow.f64 (*.f64 1 a1) 1/3) (/.f64 1 b2))","(/.f64 (*.f64 (cbrt.f64 a1) 1) b2)","(/.f64 (cbrt.f64 a1) b2)"]],"stop":[["node limit",1]],"time":100.10595703125,"type":"simplify"},{"compiler":[[2120,906]],"time":21.071044921875,"type":"eval"},{"alts":[["(/.f64 (/.f64 (*.f64 a1 a2) b1) b2)","fresh",10.034363684689268],["(*.f64 (/.f64 (/.f64 a1 b1) b2) a2)","fresh",9.32360700441393],["(/.f64 (*.f64 a2 (/.f64 a1 b2)) b1)","fresh",11.188401818966858],["(*.f64 (/.f64 a2 b1) (/.f64 a1 b2))","fresh",11.390867900850349],["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","next",8.36046894093571],["(*.f64 (/.f64 a2 b2) (/.f64 a1 b1))","fresh",12.910884709112464],["(*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)","done",8.329489262484314],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2)) a2)","done",8.608472418172724]],"compiler":[[11,7],[11,7],[11,7],[11,7],[11,7],[11,7],[11,7],[17,11],[11,7],[11,7],[11,7],[11,7],[11,7],[11,7]],"count":[[160,8]],"kept":[{"done":[1,1],"fresh":[6,3],"new":[152,3],"picked":[1,1]}],"min-error":[0],"time":36.044921875,"type":"prune"},{"compiler":[[21,7]],"locations":[["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))",8.17044042101826,false]],"time":4.335205078125,"type":"localize"},{"compiler":[[919,287]],"time":7.81884765625,"type":"eval"},{"alts":[["(/.f64 (/.f64 (*.f64 a1 a2) b1) b2)","fresh",10.034363684689268],["(*.f64 (/.f64 (/.f64 a1 b1) b2) a2)","fresh",9.32360700441393],["(/.f64 (*.f64 a2 (/.f64 a1 b2)) b1)","fresh",11.188401818966858],["(*.f64 (/.f64 a2 b1) (/.f64 a1 b2))","fresh",11.390867900850349],["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","done",8.36046894093571],["(*.f64 (/.f64 a2 b2) (/.f64 a1 b1))","fresh",12.910884709112464],["(*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)","done",8.329489262484314],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2)) a2)","done",8.608472418172724]],"compiler":[[11,7],[11,7],[11,7],[11,7],[11,7],[11,7],[11,7],[17,11]],"count":[[83,8]],"kept":[{"done":[2,2],"fresh":[5,5],"new":[75,0],"picked":[1,1]}],"min-error":[0],"time":14.275146484375,"type":"prune"},{"accuracy":[0.7270592620714706],"baseline":[8.329489262484314],"branch":[["a1",4.136589543784901,6],["a2",4.693638974553587,3],["b1",6.101466874960212,2],["b2",4.866790126190199,4],["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))",0.7270592620714706,5],["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))",0.7270592620714706,5],["(*.f64 a1 a2)",2.566294728924687,4],["(*.f64 a1 a2)",2.566294728924687,4],["(*.f64 b1 b2)",2.5025010044443845,5],["(*.f64 b1 b2)",2.5025010044443845,5]],"compiler":[[5,4],[5,4],[5,4],[5,4],[11,7],[11,7],[7,5],[7,5],[7,5],[7,5],[124,47]],"count":[[15,5]],"inputs":[["(*.f64 (/.f64 (/.f64 a1 b1) b2) a2)","(/.f64 (*.f64 a2 (/.f64 a1 b2)) b1)","(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","(*.f64 (*.f64 (/.f64 1 b2) (/.f64 a1 b1)) a2)","(/.f64 (/.f64 (*.f64 a1 a2) b1) b2)","(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 a1) 2) b1) (/.f64 (cbrt.f64 a1) b2)) a2)","(/.f64 (*.f64 (/.f64 a1 b2) a2) b1)","(*.f64 (/.f64 1 b1) (/.f64 (*.f64 a1 a2) b2))","(*.f64 (/.f64 a2 b1) (/.f64 a1 b2))","(*.f64 (/.f64 a2 b2) (/.f64 a1 b1))","(*.f64 (/.f64 a1 (*.f64 b1 b2)) a2)","(*.f64 (/.f64 1 b2) (/.f64 (*.f64 a1 a2) b1))","(pow.f64 (cbrt.f64 (*.f64 (/.f64 a1 b1) (/.f64 a2 b2))) 3)","(*.f64 a1 (/.f64 a2 (*.f64 b1 b2)))","(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))"]],"link":["."],"name":["Quotient of products"],"oracle":[31.92295638293197],"outputs":[["(*.f64 (/.f64 (/.f64 a1 b1) b2) a2)","(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","(*.f64 (/.f64 a2 b1) (/.f64 a1 b2))","(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))","(*.f64 (/.f64 (/.f64 a1 b1) b2) a2)"]],"time":224.52197265625,"times":[["a1",36.347900390625],["a2",21.287841796875],["b1",16.239013671875],["b2",21.591796875],["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))",19.89208984375],["(/.f64 (*.f64 a1 a2) (*.f64 b1 b2))",19.93798828125],["(*.f64 a1 a2)",18.22021484375],["(*.f64 a1 a2)",19.02880859375],["(*.f64 b1 b2)",24.1689453125],["(*.f64 b1 b2)",25.1708984375]],"type":"regimes"},{"bstep":[[1.82832903672503e+299,{"type":"real","value":"+inf"},0.02783203125],[0.0,1.1e-322,0.013916015625],[-9.462293520814e-312,0.0,0.0478515625],[-6.282616901586437e+287,-1.189420180770403e+287,0.117919921875]],"compiler":[[7,6],[11,7]],"method":["left-value","left-value","left-value","left-value"],"time":0.363037109375,"type":"bsearch"},{"compiler":[[79,25]],"egraph":[[1,31,110,8.758400000000001e-5],[0,27,110,5.0375e-5]],"inputs":[["(if (<=.f64 (/.f64 (*.f64 a1 a2) (*.f64 b1 b2)) -500000000000000003815236769787517830257389167755855375390043332219984755318247477305565774567919593256991727777697610447843930272404792499914862630297436635543699813243303073221275494420008458697313224768197604310133506389038893861697957032303559981034741662286988928916069412641477492736) (*.f64 (/.f64 (/.f64 a1 b1) b2) a2) (if (<=.f64 (/.f64 (*.f64 a1 a2) (*.f64 b1 b2)) -1012011266537/202402253307310618352495346718917307049556649764142118356901358027430339567995346891960383701437124495187077864316811911389808737385793476867013399940738509921517424276566361364466907742093216341239767678472745068562007483424692698618103355649159556340810056512358769552333414615230502532186327508646006263307707741093494784) (/.f64 (*.f64 a1 a2) (*.f64 b1 b2)) (if (<=.f64 (/.f64 (*.f64 a1 a2) (*.f64 b1 b2)) 0) (*.f64 (/.f64 a2 b1) (/.f64 a1 b2)) (if (<=.f64 (/.f64 (*.f64 a1 a2) (*.f64 b1 b2)) 200000000000000010500952051040884049740893716221631830983170823102360491597781639157274275016089572808740888766576775635388504647072086115128958436957341396569677440185315160747566046758957618011873790646994159989016223807793528176014930548556028498915851757764011368567623133894439277373091880108032) (/.f64 (*.f64 a1 a2) (*.f64 b1 b2)) (*.f64 (/.f64 (/.f64 a1 b1) b2) a2)))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (/.f64 (*.f64 a1 a2) (*.f64 b1 b2)) -500000000000000003815236769787517830257389167755855375390043332219984755318247477305565774567919593256991727777697610447843930272404792499914862630297436635543699813243303073221275494420008458697313224768197604310133506389038893861697957032303559981034741662286988928916069412641477492736) (*.f64 (/.f64 (/.f64 a1 b1) b2) a2) (if (<=.f64 (/.f64 (*.f64 a1 a2) (*.f64 b1 b2)) -1012011266537/202402253307310618352495346718917307049556649764142118356901358027430339567995346891960383701437124495187077864316811911389808737385793476867013399940738509921517424276566361364466907742093216341239767678472745068562007483424692698618103355649159556340810056512358769552333414615230502532186327508646006263307707741093494784) (/.f64 (*.f64 a1 a2) (*.f64 b1 b2)) (if (<=.f64 (/.f64 (*.f64 a1 a2) (*.f64 b1 b2)) 0) (*.f64 (/.f64 a2 b1) (/.f64 a1 b2)) (if (<=.f64 (/.f64 (*.f64 a1 a2) (*.f64 b1 b2)) 200000000000000010500952051040884049740893716221631830983170823102360491597781639157274275016089572808740888766576775635388504647072086115128958436957341396569677440185315160747566046758957618011873790646994159989016223807793528176014930548556028498915851757764011368567623133894439277373091880108032) (/.f64 (*.f64 a1 a2) (*.f64 b1 b2)) (*.f64 (/.f64 (/.f64 a1 b1) b2) a2)))))","(if (<=.f64 (/.f64 (*.f64 a1 a2) (*.f64 b1 b2)) -500000000000000003815236769787517830257389167755855375390043332219984755318247477305565774567919593256991727777697610447843930272404792499914862630297436635543699813243303073221275494420008458697313224768197604310133506389038893861697957032303559981034741662286988928916069412641477492736) (*.f64 a2 (/.f64 (/.f64 a1 b1) b2)) (if (<=.f64 (/.f64 (*.f64 a1 a2) (*.f64 b1 b2)) -1012011266537/202402253307310618352495346718917307049556649764142118356901358027430339567995346891960383701437124495187077864316811911389808737385793476867013399940738509921517424276566361364466907742093216341239767678472745068562007483424692698618103355649159556340810056512358769552333414615230502532186327508646006263307707741093494784) (/.f64 (*.f64 a1 a2) (*.f64 b1 b2)) (if (<=.f64 (/.f64 (*.f64 a1 a2) (*.f64 b1 b2)) 0) (*.f64 (/.f64 a2 b1) (/.f64 a1 b2)) (if (<=.f64 (/.f64 (*.f64 a1 a2) (*.f64 b1 b2)) 200000000000000010500952051040884049740893716221631830983170823102360491597781639157274275016089572808740888766576775635388504647072086115128958436957341396569677440185315160747566046758957618011873790646994159989016223807793528176014930548556028498915851757764011368567623133894439277373091880108032) (/.f64 (*.f64 a1 a2) (*.f64 b1 b2)) (*.f64 a2 (/.f64 (/.f64 a1 b1) b2))))))"]],"stop":[["fuel",1],["saturated",1]],"time":9.36279296875,"type":"simplify"},{"time":0.01806640625,"type":"soundness"},{"compiler":[[79,25],[79,25],[79,25],[79,25],[79,25],[79,25],[79,25]],"remove-preprocessing":[["(sort b1 b2)"]],"time":25.635009765625,"type":"end"}]