[{"compiler":[[13,9]],"method":["search"],"sampling":[[12,0.4797652819565883,0.4319837802983102,0.08825093774510151],[11,0.40565519775191206,0.5129197933113119,0.08142500893677607],[10,0.34324670579007943,0.5928806736374099,0.06387262057251064],[9,0.2808382138282468,0.7176976575610752,0.0014641286106780171],[8,0.18722547588549787,0.8113103955038241,0.0014641286106780171],[7,0.12481698392366525,0.8737188874656567,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":90.235107421875,"type":"analyze"},{"outcomes":[["body",256,"invalid",53.276611328125,1330],["body",256,"valid",333.2294921875,8256]],"time":396.56201171875,"type":"sample"},{"compiler":[[12,8]],"egraph":[[0,3,3,2.583e-6],[14,5320,44,0.14257954],[13,5320,44,0.122610749],[12,5320,44,0.10470599900000001],[11,5160,44,0.087975249],[10,4144,44,0.070837541],[9,4144,44,0.05275325],[8,4099,44,0.043704166],[7,3880,44,0.033690041000000004],[6,2435,44,0.022113791],[5,1266,44,0.011197124],[4,665,44,0.004208916],[3,276,44,0.0018601240000000001],[2,116,44,0.000739499],[1,47,44,0.00026770799999999997],[0,21,52,8.8291e-5]],"inputs":[["0","1","2"],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) z))","(+.f64 y (*.f64 (*.f64 (-.f64 x y) 6) z))","(+.f64 z (*.f64 (*.f64 (-.f64 y z) 6) x))","(+.f64 x (*.f64 (*.f64 (-.f64 z x) 6) y))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) z))","(+.f64 x (*.f64 (-.f64 y x) (*.f64 6 z)))","(fma.f64 (-.f64 y x) (*.f64 6 z) x)","(fma.f64 (*.f64 (-.f64 y x) 6) z x)","(+.f64 y (*.f64 (*.f64 (-.f64 x y) 6) z))","(+.f64 y (*.f64 z (*.f64 6 (-.f64 x y))))","(fma.f64 z (*.f64 6 (-.f64 x y)) y)","(fma.f64 6 (*.f64 z (-.f64 x y)) y)","(fma.f64 (-.f64 x y) (*.f64 6 z) y)","(+.f64 z (*.f64 (*.f64 (-.f64 y z) 6) x))","(+.f64 z (*.f64 x (*.f64 6 (-.f64 y z))))","(fma.f64 x (*.f64 6 (-.f64 y z)) z)","(+.f64 x (*.f64 (*.f64 (-.f64 z x) 6) y))","(+.f64 x (*.f64 y (*.f64 6 (-.f64 z x))))","(fma.f64 y (*.f64 6 (-.f64 z x)) x)"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":170.389892578125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[13,2667,11,0.044727917000000006],[12,2667,11,0.038021334000000004],[11,2665,11,0.032735834000000005],[10,2601,11,0.026794125000000002],[9,2143,11,0.020910041],[8,1565,11,0.014390416],[7,949,11,0.008064374],[6,599,11,0.004235374],[5,415,11,0.002363166],[4,219,11,0.001294416],[3,93,11,0.000638333],[2,37,11,0.000267],[1,16,11,0.000114583],[0,9,13,4.575e-5]],"inputs":[["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) z))"]],"method":["egg-herbie"],"outputs":[["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) z))","(+.f64 x (*.f64 (-.f64 y x) (*.f64 6 z)))","(fma.f64 (-.f64 y x) (*.f64 6 z) x)","(fma.f64 (*.f64 (-.f64 y x) 6) z x)"]],"stop":[["saturated",1]],"time":56.625,"type":"simplify"},{"compiler":[[20,11]],"time":0.43505859375,"type":"eval"},{"alts":[["(fma.f64 (*.f64 (-.f64 y x) 6) z x)","next",0.1328125],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) z))","fresh",0.13671875]],"compiler":[[11,7],[12,8],[11,7],[12,8]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.12890625],"time":1.68115234375,"type":"prune"},{"compiler":[[23,10]],"locations":[["(*.f64 (-.f64 y x) 6)",0.0234375,true],["(fma.f64 (*.f64 (-.f64 y x) 6) z x)",0.125,true]],"time":5.47998046875,"type":"localize"},{"count":[[2,60]],"series":[["(*.f64 (-.f64 y x) 6)","x","-inf",0.173828125],["(*.f64 (-.f64 y x) 6)","x","inf",0.153076171875],["(*.f64 (-.f64 y x) 6)","x","0",0.156982421875],["(*.f64 (-.f64 y x) 6)","y","-inf",0.177001953125],["(*.f64 (-.f64 y x) 6)","y","inf",0.158935546875],["(*.f64 (-.f64 y x) 6)","y","0",0.194091796875],["(fma.f64 (*.f64 (-.f64 y x) 6) z x)","z","-inf",0.360107421875],["(fma.f64 (*.f64 (-.f64 y x) 6) z x)","z","inf",0.589111328125],["(fma.f64 (*.f64 (-.f64 y x) 6) z x)","z","0",0.36083984375],["(fma.f64 (*.f64 (-.f64 y x) 6) z x)","x","-inf",0.444091796875],["(fma.f64 (*.f64 (-.f64 y x) 6) z x)","x","inf",0.400146484375],["(fma.f64 (*.f64 (-.f64 y x) 6) z x)","x","0",0.454833984375],["(fma.f64 (*.f64 (-.f64 y x) 6) z x)","y","-inf",0.34814453125],["(fma.f64 (*.f64 (-.f64 y x) 6) z x)","y","inf",0.48779296875],["(fma.f64 (*.f64 (-.f64 y x) 6) z x)","y","0",0.48681640625]],"time":5.183837890625,"type":"series"},{"count":[[2,38]],"egraph":[[2,2229,18,0.025587791],[1,171,18,0.003444291],[0,8,18,0.000227916]],"inputs":[["(fma.f64 (*.f64 (-.f64 y x) 6) z x)","(*.f64 (-.f64 y x) 6)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (-.f64 y x) (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 y x) (*.f64 6 z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 y x) (*.f64 6 z)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 (*.f64 (-.f64 y x) 6) z x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 (-.f64 y x) 6) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 (-.f64 y x) 6) z x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 (-.f64 y x) 6) z x)) (pow.f64 (cbrt.f64 (fma.f64 (*.f64 (-.f64 y x) 6) z x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 (-.f64 y x) 6) z x)) 2) (cbrt.f64 (fma.f64 (*.f64 (-.f64 y x) 6) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 (-.f64 y x) 6) z x)) (sqrt.f64 (fma.f64 (*.f64 (-.f64 y x) 6) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (-.f64 y x) (*.f64 6 z)) 3) (pow.f64 x 3)) (+.f64 (*.f64 (*.f64 (-.f64 y x) (*.f64 6 z)) (*.f64 (-.f64 y x) (*.f64 6 z))) (-.f64 (*.f64 x x) (*.f64 (*.f64 (-.f64 y x) (*.f64 6 z)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (-.f64 y x) (*.f64 6 z)) (*.f64 (-.f64 y x) (*.f64 6 z))) (*.f64 x x)) (-.f64 (*.f64 (-.f64 y x) (*.f64 6 z)) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 (-.f64 y x) 6) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 (-.f64 y x) 6) z x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 (-.f64 y x) 6) z x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 (-.f64 y x) 6) z x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (*.f64 (-.f64 y x) 6) z x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (*.f64 (-.f64 y x) 6) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 (-.f64 y x) 6) z x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (*.f64 (-.f64 y x) 6) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (*.f64 (-.f64 y x) 6) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (*.f64 (-.f64 y x) 6) z x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y 6) (*.f64 (neg.f64 x) 6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 6 y) (*.f64 6 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (-.f64 y x) 6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 y 3) (pow.f64 x 3)) 6) (fma.f64 y y (*.f64 x (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 y y) (*.f64 x x)) 6) (+.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 6 (-.f64 (pow.f64 y 3) (pow.f64 x 3))) (fma.f64 y y (*.f64 x (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 6 (-.f64 (*.f64 y y) (*.f64 x x))) (+.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 y x) 6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 y x) 6) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 y x) 6)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (-.f64 y x) 6)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 36 (pow.f64 (-.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 6) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) 6) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (-.f64 y x) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (-.f64 y x) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (-.f64 y x) 6)))))))"]],"rules":[["egg-rr",17],["egg-rr",21]],"stop":[["node limit",1]],"time":48.194091796875,"type":"rewrite"},{"count":[[98,56]],"egraph":[[10,2541,513,0.044638207],[9,2541,513,0.036899957],[8,2451,513,0.031635499],[7,2218,513,0.025038832],[6,1671,513,0.017704957],[5,1062,513,0.010680791],[4,614,513,0.005095083],[3,331,513,0.0026079170000000004],[2,156,531,0.001281458],[1,74,639,0.000616],[0,31,639,0.000205333]],"inputs":[["(+.f64 (*.f64 -6 (*.f64 z x)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(*.f64 (+.f64 1 (*.f64 -6 z)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","x","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(*.f64 6 (*.f64 z (-.f64 y x)))","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(*.f64 6 (*.f64 z (-.f64 y x)))","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -6 (*.f64 z x)) x)","(fma.f64 -6 (*.f64 z x) x)","(*.f64 x (fma.f64 -6 z 1))","(fma.f64 z (*.f64 -6 x) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(*.f64 6 (*.f64 y z))","(*.f64 6 (*.f64 z y))","(*.f64 z (*.f64 6 y))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(*.f64 6 (*.f64 y z))","(*.f64 6 (*.f64 z y))","(*.f64 z (*.f64 6 y))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(*.f64 6 (*.f64 y z))","(*.f64 6 (*.f64 z y))","(*.f64 z (*.f64 6 y))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(*.f64 (+.f64 1 (*.f64 -6 z)) x)","(fma.f64 -6 (*.f64 z x) x)","(*.f64 x (fma.f64 -6 z 1))","(fma.f64 z (*.f64 -6 x) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x))","(fma.f64 -6 (*.f64 z x) x)","(*.f64 x (fma.f64 -6 z 1))","(fma.f64 z (*.f64 -6 x) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","x","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 (-.f64 y x) 6))","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 (-.f64 y x) 6))","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 (-.f64 x y))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 (-.f64 x y))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 (-.f64 x y))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 (-.f64 x y))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 (-.f64 x y))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 (-.f64 x y))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 (-.f64 x y))"]],"stop":[["saturated",1]],"time":70.0390625,"type":"simplify"},{"compiler":[[659,342]],"time":8.83984375,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (fma.f64 (*.f64 (-.f64 y x) 6) z x)) 3)","fresh",0.7172814942110508],["(fma.f64 (+.f64 (*.f64 6 y) (*.f64 -6 x)) z x)","next",0.12890625],["(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","fresh",0.140625],["(fma.f64 (/.f64 (*.f64 (-.f64 (pow.f64 y 3) (pow.f64 x 3)) 6) (fma.f64 y y (*.f64 x (+.f64 y x)))) z x)","fresh",35.77235080089619],["(fma.f64 (*.f64 z 6) (-.f64 y x) x)","fresh",0.1484375]],"compiler":[[14,10],[13,9],[12,8],[24,15],[11,7],[14,10],[13,9],[12,8],[24,15],[11,7]],"count":[[58,5]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[56,5],"picked":[1,0]}],"min-error":[0],"time":12.407958984375,"type":"prune"},{"compiler":[[31,20]],"locations":[["(+.f64 (*.f64 6 y) (*.f64 -6 x))",0.01171875,true],["(fma.f64 (+.f64 (*.f64 6 y) (*.f64 -6 x)) z x)",0.125,true]],"time":7.4111328125,"type":"localize"},{"count":[[2,42]],"series":[["(+.f64 (*.f64 6 y) (*.f64 -6 x))","x","-inf",0.163818359375],["(+.f64 (*.f64 6 y) (*.f64 -6 x))","x","inf",0.139892578125],["(+.f64 (*.f64 6 y) (*.f64 -6 x))","x","0",0.166015625],["(+.f64 (*.f64 6 y) (*.f64 -6 x))","y","-inf",0.14111328125],["(+.f64 (*.f64 6 y) (*.f64 -6 x))","y","inf",0.141845703125],["(+.f64 (*.f64 6 y) (*.f64 -6 x))","y","0",0.169921875],["(fma.f64 (+.f64 (*.f64 6 y) (*.f64 -6 x)) z x)","z","-inf",0.2421875],["(fma.f64 (+.f64 (*.f64 6 y) (*.f64 -6 x)) z x)","z","inf",0.253173828125],["(fma.f64 (+.f64 (*.f64 6 y) (*.f64 -6 x)) z x)","z","0",0.291015625],["(fma.f64 (+.f64 (*.f64 6 y) (*.f64 -6 x)) z x)","x","-inf",0.281005859375],["(fma.f64 (+.f64 (*.f64 6 y) (*.f64 -6 x)) z x)","x","inf",0.278076171875],["(fma.f64 (+.f64 (*.f64 6 y) (*.f64 -6 x)) z x)","x","0",0.30712890625],["(fma.f64 (+.f64 (*.f64 6 y) (*.f64 -6 x)) z x)","y","-inf",0.2548828125],["(fma.f64 (+.f64 (*.f64 6 y) (*.f64 -6 x)) z x)","y","inf",0.322021484375],["(fma.f64 (+.f64 (*.f64 6 y) (*.f64 -6 x)) z x)","y","0",0.4140625]],"time":3.737060546875,"type":"series"},{"count":[[2,103]],"egraph":[[2,2661,20,0.024076583999999998],[1,211,20,0.003611251],[0,10,20,0.000301334]],"inputs":[["(fma.f64 (+.f64 (*.f64 6 y) (*.f64 -6 x)) z x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (fma.f64 6 y (*.f64 -6 x)) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 6 y (*.f64 -6 x)) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 6 y (*.f64 -6 x)) z) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)) (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x) 2)) (cbrt.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)) (sqrt.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 6 y (*.f64 -6 x)) z) 3) (pow.f64 x 3)) (+.f64 (pow.f64 (*.f64 (fma.f64 6 y (*.f64 -6 x)) z) 2) (-.f64 (*.f64 x x) (*.f64 (*.f64 (fma.f64 6 y (*.f64 -6 x)) z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (fma.f64 6 y (*.f64 -6 x)) z) 2) (*.f64 x x)) (-.f64 (*.f64 (fma.f64 6 y (*.f64 -6 x)) z) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x))) 2)) (cbrt.f64 (log.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)))) (sqrt.f64 (log.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (pow.f64 (exp.f64 (fma.f64 6 y (*.f64 -6 x))) z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (fma.f64 6 y (*.f64 -6 x))) z) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 6 y (*.f64 -6 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 36 (*.f64 y y)) (fma.f64 6 y (*.f64 6 x))) (/.f64 (pow.f64 (*.f64 -6 x) 2) (fma.f64 6 y (*.f64 6 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 6 y (*.f64 -6 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 6 y (*.f64 -6 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 6 y (*.f64 -6 x))) (pow.f64 (cbrt.f64 (fma.f64 6 y (*.f64 -6 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 6 y (*.f64 -6 x))) 2) (cbrt.f64 (fma.f64 6 y (*.f64 -6 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 6 y (*.f64 -6 x))) (sqrt.f64 (fma.f64 6 y (*.f64 -6 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -216 (pow.f64 x 3) (*.f64 216 (pow.f64 y 3))) (/.f64 1 (fma.f64 (*.f64 -6 x) (-.f64 (*.f64 -6 x) (*.f64 6 y)) (*.f64 36 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 36 (*.f64 y y) (neg.f64 (pow.f64 (*.f64 -6 x) 2))) (/.f64 1 (fma.f64 6 y (*.f64 6 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 -6 x) (-.f64 (*.f64 -6 x) (*.f64 6 y)) (*.f64 36 (*.f64 y y))) (fma.f64 -216 (pow.f64 x 3) (*.f64 216 (pow.f64 y 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 6 y (*.f64 6 x)) (fma.f64 36 (*.f64 y y) (neg.f64 (pow.f64 (*.f64 -6 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -216 (pow.f64 x 3) (*.f64 216 (pow.f64 y 3))) (fma.f64 (*.f64 -6 x) (-.f64 (*.f64 -6 x) (*.f64 6 y)) (*.f64 36 (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -216 (pow.f64 x 3) (*.f64 216 (pow.f64 y 3))) (fma.f64 36 (*.f64 x x) (-.f64 (*.f64 36 (*.f64 y y)) (*.f64 6 (*.f64 y (*.f64 -6 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 36 (*.f64 y y) (neg.f64 (pow.f64 (*.f64 -6 x) 2))) (fma.f64 6 y (*.f64 6 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 -216 (pow.f64 x 3) (*.f64 216 (pow.f64 y 3)))) (neg.f64 (fma.f64 (*.f64 -6 x) (-.f64 (*.f64 -6 x) (*.f64 6 y)) (*.f64 36 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 36 (*.f64 y y) (neg.f64 (pow.f64 (*.f64 -6 x) 2)))) (neg.f64 (fma.f64 6 y (*.f64 6 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 -6 x) 2) (*.f64 36 (*.f64 y y))) (-.f64 (*.f64 -6 x) (*.f64 6 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 6 y (*.f64 -6 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 6 y (*.f64 -6 x)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 6 y (*.f64 -6 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 6 y (*.f64 -6 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 6 y (*.f64 -6 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (fma.f64 6 y (*.f64 -6 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (*.f64 -6 x) (-.f64 (*.f64 -6 x) (*.f64 6 y)) (*.f64 36 (*.f64 y y))) (fma.f64 -216 (pow.f64 x 3) (*.f64 216 (pow.f64 y 3)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 6 y (*.f64 6 x)) (fma.f64 36 (*.f64 y y) (neg.f64 (pow.f64 (*.f64 -6 x) 2)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 6 y (*.f64 -6 x)))) 2)) (cbrt.f64 (log.f64 (fma.f64 6 y (*.f64 -6 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 6 y (*.f64 -6 x))))) (sqrt.f64 (log.f64 (fma.f64 6 y (*.f64 -6 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 6 y (*.f64 -6 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 6 y (*.f64 -6 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 6 y (*.f64 -6 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 6 y))) (pow.f64 (exp.f64 -6) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 6 y)) (+.f64 1 (expm1.f64 (*.f64 -6 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 6 y))) (+.f64 1 (expm1.f64 (*.f64 -6 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 -6 x))) (exp.f64 (*.f64 6 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 -6) x) (+.f64 1 (expm1.f64 (*.f64 6 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 -6 x))) (+.f64 1 (expm1.f64 (*.f64 6 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 6 y (*.f64 -6 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 6 y (*.f64 -6 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 6 y (*.f64 -6 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 6 y (*.f64 -6 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 6 y (*.f64 -6 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 6 y (*.f64 -6 x)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 6 y (*.f64 -6 x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 6 y (*.f64 -6 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 6 y (*.f64 -6 x))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 6 y (*.f64 -6 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y 6 (*.f64 -6 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 6 y) 1 (*.f64 -6 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -6 x (*.f64 6 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x -6 (*.f64 6 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -6 x) 1 (*.f64 6 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 6 y) (*.f64 -6 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -6 x) (*.f64 6 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) -6) (*.f64 6 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) 6) (*.f64 -6 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -6 x)) (cbrt.f64 (pow.f64 (*.f64 -6 x) 2)) (*.f64 6 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 -6 x) 2)) (cbrt.f64 (*.f64 -6 x)) (*.f64 6 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 6 y)) (pow.f64 (cbrt.f64 (*.f64 6 y)) 2) (*.f64 -6 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 6 y)) 2) (cbrt.f64 (*.f64 6 y)) (*.f64 -6 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) -6) (*.f64 6 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) 6) (*.f64 -6 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 -6 x)) (sqrt.f64 (*.f64 -6 x)) (*.f64 6 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 6 y)) (sqrt.f64 (*.f64 6 y)) (*.f64 -6 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 6 (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y) (*.f64 -6 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 6 (sqrt.f64 y)) (sqrt.f64 y) (*.f64 -6 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -6 (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x) (*.f64 6 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -6 (sqrt.f64 x)) (sqrt.f64 x) (*.f64 6 y))))))"]],"rules":[["egg-rr",67],["egg-rr",36]],"stop":[["node limit",1]],"time":46.89794921875,"type":"rewrite"},{"count":[[145,120]],"egraph":[[10,2793,387,0.037130585],[9,2793,387,0.030904502],[8,2684,387,0.025772627],[7,2361,387,0.020247334999999998],[6,1621,387,0.014013168],[5,959,387,0.007573668],[4,471,387,0.0038221260000000003],[3,265,414,0.001773001],[2,146,416,0.001002001],[1,74,416,0.0004977919999999999],[0,30,497,0.000168209]],"inputs":[["(+.f64 (*.f64 -6 (*.f64 z x)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(*.f64 (+.f64 1 (*.f64 -6 z)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","x","(+.f64 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))) x)","(+.f64 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))) x)","(+.f64 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))) x)","(*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x)))","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x)))","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(*.f64 -6 x)","(*.f64 6 y)","(*.f64 6 y)","(*.f64 6 y)","(*.f64 -6 x)","(*.f64 -6 x)"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -6 (*.f64 z x)) x)","(fma.f64 -6 (*.f64 z x) x)","(*.f64 x (fma.f64 -6 z 1))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(*.f64 6 (*.f64 y z))","(*.f64 6 (*.f64 z y))","(*.f64 z (*.f64 6 y))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(*.f64 6 (*.f64 y z))","(*.f64 6 (*.f64 z y))","(*.f64 z (*.f64 6 y))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(*.f64 6 (*.f64 y z))","(*.f64 6 (*.f64 z y))","(*.f64 z (*.f64 6 y))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(*.f64 (+.f64 1 (*.f64 -6 z)) x)","(fma.f64 -6 (*.f64 z x) x)","(*.f64 x (fma.f64 -6 z 1))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x))","(fma.f64 -6 (*.f64 z x) x)","(*.f64 x (fma.f64 -6 z 1))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","x","(+.f64 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))) x)","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))) x)","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))) x)","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x)))","(*.f64 z (fma.f64 6 y (*.f64 -6 x)))","(*.f64 z (fma.f64 -6 x (*.f64 6 y)))","(*.f64 (*.f64 z 6) (-.f64 y x))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x)))","(*.f64 z (fma.f64 6 y (*.f64 -6 x)))","(*.f64 z (fma.f64 -6 x (*.f64 6 y)))","(*.f64 (*.f64 z 6) (-.f64 y x))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(*.f64 -6 x)","(*.f64 6 y)","(*.f64 6 y)","(*.f64 6 y)","(*.f64 -6 x)","(*.f64 -6 x)"]],"stop":[["saturated",1]],"time":57.866943359375,"type":"simplify"},{"compiler":[[1810,1196]],"time":24.363037109375,"type":"eval"},{"alts":[["(fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)","next",0.12109375],["(fma.f64 (/.f64 (fma.f64 36 (*.f64 y y) (neg.f64 (pow.f64 (*.f64 -6 x) 2))) (fma.f64 6 y (*.f64 6 x))) z x)","fresh",25.711316160384076],["(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","fresh",0.140625],["(fma.f64 (pow.f64 (cbrt.f64 (fma.f64 6 y (*.f64 -6 x))) 3) z x)","fresh",0.4568202758317045],["(fma.f64 (*.f64 z 6) (-.f64 y x) x)","fresh",0.1484375]],"compiler":[[12,8],[24,17],[12,8],[15,11],[11,7],[12,8],[24,17],[12,8],[15,11],[11,7]],"count":[[125,5]],"kept":[{"done":[0,0],"fresh":[4,2],"new":[120,3],"picked":[1,0]}],"min-error":[0],"time":25.069091796875,"type":"prune"},{"compiler":[[26,16]],"locations":[["(fma.f64 6 y (*.f64 -6 x))",0.0546875,true],["(fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)",0.125,true]],"time":6.240966796875,"type":"localize"},{"count":[[2,60]],"series":[["(fma.f64 6 y (*.f64 -6 x))","x","-inf",0.1630859375],["(fma.f64 6 y (*.f64 -6 x))","x","inf",0.138916015625],["(fma.f64 6 y (*.f64 -6 x))","x","0",0.166015625],["(fma.f64 6 y (*.f64 -6 x))","y","-inf",0.14013671875],["(fma.f64 6 y (*.f64 -6 x))","y","inf",0.14111328125],["(fma.f64 6 y (*.f64 -6 x))","y","0",0.171142578125],["(fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)","z","-inf",0.20703125],["(fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)","z","inf",0.237060546875],["(fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)","z","0",0.20703125],["(fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)","x","-inf",0.7138671875],["(fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)","x","inf",0.29296875],["(fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)","x","0",0.213134765625],["(fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)","y","-inf",0.343017578125],["(fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)","y","inf",0.216064453125],["(fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)","y","0",0.296875]],"time":3.828857421875,"type":"series"},{"count":[[2,42]],"egraph":[[2,2003,20,0.019536417],[1,180,20,0.002813959],[0,9,20,0.000260917]],"inputs":[["(fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)","(fma.f64 6 y (*.f64 -6 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (fma.f64 6 y (*.f64 -6 x)) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 6 y (*.f64 -6 x)) z) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 6 y (*.f64 -6 x)) z) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)) (pow.f64 (cbrt.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)) 2) (cbrt.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)) (sqrt.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 6 y (*.f64 -6 x)) z) 3) (pow.f64 x 3)) (+.f64 (*.f64 (*.f64 (fma.f64 6 y (*.f64 -6 x)) z) (*.f64 (fma.f64 6 y (*.f64 -6 x)) z)) (-.f64 (*.f64 x x) (*.f64 (*.f64 (fma.f64 6 y (*.f64 -6 x)) z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (fma.f64 6 y (*.f64 -6 x)) z) (*.f64 (fma.f64 6 y (*.f64 -6 x)) z)) (*.f64 x x)) (-.f64 (*.f64 (fma.f64 6 y (*.f64 -6 x)) z) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -6 x) (*.f64 6 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 6 y) (*.f64 -6 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 6 y) 1) (*.f64 -6 x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 6 y (*.f64 -6 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 6 y (*.f64 -6 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 6 y (*.f64 -6 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 6 y (*.f64 -6 x))) (pow.f64 (cbrt.f64 (fma.f64 6 y (*.f64 -6 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 6 y (*.f64 -6 x))) 2) (cbrt.f64 (fma.f64 6 y (*.f64 -6 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 6 y (*.f64 -6 x))) (sqrt.f64 (fma.f64 6 y (*.f64 -6 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 6 y) 3) (pow.f64 (*.f64 -6 x) 3)) (+.f64 (*.f64 (*.f64 6 y) (*.f64 6 y)) (-.f64 (*.f64 (*.f64 x x) 36) (*.f64 (*.f64 6 y) (*.f64 -6 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 6 y) (*.f64 6 y)) (*.f64 (*.f64 x x) 36)) (-.f64 (*.f64 6 y) (*.f64 -6 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 6 y (*.f64 -6 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 6 y (*.f64 -6 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 6 y (*.f64 -6 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 6 y (*.f64 -6 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 6 y (*.f64 -6 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 6 y (*.f64 -6 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 6 y (*.f64 -6 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 6 y (*.f64 -6 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 6 y (*.f64 -6 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 6 y (*.f64 -6 x))))))))"]],"rules":[["egg-rr",21],["egg-rr",21]],"stop":[["node limit",1]],"time":40.6630859375,"type":"rewrite"},{"count":[[102,60]],"egraph":[[10,2793,513,0.037534542000000004],[9,2793,513,0.031230125],[8,2684,513,0.026025417000000002],[7,2361,513,0.020419084],[6,1621,513,0.014139584],[5,959,513,0.007599834],[4,471,513,0.0038509589999999997],[3,265,558,0.001830834],[2,146,560,0.001044125],[1,74,560,0.000528667],[0,30,641,0.000182625]],"inputs":[["(+.f64 (*.f64 -6 (*.f64 z x)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(*.f64 (+.f64 1 (*.f64 -6 z)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","x","(+.f64 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))) x)","(+.f64 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))) x)","(+.f64 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))) x)","(*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x)))","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x)))","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -6 (*.f64 z x)) x)","(fma.f64 -6 (*.f64 z x) x)","(*.f64 x (fma.f64 -6 z 1))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(*.f64 6 (*.f64 y z))","(*.f64 6 (*.f64 z y))","(*.f64 z (*.f64 6 y))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(*.f64 6 (*.f64 y z))","(*.f64 6 (*.f64 z y))","(*.f64 z (*.f64 6 y))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(*.f64 6 (*.f64 y z))","(*.f64 6 (*.f64 z y))","(*.f64 z (*.f64 6 y))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(*.f64 (+.f64 1 (*.f64 -6 z)) x)","(fma.f64 -6 (*.f64 z x) x)","(*.f64 x (fma.f64 -6 z 1))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x))","(fma.f64 -6 (*.f64 z x) x)","(*.f64 x (fma.f64 -6 z 1))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","x","(+.f64 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))) x)","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))) x)","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))) x)","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x)))","(*.f64 z (fma.f64 6 y (*.f64 -6 x)))","(*.f64 z (fma.f64 -6 x (*.f64 6 y)))","(*.f64 (*.f64 z 6) (-.f64 y x))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x)))","(*.f64 z (fma.f64 6 y (*.f64 -6 x)))","(*.f64 z (fma.f64 -6 x (*.f64 6 y)))","(*.f64 (*.f64 z 6) (-.f64 y x))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(+.f64 x (*.f64 z (+.f64 (*.f64 6 y) (*.f64 -6 x))))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(fma.f64 z (fma.f64 -6 x (*.f64 6 y)) x)","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 6 y)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(*.f64 -6 x)","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))","(+.f64 (*.f64 6 y) (*.f64 -6 x))","(fma.f64 6 y (*.f64 -6 x))","(fma.f64 -6 x (*.f64 6 y))","(*.f64 6 (-.f64 y x))"]],"stop":[["saturated",1]],"time":60.219970703125,"type":"simplify"},{"compiler":[[780,501]],"time":10.51904296875,"type":"eval"},{"alts":[["(fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)","done",0.12109375],["(fma.f64 (/.f64 (fma.f64 36 (*.f64 y y) (neg.f64 (pow.f64 (*.f64 -6 x) 2))) (fma.f64 6 y (*.f64 6 x))) z x)","fresh",25.711316160384076],["(fma.f64 (pow.f64 (cbrt.f64 (fma.f64 6 y (*.f64 -6 x))) 3) z x)","fresh",0.4568202758317045],["(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","next",0.140625],["(fma.f64 (*.f64 z 6) (-.f64 y x) x)","fresh",0.1484375]],"compiler":[[12,8],[24,17],[15,11],[12,8],[11,7],[24,17],[15,11],[12,8],[11,7]],"count":[[65,5]],"kept":[{"done":[0,0],"fresh":[4,3],"new":[60,1],"picked":[1,1]}],"min-error":[0],"time":12.347900390625,"type":"prune"},{"compiler":[[31,11]],"locations":[["(*.f64 z (-.f64 y x))",0.0078125,true],["(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)",0.01953125,true],["(*.f64 6 (*.f64 z (-.f64 y x)))",0.25390625,true]],"time":5.466064453125,"type":"localize"},{"count":[[3,87]],"series":[["(*.f64 z (-.f64 y x))","x","-inf",0.177001953125],["(*.f64 z (-.f64 y x))","x","inf",0.14892578125],["(*.f64 z (-.f64 y x))","x","0",0.22119140625],["(*.f64 z (-.f64 y x))","y","-inf",0.199951171875],["(*.f64 z (-.f64 y x))","y","inf",0.154052734375],["(*.f64 z (-.f64 y x))","y","0",0.25],["(*.f64 z (-.f64 y x))","z","-inf",0.25390625],["(*.f64 z (-.f64 y x))","z","inf",0.141845703125],["(*.f64 z (-.f64 y x))","z","0",0.306884765625],["(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","x","-inf",0.169921875],["(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","x","inf",0.164794921875],["(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","x","0",0.18408203125],["(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","y","-inf",0.1650390625],["(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","y","inf",0.200927734375],["(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","y","0",0.160888671875],["(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","z","-inf",0.158935546875],["(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","z","inf",0.19091796875],["(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","z","0",0.154052734375],["(*.f64 6 (*.f64 z (-.f64 y x)))","x","-inf",0.31201171875],["(*.f64 6 (*.f64 z (-.f64 y x)))","x","inf",0.322021484375],["(*.f64 6 (*.f64 z (-.f64 y x)))","x","0",0.281005859375],["(*.f64 6 (*.f64 z (-.f64 y x)))","y","-inf",0.322021484375],["(*.f64 6 (*.f64 z (-.f64 y x)))","y","inf",0.8798828125],["(*.f64 6 (*.f64 z (-.f64 y x)))","y","0",0.303955078125],["(*.f64 6 (*.f64 z (-.f64 y x)))","z","-inf",0.27001953125],["(*.f64 6 (*.f64 z (-.f64 y x)))","z","inf",0.41796875],["(*.f64 6 (*.f64 z (-.f64 y x)))","z","0",0.52001953125]],"time":7.34912109375,"type":"series"},{"count":[[3,131]],"egraph":[[2,2848,28,0.025613416],[1,202,28,0.0037082499999999997],[0,9,28,0.000250125]],"inputs":[["(*.f64 6 (*.f64 z (-.f64 y x)))","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(*.f64 z (-.f64 y x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 z (*.f64 (-.f64 y x) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (*.f64 6 z)) (*.f64 (neg.f64 x) (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 6 z) y) (*.f64 (*.f64 6 z) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 z) (*.f64 (-.f64 y x) 6))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 z) (*.f64 (-.f64 y x) 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 z) (*.f64 (-.f64 y x) 6)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 z) (*.f64 (-.f64 y x) 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 z (*.f64 (-.f64 y x) 6)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 6 z) (-.f64 (pow.f64 y 3) (pow.f64 x 3))) (fma.f64 y y (*.f64 x (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 6 z) (fma.f64 y y (*.f64 (neg.f64 x) x))) (+.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (*.f64 (-.f64 y x) 6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 36 (pow.f64 (*.f64 z (-.f64 y x)) 2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (*.f64 (-.f64 y x) 6))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 z (*.f64 (-.f64 y x) 6))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (*.f64 (-.f64 y x) 6)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (*.f64 z (*.f64 (-.f64 y x) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 z (*.f64 (-.f64 y x) 6)))) 2)) (cbrt.f64 (log.f64 (*.f64 z (*.f64 (-.f64 y x) 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 z (*.f64 (-.f64 y x) 6))))) (sqrt.f64 (log.f64 (*.f64 z (*.f64 (-.f64 y x) 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 36 (pow.f64 (*.f64 z (-.f64 y x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 z) (*.f64 (-.f64 y x) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 z (*.f64 (-.f64 y x) 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 z (*.f64 (-.f64 y x) 6)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 z (*.f64 (-.f64 y x) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 z (*.f64 (-.f64 y x) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 z (*.f64 (-.f64 y x) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 z (*.f64 (-.f64 y x) 6))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 z (*.f64 (-.f64 y x) 6)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 z (*.f64 (-.f64 y x) 6)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 z (*.f64 (-.f64 y x) 6)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 z (*.f64 (-.f64 y x) 6))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 z (*.f64 (-.f64 y x) 6))) 3) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 6 z) (*.f64 (neg.f64 x) (*.f64 6 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 6 z) y (*.f64 (*.f64 6 z) (neg.f64 x)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 36 (pow.f64 (*.f64 z (-.f64 y x)) 2)) (-.f64 (*.f64 z (*.f64 (-.f64 y x) 6)) x)) (/.f64 (*.f64 x x) (-.f64 (*.f64 z (*.f64 (-.f64 y x) 6)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 6 (*.f64 z (-.f64 y x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x)) (pow.f64 (cbrt.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x)) 2) (cbrt.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x)) (sqrt.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 216 (pow.f64 (*.f64 z (-.f64 y x)) 3) (pow.f64 x 3)) (/.f64 1 (fma.f64 x (-.f64 x (*.f64 z (*.f64 (-.f64 y x) 6))) (*.f64 36 (pow.f64 (*.f64 z (-.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 36 (pow.f64 (*.f64 z (-.f64 y x)) 2)) (*.f64 x x)) (/.f64 1 (-.f64 (*.f64 z (*.f64 (-.f64 y x) 6)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 x (-.f64 x (*.f64 z (*.f64 (-.f64 y x) 6))) (*.f64 36 (pow.f64 (*.f64 z (-.f64 y x)) 2))) (fma.f64 216 (pow.f64 (*.f64 z (-.f64 y x)) 3) (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (*.f64 z (*.f64 (-.f64 y x) 6)) x) (-.f64 (*.f64 36 (pow.f64 (*.f64 z (-.f64 y x)) 2)) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 216 (pow.f64 (*.f64 z (-.f64 y x)) 3) (pow.f64 x 3)) (fma.f64 x (-.f64 x (*.f64 z (*.f64 (-.f64 y x) 6))) (*.f64 36 (pow.f64 (*.f64 z (-.f64 y x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 216 (pow.f64 (*.f64 z (-.f64 y x)) 3) (pow.f64 x 3)) (fma.f64 x x (-.f64 (*.f64 36 (pow.f64 (*.f64 z (-.f64 y x)) 2)) (*.f64 x (*.f64 z (*.f64 (-.f64 y x) 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 36 (pow.f64 (*.f64 z (-.f64 y x)) 2)) (*.f64 x x)) (-.f64 (*.f64 z (*.f64 (-.f64 y x) 6)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 216 (pow.f64 (*.f64 z (-.f64 y x)) 3) (pow.f64 x 3))) (neg.f64 (fma.f64 x (-.f64 x (*.f64 z (*.f64 (-.f64 y x) 6))) (*.f64 36 (pow.f64 (*.f64 z (-.f64 y x)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 36 (pow.f64 (*.f64 z (-.f64 y x)) 2)) (*.f64 x x))) (neg.f64 (-.f64 (*.f64 z (*.f64 (-.f64 y x) 6)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (*.f64 36 (pow.f64 (*.f64 z (-.f64 y x)) 2))) (-.f64 x (*.f64 z (*.f64 (-.f64 y x) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 x (-.f64 x (*.f64 z (*.f64 (-.f64 y x) 6))) (*.f64 36 (pow.f64 (*.f64 z (-.f64 y x)) 2))) (fma.f64 216 (pow.f64 (*.f64 z (-.f64 y x)) 3) (pow.f64 x 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (*.f64 z (*.f64 (-.f64 y x) 6)) x) (-.f64 (*.f64 36 (pow.f64 (*.f64 z (-.f64 y x)) 2)) (*.f64 x x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x))) 2)) (cbrt.f64 (log.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x)))) (sqrt.f64 (log.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (pow.f64 (exp.f64 z) (*.f64 (-.f64 y x) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (*.f64 z (*.f64 (-.f64 y x) 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (*.f64 z (*.f64 (-.f64 y x) 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 z (*.f64 (-.f64 y x) 6)))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 z) (*.f64 (-.f64 y x) 6)) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 z (*.f64 (-.f64 y x) 6)))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 6 (*.f64 z (-.f64 y x)) x)) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 6 (*.f64 z (-.f64 y x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (*.f64 (-.f64 y x) 6) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 z (*.f64 (-.f64 y x) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y x) (*.f64 6 z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (-.f64 y x)) 6 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (*.f64 (-.f64 y x) 6)) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 z (*.f64 (-.f64 y x) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z (*.f64 (-.f64 y x) 6)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z (*.f64 (-.f64 y x) 6))) (pow.f64 (cbrt.f64 (*.f64 z (*.f64 (-.f64 y x) 6))) 2) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 z (*.f64 (-.f64 y x) 6))) 2) (cbrt.f64 (*.f64 z (*.f64 (-.f64 y x) 6))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 z (*.f64 (-.f64 y x) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 z (*.f64 (-.f64 y x) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 z (-.f64 y x)) 2)) (*.f64 (cbrt.f64 (*.f64 z (-.f64 y x))) 6) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 z (*.f64 (-.f64 y x) 6))) (sqrt.f64 (*.f64 z (*.f64 (-.f64 y x) 6))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 z (*.f64 (-.f64 y x) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 z (-.f64 y x))) (*.f64 (sqrt.f64 (*.f64 z (-.f64 y x))) 6) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 6 z) (-.f64 y x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 6 (-.f64 y x)) z x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 6 (cbrt.f64 (pow.f64 (*.f64 z (-.f64 y x)) 2))) (cbrt.f64 (*.f64 z (-.f64 y x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 6 (sqrt.f64 (*.f64 z (-.f64 y x)))) (sqrt.f64 (*.f64 z (-.f64 y x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 6 z) 1) (-.f64 y x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 6 z) (pow.f64 (cbrt.f64 (-.f64 y x)) 2)) (cbrt.f64 (-.f64 y x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 6 z) (sqrt.f64 (-.f64 y x))) (sqrt.f64 (-.f64 y x)) x)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 z (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y z) (*.f64 (neg.f64 x) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z y) (*.f64 z (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 z) (-.f64 y x))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 z) (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 z) (-.f64 y x)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 z) (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 z (-.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 y 3) (pow.f64 x 3)) z) (fma.f64 y y (*.f64 x (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 y y (*.f64 (neg.f64 x) x)) z) (+.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (-.f64 (pow.f64 y 3) (pow.f64 x 3))) (fma.f64 y y (*.f64 x (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z (fma.f64 y y (*.f64 (neg.f64 x) x))) (+.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (-.f64 y x)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (-.f64 y x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (-.f64 y x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 z (-.f64 y x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (*.f64 z (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 z (-.f64 y x)))) 2)) (cbrt.f64 (log.f64 (*.f64 z (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 z (-.f64 y x))))) (sqrt.f64 (log.f64 (*.f64 z (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 z (-.f64 y x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 z) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 z (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 z (-.f64 y x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 z (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 z (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 z (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 z (-.f64 y x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 z (-.f64 y x)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 z (-.f64 y x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 z (-.f64 y x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 z (-.f64 y x))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z y (*.f64 z (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y z (*.f64 (neg.f64 x) z))))))"]],"rules":[["egg-rr",32],["egg-rr",68],["egg-rr",31]],"stop":[["node limit",1]],"time":52.5888671875,"type":"rewrite"},{"count":[[218,153]],"egraph":[[10,2862,726,0.039228875999999996],[9,2862,726,0.032796333999999996],[8,2857,726,0.027681709],[7,2434,726,0.022532208999999997],[6,1811,726,0.0159125],[5,1133,726,0.009607958],[4,649,726,0.004938583],[3,348,726,0.002425625],[2,166,762,0.001271916],[1,75,878,0.000593375],[0,31,878,0.000206417]],"inputs":[["(*.f64 -6 (*.f64 z x))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z x))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(*.f64 -6 (*.f64 z x))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","x","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(+.f64 (*.f64 -6 (*.f64 z x)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(*.f64 6 (*.f64 y z))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(*.f64 (+.f64 1 (*.f64 -6 z)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(*.f64 (-.f64 y x) z)","(*.f64 (-.f64 y x) z)","(*.f64 (-.f64 y x) z)","(*.f64 (-.f64 y x) z)","(*.f64 (-.f64 y x) z)","(*.f64 (-.f64 y x) z)","(*.f64 (-.f64 y x) z)","(*.f64 (-.f64 y x) z)","(*.f64 (-.f64 y x) z)","(*.f64 (-.f64 y x) z)","(*.f64 (-.f64 y x) z)","(*.f64 (-.f64 y x) z)","(*.f64 -1 (*.f64 z x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 y z)","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 y z)","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 y z)","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 -1 (*.f64 z x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 -1 (*.f64 z x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -6 (*.f64 z x))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(*.f64 6 (*.f64 y z))","(*.f64 6 (*.f64 z y))","(*.f64 z (*.f64 6 y))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(*.f64 6 (*.f64 y z))","(*.f64 6 (*.f64 z y))","(*.f64 z (*.f64 6 y))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(*.f64 6 (*.f64 y z))","(*.f64 6 (*.f64 z y))","(*.f64 z (*.f64 6 y))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(*.f64 -6 (*.f64 z x))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(*.f64 -6 (*.f64 z x))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) (*.f64 6 (*.f64 y z)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","x","(*.f64 6 (*.f64 z (-.f64 y x)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(*.f64 6 (*.f64 z (-.f64 y x)))","(fma.f64 -6 (*.f64 z x) (*.f64 6 (*.f64 z y)))","(*.f64 z (*.f64 6 (-.f64 y x)))","(*.f64 -6 (*.f64 z (-.f64 x y)))","(+.f64 (*.f64 -6 (*.f64 z x)) x)","(fma.f64 -6 (*.f64 z x) x)","(*.f64 x (fma.f64 -6 z 1))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(+.f64 x (*.f64 6 (*.f64 z (-.f64 y x))))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 z (*.f64 -6 (-.f64 x y)) x)","(fma.f64 -6 (*.f64 z (-.f64 x y)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(+.f64 x (*.f64 6 (*.f64 z (-.f64 y x))))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 z (*.f64 -6 (-.f64 x y)) x)","(fma.f64 -6 (*.f64 z (-.f64 x y)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(+.f64 x (*.f64 6 (*.f64 z (-.f64 y x))))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 z (*.f64 -6 (-.f64 x y)) x)","(fma.f64 -6 (*.f64 z (-.f64 x y)) x)","(*.f64 6 (*.f64 y z))","(*.f64 6 (*.f64 z y))","(*.f64 z (*.f64 6 y))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(+.f64 x (*.f64 6 (*.f64 z (-.f64 y x))))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 z (*.f64 -6 (-.f64 x y)) x)","(fma.f64 -6 (*.f64 z (-.f64 x y)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(+.f64 x (*.f64 6 (*.f64 z (-.f64 y x))))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 z (*.f64 -6 (-.f64 x y)) x)","(fma.f64 -6 (*.f64 z (-.f64 x y)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(+.f64 x (*.f64 6 (*.f64 z (-.f64 y x))))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 z (*.f64 -6 (-.f64 x y)) x)","(fma.f64 -6 (*.f64 z (-.f64 x y)) x)","(*.f64 6 (*.f64 y z))","(*.f64 6 (*.f64 z y))","(*.f64 z (*.f64 6 y))","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(+.f64 x (*.f64 6 (*.f64 z (-.f64 y x))))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 z (*.f64 -6 (-.f64 x y)) x)","(fma.f64 -6 (*.f64 z (-.f64 x y)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(+.f64 x (*.f64 6 (*.f64 z (-.f64 y x))))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 z (*.f64 -6 (-.f64 x y)) x)","(fma.f64 -6 (*.f64 z (-.f64 x y)) x)","(+.f64 (*.f64 -6 (*.f64 z x)) (+.f64 (*.f64 6 (*.f64 y z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(+.f64 x (*.f64 6 (*.f64 z (-.f64 y x))))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 z (*.f64 -6 (-.f64 x y)) x)","(fma.f64 -6 (*.f64 z (-.f64 x y)) x)","(*.f64 6 (*.f64 y z))","(*.f64 6 (*.f64 z y))","(*.f64 z (*.f64 6 y))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(+.f64 x (*.f64 6 (*.f64 z (-.f64 y x))))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 z (*.f64 -6 (-.f64 x y)) x)","(fma.f64 -6 (*.f64 z (-.f64 x y)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(+.f64 x (*.f64 6 (*.f64 z (-.f64 y x))))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 z (*.f64 -6 (-.f64 x y)) x)","(fma.f64 -6 (*.f64 z (-.f64 x y)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(+.f64 x (*.f64 6 (*.f64 z (-.f64 y x))))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 z (*.f64 -6 (-.f64 x y)) x)","(fma.f64 -6 (*.f64 z (-.f64 x y)) x)","(*.f64 (+.f64 1 (*.f64 -6 z)) x)","(fma.f64 -6 (*.f64 z x) x)","(*.f64 x (fma.f64 -6 z 1))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(+.f64 x (*.f64 6 (*.f64 z (-.f64 y x))))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 z (*.f64 -6 (-.f64 x y)) x)","(fma.f64 -6 (*.f64 z (-.f64 x y)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(+.f64 x (*.f64 6 (*.f64 z (-.f64 y x))))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 z (*.f64 -6 (-.f64 x y)) x)","(fma.f64 -6 (*.f64 z (-.f64 x y)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 (+.f64 1 (*.f64 -6 z)) x))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(+.f64 x (*.f64 6 (*.f64 z (-.f64 y x))))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 z (*.f64 -6 (-.f64 x y)) x)","(fma.f64 -6 (*.f64 z (-.f64 x y)) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x))","(fma.f64 -6 (*.f64 z x) x)","(*.f64 x (fma.f64 -6 z 1))","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(+.f64 x (*.f64 6 (*.f64 z (-.f64 y x))))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 z (*.f64 -6 (-.f64 x y)) x)","(fma.f64 -6 (*.f64 z (-.f64 x y)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(+.f64 x (*.f64 6 (*.f64 z (-.f64 y x))))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 z (*.f64 -6 (-.f64 x y)) x)","(fma.f64 -6 (*.f64 z (-.f64 x y)) x)","(+.f64 (*.f64 6 (*.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 6 z) 1) x)))","(fma.f64 -6 (*.f64 z x) (fma.f64 6 (*.f64 z y) x))","(+.f64 x (*.f64 6 (*.f64 z (-.f64 y x))))","(fma.f64 z (*.f64 6 (-.f64 y x)) x)","(fma.f64 z (*.f64 -6 (-.f64 x y)) x)","(fma.f64 -6 (*.f64 z (-.f64 x y)) x)","(*.f64 (-.f64 y x) z)","(*.f64 z (-.f64 y x))","(*.f64 (-.f64 y x) z)","(*.f64 z (-.f64 y x))","(*.f64 (-.f64 y x) z)","(*.f64 z (-.f64 y x))","(*.f64 (-.f64 y x) z)","(*.f64 z (-.f64 y x))","(*.f64 (-.f64 y x) z)","(*.f64 z (-.f64 y x))","(*.f64 (-.f64 y x) z)","(*.f64 z (-.f64 y x))","(*.f64 (-.f64 y x) z)","(*.f64 z (-.f64 y x))","(*.f64 (-.f64 y x) z)","(*.f64 z (-.f64 y x))","(*.f64 (-.f64 y x) z)","(*.f64 z (-.f64 y x))","(*.f64 (-.f64 y x) z)","(*.f64 z (-.f64 y x))","(*.f64 (-.f64 y x) z)","(*.f64 z (-.f64 y x))","(*.f64 (-.f64 y x) z)","(*.f64 z (-.f64 y x))","(*.f64 -1 (*.f64 z x))","(neg.f64 (*.f64 z x))","(*.f64 z (neg.f64 x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(*.f64 y z)","(*.f64 z y)","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(*.f64 y z)","(*.f64 z y)","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(*.f64 y z)","(*.f64 z y)","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(*.f64 -1 (*.f64 z x))","(neg.f64 (*.f64 z x))","(*.f64 z (neg.f64 x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(*.f64 -1 (*.f64 z x))","(neg.f64 (*.f64 z x))","(*.f64 z (neg.f64 x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))","(+.f64 (*.f64 y z) (*.f64 -1 (*.f64 z x)))","(*.f64 z (-.f64 y x))"]],"stop":[["saturated",1]],"time":67.887939453125,"type":"simplify"},{"compiler":[[2222,1087]],"time":22.777099609375,"type":"eval"},{"alts":[["(fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)","done",0.12109375],["(fma.f64 (/.f64 (fma.f64 36 (*.f64 y y) (neg.f64 (pow.f64 (*.f64 -6 x) 2))) (fma.f64 6 y (*.f64 6 x))) z x)","fresh",25.711316160384076],["(fma.f64 (pow.f64 (cbrt.f64 (fma.f64 6 y (*.f64 -6 x))) 3) z x)","fresh",0.4568202758317045],["(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","done",0.140625],["(fma.f64 (*.f64 6 z) (-.f64 y x) x)","fresh",0.1484375]],"compiler":[[12,8],[24,17],[15,11],[12,8],[11,7]],"count":[[158,5]],"kept":[{"done":[1,1],"fresh":[3,2],"new":[153,1],"picked":[1,1]}],"min-error":[0],"time":36.619873046875,"type":"prune"},{"accuracy":[0.12109375],"baseline":[0.12109375],"branch":[["x",0.12109375,1],["y",0.12109375,1],["z",0.12109375,1],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) z))",0.12109375,1]],"compiler":[[4,3],[4,3],[4,3],[12,8],[141,80]],"count":[[12,1]],"inputs":[["(fma.f64 (*.f64 6 z) (-.f64 y x) x)","(fma.f64 (pow.f64 (cbrt.f64 (fma.f64 6 y (*.f64 -6 x))) 3) z x)","(fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)","(fma.f64 (/.f64 (fma.f64 36 (*.f64 y y) (neg.f64 (pow.f64 (*.f64 -6 x) 2))) (fma.f64 6 y (*.f64 6 x))) z x)","(fma.f64 (pow.f64 (cbrt.f64 (fma.f64 6 y (*.f64 -6 x))) 3) z x)","(pow.f64 (cbrt.f64 (fma.f64 (*.f64 (-.f64 y x) 6) z x)) 3)","(fma.f64 (+.f64 (*.f64 6 y) (*.f64 -6 x)) z x)","(+.f64 (*.f64 6 (*.f64 z (-.f64 y x))) x)","(fma.f64 (/.f64 (*.f64 (-.f64 (pow.f64 y 3) (pow.f64 x 3)) 6) (fma.f64 y y (*.f64 x (+.f64 y x)))) z x)","(fma.f64 (*.f64 z 6) (-.f64 y x) x)","(fma.f64 (*.f64 (-.f64 y x) 6) z x)","(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) z))"]],"link":["."],"name":["Data.Colour.RGBSpace.HSL:hsl from colour-2.3.3, E"],"oracle":[36.0931097364966],"outputs":[["(fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)"]],"time":23.580078125,"times":[["x",5.340087890625],["y",5.0322265625],["z",5.113037109375],["(+.f64 x (*.f64 (*.f64 (-.f64 y x) 6) z))",5.369873046875]],"type":"regimes"},{"compiler":[[12,8]],"egraph":[[1,10,12,3.3083e-5],[0,9,12,2.0625e-5]],"inputs":[["(fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)"]],"method":["egg-herbie"],"outputs":[["(fma.f64 (fma.f64 6 y (*.f64 -6 x)) z x)"]],"stop":[["fuel",1],["saturated",1]],"time":8.56103515625,"type":"simplify"},{"time":0.012939453125,"type":"soundness"},{"compiler":[[12,8]],"remove-preprocessing":[[]],"time":8.80712890625,"type":"end"}]