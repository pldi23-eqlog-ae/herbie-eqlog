[{"compiler":[[53,41]],"method":["search"],"sampling":[[12,0.7492677569389343,0.24975591897964478,0.0009763240814208984],[11,0.7492677569389343,0.24975591897964478,0.0009763240814208984],[10,0.7492677569389343,0.24975591897964478,0.0009763240814208984],[9,0.7492677569389343,0.24975591897964478,0.0009763240814208984],[8,0.7492677569389343,0.24975591897964478,0.0009763240814208984],[7,0.7492677569389343,0.24975591897964478,0.0009763240814208984],[6,0.7492677569389343,0.24975591897964478,0.0009763240814208984],[5,0.7492677569389343,0.24975591897964478,0.0009763240814208984],[4,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":141.526123046875,"type":"analyze"},{"outcomes":[["body",1024,"valid",2122.325927734375,3620],["body",512,"valid",470.71923828125,1398],["body",2048,"valid",35.448974609375,28],["body",256,"valid",500.308837890625,3210]],"time":3137.282958984375,"type":"sample"},{"compiler":[[52,40]],"egraph":[[0,2,2,1.916e-6],[4,7048,146,0.02145996],[3,1524,146,0.010633751],[2,353,148,0.002488293],[1,120,148,0.000700126],[0,44,160,0.000215209]],"inputs":[["0","1"],["(/.f64 (+.f64 2 (*.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16))) (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16))) (-.f64 (cos.f64 x) (cos.f64 y)))) (*.f64 3 (+.f64 (+.f64 1 (*.f64 (/.f64 (-.f64 (sqrt.f64 5) 1) 2) (cos.f64 x))) (*.f64 (/.f64 (-.f64 3 (sqrt.f64 5)) 2) (cos.f64 y)))))","(/.f64 (+.f64 2 (*.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16))) (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16))) (-.f64 (cos.f64 y) (cos.f64 x)))) (*.f64 3 (+.f64 (+.f64 1 (*.f64 (/.f64 (-.f64 (sqrt.f64 5) 1) 2) (cos.f64 y))) (*.f64 (/.f64 (-.f64 3 (sqrt.f64 5)) 2) (cos.f64 x)))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (+.f64 2 (*.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16))) (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16))) (-.f64 (cos.f64 x) (cos.f64 y)))) (*.f64 3 (+.f64 (+.f64 1 (*.f64 (/.f64 (-.f64 (sqrt.f64 5) 1) 2) (cos.f64 x))) (*.f64 (/.f64 (-.f64 3 (sqrt.f64 5)) 2) (cos.f64 y)))))","(/.f64 (+.f64 2 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16))) (*.f64 (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16)) (-.f64 (cos.f64 x) (cos.f64 y))))) (*.f64 3 (+.f64 1 (+.f64 (*.f64 (cos.f64 x) (/.f64 (+.f64 (sqrt.f64 5) -1) 2)) (*.f64 (cos.f64 y) (-.f64 3/2 (/.f64 (sqrt.f64 5) 2)))))))","(/.f64 (fma.f64 (*.f64 (sqrt.f64 2) (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16))) (*.f64 (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16)) (-.f64 (cos.f64 x) (cos.f64 y))) 2) (*.f64 3 (fma.f64 (cos.f64 y) (-.f64 3/2 (/.f64 (sqrt.f64 5) 2)) (fma.f64 (cos.f64 x) (+.f64 (/.f64 (sqrt.f64 5) 2) -1/2) 1))))","(/.f64 (fma.f64 (*.f64 (sqrt.f64 2) (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16))) (*.f64 (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16)) (-.f64 (cos.f64 x) (cos.f64 y))) 2) (fma.f64 3 (fma.f64 (cos.f64 x) (+.f64 (/.f64 (sqrt.f64 5) 2) -1/2) 1) (/.f64 (*.f64 (cos.f64 y) (-.f64 3 (sqrt.f64 5))) 2/3)))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16)) (*.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (+.f64 3 (fma.f64 (cos.f64 y) (/.f64 (-.f64 3 (sqrt.f64 5)) 2/3) (/.f64 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1)) 2/3))))","(/.f64 (+.f64 2 (*.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16))) (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16))) (-.f64 (cos.f64 y) (cos.f64 x)))) (*.f64 3 (+.f64 (+.f64 1 (*.f64 (/.f64 (-.f64 (sqrt.f64 5) 1) 2) (cos.f64 y))) (*.f64 (/.f64 (-.f64 3 (sqrt.f64 5)) 2) (cos.f64 x)))))","(/.f64 (+.f64 2 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16))) (*.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16)) (-.f64 (cos.f64 y) (cos.f64 x))))) (*.f64 3 (+.f64 (+.f64 1 (*.f64 (cos.f64 y) (/.f64 (+.f64 (sqrt.f64 5) -1) 2))) (*.f64 (cos.f64 x) (-.f64 3/2 (/.f64 (sqrt.f64 5) 2))))))","(/.f64 (fma.f64 (*.f64 (sqrt.f64 2) (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16))) (*.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16)) (-.f64 (cos.f64 y) (cos.f64 x))) 2) (*.f64 3 (fma.f64 (cos.f64 x) (-.f64 3/2 (/.f64 (sqrt.f64 5) 2)) (fma.f64 (cos.f64 y) (+.f64 (/.f64 (sqrt.f64 5) 2) -1/2) 1))))","(/.f64 (/.f64 (fma.f64 (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16)) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (cos.f64 y) (cos.f64 x))) (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16))) 2) 3) (fma.f64 (cos.f64 x) (-.f64 3/2 (/.f64 (sqrt.f64 5) 2)) (fma.f64 (cos.f64 y) (+.f64 (/.f64 (sqrt.f64 5) 2) -1/2) 1)))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16)) (*.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16)) (-.f64 (cos.f64 y) (cos.f64 x)))) 2) (+.f64 (/.f64 (*.f64 (cos.f64 y) (+.f64 (sqrt.f64 5) -1)) 2/3) (fma.f64 (cos.f64 x) (/.f64 (-.f64 3 (sqrt.f64 5)) 2/3) 3)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":46.7880859375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[4,3858,71,0.015781876],[3,812,73,0.005882750999999999],[2,209,74,0.001471584],[1,80,74,0.000479876],[0,33,80,0.000157167]],"inputs":[["(/.f64 (+.f64 2 (*.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16))) (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16))) (-.f64 (cos.f64 x) (cos.f64 y)))) (*.f64 3 (+.f64 (+.f64 1 (*.f64 (/.f64 (-.f64 (sqrt.f64 5) 1) 2) (cos.f64 x))) (*.f64 (/.f64 (-.f64 3 (sqrt.f64 5)) 2) (cos.f64 y)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 2 (*.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16))) (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16))) (-.f64 (cos.f64 x) (cos.f64 y)))) (*.f64 3 (+.f64 (+.f64 1 (*.f64 (/.f64 (-.f64 (sqrt.f64 5) 1) 2) (cos.f64 x))) (*.f64 (/.f64 (-.f64 3 (sqrt.f64 5)) 2) (cos.f64 y)))))","(/.f64 (+.f64 2 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16))) (*.f64 (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16)) (-.f64 (cos.f64 x) (cos.f64 y))))) (*.f64 3 (+.f64 1 (+.f64 (*.f64 (cos.f64 x) (-.f64 (/.f64 (sqrt.f64 5) 2) 1/2)) (*.f64 (cos.f64 y) (-.f64 3/2 (/.f64 (sqrt.f64 5) 2)))))))","(/.f64 (fma.f64 (*.f64 (sqrt.f64 2) (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16))) (*.f64 (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16)) (-.f64 (cos.f64 x) (cos.f64 y))) 2) (*.f64 3 (fma.f64 (cos.f64 y) (-.f64 3/2 (/.f64 (sqrt.f64 5) 2)) (fma.f64 (cos.f64 x) (+.f64 (/.f64 (sqrt.f64 5) 2) -1/2) 1))))","(/.f64 (fma.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16)) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16))) (-.f64 (cos.f64 x) (cos.f64 y))) 2) (*.f64 3 (fma.f64 (cos.f64 x) (+.f64 (/.f64 (sqrt.f64 5) 2) -1/2) (fma.f64 (cos.f64 y) (/.f64 (-.f64 3 (sqrt.f64 5)) 2) 1))))","(/.f64 (fma.f64 (*.f64 (sqrt.f64 2) (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16))) (*.f64 (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16)) (-.f64 (cos.f64 x) (cos.f64 y))) 2) (+.f64 3 (fma.f64 (cos.f64 y) (/.f64 (-.f64 3 (sqrt.f64 5)) 2/3) (/.f64 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1)) 2/3))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 x) (/.f64 (+.f64 (sqrt.f64 5) -1) 2/3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))"]],"stop":[["node limit",1]],"time":27.126953125,"type":"simplify"},{"compiler":[[97,68]],"time":1.072021484375,"type":"eval"},{"alts":[["(/.f64 (+.f64 2 (*.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16))) (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16))) (-.f64 (cos.f64 x) (cos.f64 y)))) (*.f64 3 (+.f64 (+.f64 1 (*.f64 (/.f64 (-.f64 (sqrt.f64 5) 1) 2) (cos.f64 x))) (*.f64 (/.f64 (-.f64 3 (sqrt.f64 5)) 2) (cos.f64 y)))))","fresh",0.44833764652663033],["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 x) (/.f64 (+.f64 (sqrt.f64 5) -1) 2/3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","next",0.4078588571540338]],"compiler":[[52,40],[47,35],[52,40],[47,35]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.30202003877493966],"time":2.7900390625,"type":"prune"},{"compiler":[[203,123]],"locations":[["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 x) (/.f64 (+.f64 (sqrt.f64 5) -1) 2/3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))",0.27734375,true],["(-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3))",1.0,true],["(/.f64 (+.f64 (sqrt.f64 5) -1) 2/3)",1.0,true],["(-.f64 (cos.f64 x) (cos.f64 y))",2.1523568443046606,true]],"time":43.9169921875,"type":"localize"},{"count":[[4,32]],"series":[["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 x) (/.f64 (+.f64 (sqrt.f64 5) -1) 2/3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","x","-inf",1.657958984375],["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 x) (/.f64 (+.f64 (sqrt.f64 5) -1) 2/3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","x","inf",2.156982421875],["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 x) (/.f64 (+.f64 (sqrt.f64 5) -1) 2/3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","x","0",1.4931640625],["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 x) (/.f64 (+.f64 (sqrt.f64 5) -1) 2/3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","y","-inf",2.2822265625],["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 x) (/.f64 (+.f64 (sqrt.f64 5) -1) 2/3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","y","inf",2.76220703125],["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 x) (/.f64 (+.f64 (sqrt.f64 5) -1) 2/3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","y","0",1.734130859375],["(-.f64 (cos.f64 x) (cos.f64 y))","y","-inf",0.201171875],["(-.f64 (cos.f64 x) (cos.f64 y))","y","inf",0.401123046875],["(-.f64 (cos.f64 x) (cos.f64 y))","y","0",0.326904296875],["(-.f64 (cos.f64 x) (cos.f64 y))","x","-inf",0.195068359375],["(-.f64 (cos.f64 x) (cos.f64 y))","x","inf",0.489013671875],["(-.f64 (cos.f64 x) (cos.f64 y))","x","0",0.447021484375]],"time":14.511962890625,"type":"series"},{"count":[[4,107]],"egraph":[[1,698,87,0.011943542],[0,31,97,0.0009245]],"inputs":[["(-.f64 (cos.f64 x) (cos.f64 y))","(/.f64 (+.f64 (sqrt.f64 5) -1) 2/3)","(-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 x) (/.f64 (+.f64 (sqrt.f64 5) -1) 2/3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 x) (neg.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 y))) (sqrt.f64 (cos.f64 y)) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (cos.f64 x) (neg.f64 (*.f64 (cos.f64 y) 1))) (fma.f64 (neg.f64 (cos.f64 y)) 1 (*.f64 (cos.f64 y) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (cbrt.f64 (cos.f64 x)) (neg.f64 (*.f64 (cos.f64 y) 1))) (fma.f64 (neg.f64 (cos.f64 y)) 1 (*.f64 (cos.f64 y) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 x)) (sqrt.f64 (cos.f64 x)) (neg.f64 (*.f64 (cos.f64 y) 1))) (fma.f64 (neg.f64 (cos.f64 y)) 1 (*.f64 (cos.f64 y) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (cos.f64 x) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 y)) (pow.f64 (cbrt.f64 (cos.f64 y)) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 y))) (pow.f64 (cbrt.f64 (cos.f64 y)) 2) (*.f64 (cbrt.f64 (cos.f64 y)) (pow.f64 (cbrt.f64 (cos.f64 y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (cbrt.f64 (cos.f64 x)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 y)) (pow.f64 (cbrt.f64 (cos.f64 y)) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 y))) (pow.f64 (cbrt.f64 (cos.f64 y)) 2) (*.f64 (cbrt.f64 (cos.f64 y)) (pow.f64 (cbrt.f64 (cos.f64 y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 x)) (sqrt.f64 (cos.f64 x)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 y)) (pow.f64 (cbrt.f64 (cos.f64 y)) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 y))) (pow.f64 (cbrt.f64 (cos.f64 y)) 2) (*.f64 (cbrt.f64 (cos.f64 y)) (pow.f64 (cbrt.f64 (cos.f64 y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (cos.f64 x) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 x) (cos.f64 y))) 2) (cbrt.f64 (-.f64 (cos.f64 x) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (cos.f64 x) (cos.f64 y))) (sqrt.f64 (-.f64 (cos.f64 x) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2 (*.f64 (sin.f64 (*.f64 (-.f64 x y) 1/2)) (sin.f64 (*.f64 (+.f64 x y) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 (cos.f64 y) 3)) (/.f64 1 (+.f64 (pow.f64 (cos.f64 x) 2) (+.f64 (pow.f64 (cos.f64 y) 2) (*.f64 (cos.f64 x) (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 (cos.f64 y) 2)) (/.f64 1 (+.f64 (cos.f64 x) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (+.f64 (pow.f64 (cos.f64 y) 2) (*.f64 (cos.f64 x) (cos.f64 y)))) (-.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 (cos.f64 y) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (cos.f64 x) (cos.f64 y)) (-.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 (cos.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 (cos.f64 y) 3)) (+.f64 (pow.f64 (cos.f64 x) 2) (+.f64 (pow.f64 (cos.f64 y) 2) (*.f64 (cos.f64 x) (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 (cos.f64 y) 2)) (+.f64 (cos.f64 x) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 (cos.f64 y) 3))) (neg.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (+.f64 (pow.f64 (cos.f64 y) 2) (*.f64 (cos.f64 x) (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 (cos.f64 y) 2))) (neg.f64 (+.f64 (cos.f64 x) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 (neg.f64 (cos.f64 y)) 3)) (+.f64 (pow.f64 (cos.f64 x) 2) (-.f64 (*.f64 (neg.f64 (cos.f64 y)) (neg.f64 (cos.f64 y))) (*.f64 (cos.f64 x) (neg.f64 (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (cos.f64 x) (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (cos.f64 x) (cos.f64 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (cos.f64 x) (cos.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (cos.f64 x) (cos.f64 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (cos.f64 x) (cos.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (cos.f64 x) (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (cos.f64 x) (cos.f64 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (cos.f64 x) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (cos.f64 x) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (cos.f64 x) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (cos.f64 x) (cos.f64 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 x) (neg.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (cbrt.f64 (cos.f64 x)) (neg.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 x)) (sqrt.f64 (cos.f64 x)) (neg.f64 (cos.f64 y)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 5) -1) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2)) 2) (cbrt.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2)) (sqrt.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 (sqrt.f64 5) -1)) -3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 2/3 (+.f64 (sqrt.f64 5) -1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (+.f64 (sqrt.f64 5) -1)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 9/2 (neg.f64 (sqrt.f64 45/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 9/2 (sqrt.f64 45/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 9/2 (sqrt.f64 45/4))) 2) (cbrt.f64 (-.f64 9/2 (sqrt.f64 45/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 9/2 (sqrt.f64 45/4))) (sqrt.f64 (-.f64 9/2 (sqrt.f64 45/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 729/8 (*.f64 (sqrt.f64 45/4) 45/4)) (/.f64 1 (+.f64 81/4 (+.f64 45/4 (*.f64 9/2 (sqrt.f64 45/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 9 (/.f64 1 (+.f64 9/2 (sqrt.f64 45/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 81/4 (+.f64 45/4 (*.f64 9/2 (sqrt.f64 45/4)))) (-.f64 729/8 (*.f64 (sqrt.f64 45/4) 45/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 9/2 (sqrt.f64 45/4)) 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 729/8 (*.f64 (sqrt.f64 45/4) 45/4)) (+.f64 81/4 (+.f64 45/4 (*.f64 9/2 (sqrt.f64 45/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 9 (+.f64 9/2 (sqrt.f64 45/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 729/8 (*.f64 (sqrt.f64 45/4) 45/4))) (neg.f64 (+.f64 81/4 (+.f64 45/4 (*.f64 9/2 (sqrt.f64 45/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -9 (neg.f64 (+.f64 9/2 (sqrt.f64 45/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 729/8 (pow.f64 (neg.f64 (sqrt.f64 45/4)) 3)) (+.f64 81/4 (-.f64 (*.f64 (neg.f64 (sqrt.f64 45/4)) (neg.f64 (sqrt.f64 45/4))) (*.f64 9/2 (neg.f64 (sqrt.f64 45/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 9/2 (sqrt.f64 45/4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 9/2 (sqrt.f64 45/4)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 9/2 (sqrt.f64 45/4))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 9/2 (sqrt.f64 45/4))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 9/2 (sqrt.f64 45/4)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 9/2 (sqrt.f64 45/4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 9/2 (sqrt.f64 45/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 9/2 (sqrt.f64 45/4)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 9/2 (sqrt.f64 45/4))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 9/2 (sqrt.f64 45/4))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 9/2 (sqrt.f64 45/4))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 9/2 (sqrt.f64 45/4))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (/.f64 1 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (cbrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))) (sqrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) (/.f64 1 (neg.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) 2) 1) (/.f64 (cbrt.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) 1) (/.f64 (sqrt.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) 2) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (cbrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (/.f64 (sqrt.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))) (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (sqrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) 2) (sqrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))) (/.f64 (cbrt.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) (sqrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)) (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) 3) (pow.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))) 1))))))"]],"rules":[["egg-rr",27],["egg-rr",25],["egg-rr",19],["egg-rr",36]],"stop":[["node limit",1]],"time":44.241943359375,"type":"rewrite"},{"count":[[139,140]],"egraph":[[2,2136,2565,0.01498675],[1,570,2785,0.004097958],[0,184,2889,0.000944125]],"inputs":[["(-.f64 1 (cos.f64 y))","(-.f64 (+.f64 1 (*.f64 -1/2 (pow.f64 x 2))) (cos.f64 y))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/24 (pow.f64 x 4)))) (cos.f64 y))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/24 (pow.f64 x 4)) (*.f64 -1/720 (pow.f64 x 6))))) (cos.f64 y))","(-.f64 (cos.f64 x) 1)","(-.f64 (+.f64 (cos.f64 x) (*.f64 1/2 (pow.f64 y 2))) 1)","(-.f64 (+.f64 (cos.f64 x) (+.f64 (*.f64 1/2 (pow.f64 y 2)) (*.f64 -1/24 (pow.f64 y 4)))) 1)","(-.f64 (+.f64 (cos.f64 x) (+.f64 (*.f64 1/2 (pow.f64 y 2)) (+.f64 (*.f64 1/720 (pow.f64 y 6)) (*.f64 -1/24 (pow.f64 y 4))))) 1)","(/.f64 (+.f64 2 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1))))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5))))","(+.f64 (*.f64 2 (/.f64 1 (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5))))) (+.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 y (*.f64 (-.f64 (cos.f64 x) 1) (+.f64 (*.f64 1/256 (sin.f64 x)) (sin.f64 x))))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5)))) (*.f64 -1/16 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5)))))))","(+.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 -1/32 (pow.f64 (sin.f64 x) 2)) (*.f64 -1/16 (-.f64 (cos.f64 x) 1)))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5)))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1))))) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (pow.f64 (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5))) 2))))) (+.f64 (*.f64 2 (/.f64 1 (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5))))) (+.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 y (*.f64 (-.f64 (cos.f64 x) 1) (+.f64 (*.f64 1/256 (sin.f64 x)) (sin.f64 x))))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5)))) (*.f64 -1/16 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5))))))))","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 1/2 (+.f64 (*.f64 1/256 (sin.f64 x)) (sin.f64 x))) (*.f64 (+.f64 (*.f64 -1/1536 (sin.f64 x)) (*.f64 -1/6 (sin.f64 x))) (-.f64 (cos.f64 x) 1)))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5)))) (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) 1) (*.f64 (+.f64 (*.f64 1/256 (sin.f64 x)) (sin.f64 x)) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))) (pow.f64 (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5))) 2))))) (+.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 -1/32 (pow.f64 (sin.f64 x) 2)) (*.f64 -1/16 (-.f64 (cos.f64 x) 1)))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5)))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1))))) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (pow.f64 (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5))) 2))))) (+.f64 (*.f64 2 (/.f64 1 (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5))))) (+.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 y (*.f64 (-.f64 (cos.f64 x) 1) (+.f64 (*.f64 1/256 (sin.f64 x)) (sin.f64 x))))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5)))) (*.f64 -1/16 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5)))))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (+.f64 2 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2))))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))))","(+.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 (+.f64 (*.f64 1/256 (sin.f64 y)) (sin.f64 y)) x))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5))))))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))))) (*.f64 2 (/.f64 1 (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5))))))))))","(+.f64 (*.f64 (-.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 1/32 (pow.f64 (sin.f64 y) 2)) (*.f64 -1/16 (-.f64 1 (cos.f64 y))))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5))))))) (*.f64 -3/4 (/.f64 (*.f64 (-.f64 (sqrt.f64 5) 1) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2)))) 2)) (pow.f64 (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))) 2)))) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 (+.f64 (*.f64 1/256 (sin.f64 y)) (sin.f64 y)) x))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5))))))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))))) (*.f64 2 (/.f64 1 (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))))))))","(+.f64 (*.f64 (-.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 1/32 (pow.f64 (sin.f64 y) 2)) (*.f64 -1/16 (-.f64 1 (cos.f64 y))))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5))))))) (*.f64 -3/4 (/.f64 (*.f64 (-.f64 (sqrt.f64 5) 1) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2)))) 2)) (pow.f64 (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))) 2)))) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 (+.f64 (*.f64 1/256 (sin.f64 y)) (sin.f64 y)) x))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5))))))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))))) (+.f64 (*.f64 2 (/.f64 1 (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))))) (*.f64 (-.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 (-.f64 1 (cos.f64 y)) (+.f64 (*.f64 -1/1536 (sin.f64 y)) (*.f64 -1/6 (sin.f64 y)))) (*.f64 -1/2 (+.f64 (*.f64 1/256 (sin.f64 y)) (sin.f64 y))))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5))))))) (*.f64 -3/4 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (sqrt.f64 5) 1) (*.f64 (-.f64 1 (cos.f64 y)) (+.f64 (*.f64 1/256 (sin.f64 y)) (sin.f64 y))))) (pow.f64 (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))) 2)))) (pow.f64 x 3))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))"]],"method":["egg-herbie"],"outputs":[["(-.f64 1 (cos.f64 y))","(-.f64 (+.f64 1 (*.f64 -1/2 (pow.f64 x 2))) (cos.f64 y))","(-.f64 (+.f64 1 (*.f64 -1/2 (*.f64 x x))) (cos.f64 y))","(-.f64 (fma.f64 -1/2 (*.f64 x x) 1) (cos.f64 y))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/24 (pow.f64 x 4)))) (cos.f64 y))","(+.f64 1 (-.f64 (fma.f64 -1/2 (*.f64 x x) (*.f64 1/24 (pow.f64 x 4))) (cos.f64 y)))","(+.f64 (fma.f64 -1/2 (*.f64 x x) 1) (-.f64 (*.f64 1/24 (pow.f64 x 4)) (cos.f64 y)))","(-.f64 (fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) 1)) (cos.f64 y))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/24 (pow.f64 x 4)) (*.f64 -1/720 (pow.f64 x 6))))) (cos.f64 y))","(+.f64 1 (-.f64 (fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) (*.f64 -1/720 (pow.f64 x 6)))) (cos.f64 y)))","(+.f64 (fma.f64 -1/2 (*.f64 x x) 1) (-.f64 (fma.f64 -1/720 (pow.f64 x 6) (*.f64 1/24 (pow.f64 x 4))) (cos.f64 y)))","(-.f64 (cos.f64 x) 1)","(+.f64 (cos.f64 x) -1)","(-.f64 (+.f64 (cos.f64 x) (*.f64 1/2 (pow.f64 y 2))) 1)","(+.f64 (cos.f64 x) (-.f64 (*.f64 1/2 (*.f64 y y)) 1))","(+.f64 (cos.f64 x) (fma.f64 1/2 (*.f64 y y) -1))","(+.f64 (cos.f64 x) (fma.f64 (*.f64 1/2 y) y -1))","(-.f64 (+.f64 (cos.f64 x) (+.f64 (*.f64 1/2 (pow.f64 y 2)) (*.f64 -1/24 (pow.f64 y 4)))) 1)","(+.f64 (cos.f64 x) (-.f64 (fma.f64 1/2 (*.f64 y y) (*.f64 -1/24 (pow.f64 y 4))) 1))","(+.f64 (cos.f64 x) (+.f64 (*.f64 -1/24 (pow.f64 y 4)) (fma.f64 1/2 (*.f64 y y) -1)))","(+.f64 (cos.f64 x) (fma.f64 -1/24 (pow.f64 y 4) (fma.f64 (*.f64 1/2 y) y -1)))","(-.f64 (+.f64 (cos.f64 x) (+.f64 (*.f64 1/2 (pow.f64 y 2)) (+.f64 (*.f64 1/720 (pow.f64 y 6)) (*.f64 -1/24 (pow.f64 y 4))))) 1)","(+.f64 (+.f64 (cos.f64 x) (fma.f64 1/2 (*.f64 y y) (fma.f64 1/720 (pow.f64 y 6) (*.f64 -1/24 (pow.f64 y 4))))) -1)","(+.f64 (cos.f64 x) (+.f64 (fma.f64 -1/24 (pow.f64 y 4) (*.f64 1/720 (pow.f64 y 6))) (fma.f64 1/2 (*.f64 y y) -1)))","(+.f64 (cos.f64 x) (+.f64 (fma.f64 -1/24 (pow.f64 y 4) (*.f64 1/720 (pow.f64 y 6))) (fma.f64 (*.f64 1/2 y) y -1)))","(/.f64 (+.f64 2 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1))))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5))))","(/.f64 (+.f64 2 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (cos.f64 x) -1) (pow.f64 (sin.f64 x) 2))))) (+.f64 15/2 (-.f64 (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))) (*.f64 3/2 (sqrt.f64 5)))))","(/.f64 (fma.f64 -1/16 (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 (sqrt.f64 2) (pow.f64 (sin.f64 x) 2))) 2) (+.f64 15/2 (*.f64 3/2 (-.f64 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1)) (sqrt.f64 5)))))","(/.f64 (fma.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sin.f64 x) 2)) (fma.f64 (cos.f64 x) -1/16 1/16) 2) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)))","(+.f64 (*.f64 2 (/.f64 1 (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5))))) (+.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 y (*.f64 (-.f64 (cos.f64 x) 1) (+.f64 (*.f64 1/256 (sin.f64 x)) (sin.f64 x))))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5)))) (*.f64 -1/16 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5)))))))","(+.f64 (/.f64 2 (+.f64 15/2 (-.f64 (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))) (*.f64 3/2 (sqrt.f64 5))))) (+.f64 (/.f64 (sqrt.f64 2) (/.f64 (+.f64 15/2 (-.f64 (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))) (*.f64 3/2 (sqrt.f64 5)))) (*.f64 y (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 257/256 (sin.f64 x)))))) (*.f64 -1/16 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (cos.f64 x) -1) (pow.f64 (sin.f64 x) 2))) (+.f64 15/2 (-.f64 (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))) (*.f64 3/2 (sqrt.f64 5))))))))","(+.f64 (/.f64 2 (+.f64 15/2 (*.f64 3/2 (-.f64 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1)) (sqrt.f64 5))))) (fma.f64 -1/16 (*.f64 (/.f64 (sqrt.f64 2) (+.f64 15/2 (*.f64 3/2 (-.f64 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1)) (sqrt.f64 5))))) (*.f64 (+.f64 (cos.f64 x) -1) (pow.f64 (sin.f64 x) 2))) (/.f64 (*.f64 (sqrt.f64 2) (*.f64 y (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 (sin.f64 x) 257/256)))) (+.f64 15/2 (*.f64 3/2 (-.f64 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1)) (sqrt.f64 5)))))))","(+.f64 (/.f64 2 (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2))) (fma.f64 (/.f64 (sqrt.f64 2) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2))) (*.f64 (*.f64 (sin.f64 x) 257/256) (fma.f64 (cos.f64 x) y (neg.f64 y))) (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (fma.f64 (cos.f64 x) -1/16 1/16)) (pow.f64 (sin.f64 x) 2)) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)))))","(+.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 -1/32 (pow.f64 (sin.f64 x) 2)) (*.f64 -1/16 (-.f64 (cos.f64 x) 1)))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5)))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1))))) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (pow.f64 (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5))) 2))))) (+.f64 (*.f64 2 (/.f64 1 (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5))))) (+.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 y (*.f64 (-.f64 (cos.f64 x) 1) (+.f64 (*.f64 1/256 (sin.f64 x)) (sin.f64 x))))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5)))) (*.f64 -1/16 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5))))))))","(fma.f64 (*.f64 y y) (-.f64 (/.f64 (sqrt.f64 2) (/.f64 (+.f64 15/2 (-.f64 (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))) (*.f64 3/2 (sqrt.f64 5)))) (fma.f64 -1/32 (pow.f64 (sin.f64 x) 2) (*.f64 (+.f64 (cos.f64 x) -1) -1/16)))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (cos.f64 x) -1) (pow.f64 (sin.f64 x) 2))))) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5)))) (pow.f64 (+.f64 15/2 (-.f64 (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))) (*.f64 3/2 (sqrt.f64 5)))) 2)))) (+.f64 (/.f64 2 (+.f64 15/2 (-.f64 (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))) (*.f64 3/2 (sqrt.f64 5))))) (+.f64 (/.f64 (sqrt.f64 2) (/.f64 (+.f64 15/2 (-.f64 (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))) (*.f64 3/2 (sqrt.f64 5)))) (*.f64 y (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 257/256 (sin.f64 x)))))) (*.f64 -1/16 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (cos.f64 x) -1) (pow.f64 (sin.f64 x) 2))) (+.f64 15/2 (-.f64 (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))) (*.f64 3/2 (sqrt.f64 5)))))))))","(+.f64 (fma.f64 -1/16 (*.f64 (/.f64 (sqrt.f64 2) (+.f64 15/2 (*.f64 3/2 (-.f64 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1)) (sqrt.f64 5))))) (*.f64 (+.f64 (cos.f64 x) -1) (pow.f64 (sin.f64 x) 2))) (/.f64 (*.f64 (sqrt.f64 2) (*.f64 y (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 (sin.f64 x) 257/256)))) (+.f64 15/2 (*.f64 3/2 (-.f64 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1)) (sqrt.f64 5)))))) (fma.f64 (*.f64 y y) (+.f64 (*.f64 (/.f64 (sqrt.f64 2) (+.f64 15/2 (*.f64 3/2 (-.f64 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1)) (sqrt.f64 5))))) (fma.f64 (pow.f64 (sin.f64 x) 2) -1/32 (+.f64 (*.f64 (cos.f64 x) -1/16) 1/16))) (*.f64 1/2 (/.f64 (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2)) (/.f64 (pow.f64 (+.f64 15/2 (*.f64 3/2 (-.f64 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1)) (sqrt.f64 5)))) 2) (fma.f64 -1/16 (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 (sqrt.f64 2) (pow.f64 (sin.f64 x) 2))) 2))))) (/.f64 2 (+.f64 15/2 (*.f64 3/2 (-.f64 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1)) (sqrt.f64 5)))))))","(+.f64 (fma.f64 (/.f64 (sqrt.f64 2) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2))) (*.f64 (*.f64 (sin.f64 x) 257/256) (fma.f64 (cos.f64 x) y (neg.f64 y))) (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (fma.f64 (cos.f64 x) -1/16 1/16)) (pow.f64 (sin.f64 x) 2)) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)))) (fma.f64 (*.f64 y y) (fma.f64 1/2 (*.f64 (/.f64 (fma.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sin.f64 x) 2)) (fma.f64 (cos.f64 x) -1/16 1/16) 2) (pow.f64 (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)) 2)) (fma.f64 (sqrt.f64 5) -3/2 9/2)) (*.f64 (/.f64 (sqrt.f64 2) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2))) (fma.f64 (pow.f64 (sin.f64 x) 2) -1/32 (fma.f64 (cos.f64 x) -1/16 1/16)))) (/.f64 2 (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)))))","(+.f64 (*.f64 (pow.f64 y 3) (-.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 1/2 (+.f64 (*.f64 1/256 (sin.f64 x)) (sin.f64 x))) (*.f64 (+.f64 (*.f64 -1/1536 (sin.f64 x)) (*.f64 -1/6 (sin.f64 x))) (-.f64 (cos.f64 x) 1)))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5)))) (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) 1) (*.f64 (+.f64 (*.f64 1/256 (sin.f64 x)) (sin.f64 x)) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))) (pow.f64 (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5))) 2))))) (+.f64 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 -1/32 (pow.f64 (sin.f64 x) 2)) (*.f64 -1/16 (-.f64 (cos.f64 x) 1)))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5)))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1))))) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (pow.f64 (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5))) 2))))) (+.f64 (*.f64 2 (/.f64 1 (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5))))) (+.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 y (*.f64 (-.f64 (cos.f64 x) 1) (+.f64 (*.f64 1/256 (sin.f64 x)) (sin.f64 x))))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5)))) (*.f64 -1/16 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1))) (-.f64 (+.f64 15/2 (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))) (*.f64 3/2 (sqrt.f64 5)))))))))","(fma.f64 (pow.f64 y 3) (-.f64 (/.f64 (sqrt.f64 2) (/.f64 (+.f64 15/2 (-.f64 (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))) (*.f64 3/2 (sqrt.f64 5)))) (fma.f64 1/2 (*.f64 257/256 (sin.f64 x)) (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 (sin.f64 x) -257/1536))))) (*.f64 -1/2 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 (*.f64 257/256 (sin.f64 x)) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5)))))) (pow.f64 (+.f64 15/2 (-.f64 (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))) (*.f64 3/2 (sqrt.f64 5)))) 2)))) (fma.f64 (*.f64 y y) (-.f64 (/.f64 (sqrt.f64 2) (/.f64 (+.f64 15/2 (-.f64 (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))) (*.f64 3/2 (sqrt.f64 5)))) (fma.f64 -1/32 (pow.f64 (sin.f64 x) 2) (*.f64 (+.f64 (cos.f64 x) -1) -1/16)))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 2 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (cos.f64 x) -1) (pow.f64 (sin.f64 x) 2))))) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5)))) (pow.f64 (+.f64 15/2 (-.f64 (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))) (*.f64 3/2 (sqrt.f64 5)))) 2)))) (+.f64 (/.f64 2 (+.f64 15/2 (-.f64 (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))) (*.f64 3/2 (sqrt.f64 5))))) (+.f64 (/.f64 (sqrt.f64 2) (/.f64 (+.f64 15/2 (-.f64 (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))) (*.f64 3/2 (sqrt.f64 5)))) (*.f64 y (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 257/256 (sin.f64 x)))))) (*.f64 -1/16 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (cos.f64 x) -1) (pow.f64 (sin.f64 x) 2))) (+.f64 15/2 (-.f64 (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))) (*.f64 3/2 (sqrt.f64 5))))))))))","(fma.f64 (pow.f64 y 3) (-.f64 (/.f64 (*.f64 (sqrt.f64 2) (fma.f64 (+.f64 (cos.f64 x) -1) (*.f64 (sin.f64 x) -257/1536) (*.f64 257/512 (sin.f64 x)))) (+.f64 15/2 (*.f64 3/2 (-.f64 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1)) (sqrt.f64 5))))) (/.f64 (*.f64 -1/2 (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 (*.f64 (*.f64 (sin.f64 x) 257/256) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2))) (sqrt.f64 2)))) (pow.f64 (+.f64 15/2 (*.f64 3/2 (-.f64 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1)) (sqrt.f64 5)))) 2))) (+.f64 (fma.f64 -1/16 (*.f64 (/.f64 (sqrt.f64 2) (+.f64 15/2 (*.f64 3/2 (-.f64 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1)) (sqrt.f64 5))))) (*.f64 (+.f64 (cos.f64 x) -1) (pow.f64 (sin.f64 x) 2))) (/.f64 (*.f64 (sqrt.f64 2) (*.f64 y (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 (sin.f64 x) 257/256)))) (+.f64 15/2 (*.f64 3/2 (-.f64 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1)) (sqrt.f64 5)))))) (fma.f64 (*.f64 y y) (+.f64 (*.f64 (/.f64 (sqrt.f64 2) (+.f64 15/2 (*.f64 3/2 (-.f64 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1)) (sqrt.f64 5))))) (fma.f64 (pow.f64 (sin.f64 x) 2) -1/32 (+.f64 (*.f64 (cos.f64 x) -1/16) 1/16))) (*.f64 1/2 (/.f64 (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2)) (/.f64 (pow.f64 (+.f64 15/2 (*.f64 3/2 (-.f64 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1)) (sqrt.f64 5)))) 2) (fma.f64 -1/16 (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 (sqrt.f64 2) (pow.f64 (sin.f64 x) 2))) 2))))) (/.f64 2 (+.f64 15/2 (*.f64 3/2 (-.f64 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1)) (sqrt.f64 5))))))))","(fma.f64 (pow.f64 y 3) (fma.f64 1/2 (*.f64 (/.f64 (sqrt.f64 2) (pow.f64 (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)) 2)) (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 257/256 (*.f64 (sin.f64 x) (fma.f64 (sqrt.f64 5) -3/2 9/2))))) (*.f64 (/.f64 (sqrt.f64 2) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2))) (fma.f64 (+.f64 (cos.f64 x) -1) (*.f64 (sin.f64 x) -257/1536) (*.f64 (sin.f64 x) 257/512)))) (+.f64 (fma.f64 (/.f64 (sqrt.f64 2) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2))) (*.f64 (*.f64 (sin.f64 x) 257/256) (fma.f64 (cos.f64 x) y (neg.f64 y))) (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (fma.f64 (cos.f64 x) -1/16 1/16)) (pow.f64 (sin.f64 x) 2)) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)))) (fma.f64 (*.f64 y y) (fma.f64 1/2 (*.f64 (/.f64 (fma.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sin.f64 x) 2)) (fma.f64 (cos.f64 x) -1/16 1/16) 2) (pow.f64 (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)) 2)) (fma.f64 (sqrt.f64 5) -3/2 9/2)) (*.f64 (/.f64 (sqrt.f64 2) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2))) (fma.f64 (pow.f64 (sin.f64 x) 2) -1/32 (fma.f64 (cos.f64 x) -1/16 1/16)))) (/.f64 2 (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x))) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))) 2) (+.f64 3 (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))) (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (+.f64 3 (fma.f64 (+.f64 (*.f64 3/2 (sqrt.f64 5)) -3/2) (cos.f64 x) (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x))) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))) 2) (+.f64 3 (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))) (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (+.f64 3 (fma.f64 (+.f64 (*.f64 3/2 (sqrt.f64 5)) -3/2) (cos.f64 x) (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x))) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))) 2) (+.f64 3 (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))) (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (+.f64 3 (fma.f64 (+.f64 (*.f64 3/2 (sqrt.f64 5)) -3/2) (cos.f64 x) (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x))) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))) 2) (+.f64 3 (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))) (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (+.f64 3 (fma.f64 (+.f64 (*.f64 3/2 (sqrt.f64 5)) -3/2) (cos.f64 x) (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x))) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))) 2) (+.f64 3 (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))) (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (+.f64 3 (fma.f64 (+.f64 (*.f64 3/2 (sqrt.f64 5)) -3/2) (cos.f64 x) (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x))) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))) 2) (+.f64 3 (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))) (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (+.f64 3 (fma.f64 (+.f64 (*.f64 3/2 (sqrt.f64 5)) -3/2) (cos.f64 x) (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x))) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))) 2) (+.f64 3 (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))) (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (+.f64 3 (fma.f64 (+.f64 (*.f64 3/2 (sqrt.f64 5)) -3/2) (cos.f64 x) (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x))) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))) 2) (+.f64 3 (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))) (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (+.f64 3 (fma.f64 (+.f64 (*.f64 3/2 (sqrt.f64 5)) -3/2) (cos.f64 x) (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","(/.f64 (+.f64 2 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2))))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))))","(/.f64 (fma.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2))) 2) (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (+.f64 3 (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5)))))))","(/.f64 (fma.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2))) 2) (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2)) 3)))","(/.f64 (fma.f64 (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 -1/16 (sqrt.f64 2))) (pow.f64 (sin.f64 y) 2) 2) (+.f64 3 (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 3/2 (sqrt.f64 5) -3/2))))","(+.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 (+.f64 (*.f64 1/256 (sin.f64 y)) (sin.f64 y)) x))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5))))))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))))) (*.f64 2 (/.f64 1 (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5))))))))))","(+.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 x (*.f64 257/256 (sin.f64 y))))) (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (+.f64 3 (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))))))) (fma.f64 -1/16 (/.f64 (sqrt.f64 2) (/.f64 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (+.f64 3 (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5)))))) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2)))) (/.f64 2 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (+.f64 3 (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5)))))))))","(+.f64 (/.f64 (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 x (*.f64 (sin.f64 y) 257/256))) (/.f64 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2)) 3)) (sqrt.f64 2))) (fma.f64 -1/16 (/.f64 (sqrt.f64 2) (/.f64 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2)) 3)) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2)))) (/.f64 2 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2)) 3)))))","(fma.f64 (/.f64 (sqrt.f64 2) (+.f64 3 (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 3/2 (sqrt.f64 5) -3/2)))) (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 x (*.f64 (sin.f64 y) 257/256))) (fma.f64 -1/16 (*.f64 (/.f64 (*.f64 (-.f64 1 (cos.f64 y)) (sqrt.f64 2)) (+.f64 3 (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 3/2 (sqrt.f64 5) -3/2)))) (pow.f64 (sin.f64 y) 2)) (/.f64 2 (+.f64 3 (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 3/2 (sqrt.f64 5) -3/2))))))","(+.f64 (*.f64 (-.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 1/32 (pow.f64 (sin.f64 y) 2)) (*.f64 -1/16 (-.f64 1 (cos.f64 y))))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5))))))) (*.f64 -3/4 (/.f64 (*.f64 (-.f64 (sqrt.f64 5) 1) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2)))) 2)) (pow.f64 (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))) 2)))) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 (+.f64 (*.f64 1/256 (sin.f64 y)) (sin.f64 y)) x))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5))))))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))))) (*.f64 2 (/.f64 1 (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))))))))","(fma.f64 (-.f64 (/.f64 (sqrt.f64 2) (/.f64 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (+.f64 3 (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5)))))) (fma.f64 1/32 (pow.f64 (sin.f64 y) 2) (*.f64 (-.f64 1 (cos.f64 y)) -1/16)))) (*.f64 -3/4 (/.f64 (+.f64 (sqrt.f64 5) -1) (/.f64 (pow.f64 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (+.f64 3 (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5)))))) 2) (fma.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2))) 2))))) (*.f64 x x) (+.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 x (*.f64 257/256 (sin.f64 y))))) (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (+.f64 3 (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))))))) (fma.f64 -1/16 (/.f64 (sqrt.f64 2) (/.f64 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (+.f64 3 (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5)))))) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2)))) (/.f64 2 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (+.f64 3 (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))))))))))","(fma.f64 (*.f64 x x) (-.f64 (/.f64 (*.f64 (sqrt.f64 2) (fma.f64 (-.f64 1 (cos.f64 y)) -1/16 (*.f64 (pow.f64 (sin.f64 y) 2) 1/32))) (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2)) 3))) (*.f64 -3/4 (*.f64 (/.f64 (+.f64 (sqrt.f64 5) -1) (pow.f64 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2)) 3)) 2)) (fma.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2))) 2)))) (+.f64 (/.f64 (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 x (*.f64 (sin.f64 y) 257/256))) (/.f64 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2)) 3)) (sqrt.f64 2))) (fma.f64 -1/16 (/.f64 (sqrt.f64 2) (/.f64 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2)) 3)) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2)))) (/.f64 2 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2)) 3))))))","(fma.f64 x (*.f64 x (fma.f64 (*.f64 (/.f64 (+.f64 (sqrt.f64 5) -1) (pow.f64 (+.f64 3 (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 3/2 (sqrt.f64 5) -3/2))) 2)) (fma.f64 (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 -1/16 (sqrt.f64 2))) (pow.f64 (sin.f64 y) 2) 2)) 3/4 (*.f64 (/.f64 (sqrt.f64 2) (+.f64 3 (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 3/2 (sqrt.f64 5) -3/2)))) (fma.f64 (-.f64 1 (cos.f64 y)) -1/16 (*.f64 (pow.f64 (sin.f64 y) 2) 1/32))))) (fma.f64 (/.f64 (sqrt.f64 2) (+.f64 3 (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 3/2 (sqrt.f64 5) -3/2)))) (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 x (*.f64 (sin.f64 y) 257/256))) (fma.f64 -1/16 (*.f64 (/.f64 (*.f64 (-.f64 1 (cos.f64 y)) (sqrt.f64 2)) (+.f64 3 (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 3/2 (sqrt.f64 5) -3/2)))) (pow.f64 (sin.f64 y) 2)) (/.f64 2 (+.f64 3 (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 3/2 (sqrt.f64 5) -3/2)))))))","(+.f64 (*.f64 (-.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 1/32 (pow.f64 (sin.f64 y) 2)) (*.f64 -1/16 (-.f64 1 (cos.f64 y))))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5))))))) (*.f64 -3/4 (/.f64 (*.f64 (-.f64 (sqrt.f64 5) 1) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2)))) 2)) (pow.f64 (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))) 2)))) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 (+.f64 (*.f64 1/256 (sin.f64 y)) (sin.f64 y)) x))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5))))))) (+.f64 (*.f64 -1/16 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))))) (+.f64 (*.f64 2 (/.f64 1 (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))))) (*.f64 (-.f64 (/.f64 (*.f64 (sqrt.f64 2) (+.f64 (*.f64 (-.f64 1 (cos.f64 y)) (+.f64 (*.f64 -1/1536 (sin.f64 y)) (*.f64 -1/6 (sin.f64 y)))) (*.f64 -1/2 (+.f64 (*.f64 1/256 (sin.f64 y)) (sin.f64 y))))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5))))))) (*.f64 -3/4 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (sqrt.f64 5) 1) (*.f64 (-.f64 1 (cos.f64 y)) (+.f64 (*.f64 1/256 (sin.f64 y)) (sin.f64 y))))) (pow.f64 (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 3 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))))) 2)))) (pow.f64 x 3))))))","(fma.f64 (-.f64 (/.f64 (sqrt.f64 2) (/.f64 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (+.f64 3 (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5)))))) (fma.f64 1/32 (pow.f64 (sin.f64 y) 2) (*.f64 (-.f64 1 (cos.f64 y)) -1/16)))) (*.f64 -3/4 (/.f64 (+.f64 (sqrt.f64 5) -1) (/.f64 (pow.f64 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (+.f64 3 (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5)))))) 2) (fma.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2))) 2))))) (*.f64 x x) (+.f64 (/.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 x (*.f64 257/256 (sin.f64 y))))) (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (+.f64 3 (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))))))) (+.f64 (fma.f64 -1/16 (/.f64 (sqrt.f64 2) (/.f64 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (+.f64 3 (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5)))))) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2)))) (/.f64 2 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (+.f64 3 (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5)))))))) (*.f64 (+.f64 (/.f64 (sqrt.f64 2) (/.f64 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (+.f64 3 (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5)))))) (fma.f64 (-.f64 1 (cos.f64 y)) (*.f64 (sin.f64 y) -257/1536) (*.f64 -1/2 (*.f64 257/256 (sin.f64 y)))))) (*.f64 3/4 (/.f64 (sqrt.f64 2) (/.f64 (pow.f64 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (+.f64 3 (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5)))))) 2) (*.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) (-.f64 1 (cos.f64 y))) (*.f64 257/256 (sin.f64 y))))))) (pow.f64 x 3)))))","(+.f64 (fma.f64 -1/16 (/.f64 (sqrt.f64 2) (/.f64 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2)) 3)) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2)))) (fma.f64 (+.f64 (*.f64 (/.f64 (sqrt.f64 2) (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2)) 3))) (fma.f64 (-.f64 1 (cos.f64 y)) (*.f64 (sin.f64 y) -257/1536) (*.f64 -257/512 (sin.f64 y)))) (*.f64 (/.f64 (*.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) (*.f64 (sin.f64 y) 257/256)) (-.f64 1 (cos.f64 y))) (/.f64 (pow.f64 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2)) 3)) 2) (sqrt.f64 2))) 3/4)) (pow.f64 x 3) (/.f64 2 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2)) 3))))) (fma.f64 (*.f64 x x) (-.f64 (/.f64 (*.f64 (sqrt.f64 2) (fma.f64 (-.f64 1 (cos.f64 y)) -1/16 (*.f64 (pow.f64 (sin.f64 y) 2) 1/32))) (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2)) 3))) (*.f64 -3/4 (*.f64 (/.f64 (+.f64 (sqrt.f64 5) -1) (pow.f64 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2)) 3)) 2)) (fma.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2))) 2)))) (/.f64 (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 x (*.f64 (sin.f64 y) 257/256))) (/.f64 (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2)) 3)) (sqrt.f64 2)))))","(fma.f64 x (*.f64 x (fma.f64 (*.f64 (/.f64 (+.f64 (sqrt.f64 5) -1) (pow.f64 (+.f64 3 (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 3/2 (sqrt.f64 5) -3/2))) 2)) (fma.f64 (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 -1/16 (sqrt.f64 2))) (pow.f64 (sin.f64 y) 2) 2)) 3/4 (*.f64 (/.f64 (sqrt.f64 2) (+.f64 3 (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 3/2 (sqrt.f64 5) -3/2)))) (fma.f64 (-.f64 1 (cos.f64 y)) -1/16 (*.f64 (pow.f64 (sin.f64 y) 2) 1/32))))) (fma.f64 (/.f64 (sqrt.f64 2) (+.f64 3 (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 3/2 (sqrt.f64 5) -3/2)))) (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 x (*.f64 (sin.f64 y) 257/256))) (fma.f64 (fma.f64 (/.f64 (sqrt.f64 2) (+.f64 3 (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 3/2 (sqrt.f64 5) -3/2)))) (fma.f64 (-.f64 1 (cos.f64 y)) (*.f64 (sin.f64 y) -257/1536) (*.f64 (sin.f64 y) -257/512)) (*.f64 (/.f64 (+.f64 (sqrt.f64 5) -1) (/.f64 (pow.f64 (+.f64 3 (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 3/2 (sqrt.f64 5) -3/2))) 2) (*.f64 (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 (sin.f64 y) 257/256)) (sqrt.f64 2)))) 3/4)) (pow.f64 x 3) (fma.f64 -1/16 (*.f64 (/.f64 (*.f64 (-.f64 1 (cos.f64 y)) (sqrt.f64 2)) (+.f64 3 (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 3/2 (sqrt.f64 5) -3/2)))) (pow.f64 (sin.f64 y) 2)) (/.f64 2 (+.f64 3 (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 3/2 (sqrt.f64 5) -3/2))))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x))) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))) 2) (+.f64 3 (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))) (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (+.f64 3 (fma.f64 (+.f64 (*.f64 3/2 (sqrt.f64 5)) -3/2) (cos.f64 x) (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x))) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))) 2) (+.f64 3 (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))) (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (+.f64 3 (fma.f64 (+.f64 (*.f64 3/2 (sqrt.f64 5)) -3/2) (cos.f64 x) (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x))) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))) 2) (+.f64 3 (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))) (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (+.f64 3 (fma.f64 (+.f64 (*.f64 3/2 (sqrt.f64 5)) -3/2) (cos.f64 x) (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x))) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))) 2) (+.f64 3 (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))) (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (+.f64 3 (fma.f64 (+.f64 (*.f64 3/2 (sqrt.f64 5)) -3/2) (cos.f64 x) (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x))) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))) 2) (+.f64 3 (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))) (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (+.f64 3 (fma.f64 (+.f64 (*.f64 3/2 (sqrt.f64 5)) -3/2) (cos.f64 x) (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x))) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))) 2) (+.f64 3 (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))) (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (+.f64 3 (fma.f64 (+.f64 (*.f64 3/2 (sqrt.f64 5)) -3/2) (cos.f64 x) (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x))) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))) 2) (+.f64 3 (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))) (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (+.f64 3 (fma.f64 (+.f64 (*.f64 3/2 (sqrt.f64 5)) -3/2) (cos.f64 x) (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x))) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))) 2) (+.f64 3 (fma.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5))) (*.f64 3/2 (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 5) -1))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (+.f64 3 (fma.f64 (+.f64 (*.f64 3/2 (sqrt.f64 5)) -3/2) (cos.f64 x) (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))"]],"stop":[["node limit",1]],"time":48.49609375,"type":"simplify"},{"compiler":[[8592,5819]],"time":88.5048828125,"type":"eval"},{"alts":[["(*.f64 (/.f64 (sqrt.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (/.f64 (sqrt.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","fresh",0.7743367309689871],["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y)))))) 2) (fma.f64 (cos.f64 x) (/.f64 (+.f64 (sqrt.f64 5) -1) 2/3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","fresh",0.3993825876171498],["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 x) (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2)) 2) (cbrt.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2))) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","fresh",0.4989568247331317],["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (pow.f64 (cbrt.f64 (-.f64 (cos.f64 x) (cos.f64 y))) 3))) 2) (fma.f64 (cos.f64 x) (/.f64 (+.f64 (sqrt.f64 5) -1) 2/3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","fresh",0.4078588571540338],["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","fresh",0.39755639652663033],["(log.f64 (exp.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","fresh",0.569048945070012],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (cbrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","fresh",0.493502655996244],["(+.f64 (fma.f64 (/.f64 (sqrt.f64 2) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2))) (*.f64 (*.f64 (sin.f64 x) 257/256) (fma.f64 (cos.f64 x) y (neg.f64 y))) (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (fma.f64 (cos.f64 x) -1/16 1/16)) (pow.f64 (sin.f64 x) 2)) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)))) (fma.f64 (*.f64 y y) (fma.f64 1/2 (*.f64 (/.f64 (fma.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sin.f64 x) 2)) (fma.f64 (cos.f64 x) -1/16 1/16) 2) (pow.f64 (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)) 2)) (fma.f64 (sqrt.f64 5) -3/2 9/2)) (*.f64 (/.f64 (sqrt.f64 2) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2))) (fma.f64 (pow.f64 (sin.f64 x) 2) -1/32 (fma.f64 (cos.f64 x) -1/16 1/16)))) (/.f64 2 (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)))))","fresh",33.048046494780785],["(*.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (/.f64 1 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))))","fresh",0.4926339356003985],["(pow.f64 (sqrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))) 2)","fresh",0.5339878051370305],["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 x) (pow.f64 (cbrt.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2)) 3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","fresh",0.4055289425463815],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) 2) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (cbrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","fresh",0.8983028930530088],["(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","fresh",0.6784366646063922],["(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","next",0.3688851074528622]],"compiler":[[91,62],[49,37],[58,46],[50,38],[43,31],[45,33],[89,60],[143,115],[45,33],[46,34],[50,38],[92,63],[67,51],[50,38],[91,62],[49,37],[58,46],[50,38],[43,31],[45,33],[89,60],[143,115],[45,33],[46,34],[50,38],[92,63],[67,51],[50,38]],"count":[[142,14]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[140,14],"picked":[1,0]}],"min-error":[0.017910009768442016],"time":54.014892578125,"type":"prune"},{"compiler":[[263,163]],"locations":[["(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y)))))",0.43720629884221013,true],["(*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))",0.66015625,true],["(-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))",1.0,true],["(-.f64 (cos.f64 x) (cos.f64 y))",2.1523568443046606,false]],"time":54.0361328125,"type":"localize"},{"count":[[3,12]],"series":[["(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y)))))","y","-inf",0.52294921875],["(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y)))))","y","inf",0.22998046875],["(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y)))))","y","0",0.39501953125],["(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y)))))","x","-inf",1.066162109375],["(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y)))))","x","inf",0.224853515625],["(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y)))))","x","0",0.393798828125],["(*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))","x","-inf",2.162109375],["(*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))","x","inf",0.446044921875],["(*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))","x","0",0.677978515625]],"time":6.305908203125,"type":"series"},{"count":[[3,60]],"egraph":[[1,633,52,0.011716958],[0,28,58,0.000844791]],"inputs":[["(-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))","(*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))","(*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 9/2 (neg.f64 (sqrt.f64 45/4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 9/2 (*.f64 (neg.f64 (sqrt.f64 45/4)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 9/2 (sqrt.f64 45/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 9/2 (sqrt.f64 45/4))) (pow.f64 (cbrt.f64 (-.f64 9/2 (sqrt.f64 45/4))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 9/2 (sqrt.f64 45/4))) 2) (cbrt.f64 (-.f64 9/2 (sqrt.f64 45/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 9/2 (sqrt.f64 45/4))) (sqrt.f64 (-.f64 9/2 (sqrt.f64 45/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 729/8 (*.f64 (sqrt.f64 45/4) 45/4)) (/.f64 1 (+.f64 81/4 (+.f64 45/4 (*.f64 9/2 (sqrt.f64 45/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 9 (/.f64 1 (+.f64 9/2 (sqrt.f64 45/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 81/4 (+.f64 45/4 (*.f64 9/2 (sqrt.f64 45/4)))) (-.f64 729/8 (*.f64 (sqrt.f64 45/4) 45/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 9/2 (sqrt.f64 45/4)) 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 729/8 (*.f64 (sqrt.f64 45/4) 45/4)) (+.f64 81/4 (+.f64 45/4 (*.f64 9/2 (sqrt.f64 45/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 9 (+.f64 9/2 (sqrt.f64 45/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 729/8 (*.f64 (sqrt.f64 45/4) 45/4))) (neg.f64 (+.f64 81/4 (+.f64 45/4 (*.f64 9/2 (sqrt.f64 45/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -9 (neg.f64 (+.f64 9/2 (sqrt.f64 45/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 729/8 (pow.f64 (neg.f64 (sqrt.f64 45/4)) 3)) (+.f64 81/4 (-.f64 (*.f64 (neg.f64 (sqrt.f64 45/4)) (neg.f64 (sqrt.f64 45/4))) (*.f64 9/2 (neg.f64 (sqrt.f64 45/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 81/4 (*.f64 (neg.f64 (sqrt.f64 45/4)) (neg.f64 (sqrt.f64 45/4)))) (-.f64 9/2 (neg.f64 (sqrt.f64 45/4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 9/2 (sqrt.f64 45/4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 9/2 (sqrt.f64 45/4)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 9/2 (sqrt.f64 45/4))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 9/2 (sqrt.f64 45/4))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 9/2 (sqrt.f64 45/4)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 9/2 (sqrt.f64 45/4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 9/2 (sqrt.f64 45/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 9/2 (sqrt.f64 45/4)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 9/2 (sqrt.f64 45/4))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 9/2 (sqrt.f64 45/4))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 9/2 (sqrt.f64 45/4))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 9/2 (sqrt.f64 45/4))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/16 (*.f64 (sin.f64 x) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)))) (*.f64 (sqrt.f64 2) (-.f64 (cos.f64 x) (cos.f64 y)))) (*.f64 (*.f64 (sin.f64 y) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x))) (*.f64 (sqrt.f64 2) (-.f64 (cos.f64 x) (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 -1/16 (sin.f64 x))) (*.f64 (sqrt.f64 2) (-.f64 (cos.f64 x) (cos.f64 y)))) (*.f64 (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (sin.f64 y)) (*.f64 (sqrt.f64 2) (-.f64 (cos.f64 x) (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (cos.f64 x) (cos.f64 y))) (*.f64 -1/16 (*.f64 (sin.f64 x) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x))))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (cos.f64 x) (cos.f64 y))) (*.f64 (sin.f64 y) (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (cos.f64 x) (cos.f64 y))) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 -1/16 (sin.f64 x)))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (cos.f64 x) (cos.f64 y))) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (sin.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 2 (pow.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (pow.f64 (exp.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x))) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y))) (sqrt.f64 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (*.f64 2 (sqrt.f64 2)) (pow.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)))) 3) (*.f64 2 (sqrt.f64 2))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)))))) 1))))))"]],"rules":[["egg-rr",19],["egg-rr",13],["egg-rr",28]],"stop":[["node limit",1]],"time":34.839111328125,"type":"rewrite"},{"count":[[72,84]],"egraph":[[4,7128,518,0.035558624999999996],[3,6479,518,0.0229375],[2,1188,518,0.010267833],[1,306,597,0.002349208],[0,100,609,0.000494666]],"inputs":[["(*.f64 3/2 (-.f64 (sqrt.f64 5) 1))","(+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (*.f64 -3/4 (*.f64 (-.f64 (sqrt.f64 5) 1) (pow.f64 x 2))))","(+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 (*.f64 1/16 (*.f64 (-.f64 (sqrt.f64 5) 1) (pow.f64 x 4))) (*.f64 -3/4 (*.f64 (-.f64 (sqrt.f64 5) 1) (pow.f64 x 2)))))","(+.f64 (*.f64 -1/480 (*.f64 (-.f64 (sqrt.f64 5) 1) (pow.f64 x 6))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 (*.f64 1/16 (*.f64 (-.f64 (sqrt.f64 5) 1) (pow.f64 x 4))) (*.f64 -3/4 (*.f64 (-.f64 (sqrt.f64 5) 1) (pow.f64 x 2))))))","(*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2))))","(+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2)))) (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 (+.f64 (*.f64 1/256 (sin.f64 y)) (sin.f64 y)) x))))","(+.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 1/32 (pow.f64 (sin.f64 y) 2)) (*.f64 -1/16 (-.f64 1 (cos.f64 y)))) (pow.f64 x 2))) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2)))) (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 (+.f64 (*.f64 1/256 (sin.f64 y)) (sin.f64 y)) x)))))","(+.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 1/32 (pow.f64 (sin.f64 y) 2)) (*.f64 -1/16 (-.f64 1 (cos.f64 y)))) (pow.f64 x 2))) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2)))) (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 (+.f64 (*.f64 1/256 (sin.f64 y)) (sin.f64 y)) x))) (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 (-.f64 1 (cos.f64 y)) (+.f64 (*.f64 -1/1536 (sin.f64 y)) (*.f64 -1/6 (sin.f64 y)))) (*.f64 -1/2 (+.f64 (*.f64 1/256 (sin.f64 y)) (sin.f64 y)))) (pow.f64 x 3))))))","(*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1))))","(+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1)))) (*.f64 (sqrt.f64 2) (*.f64 y (*.f64 (-.f64 (cos.f64 x) 1) (+.f64 (*.f64 1/256 (sin.f64 x)) (sin.f64 x))))))","(+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1)))) (+.f64 (*.f64 (sqrt.f64 2) (*.f64 y (*.f64 (-.f64 (cos.f64 x) 1) (+.f64 (*.f64 1/256 (sin.f64 x)) (sin.f64 x))))) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1/32 (pow.f64 (sin.f64 x) 2)) (*.f64 -1/16 (-.f64 (cos.f64 x) 1)))))))","(+.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/2 (+.f64 (*.f64 1/256 (sin.f64 x)) (sin.f64 x))) (*.f64 (+.f64 (*.f64 -1/1536 (sin.f64 x)) (*.f64 -1/6 (sin.f64 x))) (-.f64 (cos.f64 x) 1))))) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1)))) (+.f64 (*.f64 (sqrt.f64 2) (*.f64 y (*.f64 (-.f64 (cos.f64 x) 1) (+.f64 (*.f64 1/256 (sin.f64 x)) (sin.f64 x))))) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1/32 (pow.f64 (sin.f64 x) 2)) (*.f64 -1/16 (-.f64 (cos.f64 x) 1))))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 3/2 (-.f64 (sqrt.f64 5) 1))","(*.f64 3/2 (+.f64 (sqrt.f64 5) -1))","(+.f64 (*.f64 (sqrt.f64 5) 3/2) -3/2)","(fma.f64 3/2 (sqrt.f64 5) -3/2)","(+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (*.f64 -3/4 (*.f64 (-.f64 (sqrt.f64 5) 1) (pow.f64 x 2))))","(fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (*.f64 -3/4 (*.f64 (+.f64 (sqrt.f64 5) -1) (*.f64 x x))))","(fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (*.f64 (+.f64 (sqrt.f64 5) -1) (*.f64 (*.f64 x x) -3/4)))","(*.f64 (+.f64 (sqrt.f64 5) -1) (+.f64 3/2 (*.f64 -3/4 (*.f64 x x))))","(+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 (*.f64 1/16 (*.f64 (-.f64 (sqrt.f64 5) 1) (pow.f64 x 4))) (*.f64 -3/4 (*.f64 (-.f64 (sqrt.f64 5) 1) (pow.f64 x 2)))))","(fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 1/16 (*.f64 (+.f64 (sqrt.f64 5) -1) (pow.f64 x 4)) (*.f64 -3/4 (*.f64 (+.f64 (sqrt.f64 5) -1) (*.f64 x x)))))","(fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 1/16 (*.f64 (+.f64 (sqrt.f64 5) -1) (pow.f64 x 4)) (*.f64 (+.f64 (sqrt.f64 5) -1) (*.f64 (*.f64 x x) -3/4))))","(fma.f64 (*.f64 x x) (fma.f64 (sqrt.f64 5) -3/4 3/4) (*.f64 (+.f64 (sqrt.f64 5) -1) (+.f64 3/2 (*.f64 1/16 (pow.f64 x 4)))))","(+.f64 (*.f64 -1/480 (*.f64 (-.f64 (sqrt.f64 5) 1) (pow.f64 x 6))) (+.f64 (*.f64 3/2 (-.f64 (sqrt.f64 5) 1)) (+.f64 (*.f64 1/16 (*.f64 (-.f64 (sqrt.f64 5) 1) (pow.f64 x 4))) (*.f64 -3/4 (*.f64 (-.f64 (sqrt.f64 5) 1) (pow.f64 x 2))))))","(fma.f64 -1/480 (*.f64 (+.f64 (sqrt.f64 5) -1) (pow.f64 x 6)) (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 1/16 (*.f64 (+.f64 (sqrt.f64 5) -1) (pow.f64 x 4)) (*.f64 -3/4 (*.f64 (+.f64 (sqrt.f64 5) -1) (*.f64 x x))))))","(fma.f64 -1/480 (*.f64 (+.f64 (sqrt.f64 5) -1) (pow.f64 x 6)) (fma.f64 3/2 (+.f64 (sqrt.f64 5) -1) (fma.f64 1/16 (*.f64 (+.f64 (sqrt.f64 5) -1) (pow.f64 x 4)) (*.f64 (+.f64 (sqrt.f64 5) -1) (*.f64 (*.f64 x x) -3/4)))))","(+.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) (+.f64 (*.f64 -3/4 (*.f64 x x)) (*.f64 1/16 (pow.f64 x 4)))) (*.f64 (+.f64 (sqrt.f64 5) -1) (+.f64 3/2 (*.f64 -1/480 (pow.f64 x 6)))))","(*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2))))","(*.f64 -1/16 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 1 (cos.f64 y))) (pow.f64 (sin.f64 y) 2)))","(*.f64 -1/16 (*.f64 (pow.f64 (sin.f64 y) 2) (*.f64 (sqrt.f64 2) (-.f64 1 (cos.f64 y)))))","(*.f64 -1/16 (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 (sqrt.f64 2) (pow.f64 (sin.f64 y) 2))))","(+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2)))) (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 (+.f64 (*.f64 1/256 (sin.f64 y)) (sin.f64 y)) x))))","(fma.f64 -1/16 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 1 (cos.f64 y))) (pow.f64 (sin.f64 y) 2)) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 1 (cos.f64 y))) (*.f64 x (*.f64 257/256 (sin.f64 y)))))","(fma.f64 -1/16 (*.f64 (pow.f64 (sin.f64 y) 2) (*.f64 (sqrt.f64 2) (-.f64 1 (cos.f64 y)))) (*.f64 (*.f64 (*.f64 x 257/256) (sin.f64 y)) (*.f64 (sqrt.f64 2) (-.f64 1 (cos.f64 y)))))","(*.f64 (*.f64 (sqrt.f64 2) (-.f64 1 (cos.f64 y))) (+.f64 (*.f64 -1/16 (pow.f64 (sin.f64 y) 2)) (*.f64 (sin.f64 y) (*.f64 x 257/256))))","(+.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 1/32 (pow.f64 (sin.f64 y) 2)) (*.f64 -1/16 (-.f64 1 (cos.f64 y)))) (pow.f64 x 2))) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2)))) (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 (+.f64 (*.f64 1/256 (sin.f64 y)) (sin.f64 y)) x)))))","(fma.f64 (sqrt.f64 2) (*.f64 (*.f64 x x) (fma.f64 1/32 (pow.f64 (sin.f64 y) 2) (*.f64 -1/16 (-.f64 1 (cos.f64 y))))) (fma.f64 -1/16 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 1 (cos.f64 y))) (pow.f64 (sin.f64 y) 2)) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 1 (cos.f64 y))) (*.f64 x (*.f64 257/256 (sin.f64 y))))))","(fma.f64 (sqrt.f64 2) (*.f64 (*.f64 x x) (fma.f64 -1/16 (-.f64 1 (cos.f64 y)) (*.f64 (pow.f64 (sin.f64 y) 2) 1/32))) (fma.f64 -1/16 (*.f64 (pow.f64 (sin.f64 y) 2) (*.f64 (sqrt.f64 2) (-.f64 1 (cos.f64 y)))) (*.f64 (*.f64 (*.f64 x 257/256) (sin.f64 y)) (*.f64 (sqrt.f64 2) (-.f64 1 (cos.f64 y))))))","(fma.f64 (*.f64 x x) (*.f64 (sqrt.f64 2) (fma.f64 -1/16 (-.f64 1 (cos.f64 y)) (*.f64 (pow.f64 (sin.f64 y) 2) 1/32))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 1 (cos.f64 y))) (+.f64 (*.f64 -1/16 (pow.f64 (sin.f64 y) 2)) (*.f64 (sin.f64 y) (*.f64 x 257/256)))))","(fma.f64 (*.f64 x x) (*.f64 (sqrt.f64 2) (fma.f64 (pow.f64 (sin.f64 y) 2) 1/32 (-.f64 -1/16 (*.f64 -1/16 (cos.f64 y))))) (*.f64 (*.f64 (sqrt.f64 2) (-.f64 1 (cos.f64 y))) (+.f64 (*.f64 -1/16 (pow.f64 (sin.f64 y) 2)) (*.f64 (sin.f64 y) (*.f64 x 257/256)))))","(+.f64 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 1/32 (pow.f64 (sin.f64 y) 2)) (*.f64 -1/16 (-.f64 1 (cos.f64 y)))) (pow.f64 x 2))) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (pow.f64 (sin.f64 y) 2)))) (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 (+.f64 (*.f64 1/256 (sin.f64 y)) (sin.f64 y)) x))) (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (*.f64 (-.f64 1 (cos.f64 y)) (+.f64 (*.f64 -1/1536 (sin.f64 y)) (*.f64 -1/6 (sin.f64 y)))) (*.f64 -1/2 (+.f64 (*.f64 1/256 (sin.f64 y)) (sin.f64 y)))) (pow.f64 x 3))))))","(fma.f64 (sqrt.f64 2) (*.f64 (*.f64 x x) (fma.f64 1/32 (pow.f64 (sin.f64 y) 2) (*.f64 -1/16 (-.f64 1 (cos.f64 y))))) (fma.f64 -1/16 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 1 (cos.f64 y))) (pow.f64 (sin.f64 y) 2)) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 (-.f64 1 (cos.f64 y)) (*.f64 x (*.f64 257/256 (sin.f64 y)))) (*.f64 (fma.f64 (-.f64 1 (cos.f64 y)) (*.f64 (sin.f64 y) -257/1536) (*.f64 (*.f64 257/256 (sin.f64 y)) -1/2)) (pow.f64 x 3))))))","(fma.f64 (sqrt.f64 2) (*.f64 (*.f64 x x) (fma.f64 -1/16 (-.f64 1 (cos.f64 y)) (*.f64 (pow.f64 (sin.f64 y) 2) 1/32))) (fma.f64 (sqrt.f64 2) (fma.f64 (-.f64 1 (cos.f64 y)) (*.f64 (*.f64 x 257/256) (sin.f64 y)) (*.f64 (fma.f64 (-.f64 1 (cos.f64 y)) (*.f64 (sin.f64 y) -257/1536) (*.f64 -257/512 (sin.f64 y))) (pow.f64 x 3))) (*.f64 -1/16 (*.f64 (pow.f64 (sin.f64 y) 2) (*.f64 (sqrt.f64 2) (-.f64 1 (cos.f64 y)))))))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 1 (cos.f64 y))) (+.f64 (*.f64 -1/16 (pow.f64 (sin.f64 y) 2)) (*.f64 (sin.f64 y) (*.f64 x 257/256)))) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 (fma.f64 (-.f64 1 (cos.f64 y)) (*.f64 (sin.f64 y) -257/1536) (*.f64 (sin.f64 y) -257/512)) (pow.f64 x 3)) (*.f64 (*.f64 x x) (fma.f64 -1/16 (-.f64 1 (cos.f64 y)) (*.f64 (pow.f64 (sin.f64 y) 2) 1/32))))))","(+.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 1 (cos.f64 y))) (+.f64 (*.f64 -1/16 (pow.f64 (sin.f64 y) 2)) (*.f64 (sin.f64 y) (*.f64 x 257/256)))) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 (fma.f64 (-.f64 1 (cos.f64 y)) (*.f64 (sin.f64 y) -257/1536) (*.f64 (sin.f64 y) -257/512)) (pow.f64 x 3)) (*.f64 (*.f64 x x) (fma.f64 (pow.f64 (sin.f64 y) 2) 1/32 (-.f64 -1/16 (*.f64 -1/16 (cos.f64 y))))))))","(*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1))))","(*.f64 -1/16 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sin.f64 x) 2)) (+.f64 (cos.f64 x) -1)))","(*.f64 (*.f64 (pow.f64 (sin.f64 x) 2) (+.f64 (cos.f64 x) -1)) (*.f64 -1/16 (sqrt.f64 2)))","(*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (fma.f64 -1/16 (cos.f64 x) 1/16)))","(+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1)))) (*.f64 (sqrt.f64 2) (*.f64 y (*.f64 (-.f64 (cos.f64 x) 1) (+.f64 (*.f64 1/256 (sin.f64 x)) (sin.f64 x))))))","(fma.f64 -1/16 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sin.f64 x) 2)) (+.f64 (cos.f64 x) -1)) (*.f64 (*.f64 (sqrt.f64 2) y) (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 257/256 (sin.f64 x)))))","(fma.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (+.f64 (cos.f64 x) -1))) (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 (*.f64 (sin.f64 x) 257/256) y))))","(*.f64 (+.f64 (cos.f64 x) -1) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (pow.f64 (sin.f64 x) 2))) (*.f64 (sqrt.f64 2) (*.f64 y (*.f64 (sin.f64 x) 257/256)))))","(+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1)))) (+.f64 (*.f64 (sqrt.f64 2) (*.f64 y (*.f64 (-.f64 (cos.f64 x) 1) (+.f64 (*.f64 1/256 (sin.f64 x)) (sin.f64 x))))) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1/32 (pow.f64 (sin.f64 x) 2)) (*.f64 -1/16 (-.f64 (cos.f64 x) 1)))))))","(fma.f64 -1/16 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sin.f64 x) 2)) (+.f64 (cos.f64 x) -1)) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 y (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 257/256 (sin.f64 x)))) (*.f64 (*.f64 y y) (fma.f64 -1/32 (pow.f64 (sin.f64 x) 2) (*.f64 -1/16 (+.f64 (cos.f64 x) -1)))))))","(fma.f64 (sqrt.f64 2) (fma.f64 y (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 (sin.f64 x) 257/256)) (*.f64 y (*.f64 y (fma.f64 -1/16 (+.f64 (cos.f64 x) -1) (*.f64 (pow.f64 (sin.f64 x) 2) -1/32))))) (*.f64 (*.f64 (pow.f64 (sin.f64 x) 2) (+.f64 (cos.f64 x) -1)) (*.f64 -1/16 (sqrt.f64 2))))","(*.f64 (sqrt.f64 2) (+.f64 (*.f64 (pow.f64 (sin.f64 x) 2) (fma.f64 -1/16 (cos.f64 x) 1/16)) (*.f64 y (+.f64 (*.f64 (sin.f64 x) (*.f64 (+.f64 (cos.f64 x) -1) 257/256)) (*.f64 y (fma.f64 (pow.f64 (sin.f64 x) 2) -1/32 (fma.f64 -1/16 (cos.f64 x) 1/16)))))))","(+.f64 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/2 (+.f64 (*.f64 1/256 (sin.f64 x)) (sin.f64 x))) (*.f64 (+.f64 (*.f64 -1/1536 (sin.f64 x)) (*.f64 -1/6 (sin.f64 x))) (-.f64 (cos.f64 x) 1))))) (+.f64 (*.f64 -1/16 (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (cos.f64 x) 1)))) (+.f64 (*.f64 (sqrt.f64 2) (*.f64 y (*.f64 (-.f64 (cos.f64 x) 1) (+.f64 (*.f64 1/256 (sin.f64 x)) (sin.f64 x))))) (*.f64 (sqrt.f64 2) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1/32 (pow.f64 (sin.f64 x) 2)) (*.f64 -1/16 (-.f64 (cos.f64 x) 1))))))))","(fma.f64 (sqrt.f64 2) (*.f64 (pow.f64 y 3) (fma.f64 1/2 (*.f64 257/256 (sin.f64 x)) (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 (sin.f64 x) -257/1536)))) (fma.f64 -1/16 (*.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sin.f64 x) 2)) (+.f64 (cos.f64 x) -1)) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 y (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 257/256 (sin.f64 x)))) (*.f64 (*.f64 y y) (fma.f64 -1/32 (pow.f64 (sin.f64 x) 2) (*.f64 -1/16 (+.f64 (cos.f64 x) -1))))))))","(fma.f64 (sqrt.f64 2) (*.f64 (pow.f64 y 3) (fma.f64 (+.f64 (cos.f64 x) -1) (*.f64 (sin.f64 x) -257/1536) (*.f64 257/512 (sin.f64 x)))) (fma.f64 (sqrt.f64 2) (fma.f64 y (*.f64 (+.f64 (cos.f64 x) -1) (*.f64 (sin.f64 x) 257/256)) (*.f64 y (*.f64 y (fma.f64 -1/16 (+.f64 (cos.f64 x) -1) (*.f64 (pow.f64 (sin.f64 x) 2) -1/32))))) (*.f64 (*.f64 (pow.f64 (sin.f64 x) 2) (+.f64 (cos.f64 x) -1)) (*.f64 -1/16 (sqrt.f64 2)))))","(fma.f64 (sqrt.f64 2) (*.f64 (pow.f64 y 3) (fma.f64 (sin.f64 x) (+.f64 (*.f64 (cos.f64 x) -257/1536) 257/1536) (*.f64 (sin.f64 x) 257/512))) (*.f64 (sqrt.f64 2) (+.f64 (*.f64 (pow.f64 (sin.f64 x) 2) (fma.f64 -1/16 (cos.f64 x) 1/16)) (*.f64 y (+.f64 (*.f64 (sin.f64 x) (*.f64 (+.f64 (cos.f64 x) -1) 257/256)) (*.f64 y (fma.f64 (pow.f64 (sin.f64 x) 2) -1/32 (fma.f64 -1/16 (cos.f64 x) 1/16))))))))"]],"stop":[["node limit",1]],"time":53.44384765625,"type":"simplify"},{"compiler":[[7522,5047]],"time":70.0390625,"type":"eval"},{"alts":[["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 x) (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2)) 2) (cbrt.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2))) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","fresh",0.4989568247331317],["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","fresh",0.39755639652663033],["(log.f64 (exp.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","fresh",0.569048945070012],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (cbrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","fresh",0.493502655996244],["(+.f64 (fma.f64 (/.f64 (sqrt.f64 2) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2))) (*.f64 (*.f64 (sin.f64 x) 257/256) (fma.f64 (cos.f64 x) y (neg.f64 y))) (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (fma.f64 (cos.f64 x) -1/16 1/16)) (pow.f64 (sin.f64 x) 2)) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)))) (fma.f64 (*.f64 y y) (fma.f64 1/2 (*.f64 (/.f64 (fma.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sin.f64 x) 2)) (fma.f64 (cos.f64 x) -1/16 1/16) 2) (pow.f64 (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)) 2)) (fma.f64 (sqrt.f64 5) -3/2 9/2)) (*.f64 (/.f64 (sqrt.f64 2) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2))) (fma.f64 (pow.f64 (sin.f64 x) 2) -1/32 (fma.f64 (cos.f64 x) -1/16 1/16)))) (/.f64 2 (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)))))","fresh",33.048046494780785],["(*.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (/.f64 1 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))))","fresh",0.4926339356003985],["(pow.f64 (sqrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))) 2)","fresh",0.5339878051370305],["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 x) (pow.f64 (cbrt.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2)) 3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","fresh",0.4055289425463815],["(/.f64 (+.f64 (cbrt.f64 (*.f64 (*.f64 2 (sqrt.f64 2)) (pow.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)))) 3))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","fresh",0.3666000976844202],["(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y)))) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","next",0.3633576172213042],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) 2) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (cbrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","fresh",0.8983028930530088],["(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","fresh",0.6784366646063922],["(/.f64 (+.f64 (-.f64 (exp.f64 (log1p.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))))))) 1) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","fresh",0.8744125976844204]],"compiler":[[58,46],[43,31],[45,33],[89,60],[143,115],[45,33],[46,34],[50,38],[53,41],[52,40],[92,63],[67,51],[52,40],[58,46],[43,31],[45,33],[89,60],[143,115],[45,33],[46,34],[50,38],[53,41],[52,40],[92,63],[67,51],[52,40]],"count":[[149,13]],"kept":[{"done":[0,0],"fresh":[13,10],"new":[135,3],"picked":[1,0]}],"min-error":[0.010097509768442016],"time":53.125,"type":"prune"},{"compiler":[[284,165]],"locations":[["(*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x)))",0.66015625,false],["(-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))",1.0,false],["(-.f64 (cos.f64 x) (cos.f64 y))",2.1523568443046606,false],["(log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y))))",2.2482978019225213,true]],"time":57.330078125,"type":"localize"},{"count":[[1,24]],"series":[["(log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y))))","y","-inf",0.179931640625],["(log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y))))","y","inf",0.163818359375],["(log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y))))","y","0",0.18310546875],["(log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y))))","x","-inf",0.166015625],["(log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y))))","x","inf",0.173095703125],["(log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y))))","x","0",0.919921875]],"time":1.866943359375,"type":"series"},{"count":[[1,44]],"egraph":[[2,2223,8,0.020481625],[1,162,8,0.002946917],[0,8,8,0.000205042]],"inputs":[["(log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 x) (neg.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 x) (*.f64 (neg.f64 (cos.f64 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (neg.f64 (cos.f64 y)) 1 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 y))) (pow.f64 (cbrt.f64 (cos.f64 y)) 2) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 y))) (sqrt.f64 (cos.f64 y)) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (cos.f64 y)) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (cos.f64 x) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (cos.f64 x) (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (-.f64 (cos.f64 x) (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (cos.f64 x) 3) (+.f64 (pow.f64 (cos.f64 x) 2) (*.f64 (cos.f64 y) (+.f64 (cos.f64 x) (cos.f64 y))))) (/.f64 (pow.f64 (cos.f64 y) 3) (+.f64 (pow.f64 (cos.f64 x) 2) (*.f64 (cos.f64 y) (+.f64 (cos.f64 x) (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (cos.f64 x) 2) (+.f64 (cos.f64 x) (cos.f64 y))) (/.f64 (pow.f64 (cos.f64 y) 2) (+.f64 (cos.f64 x) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (cos.f64 x) (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (cos.f64 x) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (cos.f64 x) (cos.f64 y))) (pow.f64 (cbrt.f64 (-.f64 (cos.f64 x) (cos.f64 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (cos.f64 x) (cos.f64 y))) 2) (cbrt.f64 (-.f64 (cos.f64 x) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (cos.f64 x) (cos.f64 y))) (sqrt.f64 (-.f64 (cos.f64 x) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -2 (*.f64 (sin.f64 (*.f64 (-.f64 x y) 1/2)) (sin.f64 (*.f64 (+.f64 x y) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 (-.f64 x y) 1/2)) (sin.f64 (*.f64 (+.f64 x y) 1/2))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 (cos.f64 y) 3)) (/.f64 1 (+.f64 (pow.f64 (cos.f64 x) 2) (*.f64 (cos.f64 y) (+.f64 (cos.f64 x) (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 (cos.f64 y) 2)) (/.f64 1 (+.f64 (cos.f64 x) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (cos.f64 x)) (sqrt.f64 (cos.f64 y))) (-.f64 (sqrt.f64 (cos.f64 x)) (sqrt.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 (sin.f64 (*.f64 (-.f64 x y) 1/2))) (sin.f64 (*.f64 (+.f64 x y) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (*.f64 (cos.f64 y) (+.f64 (cos.f64 x) (cos.f64 y)))) (-.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 (cos.f64 y) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (cos.f64 x) (cos.f64 y)) (-.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 (cos.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 (cos.f64 y) 3)) (+.f64 (pow.f64 (cos.f64 x) 2) (*.f64 (cos.f64 y) (+.f64 (cos.f64 x) (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 (cos.f64 y) 2)) (+.f64 (cos.f64 x) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 (cos.f64 y) 3))) (neg.f64 (+.f64 (pow.f64 (cos.f64 x) 2) (*.f64 (cos.f64 y) (+.f64 (cos.f64 x) (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 (cos.f64 y) 2))) (neg.f64 (+.f64 (cos.f64 x) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 (neg.f64 (cos.f64 y)) 3)) (+.f64 (pow.f64 (cos.f64 x) 2) (-.f64 (*.f64 (neg.f64 (cos.f64 y)) (neg.f64 (cos.f64 y))) (*.f64 (cos.f64 x) (neg.f64 (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (cos.f64 x) 2) (*.f64 (neg.f64 (cos.f64 y)) (neg.f64 (cos.f64 y)))) (-.f64 (cos.f64 x) (neg.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (cos.f64 x) (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (cos.f64 x) (cos.f64 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (cos.f64 x) (cos.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (cos.f64 x) (cos.f64 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (cos.f64 x) (cos.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (cos.f64 x) (cos.f64 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (cos.f64 x) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (cos.f64 x) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (cos.f64 x) (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 x) (neg.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 x)) 2) (cbrt.f64 (cos.f64 x)) (neg.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 x)) (sqrt.f64 (cos.f64 x)) (neg.f64 (cos.f64 y)))))))"]],"rules":[["egg-rr",44]],"stop":[["node limit",1]],"time":39.580078125,"type":"rewrite"},{"count":[[68,59]],"egraph":[[5,7831,260,0.026816792],[4,3661,260,0.017129917],[3,1008,260,0.007304876],[2,293,264,0.002205751],[1,121,268,0.000748417],[0,48,272,0.000228208]],"inputs":[["(-.f64 1 (cos.f64 y))","(-.f64 (+.f64 1 (*.f64 -1/2 (pow.f64 x 2))) (cos.f64 y))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/24 (pow.f64 x 4)))) (cos.f64 y))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/24 (pow.f64 x 4)) (*.f64 -1/720 (pow.f64 x 6))))) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) 1)","(-.f64 (+.f64 (cos.f64 x) (*.f64 1/2 (pow.f64 y 2))) 1)","(-.f64 (+.f64 (cos.f64 x) (+.f64 (*.f64 1/2 (pow.f64 y 2)) (*.f64 -1/24 (pow.f64 y 4)))) 1)","(-.f64 (+.f64 (cos.f64 x) (+.f64 (*.f64 1/2 (pow.f64 y 2)) (+.f64 (*.f64 1/720 (pow.f64 y 6)) (*.f64 -1/24 (pow.f64 y 4))))) 1)","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))"]],"method":["egg-herbie"],"outputs":[["(-.f64 1 (cos.f64 y))","(-.f64 (+.f64 1 (*.f64 -1/2 (pow.f64 x 2))) (cos.f64 y))","(-.f64 (+.f64 1 (*.f64 -1/2 (*.f64 x x))) (cos.f64 y))","(-.f64 (fma.f64 -1/2 (*.f64 x x) 1) (cos.f64 y))","(fma.f64 x (*.f64 -1/2 x) (-.f64 1 (cos.f64 y)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 1/24 (pow.f64 x 4)))) (cos.f64 y))","(+.f64 1 (-.f64 (fma.f64 -1/2 (*.f64 x x) (*.f64 1/24 (pow.f64 x 4))) (cos.f64 y)))","(+.f64 (fma.f64 1/24 (pow.f64 x 4) (*.f64 -1/2 (*.f64 x x))) (-.f64 1 (cos.f64 y)))","(-.f64 (fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) 1)) (cos.f64 y))","(fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x 1/24) -1/2) (-.f64 1 (cos.f64 y)))","(fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) (-.f64 1 (cos.f64 y))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 1/24 (pow.f64 x 4)) (*.f64 -1/720 (pow.f64 x 6))))) (cos.f64 y))","(+.f64 1 (-.f64 (fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) (*.f64 -1/720 (pow.f64 x 6)))) (cos.f64 y)))","(fma.f64 -1/720 (pow.f64 x 6) (fma.f64 (*.f64 x x) (fma.f64 x (*.f64 x 1/24) -1/2) (-.f64 1 (cos.f64 y))))","(fma.f64 -1/720 (pow.f64 x 6) (fma.f64 -1/2 (*.f64 x x) (fma.f64 1/24 (pow.f64 x 4) (-.f64 1 (cos.f64 y)))))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) 1)","(+.f64 (cos.f64 x) -1)","(-.f64 (+.f64 (cos.f64 x) (*.f64 1/2 (pow.f64 y 2))) 1)","(+.f64 (cos.f64 x) (-.f64 (*.f64 1/2 (*.f64 y y)) 1))","(+.f64 (cos.f64 x) (fma.f64 1/2 (*.f64 y y) -1))","(+.f64 (cos.f64 x) (fma.f64 y (*.f64 y 1/2) -1))","(-.f64 (+.f64 (cos.f64 x) (+.f64 (*.f64 1/2 (pow.f64 y 2)) (*.f64 -1/24 (pow.f64 y 4)))) 1)","(+.f64 (cos.f64 x) (-.f64 (fma.f64 1/2 (*.f64 y y) (*.f64 -1/24 (pow.f64 y 4))) 1))","(+.f64 (fma.f64 -1/24 (pow.f64 y 4) (*.f64 y (*.f64 y 1/2))) (+.f64 (cos.f64 x) -1))","(+.f64 (fma.f64 y (*.f64 y 1/2) (cos.f64 x)) (fma.f64 -1/24 (pow.f64 y 4) -1))","(fma.f64 (*.f64 y y) (fma.f64 y (*.f64 y -1/24) 1/2) (+.f64 (cos.f64 x) -1))","(+.f64 (cos.f64 x) (fma.f64 y (*.f64 y 1/2) (fma.f64 -1/24 (pow.f64 y 4) -1)))","(-.f64 (+.f64 (cos.f64 x) (+.f64 (*.f64 1/2 (pow.f64 y 2)) (+.f64 (*.f64 1/720 (pow.f64 y 6)) (*.f64 -1/24 (pow.f64 y 4))))) 1)","(+.f64 (cos.f64 x) (-.f64 (fma.f64 1/2 (*.f64 y y) (fma.f64 1/720 (pow.f64 y 6) (*.f64 -1/24 (pow.f64 y 4)))) 1))","(+.f64 (cos.f64 x) (+.f64 (fma.f64 1/720 (pow.f64 y 6) (*.f64 -1/24 (pow.f64 y 4))) (fma.f64 1/2 (*.f64 y y) -1)))","(+.f64 (+.f64 (fma.f64 y (*.f64 y 1/2) (cos.f64 x)) (fma.f64 -1/24 (pow.f64 y 4) -1)) (*.f64 1/720 (pow.f64 y 6)))","(+.f64 (cos.f64 x) (fma.f64 -1/24 (pow.f64 y 4) (fma.f64 1/720 (pow.f64 y 6) (fma.f64 y (*.f64 y 1/2) -1))))","(+.f64 (fma.f64 y (*.f64 y 1/2) (fma.f64 -1/24 (pow.f64 y 4) -1)) (fma.f64 1/720 (pow.f64 y 6) (cos.f64 x)))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))","(-.f64 (cos.f64 x) (cos.f64 y))"]],"stop":[["node limit",1]],"time":42.224853515625,"type":"simplify"},{"compiler":[[9051,5922]],"time":83.09521484375,"type":"eval"},{"alts":[["(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y)))) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (/.f64 9 (+.f64 9/2 (sqrt.f64 45/4)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","fresh",0.376333898841958],["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","fresh",0.39755639652663033],["(log.f64 (exp.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","fresh",0.569048945070012],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (cbrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","fresh",0.493502655996244],["(+.f64 (fma.f64 (/.f64 (sqrt.f64 2) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2))) (*.f64 (*.f64 (sin.f64 x) 257/256) (fma.f64 (cos.f64 x) y (neg.f64 y))) (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (fma.f64 (cos.f64 x) -1/16 1/16)) (pow.f64 (sin.f64 x) 2)) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)))) (fma.f64 (*.f64 y y) (fma.f64 1/2 (*.f64 (/.f64 (fma.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sin.f64 x) 2)) (fma.f64 (cos.f64 x) -1/16 1/16) 2) (pow.f64 (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)) 2)) (fma.f64 (sqrt.f64 5) -3/2 9/2)) (*.f64 (/.f64 (sqrt.f64 2) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2))) (fma.f64 (pow.f64 (sin.f64 x) 2) -1/32 (fma.f64 (cos.f64 x) -1/16 1/16)))) (/.f64 2 (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)))))","fresh",33.048046494780785],["(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (+.f64 1 (-.f64 (cos.f64 x) (cos.f64 y))) 1) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","fresh",0.3610726074528622],["(/.f64 (+.f64 (-.f64 (exp.f64 (log1p.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))))))) 1) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","fresh",0.8744125976844204],["(*.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (/.f64 1 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))))","fresh",0.4926339356003985],["(pow.f64 (sqrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))) 2)","fresh",0.5339878051370305],["(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y)))) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (pow.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x)) 1))))","next",0.3555451172213042],["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 x) (pow.f64 (cbrt.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2)) 3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","fresh",0.4055289425463815],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) 2) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (cbrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","fresh",0.8983028930530088],["(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","fresh",0.6784366646063922]],"compiler":[[52,40],[43,31],[45,33],[89,60],[143,115],[54,42],[52,40],[45,33],[46,34],[52,40],[50,38],[92,63],[67,51],[52,40],[43,31],[45,33],[89,60],[143,115],[54,42],[52,40],[45,33],[46,34],[52,40],[50,38],[92,63],[67,51]],"count":[[172,13]],"kept":[{"done":[0,0],"fresh":[12,10],"new":[159,3],"picked":[1,0]}],"min-error":[0.010097509768442016],"time":62.048828125,"type":"prune"},{"compiler":[[288,169]],"locations":[["(-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))",1.0,false],["(+.f64 (sqrt.f64 45/4) -3/2)",1.0,true],["(-.f64 (cos.f64 x) (cos.f64 y))",2.1523568443046606,false],["(log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y))))",2.2482978019225213,false]],"time":60.869140625,"type":"localize"},{"count":[[1,0]],"time":0.010009765625,"type":"series"},{"count":[[1,29]],"egraph":[[2,1296,6,0.014732957999999999],[1,114,6,0.002255874],[0,5,6,0.000258541]],"inputs":[["(+.f64 (sqrt.f64 45/4) -3/2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (+.f64 (sqrt.f64 45/4) -3/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 45/4) -3/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (sqrt.f64 45/4) -3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (sqrt.f64 45/4) -3/2)) (pow.f64 (cbrt.f64 (+.f64 (sqrt.f64 45/4) -3/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (sqrt.f64 45/4) -3/2)) 2) (cbrt.f64 (+.f64 (sqrt.f64 45/4) -3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (sqrt.f64 45/4) -3/2)) (sqrt.f64 (+.f64 (sqrt.f64 45/4) -3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -27/8 (pow.f64 45/4 3/2)) (/.f64 1 (-.f64 27/2 (*.f64 (sqrt.f64 45/4) -3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 9 (/.f64 1 (+.f64 (sqrt.f64 45/4) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 27/2 (*.f64 (sqrt.f64 45/4) -3/2)) (+.f64 -27/8 (pow.f64 45/4 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (sqrt.f64 45/4) 3/2) 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -27/8 (pow.f64 45/4 3/2)) (-.f64 27/2 (*.f64 (sqrt.f64 45/4) -3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -27/8 (pow.f64 45/4 3/2)) (+.f64 9/4 (-.f64 45/4 (*.f64 (sqrt.f64 45/4) -3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 9 (+.f64 (sqrt.f64 45/4) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 -27/8 (pow.f64 45/4 3/2))) (neg.f64 (-.f64 27/2 (*.f64 (sqrt.f64 45/4) -3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -9 (neg.f64 (+.f64 (sqrt.f64 45/4) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -9 (-.f64 -3/2 (sqrt.f64 45/4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (sqrt.f64 45/4) -3/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (sqrt.f64 45/4) -3/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (sqrt.f64 45/4) -3/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (sqrt.f64 45/4) -3/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (sqrt.f64 45/4) -3/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (sqrt.f64 45/4) -3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (sqrt.f64 45/4) -3/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (sqrt.f64 45/4) -3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (sqrt.f64 45/4) -3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (sqrt.f64 45/4) -3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 45/4) -3/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 45/4) (cbrt.f64 (sqrt.f64 45/4)) -3/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 45/4 1/4) (pow.f64 45/4 1/4) -3/2)))))"]],"rules":[["egg-rr",29]],"stop":[["node limit",1]],"time":31.91796875,"type":"rewrite"},{"count":[[29,29]],"egraph":[[0,0,0,2.05e-5]],"inputs":[[]],"method":["egg-herbie"],"outputs":[[]],"stop":[["saturated",1]],"time":10.998046875,"type":"simplify"},{"compiler":[[9484,6205]],"time":90.781005859375,"type":"eval"},{"alts":[["(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (+.f64 1 (-.f64 (cos.f64 x) (cos.f64 y))) 1) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (pow.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x)) 1))))","fresh",0.3555451172213042],["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 x) (pow.f64 (cbrt.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2)) 3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","fresh",0.4055289425463815],["(log.f64 (exp.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","fresh",0.569048945070012],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (cbrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","fresh",0.493502655996244],["(+.f64 (fma.f64 (/.f64 (sqrt.f64 2) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2))) (*.f64 (*.f64 (sin.f64 x) 257/256) (fma.f64 (cos.f64 x) y (neg.f64 y))) (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (fma.f64 (cos.f64 x) -1/16 1/16)) (pow.f64 (sin.f64 x) 2)) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)))) (fma.f64 (*.f64 y y) (fma.f64 1/2 (*.f64 (/.f64 (fma.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sin.f64 x) 2)) (fma.f64 (cos.f64 x) -1/16 1/16) 2) (pow.f64 (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)) 2)) (fma.f64 (sqrt.f64 5) -3/2 9/2)) (*.f64 (/.f64 (sqrt.f64 2) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2))) (fma.f64 (pow.f64 (sin.f64 x) 2) -1/32 (fma.f64 (cos.f64 x) -1/16 1/16)))) (/.f64 2 (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)))))","fresh",33.048046494780785],["(*.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (/.f64 1 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))))","fresh",0.4926339356003985],["(pow.f64 (sqrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))) 2)","fresh",0.5339878051370305],["(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y)))) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (pow.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x)) 1))))","done",0.3555451172213042],["(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y)))) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (pow.f64 (*.f64 (/.f64 9 (+.f64 (sqrt.f64 45/4) 3/2)) (cos.f64 x)) 1))))","fresh",0.36813258761714973],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) 2) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (cbrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","fresh",0.8983028930530088],["(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","fresh",0.6784366646063922],["(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","fresh",0.39755639652663033],["(/.f64 (+.f64 (-.f64 (exp.f64 (log1p.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))))))) 1) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","fresh",0.8744125976844204]],"compiler":[[54,42],[50,38],[45,33],[89,60],[143,115],[45,33],[46,34],[52,40],[54,42],[92,63],[67,51],[43,31],[52,40]],"count":[[180,13]],"kept":[{"done":[0,0],"fresh":[12,10],"new":[167,2],"picked":[1,1]}],"min-error":[0.010097509768442016],"time":56.546875,"type":"prune"},{"accuracy":[0.3555451172213042],"baseline":[0.3555451172213042],"branch":[["x",0.3555451172213042,1],["y",0.3555451172213042,1],["(/.f64 (+.f64 2 (*.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16))) (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16))) (-.f64 (cos.f64 x) (cos.f64 y)))) (*.f64 3 (+.f64 (+.f64 1 (*.f64 (/.f64 (-.f64 (sqrt.f64 5) 1) 2) (cos.f64 x))) (*.f64 (/.f64 (-.f64 3 (sqrt.f64 5)) 2) (cos.f64 y)))))",0.35554511722130433,1]],"compiler":[[3,2],[3,2],[52,40],[1394,915]],"count":[[24,1]],"inputs":[["(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (+.f64 1 (-.f64 (cos.f64 x) (cos.f64 y))) 1) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (pow.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x)) 1))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y)))) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (pow.f64 (*.f64 (/.f64 9 (+.f64 (sqrt.f64 45/4) 3/2)) (cos.f64 x)) 1))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y)))) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (/.f64 9 (+.f64 9/2 (sqrt.f64 45/4)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (+.f64 1 (-.f64 (cos.f64 x) (cos.f64 y))) 1) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y)))) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (pow.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x)) 1))))","(/.f64 (+.f64 (cbrt.f64 (*.f64 (*.f64 2 (sqrt.f64 2)) (pow.f64 (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)))) 3))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y)))) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (+.f64 (-.f64 (exp.f64 (log1p.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (fma.f64 -1/16 (sin.f64 x) (sin.f64 y))))))) 1) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(*.f64 (/.f64 (sqrt.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (/.f64 (sqrt.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (log.f64 (exp.f64 (-.f64 (cos.f64 x) (cos.f64 y)))))) 2) (fma.f64 (cos.f64 x) (/.f64 (+.f64 (sqrt.f64 5) -1) 2/3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 x) (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2)) 2) (cbrt.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2))) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (pow.f64 (cbrt.f64 (-.f64 (cos.f64 x) (cos.f64 y))) 3))) 2) (fma.f64 (cos.f64 x) (/.f64 (+.f64 (sqrt.f64 5) -1) 2/3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 y) (sin.f64 x)) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 y) (fma.f64 (sqrt.f64 5) -3/2 9/2) (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 3)))","(log.f64 (exp.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","(*.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (cbrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","(+.f64 (fma.f64 (/.f64 (sqrt.f64 2) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2))) (*.f64 (*.f64 (sin.f64 x) 257/256) (fma.f64 (cos.f64 x) y (neg.f64 y))) (/.f64 (*.f64 (*.f64 (sqrt.f64 2) (fma.f64 (cos.f64 x) -1/16 1/16)) (pow.f64 (sin.f64 x) 2)) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)))) (fma.f64 (*.f64 y y) (fma.f64 1/2 (*.f64 (/.f64 (fma.f64 (*.f64 (sqrt.f64 2) (pow.f64 (sin.f64 x) 2)) (fma.f64 (cos.f64 x) -1/16 1/16) 2) (pow.f64 (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)) 2)) (fma.f64 (sqrt.f64 5) -3/2 9/2)) (*.f64 (/.f64 (sqrt.f64 2) (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2))) (fma.f64 (pow.f64 (sin.f64 x) 2) -1/32 (fma.f64 (cos.f64 x) -1/16 1/16)))) (/.f64 2 (fma.f64 (sqrt.f64 5) -3/2 (fma.f64 (cos.f64 x) (fma.f64 3/2 (sqrt.f64 5) -3/2) 15/2)))))","(*.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (/.f64 1 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))))","(pow.f64 (sqrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))) 2)","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 x) (pow.f64 (cbrt.f64 (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2)) 3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","(*.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2)) 2) (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (cbrt.f64 (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","(*.f64 (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3))) 2)) (/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (fma.f64 -1/16 (sin.f64 x) (sin.f64 y)) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (fma.f64 (sin.f64 y) -1/16 (sin.f64 x)))) 2) (cbrt.f64 (fma.f64 (cos.f64 x) (*.f64 (+.f64 (sqrt.f64 5) -1) 3/2) (fma.f64 (cos.f64 y) (-.f64 9/2 (sqrt.f64 45/4)) 3)))))","(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (cos.f64 x) (cos.f64 y)) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (*.f64 3/2 (*.f64 (-.f64 (sqrt.f64 5) 1) (cos.f64 x))))))","(/.f64 (fma.f64 (sqrt.f64 2) (*.f64 (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))) (*.f64 (+.f64 (sin.f64 x) (*.f64 -1/16 (sin.f64 y))) (-.f64 (cos.f64 x) (cos.f64 y)))) 2) (fma.f64 (cos.f64 x) (/.f64 (+.f64 (sqrt.f64 5) -1) 2/3) (fma.f64 (cos.f64 y) (-.f64 9/2 (/.f64 (sqrt.f64 5) 2/3)) 3)))","(/.f64 (+.f64 2 (*.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16))) (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16))) (-.f64 (cos.f64 x) (cos.f64 y)))) (*.f64 3 (+.f64 (+.f64 1 (*.f64 (/.f64 (-.f64 (sqrt.f64 5) 1) 2) (cos.f64 x))) (*.f64 (/.f64 (-.f64 3 (sqrt.f64 5)) 2) (cos.f64 y)))))"]],"link":["."],"name":["Diagrams.TwoD.Path.Metafont.Internal:hobbyF from diagrams-contrib-1.3.0.5"],"oracle":[33.50092632093118],"outputs":[["(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (+.f64 1 (-.f64 (cos.f64 x) (cos.f64 y))) 1) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (pow.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x)) 1))))"]],"time":46.005126953125,"times":[["x",7.865966796875],["y",7.87890625],["(/.f64 (+.f64 2 (*.f64 (*.f64 (*.f64 (sqrt.f64 2) (-.f64 (sin.f64 x) (/.f64 (sin.f64 y) 16))) (-.f64 (sin.f64 y) (/.f64 (sin.f64 x) 16))) (-.f64 (cos.f64 x) (cos.f64 y)))) (*.f64 3 (+.f64 (+.f64 1 (*.f64 (/.f64 (-.f64 (sqrt.f64 5) 1) 2) (cos.f64 x))) (*.f64 (/.f64 (-.f64 3 (sqrt.f64 5)) 2) (cos.f64 y)))))",6.447021484375]],"type":"regimes"},{"compiler":[[52,40]],"egraph":[[5,90,80,0.000532749],[4,89,80,0.00043966599999999996],[3,85,80,0.00034674999999999994],[2,79,80,0.000255166],[1,67,80,0.000166666],[0,39,80,8.6333e-5]],"inputs":[["(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (+.f64 1 (-.f64 (cos.f64 x) (cos.f64 y))) 1) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (pow.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x)) 1))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (*.f64 (sqrt.f64 2) (*.f64 (-.f64 (+.f64 1 (-.f64 (cos.f64 x) (cos.f64 y))) 1) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (*.f64 -1/16 (sin.f64 x)) (sin.f64 y))))) 2) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (-.f64 9/2 (*.f64 3/2 (sqrt.f64 5)))) (pow.f64 (*.f64 (+.f64 (sqrt.f64 45/4) -3/2) (cos.f64 x)) 1))))","(/.f64 (+.f64 2 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (+.f64 1 (-.f64 (cos.f64 x) (cos.f64 y))) -1) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))))))) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 -3/2 (sqrt.f64 5)))) (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 45/4) -3/2)))))","(/.f64 (+.f64 2 (*.f64 (sqrt.f64 2) (*.f64 (+.f64 (+.f64 1 (-.f64 (cos.f64 x) (cos.f64 y))) -1) (*.f64 (+.f64 (*.f64 -1/16 (sin.f64 y)) (sin.f64 x)) (+.f64 (sin.f64 y) (*.f64 -1/16 (sin.f64 x))))))) (+.f64 3 (+.f64 (*.f64 (cos.f64 y) (+.f64 9/2 (*.f64 (sqrt.f64 5) -3/2))) (*.f64 (cos.f64 x) (+.f64 (sqrt.f64 45/4) -3/2)))))"]],"stop":[["fuel",1],["saturated",1]],"time":10.083984375,"type":"simplify"},{"time":0.016845703125,"type":"soundness"},{"compiler":[[52,40]],"remove-preprocessing":[[]],"time":19.176025390625,"type":"end"}]