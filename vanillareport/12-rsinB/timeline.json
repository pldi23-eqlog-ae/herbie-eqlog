[{"compiler":[[13,9]],"method":["search"],"sampling":[[12,0.2047778642497633,0.7937580071395587,0.0014641286106780171],[11,0.1911260066331124,0.8074098647562096,0.0014641286106780171],[10,0.16382229139981064,0.8347135799895113,0.0014641286106780171],[9,0.1404191069141234,0.8581167644751986,0.0014641286106780171],[8,0.09361273794274894,0.904923133446573,0.0014641286106780171],[7,0.062408491961832624,0.9361273794274894,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":192.31591796875,"type":"analyze"},{"outcomes":[["body",512,"invalid",0.155029296875,1],["body",512,"valid",219.66259765625,1399],["body",1024,"valid",987.210205078125,3654],["body",2048,"valid",137.41015625,222],["body",256,"valid",230.490234375,2981]],"time":1583.375,"type":"sample"},{"compiler":[[12,8]],"egraph":[[0,3,3,1.625e-6],[4,73,56,0.0006294580000000001],[3,69,56,0.000490999],[2,55,56,0.00034674900000000004],[1,39,56,0.00021666600000000002],[0,23,56,0.000103]],"inputs":[["0","1","2"],["(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))))","(*.f64 a (/.f64 (sin.f64 b) (cos.f64 (+.f64 r b))))","(*.f64 b (/.f64 (sin.f64 r) (cos.f64 (+.f64 a r))))","(*.f64 r (/.f64 (sin.f64 a) (cos.f64 (+.f64 b a))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))))","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(*.f64 a (/.f64 (sin.f64 b) (cos.f64 (+.f64 r b))))","(*.f64 (sin.f64 b) (/.f64 a (cos.f64 (+.f64 r b))))","(*.f64 b (/.f64 (sin.f64 r) (cos.f64 (+.f64 a r))))","(*.f64 b (/.f64 (sin.f64 r) (cos.f64 (+.f64 r a))))","(/.f64 (sin.f64 r) (/.f64 (cos.f64 (+.f64 r a)) b))","(*.f64 r (/.f64 (sin.f64 a) (cos.f64 (+.f64 b a))))","(/.f64 (*.f64 r (sin.f64 a)) (cos.f64 (+.f64 b a)))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":23.714111328125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[4,22,14,0.00025025],[3,21,14,0.000197167],[2,17,14,0.000143917],[1,13,14,9.433299999999999e-5],[0,9,14,4.6667e-5]],"inputs":[["(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))))","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 b a))))","(*.f64 (sin.f64 b) (/.f64 r (cos.f64 (+.f64 b a))))"]],"stop":[["saturated",1]],"time":10.428955078125,"type":"simplify"},{"compiler":[[21,12]],"time":0.35107421875,"type":"eval"},{"alts":[["(*.f64 (sin.f64 b) (/.f64 r (cos.f64 (+.f64 b a))))","next",14.164422520305463],["(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))))","fresh",14.165379991000137]],"compiler":[[12,8],[12,8],[12,8],[12,8]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[14.077157481231694],"time":1.2998046875,"type":"prune"},{"compiler":[[30,8]],"locations":[["(sin.f64 b)",0.01953125,true],["(/.f64 r (cos.f64 (+.f64 b a)))",0.1640625,true],["(*.f64 (sin.f64 b) (/.f64 r (cos.f64 (+.f64 b a))))",0.1953125,true],["(cos.f64 (+.f64 b a))",4.620822046780408,true]],"time":7.466064453125,"type":"localize"},{"count":[[4,100]],"series":[["(sin.f64 b)","b","-inf",0.132080078125],["(sin.f64 b)","b","inf",0.134033203125],["(sin.f64 b)","b","0",0.23583984375],["(/.f64 r (cos.f64 (+.f64 b a)))","a","-inf",0.37890625],["(/.f64 r (cos.f64 (+.f64 b a)))","a","inf",0.35693359375],["(/.f64 r (cos.f64 (+.f64 b a)))","a","0",0.614013671875],["(/.f64 r (cos.f64 (+.f64 b a)))","b","-inf",1.260986328125],["(/.f64 r (cos.f64 (+.f64 b a)))","b","inf",0.385986328125],["(/.f64 r (cos.f64 (+.f64 b a)))","b","0",0.489013671875],["(/.f64 r (cos.f64 (+.f64 b a)))","r","-inf",0.3720703125],["(/.f64 r (cos.f64 (+.f64 b a)))","r","inf",0.318115234375],["(/.f64 r (cos.f64 (+.f64 b a)))","r","0",0.37109375],["(*.f64 (sin.f64 b) (/.f64 r (cos.f64 (+.f64 b a))))","a","-inf",0.418212890625],["(*.f64 (sin.f64 b) (/.f64 r (cos.f64 (+.f64 b a))))","a","inf",0.651123046875],["(*.f64 (sin.f64 b) (/.f64 r (cos.f64 (+.f64 b a))))","a","0",0.783935546875],["(*.f64 (sin.f64 b) (/.f64 r (cos.f64 (+.f64 b a))))","r","-inf",0.307861328125],["(*.f64 (sin.f64 b) (/.f64 r (cos.f64 (+.f64 b a))))","r","inf",0.43505859375],["(*.f64 (sin.f64 b) (/.f64 r (cos.f64 (+.f64 b a))))","r","0",1.369873046875],["(*.f64 (sin.f64 b) (/.f64 r (cos.f64 (+.f64 b a))))","b","-inf",0.52294921875],["(*.f64 (sin.f64 b) (/.f64 r (cos.f64 (+.f64 b a))))","b","inf",0.613037109375],["(*.f64 (sin.f64 b) (/.f64 r (cos.f64 (+.f64 b a))))","b","0",0.776123046875],["(cos.f64 (+.f64 b a))","a","-inf",0.177978515625],["(cos.f64 (+.f64 b a))","a","inf",0.163818359375],["(cos.f64 (+.f64 b a))","a","0",0.39599609375],["(cos.f64 (+.f64 b a))","b","-inf",0.18701171875],["(cos.f64 (+.f64 b a))","b","inf",0.19482421875],["(cos.f64 (+.f64 b a))","b","0",0.4521484375]],"time":12.884033203125,"type":"series"},{"count":[[4,156]],"egraph":[[2,2877,32,0.025469041],[1,200,32,0.003729333],[0,9,32,0.000223208]],"inputs":[["(cos.f64 (+.f64 b a))","(*.f64 (sin.f64 b) (/.f64 r (cos.f64 (+.f64 b a))))","(/.f64 r (cos.f64 (+.f64 b a)))","(sin.f64 b)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 b a)) (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 b a)) (fma.f64 (neg.f64 (sin.f64 b)) (sin.f64 a) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 b a)) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1))) (fma.f64 (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 1 (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (+.f64 b a)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (+.f64 b a)))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (/.f64 (*.f64 b b) (-.f64 b a))) (cos.f64 (/.f64 (*.f64 a a) (-.f64 b a)))) (*.f64 (sin.f64 (/.f64 (*.f64 b b) (-.f64 b a))) (sin.f64 (/.f64 (*.f64 a a) (-.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (+.f64 b a)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (+.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (+.f64 b a))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (+.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 (+.f64 b a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (+.f64 b a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2) (cbrt.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (+.f64 b a))) (sqrt.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (+.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2) (+.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 2) (*.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 2)) (cos.f64 (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (+.f64 b a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (+.f64 b a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (+.f64 b a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (+.f64 b a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (+.f64 b a)) 1 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 (+.f64 b a)) (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2) (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2) (cbrt.f64 (cos.f64 (+.f64 b a))) (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 (+.f64 b a))) (sqrt.f64 (cos.f64 (+.f64 b a))) (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (cos.f64 b) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 b)) (/.f64 r (cos.f64 (+.f64 b a))))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 b)) (/.f64 r (cos.f64 (+.f64 b a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 b)) (/.f64 r (cos.f64 (+.f64 b a)))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 b)) (/.f64 r (cos.f64 (+.f64 b a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cos.f64 (+.f64 b a)) (*.f64 (sin.f64 b) r)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (sin.f64 b) r)) (neg.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 b) r) 1) (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 b) r) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2)) (cbrt.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 b) r) (sqrt.f64 (cos.f64 (+.f64 b a)))) (sqrt.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 r) (sin.f64 b)) (neg.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 b) (neg.f64 r)) (neg.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cos.f64 (+.f64 b a)) (*.f64 (sin.f64 b) r)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sin.f64 b)) (/.f64 r (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 r (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 r (cos.f64 (+.f64 b a))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 r (cos.f64 (+.f64 b a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 r (cos.f64 (+.f64 b a)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 r (cos.f64 (+.f64 b a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 r (cos.f64 (+.f64 b a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 r (/.f64 1 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 r (cos.f64 (+.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 r (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 r (cos.f64 (+.f64 b a)))) (cbrt.f64 (pow.f64 (/.f64 (cos.f64 (+.f64 b a)) r) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (cos.f64 (+.f64 b a)) r) -2)) (cbrt.f64 (/.f64 r (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 r r)) (*.f64 (cbrt.f64 r) (/.f64 1 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 r (cos.f64 (+.f64 b a)))) (sqrt.f64 (/.f64 r (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 r) (*.f64 (sqrt.f64 r) (/.f64 1 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 r) (/.f64 1 (neg.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cos.f64 (+.f64 b a))) r)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 r r)) 1) (/.f64 (cbrt.f64 r) (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 r) 1) (/.f64 (sqrt.f64 r) (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) -2) (/.f64 r (cbrt.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 r r)) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2)) (cbrt.f64 (/.f64 r (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 r) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 2)) (/.f64 (sqrt.f64 r) (cbrt.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (+.f64 b a)) -1/2) (/.f64 r (sqrt.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 r r)) (sqrt.f64 (cos.f64 (+.f64 b a)))) (/.f64 (cbrt.f64 r) (sqrt.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 r (cos.f64 (+.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (cos.f64 (+.f64 b a)) r) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 r (cos.f64 (+.f64 b a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 r (cos.f64 (+.f64 b a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 r (cos.f64 (+.f64 b a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cos.f64 (+.f64 b a)) r) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 r 3) (pow.f64 (cos.f64 (+.f64 b a)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (cos.f64 (+.f64 b a)) r) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 r (neg.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (cos.f64 (+.f64 b a)) r) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 r (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 r (cos.f64 (+.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 r (cos.f64 (+.f64 b a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 r 3) (pow.f64 (cos.f64 (+.f64 b a)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 r (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 r (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 r (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 r (cos.f64 (+.f64 b a)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sin.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 b))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 b)))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sin.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 b))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 b))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (cbrt.f64 (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 b)) (sqrt.f64 (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 b) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 b) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 b) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 b)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 b)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 b) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 b) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sin.f64 b)) 1))))))"]],"rules":[["egg-rr",23],["egg-rr",39],["egg-rr",27],["egg-rr",67]],"stop":[["node limit",1]],"time":57.283935546875,"type":"rewrite"},{"count":[[256,217]],"egraph":[[2,2001,1804,0.015721625],[1,578,1872,0.004035708],[0,180,1944,0.0008985]],"inputs":[["(cos.f64 a)","(+.f64 (cos.f64 a) (*.f64 -1 (*.f64 (sin.f64 a) b)))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2)))))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2))))))","(cos.f64 (+.f64 a b))","(cos.f64 (+.f64 a b))","(cos.f64 (+.f64 a b))","(cos.f64 (+.f64 a b))","(cos.f64 (-.f64 a (*.f64 -1 b)))","(cos.f64 (-.f64 a (*.f64 -1 b)))","(cos.f64 (-.f64 a (*.f64 -1 b)))","(cos.f64 (-.f64 a (*.f64 -1 b)))","(cos.f64 b)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (cos.f64 b))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b))))","(cos.f64 (+.f64 a b))","(cos.f64 (+.f64 a b))","(cos.f64 (+.f64 a b))","(cos.f64 (+.f64 a b))","(cos.f64 (-.f64 b (*.f64 -1 a)))","(cos.f64 (-.f64 b (*.f64 -1 a)))","(cos.f64 (-.f64 b (*.f64 -1 a)))","(cos.f64 (-.f64 b (*.f64 -1 a)))","(/.f64 (*.f64 b r) (cos.f64 a))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 (pow.f64 b 2) r)) (pow.f64 (cos.f64 a) 2)) (/.f64 (*.f64 r b) (cos.f64 a)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3))))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (+.f64 (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 4))))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (cos.f64 b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 a))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 b r)) (pow.f64 (cos.f64 a) 2)) (/.f64 r (cos.f64 a)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r b)) (pow.f64 (cos.f64 a) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))) (pow.f64 b 2))) (/.f64 r (cos.f64 a))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r b)) (pow.f64 (cos.f64 a) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))) (sin.f64 a)) (cos.f64 a)) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))) (pow.f64 b 2))) (/.f64 r (cos.f64 a)))))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 r (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 r (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 r (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 r (cos.f64 b))","(+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 r (cos.f64 b)))","(+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 3)))) (pow.f64 a 2))) (/.f64 r (cos.f64 b))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (pow.f64 (cos.f64 b) 2))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 b) r) (pow.f64 (cos.f64 b) 2))) (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 3))))) (cos.f64 b)))) (pow.f64 a 3))) (+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 3)))) (pow.f64 a 2))) (/.f64 r (cos.f64 b)))))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 r (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 r (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 r (cos.f64 (-.f64 b (*.f64 -1 a))))","b","(+.f64 (*.f64 -1/6 (pow.f64 b 3)) b)","(+.f64 (*.f64 -1/6 (pow.f64 b 3)) (+.f64 (*.f64 1/120 (pow.f64 b 5)) b))","(+.f64 (*.f64 -1/6 (pow.f64 b 3)) (+.f64 (*.f64 1/120 (pow.f64 b 5)) (+.f64 b (*.f64 -1/5040 (pow.f64 b 7)))))"]],"method":["egg-herbie"],"outputs":[["(cos.f64 a)","(+.f64 (cos.f64 a) (*.f64 -1 (*.f64 (sin.f64 a) b)))","(+.f64 (cos.f64 a) (neg.f64 (*.f64 (sin.f64 a) b)))","(-.f64 (cos.f64 a) (*.f64 (sin.f64 a) b))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2)))))","(+.f64 (cos.f64 a) (fma.f64 -1 (*.f64 (sin.f64 a) b) (*.f64 -1/2 (*.f64 (cos.f64 a) (*.f64 b b)))))","(+.f64 (-.f64 (cos.f64 a) (*.f64 (sin.f64 a) b)) (*.f64 (cos.f64 a) (*.f64 (*.f64 b b) -1/2)))","(+.f64 (cos.f64 a) (*.f64 b (-.f64 (*.f64 (*.f64 (cos.f64 a) -1/2) b) (sin.f64 a))))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2))))))","(+.f64 (cos.f64 a) (fma.f64 -1 (*.f64 (sin.f64 a) b) (fma.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (*.f64 -1/2 (*.f64 (cos.f64 a) (*.f64 b b))))))","(+.f64 (-.f64 (cos.f64 a) (*.f64 (sin.f64 a) b)) (fma.f64 -1/2 (*.f64 (cos.f64 a) (*.f64 b b)) (*.f64 (sin.f64 a) (*.f64 (pow.f64 b 3) 1/6))))","(+.f64 (*.f64 (sin.f64 a) (+.f64 (neg.f64 b) (*.f64 1/6 (pow.f64 b 3)))) (*.f64 (+.f64 (*.f64 -1/2 (*.f64 b b)) 1) (cos.f64 a)))","(cos.f64 (+.f64 a b))","(cos.f64 (+.f64 a b))","(cos.f64 (+.f64 a b))","(cos.f64 (+.f64 a b))","(cos.f64 (-.f64 a (*.f64 -1 b)))","(cos.f64 (+.f64 a b))","(cos.f64 (-.f64 a (*.f64 -1 b)))","(cos.f64 (+.f64 a b))","(cos.f64 (-.f64 a (*.f64 -1 b)))","(cos.f64 (+.f64 a b))","(cos.f64 (-.f64 a (*.f64 -1 b)))","(cos.f64 (+.f64 a b))","(cos.f64 b)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (cos.f64 b))","(fma.f64 -1 (*.f64 a (sin.f64 b)) (cos.f64 b))","(-.f64 (cos.f64 b) (*.f64 a (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b)))","(fma.f64 -1 (*.f64 a (sin.f64 b)) (fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (cos.f64 b)))","(-.f64 (fma.f64 -1/2 (*.f64 a (*.f64 a (cos.f64 b))) (cos.f64 b)) (*.f64 a (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b))))","(fma.f64 -1 (*.f64 a (sin.f64 b)) (fma.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (cos.f64 b))))","(-.f64 (fma.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 -1/2 (*.f64 a (*.f64 a (cos.f64 b))) (cos.f64 b))) (*.f64 a (sin.f64 b)))","(+.f64 (fma.f64 -1/2 (*.f64 a (*.f64 a (cos.f64 b))) (cos.f64 b)) (*.f64 (sin.f64 b) (+.f64 (neg.f64 a) (*.f64 1/6 (pow.f64 a 3)))))","(cos.f64 (+.f64 a b))","(cos.f64 (+.f64 a b))","(cos.f64 (+.f64 a b))","(cos.f64 (+.f64 a b))","(cos.f64 (-.f64 b (*.f64 -1 a)))","(cos.f64 (+.f64 a b))","(cos.f64 (-.f64 b (*.f64 -1 a)))","(cos.f64 (+.f64 a b))","(cos.f64 (-.f64 b (*.f64 -1 a)))","(cos.f64 (+.f64 a b))","(cos.f64 (-.f64 b (*.f64 -1 a)))","(cos.f64 (+.f64 a b))","(/.f64 (*.f64 b r) (cos.f64 a))","(/.f64 b (/.f64 (cos.f64 a) r))","(*.f64 (/.f64 r (cos.f64 a)) b)","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 (pow.f64 b 2) r)) (pow.f64 (cos.f64 a) 2)) (/.f64 (*.f64 r b) (cos.f64 a)))","(+.f64 (/.f64 b (/.f64 (cos.f64 a) r)) (/.f64 (*.f64 (sin.f64 a) (*.f64 (*.f64 b b) r)) (pow.f64 (cos.f64 a) 2)))","(+.f64 (*.f64 (/.f64 r (cos.f64 a)) b) (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 b (*.f64 b r)))))","(+.f64 (*.f64 (/.f64 r (cos.f64 a)) b) (/.f64 (*.f64 (sin.f64 a) b) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 b r))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3))))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 (*.f64 b b) r)) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 b (/.f64 (cos.f64 a) r)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r))))))))","(+.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 b (*.f64 b r)))) (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (pow.f64 (sin.f64 a) 2)) (/.f64 (pow.f64 (cos.f64 a) 3) r))) (*.f64 (/.f64 r (cos.f64 a)) b)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) b) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 b r))) (fma.f64 (pow.f64 b 3) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)) r)) (*.f64 (/.f64 r (cos.f64 a)) b)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (+.f64 (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 4))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 (*.f64 b b) r)) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 b (/.f64 (cos.f64 a) r)) (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r))))) (neg.f64 (*.f64 (fma.f64 -1 (/.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r)))))) (cos.f64 a)) (*.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) r)) -1/3)) (pow.f64 b 4))))))","(+.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 b (*.f64 b r)))) (-.f64 (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (pow.f64 (sin.f64 a) 2)) (/.f64 (pow.f64 (cos.f64 a) 3) r))) (*.f64 (/.f64 r (cos.f64 a)) b)) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 a) -1/3) (/.f64 (pow.f64 (cos.f64 a) 2) r)) (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (pow.f64 (sin.f64 a) 2)) (/.f64 (pow.f64 (cos.f64 a) 3) r))))) (pow.f64 b 4))))","(-.f64 (fma.f64 (pow.f64 b 3) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)) r)) (*.f64 (/.f64 r (cos.f64 a)) b)) (-.f64 (*.f64 (-.f64 (*.f64 (/.f64 (*.f64 (sin.f64 a) -1/3) (pow.f64 (cos.f64 a) 2)) r) (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)) r)))) (pow.f64 b 4)) (/.f64 (*.f64 (sin.f64 a) b) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 b r)))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r)","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))","(+.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)) (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)))","(+.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)))","(+.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) r)) a))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (/.f64 (pow.f64 (cos.f64 b) 3) r)) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))","(+.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (-.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)) (*.f64 (*.f64 a a) (fma.f64 -1/2 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (/.f64 (neg.f64 (pow.f64 (sin.f64 b) 3)) (/.f64 (pow.f64 (cos.f64 b) 3) r))))))","(+.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (-.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) r)) a) (*.f64 a (*.f64 a (*.f64 (/.f64 r (cos.f64 b)) (-.f64 (*.f64 (sin.f64 b) -1/2) (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 2))))))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (cos.f64 b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (fma.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (/.f64 (pow.f64 (cos.f64 b) 3) r)) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) r)) -1/3))) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (/.f64 (pow.f64 (cos.f64 b) 3) r)) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))","(+.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)) (-.f64 (-.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (*.f64 (*.f64 a a) (fma.f64 -1/2 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (/.f64 (neg.f64 (pow.f64 (sin.f64 b) 3)) (/.f64 (pow.f64 (cos.f64 b) 3) r))))) (*.f64 (pow.f64 a 3) (fma.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) r) -1/3 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (fma.f64 -1/2 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (/.f64 (neg.f64 (pow.f64 (sin.f64 b) 3)) (/.f64 (pow.f64 (cos.f64 b) 3) r))))))))","(+.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) r)) a) (-.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) r) (*.f64 (*.f64 a a) (+.f64 (*.f64 a (fma.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) r)) -1/3 (*.f64 (/.f64 (*.f64 (/.f64 r (cos.f64 b)) (-.f64 (*.f64 (sin.f64 b) -1/2) (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 2)))) (cos.f64 b)) (sin.f64 b)))) (*.f64 (/.f64 r (cos.f64 b)) (-.f64 (*.f64 (sin.f64 b) -1/2) (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 2))))))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 a b)))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)","(*.f64 (/.f64 r (cos.f64 (+.f64 a b))) (sin.f64 b))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 a))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 b r)) (pow.f64 (cos.f64 a) 2)) (/.f64 r (cos.f64 a)))","(+.f64 (/.f64 r (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) (*.f64 b r)) (pow.f64 (cos.f64 a) 2)))","(+.f64 (/.f64 r (cos.f64 a)) (/.f64 (*.f64 (sin.f64 a) b) (/.f64 (pow.f64 (cos.f64 a) 2) r)))","(*.f64 (+.f64 (/.f64 (sin.f64 a) (/.f64 (cos.f64 a) b)) 1) (/.f64 r (cos.f64 a)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r b)) (pow.f64 (cos.f64 a) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))) (pow.f64 b 2))) (/.f64 r (cos.f64 a))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 b r)) (pow.f64 (cos.f64 a) 2)) (fma.f64 -1 (*.f64 (*.f64 b b) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r))))) (/.f64 r (cos.f64 a))))","(+.f64 (/.f64 r (cos.f64 a)) (-.f64 (/.f64 (*.f64 (sin.f64 a) b) (/.f64 (pow.f64 (cos.f64 a) 2) r)) (*.f64 (*.f64 b b) (-.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)) r)))))","(-.f64 (*.f64 (+.f64 (/.f64 (sin.f64 a) (/.f64 (cos.f64 a) b)) 1) (/.f64 r (cos.f64 a))) (*.f64 (*.f64 b b) (*.f64 (/.f64 r (cos.f64 a)) (-.f64 -1/2 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 2))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r b)) (pow.f64 (cos.f64 a) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))) (sin.f64 a)) (cos.f64 a)) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))) (pow.f64 b 2))) (/.f64 r (cos.f64 a)))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 b r)) (pow.f64 (cos.f64 a) 2)) (fma.f64 -1 (*.f64 (pow.f64 b 3) (+.f64 (*.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) r)) -1/3) (/.f64 (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r)))) (/.f64 (cos.f64 a) (sin.f64 a))))) (fma.f64 -1 (*.f64 (*.f64 b b) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r))))) (/.f64 r (cos.f64 a)))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) b) (/.f64 (pow.f64 (cos.f64 a) 2) r)) (-.f64 (-.f64 (/.f64 r (cos.f64 a)) (*.f64 (*.f64 b b) (-.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)) r)))) (*.f64 (pow.f64 b 3) (fma.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) r)) -1/3 (/.f64 (-.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)) r)) (/.f64 (cos.f64 a) (sin.f64 a)))))))","(+.f64 (*.f64 (+.f64 (/.f64 (sin.f64 a) (/.f64 (cos.f64 a) b)) 1) (/.f64 r (cos.f64 a))) (*.f64 (*.f64 b b) (-.f64 (*.f64 (neg.f64 (fma.f64 (*.f64 (/.f64 r (pow.f64 (cos.f64 a) 2)) (sin.f64 a)) -1/3 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 (/.f64 r (cos.f64 a)) (-.f64 -1/2 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 2))))))) b) (*.f64 (/.f64 r (cos.f64 a)) (-.f64 -1/2 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 2)))))))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (-.f64 a (*.f64 -1 b))))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 b))","(+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 r (cos.f64 b)))","(+.f64 (/.f64 r (cos.f64 b)) (/.f64 (sin.f64 b) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 a r))))","(+.f64 (/.f64 r (cos.f64 b)) (*.f64 (/.f64 (sin.f64 b) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)))","(*.f64 (+.f64 (/.f64 a (/.f64 (cos.f64 b) (sin.f64 b))) 1) (/.f64 r (cos.f64 b)))","(+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 3)))) (pow.f64 a 2))) (/.f64 r (cos.f64 b))))","(+.f64 (/.f64 (sin.f64 b) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 a r))) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1/2 (/.f64 r (cos.f64 b)) (neg.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 3) r))))) (/.f64 r (cos.f64 b))))","(+.f64 (/.f64 r (cos.f64 b)) (-.f64 (*.f64 (/.f64 (sin.f64 b) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)) (*.f64 a (*.f64 a (-.f64 (/.f64 (*.f64 -1/2 r) (cos.f64 b)) (/.f64 (*.f64 r (pow.f64 (sin.f64 b) 2)) (pow.f64 (cos.f64 b) 3)))))))","(-.f64 (*.f64 (+.f64 (/.f64 a (/.f64 (cos.f64 b) (sin.f64 b))) 1) (/.f64 r (cos.f64 b))) (*.f64 a (*.f64 a (*.f64 (/.f64 r (cos.f64 b)) (-.f64 -1/2 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (pow.f64 (cos.f64 b) 2))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 b) r) (pow.f64 (cos.f64 b) 2))) (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 3))))) (cos.f64 b)))) (pow.f64 a 3))) (+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 3)))) (pow.f64 a 2))) (/.f64 r (cos.f64 b)))))","(fma.f64 -1 (*.f64 (pow.f64 a 3) (fma.f64 -1/2 (/.f64 (sin.f64 b) (/.f64 (pow.f64 (cos.f64 b) 2) r)) (fma.f64 1/6 (/.f64 (sin.f64 b) (/.f64 (pow.f64 (cos.f64 b) 2) r)) (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) (fma.f64 -1/2 (/.f64 r (cos.f64 b)) (neg.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 3) r))))))))) (+.f64 (/.f64 (sin.f64 b) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 a r))) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1/2 (/.f64 r (cos.f64 b)) (neg.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 3) r))))) (/.f64 r (cos.f64 b)))))","(-.f64 (+.f64 (/.f64 r (cos.f64 b)) (-.f64 (*.f64 (/.f64 (sin.f64 b) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)) (*.f64 a (*.f64 a (-.f64 (/.f64 (*.f64 -1/2 r) (cos.f64 b)) (/.f64 (*.f64 r (pow.f64 (sin.f64 b) 2)) (pow.f64 (cos.f64 b) 3))))))) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (-.f64 (/.f64 (*.f64 -1/2 r) (cos.f64 b)) (/.f64 (*.f64 r (pow.f64 (sin.f64 b) 2)) (pow.f64 (cos.f64 b) 3)))) (*.f64 (*.f64 (/.f64 (sin.f64 b) (pow.f64 (cos.f64 b) 2)) r) -1/3))))","(-.f64 (-.f64 (*.f64 (+.f64 (/.f64 a (/.f64 (cos.f64 b) (sin.f64 b))) 1) (/.f64 r (cos.f64 b))) (*.f64 a (*.f64 a (*.f64 (/.f64 r (cos.f64 b)) (-.f64 -1/2 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2))))))) (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (/.f64 r (cos.f64 b)) (-.f64 (*.f64 (sin.f64 b) -1/2) (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 2)))) (cos.f64 b)) (*.f64 (*.f64 (/.f64 r (pow.f64 (cos.f64 b) 2)) (sin.f64 b)) -1/3))))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 r (cos.f64 (+.f64 a b)))","(/.f64 r (cos.f64 (-.f64 b (*.f64 -1 a))))","(/.f64 r (cos.f64 (+.f64 a b)))","b","(+.f64 (*.f64 -1/6 (pow.f64 b 3)) b)","(fma.f64 -1/6 (pow.f64 b 3) b)","(fma.f64 (pow.f64 b 3) -1/6 b)","(+.f64 (*.f64 -1/6 (pow.f64 b 3)) (+.f64 (*.f64 1/120 (pow.f64 b 5)) b))","(fma.f64 -1/6 (pow.f64 b 3) (fma.f64 1/120 (pow.f64 b 5) b))","(fma.f64 (pow.f64 b 3) -1/6 (fma.f64 1/120 (pow.f64 b 5) b))","(+.f64 (*.f64 -1/6 (pow.f64 b 3)) (+.f64 (*.f64 1/120 (pow.f64 b 5)) (+.f64 b (*.f64 -1/5040 (pow.f64 b 7)))))","(fma.f64 -1/6 (pow.f64 b 3) (+.f64 (fma.f64 1/120 (pow.f64 b 5) b) (*.f64 -1/5040 (pow.f64 b 7))))","(fma.f64 (pow.f64 b 3) -1/6 (fma.f64 1/120 (pow.f64 b 5) (fma.f64 -1/5040 (pow.f64 b 7) b)))"]],"stop":[["node limit",1]],"time":44.30712890625,"type":"simplify"},{"compiler":[[4913,1651]],"time":36.053955078125,"type":"eval"},{"alts":[["(*.f64 (sin.f64 b) (/.f64 r (+.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))","fresh",0.38318892814728417],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (cbrt.f64 (sin.f64 b))) (/.f64 r (cos.f64 (+.f64 b a))))","fresh",14.449705594231105],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))))","fresh",0.5895691281467802],["(*.f64 (sin.f64 b) (/.f64 r (+.f64 (fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))","fresh",34.64195253907377],["(*.f64 (sin.f64 b) (/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))","next",0.32982260745286224],["(*.f64 (sin.f64 b) (/.f64 r (+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))","fresh",0.6396678657641821],["(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))))","fresh",14.165379991000137],["(/.f64 1 (/.f64 (cos.f64 (+.f64 b a)) (*.f64 (sin.f64 b) r)))","fresh",14.301528921136745],["(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","fresh",14.198915000768578],["(*.f64 (sin.f64 b) (/.f64 r (/.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 2)) (cos.f64 (-.f64 b a)))))","fresh",13.775224547559075],["(*.f64 (sin.f64 b) (/.f64 r (/.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (+.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2) (+.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 2) (*.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))","fresh",0.4056689574526103],["(pow.f64 (cbrt.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))) 3)","fresh",14.490708946137422],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))))","fresh",24.478260107452865]],"compiler":[[52,24],[19,12],[29,16],[48,19],[19,12],[62,28],[12,8],[14,10],[12,8],[28,19],[51,24],[15,11],[27,14],[52,24],[19,12],[29,16],[48,19],[19,12],[62,28],[12,8],[14,10],[12,8],[28,19],[51,24],[15,11],[27,14]],"count":[[219,13]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[217,12],"picked":[1,0]}],"min-error":[0.05078125],"time":68.511962890625,"type":"prune"},{"compiler":[[64,12]],"locations":[["(-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))",0.12566376953688402,true],["(/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))",0.17578125,true],["(*.f64 (sin.f64 b) (/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))",0.203125,true],["(*.f64 (sin.f64 b) (sin.f64 a))",0.2421875,true]],"time":12.025146484375,"type":"localize"},{"count":[[4,120]],"series":[["(-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))","a","-inf",0.18505859375],["(-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))","a","inf",0.162841796875],["(-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))","a","0",0.18310546875],["(-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))","b","-inf",0.1650390625],["(-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))","b","inf",0.1650390625],["(-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))","b","0",0.18701171875],["(/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))","a","-inf",0.467041015625],["(/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))","a","inf",0.454833984375],["(/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))","a","0",0.276123046875],["(/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))","b","-inf",0.467041015625],["(/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))","b","inf",0.465087890625],["(/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))","b","0",0.260009765625],["(/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))","r","-inf",0.47412109375],["(/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))","r","inf",0.370849609375],["(/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))","r","0",0.449951171875],["(*.f64 (sin.f64 b) (/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))","a","-inf",2.72509765625],["(*.f64 (sin.f64 b) (/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))","a","inf",0.795166015625],["(*.f64 (sin.f64 b) (/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))","a","0",0.346923828125],["(*.f64 (sin.f64 b) (/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))","r","-inf",0.346923828125],["(*.f64 (sin.f64 b) (/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))","r","inf",0.60498046875],["(*.f64 (sin.f64 b) (/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))","r","0",1.278076171875],["(*.f64 (sin.f64 b) (/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))","b","-inf",0.64794921875],["(*.f64 (sin.f64 b) (/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))","b","inf",0.904052734375],["(*.f64 (sin.f64 b) (/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))","b","0",0.366943359375],["(*.f64 (sin.f64 b) (sin.f64 a))","a","-inf",0.302978515625],["(*.f64 (sin.f64 b) (sin.f64 a))","a","inf",0.283935546875],["(*.f64 (sin.f64 b) (sin.f64 a))","a","0",0.383056640625],["(*.f64 (sin.f64 b) (sin.f64 a))","b","-inf",0.30615234375],["(*.f64 (sin.f64 b) (sin.f64 a))","b","inf",0.501953125],["(*.f64 (sin.f64 b) (sin.f64 a))","b","0",0.51806640625]],"time":15.531005859375,"type":"series"},{"count":[[4,266]],"egraph":[[2,4243,37,0.032257375],[1,293,37,0.005775166],[0,13,73,0.0003225]],"inputs":[["(*.f64 (sin.f64 b) (sin.f64 a))","(*.f64 (sin.f64 b) (/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))","(-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sin.f64 b) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b))) (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (cos.f64 (-.f64 b a)) 2) (/.f64 (cos.f64 (+.f64 b a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 2 (-.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a))))) (cbrt.f64 (exp.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cos.f64 (+.f64 b a)) (*.f64 (sin.f64 b) r)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (sin.f64 b) r)) (neg.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 b) r) 1) (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 b) r) (cbrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2))) (cbrt.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 b) r) (sqrt.f64 (cos.f64 (+.f64 b a)))) (sqrt.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 r) (sin.f64 b)) (neg.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 b) (neg.f64 r)) (neg.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (/.f64 r (cos.f64 (+.f64 b a))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 r (cos.f64 (+.f64 b a))) 3) (pow.f64 (sin.f64 b) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 (+.f64 b a)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 r (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 r (cos.f64 (+.f64 b a))))) (cbrt.f64 (exp.f64 (/.f64 r (cos.f64 (+.f64 b a))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 r (cos.f64 (+.f64 b a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 r (cos.f64 (+.f64 b a)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 r (cos.f64 (+.f64 b a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 r (cos.f64 (+.f64 b a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 r (/.f64 1 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 r (cos.f64 (+.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 r (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 r (cos.f64 (+.f64 b a)))) (pow.f64 (cbrt.f64 (/.f64 r (cos.f64 (+.f64 b a)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 r (cos.f64 (+.f64 b a)))) 2) (cbrt.f64 (/.f64 r (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 r) 2) (*.f64 (cbrt.f64 r) (/.f64 1 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 r (cos.f64 (+.f64 b a)))) (sqrt.f64 (/.f64 r (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 r) (*.f64 (sqrt.f64 r) (/.f64 1 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 r) (/.f64 1 (neg.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cos.f64 (+.f64 b a))) r)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 r) 2) 1) (/.f64 (cbrt.f64 r) (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 r) 1) (/.f64 (sqrt.f64 r) (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2))) (/.f64 r (cbrt.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 r) 2) (cbrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2))) (cbrt.f64 (/.f64 r (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 r) (cbrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2))) (/.f64 (sqrt.f64 r) (cbrt.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (cos.f64 (+.f64 b a)))) (/.f64 r (sqrt.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 r) 2) (sqrt.f64 (cos.f64 (+.f64 b a)))) (/.f64 (cbrt.f64 r) (sqrt.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 r (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 r (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a)))) (cos.f64 (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 r (cos.f64 (+.f64 b a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 r (cos.f64 (+.f64 b a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 r (cos.f64 (+.f64 b a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 r (cos.f64 (+.f64 b a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cos.f64 (+.f64 b a)) r) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 r (neg.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 r (cos.f64 (+.f64 b a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 r (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 r (cos.f64 (+.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 r (cos.f64 (+.f64 b a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 r 3) (pow.f64 (cos.f64 (+.f64 b a)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 r (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 r (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 r (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 r (cos.f64 (+.f64 b a)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 b a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 b a)) (fma.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 b a)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 b a)) (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 b a)) (+.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) (*.f64 (cos.f64 b) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (+.f64 b a)))) (cbrt.f64 (exp.f64 (cos.f64 (+.f64 b a)))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (+.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (+.f64 b a))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (+.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (+.f64 b a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) (cbrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2)) (cbrt.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (+.f64 b a))) (sqrt.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (/.f64 1 (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) (/.f64 1 (cos.f64 (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (-.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2)) (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cos.f64 (-.f64 b a)) (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) (cos.f64 (-.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3))) (neg.f64 (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a)))) (neg.f64 (cos.f64 (-.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (cos.f64 (+.f64 b a)) (cos.f64 (-.f64 b a))) 2) (*.f64 2 (-.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 (cos.f64 (+.f64 b a)) (cos.f64 (-.f64 b a))) (-.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 3) (pow.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 3)) (+.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2) (-.f64 (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))) (*.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (cos.f64 (+.f64 b a)) 3) (pow.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 3)) (+.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2) (-.f64 (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cos.f64 (+.f64 b a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))) (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2) (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))) (-.f64 (cos.f64 (+.f64 b a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (+.f64 b a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (+.f64 b a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (+.f64 b a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 b) (cos.f64 a)))) (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 (cos.f64 b)) (cos.f64 a)) (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 b) (cos.f64 a)))) (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 b) (cos.f64 a)))) (exp.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (cos.f64 b)) (cos.f64 a)) (/.f64 1 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 b) (cos.f64 a)))) (/.f64 1 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (cos.f64 (+.f64 b a)))) (exp.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))) (exp.f64 (cos.f64 (+.f64 b a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))) (+.f64 1 (expm1.f64 (cos.f64 (+.f64 b a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))) (pow.f64 (exp.f64 (cos.f64 b)) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b))) (pow.f64 (exp.f64 (cos.f64 b)) (cos.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))) (+.f64 1 (expm1.f64 (*.f64 (cos.f64 b) (cos.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b))) (+.f64 1 (expm1.f64 (*.f64 (cos.f64 b) (cos.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (+.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (+.f64 b a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (+.f64 b a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 b) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (cos.f64 b) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 b) (cos.f64 a) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (cos.f64 b) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (cos.f64 b) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 1 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 1 (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 1 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 1 (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (+.f64 b a)) 1 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (+.f64 b a)) 1 (fma.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (+.f64 b a)) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (+.f64 b a)) 1 (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (+.f64 b a)) 1 (+.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 (+.f64 b a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 (+.f64 b a)) (fma.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 (+.f64 b a)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 (+.f64 b a)) (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 (+.f64 b a)) (+.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) (*.f64 (cos.f64 b) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) (cbrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) (cbrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2)) (fma.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) (cbrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) (cbrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2)) (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 (+.f64 b a))) (cbrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2)) (+.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2)) (cbrt.f64 (cos.f64 (+.f64 b a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2)) (cbrt.f64 (cos.f64 (+.f64 b a))) (fma.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2)) (cbrt.f64 (cos.f64 (+.f64 b a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2)) (cbrt.f64 (cos.f64 (+.f64 b a))) (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (cos.f64 (+.f64 b a)) 2)) (cbrt.f64 (cos.f64 (+.f64 b a))) (+.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cos.f64 b) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 (+.f64 b a))) (sqrt.f64 (cos.f64 (+.f64 b a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 (+.f64 b a))) (sqrt.f64 (cos.f64 (+.f64 b a))) (fma.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 (+.f64 b a))) (sqrt.f64 (cos.f64 (+.f64 b a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 (+.f64 b a))) (sqrt.f64 (cos.f64 (+.f64 b a))) (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 (+.f64 b a))) (sqrt.f64 (cos.f64 (+.f64 b a))) (+.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (cos.f64 b)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (cos.f64 b)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (cos.f64 b)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (neg.f64 (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (cos.f64 b) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 b) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (cos.f64 (+.f64 b a)) (cos.f64 (-.f64 b a))) 1/2 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (cos.f64 (+.f64 b a)) (cos.f64 (-.f64 b a))) 1/2 (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (cos.f64 (+.f64 b a)) (cos.f64 (-.f64 b a))) 1/2 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (cos.f64 (+.f64 b a)) (cos.f64 (-.f64 b a))) 1/2 (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (/.f64 1 (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (/.f64 1 (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2))) (fma.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (/.f64 1 (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (/.f64 1 (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2))) (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (/.f64 1 (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2))) (+.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) (/.f64 1 (cos.f64 (-.f64 b a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) (/.f64 1 (cos.f64 (-.f64 b a))) (fma.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) (/.f64 1 (cos.f64 (-.f64 b a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) (/.f64 1 (cos.f64 (-.f64 b a))) (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) (/.f64 1 (cos.f64 (-.f64 b a))) (+.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sin.f64 b)) (sin.f64 a) (*.f64 (cos.f64 b) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))) (cbrt.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))) (cbrt.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))) (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))) (cbrt.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))) (cbrt.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))) (*.f64 (cos.f64 b) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))) (sqrt.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))) (cos.f64 (+.f64 b a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))) (sqrt.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))) (*.f64 (cos.f64 b) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cos.f64 b) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (cos.f64 b) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (-.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (-.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (fma.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1 (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (-.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2) (*.f64 (sin.f64 b) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (-.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (*.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (-.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (+.f64 (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) 2)) (cbrt.f64 (*.f64 (sin.f64 b) (sin.f64 a))) (*.f64 (cos.f64 b) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (sin.f64 b)) 1) (sin.f64 a) (*.f64 (cos.f64 b) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (cbrt.f64 (sin.f64 a)) (*.f64 (cos.f64 b) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (sin.f64 b)) (sqrt.f64 (sin.f64 a))) (sqrt.f64 (sin.f64 a)) (*.f64 (cos.f64 b) (cos.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (cos.f64 b)) 2)) (cbrt.f64 (cos.f64 b)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (cos.f64 b)) 2)) (cbrt.f64 (cos.f64 b)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (cos.f64 b)) 2)) (cbrt.f64 (cos.f64 b)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (cos.f64 b)) 2)) (cbrt.f64 (cos.f64 b)) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (cos.f64 b))) (sqrt.f64 (cos.f64 b)) (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (cos.f64 b))) (sqrt.f64 (cos.f64 b)) (*.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (cos.f64 b))) (sqrt.f64 (cos.f64 b)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (cos.f64 b))) (sqrt.f64 (cos.f64 b)) (neg.f64 (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))))"]],"rules":[["egg-rr",181],["egg-rr",38],["egg-rr",27],["egg-rr",20]],"stop":[["node limit",1]],"time":74.3359375,"type":"rewrite"},{"count":[[386,330]],"egraph":[[2,2149,2922,0.016749],[1,605,3010,0.004249709],[0,183,3080,0.000968959]],"inputs":[["(*.f64 (sin.f64 a) b)","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 (sin.f64 a) b))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (+.f64 (*.f64 (sin.f64 a) b) (*.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 a) (pow.f64 b 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (+.f64 (*.f64 (sin.f64 a) b) (*.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5))))))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 b) a)","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (*.f64 (sin.f64 b) a))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5))) (*.f64 (sin.f64 b) a)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 b) (pow.f64 a 7))) (+.f64 (*.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5))) (*.f64 (sin.f64 b) a))))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(/.f64 (*.f64 b r) (cos.f64 a))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 (pow.f64 b 2) r)) (pow.f64 (cos.f64 a) 2)) (/.f64 (*.f64 r b) (cos.f64 a)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3))))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (+.f64 (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 4))))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (cos.f64 b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (cos.f64 a))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 b r)) (pow.f64 (cos.f64 a) 2)) (/.f64 r (cos.f64 a)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r b)) (pow.f64 (cos.f64 a) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))) (pow.f64 b 2))) (/.f64 r (cos.f64 a))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r b)) (pow.f64 (cos.f64 a) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))) (sin.f64 a)) (cos.f64 a)) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))) (pow.f64 b 2))) (/.f64 r (cos.f64 a)))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (cos.f64 b))","(+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 r (cos.f64 b)))","(+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 3)))) (pow.f64 a 2))) (/.f64 r (cos.f64 b))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (pow.f64 (cos.f64 b) 2))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 b) r) (pow.f64 (cos.f64 b) 2))) (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 3))))) (cos.f64 b)))) (pow.f64 a 3))) (+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 3)))) (pow.f64 a 2))) (/.f64 r (cos.f64 b)))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(cos.f64 a)","(+.f64 (cos.f64 a) (*.f64 -1 (*.f64 (sin.f64 a) b)))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2)))))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2))))))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(cos.f64 b)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (cos.f64 b))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b))))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sin.f64 a) b)","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 (sin.f64 a) b))","(fma.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (*.f64 (sin.f64 a) b))","(*.f64 (sin.f64 a) (+.f64 b (*.f64 -1/6 (pow.f64 b 3))))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (+.f64 (*.f64 (sin.f64 a) b) (*.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5)))))","(fma.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (fma.f64 (sin.f64 a) b (*.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5)))))","(fma.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (fma.f64 (sin.f64 a) b (*.f64 (*.f64 1/120 (pow.f64 b 5)) (sin.f64 a))))","(fma.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (*.f64 (sin.f64 a) (+.f64 b (*.f64 1/120 (pow.f64 b 5)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 a) (pow.f64 b 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (+.f64 (*.f64 (sin.f64 a) b) (*.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5))))))","(fma.f64 -1/5040 (*.f64 (sin.f64 a) (pow.f64 b 7)) (fma.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (fma.f64 (sin.f64 a) b (*.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5))))))","(fma.f64 -1/5040 (*.f64 (sin.f64 a) (pow.f64 b 7)) (fma.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (fma.f64 (sin.f64 a) b (*.f64 (*.f64 1/120 (pow.f64 b 5)) (sin.f64 a)))))","(+.f64 (*.f64 (sin.f64 a) (+.f64 b (*.f64 -1/6 (pow.f64 b 3)))) (*.f64 (sin.f64 a) (+.f64 (*.f64 (pow.f64 b 5) 1/120) (*.f64 (pow.f64 b 7) -1/5040))))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 b) a)","(*.f64 a (sin.f64 b))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (*.f64 (sin.f64 b) a))","(fma.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (*.f64 a (sin.f64 b)))","(fma.f64 a (sin.f64 b) (*.f64 (pow.f64 a 3) (*.f64 -1/6 (sin.f64 b))))","(*.f64 (sin.f64 b) (+.f64 a (*.f64 (pow.f64 a 3) -1/6)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5))) (*.f64 (sin.f64 b) a)))","(fma.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5)) (*.f64 a (sin.f64 b))))","(fma.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (*.f64 (sin.f64 b) (+.f64 a (*.f64 1/120 (pow.f64 a 5)))))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 b) (pow.f64 a 7))) (+.f64 (*.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5))) (*.f64 (sin.f64 b) a))))","(fma.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 -1/5040 (*.f64 (sin.f64 b) (pow.f64 a 7)) (fma.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5)) (*.f64 a (sin.f64 b)))))","(+.f64 (*.f64 (sin.f64 b) (+.f64 a (*.f64 (pow.f64 a 3) -1/6))) (*.f64 (sin.f64 b) (+.f64 (*.f64 1/120 (pow.f64 a 5)) (*.f64 -1/5040 (pow.f64 a 7)))))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(*.f64 (sin.f64 a) (sin.f64 b))","(/.f64 (*.f64 b r) (cos.f64 a))","(/.f64 b (/.f64 (cos.f64 a) r))","(*.f64 (/.f64 r (cos.f64 a)) b)","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 (pow.f64 b 2) r)) (pow.f64 (cos.f64 a) 2)) (/.f64 (*.f64 r b) (cos.f64 a)))","(+.f64 (/.f64 b (/.f64 (cos.f64 a) r)) (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 r (*.f64 b b)))))","(+.f64 (*.f64 (/.f64 r (cos.f64 a)) b) (/.f64 (*.f64 (sin.f64 a) r) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 b b))))","(+.f64 (*.f64 (/.f64 r (cos.f64 a)) b) (*.f64 (*.f64 (/.f64 r (pow.f64 (cos.f64 a) 2)) (sin.f64 a)) (*.f64 b b)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3))))))))","(+.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 r (*.f64 b b)))) (+.f64 (/.f64 b (/.f64 (cos.f64 a) r)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (*.f64 r (pow.f64 (sin.f64 a) 2)) (pow.f64 (cos.f64 a) 3))))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) r) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 b b))) (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (pow.f64 (sin.f64 a) 2)) (/.f64 (pow.f64 (cos.f64 a) 3) r))) (*.f64 (/.f64 r (cos.f64 a)) b)))","(+.f64 (*.f64 (*.f64 (/.f64 r (pow.f64 (cos.f64 a) 2)) (sin.f64 a)) (*.f64 b b)) (fma.f64 (pow.f64 b 3) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 (/.f64 r (pow.f64 (cos.f64 a) 3)) (pow.f64 (sin.f64 a) 2))) (*.f64 (/.f64 r (cos.f64 a)) b)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (+.f64 (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 4))))))","(+.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 r (*.f64 b b)))) (+.f64 (/.f64 b (/.f64 (cos.f64 a) r)) (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (*.f64 r (pow.f64 (sin.f64 a) 2)) (pow.f64 (cos.f64 a) 3))))) (neg.f64 (*.f64 (fma.f64 -1 (/.f64 (sin.f64 a) (/.f64 (cos.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (*.f64 r (pow.f64 (sin.f64 a) 2)) (pow.f64 (cos.f64 a) 3))))))) (*.f64 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2)) -1/3)) (pow.f64 b 4))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) r) (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 b b))) (-.f64 (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (pow.f64 (sin.f64 a) 2)) (/.f64 (pow.f64 (cos.f64 a) 3) r))) (*.f64 (/.f64 r (cos.f64 a)) b)) (*.f64 (-.f64 (/.f64 (*.f64 (sin.f64 a) -1/3) (/.f64 (pow.f64 (cos.f64 a) 2) r)) (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (pow.f64 (sin.f64 a) 2)) (/.f64 (pow.f64 (cos.f64 a) 3) r))))) (pow.f64 b 4))))","(-.f64 (+.f64 (*.f64 (*.f64 (/.f64 r (pow.f64 (cos.f64 a) 2)) (sin.f64 a)) (*.f64 b b)) (fma.f64 (pow.f64 b 3) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 (/.f64 r (pow.f64 (cos.f64 a) 3)) (pow.f64 (sin.f64 a) 2))) (*.f64 (/.f64 r (cos.f64 a)) b))) (*.f64 (-.f64 (*.f64 (/.f64 (*.f64 (sin.f64 a) -1/3) (pow.f64 (cos.f64 a) 2)) r) (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 (/.f64 r (pow.f64 (cos.f64 a) 3)) (pow.f64 (sin.f64 a) 2))))) (pow.f64 b 4)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r))","(/.f64 r (/.f64 (cos.f64 b) (sin.f64 b)))","(*.f64 (sin.f64 b) (/.f64 r (cos.f64 b)))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))","(+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 a r))))","(+.f64 (/.f64 r (/.f64 (cos.f64 b) (sin.f64 b))) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)))","(+.f64 (*.f64 (sin.f64 b) (/.f64 r (cos.f64 b))) (*.f64 (/.f64 (*.f64 a r) (pow.f64 (cos.f64 b) 2)) (pow.f64 (sin.f64 b) 2)))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))","(+.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 a r))) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (/.f64 (pow.f64 (cos.f64 b) 3) r)) (*.f64 -1/2 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r))))) (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r))))","(+.f64 (/.f64 r (/.f64 (cos.f64 b) (sin.f64 b))) (-.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)) (*.f64 a (*.f64 a (fma.f64 -1/2 (/.f64 r (/.f64 (cos.f64 b) (sin.f64 b))) (/.f64 (neg.f64 (pow.f64 (sin.f64 b) 3)) (/.f64 (pow.f64 (cos.f64 b) 3) r)))))))","(+.f64 (*.f64 (sin.f64 b) (/.f64 r (cos.f64 b))) (-.f64 (*.f64 (/.f64 (*.f64 a r) (pow.f64 (cos.f64 b) 2)) (pow.f64 (sin.f64 b) 2)) (*.f64 a (*.f64 a (*.f64 (/.f64 r (cos.f64 b)) (-.f64 (*.f64 -1/2 (sin.f64 b)) (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 2))))))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (cos.f64 b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))","(+.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 a r))) (fma.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (/.f64 (pow.f64 (cos.f64 b) 3) r)) (*.f64 -1/2 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)))))) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) r)) -1/3))) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (/.f64 (pow.f64 (cos.f64 b) 3) r)) (*.f64 -1/2 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r))))) (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)))))","(+.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)) (-.f64 (-.f64 (/.f64 r (/.f64 (cos.f64 b) (sin.f64 b))) (*.f64 a (*.f64 a (fma.f64 -1/2 (/.f64 r (/.f64 (cos.f64 b) (sin.f64 b))) (/.f64 (neg.f64 (pow.f64 (sin.f64 b) 3)) (/.f64 (pow.f64 (cos.f64 b) 3) r)))))) (*.f64 (pow.f64 a 3) (fma.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) r) -1/3 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (fma.f64 -1/2 (/.f64 r (/.f64 (cos.f64 b) (sin.f64 b))) (/.f64 (neg.f64 (pow.f64 (sin.f64 b) 3)) (/.f64 (pow.f64 (cos.f64 b) 3) r))))))))","(+.f64 (*.f64 (sin.f64 b) (/.f64 r (cos.f64 b))) (-.f64 (*.f64 (/.f64 (*.f64 a r) (pow.f64 (cos.f64 b) 2)) (pow.f64 (sin.f64 b) 2)) (*.f64 (*.f64 a a) (+.f64 (*.f64 (fma.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) r) -1/3 (*.f64 (/.f64 (*.f64 (/.f64 r (cos.f64 b)) (-.f64 (*.f64 -1/2 (sin.f64 b)) (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 2)))) (cos.f64 b)) (sin.f64 b))) a) (*.f64 (/.f64 r (cos.f64 b)) (-.f64 (*.f64 -1/2 (sin.f64 b)) (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 2))))))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) r))","(*.f64 (/.f64 (sin.f64 b) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) r)","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (cos.f64 a))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 b r)) (pow.f64 (cos.f64 a) 2)) (/.f64 r (cos.f64 a)))","(+.f64 (/.f64 r (cos.f64 a)) (/.f64 (*.f64 (*.f64 (sin.f64 a) b) r) (pow.f64 (cos.f64 a) 2)))","(+.f64 (/.f64 r (cos.f64 a)) (*.f64 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2)) (*.f64 b r)))","(*.f64 (+.f64 (/.f64 (*.f64 (sin.f64 a) b) (cos.f64 a)) 1) (/.f64 r (cos.f64 a)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r b)) (pow.f64 (cos.f64 a) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))) (pow.f64 b 2))) (/.f64 r (cos.f64 a))))","(+.f64 (/.f64 (*.f64 (*.f64 (sin.f64 a) b) r) (pow.f64 (cos.f64 a) 2)) (fma.f64 -1 (*.f64 (*.f64 b b) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (*.f64 r (pow.f64 (sin.f64 a) 2)) (pow.f64 (cos.f64 a) 3))))) (/.f64 r (cos.f64 a))))","(+.f64 (/.f64 r (cos.f64 a)) (-.f64 (*.f64 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2)) (*.f64 b r)) (*.f64 b (*.f64 b (-.f64 (*.f64 (/.f64 r (cos.f64 a)) -1/2) (*.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)) r))))))","(-.f64 (*.f64 (+.f64 (/.f64 (*.f64 (sin.f64 a) b) (cos.f64 a)) 1) (/.f64 r (cos.f64 a))) (*.f64 (*.f64 b b) (*.f64 (/.f64 r (cos.f64 a)) (-.f64 -1/2 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 2))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r b)) (pow.f64 (cos.f64 a) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))) (sin.f64 a)) (cos.f64 a)) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))) (pow.f64 b 2))) (/.f64 r (cos.f64 a)))))","(+.f64 (/.f64 (*.f64 (*.f64 (sin.f64 a) b) r) (pow.f64 (cos.f64 a) 2)) (fma.f64 -1 (*.f64 (pow.f64 b 3) (+.f64 (*.f64 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2)) -1/3) (/.f64 (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (*.f64 r (pow.f64 (sin.f64 a) 2)) (pow.f64 (cos.f64 a) 3)))) (/.f64 (cos.f64 a) (sin.f64 a))))) (fma.f64 -1 (*.f64 (*.f64 b b) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (*.f64 r (pow.f64 (sin.f64 a) 2)) (pow.f64 (cos.f64 a) 3))))) (/.f64 r (cos.f64 a)))))","(+.f64 (*.f64 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2)) (*.f64 b r)) (-.f64 (-.f64 (/.f64 r (cos.f64 a)) (*.f64 b (*.f64 b (-.f64 (*.f64 (/.f64 r (cos.f64 a)) -1/2) (*.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)) r))))) (*.f64 (pow.f64 b 3) (fma.f64 (*.f64 (/.f64 (sin.f64 a) (pow.f64 (cos.f64 a) 2)) r) -1/3 (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 r (cos.f64 a)) -1/2) (*.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)) r)) (cos.f64 a)) (sin.f64 a))))))","(+.f64 (*.f64 (+.f64 (/.f64 (*.f64 (sin.f64 a) b) (cos.f64 a)) 1) (/.f64 r (cos.f64 a))) (*.f64 (*.f64 b b) (-.f64 (*.f64 (neg.f64 (fma.f64 (*.f64 (/.f64 r (pow.f64 (cos.f64 a) 2)) (sin.f64 a)) -1/3 (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (*.f64 (/.f64 r (cos.f64 a)) (-.f64 -1/2 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 2))))))) b) (*.f64 (/.f64 r (cos.f64 a)) (-.f64 -1/2 (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 2)))))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (cos.f64 b))","(+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 r (cos.f64 b)))","(+.f64 (/.f64 r (cos.f64 b)) (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)))","(+.f64 (/.f64 r (cos.f64 b)) (*.f64 (/.f64 (sin.f64 b) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)))","(*.f64 (+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) a)) 1) (/.f64 r (cos.f64 b)))","(+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 3)))) (pow.f64 a 2))) (/.f64 r (cos.f64 b))))","(+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1/2 (/.f64 r (cos.f64 b)) (neg.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 3) r))))) (/.f64 r (cos.f64 b))))","(+.f64 (/.f64 r (cos.f64 b)) (-.f64 (*.f64 (/.f64 (sin.f64 b) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)) (*.f64 (*.f64 a a) (-.f64 (/.f64 (*.f64 r -1/2) (cos.f64 b)) (/.f64 r (/.f64 (pow.f64 (cos.f64 b) 3) (pow.f64 (sin.f64 b) 2)))))))","(-.f64 (*.f64 (+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) a)) 1) (/.f64 r (cos.f64 b))) (*.f64 a (*.f64 a (*.f64 (/.f64 r (cos.f64 b)) (-.f64 -1/2 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (pow.f64 (cos.f64 b) 2))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 b) r) (pow.f64 (cos.f64 b) 2))) (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 3))))) (cos.f64 b)))) (pow.f64 a 3))) (+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 3)))) (pow.f64 a 2))) (/.f64 r (cos.f64 b)))))","(fma.f64 -1 (*.f64 (pow.f64 a 3) (fma.f64 -1/2 (/.f64 (sin.f64 b) (/.f64 (pow.f64 (cos.f64 b) 2) r)) (fma.f64 1/6 (/.f64 (sin.f64 b) (/.f64 (pow.f64 (cos.f64 b) 2) r)) (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) (fma.f64 -1/2 (/.f64 r (cos.f64 b)) (neg.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 3) r))))))))) (+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1/2 (/.f64 r (cos.f64 b)) (neg.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 3) r))))) (/.f64 r (cos.f64 b)))))","(-.f64 (+.f64 (/.f64 r (cos.f64 b)) (-.f64 (*.f64 (/.f64 (sin.f64 b) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)) (*.f64 (*.f64 a a) (-.f64 (/.f64 (*.f64 r -1/2) (cos.f64 b)) (/.f64 r (/.f64 (pow.f64 (cos.f64 b) 3) (pow.f64 (sin.f64 b) 2))))))) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (-.f64 (/.f64 (*.f64 r -1/2) (cos.f64 b)) (/.f64 r (/.f64 (pow.f64 (cos.f64 b) 3) (pow.f64 (sin.f64 b) 2))))) (*.f64 (*.f64 (/.f64 (sin.f64 b) (pow.f64 (cos.f64 b) 2)) r) -1/3))))","(-.f64 (-.f64 (*.f64 (+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) a)) 1) (/.f64 r (cos.f64 b))) (*.f64 a (*.f64 a (*.f64 (/.f64 r (cos.f64 b)) (-.f64 -1/2 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2))))))) (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (/.f64 r (cos.f64 b)) (-.f64 (*.f64 -1/2 (sin.f64 b)) (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 2)))) (cos.f64 b)) (/.f64 (*.f64 (sin.f64 b) -1/3) (/.f64 (pow.f64 (cos.f64 b) 2) r)))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(cos.f64 a)","(+.f64 (cos.f64 a) (*.f64 -1 (*.f64 (sin.f64 a) b)))","(+.f64 (cos.f64 a) (neg.f64 (*.f64 (sin.f64 a) b)))","(-.f64 (cos.f64 a) (*.f64 (sin.f64 a) b))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2)))))","(+.f64 (cos.f64 a) (fma.f64 -1 (*.f64 (sin.f64 a) b) (*.f64 (*.f64 -1/2 (cos.f64 a)) (*.f64 b b))))","(+.f64 (cos.f64 a) (-.f64 (*.f64 (cos.f64 a) (*.f64 (*.f64 b b) -1/2)) (*.f64 (sin.f64 a) b)))","(+.f64 (cos.f64 a) (*.f64 b (-.f64 (*.f64 (*.f64 (cos.f64 a) -1/2) b) (sin.f64 a))))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2))))))","(+.f64 (cos.f64 a) (fma.f64 -1 (*.f64 (sin.f64 a) b) (fma.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (*.f64 (*.f64 -1/2 (cos.f64 a)) (*.f64 b b)))))","(+.f64 (-.f64 (cos.f64 a) (*.f64 (sin.f64 a) b)) (fma.f64 (*.f64 (sin.f64 a) (pow.f64 b 3)) 1/6 (*.f64 (cos.f64 a) (*.f64 (*.f64 b b) -1/2))))","(+.f64 (*.f64 (sin.f64 a) (+.f64 (neg.f64 b) (*.f64 1/6 (pow.f64 b 3)))) (*.f64 (+.f64 (*.f64 -1/2 (*.f64 b b)) 1) (cos.f64 a)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(cos.f64 b)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (cos.f64 b))","(fma.f64 -1 (*.f64 a (sin.f64 b)) (cos.f64 b))","(-.f64 (cos.f64 b) (*.f64 a (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b)))","(fma.f64 -1 (*.f64 a (sin.f64 b)) (fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (cos.f64 b)))","(-.f64 (*.f64 (+.f64 (*.f64 (*.f64 -1/2 a) a) 1) (cos.f64 b)) (*.f64 a (sin.f64 b)))","(-.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 a a)) 1) (cos.f64 b)) (*.f64 a (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b))))","(fma.f64 -1 (*.f64 a (sin.f64 b)) (fma.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (cos.f64 b))))","(-.f64 (fma.f64 (*.f64 (sin.f64 b) (pow.f64 a 3)) 1/6 (*.f64 (+.f64 (*.f64 (*.f64 -1/2 a) a) 1) (cos.f64 b))) (*.f64 a (sin.f64 b)))","(+.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 a a)) 1) (cos.f64 b)) (*.f64 (sin.f64 b) (+.f64 (neg.f64 a) (*.f64 1/6 (pow.f64 a 3)))))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))"]],"stop":[["node limit",1]],"time":54.2958984375,"type":"simplify"},{"compiler":[[8486,2326]],"time":51.84912109375,"type":"eval"},{"alts":[["(/.f64 1 (/.f64 (cos.f64 (+.f64 b a)) (*.f64 (sin.f64 b) r)))","fresh",14.301528921136745],["(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","fresh",0.38738887930507393],["(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","fresh",14.198915000768578],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (*.f64 (neg.f64 (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (cbrt.f64 (sin.f64 a)) (*.f64 (cos.f64 b) (cos.f64 a)))))","fresh",0.37964638675818835],["(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","next",0.3252525879159781],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","fresh",0.3464050781475362],["(*.f64 (sin.f64 b) (/.f64 r (*.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) (/.f64 1 (cos.f64 (-.f64 b a))))))","fresh",14.195378819147715],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","fresh",0.5847690551370306],["(*.f64 (sin.f64 b) (*.f64 (/.f64 r (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2))))","fresh",13.367288102670638],["(pow.f64 (cbrt.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))) 3)","fresh",14.490708946137422],["(*.f64 (sin.f64 b) (/.f64 r (log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 b) (cos.f64 a)))) (exp.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))))","fresh",0.6548151724434592],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","fresh",0.45224389652663044],["(*.f64 (sin.f64 b) (/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))","done",0.32982260745286224]],"compiler":[[14,10],[19,12],[12,8],[26,16],[19,12],[30,14],[24,14],[40,18],[41,22],[15,11],[25,18],[37,18],[19,12],[14,10],[19,12],[12,8],[26,16],[19,12],[30,14],[24,14],[40,18],[41,22],[15,11],[25,18],[37,18]],"count":[[343,13]],"kept":[{"done":[0,0],"fresh":[12,1],"new":[330,11],"picked":[1,1]}],"min-error":[0.02734375],"time":144.0400390625,"type":"prune"},{"compiler":[[55,12]],"locations":[["(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))",0.12566376953688402,true],["(*.f64 (sin.f64 b) r)",0.15234375,true],["(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))",0.22494125976844204,true],["(*.f64 (sin.f64 a) (sin.f64 b))",0.2421875,true]],"time":11.90478515625,"type":"localize"},{"count":[[4,28]],"series":[["(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","b","-inf",0.18994140625],["(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","b","inf",0.162841796875],["(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","b","0",0.195068359375],["(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","a","-inf",0.1640625],["(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","a","inf",0.16796875],["(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))","a","0",0.19189453125],["(*.f64 (sin.f64 b) r)","r","-inf",0.255859375],["(*.f64 (sin.f64 b) r)","r","inf",0.30615234375],["(*.f64 (sin.f64 b) r)","r","0",0.1650390625],["(*.f64 (sin.f64 b) r)","b","-inf",0.14208984375],["(*.f64 (sin.f64 b) r)","b","inf",0.14501953125],["(*.f64 (sin.f64 b) r)","b","0",0.287109375],["(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","a","-inf",0.639892578125],["(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","a","inf",0.216064453125],["(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","a","0",0.281005859375],["(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","r","-inf",0.218017578125],["(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","r","inf",0.193115234375],["(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","r","0",0.2080078125],["(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","b","-inf",0.540771484375],["(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","b","inf",0.194091796875],["(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","b","0",0.31591796875],["(*.f64 (sin.f64 a) (sin.f64 b))","b","-inf",0.303955078125],["(*.f64 (sin.f64 a) (sin.f64 b))","b","inf",0.14404296875],["(*.f64 (sin.f64 a) (sin.f64 b))","b","0",0.18115234375],["(*.f64 (sin.f64 a) (sin.f64 b))","a","-inf",0.179931640625],["(*.f64 (sin.f64 a) (sin.f64 b))","a","inf",0.1669921875],["(*.f64 (sin.f64 a) (sin.f64 b))","a","0",0.25]],"time":6.72021484375,"type":"series"},{"count":[[4,267]],"egraph":[[2,4304,34,0.032464709],[1,293,34,0.005600792],[0,13,58,0.0003185]],"inputs":[["(*.f64 (sin.f64 a) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (sin.f64 b) r)","(-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sin.f64 a) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a))) (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (cos.f64 (-.f64 a b)) 2) (/.f64 (cos.f64 (+.f64 a b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 2 (-.f64 (cos.f64 (-.f64 a b)) (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (cos.f64 (-.f64 a b)) (cos.f64 (+.f64 a b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (cos.f64 (-.f64 a b)) (cos.f64 (+.f64 a b)))) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sin.f64 a) (sin.f64 b))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r))) (cbrt.f64 (exp.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r))))) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 b) (/.f64 1 (/.f64 (cos.f64 (+.f64 a b)) r)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 b) (*.f64 r (/.f64 1 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 r (*.f64 (sin.f64 b) (/.f64 1 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 b) r) (/.f64 1 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) r)) 2) (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) r)) (/.f64 1 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)) (pow.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)) 2) (cbrt.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (sin.f64 b) r)) (*.f64 (sqrt.f64 (*.f64 (sin.f64 b) r)) (/.f64 1 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)) (sqrt.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 b) (neg.f64 r)) (/.f64 1 (neg.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cos.f64 (+.f64 a b))) (*.f64 (sin.f64 b) r))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 b) 1) (/.f64 r (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 r 1) (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) r)) 2) 1) (/.f64 (cbrt.f64 (*.f64 (sin.f64 b) r)) (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (sin.f64 b) r)) 1) (/.f64 (sqrt.f64 (*.f64 (sin.f64 b) r)) (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 b) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2)) (/.f64 r (cbrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 r (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2)) (/.f64 (sin.f64 b) (cbrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2)) (/.f64 (*.f64 (sin.f64 b) r) (cbrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) r)) 2) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2)) (cbrt.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (sin.f64 b) r)) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2)) (/.f64 (sqrt.f64 (*.f64 (sin.f64 b) r)) (cbrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 b) (sqrt.f64 (cos.f64 (+.f64 a b)))) (/.f64 r (sqrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 r (sqrt.f64 (cos.f64 (+.f64 a b)))) (/.f64 (sin.f64 b) (sqrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (cos.f64 (+.f64 a b)))) (/.f64 (*.f64 (sin.f64 b) r) (sqrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) r)) 2) (sqrt.f64 (cos.f64 (+.f64 a b)))) (/.f64 (cbrt.f64 (*.f64 (sin.f64 b) r)) (sqrt.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 b) r) (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 3))) (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (cos.f64 (-.f64 a b)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (sin.f64 b) r) (*.f64 (cos.f64 (-.f64 a b)) (cos.f64 (+.f64 a b)))) (cos.f64 (-.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cos.f64 (+.f64 a b)) (*.f64 (sin.f64 b) r)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (sin.f64 b) r) (neg.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (sin.f64 b) r) 3) (pow.f64 (cos.f64 (+.f64 a b)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))) r)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sin.f64 b) r))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 r) (sin.f64 b))) (cbrt.f64 (pow.f64 (exp.f64 r) (sin.f64 b))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 r) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 r) (sin.f64 b)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 r) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 b) r))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 b) r) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 b) r) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) r)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 b) r)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sin.f64 b) r) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 r) (sin.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) r))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 b) r) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 r 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 r 3) (pow.f64 (sin.f64 b) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 b) r)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 b) r)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 b) r)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sin.f64 b) r)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 a b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 a b)) (fma.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1 (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 a b)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) 2) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 a b)) (*.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (+.f64 a b)) (+.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (cos.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (+.f64 a b)))) (cbrt.f64 (exp.f64 (cos.f64 (+.f64 a b)))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (+.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (+.f64 a b))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (+.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (+.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2) (cbrt.f64 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (+.f64 a b))) (sqrt.f64 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 3)) (/.f64 1 (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (cos.f64 (-.f64 a b)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (-.f64 a b)) (cos.f64 (+.f64 a b))) (/.f64 1 (cos.f64 (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sqrt.f64 (cos.f64 a)) (sqrt.f64 (cos.f64 b)) (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (-.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (cos.f64 (-.f64 a b)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2)) (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cos.f64 (-.f64 a b)) (*.f64 (cos.f64 (-.f64 a b)) (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 3)) (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (cos.f64 (-.f64 a b)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 (-.f64 a b)) (cos.f64 (+.f64 a b))) (cos.f64 (-.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 3))) (neg.f64 (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (cos.f64 (-.f64 a b)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cos.f64 (-.f64 a b)) (cos.f64 (+.f64 a b)))) (neg.f64 (cos.f64 (-.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (+.f64 (cos.f64 (+.f64 a b)) (cos.f64 (-.f64 a b))) 2) (*.f64 2 (-.f64 (cos.f64 (-.f64 a b)) (cos.f64 (+.f64 a b))))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 (cos.f64 (+.f64 a b)) (cos.f64 (-.f64 a b))) (-.f64 (cos.f64 (-.f64 a b)) (cos.f64 (+.f64 a b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 3)) (+.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2) (-.f64 (*.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))) (*.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (cos.f64 (+.f64 a b)) 3) (pow.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) 3)) (+.f64 (pow.f64 (cos.f64 (+.f64 a b)) 2) (-.f64 (*.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (*.f64 (cos.f64 (+.f64 a b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2) (*.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (cos.f64 (+.f64 a b)) 2) (*.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))) (-.f64 (cos.f64 (+.f64 a b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (+.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (+.f64 a b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (+.f64 a b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (+.f64 a b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 a) (cos.f64 b)))) (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 (cos.f64 a)) (cos.f64 b)) (+.f64 1 (expm1.f64 (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 a) (cos.f64 b)))) (+.f64 1 (expm1.f64 (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 a) (cos.f64 b)))) (exp.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (cos.f64 a)) (cos.f64 b)) (/.f64 1 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 a) (cos.f64 b)))) (/.f64 1 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (cos.f64 (+.f64 a b)))) (exp.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (exp.f64 (cos.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (+.f64 1 (expm1.f64 (cos.f64 (+.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))) (pow.f64 (exp.f64 (cos.f64 a)) (cos.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (exp.f64 (cos.f64 a)) (cos.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))) (+.f64 1 (expm1.f64 (*.f64 (cos.f64 a) (cos.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a))) (+.f64 1 (expm1.f64 (*.f64 (cos.f64 a) (cos.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (+.f64 a b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 (+.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (+.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (+.f64 a b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (cos.f64 b) (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (cos.f64 b) (*.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (-.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 b) (cos.f64 a) (*.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 b) (cos.f64 a) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 b) (cos.f64 a) (neg.f64 (-.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 1 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 1 (*.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 1 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 1 (neg.f64 (-.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (+.f64 a b)) 1 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (+.f64 a b)) 1 (fma.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1 (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (+.f64 a b)) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) 2) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (+.f64 a b)) 1 (*.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (+.f64 a b)) 1 (+.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (cos.f64 a) (cos.f64 b)) (neg.f64 (-.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 (+.f64 a b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 (+.f64 a b)) (fma.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1 (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 (+.f64 a b)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) 2) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 (+.f64 a b)) (*.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (cos.f64 (+.f64 a b)) (+.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (cos.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2)) (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2)) (*.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (cbrt.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2)) (neg.f64 (-.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2)) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2)) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (*.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2)) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2)) (cbrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (-.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2) (fma.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1 (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) 2) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2) (*.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2) (+.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2) (cbrt.f64 (cos.f64 (+.f64 a b))) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2) (cbrt.f64 (cos.f64 (+.f64 a b))) (fma.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1 (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2) (cbrt.f64 (cos.f64 (+.f64 a b))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) 2) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2) (cbrt.f64 (cos.f64 (+.f64 a b))) (*.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 (+.f64 a b))) 2) (cbrt.f64 (cos.f64 (+.f64 a b))) (+.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (*.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (-.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) 2) (neg.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (*.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (cos.f64 b)) 2) (*.f64 (cbrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (-.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (*.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (neg.f64 (-.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 (+.f64 a b))) (sqrt.f64 (cos.f64 (+.f64 a b))) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 (+.f64 a b))) (sqrt.f64 (cos.f64 (+.f64 a b))) (fma.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1 (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 (+.f64 a b))) (sqrt.f64 (cos.f64 (+.f64 a b))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) 2) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 (+.f64 a b))) (sqrt.f64 (cos.f64 (+.f64 a b))) (*.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 (+.f64 a b))) (sqrt.f64 (cos.f64 (+.f64 a b))) (+.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (cos.f64 b)) (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (cos.f64 b)) (*.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (cos.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 a)) (*.f64 (sqrt.f64 (cos.f64 a)) (cos.f64 b)) (neg.f64 (-.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) (neg.f64 (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (*.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cos.f64 b)) (*.f64 (sqrt.f64 (cos.f64 b)) (cos.f64 a)) (neg.f64 (-.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sin.f64 b)) (sin.f64 a) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (cos.f64 (+.f64 a b)) (cos.f64 (-.f64 a b))) 1/2 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (cos.f64 (+.f64 a b)) (cos.f64 (-.f64 a b))) 1/2 (*.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (cos.f64 (+.f64 a b)) (cos.f64 (-.f64 a b))) 1/2 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (cos.f64 (+.f64 a b)) (cos.f64 (-.f64 a b))) 1/2 (neg.f64 (-.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 3)) (/.f64 1 (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (cos.f64 (-.f64 a b)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2))) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 3)) (/.f64 1 (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (cos.f64 (-.f64 a b)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2))) (fma.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1 (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 3)) (/.f64 1 (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (cos.f64 (-.f64 a b)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) 2) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 3)) (/.f64 1 (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (cos.f64 (-.f64 a b)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2))) (*.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 3) (pow.f64 (*.f64 (sin.f64 a) (sin.f64 b)) 3)) (/.f64 1 (fma.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (cos.f64 (-.f64 a b)) (pow.f64 (*.f64 (cos.f64 a) (cos.f64 b)) 2))) (+.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (-.f64 a b)) (cos.f64 (+.f64 a b))) (/.f64 1 (cos.f64 (-.f64 a b))) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (-.f64 a b)) (cos.f64 (+.f64 a b))) (/.f64 1 (cos.f64 (-.f64 a b))) (fma.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1 (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (-.f64 a b)) (cos.f64 (+.f64 a b))) (/.f64 1 (cos.f64 (-.f64 a b))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) 2) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (-.f64 a b)) (cos.f64 (+.f64 a b))) (/.f64 1 (cos.f64 (-.f64 a b))) (*.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 (-.f64 a b)) (cos.f64 (+.f64 a b))) (/.f64 1 (cos.f64 (-.f64 a b))) (+.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (cbrt.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))) (cbrt.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (cos.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))) (cbrt.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))) (cbrt.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sqrt.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (cos.f64 (+.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))) (sqrt.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (sqrt.f64 (cos.f64 a)) (sqrt.f64 (cos.f64 b)) (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (-.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (sqrt.f64 (cos.f64 a)) (sqrt.f64 (cos.f64 b)) (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (-.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (fma.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1 (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (sqrt.f64 (cos.f64 a)) (sqrt.f64 (cos.f64 b)) (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (-.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) 2) (*.f64 (sin.f64 a) (sin.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (sqrt.f64 (cos.f64 a)) (sqrt.f64 (cos.f64 b)) (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (-.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (*.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (sqrt.f64 (cos.f64 a)) (sqrt.f64 (cos.f64 b)) (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (-.f64 (sqrt.f64 (*.f64 (cos.f64 a) (cos.f64 b))) (sqrt.f64 (*.f64 (sin.f64 a) (sin.f64 b)))) (+.f64 (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) 2)) (cbrt.f64 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (cos.f64 b)) 2)) (cbrt.f64 (cos.f64 b)) (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (cos.f64 b)) 2)) (cbrt.f64 (cos.f64 b)) (*.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (cos.f64 b)) 2)) (cbrt.f64 (cos.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (pow.f64 (cbrt.f64 (cos.f64 b)) 2)) (cbrt.f64 (cos.f64 b)) (neg.f64 (-.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (cos.f64 b))) (sqrt.f64 (cos.f64 b)) (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (cos.f64 b))) (sqrt.f64 (cos.f64 b)) (*.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (cos.f64 b))) (sqrt.f64 (cos.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 a) (sqrt.f64 (cos.f64 b))) (sqrt.f64 (cos.f64 b)) (neg.f64 (-.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (*.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (pow.f64 (cbrt.f64 (cos.f64 a)) 2)) (cbrt.f64 (cos.f64 a)) (neg.f64 (-.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (*.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cos.f64 b) (sqrt.f64 (cos.f64 a))) (sqrt.f64 (cos.f64 a)) (neg.f64 (-.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (fma.f64 (sin.f64 a) (neg.f64 (sin.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (sin.f64 a)) 1) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)) (cbrt.f64 (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (sin.f64 a)) (sqrt.f64 (sin.f64 b))) (sqrt.f64 (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b)))))))"]],"rules":[["egg-rr",181],["egg-rr",18],["egg-rr",48],["egg-rr",20]],"stop":[["node limit",1]],"time":74.679931640625,"type":"rewrite"},{"count":[[295,320]],"egraph":[[2,1729,872,0.014555708],[1,499,917,0.003485458],[0,151,967,0.000764875]],"inputs":[["(*.f64 (sin.f64 b) a)","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (*.f64 (sin.f64 b) a))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5))) (*.f64 (sin.f64 b) a)))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 b) (pow.f64 a 7))) (+.f64 (*.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5))) (*.f64 (sin.f64 b) a))))","(*.f64 (sin.f64 a) b)","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 (sin.f64 a) b))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (+.f64 (*.f64 (sin.f64 a) b) (*.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 a) (pow.f64 b 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (+.f64 (*.f64 (sin.f64 a) b) (*.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5))))))","(/.f64 (*.f64 b r) (cos.f64 a))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 (pow.f64 b 2) r)) (pow.f64 (cos.f64 a) 2)) (/.f64 (*.f64 r b) (cos.f64 a)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3))))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (+.f64 (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 4))))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (cos.f64 b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))","(*.f64 r b)","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 b 3) r)) (*.f64 r b))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 b 3) r)) (+.f64 (*.f64 r b) (*.f64 1/120 (*.f64 (pow.f64 b 5) r))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 b 3) r)) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 b 7) r)) (+.f64 (*.f64 r b) (*.f64 1/120 (*.f64 (pow.f64 b 5) r)))))","(cos.f64 b)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (cos.f64 b))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b))))","(cos.f64 a)","(+.f64 (cos.f64 a) (*.f64 -1 (*.f64 (sin.f64 a) b)))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2)))))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sin.f64 b) a)","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (*.f64 (sin.f64 b) a))","(fma.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (*.f64 (sin.f64 b) a))","(fma.f64 (sin.f64 b) a (*.f64 (sin.f64 b) (*.f64 (pow.f64 a 3) -1/6)))","(*.f64 (sin.f64 b) (+.f64 a (*.f64 -1/6 (pow.f64 a 3))))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5))) (*.f64 (sin.f64 b) a)))","(fma.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5)) (*.f64 (sin.f64 b) a)))","(fma.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (*.f64 (sin.f64 b) (+.f64 a (*.f64 1/120 (pow.f64 a 5)))))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 b) (pow.f64 a 7))) (+.f64 (*.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5))) (*.f64 (sin.f64 b) a))))","(fma.f64 -1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 -1/5040 (*.f64 (sin.f64 b) (pow.f64 a 7)) (fma.f64 1/120 (*.f64 (sin.f64 b) (pow.f64 a 5)) (*.f64 (sin.f64 b) a))))","(+.f64 (*.f64 (sin.f64 b) (+.f64 a (*.f64 1/120 (pow.f64 a 5)))) (*.f64 (sin.f64 b) (+.f64 (*.f64 -1/6 (pow.f64 a 3)) (*.f64 -1/5040 (pow.f64 a 7)))))","(*.f64 (sin.f64 a) b)","(*.f64 b (sin.f64 a))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 (sin.f64 a) b))","(fma.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (*.f64 b (sin.f64 a)))","(fma.f64 b (sin.f64 a) (*.f64 (pow.f64 b 3) (*.f64 -1/6 (sin.f64 a))))","(*.f64 (sin.f64 a) (+.f64 b (*.f64 -1/6 (pow.f64 b 3))))","(+.f64 (*.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (+.f64 (*.f64 (sin.f64 a) b) (*.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5)))))","(fma.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (fma.f64 (sin.f64 a) b (*.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5)))))","(fma.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (fma.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5)) (*.f64 b (sin.f64 a))))","(fma.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (*.f64 (sin.f64 a) (+.f64 b (*.f64 1/120 (pow.f64 b 5)))))","(+.f64 (*.f64 -1/5040 (*.f64 (sin.f64 a) (pow.f64 b 7))) (+.f64 (*.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (+.f64 (*.f64 (sin.f64 a) b) (*.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5))))))","(fma.f64 -1/5040 (*.f64 (sin.f64 a) (pow.f64 b 7)) (fma.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (fma.f64 (sin.f64 a) b (*.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5))))))","(fma.f64 -1/5040 (*.f64 (sin.f64 a) (pow.f64 b 7)) (fma.f64 -1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (fma.f64 1/120 (*.f64 (sin.f64 a) (pow.f64 b 5)) (*.f64 b (sin.f64 a)))))","(+.f64 (*.f64 (sin.f64 a) (+.f64 b (*.f64 1/120 (pow.f64 b 5)))) (*.f64 (sin.f64 a) (+.f64 (*.f64 -1/6 (pow.f64 b 3)) (*.f64 -1/5040 (pow.f64 b 7)))))","(/.f64 (*.f64 b r) (cos.f64 a))","(/.f64 b (/.f64 (cos.f64 a) r))","(*.f64 (/.f64 r (cos.f64 a)) b)","(*.f64 b (/.f64 r (cos.f64 a)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 (pow.f64 b 2) r)) (pow.f64 (cos.f64 a) 2)) (/.f64 (*.f64 r b) (cos.f64 a)))","(+.f64 (/.f64 b (/.f64 (cos.f64 a) r)) (/.f64 (*.f64 (sin.f64 a) (*.f64 r (*.f64 b b))) (pow.f64 (cos.f64 a) 2)))","(+.f64 (*.f64 (/.f64 r (cos.f64 a)) b) (/.f64 (*.f64 b (*.f64 b r)) (/.f64 (pow.f64 (cos.f64 a) 2) (sin.f64 a))))","(+.f64 (*.f64 b (/.f64 r (cos.f64 a))) (*.f64 (*.f64 (/.f64 r (pow.f64 (cos.f64 a) 2)) (sin.f64 a)) (*.f64 b b)))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3))))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (*.f64 b b))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 b (/.f64 (cos.f64 a) r)) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r))))))))","(+.f64 (/.f64 (*.f64 b (*.f64 b r)) (/.f64 (pow.f64 (cos.f64 a) 2) (sin.f64 a))) (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (pow.f64 (sin.f64 a) 2)) (/.f64 (pow.f64 (cos.f64 a) 3) r))) (*.f64 (/.f64 r (cos.f64 a)) b)))","(+.f64 (*.f64 (*.f64 (/.f64 r (pow.f64 (cos.f64 a) 2)) (sin.f64 a)) (*.f64 b b)) (fma.f64 (pow.f64 b 3) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 r (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)))) (*.f64 b (/.f64 r (cos.f64 a)))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (pow.f64 b 2))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (+.f64 (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 a) 2) r) (pow.f64 (cos.f64 a) 3)))))) (cos.f64 a))) (+.f64 (*.f64 1/6 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2))))) (pow.f64 b 4))))))","(+.f64 (/.f64 (*.f64 (sin.f64 a) (*.f64 r (*.f64 b b))) (pow.f64 (cos.f64 a) 2)) (+.f64 (/.f64 b (/.f64 (cos.f64 a) r)) (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r))))) (neg.f64 (*.f64 (fma.f64 -1 (/.f64 (sin.f64 a) (/.f64 (cos.f64 a) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 (pow.f64 (sin.f64 a) 2) (/.f64 (pow.f64 (cos.f64 a) 3) r))))))) (*.f64 (/.f64 (sin.f64 a) (/.f64 (pow.f64 (cos.f64 a) 2) r)) -1/3)) (pow.f64 b 4))))))","(+.f64 (/.f64 (*.f64 b (*.f64 b r)) (/.f64 (pow.f64 (cos.f64 a) 2) (sin.f64 a))) (-.f64 (fma.f64 (pow.f64 b 3) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (pow.f64 (sin.f64 a) 2)) (/.f64 (pow.f64 (cos.f64 a) 3) r))) (*.f64 (/.f64 r (cos.f64 a)) b)) (*.f64 (-.f64 (*.f64 (/.f64 (*.f64 (sin.f64 a) r) (pow.f64 (cos.f64 a) 2)) -1/3) (*.f64 (/.f64 (sin.f64 a) (cos.f64 a)) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (pow.f64 (sin.f64 a) 2)) (/.f64 (pow.f64 (cos.f64 a) 3) r))))) (pow.f64 b 4))))","(-.f64 (fma.f64 (pow.f64 b 3) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 r (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)))) (*.f64 b (/.f64 r (cos.f64 a)))) (-.f64 (*.f64 (-.f64 (*.f64 (/.f64 (*.f64 (sin.f64 a) -1/3) (pow.f64 (cos.f64 a) 2)) r) (*.f64 (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 r (/.f64 (pow.f64 (sin.f64 a) 2) (pow.f64 (cos.f64 a) 3)))) (/.f64 (sin.f64 a) (cos.f64 a)))) (pow.f64 b 4)) (*.f64 (*.f64 (/.f64 r (pow.f64 (cos.f64 a) 2)) (sin.f64 a)) (*.f64 b b))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r))","(/.f64 r (/.f64 (cos.f64 b) (sin.f64 b)))","(*.f64 (/.f64 r (cos.f64 b)) (sin.f64 b))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))","(+.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 a r))))","(+.f64 (/.f64 r (/.f64 (cos.f64 b) (sin.f64 b))) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)))","(+.f64 (*.f64 (/.f64 r (cos.f64 b)) (sin.f64 b)) (*.f64 (*.f64 a r) (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))","(+.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 a r))) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (/.f64 (pow.f64 (cos.f64 b) 3) r)) (/.f64 (*.f64 -1/2 (*.f64 (sin.f64 b) r)) (cos.f64 b)))) (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r))))","(+.f64 (/.f64 r (/.f64 (cos.f64 b) (sin.f64 b))) (-.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)) (*.f64 a (*.f64 a (-.f64 (/.f64 (*.f64 (*.f64 r -1/2) (sin.f64 b)) (cos.f64 b)) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)) r))))))","(+.f64 (*.f64 (/.f64 r (cos.f64 b)) (sin.f64 b)) (-.f64 (*.f64 (*.f64 a r) (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2))) (*.f64 (*.f64 a a) (fma.f64 -1/2 (*.f64 (/.f64 r (cos.f64 b)) (sin.f64 b)) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)) (neg.f64 r))))))","(+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) (*.f64 a r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))))) (cos.f64 b)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))) (*.f64 1/6 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 2) r) (pow.f64 (cos.f64 b) 2))))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 b) 3) r) (pow.f64 (cos.f64 b) 3))) (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))) (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)))))","(+.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) (*.f64 a r))) (fma.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (sin.f64 b) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (/.f64 (pow.f64 (cos.f64 b) 3) r)) (/.f64 (*.f64 -1/2 (*.f64 (sin.f64 b) r)) (cos.f64 b)))) (cos.f64 b)) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (/.f64 (pow.f64 (cos.f64 b) 2) r)) -1/3))) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 b) 3) (/.f64 (pow.f64 (cos.f64 b) 3) r)) (/.f64 (*.f64 -1/2 (*.f64 (sin.f64 b) r)) (cos.f64 b)))) (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)))))","(+.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) (*.f64 a r)) (-.f64 (-.f64 (/.f64 r (/.f64 (cos.f64 b) (sin.f64 b))) (*.f64 a (*.f64 a (-.f64 (/.f64 (*.f64 (*.f64 r -1/2) (sin.f64 b)) (cos.f64 b)) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)) r))))) (*.f64 (pow.f64 a 3) (fma.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2)) r) -1/3 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (-.f64 (/.f64 (*.f64 (*.f64 r -1/2) (sin.f64 b)) (cos.f64 b)) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)) r)))))))","(+.f64 (*.f64 (*.f64 a r) (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2))) (-.f64 (*.f64 (/.f64 r (cos.f64 b)) (sin.f64 b)) (*.f64 (*.f64 a a) (+.f64 (*.f64 a (fma.f64 (*.f64 r (/.f64 (pow.f64 (sin.f64 b) 2) (pow.f64 (cos.f64 b) 2))) -1/3 (*.f64 (fma.f64 -1/2 (*.f64 (/.f64 r (cos.f64 b)) (sin.f64 b)) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)) (neg.f64 r))) (/.f64 (sin.f64 b) (cos.f64 b))))) (fma.f64 -1/2 (*.f64 (/.f64 r (cos.f64 b)) (sin.f64 b)) (*.f64 (/.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (cos.f64 b) 3)) (neg.f64 r)))))))","(*.f64 r b)","(*.f64 b r)","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 b 3) r)) (*.f64 r b))","(fma.f64 -1/6 (*.f64 (pow.f64 b 3) r) (*.f64 b r))","(*.f64 r (+.f64 b (*.f64 -1/6 (pow.f64 b 3))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 b 3) r)) (+.f64 (*.f64 r b) (*.f64 1/120 (*.f64 (pow.f64 b 5) r))))","(fma.f64 -1/6 (*.f64 (pow.f64 b 3) r) (fma.f64 r b (*.f64 1/120 (*.f64 (pow.f64 b 5) r))))","(fma.f64 -1/6 (*.f64 (pow.f64 b 3) r) (*.f64 r (+.f64 b (*.f64 1/120 (pow.f64 b 5)))))","(*.f64 r (+.f64 (*.f64 -1/6 (pow.f64 b 3)) (+.f64 b (*.f64 1/120 (pow.f64 b 5)))))","(+.f64 (*.f64 -1/6 (*.f64 (pow.f64 b 3) r)) (+.f64 (*.f64 -1/5040 (*.f64 (pow.f64 b 7) r)) (+.f64 (*.f64 r b) (*.f64 1/120 (*.f64 (pow.f64 b 5) r)))))","(fma.f64 -1/6 (*.f64 (pow.f64 b 3) r) (fma.f64 -1/5040 (*.f64 (pow.f64 b 7) r) (fma.f64 r b (*.f64 1/120 (*.f64 (pow.f64 b 5) r)))))","(fma.f64 -1/6 (*.f64 (pow.f64 b 3) r) (fma.f64 -1/5040 (*.f64 (pow.f64 b 7) r) (*.f64 r (+.f64 b (*.f64 1/120 (pow.f64 b 5))))))","(*.f64 r (+.f64 (+.f64 b (*.f64 1/120 (pow.f64 b 5))) (+.f64 (*.f64 -1/6 (pow.f64 b 3)) (*.f64 -1/5040 (pow.f64 b 7)))))","(cos.f64 b)","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (cos.f64 b))","(fma.f64 -1 (*.f64 (sin.f64 b) a) (cos.f64 b))","(-.f64 (cos.f64 b) (*.f64 (sin.f64 b) a))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b)))","(fma.f64 -1 (*.f64 (sin.f64 b) a) (fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (cos.f64 b)))","(-.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 a a)) 1) (cos.f64 b)) (*.f64 (sin.f64 b) a))","(-.f64 (fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (cos.f64 b)) (*.f64 (sin.f64 b) a))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 b) a)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (cos.f64 b))) (cos.f64 b))))","(fma.f64 -1 (*.f64 (sin.f64 b) a) (fma.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)) (fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (cos.f64 b))))","(-.f64 (fma.f64 (*.f64 (sin.f64 b) (pow.f64 a 3)) 1/6 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 a a)) 1) (cos.f64 b))) (*.f64 (sin.f64 b) a))","(+.f64 (fma.f64 -1/2 (*.f64 (cos.f64 b) (*.f64 a a)) (cos.f64 b)) (*.f64 (sin.f64 b) (+.f64 (*.f64 (pow.f64 a 3) 1/6) (neg.f64 a))))","(cos.f64 a)","(+.f64 (cos.f64 a) (*.f64 -1 (*.f64 (sin.f64 a) b)))","(+.f64 (cos.f64 a) (neg.f64 (*.f64 b (sin.f64 a))))","(fma.f64 (neg.f64 (sin.f64 a)) b (cos.f64 a))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2)))))","(+.f64 (cos.f64 a) (fma.f64 -1 (*.f64 b (sin.f64 a)) (*.f64 -1/2 (*.f64 (cos.f64 a) (*.f64 b b)))))","(+.f64 (fma.f64 (neg.f64 (sin.f64 a)) b (cos.f64 a)) (*.f64 (cos.f64 a) (*.f64 (*.f64 b b) -1/2)))","(+.f64 (cos.f64 a) (*.f64 b (-.f64 (*.f64 (cos.f64 a) (*.f64 -1/2 b)) (sin.f64 a))))","(+.f64 (cos.f64 a) (+.f64 (*.f64 -1 (*.f64 (sin.f64 a) b)) (+.f64 (*.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3))) (*.f64 -1/2 (*.f64 (cos.f64 a) (pow.f64 b 2))))))","(+.f64 (cos.f64 a) (fma.f64 -1 (*.f64 b (sin.f64 a)) (fma.f64 1/6 (*.f64 (sin.f64 a) (pow.f64 b 3)) (*.f64 -1/2 (*.f64 (cos.f64 a) (*.f64 b b))))))","(+.f64 (fma.f64 (neg.f64 (sin.f64 a)) b (cos.f64 a)) (fma.f64 (*.f64 (sin.f64 a) (pow.f64 b 3)) 1/6 (*.f64 (cos.f64 a) (*.f64 (*.f64 b b) -1/2))))","(+.f64 (*.f64 (sin.f64 a) (+.f64 (neg.f64 b) (*.f64 (pow.f64 b 3) 1/6))) (*.f64 (+.f64 (*.f64 b (*.f64 b -1/2)) 1) (cos.f64 a)))"]],"stop":[["node limit",1]],"time":37.31298828125,"type":"simplify"},{"compiler":[[8179,1873]],"time":46.41796875,"type":"eval"},{"alts":[["(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (log.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)))))","fresh",0.3940285119143357],["(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","fresh",0.38738887930507393],["(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","fresh",14.198915000768578],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (*.f64 (neg.f64 (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (cbrt.f64 (sin.f64 a)) (*.f64 (cos.f64 b) (cos.f64 a)))))","fresh",0.37964638675818835],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","next",0.3464050781475362],["(*.f64 (sin.f64 b) (/.f64 r (*.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) (/.f64 1 (cos.f64 (-.f64 b a))))))","fresh",14.195378819147715],["(*.f64 (*.f64 (sin.f64 b) r) (/.f64 1 (cos.f64 (+.f64 a b))))","fresh",14.183953770305418],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","fresh",0.5847690551370306],["(/.f64 (pow.f64 (sqrt.f64 (*.f64 (sin.f64 b) r)) 2) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","fresh",31.502291369536636],["(*.f64 r (*.f64 (sin.f64 b) (/.f64 1 (cos.f64 (+.f64 a b)))))","fresh",14.193361600020053],["(/.f64 (*.f64 (sin.f64 b) r) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))) (pow.f64 (exp.f64 (cos.f64 a)) (cos.f64 b)))))","fresh",0.5712876739700579],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","fresh",0.45224389652663044],["(*.f64 (sin.f64 b) (/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))","done",0.32982260745286224]],"compiler":[[21,14],[19,12],[12,8],[26,16],[30,14],[24,14],[14,10],[40,18],[22,15],[14,10],[23,16],[37,18],[19,12],[21,14],[19,12],[12,8],[26,16],[30,14],[24,14],[14,10],[40,18],[22,15],[14,10],[23,16],[37,18]],"count":[[333,13]],"kept":[{"done":[1,1],"fresh":[11,7],"new":[320,5],"picked":[1,0]}],"min-error":[0.015625],"time":136.22607421875,"type":"prune"},{"compiler":[[123,14]],"locations":[["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))",0.203125,true],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))",0.2421875,true],["(*.f64 (sin.f64 b) (sin.f64 a))",0.2421875,false],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))",52.90630866908258,true]],"time":16.243896484375,"type":"localize"},{"count":[[3,84]],"series":[["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","a","-inf",0.675048828125],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","a","inf",0.64501953125],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","a","0",1.001953125],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","r","-inf",0.416015625],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","r","inf",0.738037109375],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","r","0",0.7490234375],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","b","-inf",0.802001953125],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","b","inf",0.81494140625],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","b","0",0.842041015625],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))","a","-inf",0.23095703125],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))","a","inf",0.202880859375],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))","a","0",0.3671875],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))","b","-inf",0.204833984375],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))","b","inf",0.2431640625],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))","b","0",0.372802734375],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))","a","-inf",0.388916015625],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))","a","inf",0.342041015625],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))","a","0",0.541015625],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))","b","-inf",0.35888671875],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))","b","inf",0.39599609375],["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))","b","0",0.47509765625]],"time":11.238037109375,"type":"series"},{"count":[[3,95]],"egraph":[[2,4194,57,0.031176876],[1,313,63,0.0058078339999999996],[0,15,90,0.000347625]],"inputs":[["(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))","(fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))","(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))) (cbrt.f64 (exp.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))))) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))) 2)) (cbrt.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) (sqrt.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (+.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 2) (-.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 2) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 2) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 2)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))) (*.f64 (sin.f64 b) (sin.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3)))) (cbrt.f64 (exp.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3)))))) (log.f64 (cbrt.f64 (exp.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3))))) (log.f64 (sqrt.f64 (exp.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3))) (pow.f64 (cbrt.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3))) 2) (cbrt.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3))) (sqrt.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3) (pow.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))) 3)) (+.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 2) (-.f64 (pow.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))) 2) (*.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 2) (pow.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))) 2)) (-.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (exp.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a)))) (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))) (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))) (+.f64 1 (expm1.f64 (*.f64 (sin.f64 b) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log.f64 (pow.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)) 3))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r)))) (cbrt.f64 (exp.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) (*.f64 (sin.f64 b) r)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 b) r) (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (sin.f64 b) r)) (neg.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 b) r) 1) (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 b) r) (pow.f64 (cbrt.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))) 2)) (cbrt.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (sin.f64 b) r) (sqrt.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))))) (sqrt.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 r) (sin.f64 b)) (neg.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 b) (neg.f64 r)) (neg.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (/.f64 r (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (/.f64 r (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))) 3) (pow.f64 (sin.f64 b) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) (*.f64 (sin.f64 b) r)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 b) 3) (pow.f64 (/.f64 r (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 r (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a))))) 3) (pow.f64 (sin.f64 b) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r))) 1))))))"]],"rules":[["egg-rr",30],["egg-rr",32],["egg-rr",33]],"stop":[["node limit",1]],"time":58.51904296875,"type":"rewrite"},{"count":[[179,142]],"egraph":[[2,2890,1621,0.018124459],[1,693,1798,0.005228667],[0,194,2027,0.001054]],"inputs":[["(*.f64 (+.f64 (sin.f64 a) (*.f64 -1 (sin.f64 a))) b)","(+.f64 (*.f64 (+.f64 (sin.f64 a) (*.f64 -1 (sin.f64 a))) b) (*.f64 (+.f64 (*.f64 1/6 (sin.f64 a)) (*.f64 -1/6 (sin.f64 a))) (pow.f64 b 3)))","(+.f64 (*.f64 (+.f64 (sin.f64 a) (*.f64 -1 (sin.f64 a))) b) (+.f64 (*.f64 (pow.f64 b 5) (+.f64 (*.f64 1/120 (sin.f64 a)) (*.f64 -1/120 (sin.f64 a)))) (*.f64 (+.f64 (*.f64 1/6 (sin.f64 a)) (*.f64 -1/6 (sin.f64 a))) (pow.f64 b 3))))","(+.f64 (*.f64 (+.f64 (sin.f64 a) (*.f64 -1 (sin.f64 a))) b) (+.f64 (*.f64 (pow.f64 b 5) (+.f64 (*.f64 1/120 (sin.f64 a)) (*.f64 -1/120 (sin.f64 a)))) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (sin.f64 a)) (*.f64 -1/6 (sin.f64 a))) (pow.f64 b 3)) (*.f64 (+.f64 (*.f64 1/5040 (sin.f64 a)) (*.f64 -1/5040 (sin.f64 a))) (pow.f64 b 7)))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 a (+.f64 (*.f64 -1 (sin.f64 b)) (sin.f64 b)))","(+.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 -1/6 (sin.f64 b)) (*.f64 1/6 (sin.f64 b)))) (*.f64 a (+.f64 (*.f64 -1 (sin.f64 b)) (sin.f64 b))))","(+.f64 (*.f64 (pow.f64 a 5) (+.f64 (*.f64 1/120 (sin.f64 b)) (*.f64 -1/120 (sin.f64 b)))) (+.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 -1/6 (sin.f64 b)) (*.f64 1/6 (sin.f64 b)))) (*.f64 a (+.f64 (*.f64 -1 (sin.f64 b)) (sin.f64 b)))))","(+.f64 (*.f64 (pow.f64 a 7) (+.f64 (*.f64 -1/5040 (sin.f64 b)) (*.f64 1/5040 (sin.f64 b)))) (+.f64 (*.f64 (pow.f64 a 5) (+.f64 (*.f64 1/120 (sin.f64 b)) (*.f64 -1/120 (sin.f64 b)))) (+.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 -1/6 (sin.f64 b)) (*.f64 1/6 (sin.f64 b)))) (*.f64 a (+.f64 (*.f64 -1 (sin.f64 b)) (sin.f64 b))))))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 b (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a))))","(+.f64 (*.f64 b (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a)))) (*.f64 (pow.f64 b 3) (+.f64 (*.f64 -1/6 (sin.f64 a)) (*.f64 1/3 (sin.f64 a)))))","(+.f64 (*.f64 b (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a)))) (+.f64 (*.f64 (+.f64 (*.f64 1/120 (sin.f64 a)) (*.f64 -1/60 (sin.f64 a))) (pow.f64 b 5)) (*.f64 (pow.f64 b 3) (+.f64 (*.f64 -1/6 (sin.f64 a)) (*.f64 1/3 (sin.f64 a))))))","(+.f64 (*.f64 b (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a)))) (+.f64 (*.f64 (+.f64 (*.f64 1/120 (sin.f64 a)) (*.f64 -1/60 (sin.f64 a))) (pow.f64 b 5)) (+.f64 (*.f64 (+.f64 (*.f64 -1/5040 (sin.f64 a)) (*.f64 1/2520 (sin.f64 a))) (pow.f64 b 7)) (*.f64 (pow.f64 b 3) (+.f64 (*.f64 -1/6 (sin.f64 a)) (*.f64 1/3 (sin.f64 a)))))))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 a (+.f64 (*.f64 -2 (sin.f64 b)) (sin.f64 b)))","(+.f64 (*.f64 a (+.f64 (*.f64 -2 (sin.f64 b)) (sin.f64 b))) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 1/3 (sin.f64 b)) (*.f64 -1/6 (sin.f64 b)))))","(+.f64 (*.f64 (+.f64 (*.f64 1/120 (sin.f64 b)) (*.f64 -1/60 (sin.f64 b))) (pow.f64 a 5)) (+.f64 (*.f64 a (+.f64 (*.f64 -2 (sin.f64 b)) (sin.f64 b))) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 1/3 (sin.f64 b)) (*.f64 -1/6 (sin.f64 b))))))","(+.f64 (*.f64 (+.f64 (*.f64 1/120 (sin.f64 b)) (*.f64 -1/60 (sin.f64 b))) (pow.f64 a 5)) (+.f64 (*.f64 (+.f64 (*.f64 -1/5040 (sin.f64 b)) (*.f64 1/2520 (sin.f64 b))) (pow.f64 a 7)) (+.f64 (*.f64 a (+.f64 (*.f64 -2 (sin.f64 b)) (sin.f64 b))) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 1/3 (sin.f64 b)) (*.f64 -1/6 (sin.f64 b)))))))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(/.f64 (*.f64 b r) (cos.f64 a))","(+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (*.f64 -1 (/.f64 (*.f64 r (*.f64 (pow.f64 b 2) (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a))))) (pow.f64 (cos.f64 a) 2))))","(+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 r (*.f64 (pow.f64 b 2) (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a))))) (pow.f64 (cos.f64 a) 2))) (*.f64 (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 r (pow.f64 (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a))) 2)) (pow.f64 (cos.f64 a) 3))))) (pow.f64 b 3))))","(+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 r (*.f64 (pow.f64 b 2) (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a))))) (pow.f64 (cos.f64 a) 2))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 b 4) (+.f64 (*.f64 1/2 (/.f64 (*.f64 r (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a)))) (pow.f64 (cos.f64 a) 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (sin.f64 a)) (*.f64 -1/6 (sin.f64 a))) r) (pow.f64 (cos.f64 a) 2)) (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 r (pow.f64 (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a))) 2)) (pow.f64 (cos.f64 a) 3))))) (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a)))) (cos.f64 a)))))) (*.f64 (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 r (pow.f64 (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a))) 2)) (pow.f64 (cos.f64 a) 3))))) (pow.f64 b 3)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))","(+.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)) (*.f64 -1 (/.f64 (*.f64 (sin.f64 b) (*.f64 a (*.f64 r (+.f64 (sin.f64 b) (*.f64 -2 (sin.f64 b)))))) (pow.f64 (cos.f64 b) 2))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 b) (*.f64 r (*.f64 (+.f64 (*.f64 -2 (sin.f64 b)) (sin.f64 b)) (+.f64 (sin.f64 b) (*.f64 -2 (sin.f64 b)))))) (pow.f64 (cos.f64 b) 3)))))) (+.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)) (*.f64 -1 (/.f64 (*.f64 (sin.f64 b) (*.f64 a (*.f64 r (+.f64 (sin.f64 b) (*.f64 -2 (sin.f64 b)))))) (pow.f64 (cos.f64 b) 2)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 (+.f64 (*.f64 1/3 (sin.f64 b)) (*.f64 -1/6 (sin.f64 b))) r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 b) (*.f64 r (+.f64 (*.f64 -2 (sin.f64 b)) (sin.f64 b)))) (pow.f64 (cos.f64 b) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 b) (*.f64 r (*.f64 (+.f64 (*.f64 -2 (sin.f64 b)) (sin.f64 b)) (+.f64 (sin.f64 b) (*.f64 -2 (sin.f64 b)))))) (pow.f64 (cos.f64 b) 3)))) (+.f64 (sin.f64 b) (*.f64 -2 (sin.f64 b)))) (cos.f64 b))))) (pow.f64 a 3))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 b) (*.f64 r (*.f64 (+.f64 (*.f64 -2 (sin.f64 b)) (sin.f64 b)) (+.f64 (sin.f64 b) (*.f64 -2 (sin.f64 b)))))) (pow.f64 (cos.f64 b) 3)))))) (+.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)) (*.f64 -1 (/.f64 (*.f64 (sin.f64 b) (*.f64 a (*.f64 r (+.f64 (sin.f64 b) (*.f64 -2 (sin.f64 b)))))) (pow.f64 (cos.f64 b) 2))))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (+.f64 (sin.f64 a) (*.f64 -1 (sin.f64 a))) b)","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 (+.f64 (sin.f64 a) (*.f64 -1 (sin.f64 a))) b) (*.f64 (+.f64 (*.f64 1/6 (sin.f64 a)) (*.f64 -1/6 (sin.f64 a))) (pow.f64 b 3)))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 (+.f64 (sin.f64 a) (*.f64 -1 (sin.f64 a))) b) (+.f64 (*.f64 (pow.f64 b 5) (+.f64 (*.f64 1/120 (sin.f64 a)) (*.f64 -1/120 (sin.f64 a)))) (*.f64 (+.f64 (*.f64 1/6 (sin.f64 a)) (*.f64 -1/6 (sin.f64 a))) (pow.f64 b 3))))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 (+.f64 (sin.f64 a) (*.f64 -1 (sin.f64 a))) b) (+.f64 (*.f64 (pow.f64 b 5) (+.f64 (*.f64 1/120 (sin.f64 a)) (*.f64 -1/120 (sin.f64 a)))) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (sin.f64 a)) (*.f64 -1/6 (sin.f64 a))) (pow.f64 b 3)) (*.f64 (+.f64 (*.f64 1/5040 (sin.f64 a)) (*.f64 -1/5040 (sin.f64 a))) (pow.f64 b 7)))))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(*.f64 a (+.f64 (*.f64 -1 (sin.f64 b)) (sin.f64 b)))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 -1/6 (sin.f64 b)) (*.f64 1/6 (sin.f64 b)))) (*.f64 a (+.f64 (*.f64 -1 (sin.f64 b)) (sin.f64 b))))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 (pow.f64 a 5) (+.f64 (*.f64 1/120 (sin.f64 b)) (*.f64 -1/120 (sin.f64 b)))) (+.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 -1/6 (sin.f64 b)) (*.f64 1/6 (sin.f64 b)))) (*.f64 a (+.f64 (*.f64 -1 (sin.f64 b)) (sin.f64 b)))))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 (pow.f64 a 7) (+.f64 (*.f64 -1/5040 (sin.f64 b)) (*.f64 1/5040 (sin.f64 b)))) (+.f64 (*.f64 (pow.f64 a 5) (+.f64 (*.f64 1/120 (sin.f64 b)) (*.f64 -1/120 (sin.f64 b)))) (+.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 -1/6 (sin.f64 b)) (*.f64 1/6 (sin.f64 b)))) (*.f64 a (+.f64 (*.f64 -1 (sin.f64 b)) (sin.f64 b))))))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(+.f64 (*.f64 -1 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (*.f64 0 (sin.f64 a)) b)","(*.f64 b 0)","0","(*.f64 b (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a))))","(*.f64 b (neg.f64 (sin.f64 a)))","(*.f64 (sin.f64 a) (neg.f64 b))","(+.f64 (*.f64 b (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a)))) (*.f64 (pow.f64 b 3) (+.f64 (*.f64 -1/6 (sin.f64 a)) (*.f64 1/3 (sin.f64 a)))))","(fma.f64 b (neg.f64 (sin.f64 a)) (*.f64 (pow.f64 b 3) (*.f64 (sin.f64 a) 1/6)))","(*.f64 (sin.f64 a) (+.f64 (neg.f64 b) (*.f64 1/6 (pow.f64 b 3))))","(+.f64 (*.f64 b (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a)))) (+.f64 (*.f64 (+.f64 (*.f64 1/120 (sin.f64 a)) (*.f64 -1/60 (sin.f64 a))) (pow.f64 b 5)) (*.f64 (pow.f64 b 3) (+.f64 (*.f64 -1/6 (sin.f64 a)) (*.f64 1/3 (sin.f64 a))))))","(fma.f64 b (neg.f64 (sin.f64 a)) (fma.f64 (*.f64 (sin.f64 a) -1/120) (pow.f64 b 5) (*.f64 (pow.f64 b 3) (*.f64 (sin.f64 a) 1/6))))","(fma.f64 b (neg.f64 (sin.f64 a)) (fma.f64 (pow.f64 b 3) (*.f64 (sin.f64 a) 1/6) (*.f64 (sin.f64 a) (*.f64 -1/120 (pow.f64 b 5)))))","(-.f64 (*.f64 (sin.f64 a) (+.f64 (*.f64 (pow.f64 b 3) 1/6) (*.f64 (pow.f64 b 5) -1/120))) (*.f64 (sin.f64 a) b))","(+.f64 (*.f64 b (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a)))) (+.f64 (*.f64 (+.f64 (*.f64 1/120 (sin.f64 a)) (*.f64 -1/60 (sin.f64 a))) (pow.f64 b 5)) (+.f64 (*.f64 (+.f64 (*.f64 -1/5040 (sin.f64 a)) (*.f64 1/2520 (sin.f64 a))) (pow.f64 b 7)) (*.f64 (pow.f64 b 3) (+.f64 (*.f64 -1/6 (sin.f64 a)) (*.f64 1/3 (sin.f64 a)))))))","(fma.f64 b (neg.f64 (sin.f64 a)) (fma.f64 (*.f64 (sin.f64 a) -1/120) (pow.f64 b 5) (fma.f64 (*.f64 (sin.f64 a) 1/5040) (pow.f64 b 7) (*.f64 (pow.f64 b 3) (*.f64 (sin.f64 a) 1/6)))))","(fma.f64 b (neg.f64 (sin.f64 a)) (fma.f64 (pow.f64 b 5) (*.f64 (sin.f64 a) -1/120) (fma.f64 (pow.f64 b 3) (*.f64 (sin.f64 a) 1/6) (*.f64 (sin.f64 a) (*.f64 1/5040 (pow.f64 b 7))))))","(+.f64 (*.f64 (sin.f64 a) (+.f64 (*.f64 (pow.f64 b 3) 1/6) (*.f64 (pow.f64 b 7) 1/5040))) (*.f64 (sin.f64 a) (+.f64 (neg.f64 b) (*.f64 -1/120 (pow.f64 b 5)))))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","(*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","(*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","(*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","(*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","(*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","(*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","(*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","(*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))","(*.f64 a (+.f64 (*.f64 -2 (sin.f64 b)) (sin.f64 b)))","(*.f64 a (neg.f64 (sin.f64 b)))","(+.f64 (*.f64 a (+.f64 (*.f64 -2 (sin.f64 b)) (sin.f64 b))) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 1/3 (sin.f64 b)) (*.f64 -1/6 (sin.f64 b)))))","(fma.f64 a (neg.f64 (sin.f64 b)) (*.f64 (pow.f64 a 3) (*.f64 1/6 (sin.f64 b))))","(fma.f64 a (neg.f64 (sin.f64 b)) (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))))","(*.f64 (sin.f64 b) (+.f64 (neg.f64 a) (*.f64 1/6 (pow.f64 a 3))))","(+.f64 (*.f64 (+.f64 (*.f64 1/120 (sin.f64 b)) (*.f64 -1/60 (sin.f64 b))) (pow.f64 a 5)) (+.f64 (*.f64 a (+.f64 (*.f64 -2 (sin.f64 b)) (sin.f64 b))) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 1/3 (sin.f64 b)) (*.f64 -1/6 (sin.f64 b))))))","(fma.f64 (*.f64 -1/120 (sin.f64 b)) (pow.f64 a 5) (fma.f64 a (neg.f64 (sin.f64 b)) (*.f64 (pow.f64 a 3) (*.f64 1/6 (sin.f64 b)))))","(fma.f64 (pow.f64 a 5) (*.f64 -1/120 (sin.f64 b)) (fma.f64 a (neg.f64 (sin.f64 b)) (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3)))))","(-.f64 (*.f64 (sin.f64 b) (+.f64 (*.f64 (pow.f64 a 5) -1/120) (*.f64 (pow.f64 a 3) 1/6))) (*.f64 a (sin.f64 b)))","(+.f64 (*.f64 (+.f64 (*.f64 1/120 (sin.f64 b)) (*.f64 -1/60 (sin.f64 b))) (pow.f64 a 5)) (+.f64 (*.f64 (+.f64 (*.f64 -1/5040 (sin.f64 b)) (*.f64 1/2520 (sin.f64 b))) (pow.f64 a 7)) (+.f64 (*.f64 a (+.f64 (*.f64 -2 (sin.f64 b)) (sin.f64 b))) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 1/3 (sin.f64 b)) (*.f64 -1/6 (sin.f64 b)))))))","(fma.f64 (*.f64 -1/120 (sin.f64 b)) (pow.f64 a 5) (fma.f64 (*.f64 1/5040 (sin.f64 b)) (pow.f64 a 7) (fma.f64 a (neg.f64 (sin.f64 b)) (*.f64 (pow.f64 a 3) (*.f64 1/6 (sin.f64 b))))))","(fma.f64 (pow.f64 a 5) (*.f64 -1/120 (sin.f64 b)) (fma.f64 (pow.f64 a 7) (*.f64 1/5040 (sin.f64 b)) (fma.f64 a (neg.f64 (sin.f64 b)) (*.f64 1/6 (*.f64 (sin.f64 b) (pow.f64 a 3))))))","(+.f64 (*.f64 (sin.f64 b) (+.f64 (neg.f64 a) (*.f64 1/6 (pow.f64 a 3)))) (*.f64 (sin.f64 b) (+.f64 (*.f64 -1/120 (pow.f64 a 5)) (*.f64 1/5040 (pow.f64 a 7)))))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","(*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","(*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","(*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","(*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","(*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","(*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","(*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))","(+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (*.f64 (sin.f64 a) (sin.f64 b)))","(*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b))","(*.f64 (sin.f64 a) (neg.f64 (sin.f64 b)))","(/.f64 (*.f64 b r) (cos.f64 a))","(/.f64 r (/.f64 (cos.f64 a) b))","(*.f64 (/.f64 r (cos.f64 a)) b)","(+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (*.f64 -1 (/.f64 (*.f64 r (*.f64 (pow.f64 b 2) (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a))))) (pow.f64 (cos.f64 a) 2))))","(+.f64 (/.f64 r (/.f64 (cos.f64 a) b)) (neg.f64 (/.f64 r (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 (neg.f64 (sin.f64 a)) (*.f64 b b))))))","(-.f64 (*.f64 (/.f64 r (cos.f64 a)) b) (*.f64 (/.f64 r (pow.f64 (cos.f64 a) 2)) (*.f64 b (*.f64 b (neg.f64 (sin.f64 a))))))","(*.f64 (/.f64 r (cos.f64 a)) (-.f64 b (/.f64 (*.f64 (sin.f64 a) (neg.f64 b)) (/.f64 (cos.f64 a) b))))","(+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 r (*.f64 (pow.f64 b 2) (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a))))) (pow.f64 (cos.f64 a) 2))) (*.f64 (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 r (pow.f64 (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a))) 2)) (pow.f64 (cos.f64 a) 3))))) (pow.f64 b 3))))","(+.f64 (/.f64 r (/.f64 (cos.f64 a) b)) (fma.f64 -1 (/.f64 r (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 (neg.f64 (sin.f64 a)) (*.f64 b b)))) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 r (/.f64 (pow.f64 (cos.f64 a) 3) (pow.f64 (neg.f64 (sin.f64 a)) 2)))))))))","(+.f64 (*.f64 (/.f64 r (cos.f64 a)) b) (-.f64 (*.f64 (pow.f64 b 3) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (*.f64 r (*.f64 (sin.f64 a) (sin.f64 a)))) (pow.f64 (cos.f64 a) 3)))) (*.f64 (/.f64 r (pow.f64 (cos.f64 a) 2)) (*.f64 b (*.f64 b (neg.f64 (sin.f64 a)))))))","(+.f64 (*.f64 (/.f64 r (cos.f64 a)) (-.f64 b (/.f64 (*.f64 (sin.f64 a) (neg.f64 b)) (/.f64 (cos.f64 a) b)))) (*.f64 (pow.f64 b 3) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 (/.f64 r (pow.f64 (cos.f64 a) 3)) (*.f64 (sin.f64 a) (sin.f64 a))))))","(+.f64 (/.f64 (*.f64 r b) (cos.f64 a)) (+.f64 (*.f64 -1 (/.f64 (*.f64 r (*.f64 (pow.f64 b 2) (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a))))) (pow.f64 (cos.f64 a) 2))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 b 4) (+.f64 (*.f64 1/2 (/.f64 (*.f64 r (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a)))) (pow.f64 (cos.f64 a) 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (sin.f64 a)) (*.f64 -1/6 (sin.f64 a))) r) (pow.f64 (cos.f64 a) 2)) (/.f64 (*.f64 (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 r (pow.f64 (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a))) 2)) (pow.f64 (cos.f64 a) 3))))) (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a)))) (cos.f64 a)))))) (*.f64 (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (+.f64 (*.f64 -1/2 (/.f64 r (cos.f64 a))) (*.f64 -1 (/.f64 (*.f64 r (pow.f64 (+.f64 (sin.f64 a) (*.f64 -2 (sin.f64 a))) 2)) (pow.f64 (cos.f64 a) 3))))) (pow.f64 b 3)))))","(+.f64 (/.f64 r (/.f64 (cos.f64 a) b)) (fma.f64 -1 (/.f64 r (/.f64 (pow.f64 (cos.f64 a) 2) (*.f64 (neg.f64 (sin.f64 a)) (*.f64 b b)))) (fma.f64 -1 (*.f64 (pow.f64 b 4) (fma.f64 1/2 (/.f64 r (/.f64 (pow.f64 (cos.f64 a) 2) (neg.f64 (sin.f64 a)))) (+.f64 (/.f64 (*.f64 r (*.f64 (sin.f64 a) 1/6)) (pow.f64 (cos.f64 a) 2)) (/.f64 (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 r (/.f64 (pow.f64 (cos.f64 a) 3) (pow.f64 (neg.f64 (sin.f64 a)) 2)))))) (/.f64 (cos.f64 a) (neg.f64 (sin.f64 a))))))) (*.f64 (pow.f64 b 3) (-.f64 (*.f64 -1/6 (/.f64 r (cos.f64 a))) (fma.f64 -1/2 (/.f64 r (cos.f64 a)) (neg.f64 (/.f64 r (/.f64 (pow.f64 (cos.f64 a) 3) (pow.f64 (neg.f64 (sin.f64 a)) 2))))))))))","(+.f64 (*.f64 (/.f64 r (cos.f64 a)) b) (-.f64 (-.f64 (*.f64 (pow.f64 b 3) (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (*.f64 r (*.f64 (sin.f64 a) (sin.f64 a)))) (pow.f64 (cos.f64 a) 3)))) (*.f64 (pow.f64 b 4) (+.f64 (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 r (cos.f64 a)) 1/3) (/.f64 (neg.f64 (*.f64 r (*.f64 (sin.f64 a) (sin.f64 a)))) (pow.f64 (cos.f64 a) 3))) (cos.f64 a)) (neg.f64 (sin.f64 a))) (fma.f64 1/2 (/.f64 (*.f64 (neg.f64 (sin.f64 a)) r) (pow.f64 (cos.f64 a) 2)) (/.f64 (*.f64 (sin.f64 a) (*.f64 1/6 r)) (pow.f64 (cos.f64 a) 2)))))) (*.f64 (/.f64 r (pow.f64 (cos.f64 a) 2)) (*.f64 b (*.f64 b (neg.f64 (sin.f64 a)))))))","(+.f64 (*.f64 (/.f64 r (cos.f64 a)) (-.f64 b (/.f64 (*.f64 (sin.f64 a) (neg.f64 b)) (/.f64 (cos.f64 a) b)))) (-.f64 (*.f64 (pow.f64 b 3) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 (/.f64 r (pow.f64 (cos.f64 a) 3)) (*.f64 (sin.f64 a) (sin.f64 a))))) (*.f64 (pow.f64 b 4) (+.f64 (*.f64 (/.f64 (neg.f64 (sin.f64 a)) (cos.f64 a)) (fma.f64 (/.f64 r (cos.f64 a)) 1/3 (*.f64 (/.f64 r (pow.f64 (cos.f64 a) 3)) (*.f64 (sin.f64 a) (sin.f64 a))))) (fma.f64 1/2 (*.f64 (/.f64 r (pow.f64 (cos.f64 a) 2)) (neg.f64 (sin.f64 a))) (*.f64 (/.f64 r (pow.f64 (cos.f64 a) 2)) (*.f64 (sin.f64 a) 1/6)))))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (sin.f64 a) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r))","(/.f64 r (/.f64 (cos.f64 b) (sin.f64 b)))","(+.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)) (*.f64 -1 (/.f64 (*.f64 (sin.f64 b) (*.f64 a (*.f64 r (+.f64 (sin.f64 b) (*.f64 -2 (sin.f64 b)))))) (pow.f64 (cos.f64 b) 2))))","(+.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)) (neg.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a (*.f64 r (neg.f64 (sin.f64 b))))) (pow.f64 (cos.f64 b) 2))))","(-.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (*.f64 (/.f64 (sin.f64 b) (pow.f64 (cos.f64 b) 2)) (*.f64 a (*.f64 r (neg.f64 (sin.f64 b))))))","(*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (-.f64 r (/.f64 (neg.f64 (sin.f64 b)) (/.f64 (cos.f64 b) (*.f64 a r)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 b) (*.f64 r (*.f64 (+.f64 (*.f64 -2 (sin.f64 b)) (sin.f64 b)) (+.f64 (sin.f64 b) (*.f64 -2 (sin.f64 b)))))) (pow.f64 (cos.f64 b) 3)))))) (+.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)) (*.f64 -1 (/.f64 (*.f64 (sin.f64 b) (*.f64 a (*.f64 r (+.f64 (sin.f64 b) (*.f64 -2 (sin.f64 b)))))) (pow.f64 (cos.f64 b) 2)))))","(fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)) (neg.f64 (/.f64 (sin.f64 b) (/.f64 (pow.f64 (cos.f64 b) 3) (*.f64 r (*.f64 (neg.f64 (sin.f64 b)) (neg.f64 (sin.f64 b))))))))) (+.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)) (neg.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a (*.f64 r (neg.f64 (sin.f64 b))))) (pow.f64 (cos.f64 b) 2)))))","(-.f64 (fma.f64 (neg.f64 (*.f64 a a)) (fma.f64 -1/2 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (/.f64 (*.f64 (*.f64 r (neg.f64 (sin.f64 b))) (*.f64 (sin.f64 b) (sin.f64 b))) (pow.f64 (cos.f64 b) 3))) (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r))) (*.f64 (/.f64 (sin.f64 b) (pow.f64 (cos.f64 b) 2)) (*.f64 a (*.f64 r (neg.f64 (sin.f64 b))))))","(-.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (-.f64 r (/.f64 (neg.f64 (sin.f64 b)) (/.f64 (cos.f64 b) (*.f64 a r))))) (*.f64 (*.f64 a a) (*.f64 (/.f64 r (/.f64 (cos.f64 b) (sin.f64 b))) (-.f64 -1/2 (/.f64 (sin.f64 b) (/.f64 (pow.f64 (cos.f64 b) 2) (sin.f64 b)))))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 (+.f64 (*.f64 1/3 (sin.f64 b)) (*.f64 -1/6 (sin.f64 b))) r)) (pow.f64 (cos.f64 b) 2)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (sin.f64 b) (*.f64 r (+.f64 (*.f64 -2 (sin.f64 b)) (sin.f64 b)))) (pow.f64 (cos.f64 b) 2))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 b) (*.f64 r (*.f64 (+.f64 (*.f64 -2 (sin.f64 b)) (sin.f64 b)) (+.f64 (sin.f64 b) (*.f64 -2 (sin.f64 b)))))) (pow.f64 (cos.f64 b) 3)))) (+.f64 (sin.f64 b) (*.f64 -2 (sin.f64 b)))) (cos.f64 b))))) (pow.f64 a 3))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b))) (*.f64 -1 (/.f64 (*.f64 (sin.f64 b) (*.f64 r (*.f64 (+.f64 (*.f64 -2 (sin.f64 b)) (sin.f64 b)) (+.f64 (sin.f64 b) (*.f64 -2 (sin.f64 b)))))) (pow.f64 (cos.f64 b) 3)))))) (+.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)) (*.f64 -1 (/.f64 (*.f64 (sin.f64 b) (*.f64 a (*.f64 r (+.f64 (sin.f64 b) (*.f64 -2 (sin.f64 b)))))) (pow.f64 (cos.f64 b) 2))))))","(fma.f64 -1 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 (*.f64 1/6 (sin.f64 b)) r)) (pow.f64 (cos.f64 b) 2)) (fma.f64 1/2 (/.f64 (*.f64 (sin.f64 b) (*.f64 r (neg.f64 (sin.f64 b)))) (pow.f64 (cos.f64 b) 2)) (neg.f64 (/.f64 (fma.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)) (neg.f64 (/.f64 (sin.f64 b) (/.f64 (pow.f64 (cos.f64 b) 3) (*.f64 r (*.f64 (neg.f64 (sin.f64 b)) (neg.f64 (sin.f64 b)))))))) (/.f64 (cos.f64 b) (neg.f64 (sin.f64 b)))))))) (fma.f64 -1 (*.f64 (*.f64 a a) (fma.f64 -1/2 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)) (neg.f64 (/.f64 (sin.f64 b) (/.f64 (pow.f64 (cos.f64 b) 3) (*.f64 r (*.f64 (neg.f64 (sin.f64 b)) (neg.f64 (sin.f64 b))))))))) (+.f64 (/.f64 (*.f64 (sin.f64 b) r) (cos.f64 b)) (neg.f64 (/.f64 (*.f64 (sin.f64 b) (*.f64 a (*.f64 r (neg.f64 (sin.f64 b))))) (pow.f64 (cos.f64 b) 2))))))","(-.f64 (-.f64 (fma.f64 (neg.f64 (*.f64 a a)) (fma.f64 -1/2 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (/.f64 (*.f64 (*.f64 r (neg.f64 (sin.f64 b))) (*.f64 (sin.f64 b) (sin.f64 b))) (pow.f64 (cos.f64 b) 3))) (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r))) (*.f64 (/.f64 (sin.f64 b) (pow.f64 (cos.f64 b) 2)) (*.f64 a (*.f64 r (neg.f64 (sin.f64 b)))))) (*.f64 (pow.f64 a 3) (+.f64 (*.f64 (/.f64 (sin.f64 b) (pow.f64 (cos.f64 b) 2)) (*.f64 (sin.f64 b) (*.f64 1/6 r))) (-.f64 (*.f64 1/2 (*.f64 (/.f64 (sin.f64 b) (pow.f64 (cos.f64 b) 2)) (*.f64 r (neg.f64 (sin.f64 b))))) (/.f64 (neg.f64 (sin.f64 b)) (/.f64 (cos.f64 b) (fma.f64 -1/2 (/.f64 (sin.f64 b) (/.f64 (cos.f64 b) r)) (/.f64 (*.f64 (*.f64 r (neg.f64 (sin.f64 b))) (*.f64 (sin.f64 b) (sin.f64 b))) (pow.f64 (cos.f64 b) 3)))))))))","(-.f64 (*.f64 (/.f64 (sin.f64 b) (cos.f64 b)) (-.f64 r (/.f64 (neg.f64 (sin.f64 b)) (/.f64 (cos.f64 b) (*.f64 a r))))) (*.f64 (*.f64 a a) (+.f64 (*.f64 (+.f64 (*.f64 (/.f64 (sin.f64 b) (pow.f64 (cos.f64 b) 2)) (*.f64 (sin.f64 b) (*.f64 1/6 r))) (fma.f64 1/2 (*.f64 (/.f64 (sin.f64 b) (pow.f64 (cos.f64 b) 2)) (*.f64 (sin.f64 b) (neg.f64 r))) (/.f64 (*.f64 (sin.f64 b) (*.f64 (/.f64 r (/.f64 (cos.f64 b) (sin.f64 b))) (-.f64 -1/2 (/.f64 (sin.f64 b) (/.f64 (pow.f64 (cos.f64 b) 2) (sin.f64 b)))))) (cos.f64 b)))) a) (*.f64 (/.f64 r (/.f64 (cos.f64 b) (sin.f64 b))) (-.f64 -1/2 (/.f64 (sin.f64 b) (/.f64 (pow.f64 (cos.f64 b) 2) (sin.f64 b))))))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 -2 (*.f64 (sin.f64 a) (sin.f64 b))) (+.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))))","(/.f64 (*.f64 (sin.f64 b) r) (+.f64 (*.f64 (neg.f64 (sin.f64 a)) (sin.f64 b)) (*.f64 (cos.f64 a) (cos.f64 b))))","(/.f64 (sin.f64 b) (/.f64 (fma.f64 (neg.f64 (sin.f64 a)) (sin.f64 b) (*.f64 (cos.f64 a) (cos.f64 b))) r))","(*.f64 (/.f64 r (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b)))) (sin.f64 b))"]],"stop":[["node limit",1]],"time":47.635009765625,"type":"simplify"},{"compiler":[[5762,1892]],"time":37.75,"type":"eval"},{"alts":[["(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (log.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)))))","fresh",0.3940285119143357],["(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","fresh",0.38738887930507393],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (+.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b))))))))))","fresh",0.468133624876036],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","done",0.3464050781475362],["(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","fresh",14.198915000768578],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (*.f64 (neg.f64 (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (cbrt.f64 (sin.f64 a)) (*.f64 (cos.f64 b) (cos.f64 a)))))","fresh",0.37964638675818835],["(pow.f64 (cbrt.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r))) 3)","fresh",15.167626712398912],["(*.f64 (sin.f64 b) (/.f64 r (*.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) (/.f64 1 (cos.f64 (-.f64 b a))))))","fresh",14.195378819147715],["(*.f64 (*.f64 (sin.f64 b) r) (/.f64 1 (cos.f64 (+.f64 a b))))","fresh",14.183953770305418],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","fresh",0.5847690551370306],["(*.f64 r (*.f64 (sin.f64 b) (/.f64 1 (cos.f64 (+.f64 a b)))))","fresh",14.193361600020053],["(/.f64 (*.f64 (sin.f64 b) r) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))) (pow.f64 (exp.f64 (cos.f64 a)) (cos.f64 b)))))","fresh",0.5712876739700579],["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","fresh",0.45224389652663044],["(*.f64 (sin.f64 b) (/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))","done",0.32982260745286224]],"compiler":[[21,14],[19,12],[42,18],[30,14],[12,8],[26,16],[24,15],[24,14],[14,10],[40,18],[14,10],[23,16],[37,18],[19,12]],"count":[[191,14]],"kept":[{"done":[1,1],"fresh":[11,10],"new":[178,2],"picked":[1,1]}],"min-error":[0.01171875],"time":51.781982421875,"type":"prune"},{"accuracy":[0.3252525879159781],"baseline":[0.3252525879159781],"branch":[["r",0.3252525879159781,1],["a",0.3252525879159782,1],["b",0.3252525879159782,1],["(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))))",0.3252525879159781,1],["(/.f64 (sin.f64 b) (cos.f64 (+.f64 a b)))",0.3252525879159782,1]],"compiler":[[4,3],[4,3],[4,3],[12,8],[10,7],[754,216]],"count":[[32,1]],"inputs":[["(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (+.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 a)) (sin.f64 b))))))))))","(pow.f64 (cbrt.f64 (/.f64 (sin.f64 b) (/.f64 (+.f64 (cos.f64 (-.f64 a b)) (*.f64 (sin.f64 b) (+.f64 (sin.f64 a) (sin.f64 a)))) r))) 3)","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (log.f64 (pow.f64 (exp.f64 (sin.f64 b)) (sin.f64 a)))))","(*.f64 (*.f64 (sin.f64 b) r) (/.f64 1 (cos.f64 (+.f64 a b))))","(/.f64 (pow.f64 (sqrt.f64 (*.f64 (sin.f64 b) r)) 2) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 r (*.f64 (sin.f64 b) (/.f64 1 (cos.f64 (+.f64 a b)))))","(/.f64 (*.f64 (sin.f64 b) r) (log.f64 (*.f64 (exp.f64 (*.f64 (sin.f64 b) (neg.f64 (sin.f64 a)))) (pow.f64 (exp.f64 (cos.f64 a)) (cos.f64 b)))))","(/.f64 1 (/.f64 (cos.f64 (+.f64 b a)) (*.f64 (sin.f64 b) r)))","(/.f64 r (/.f64 (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))) (sin.f64 b)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (*.f64 (neg.f64 (sin.f64 b)) (pow.f64 (cbrt.f64 (sin.f64 a)) 2)) (cbrt.f64 (sin.f64 a)) (*.f64 (cos.f64 b) (cos.f64 a)))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (cos.f64 a) (cos.f64 b) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","(*.f64 (sin.f64 b) (/.f64 r (*.f64 (*.f64 (cos.f64 (-.f64 b a)) (cos.f64 (+.f64 b a))) (/.f64 1 (cos.f64 (-.f64 b a))))))","(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","(*.f64 (sin.f64 b) (*.f64 (/.f64 r (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3))) (fma.f64 (*.f64 (sin.f64 b) (sin.f64 a)) (cos.f64 (-.f64 b a)) (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2))))","(*.f64 (sin.f64 b) (/.f64 r (log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 b) (cos.f64 a)))) (exp.f64 (*.f64 (sin.f64 a) (neg.f64 (sin.f64 b))))))))","(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 a)) 2) (*.f64 (cbrt.f64 (cos.f64 a)) (cos.f64 b)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (fma.f64 (sin.f64 b) (neg.f64 (sin.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))))","(*.f64 (sin.f64 b) (/.f64 r (+.f64 (fma.f64 (cos.f64 a) (cos.f64 b) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))","(*.f64 (*.f64 (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (cbrt.f64 (sin.f64 b))) (/.f64 r (cos.f64 (+.f64 b a))))","(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))))","(*.f64 (sin.f64 b) (/.f64 r (+.f64 (fma.f64 1 (*.f64 (cos.f64 b) (cos.f64 a)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a))) (sqrt.f64 (sin.f64 b)) (*.f64 (*.f64 (sqrt.f64 (sin.f64 b)) (sin.f64 a)) (sqrt.f64 (sin.f64 b)))))))","(*.f64 (sin.f64 b) (/.f64 r (-.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a)))))","(*.f64 (sin.f64 b) (/.f64 r (+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) 2) (cbrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a))) (pow.f64 (cbrt.f64 (sin.f64 b)) 2) (*.f64 (*.f64 (cbrt.f64 (sin.f64 b)) (sin.f64 a)) (pow.f64 (cbrt.f64 (sin.f64 b)) 2))))))","(/.f64 1 (/.f64 (cos.f64 (+.f64 b a)) (*.f64 (sin.f64 b) r)))","(/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))","(*.f64 (sin.f64 b) (/.f64 r (/.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 2)) (cos.f64 (-.f64 b a)))))","(*.f64 (sin.f64 b) (/.f64 r (/.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 3) (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 3)) (+.f64 (pow.f64 (*.f64 (cos.f64 b) (cos.f64 a)) 2) (+.f64 (pow.f64 (*.f64 (sin.f64 b) (sin.f64 a)) 2) (*.f64 (*.f64 (cos.f64 b) (cos.f64 a)) (*.f64 (sin.f64 b) (sin.f64 a))))))))","(pow.f64 (cbrt.f64 (/.f64 (sin.f64 b) (/.f64 (cos.f64 (+.f64 b a)) r))) 3)","(*.f64 (sin.f64 b) (/.f64 r (fma.f64 (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (sqrt.f64 (*.f64 (cos.f64 b) (cos.f64 a))) (*.f64 (neg.f64 (sin.f64 b)) (sin.f64 a)))))","(*.f64 (sin.f64 b) (/.f64 r (cos.f64 (+.f64 b a))))","(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))))"]],"link":["."],"name":["rsin B"],"oracle":[56.13781121569683],"outputs":[["(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))"]],"time":59.23486328125,"times":[["r",9.90283203125],["a",9.845947265625],["b",9.759033203125],["(*.f64 r (/.f64 (sin.f64 b) (cos.f64 (+.f64 a b))))",9.356201171875],["(/.f64 (sin.f64 b) (cos.f64 (+.f64 a b)))",10.236083984375]],"type":"regimes"},{"compiler":[[19,12]],"egraph":[[5,44,26,0.000290625],[4,43,26,0.000236584],[3,39,26,0.00018125],[2,33,26,0.00012725],[1,21,26,7.708300000000001e-5],[0,13,26,3.1583e-5]],"inputs":[["(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 a) (sin.f64 b))))","(/.f64 (*.f64 (sin.f64 b) r) (-.f64 (*.f64 (cos.f64 a) (cos.f64 b)) (*.f64 (sin.f64 b) (sin.f64 a))))"]],"stop":[["fuel",1],["saturated",1]],"time":9.08203125,"type":"simplify"},{"time":0.01513671875,"type":"soundness"},{"compiler":[[19,12]],"remove-preprocessing":[[]],"time":10.202880859375,"type":"end"}]