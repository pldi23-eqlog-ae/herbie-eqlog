[{"compiler":[[26,20]],"method":["search"],"sampling":[[12,0.0,0.7478054148384244,0.25219458516157556],[11,0.0,0.7478054148384244,0.25219458516157556],[10,0.0,0.7478054148384244,0.25219458516157556],[9,0.0,0.7478054148384244,0.25219458516157556],[8,0.0,0.7478054148384244,0.25219458516157556],[7,0.0,0.9970738864512326,0.002926113548767373],[6,0.0,0.9970738864512326,0.002926113548767373],[5,0.0,0.9970738864512326,0.002926113548767373],[4,0.0,0.9970738864512326,0.002926113548767373],[3,0.0,0.9970738864512326,0.002926113548767373],[2,0.0,0.9970738864512326,0.002926113548767373],[1,0.0,0.9970738864512326,0.002926113548767373],[0,0.0,0.9970738864512326,0.002926113548767373]],"time":222.26611328125,"type":"analyze"},{"outcomes":[["body",256,"invalid",466.368408203125,5794],["body",4096,"valid",0.925048828125,1],["body",512,"valid",120.504638671875,733],["body",1024,"valid",423.299072265625,1641],["body",2048,"valid",337.878662109375,795],["body",256,"valid",426.12109375,5086]],"time":1789.7978515625,"type":"sample"},{"compiler":[[25,19]],"egraph":[[1,6,6,9.792e-6],[0,6,6,7.875e-6],[6,6195,400,0.038563333],[5,4013,400,0.026381208],[4,2182,400,0.013921708],[3,1059,432,0.006682708],[2,569,464,0.003023624],[1,280,464,0.001278833],[0,114,464,0.000414]],"inputs":[["0","1","2","3","4","5"],["(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))) (/.f64 a (*.f64 b 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 y)) (cos.f64 (-.f64 x (/.f64 (*.f64 z t) 3)))) (/.f64 a (*.f64 b 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 z)) (cos.f64 (-.f64 y (/.f64 (*.f64 x t) 3)))) (/.f64 a (*.f64 b 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 t)) (cos.f64 (-.f64 y (/.f64 (*.f64 z x) 3)))) (/.f64 a (*.f64 b 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 a)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))) (/.f64 x (*.f64 b 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 b)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))) (/.f64 a (*.f64 x 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 z (/.f64 (*.f64 y t) 3)))) (/.f64 a (*.f64 b 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 t (/.f64 (*.f64 z y) 3)))) (/.f64 a (*.f64 b 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 a (/.f64 (*.f64 z t) 3)))) (/.f64 y (*.f64 b 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 b (/.f64 (*.f64 z t) 3)))) (/.f64 a (*.f64 y 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 t z) 3)))) (/.f64 a (*.f64 b 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 a t) 3)))) (/.f64 z (*.f64 b 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 b t) 3)))) (/.f64 a (*.f64 z 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z a) 3)))) (/.f64 t (*.f64 b 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z b) 3)))) (/.f64 a (*.f64 t 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))) (/.f64 b (*.f64 a 3)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","2","4","5"],["(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))) (/.f64 a (*.f64 b 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 z (/.f64 3 t))))) (/.f64 a (*.f64 3 b)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (*.f64 (/.f64 t 3) z)))) (/.f64 a (*.f64 3 b)))","(-.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (-.f64 y (*.f64 z (/.f64 t 3)))))) (/.f64 a (*.f64 3 b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (-.f64 y (*.f64 z (/.f64 t 3))))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 z (*.f64 -1/3 t) y))) (*.f64 (/.f64 a b) -1/3))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (*.f64 a (/.f64 -1/3 b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (*.f64 (/.f64 a b) -1/3))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 y)) (cos.f64 (-.f64 x (/.f64 (*.f64 z t) 3)))) (/.f64 a (*.f64 b 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 y)) (cos.f64 (-.f64 x (/.f64 z (/.f64 3 t))))) (/.f64 a (*.f64 3 b)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 y)) (cos.f64 (-.f64 x (*.f64 (/.f64 t 3) z)))) (/.f64 a (*.f64 3 b)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 y)) (cos.f64 (-.f64 x (*.f64 z (/.f64 t 3))))) (/.f64 a (*.f64 3 b)))","(fma.f64 (*.f64 2 (sqrt.f64 y)) (cos.f64 (-.f64 x (*.f64 z (/.f64 t 3)))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 (*.f64 2 (sqrt.f64 y)) (cos.f64 (fma.f64 z (*.f64 -1/3 t) x)) (*.f64 (/.f64 a b) -1/3))","(fma.f64 (*.f64 2 (sqrt.f64 y)) (cos.f64 (fma.f64 z (*.f64 t -1/3) x)) (*.f64 a (/.f64 -1/3 b)))","(fma.f64 (*.f64 2 (sqrt.f64 y)) (cos.f64 (fma.f64 z (*.f64 t -1/3) x)) (*.f64 (/.f64 a b) -1/3))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 z)) (cos.f64 (-.f64 y (/.f64 (*.f64 x t) 3)))) (/.f64 a (*.f64 b 3)))","(-.f64 (*.f64 2 (*.f64 (sqrt.f64 z) (cos.f64 (-.f64 y (/.f64 x (/.f64 3 t)))))) (/.f64 a (*.f64 3 b)))","(-.f64 (*.f64 2 (*.f64 (sqrt.f64 z) (cos.f64 (-.f64 y (*.f64 (/.f64 t 3) x))))) (/.f64 a (*.f64 3 b)))","(fma.f64 2 (*.f64 (sqrt.f64 z) (cos.f64 (-.f64 y (*.f64 x (/.f64 t 3))))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 z) (cos.f64 (fma.f64 t (*.f64 -1/3 x) y))) (*.f64 (/.f64 a b) -1/3))","(fma.f64 2 (*.f64 (sqrt.f64 z) (cos.f64 (fma.f64 x (*.f64 t -1/3) y))) (*.f64 a (/.f64 -1/3 b)))","(fma.f64 2 (*.f64 (sqrt.f64 z) (cos.f64 (fma.f64 x (*.f64 t -1/3) y))) (*.f64 (/.f64 a b) -1/3))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 t)) (cos.f64 (-.f64 y (/.f64 (*.f64 z x) 3)))) (/.f64 a (*.f64 b 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 t)) (cos.f64 (-.f64 y (/.f64 z (/.f64 3 x))))) (/.f64 a (*.f64 3 b)))","(-.f64 (*.f64 (sqrt.f64 t) (*.f64 2 (cos.f64 (-.f64 y (/.f64 x (/.f64 3 z)))))) (/.f64 a (*.f64 3 b)))","(-.f64 (*.f64 (sqrt.f64 t) (*.f64 2 (cos.f64 (-.f64 y (*.f64 (/.f64 x 3) z))))) (/.f64 a (*.f64 3 b)))","(fma.f64 (*.f64 2 (sqrt.f64 t)) (cos.f64 (fma.f64 (/.f64 z 3) (neg.f64 x) y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 (*.f64 2 (sqrt.f64 t)) (cos.f64 (fma.f64 x (*.f64 -1/3 z) y)) (*.f64 (/.f64 a b) -1/3))","(fma.f64 (*.f64 2 (sqrt.f64 t)) (cos.f64 (fma.f64 x (*.f64 z -1/3) y)) (*.f64 a (/.f64 -1/3 b)))","(fma.f64 (*.f64 2 (sqrt.f64 t)) (cos.f64 (fma.f64 x (*.f64 z -1/3) y)) (*.f64 (/.f64 a b) -1/3))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 a)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))) (/.f64 x (*.f64 b 3)))","(-.f64 (*.f64 (cos.f64 (-.f64 y (/.f64 z (/.f64 3 t)))) (*.f64 2 (sqrt.f64 a))) (/.f64 x (*.f64 3 b)))","(-.f64 (*.f64 (cos.f64 (-.f64 y (*.f64 (/.f64 t 3) z))) (*.f64 2 (sqrt.f64 a))) (/.f64 x (*.f64 3 b)))","(-.f64 (*.f64 (cos.f64 (-.f64 y (*.f64 z (/.f64 t 3)))) (*.f64 2 (sqrt.f64 a))) (/.f64 x (*.f64 3 b)))","(fma.f64 2 (*.f64 (cos.f64 (-.f64 y (*.f64 z (/.f64 t 3)))) (sqrt.f64 a)) (*.f64 -1/3 (/.f64 x b)))","(fma.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 a)) (*.f64 (/.f64 x b) -1/3))","(fma.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 a)) (/.f64 -1/3 (/.f64 b x)))","(fma.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (*.f64 2 (sqrt.f64 a)) (/.f64 -1/3 (/.f64 b x)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 b)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))) (/.f64 a (*.f64 x 3)))","(fma.f64 (*.f64 2 (sqrt.f64 b)) (cos.f64 (-.f64 y (/.f64 z (/.f64 3 t)))) (neg.f64 (/.f64 a (*.f64 x 3))))","(-.f64 (*.f64 (cos.f64 (-.f64 y (*.f64 (/.f64 t 3) z))) (*.f64 2 (sqrt.f64 b))) (/.f64 a (*.f64 x 3)))","(-.f64 (*.f64 (cos.f64 (-.f64 y (*.f64 z (/.f64 t 3)))) (*.f64 2 (sqrt.f64 b))) (/.f64 a (*.f64 x 3)))","(fma.f64 (cos.f64 (-.f64 y (*.f64 z (/.f64 t 3)))) (*.f64 2 (sqrt.f64 b)) (*.f64 -1/3 (/.f64 a x)))","(fma.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (*.f64 2 (sqrt.f64 b)) (*.f64 (/.f64 a x) -1/3))","(fma.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (*.f64 2 (sqrt.f64 b)) (*.f64 a (/.f64 -1/3 x)))","(fma.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (*.f64 2 (sqrt.f64 b)) (*.f64 (/.f64 a x) -1/3))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 z (/.f64 (*.f64 y t) 3)))) (/.f64 a (*.f64 b 3)))","(fma.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 z (/.f64 y (/.f64 3 t)))) (neg.f64 (/.f64 a (*.f64 3 b))))","(-.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (-.f64 z (/.f64 y (/.f64 3 t)))))) (/.f64 a (*.f64 3 b)))","(-.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (-.f64 z (*.f64 (/.f64 t 3) y))))) (/.f64 a (*.f64 3 b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (-.f64 z (*.f64 y (/.f64 t 3))))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 -1/3 y) z))) (*.f64 (/.f64 a b) -1/3))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 y (*.f64 t -1/3) z))) (*.f64 a (/.f64 -1/3 b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 y (*.f64 t -1/3) z))) (*.f64 (/.f64 a b) -1/3))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 t (/.f64 (*.f64 z y) 3)))) (/.f64 a (*.f64 b 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 t (/.f64 z (/.f64 3 y))))) (/.f64 a (*.f64 3 b)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 t (/.f64 y (/.f64 3 z))))) (/.f64 a (*.f64 3 b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (-.f64 t (/.f64 z (/.f64 3 y))))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 (*.f64 -1/3 y) z t))) (*.f64 (/.f64 a b) -1/3))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 z (*.f64 y -1/3) t))) (*.f64 a (/.f64 -1/3 b)))","(fma.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (fma.f64 z (*.f64 y -1/3) t)) (*.f64 (/.f64 a b) -1/3))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 a (/.f64 (*.f64 z t) 3)))) (/.f64 y (*.f64 b 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 a (/.f64 z (/.f64 3 t))))) (/.f64 (/.f64 y b) 3))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 a (*.f64 (/.f64 t 3) z)))) (/.f64 y (*.f64 3 b)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 a (*.f64 z (/.f64 t 3))))) (/.f64 y (*.f64 3 b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (-.f64 a (*.f64 z (/.f64 t 3))))) (*.f64 -1/3 (/.f64 y b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 z (*.f64 -1/3 t) a))) (*.f64 (/.f64 y b) -1/3))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 z (*.f64 t -1/3) a))) (*.f64 y (/.f64 -1/3 b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 z (*.f64 t -1/3) a))) (/.f64 y (/.f64 b -1/3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 b (/.f64 (*.f64 z t) 3)))) (/.f64 a (*.f64 y 3)))","(-.f64 (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (-.f64 b (/.f64 z (/.f64 3 t)))))) (/.f64 a (*.f64 y 3)))","(-.f64 (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (-.f64 b (*.f64 (/.f64 t 3) z))))) (/.f64 a (*.f64 y 3)))","(-.f64 (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (-.f64 b (*.f64 z (/.f64 t 3)))))) (/.f64 a (*.f64 y 3)))","(fma.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 b (*.f64 z (/.f64 t 3)))) (*.f64 -1/3 (/.f64 a y)))","(fma.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (fma.f64 z (*.f64 -1/3 t) b)) (*.f64 (/.f64 a y) -1/3))","(fma.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (fma.f64 z (*.f64 t -1/3) b)) (*.f64 (/.f64 a y) -1/3))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 z (*.f64 t -1/3) b))) (*.f64 (/.f64 a y) -1/3))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 t z) 3)))) (/.f64 a (*.f64 b 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 z (/.f64 3 t))))) (/.f64 a (*.f64 3 b)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (*.f64 (/.f64 t 3) z)))) (/.f64 a (*.f64 3 b)))","(-.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (-.f64 y (*.f64 z (/.f64 t 3)))))) (/.f64 a (*.f64 3 b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (-.f64 y (*.f64 z (/.f64 t 3))))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 z (*.f64 -1/3 t) y))) (*.f64 (/.f64 a b) -1/3))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (*.f64 a (/.f64 -1/3 b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (*.f64 (/.f64 a b) -1/3))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 a t) 3)))) (/.f64 z (*.f64 b 3)))","(-.f64 (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (-.f64 y (/.f64 a (/.f64 3 t)))))) (/.f64 (/.f64 z b) 3))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (*.f64 (/.f64 a 3) t)))) (/.f64 z (*.f64 3 b)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (*.f64 t (/.f64 a 3))))) (/.f64 z (*.f64 3 b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (-.f64 y (*.f64 a (/.f64 t 3))))) (*.f64 -1/3 (/.f64 z b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 -1/3 a) y))) (*.f64 (/.f64 z b) -1/3))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 a -1/3) y))) (*.f64 z (/.f64 -1/3 b)))","(fma.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (fma.f64 t (*.f64 a -1/3) y)) (*.f64 z (/.f64 -1/3 b)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 b t) 3)))) (/.f64 a (*.f64 z 3)))","(fma.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 b (/.f64 3 t)))) (neg.f64 (/.f64 a (*.f64 z 3))))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (*.f64 (/.f64 b 3) t)))) (/.f64 a (*.f64 z 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (*.f64 t (/.f64 b 3))))) (/.f64 a (*.f64 z 3)))","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (-.f64 y (*.f64 t (/.f64 b 3))))) (*.f64 -1/3 (/.f64 a z)))","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 t (*.f64 -1/3 b) y))) (*.f64 (/.f64 a z) -1/3))","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 -1/3 (*.f64 t b) y))) (*.f64 (/.f64 a z) -1/3))","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 t (*.f64 b -1/3) y))) (*.f64 a (/.f64 -1/3 z)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z a) 3)))) (/.f64 t (*.f64 b 3)))","(-.f64 (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (-.f64 y (/.f64 z (/.f64 3 a)))))) (/.f64 t (*.f64 3 b)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 a (/.f64 3 z))))) (/.f64 t (*.f64 3 b)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (*.f64 (/.f64 a 3) z)))) (/.f64 t (*.f64 3 b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (-.f64 y (*.f64 z (/.f64 a 3))))) (*.f64 -1/3 (/.f64 t b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 (*.f64 -1/3 a) z y))) (*.f64 (/.f64 t b) -1/3))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 z (*.f64 a -1/3) y))) (*.f64 t (/.f64 -1/3 b)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z b) 3)))) (/.f64 a (*.f64 t 3)))","(fma.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 z (/.f64 3 b)))) (neg.f64 (/.f64 (/.f64 a t) 3)))","(fma.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 z (/.f64 3 b)))) (/.f64 (neg.f64 (/.f64 a t)) 3))","(fma.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (*.f64 (/.f64 b 3) z))) (/.f64 (neg.f64 (/.f64 a t)) 3))","(fma.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (*.f64 z (/.f64 b 3)))) (*.f64 -1/3 (/.f64 a t)))","(fma.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (fma.f64 (*.f64 -1/3 b) z y)) (/.f64 (*.f64 -1/3 a) t))","(fma.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (fma.f64 z (*.f64 b -1/3) y)) (*.f64 a (/.f64 -1/3 t)))","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 b -1/3) y))) (*.f64 a (/.f64 -1/3 t)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))) (/.f64 b (*.f64 a 3)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 z (/.f64 3 t))))) (/.f64 b (*.f64 3 a)))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (*.f64 (/.f64 t 3) z)))) (/.f64 b (*.f64 3 a)))","(-.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (-.f64 y (*.f64 z (/.f64 t 3)))))) (/.f64 b (*.f64 3 a)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (-.f64 y (*.f64 z (/.f64 t 3))))) (*.f64 -1/3 (/.f64 b a)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 z (*.f64 -1/3 t) y))) (*.f64 (/.f64 b a) -1/3))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (*.f64 b (/.f64 -1/3 a)))"]],"stop":[["unsound",1],["node limit",1]],"symmetry":[["(sort z t)"]],"time":68.333984375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[14,2889,25,0.046525541],[13,2889,25,0.040119498999999996],[12,2873,25,0.034905582],[11,2781,25,0.029698165999999998],[10,2422,25,0.024049499],[9,1755,25,0.018477166],[8,1220,25,0.012769541],[7,921,25,0.008493916],[6,639,25,0.0050195],[5,399,25,0.002832833],[4,241,25,0.001556625],[3,120,27,0.000817083],[2,65,29,0.000386458],[1,34,29,0.00018624899999999998],[0,19,29,6.7791e-5]],"inputs":[["(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))) (/.f64 a (*.f64 b 3)))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))) (/.f64 a (*.f64 b 3)))","(-.f64 (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (-.f64 y (/.f64 z (/.f64 3 t)))))) (/.f64 a (*.f64 3 b)))","(-.f64 (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (-.f64 y (*.f64 (/.f64 z 3) t))))) (/.f64 a (*.f64 3 b)))","(-.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (-.f64 y (*.f64 t (/.f64 z 3)))))) (/.f64 a (*.f64 3 b)))","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (-.f64 y (*.f64 z (/.f64 t 3))))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 t (*.f64 -1/3 z) y))) (/.f64 (*.f64 -1/3 a) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y))) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))"]],"stop":[["saturated",1]],"time":57.942138671875,"type":"simplify"},{"compiler":[[42,29]],"time":0.557861328125,"type":"eval"},{"alts":[["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","next",21.437690753717344],["(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))) (/.f64 a (*.f64 b 3)))","fresh",21.645893871756734]],"compiler":[[23,17],[25,19],[23,17],[25,19]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[21.23844295093426],"time":1.734130859375,"type":"prune"},{"compiler":[[66,39]],"locations":[["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))",0.16796875,true],["(*.f64 a -1/3)",0.2890625,true],["(*.f64 t -1/3)",0.3671875,true],["(cos.f64 (fma.f64 z (*.f64 t -1/3) y))",25.512171738491002,true]],"time":19.7109375,"type":"localize"},{"count":[[4,121]],"series":[["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","b","-inf",0.287109375],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","b","inf",0.3798828125],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","b","0",0.570068359375],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","a","-inf",0.321044921875],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","a","inf",0.406982421875],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","a","0",0.820068359375],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","y","-inf",0.5400390625],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","y","inf",0.69580078125],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","y","0",0.63623046875],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","t","-inf",0.493896484375],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","t","inf",0.708984375],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","t","0",0.89306640625],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","z","-inf",0.511962890625],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","z","inf",0.887939453125],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","z","0",0.507080078125],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","x","-inf",0.679931640625],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","x","inf",0.579833984375],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","x","0",0.88916015625],["(*.f64 a -1/3)","a","-inf",0.237060546875],["(*.f64 a -1/3)","a","inf",0.257080078125],["(*.f64 a -1/3)","a","0",0.26416015625],["(*.f64 t -1/3)","t","-inf",0.27392578125],["(*.f64 t -1/3)","t","inf",0.296875],["(*.f64 t -1/3)","t","0",0.27392578125],["(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","y","-inf",0.177001953125],["(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","y","inf",0.174072265625],["(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","y","0",0.467041015625],["(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","t","-inf",0.216796875],["(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","t","inf",0.2021484375],["(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","t","0",0.432861328125],["(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","z","-inf",0.217041015625],["(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","z","inf",0.2109375],["(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","z","0",0.653076171875]],"time":15.681884765625,"type":"series"},{"count":[[4,88]],"egraph":[[2,4188,43,0.031882708999999995],[1,345,43,0.006137126],[0,17,43,0.000424584]],"inputs":[["(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(*.f64 t -1/3)","(*.f64 a -1/3)","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 (*.f64 (*.f64 z t) -1/3)) (cos.f64 y) (neg.f64 (*.f64 (sin.f64 y) (sin.f64 (*.f64 (*.f64 z t) -1/3))))) (fma.f64 (neg.f64 (sin.f64 y)) (sin.f64 (*.f64 (*.f64 z t) -1/3)) (*.f64 (sin.f64 y) (sin.f64 (*.f64 (*.f64 z t) -1/3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (fma.f64 z (*.f64 t -1/3) y)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (fma.f64 z (*.f64 t -1/3) y)))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (*.f64 z t) -1/3)) (cos.f64 y)) (*.f64 (sin.f64 (*.f64 (*.f64 z t) -1/3)) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 y) (cos.f64 (*.f64 (*.f64 z t) -1/3))) (*.f64 (sin.f64 y) (sin.f64 (*.f64 (*.f64 z t) -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 (*.f64 (*.f64 (*.f64 z t) -1/3) 1)) (cos.f64 y)) (*.f64 (sin.f64 (*.f64 (*.f64 (*.f64 z t) -1/3) 1)) (sin.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (pow.f64 (cbrt.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) 2) (cbrt.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (sqrt.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cos.f64 (*.f64 (*.f64 z t) -1/3)) (cos.f64 y) (neg.f64 (*.f64 (sin.f64 (*.f64 (*.f64 z t) -1/3)) (sin.f64 y))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 t -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 -1/3) t)) (cbrt.f64 (pow.f64 (exp.f64 -1/3) t)))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 -1/3) t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/3) t))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/3) t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 t -1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t -1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 t -1/3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t -1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 t -1/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (*.f64 t t) 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 -1/3) t))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 t -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 t -1/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 t -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 t -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 t -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 t -1/3)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 -1/3 a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 -1/3) a)) (cbrt.f64 (pow.f64 (exp.f64 -1/3) a)))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 -1/3) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/3) a))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/3) a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 -1/3 a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -1/3 a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -1/3 a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -1/3 a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 -1/3 a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (*.f64 a a) 1/9))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 -1/3) a))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 -1/3 a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -1/3 a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 -1/3 a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 -1/3 a)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (*.f64 -1/3 (/.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) 1) (*.f64 -1/3 (/.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))) (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))) (pow.f64 (cbrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))) 2) (cbrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))) (sqrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) 3) (pow.f64 (*.f64 -1/3 (/.f64 a b)) 3)) (fma.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (-.f64 (pow.f64 (*.f64 -1/3 (/.f64 a b)) 2) (*.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (*.f64 -1/3 (/.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) (pow.f64 (*.f64 -1/3 (/.f64 a b)) 2)) (fma.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (neg.f64 (*.f64 -1/3 (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 -1/3 (/.f64 a b))) (exp.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 -1/3 (/.f64 a b)))) (exp.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) (+.f64 1 (expm1.f64 (*.f64 -1/3 (/.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))) 1))))))"]],"rules":[["egg-rr",29],["egg-rr",16],["egg-rr",16],["egg-rr",27]],"stop":[["node limit",1]],"time":60.109130859375,"type":"rewrite"},{"count":[[209,133]],"egraph":[[4,6715,2269,0.03610546],[3,4091,2271,0.020589585],[2,952,2307,0.008410376],[1,305,2383,0.002326584],[0,105,2432,0.000658417]],"inputs":[["(cos.f64 y)","(+.f64 (cos.f64 y) (*.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y)))))","(+.f64 (*.f64 -1/18 (*.f64 (pow.f64 t 2) (*.f64 (cos.f64 y) (pow.f64 z 2)))) (+.f64 (cos.f64 y) (*.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y))))))","(+.f64 (*.f64 -1/162 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) (sin.f64 y)))) (+.f64 (*.f64 -1/18 (*.f64 (pow.f64 t 2) (*.f64 (cos.f64 y) (pow.f64 z 2)))) (+.f64 (cos.f64 y) (*.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y)))))))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 y)","(+.f64 (cos.f64 y) (*.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y)))))","(+.f64 (cos.f64 y) (+.f64 (*.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y)))) (*.f64 -1/18 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) (cos.f64 y))))))","(+.f64 (*.f64 -1/162 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) (sin.f64 y)))) (+.f64 (cos.f64 y) (+.f64 (*.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y)))) (*.f64 -1/18 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) (cos.f64 y)))))))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (*.f64 -1/3 (*.f64 t z)))","(+.f64 (*.f64 -1 (*.f64 y (sin.f64 (*.f64 -1/3 (*.f64 t z))))) (cos.f64 (*.f64 -1/3 (*.f64 t z))))","(+.f64 (*.f64 -1 (*.f64 y (sin.f64 (*.f64 -1/3 (*.f64 t z))))) (+.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (*.f64 -1/2 (*.f64 (pow.f64 y 2) (cos.f64 (*.f64 -1/3 (*.f64 t z)))))))","(+.f64 (*.f64 -1 (*.f64 y (sin.f64 (*.f64 -1/3 (*.f64 t z))))) (+.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 3) (sin.f64 (*.f64 -1/3 (*.f64 t z))))) (*.f64 -1/2 (*.f64 (pow.f64 y 2) (cos.f64 (*.f64 -1/3 (*.f64 t z))))))))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(*.f64 -1/3 t)","(*.f64 -1/3 t)","(*.f64 -1/3 t)","(*.f64 -1/3 t)","(*.f64 -1/3 t)","(*.f64 -1/3 t)","(*.f64 -1/3 t)","(*.f64 -1/3 t)","(*.f64 -1/3 t)","(*.f64 -1/3 t)","(*.f64 -1/3 t)","(*.f64 -1/3 t)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 (/.f64 a b))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2/3 (*.f64 (*.f64 t (*.f64 z (sin.f64 y))) (sqrt.f64 x))) (+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b))))","(+.f64 (*.f64 2/3 (*.f64 (*.f64 t (*.f64 z (sin.f64 y))) (sqrt.f64 x))) (+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) (cos.f64 y))) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))))","(+.f64 (*.f64 -1/81 (*.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) (sin.f64 y))) (sqrt.f64 x))) (+.f64 (*.f64 2/3 (*.f64 (*.f64 t (*.f64 z (sin.f64 y))) (sqrt.f64 x))) (+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) (cos.f64 y))) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b))))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2/3 (*.f64 (*.f64 t (*.f64 z (sin.f64 y))) (sqrt.f64 x))) (+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b))))","(+.f64 (*.f64 2/3 (*.f64 (*.f64 t (*.f64 z (sin.f64 y))) (sqrt.f64 x))) (+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) (cos.f64 y))) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))))","(+.f64 (*.f64 -1/81 (*.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) (sin.f64 y))) (sqrt.f64 x))) (+.f64 (*.f64 2/3 (*.f64 (*.f64 t (*.f64 z (sin.f64 y))) (sqrt.f64 x))) (+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) (cos.f64 y))) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b))))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (+.f64 (*.f64 2 (*.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (sqrt.f64 x))) (*.f64 -2 (*.f64 (*.f64 y (sin.f64 (*.f64 -1/3 (*.f64 t z)))) (sqrt.f64 x)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (pow.f64 y 2)) (sqrt.f64 x))) (+.f64 (*.f64 -1/3 (/.f64 a b)) (+.f64 (*.f64 2 (*.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (sqrt.f64 x))) (*.f64 -2 (*.f64 (*.f64 y (sin.f64 (*.f64 -1/3 (*.f64 t z)))) (sqrt.f64 x))))))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (pow.f64 y 3) (sin.f64 (*.f64 -1/3 (*.f64 t z)))) (sqrt.f64 x))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (pow.f64 y 2)) (sqrt.f64 x))) (+.f64 (*.f64 -1/3 (/.f64 a b)) (+.f64 (*.f64 2 (*.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (sqrt.f64 x))) (*.f64 -2 (*.f64 (*.f64 y (sin.f64 (*.f64 -1/3 (*.f64 t z)))) (sqrt.f64 x)))))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(*.f64 -1/3 (/.f64 a b))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(*.f64 -1/3 (/.f64 a b))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(*.f64 -1/3 (/.f64 a b))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))"]],"method":["egg-herbie"],"outputs":[["(cos.f64 y)","(+.f64 (cos.f64 y) (*.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y)))))","(+.f64 (cos.f64 y) (*.f64 1/3 (*.f64 (*.f64 t z) (sin.f64 y))))","(fma.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y))) (cos.f64 y))","(fma.f64 1/3 (*.f64 z (*.f64 t (sin.f64 y))) (cos.f64 y))","(+.f64 (*.f64 -1/18 (*.f64 (pow.f64 t 2) (*.f64 (cos.f64 y) (pow.f64 z 2)))) (+.f64 (cos.f64 y) (*.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y))))))","(+.f64 (cos.f64 y) (fma.f64 1/3 (*.f64 (*.f64 t z) (sin.f64 y)) (*.f64 (*.f64 -1/18 (*.f64 t t)) (*.f64 (cos.f64 y) (*.f64 z z)))))","(fma.f64 (*.f64 -1/18 (*.f64 t t)) (*.f64 (cos.f64 y) (*.f64 z z)) (fma.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y))) (cos.f64 y)))","(fma.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y))) (fma.f64 -1/18 (*.f64 t (*.f64 t (*.f64 z (*.f64 (cos.f64 y) z)))) (cos.f64 y)))","(+.f64 (cos.f64 y) (*.f64 (*.f64 t z) (+.f64 (*.f64 1/3 (sin.f64 y)) (*.f64 (*.f64 t z) (*.f64 (cos.f64 y) -1/18)))))","(+.f64 (*.f64 -1/162 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) (sin.f64 y)))) (+.f64 (*.f64 -1/18 (*.f64 (pow.f64 t 2) (*.f64 (cos.f64 y) (pow.f64 z 2)))) (+.f64 (cos.f64 y) (*.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y)))))))","(fma.f64 -1/162 (*.f64 (pow.f64 t 3) (*.f64 (sin.f64 y) (pow.f64 z 3))) (+.f64 (cos.f64 y) (fma.f64 1/3 (*.f64 (*.f64 t z) (sin.f64 y)) (*.f64 (*.f64 -1/18 (*.f64 t t)) (*.f64 (cos.f64 y) (*.f64 z z))))))","(fma.f64 -1/162 (*.f64 (pow.f64 t 3) (*.f64 (sin.f64 y) (pow.f64 z 3))) (fma.f64 (*.f64 -1/18 (*.f64 t t)) (*.f64 (cos.f64 y) (*.f64 z z)) (fma.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y))) (cos.f64 y))))","(+.f64 (fma.f64 -1/18 (*.f64 t (*.f64 t (*.f64 z (*.f64 (cos.f64 y) z)))) (cos.f64 y)) (*.f64 (sin.f64 y) (+.f64 (*.f64 1/3 (*.f64 t z)) (*.f64 -1/162 (*.f64 (pow.f64 t 3) (pow.f64 z 3))))))","(+.f64 (cos.f64 y) (fma.f64 -1/162 (*.f64 (sin.f64 y) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (*.f64 t z) (+.f64 (*.f64 1/3 (sin.f64 y)) (*.f64 (*.f64 t z) (*.f64 (cos.f64 y) -1/18))))))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 y)","(+.f64 (cos.f64 y) (*.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y)))))","(+.f64 (cos.f64 y) (*.f64 1/3 (*.f64 (*.f64 t z) (sin.f64 y))))","(fma.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y))) (cos.f64 y))","(fma.f64 1/3 (*.f64 z (*.f64 t (sin.f64 y))) (cos.f64 y))","(+.f64 (cos.f64 y) (+.f64 (*.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y)))) (*.f64 -1/18 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) (cos.f64 y))))))","(+.f64 (cos.f64 y) (fma.f64 1/3 (*.f64 (*.f64 t z) (sin.f64 y)) (*.f64 (*.f64 -1/18 (*.f64 t t)) (*.f64 (cos.f64 y) (*.f64 z z)))))","(fma.f64 (*.f64 -1/18 (*.f64 t t)) (*.f64 (cos.f64 y) (*.f64 z z)) (fma.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y))) (cos.f64 y)))","(fma.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y))) (fma.f64 -1/18 (*.f64 t (*.f64 t (*.f64 z (*.f64 (cos.f64 y) z)))) (cos.f64 y)))","(+.f64 (cos.f64 y) (*.f64 (*.f64 t z) (+.f64 (*.f64 1/3 (sin.f64 y)) (*.f64 (*.f64 t z) (*.f64 (cos.f64 y) -1/18)))))","(+.f64 (*.f64 -1/162 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) (sin.f64 y)))) (+.f64 (cos.f64 y) (+.f64 (*.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y)))) (*.f64 -1/18 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) (cos.f64 y)))))))","(fma.f64 -1/162 (*.f64 (pow.f64 t 3) (*.f64 (sin.f64 y) (pow.f64 z 3))) (+.f64 (cos.f64 y) (fma.f64 1/3 (*.f64 (*.f64 t z) (sin.f64 y)) (*.f64 (*.f64 -1/18 (*.f64 t t)) (*.f64 (cos.f64 y) (*.f64 z z))))))","(fma.f64 -1/162 (*.f64 (pow.f64 t 3) (*.f64 (sin.f64 y) (pow.f64 z 3))) (fma.f64 (*.f64 -1/18 (*.f64 t t)) (*.f64 (cos.f64 y) (*.f64 z z)) (fma.f64 1/3 (*.f64 t (*.f64 z (sin.f64 y))) (cos.f64 y))))","(+.f64 (fma.f64 -1/18 (*.f64 t (*.f64 t (*.f64 z (*.f64 (cos.f64 y) z)))) (cos.f64 y)) (*.f64 (sin.f64 y) (+.f64 (*.f64 1/3 (*.f64 t z)) (*.f64 -1/162 (*.f64 (pow.f64 t 3) (pow.f64 z 3))))))","(+.f64 (cos.f64 y) (fma.f64 -1/162 (*.f64 (sin.f64 y) (*.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (*.f64 t z) (+.f64 (*.f64 1/3 (sin.f64 y)) (*.f64 (*.f64 t z) (*.f64 (cos.f64 y) -1/18))))))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (*.f64 -1/3 (*.f64 t z)))","(cos.f64 (*.f64 t (*.f64 -1/3 z)))","(cos.f64 (*.f64 t (*.f64 z -1/3)))","(+.f64 (*.f64 -1 (*.f64 y (sin.f64 (*.f64 -1/3 (*.f64 t z))))) (cos.f64 (*.f64 -1/3 (*.f64 t z))))","(fma.f64 -1 (*.f64 y (sin.f64 (*.f64 -1/3 (*.f64 t z)))) (cos.f64 (*.f64 -1/3 (*.f64 t z))))","(-.f64 (cos.f64 (*.f64 t (*.f64 -1/3 z))) (*.f64 y (sin.f64 (*.f64 t (*.f64 -1/3 z)))))","(-.f64 (cos.f64 (*.f64 t (*.f64 z -1/3))) (*.f64 y (sin.f64 (*.f64 t (*.f64 z -1/3)))))","(+.f64 (*.f64 -1 (*.f64 y (sin.f64 (*.f64 -1/3 (*.f64 t z))))) (+.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (*.f64 -1/2 (*.f64 (pow.f64 y 2) (cos.f64 (*.f64 -1/3 (*.f64 t z)))))))","(+.f64 (fma.f64 -1 (*.f64 y (sin.f64 (*.f64 -1/3 (*.f64 t z)))) (cos.f64 (*.f64 -1/3 (*.f64 t z)))) (*.f64 (*.f64 -1/2 (*.f64 y y)) (cos.f64 (*.f64 -1/3 (*.f64 t z)))))","(-.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 y y)) 1) (cos.f64 (*.f64 t (*.f64 -1/3 z)))) (*.f64 y (sin.f64 (*.f64 t (*.f64 -1/3 z)))))","(-.f64 (*.f64 (cos.f64 (*.f64 t (*.f64 z -1/3))) (fma.f64 -1/2 (*.f64 y y) 1)) (*.f64 y (sin.f64 (*.f64 t (*.f64 z -1/3)))))","(+.f64 (*.f64 -1 (*.f64 y (sin.f64 (*.f64 -1/3 (*.f64 t z))))) (+.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 3) (sin.f64 (*.f64 -1/3 (*.f64 t z))))) (*.f64 -1/2 (*.f64 (pow.f64 y 2) (cos.f64 (*.f64 -1/3 (*.f64 t z))))))))","(+.f64 (fma.f64 -1 (*.f64 y (sin.f64 (*.f64 -1/3 (*.f64 t z)))) (cos.f64 (*.f64 -1/3 (*.f64 t z)))) (fma.f64 1/6 (*.f64 (sin.f64 (*.f64 -1/3 (*.f64 t z))) (pow.f64 y 3)) (*.f64 (*.f64 -1/2 (*.f64 y y)) (cos.f64 (*.f64 -1/3 (*.f64 t z))))))","(+.f64 (-.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 y y)) 1) (cos.f64 (*.f64 t (*.f64 -1/3 z)))) (*.f64 y (sin.f64 (*.f64 t (*.f64 -1/3 z))))) (*.f64 (sin.f64 (*.f64 t (*.f64 -1/3 z))) (*.f64 1/6 (pow.f64 y 3))))","(-.f64 (fma.f64 (sin.f64 (*.f64 t (*.f64 z -1/3))) (*.f64 1/6 (pow.f64 y 3)) (*.f64 (cos.f64 (*.f64 t (*.f64 z -1/3))) (fma.f64 -1/2 (*.f64 y y) 1))) (*.f64 y (sin.f64 (*.f64 t (*.f64 z -1/3)))))","(-.f64 (*.f64 (cos.f64 (*.f64 t (*.f64 z -1/3))) (fma.f64 -1/2 (*.f64 y y) 1)) (*.f64 (sin.f64 (*.f64 t (*.f64 z -1/3))) (-.f64 y (*.f64 1/6 (pow.f64 y 3)))))","(fma.f64 (cos.f64 (*.f64 t (*.f64 z -1/3))) (fma.f64 -1/2 (*.f64 y y) 1) (*.f64 (sin.f64 (*.f64 t (*.f64 z -1/3))) (-.f64 (*.f64 1/6 (pow.f64 y 3)) y)))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(cos.f64 (fma.f64 z (*.f64 -1/3 t) y))","(cos.f64 (fma.f64 z (*.f64 t -1/3) y))","(cos.f64 (fma.f64 -1/3 (*.f64 t z) y))","(cos.f64 (fma.f64 t (*.f64 z -1/3) y))","(*.f64 -1/3 t)","(*.f64 t -1/3)","(*.f64 -1/3 t)","(*.f64 t -1/3)","(*.f64 -1/3 t)","(*.f64 t -1/3)","(*.f64 -1/3 t)","(*.f64 t -1/3)","(*.f64 -1/3 t)","(*.f64 t -1/3)","(*.f64 -1/3 t)","(*.f64 t -1/3)","(*.f64 -1/3 t)","(*.f64 t -1/3)","(*.f64 -1/3 t)","(*.f64 t -1/3)","(*.f64 -1/3 t)","(*.f64 t -1/3)","(*.f64 -1/3 t)","(*.f64 t -1/3)","(*.f64 -1/3 t)","(*.f64 t -1/3)","(*.f64 -1/3 t)","(*.f64 t -1/3)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 a)","(*.f64 -1/3 (/.f64 a b))","(*.f64 (/.f64 -1/3 b) a)","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)) (*.f64 (/.f64 -1/3 b) a))","(fma.f64 (cos.f64 y) (*.f64 2 (sqrt.f64 x)) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 2/3 (*.f64 (*.f64 t (*.f64 z (sin.f64 y))) (sqrt.f64 x))) (+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b))))","(fma.f64 2/3 (*.f64 (*.f64 (*.f64 t z) (sin.f64 y)) (sqrt.f64 x)) (fma.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 (*.f64 2/3 t) (*.f64 z (sin.f64 y))) (*.f64 (cos.f64 y) 2))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (fma.f64 (*.f64 t (*.f64 z (sin.f64 y))) 2/3 (*.f64 (cos.f64 y) 2))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (fma.f64 (*.f64 z (*.f64 t (sin.f64 y))) 2/3 (*.f64 (cos.f64 y) 2))))","(+.f64 (*.f64 2/3 (*.f64 (*.f64 t (*.f64 z (sin.f64 y))) (sqrt.f64 x))) (+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) (cos.f64 y))) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))))","(fma.f64 2/3 (*.f64 (*.f64 (*.f64 t z) (sin.f64 y)) (sqrt.f64 x)) (fma.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)) (fma.f64 -1/9 (*.f64 (*.f64 t t) (*.f64 (*.f64 (cos.f64 y) (*.f64 z z)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))))","(+.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 -1/9 (*.f64 t t)) (*.f64 (*.f64 z z) (*.f64 (cos.f64 y) (sqrt.f64 x))))) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 (*.f64 2/3 t) (*.f64 z (sin.f64 y))) (*.f64 (cos.f64 y) 2))))","(+.f64 (*.f64 (/.f64 -1/3 b) a) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 t (*.f64 (*.f64 2/3 (sin.f64 y)) z)) (*.f64 (cos.f64 y) (+.f64 2 (*.f64 -1/9 (*.f64 (*.f64 t z) (*.f64 t z))))))))","(+.f64 (*.f64 (/.f64 -1/3 b) a) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 t (*.f64 (*.f64 2/3 z) (sin.f64 y))) (*.f64 (cos.f64 y) (+.f64 2 (*.f64 -1/9 (*.f64 (*.f64 t t) (*.f64 z z))))))))","(+.f64 (*.f64 -1/81 (*.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) (sin.f64 y))) (sqrt.f64 x))) (+.f64 (*.f64 2/3 (*.f64 (*.f64 t (*.f64 z (sin.f64 y))) (sqrt.f64 x))) (+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) (cos.f64 y))) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b))))))","(fma.f64 -1/81 (*.f64 (pow.f64 t 3) (*.f64 (*.f64 (sin.f64 y) (pow.f64 z 3)) (sqrt.f64 x))) (fma.f64 2/3 (*.f64 (*.f64 (*.f64 t z) (sin.f64 y)) (sqrt.f64 x)) (fma.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)) (fma.f64 -1/9 (*.f64 (*.f64 t t) (*.f64 (*.f64 (cos.f64 y) (*.f64 z z)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b))))))","(+.f64 (+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 (cos.f64 y) 2) (*.f64 (*.f64 (cos.f64 y) (*.f64 t (*.f64 t (*.f64 z z)))) -1/9)))) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 (*.f64 -1/81 (pow.f64 t 3)) (*.f64 (sin.f64 y) (pow.f64 z 3))) (*.f64 (*.f64 2/3 t) (*.f64 z (sin.f64 y))))))","(+.f64 (*.f64 (/.f64 -1/3 b) a) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 (sin.f64 y) (+.f64 (*.f64 (*.f64 (pow.f64 t 3) -1/81) (pow.f64 z 3)) (*.f64 (*.f64 t z) 2/3))) (*.f64 (cos.f64 y) (+.f64 2 (*.f64 -1/9 (*.f64 (*.f64 t z) (*.f64 t z))))))))","(+.f64 (*.f64 (/.f64 -1/3 b) a) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 (cos.f64 y) (+.f64 2 (*.f64 -1/9 (*.f64 (*.f64 t t) (*.f64 z z))))) (*.f64 (sin.f64 y) (+.f64 (*.f64 (*.f64 -1/81 (pow.f64 z 3)) (pow.f64 t 3)) (*.f64 (*.f64 t z) 2/3))))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)) (*.f64 (/.f64 -1/3 b) a))","(fma.f64 (cos.f64 y) (*.f64 2 (sqrt.f64 x)) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 2/3 (*.f64 (*.f64 t (*.f64 z (sin.f64 y))) (sqrt.f64 x))) (+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b))))","(fma.f64 2/3 (*.f64 (*.f64 (*.f64 t z) (sin.f64 y)) (sqrt.f64 x)) (fma.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 (*.f64 2/3 t) (*.f64 z (sin.f64 y))) (*.f64 (cos.f64 y) 2))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (fma.f64 (*.f64 t (*.f64 z (sin.f64 y))) 2/3 (*.f64 (cos.f64 y) 2))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (fma.f64 (*.f64 z (*.f64 t (sin.f64 y))) 2/3 (*.f64 (cos.f64 y) 2))))","(+.f64 (*.f64 2/3 (*.f64 (*.f64 t (*.f64 z (sin.f64 y))) (sqrt.f64 x))) (+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) (cos.f64 y))) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))))","(fma.f64 2/3 (*.f64 (*.f64 (*.f64 t z) (sin.f64 y)) (sqrt.f64 x)) (fma.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)) (fma.f64 -1/9 (*.f64 (*.f64 t t) (*.f64 (*.f64 (cos.f64 y) (*.f64 z z)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))))","(+.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 -1/9 (*.f64 t t)) (*.f64 (*.f64 z z) (*.f64 (cos.f64 y) (sqrt.f64 x))))) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 (*.f64 2/3 t) (*.f64 z (sin.f64 y))) (*.f64 (cos.f64 y) 2))))","(+.f64 (*.f64 (/.f64 -1/3 b) a) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 t (*.f64 (*.f64 2/3 (sin.f64 y)) z)) (*.f64 (cos.f64 y) (+.f64 2 (*.f64 -1/9 (*.f64 (*.f64 t z) (*.f64 t z))))))))","(+.f64 (*.f64 (/.f64 -1/3 b) a) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 t (*.f64 (*.f64 2/3 z) (sin.f64 y))) (*.f64 (cos.f64 y) (+.f64 2 (*.f64 -1/9 (*.f64 (*.f64 t t) (*.f64 z z))))))))","(+.f64 (*.f64 -1/81 (*.f64 (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 3) (sin.f64 y))) (sqrt.f64 x))) (+.f64 (*.f64 2/3 (*.f64 (*.f64 t (*.f64 z (sin.f64 y))) (sqrt.f64 x))) (+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (+.f64 (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) (cos.f64 y))) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b))))))","(fma.f64 -1/81 (*.f64 (pow.f64 t 3) (*.f64 (*.f64 (sin.f64 y) (pow.f64 z 3)) (sqrt.f64 x))) (fma.f64 2/3 (*.f64 (*.f64 (*.f64 t z) (sin.f64 y)) (sqrt.f64 x)) (fma.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)) (fma.f64 -1/9 (*.f64 (*.f64 t t) (*.f64 (*.f64 (cos.f64 y) (*.f64 z z)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b))))))","(+.f64 (+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 (cos.f64 y) 2) (*.f64 (*.f64 (cos.f64 y) (*.f64 t (*.f64 t (*.f64 z z)))) -1/9)))) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 (*.f64 -1/81 (pow.f64 t 3)) (*.f64 (sin.f64 y) (pow.f64 z 3))) (*.f64 (*.f64 2/3 t) (*.f64 z (sin.f64 y))))))","(+.f64 (*.f64 (/.f64 -1/3 b) a) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 (sin.f64 y) (+.f64 (*.f64 (*.f64 (pow.f64 t 3) -1/81) (pow.f64 z 3)) (*.f64 (*.f64 t z) 2/3))) (*.f64 (cos.f64 y) (+.f64 2 (*.f64 -1/9 (*.f64 (*.f64 t z) (*.f64 t z))))))))","(+.f64 (*.f64 (/.f64 -1/3 b) a) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 (cos.f64 y) (+.f64 2 (*.f64 -1/9 (*.f64 (*.f64 t t) (*.f64 z z))))) (*.f64 (sin.f64 y) (+.f64 (*.f64 (*.f64 -1/81 (pow.f64 z 3)) (pow.f64 t 3)) (*.f64 (*.f64 t z) 2/3))))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (cos.f64 (*.f64 t (*.f64 -1/3 z))) (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 (cos.f64 (*.f64 t (*.f64 z -1/3))) (*.f64 2 (sqrt.f64 x)) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (+.f64 (*.f64 2 (*.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (sqrt.f64 x))) (*.f64 -2 (*.f64 (*.f64 y (sin.f64 (*.f64 -1/3 (*.f64 t z)))) (sqrt.f64 x)))))","(fma.f64 -1/3 (/.f64 a b) (fma.f64 2 (*.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (sqrt.f64 x)) (*.f64 -2 (*.f64 y (*.f64 (sin.f64 (*.f64 -1/3 (*.f64 t z))) (sqrt.f64 x))))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 2 (cos.f64 (*.f64 t (*.f64 -1/3 z)))) (*.f64 (*.f64 -2 y) (sin.f64 (*.f64 t (*.f64 -1/3 z)))))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (fma.f64 2 (cos.f64 (*.f64 t (*.f64 z -1/3))) (*.f64 y (*.f64 (sin.f64 (*.f64 t (*.f64 z -1/3))) -2)))))","(+.f64 (*.f64 -1 (*.f64 (*.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (pow.f64 y 2)) (sqrt.f64 x))) (+.f64 (*.f64 -1/3 (/.f64 a b)) (+.f64 (*.f64 2 (*.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (sqrt.f64 x))) (*.f64 -2 (*.f64 (*.f64 y (sin.f64 (*.f64 -1/3 (*.f64 t z)))) (sqrt.f64 x))))))","(fma.f64 -1 (*.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (*.f64 (*.f64 y y) (sqrt.f64 x))) (fma.f64 -1/3 (/.f64 a b) (fma.f64 2 (*.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (sqrt.f64 x)) (*.f64 -2 (*.f64 y (*.f64 (sin.f64 (*.f64 -1/3 (*.f64 t z))) (sqrt.f64 x)))))))","(-.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 2 (cos.f64 (*.f64 t (*.f64 -1/3 z)))) (*.f64 (*.f64 -2 y) (sin.f64 (*.f64 t (*.f64 -1/3 z))))))) (*.f64 (cos.f64 (*.f64 t (*.f64 -1/3 z))) (*.f64 (*.f64 y y) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (+.f64 (fma.f64 2 (cos.f64 (*.f64 t (*.f64 z -1/3))) (*.f64 y (*.f64 (sin.f64 (*.f64 t (*.f64 z -1/3))) -2))) (*.f64 y (neg.f64 (*.f64 y (cos.f64 (*.f64 t (*.f64 z -1/3)))))))))","(+.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sin.f64 (*.f64 t (*.f64 z -1/3))) (*.f64 y (*.f64 (sqrt.f64 x) -2)))) (*.f64 (*.f64 (cos.f64 (*.f64 t (*.f64 z -1/3))) (sqrt.f64 x)) (-.f64 2 (*.f64 y y))))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (pow.f64 y 3) (sin.f64 (*.f64 -1/3 (*.f64 t z)))) (sqrt.f64 x))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (pow.f64 y 2)) (sqrt.f64 x))) (+.f64 (*.f64 -1/3 (/.f64 a b)) (+.f64 (*.f64 2 (*.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (sqrt.f64 x))) (*.f64 -2 (*.f64 (*.f64 y (sin.f64 (*.f64 -1/3 (*.f64 t z)))) (sqrt.f64 x)))))))","(fma.f64 1/3 (*.f64 (pow.f64 y 3) (*.f64 (sin.f64 (*.f64 -1/3 (*.f64 t z))) (sqrt.f64 x))) (fma.f64 -1 (*.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (*.f64 (*.f64 y y) (sqrt.f64 x))) (fma.f64 -1/3 (/.f64 a b) (fma.f64 2 (*.f64 (cos.f64 (*.f64 -1/3 (*.f64 t z))) (sqrt.f64 x)) (*.f64 -2 (*.f64 y (*.f64 (sin.f64 (*.f64 -1/3 (*.f64 t z))) (sqrt.f64 x))))))))","(+.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 2 (cos.f64 (*.f64 t (*.f64 -1/3 z)))) (*.f64 (*.f64 -2 y) (sin.f64 (*.f64 t (*.f64 -1/3 z))))))) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 1/3 (*.f64 (sin.f64 (*.f64 t (*.f64 -1/3 z))) (pow.f64 y 3))) (neg.f64 (*.f64 y (*.f64 y (cos.f64 (*.f64 t (*.f64 -1/3 z)))))))))","(+.f64 (*.f64 (/.f64 -1/3 b) a) (*.f64 (sqrt.f64 x) (+.f64 (-.f64 (*.f64 (sin.f64 (*.f64 t (*.f64 z -1/3))) (*.f64 1/3 (pow.f64 y 3))) (*.f64 y (*.f64 y (cos.f64 (*.f64 t (*.f64 z -1/3)))))) (fma.f64 2 (cos.f64 (*.f64 t (*.f64 z -1/3))) (*.f64 y (*.f64 (sin.f64 (*.f64 t (*.f64 z -1/3))) -2))))))","(+.f64 (*.f64 (/.f64 -1/3 b) a) (+.f64 (*.f64 (*.f64 y (*.f64 (sin.f64 (*.f64 t (*.f64 z -1/3))) (sqrt.f64 x))) (+.f64 -2 (*.f64 1/3 (*.f64 y y)))) (*.f64 (*.f64 (cos.f64 (*.f64 t (*.f64 z -1/3))) (sqrt.f64 x)) (-.f64 2 (*.f64 y y)))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 -1/3 t) y)) (sqrt.f64 x))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x)))","(*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))))","(*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))))","(*.f64 (cos.f64 (fma.f64 t (*.f64 z -1/3) y)) (*.f64 2 (sqrt.f64 x)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(*.f64 -1/3 (/.f64 a b))","(*.f64 (/.f64 -1/3 b) a)","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(*.f64 -1/3 (/.f64 a b))","(*.f64 (/.f64 -1/3 b) a)","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(*.f64 -1/3 (/.f64 a b))","(*.f64 (/.f64 -1/3 b) a)","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x)))","(*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))))","(*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))))","(*.f64 (cos.f64 (fma.f64 t (*.f64 z -1/3) y)) (*.f64 2 (sqrt.f64 x)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x)))","(*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))))","(*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))))","(*.f64 (cos.f64 (fma.f64 t (*.f64 z -1/3) y)) (*.f64 2 (sqrt.f64 x)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))","(+.f64 (*.f64 2 (*.f64 (cos.f64 (+.f64 (*.f64 -1/3 (*.f64 t z)) y)) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) (sqrt.f64 x))))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 -1/3 (*.f64 t z) y))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (*.f64 (/.f64 -1/3 b) a))"]],"stop":[["node limit",1]],"time":75.052978515625,"type":"simplify"},{"compiler":[[3365,2025]],"time":36.723876953125,"type":"eval"},{"alts":[["(fma.f64 (sqrt.f64 x) (*.f64 2 (sqrt.f64 (pow.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) 2))) (/.f64 (*.f64 a -1/3) b))","fresh",27.96794682503744],["(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (fma.f64 z (*.f64 t -1/3) y)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (fma.f64 z (*.f64 t -1/3) y)))) (sin.f64 1)))) (/.f64 (*.f64 a -1/3) b))","fresh",42.28531952838265],["(fma.f64 (sqrt.f64 x) (*.f64 2 (pow.f64 (cbrt.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) 3)) (/.f64 (*.f64 a -1/3) b))","fresh",21.515522052559557],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (pow.f64 (pow.f64 (*.f64 t -1/3) 3) 1/3) y))) (/.f64 (*.f64 a -1/3) b))","fresh",40.7776446609789],["(sqrt.f64 (pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 2))","fresh",43.673282642660894],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (+.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/3) t))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/3) t)))) y))) (/.f64 (*.f64 a -1/3) b))","fresh",34.916660427575046],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (/.f64 (*.f64 a -1/3) b))","fresh",21.442491603407785],["(pow.f64 (cbrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))) 3)","fresh",21.794269708854653],["(*.f64 (/.f64 -1/3 b) a)","fresh",38.225355967910396],["(pow.f64 (pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 3) 1/3)","fresh",52.89013962017931],["(*.f64 -1/3 (/.f64 a b))","fresh",38.22181342652131],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (exp.f64 (log.f64 (*.f64 t -1/3))) y))) (/.f64 (*.f64 a -1/3) b))","fresh",52.51889031916122],["(fma.f64 (sqrt.f64 x) (*.f64 2 (-.f64 (*.f64 (cos.f64 y) (cos.f64 (*.f64 (*.f64 z t) -1/3))) (*.f64 (sin.f64 y) (sin.f64 (*.f64 (*.f64 z t) -1/3))))) (/.f64 (*.f64 a -1/3) b))","fresh",21.271645081191252],["(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (cos.f64 y) (*.f64 (*.f64 t z) (+.f64 (*.f64 1/3 (sin.f64 y)) (*.f64 (*.f64 t z) (*.f64 (cos.f64 y) -1/18)))))) (/.f64 (*.f64 a -1/3) b))","fresh",29.383650130495656],["(/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) 3) (pow.f64 (*.f64 -1/3 (/.f64 a b)) 3)) (fma.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (-.f64 (pow.f64 (*.f64 -1/3 (/.f64 a b)) 2) (*.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (*.f64 -1/3 (/.f64 a b))))))","fresh",41.18483947082501],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (expm1.f64 (log1p.f64 (*.f64 -1/3 a))) b))","fresh",31.67221084142025],["(fma.f64 (sqrt.f64 x) (*.f64 2 (log1p.f64 (expm1.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))) (/.f64 (*.f64 a -1/3) b))","fresh",21.480659503717344],["(fma.f64 (sqrt.f64 x) (*.f64 2 (-.f64 (exp.f64 (log1p.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 1)) (/.f64 (*.f64 a -1/3) b))","fresh",21.502412115800862],["(fma.f64 (sqrt.f64 x) (*.f64 2 (fma.f64 1/3 (*.f64 z (*.f64 t (sin.f64 y))) (cos.f64 y))) (/.f64 (*.f64 a -1/3) b))","fresh",24.943265235359096],["(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))) (/.f64 a (*.f64 b 3)))","fresh",21.645893871756734],["(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))) (/.f64 (*.f64 a -1/3) b))","fresh",21.631837949844783],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (*.f64 a -1/3) b))","next",18.512818426028637],["(fma.f64 (sqrt.f64 x) (*.f64 2 (log.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))) (/.f64 (*.f64 a -1/3) b))","fresh",21.486487054874875],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (pow.f64 (cbrt.f64 (*.f64 t -1/3)) 3) y))) (/.f64 (*.f64 a -1/3) b))","fresh",21.262677560158668],["(+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))) (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))))","fresh",62.20045069368174],["(exp.f64 (log.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))","fresh",42.4993217728059]],"compiler":[[26,20],[41,32],[26,20],[27,21],[26,20],[33,26],[23,17],[26,20],[11,9],[27,21],[11,9],[25,19],[35,25],[36,24],[80,53],[25,19],[25,19],[27,21],[26,19],[25,19],[47,35],[18,14],[25,19],[26,20],[67,45],[25,19],[26,20],[41,32],[26,20],[27,21],[26,20],[33,26],[23,17],[26,20],[11,9],[27,21],[11,9],[25,19],[35,25],[36,24],[80,53],[25,19],[25,19],[27,21],[26,19],[25,19],[47,35],[18,14],[25,19],[26,20],[67,45],[25,19]],"count":[[135,26]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[133,25],"picked":[1,0]}],"min-error":[16.619857290464914],"time":48.133056640625,"type":"prune"},{"compiler":[[40,23]],"locations":[["(cos.f64 y)",0.02734375,true],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (*.f64 a -1/3) b))",0.09375,true],["(/.f64 (*.f64 a -1/3) b)",0.15625,true],["(*.f64 a -1/3)",0.2890625,false]],"time":10.06396484375,"type":"localize"},{"count":[[3,65]],"series":[["(cos.f64 y)","y","-inf",0.131103515625],["(cos.f64 y)","y","inf",0.133056640625],["(cos.f64 y)","y","0",0.197998046875],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (*.f64 a -1/3) b))","b","-inf",0.1708984375],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (*.f64 a -1/3) b))","b","inf",0.2099609375],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (*.f64 a -1/3) b))","b","0",0.296875],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (*.f64 a -1/3) b))","a","-inf",0.18994140625],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (*.f64 a -1/3) b))","a","inf",0.176025390625],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (*.f64 a -1/3) b))","a","0",0.43603515625],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (*.f64 a -1/3) b))","y","-inf",0.473876953125],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (*.f64 a -1/3) b))","y","inf",0.484130859375],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (*.f64 a -1/3) b))","y","0",0.427978515625],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (*.f64 a -1/3) b))","x","-inf",1.73095703125],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (*.f64 a -1/3) b))","x","inf",0.40087890625],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (*.f64 a -1/3) b))","x","0",0.41015625],["(/.f64 (*.f64 a -1/3) b)","b","-inf",0.208984375],["(/.f64 (*.f64 a -1/3) b)","b","inf",0.27001953125],["(/.f64 (*.f64 a -1/3) b)","b","0",0.286865234375],["(/.f64 (*.f64 a -1/3) b)","a","-inf",0.2119140625],["(/.f64 (*.f64 a -1/3) b)","a","inf",0.301025390625],["(/.f64 (*.f64 a -1/3) b)","a","0",0.364013671875]],"time":7.787109375,"type":"series"},{"count":[[3,102]],"egraph":[[2,3228,28,0.027248208],[1,266,28,0.004429290999999999],[0,13,28,0.000358208]],"inputs":[["(/.f64 (*.f64 a -1/3) b)","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (*.f64 a -1/3) b))","(cos.f64 y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 -1/3 (/.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 -1/3 (/.f64 a b)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (*.f64 -1/3 (/.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 -1/3 (/.f64 a b))))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 -1/3 (/.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 -1/3 (/.f64 a b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (/.f64 1 (*.f64 b -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (*.f64 -1/3 (/.f64 1 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/3 (/.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/3 (*.f64 a (/.f64 1 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a -1/3) (/.f64 1 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/3 (/.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 -1/3 (/.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -1/3 (/.f64 a b))) (cbrt.f64 (pow.f64 (*.f64 -1/3 (/.f64 a b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 -1/3 (/.f64 a b)) 2)) (cbrt.f64 (*.f64 -1/3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 a -1/3)) 2) (*.f64 (cbrt.f64 (*.f64 a -1/3)) (/.f64 1 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 -1/3 (/.f64 a b))) (sqrt.f64 (*.f64 -1/3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 a -1/3)) (*.f64 (sqrt.f64 (*.f64 a -1/3)) (/.f64 1 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a 1/3) (/.f64 1 (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 b) (*.f64 a -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a 1) (/.f64 -1/3 b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a b) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 a -1/3)) 2) 1) (/.f64 (cbrt.f64 (*.f64 a -1/3)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 a -1/3)) 1) (/.f64 (sqrt.f64 (*.f64 a -1/3)) b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (pow.f64 (cbrt.f64 b) 2)) (/.f64 -1/3 (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1/3 (pow.f64 (cbrt.f64 b) 2)) (/.f64 a (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 b) -2) (/.f64 (*.f64 a -1/3) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 a -1/3)) 2) (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 (*.f64 -1/3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 a -1/3)) (pow.f64 (cbrt.f64 b) 2)) (/.f64 (sqrt.f64 (*.f64 a -1/3)) (cbrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (sqrt.f64 b)) (/.f64 -1/3 (sqrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1/3 (sqrt.f64 b)) (/.f64 a (sqrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 b -1/2) (/.f64 (*.f64 a -1/3) (sqrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 a -1/3)) 2) (sqrt.f64 b)) (/.f64 (cbrt.f64 (*.f64 a -1/3)) (sqrt.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -1/3 (/.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -1/3 (/.f64 a b)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -1/3 (/.f64 a b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -1/3 (/.f64 a b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 -1/3 (/.f64 a b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -3 (/.f64 b a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 a -1/3) 3) (pow.f64 b 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 -3 (/.f64 b a)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 a -1/3) (neg.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 -1/3 (/.f64 a b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 -1/3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 -1/3 (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -1/3 (/.f64 a b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 a -1/3) 3) (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 -1/3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 -1/3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 -1/3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 -1/3 (/.f64 a b))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))) (*.f64 -1/3 (/.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))) 1) (*.f64 -1/3 (/.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))) (pow.f64 (cbrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))) 2) (cbrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))) (sqrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))) 3) (pow.f64 (*.f64 -1/3 (/.f64 a b)) 3)) (+.f64 (pow.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))) 2) (-.f64 (pow.f64 (*.f64 -1/3 (/.f64 a b)) 2) (*.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))) (*.f64 -1/3 (/.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))) 2) (pow.f64 (*.f64 -1/3 (/.f64 a b)) 2)) (-.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))) (*.f64 -1/3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 -1/3 (/.f64 a b))) (exp.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 -1/3 (/.f64 a b)))) (exp.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))) (+.f64 1 (expm1.f64 (*.f64 -1/3 (/.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 y))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 y))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 y))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 y)))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 y)) (cbrt.f64 (pow.f64 (cos.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 y) 2)) (cbrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 y)) (sqrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 y) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 y)) 1))))))"]],"rules":[["egg-rr",23],["egg-rr",30],["egg-rr",49]],"stop":[["node limit",1]],"time":52.304931640625,"type":"rewrite"},{"count":[[167,121]],"egraph":[[4,4127,836,0.018989708],[3,981,836,0.008000791],[2,298,842,0.002349625],[1,110,864,0.000835208],[0,45,873,0.000255708]],"inputs":[["(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(+.f64 (*.f64 2 (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (sqrt.f64 x))) (+.f64 (*.f64 2 (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (sqrt.f64 x))) (+.f64 (*.f64 1/12 (*.f64 (pow.f64 y 4) (sqrt.f64 x))) (+.f64 (*.f64 2 (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b)))))","(+.f64 (*.f64 -1/360 (*.f64 (pow.f64 y 6) (sqrt.f64 x))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (sqrt.f64 x))) (+.f64 (*.f64 1/12 (*.f64 (pow.f64 y 4) (sqrt.f64 x))) (+.f64 (*.f64 2 (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b))))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(*.f64 -1/3 (/.f64 a b))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(*.f64 -1/3 (/.f64 a b))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(*.f64 -1/3 (/.f64 a b))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 y 2)))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4))))","(+.f64 (*.f64 -1/720 (pow.f64 y 6)) (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(+.f64 (*.f64 2 (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (sqrt.f64 x) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (sqrt.f64 x)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (sqrt.f64 x))) (+.f64 (*.f64 2 (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b))))","(fma.f64 -1 (*.f64 (sqrt.f64 x) (*.f64 y y)) (fma.f64 2 (sqrt.f64 x) (*.f64 -1/3 (/.f64 a b))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 (sqrt.f64 x) (+.f64 (neg.f64 (*.f64 y y)) 2)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (fma.f64 (neg.f64 y) y 2)))","(fma.f64 (sqrt.f64 x) (-.f64 2 (*.f64 y y)) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (sqrt.f64 x))) (+.f64 (*.f64 1/12 (*.f64 (pow.f64 y 4) (sqrt.f64 x))) (+.f64 (*.f64 2 (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b)))))","(fma.f64 -1 (*.f64 (sqrt.f64 x) (*.f64 y y)) (fma.f64 1/12 (*.f64 (sqrt.f64 x) (pow.f64 y 4)) (fma.f64 2 (sqrt.f64 x) (*.f64 -1/3 (/.f64 a b)))))","(+.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 2 (sqrt.f64 x))) (*.f64 (sqrt.f64 x) (+.f64 (neg.f64 (*.f64 y y)) (*.f64 1/12 (pow.f64 y 4)))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 (sqrt.f64 x) (+.f64 (neg.f64 (*.f64 y y)) (fma.f64 1/12 (pow.f64 y 4) 2))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (fma.f64 y (neg.f64 y) (fma.f64 1/12 (pow.f64 y 4) 2))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (-.f64 (fma.f64 1/12 (pow.f64 y 4) 2) (*.f64 y y))))","(+.f64 (*.f64 -1/360 (*.f64 (pow.f64 y 6) (sqrt.f64 x))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (sqrt.f64 x))) (+.f64 (*.f64 1/12 (*.f64 (pow.f64 y 4) (sqrt.f64 x))) (+.f64 (*.f64 2 (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b))))))","(fma.f64 -1/360 (*.f64 (sqrt.f64 x) (pow.f64 y 6)) (fma.f64 -1 (*.f64 (sqrt.f64 x) (*.f64 y y)) (fma.f64 1/12 (*.f64 (sqrt.f64 x) (pow.f64 y 4)) (fma.f64 2 (sqrt.f64 x) (*.f64 -1/3 (/.f64 a b))))))","(+.f64 (+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 1/12 (pow.f64 y 4)) 2))) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 -1/360 (pow.f64 y 6)) (neg.f64 (*.f64 y y)))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 (sqrt.f64 x) (+.f64 (fma.f64 -1/360 (pow.f64 y 6) (neg.f64 (*.f64 y y))) (fma.f64 1/12 (pow.f64 y 4) 2))))","(fma.f64 (sqrt.f64 x) (+.f64 (*.f64 -1/360 (pow.f64 y 6)) (fma.f64 y (neg.f64 y) (fma.f64 1/12 (pow.f64 y 4) 2))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 (sqrt.f64 x) (+.f64 (fma.f64 1/12 (pow.f64 y 4) 2) (*.f64 y (-.f64 (*.f64 -1/360 (pow.f64 y 5)) y))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)))","(*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)))","(*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(*.f64 -1/3 (/.f64 a b))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(*.f64 -1/3 (/.f64 a b))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(*.f64 -1/3 (/.f64 a b))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)))","(*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)))","(*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)))","(*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)))","(*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 y 2)))","(+.f64 1 (*.f64 (*.f64 y y) -1/2))","(fma.f64 (*.f64 y y) -1/2 1)","(fma.f64 y (*.f64 y -1/2) 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4))))","(+.f64 1 (fma.f64 -1/2 (*.f64 y y) (*.f64 (pow.f64 y 4) 1/24)))","(+.f64 1 (fma.f64 (*.f64 y y) -1/2 (*.f64 (pow.f64 y 4) 1/24)))","(fma.f64 y (*.f64 y -1/2) (fma.f64 (pow.f64 y 4) 1/24 1))","(fma.f64 (*.f64 y y) (fma.f64 y (*.f64 y 1/24) -1/2) 1)","(+.f64 (*.f64 -1/720 (pow.f64 y 6)) (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4)))))","(fma.f64 -1/720 (pow.f64 y 6) (+.f64 1 (fma.f64 -1/2 (*.f64 y y) (*.f64 (pow.f64 y 4) 1/24))))","(+.f64 (fma.f64 (*.f64 y y) -1/2 (*.f64 (pow.f64 y 4) 1/24)) (fma.f64 (pow.f64 y 6) -1/720 1))","(fma.f64 (pow.f64 y 6) -1/720 (fma.f64 y (*.f64 y -1/2) (fma.f64 (pow.f64 y 4) 1/24 1)))","(fma.f64 (*.f64 y y) (fma.f64 y (*.f64 y 1/24) -1/2) (fma.f64 (pow.f64 y 6) -1/720 1))"]],"stop":[["node limit",1]],"time":40.551025390625,"type":"simplify"},{"compiler":[[2394,1356]],"time":27.696044921875,"type":"eval"},{"alts":[["(fma.f64 (sqrt.f64 x) (*.f64 2 (sqrt.f64 (pow.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) 2))) (/.f64 (*.f64 a -1/3) b))","fresh",27.96794682503744],["(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (fma.f64 z (*.f64 t -1/3) y)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (fma.f64 z (*.f64 t -1/3) y)))) (sin.f64 1)))) (/.f64 (*.f64 a -1/3) b))","fresh",42.28531952838265],["(fma.f64 (sqrt.f64 x) (*.f64 2 1) (/.f64 (*.f64 a -1/3) b))","fresh",28.493263563571215],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (pow.f64 (cbrt.f64 (*.f64 t -1/3)) 3) y))) (/.f64 (*.f64 a -1/3) b))","fresh",21.262677560158668],["(fma.f64 (sqrt.f64 x) (*.f64 2 (*.f64 (cbrt.f64 (cos.f64 y)) (cbrt.f64 (pow.f64 (cos.f64 y) 2)))) (/.f64 (*.f64 a -1/3) b))","fresh",18.55025968579708],["(sqrt.f64 (pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 2))","fresh",43.673282642660894],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (+.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/3) t))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/3) t)))) y))) (/.f64 (*.f64 a -1/3) b))","fresh",34.916660427575046],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (/.f64 (*.f64 a -1/3) b))","fresh",21.442491603407785],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (pow.f64 (*.f64 -3 (/.f64 b a)) -1))","next",18.52453717602859],["(*.f64 (/.f64 -1/3 b) a)","fresh",38.225355967910396],["(fma.f64 (sqrt.f64 x) (*.f64 2 (log1p.f64 (expm1.f64 (cos.f64 y)))) (/.f64 (*.f64 a -1/3) b))","fresh",18.551880926028637],["(pow.f64 (pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 3) 1/3)","fresh",52.89013962017931],["(*.f64 -1/3 (/.f64 a b))","fresh",38.22181342652131],["(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 y)))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 y)))))) (/.f64 (*.f64 a -1/3) b))","fresh",18.63694561956389],["(pow.f64 (cbrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))) 3)","fresh",18.871461361526748],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (exp.f64 (log.f64 (*.f64 t -1/3))) y))) (/.f64 (*.f64 a -1/3) b))","fresh",52.51889031916122],["(fma.f64 (sqrt.f64 x) (*.f64 2 (-.f64 (*.f64 (cos.f64 y) (cos.f64 (*.f64 (*.f64 z t) -1/3))) (*.f64 (sin.f64 y) (sin.f64 (*.f64 (*.f64 z t) -1/3))))) (/.f64 (*.f64 a -1/3) b))","fresh",21.271645081191252],["(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (cos.f64 y) (*.f64 (*.f64 t z) (+.f64 (*.f64 1/3 (sin.f64 y)) (*.f64 (*.f64 t z) (*.f64 (cos.f64 y) -1/18)))))) (/.f64 (*.f64 a -1/3) b))","fresh",29.383650130495656],["(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 y))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 y))) (sin.f64 1)))) (/.f64 (*.f64 a -1/3) b))","fresh",35.89131080965195],["(/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) 3) (pow.f64 (*.f64 -1/3 (/.f64 a b)) 3)) (fma.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (-.f64 (pow.f64 (*.f64 -1/3 (/.f64 a b)) 2) (*.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (*.f64 -1/3 (/.f64 a b))))))","fresh",41.18483947082501],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (expm1.f64 (log1p.f64 (*.f64 -1/3 a))) b))","fresh",31.67221084142025],["(fma.f64 (sqrt.f64 x) (*.f64 2 (-.f64 (exp.f64 (log1p.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 1)) (/.f64 (*.f64 a -1/3) b))","fresh",21.502412115800862],["(fma.f64 (sqrt.f64 x) (*.f64 2 (fma.f64 1/3 (*.f64 z (*.f64 t (sin.f64 y))) (cos.f64 y))) (/.f64 (*.f64 a -1/3) b))","fresh",24.943265235359096],["(fma.f64 (sqrt.f64 x) (*.f64 2 (sqrt.f64 (pow.f64 (cos.f64 y) 2))) (/.f64 (*.f64 a -1/3) b))","fresh",25.16565327717252],["(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))) (/.f64 a (*.f64 b 3)))","fresh",21.645893871756734],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (sqrt.f64 (*.f64 (*.f64 a a) 1/9)) b))","fresh",37.30033011255939],["(exp.f64 (log.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))","fresh",40.252694368619615],["(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))) (/.f64 (*.f64 a -1/3) b))","fresh",21.631837949844783],["(fma.f64 (sqrt.f64 x) (*.f64 2 (pow.f64 (cbrt.f64 (cos.f64 y)) 3)) (/.f64 (*.f64 a -1/3) b))","fresh",18.58283722487085],["(fma.f64 (sqrt.f64 x) (*.f64 2 (fma.f64 y (*.f64 y -1/2) 1)) (/.f64 (*.f64 a -1/3) b))","fresh",37.54821163714942],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (pow.f64 (pow.f64 (*.f64 t -1/3) 3) 1/3) y))) (/.f64 (*.f64 a -1/3) b))","fresh",40.7776446609789],["(+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))) (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))))","fresh",62.20045069368174],["(+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))))","fresh",61.81180202850512],["(pow.f64 (pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))) 3) 1/3)","fresh",51.83421081443911],["(fma.f64 (sqrt.f64 x) (*.f64 2 (log.f64 (exp.f64 (cos.f64 y)))) (/.f64 (*.f64 a -1/3) b))","fresh",18.557708477186175]],"compiler":[[26,20],[41,32],[17,14],[26,20],[25,19],[26,20],[33,26],[23,17],[20,16],[11,9],[20,16],[27,21],[11,9],[27,18],[21,17],[25,19],[35,25],[36,24],[31,24],[80,53],[25,19],[27,21],[26,19],[21,17],[25,19],[21,16],[20,16],[47,35],[21,17],[22,17],[27,21],[67,45],[39,28],[22,18],[20,16],[26,20],[41,32],[17,14],[26,20],[25,19],[26,20],[33,26],[23,17],[20,16],[11,9],[20,16],[27,21],[11,9],[27,18],[21,17],[25,19],[35,25],[36,24],[31,24],[80,53],[25,19],[27,21],[26,19],[21,17],[25,19],[21,16],[20,16],[47,35],[21,17],[22,17],[27,21],[67,45],[39,28],[22,18],[20,16]],"count":[[164,35]],"kept":[{"done":[0,0],"fresh":[25,20],"new":[138,15],"picked":[1,0]}],"min-error":[16.466835971442183],"time":60.135986328125,"type":"prune"},{"compiler":[[50,27]],"locations":[["(cos.f64 y)",0.02734375,false],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (pow.f64 (*.f64 -3 (/.f64 b a)) -1))",0.09375,true],["(pow.f64 (*.f64 -3 (/.f64 b a)) -1)",0.203125,true],["(*.f64 -3 (/.f64 b a))",0.25,true]],"time":12.2880859375,"type":"localize"},{"count":[[3,61]],"series":[["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (pow.f64 (*.f64 -3 (/.f64 b a)) -1))","a","-inf",0.177978515625],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (pow.f64 (*.f64 -3 (/.f64 b a)) -1))","a","inf",0.1708984375],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (pow.f64 (*.f64 -3 (/.f64 b a)) -1))","a","0",0.1669921875],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (pow.f64 (*.f64 -3 (/.f64 b a)) -1))","b","-inf",0.197021484375],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (pow.f64 (*.f64 -3 (/.f64 b a)) -1))","b","inf",0.171875],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (pow.f64 (*.f64 -3 (/.f64 b a)) -1))","b","0",0.196044921875],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (pow.f64 (*.f64 -3 (/.f64 b a)) -1))","y","-inf",0.2080078125],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (pow.f64 (*.f64 -3 (/.f64 b a)) -1))","y","inf",0.608154296875],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (pow.f64 (*.f64 -3 (/.f64 b a)) -1))","y","0",0.261962890625],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (pow.f64 (*.f64 -3 (/.f64 b a)) -1))","x","-inf",0.283935546875],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (pow.f64 (*.f64 -3 (/.f64 b a)) -1))","x","inf",0.237060546875],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (pow.f64 (*.f64 -3 (/.f64 b a)) -1))","x","0",0.2890625],["(pow.f64 (*.f64 -3 (/.f64 b a)) -1)","a","-inf",0.375],["(pow.f64 (*.f64 -3 (/.f64 b a)) -1)","a","inf",0.281982421875],["(pow.f64 (*.f64 -3 (/.f64 b a)) -1)","a","0",0.363037109375],["(pow.f64 (*.f64 -3 (/.f64 b a)) -1)","b","-inf",0.379150390625],["(pow.f64 (*.f64 -3 (/.f64 b a)) -1)","b","inf",0.31298828125],["(pow.f64 (*.f64 -3 (/.f64 b a)) -1)","b","0",0.402099609375],["(*.f64 -3 (/.f64 b a))","a","-inf",0.254150390625],["(*.f64 -3 (/.f64 b a))","a","inf",0.30419921875],["(*.f64 -3 (/.f64 b a))","a","0",0.421142578125],["(*.f64 -3 (/.f64 b a))","b","-inf",0.342041015625],["(*.f64 -3 (/.f64 b a))","b","inf",0.31591796875],["(*.f64 -3 (/.f64 b a))","b","0",0.530029296875]],"time":7.56787109375,"type":"series"},{"count":[[3,85]],"egraph":[[2,3680,32,0.028222333],[1,311,32,0.0051417500000000005],[0,15,38,0.000418042]],"inputs":[["(*.f64 -3 (/.f64 b a))","(pow.f64 (*.f64 -3 (/.f64 b a)) -1)","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (pow.f64 (*.f64 -3 (/.f64 b a)) -1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 -3 (/.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 -3 (/.f64 a b)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 -3 (/.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 -3 (/.f64 a b))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 -3 (/.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 -3 (/.f64 a b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -3 (/.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 a (*.f64 -3 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -3 b) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 -3 b)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -3 b) 1) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -3 b) (pow.f64 (cbrt.f64 a) 2)) (cbrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -3 b) (sqrt.f64 a)) (sqrt.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 b) -3) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -3 (neg.f64 b)) (neg.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -3 (/.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (/.f64 b a) 2) 9) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 -3 (/.f64 a b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -3 (/.f64 a b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 -3 (/.f64 a b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 a (*.f64 -3 b)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (/.f64 b a) 2) 9))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 -3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 -3 (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 -3 (/.f64 a b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 -3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 -3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 -3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 -3 (/.f64 a b))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 -1/3 (/.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 -1/3) (/.f64 a b))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 -1/3) (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/3) (/.f64 a b)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/3) (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 -1/3 (/.f64 a b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/3 (/.f64 a b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 -1/3 (/.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -1/3 (/.f64 a b))) (cbrt.f64 (pow.f64 (/.f64 -3 (/.f64 a b)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 -3 (/.f64 a b)) -2)) (cbrt.f64 (*.f64 -1/3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/3 (/.f64 a b))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a b) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 -1/3 (/.f64 a b))) (sqrt.f64 (*.f64 -1/3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 b a) 2) 9))) (cbrt.f64 (*.f64 -1/3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 -3 b)) a)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 -3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 -3 (/.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 -3 (/.f64 a b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1/3 (/.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 a b) -3)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (*.f64 -1/3 (/.f64 a b))) (sqrt.f64 (/.f64 -3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (cbrt.f64 (*.f64 (pow.f64 (/.f64 b a) 2) 9))) (cbrt.f64 (/.f64 -3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 -3 (/.f64 a b)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 -1/3) (/.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 -1/3 (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -1/3 (/.f64 a b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 -1/3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 -1/3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 -1/3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 -1/3 (/.f64 a b))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))) (*.f64 -1/3 (/.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))) 1) (*.f64 -1/3 (/.f64 a b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))) (cbrt.f64 (pow.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b))) 2)) (cbrt.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))) (sqrt.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))) 3) (pow.f64 (*.f64 -1/3 (/.f64 a b)) 3)) (+.f64 (pow.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))) 2) (-.f64 (pow.f64 (/.f64 -3 (/.f64 a b)) -2) (*.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))) (*.f64 -1/3 (/.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))) 2) (pow.f64 (/.f64 -3 (/.f64 a b)) -2)) (-.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))) (*.f64 -1/3 (/.f64 a b))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 -1/3) (/.f64 a b)) (exp.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 -1/3 (/.f64 a b)))) (exp.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))) (+.f64 1 (expm1.f64 (*.f64 -1/3 (/.f64 a b))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))) 1))))))"]],"rules":[["egg-rr",30],["egg-rr",28],["egg-rr",27]],"stop":[["node limit",1]],"time":51.98095703125,"type":"rewrite"},{"count":[[146,98]],"egraph":[[5,7471,790,0.032931374],[4,3266,790,0.018319666],[3,773,790,0.006672374],[2,235,796,0.001955333],[1,86,814,0.000703791],[0,34,821,0.000223708]],"inputs":[["(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(*.f64 -1/3 (/.f64 a b))","(+.f64 (*.f64 2 (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (sqrt.f64 x))) (+.f64 (*.f64 2 (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (sqrt.f64 x))) (+.f64 (*.f64 1/12 (*.f64 (pow.f64 y 4) (sqrt.f64 x))) (+.f64 (*.f64 2 (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b)))))","(+.f64 (*.f64 -1/360 (*.f64 (pow.f64 y 6) (sqrt.f64 x))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (sqrt.f64 x))) (+.f64 (*.f64 1/12 (*.f64 (pow.f64 y 4) (sqrt.f64 x))) (+.f64 (*.f64 2 (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b))))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(*.f64 -1/3 (/.f64 a b))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(*.f64 -1/3 (/.f64 a b))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(*.f64 -1/3 (/.f64 a b))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(+.f64 (*.f64 2 (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (sqrt.f64 x) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (sqrt.f64 x)))","(fma.f64 2 (sqrt.f64 x) (/.f64 (*.f64 -1/3 a) b))","(fma.f64 2 (sqrt.f64 x) (/.f64 a (/.f64 b -1/3)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (sqrt.f64 x))) (+.f64 (*.f64 2 (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b))))","(fma.f64 -1 (*.f64 (sqrt.f64 x) (*.f64 y y)) (fma.f64 2 (sqrt.f64 x) (*.f64 -1/3 (/.f64 a b))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 (sqrt.f64 x) (+.f64 (neg.f64 (*.f64 y y)) 2)))","(fma.f64 (sqrt.f64 x) (fma.f64 (neg.f64 y) y 2) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 (sqrt.f64 x) (-.f64 2 (*.f64 y y)) (/.f64 (*.f64 -1/3 a) b))","(fma.f64 (sqrt.f64 x) (-.f64 2 (*.f64 y y)) (/.f64 a (/.f64 b -1/3)))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (sqrt.f64 x))) (+.f64 (*.f64 1/12 (*.f64 (pow.f64 y 4) (sqrt.f64 x))) (+.f64 (*.f64 2 (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b)))))","(fma.f64 -1 (*.f64 (sqrt.f64 x) (*.f64 y y)) (fma.f64 1/12 (*.f64 (sqrt.f64 x) (pow.f64 y 4)) (fma.f64 2 (sqrt.f64 x) (*.f64 -1/3 (/.f64 a b)))))","(-.f64 (+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 1/12 (pow.f64 y 4)) 2))) (*.f64 (sqrt.f64 x) (*.f64 y y)))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 (sqrt.f64 x) (+.f64 (fma.f64 (neg.f64 y) y (*.f64 1/12 (pow.f64 y 4))) 2)))","(fma.f64 (sqrt.f64 x) (fma.f64 y (neg.f64 y) (fma.f64 1/12 (pow.f64 y 4) 2)) (/.f64 (*.f64 -1/3 a) b))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (-.f64 (fma.f64 1/12 (pow.f64 y 4) 2) (*.f64 y y))))","(+.f64 (*.f64 -1/360 (*.f64 (pow.f64 y 6) (sqrt.f64 x))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (sqrt.f64 x))) (+.f64 (*.f64 1/12 (*.f64 (pow.f64 y 4) (sqrt.f64 x))) (+.f64 (*.f64 2 (sqrt.f64 x)) (*.f64 -1/3 (/.f64 a b))))))","(fma.f64 -1/360 (*.f64 (sqrt.f64 x) (pow.f64 y 6)) (fma.f64 -1 (*.f64 (sqrt.f64 x) (*.f64 y y)) (fma.f64 1/12 (*.f64 (sqrt.f64 x) (pow.f64 y 4)) (fma.f64 2 (sqrt.f64 x) (*.f64 -1/3 (/.f64 a b))))))","(+.f64 (+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 1/12 (pow.f64 y 4)) 2))) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 -1/360 (pow.f64 y 6)) (neg.f64 (*.f64 y y)))))","(+.f64 (*.f64 -1/3 (/.f64 a b)) (*.f64 (sqrt.f64 x) (+.f64 (-.f64 (*.f64 -1/360 (pow.f64 y 6)) (*.f64 y y)) (fma.f64 1/12 (pow.f64 y 4) 2))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 -1/360 (pow.f64 y 6)) (fma.f64 y (neg.f64 y) (fma.f64 1/12 (pow.f64 y 4) 2)))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (+.f64 2 (fma.f64 -1/360 (pow.f64 y 6) (-.f64 (*.f64 1/12 (pow.f64 y 4)) (*.f64 y y))))))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)))","(*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)))","(*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))","(*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)))","(*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)))","(*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))","(*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x)))","(*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)))","(*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))","(*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(*.f64 -1/3 (/.f64 a b))","(/.f64 (*.f64 -1/3 a) b)","(/.f64 a (/.f64 b -1/3))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))","(+.f64 (*.f64 2 (*.f64 (cos.f64 y) (sqrt.f64 x))) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))","(fma.f64 -1/3 (/.f64 a b) (*.f64 2 (*.f64 (sqrt.f64 x) (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))","(fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 y)))"]],"stop":[["node limit",1]],"time":55.531005859375,"type":"simplify"},{"compiler":[[2303,1292]],"time":26.72705078125,"type":"eval"},{"alts":[["(fma.f64 (sqrt.f64 x) (*.f64 2 (sqrt.f64 (pow.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) 2))) (/.f64 (*.f64 a -1/3) b))","fresh",27.96794682503744],["(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (fma.f64 z (*.f64 t -1/3) y)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (fma.f64 z (*.f64 t -1/3) y)))) (sin.f64 1)))) (/.f64 (*.f64 a -1/3) b))","fresh",42.28531952838265],["(fma.f64 (sqrt.f64 x) (*.f64 2 1) (/.f64 (*.f64 a -1/3) b))","fresh",28.493263563571215],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (pow.f64 (cbrt.f64 (*.f64 t -1/3)) 3) y))) (/.f64 (*.f64 a -1/3) b))","fresh",21.262677560158668],["(fma.f64 (sqrt.f64 x) (*.f64 2 (*.f64 (cbrt.f64 (cos.f64 y)) (cbrt.f64 (pow.f64 (cos.f64 y) 2)))) (/.f64 (*.f64 a -1/3) b))","next",18.55025968579708],["(sqrt.f64 (pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 2))","fresh",43.673282642660894],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (+.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/3) t))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/3) t)))) y))) (/.f64 (*.f64 a -1/3) b))","fresh",34.916660427575046],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (/.f64 (*.f64 a -1/3) b))","fresh",21.442491603407785],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (pow.f64 (*.f64 -3 (/.f64 b a)) -1))","done",18.52453717602859],["(*.f64 (/.f64 -1/3 b) a)","fresh",38.225355967910396],["(fma.f64 (sqrt.f64 x) (*.f64 2 (log1p.f64 (expm1.f64 (cos.f64 y)))) (/.f64 (*.f64 a -1/3) b))","fresh",18.551880926028637],["(pow.f64 (pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 3) 1/3)","fresh",52.89013962017931],["(*.f64 -1/3 (/.f64 a b))","fresh",38.22181342652131],["(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 y)))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 y)))))) (/.f64 (*.f64 a -1/3) b))","fresh",18.63694561956389],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (exp.f64 (log.f64 (*.f64 t -1/3))) y))) (/.f64 (*.f64 a -1/3) b))","fresh",52.51889031916122],["(fma.f64 (sqrt.f64 x) (*.f64 2 (-.f64 (*.f64 (cos.f64 y) (cos.f64 (*.f64 (*.f64 z t) -1/3))) (*.f64 (sin.f64 y) (sin.f64 (*.f64 (*.f64 z t) -1/3))))) (/.f64 (*.f64 a -1/3) b))","fresh",21.271645081191252],["(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (cos.f64 y) (*.f64 (*.f64 t z) (+.f64 (*.f64 1/3 (sin.f64 y)) (*.f64 (*.f64 t z) (*.f64 (cos.f64 y) -1/18)))))) (/.f64 (*.f64 a -1/3) b))","fresh",29.383650130495656],["(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 y))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 y))) (sin.f64 1)))) (/.f64 (*.f64 a -1/3) b))","fresh",35.89131080965195],["(/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) 3) (pow.f64 (*.f64 -1/3 (/.f64 a b)) 3)) (fma.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (-.f64 (pow.f64 (*.f64 -1/3 (/.f64 a b)) 2) (*.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (*.f64 -1/3 (/.f64 a b))))))","fresh",41.18483947082501],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (expm1.f64 (log1p.f64 (*.f64 -1/3 a))) b))","fresh",31.67221084142025],["(pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))) 3)","fresh",18.87374637129519],["(fma.f64 (sqrt.f64 x) (*.f64 2 (log.f64 (exp.f64 (cos.f64 y)))) (/.f64 (*.f64 a -1/3) b))","fresh",18.557708477186175],["(fma.f64 (sqrt.f64 x) (*.f64 2 (-.f64 (exp.f64 (log1p.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 1)) (/.f64 (*.f64 a -1/3) b))","fresh",21.502412115800862],["(pow.f64 (pow.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b))) 3) 1/3)","fresh",51.8343161544688],["(fma.f64 (sqrt.f64 x) (*.f64 2 (fma.f64 1/3 (*.f64 z (*.f64 t (sin.f64 y))) (cos.f64 y))) (/.f64 (*.f64 a -1/3) b))","fresh",24.943265235359096],["(fma.f64 (sqrt.f64 x) (*.f64 2 (sqrt.f64 (pow.f64 (cos.f64 y) 2))) (/.f64 (*.f64 a -1/3) b))","fresh",25.16565327717252],["(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))) (/.f64 a (*.f64 b 3)))","fresh",21.645893871756734],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (sqrt.f64 (*.f64 (*.f64 a a) 1/9)) b))","fresh",37.30033011255939],["(exp.f64 (log.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))","fresh",40.252694368619615],["(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))) (/.f64 (*.f64 a -1/3) b))","fresh",21.631837949844783],["(fma.f64 (sqrt.f64 x) (*.f64 2 (pow.f64 (cbrt.f64 (cos.f64 y)) 3)) (/.f64 (*.f64 a -1/3) b))","fresh",18.58283722487085],["(fma.f64 (sqrt.f64 x) (*.f64 2 (fma.f64 y (*.f64 y -1/2) 1)) (/.f64 (*.f64 a -1/3) b))","fresh",37.54821163714942],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (pow.f64 (pow.f64 (*.f64 t -1/3) 3) 1/3) y))) (/.f64 (*.f64 a -1/3) b))","fresh",40.7776446609789],["(+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))) (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))))","fresh",62.20045069368174],["(+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))))","fresh",61.81180202850512]],"compiler":[[26,20],[41,32],[17,14],[26,20],[25,19],[26,20],[33,26],[23,17],[20,16],[11,9],[20,16],[27,21],[11,9],[27,18],[25,19],[35,25],[36,24],[31,24],[80,53],[25,19],[21,17],[20,16],[27,21],[22,18],[26,19],[21,17],[25,19],[21,16],[20,16],[47,35],[21,17],[22,17],[27,21],[67,45],[39,28],[26,20],[41,32],[17,14],[26,20],[25,19],[26,20],[33,26],[23,17],[11,9],[20,16],[27,21],[11,9],[27,18],[25,19],[35,25],[36,24],[31,24],[80,53],[25,19],[21,17],[20,16],[27,21],[22,18],[26,19],[21,17],[25,19],[21,16],[20,16],[47,35],[21,17],[22,17],[27,21],[67,45],[39,28]],"count":[[163,35]],"kept":[{"done":[0,0],"fresh":[34,32],"new":[128,2],"picked":[1,1]}],"min-error":[16.466835971442183],"time":55.972900390625,"type":"prune"},{"compiler":[[75,41]],"locations":[["(/.f64 (*.f64 a -1/3) b)",0.15625,false],["(*.f64 (cbrt.f64 (cos.f64 y)) (cbrt.f64 (pow.f64 (cos.f64 y) 2)))",0.1953125,true],["(pow.f64 (cos.f64 y) 2)",0.23046875,true],["(*.f64 a -1/3)",0.2890625,false]],"time":16.9931640625,"type":"localize"},{"count":[[2,16]],"series":[["(*.f64 (cbrt.f64 (cos.f64 y)) (cbrt.f64 (pow.f64 (cos.f64 y) 2)))","y","-inf",0.27099609375],["(*.f64 (cbrt.f64 (cos.f64 y)) (cbrt.f64 (pow.f64 (cos.f64 y) 2)))","y","inf",1.362060546875],["(*.f64 (cbrt.f64 (cos.f64 y)) (cbrt.f64 (pow.f64 (cos.f64 y) 2)))","y","0",0.2919921875],["(pow.f64 (cos.f64 y) 2)","y","-inf",0.3330078125],["(pow.f64 (cos.f64 y) 2)","y","inf",0.344970703125],["(pow.f64 (cos.f64 y) 2)","y","0",0.322021484375]],"time":3.005859375,"type":"series"},{"count":[[2,35]],"egraph":[[2,1716,9,0.014692876],[1,159,9,0.002609751],[0,8,19,0.000229917]],"inputs":[["(pow.f64 (cos.f64 y) 2)","(*.f64 (cbrt.f64 (cos.f64 y)) (cbrt.f64 (pow.f64 (cos.f64 y) 2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 1/2 (cos.f64 (*.f64 2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 (cos.f64 y) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 y) (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 y) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 y)) (*.f64 (pow.f64 (cbrt.f64 (cos.f64 y)) 2) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 y)) 2) (cbrt.f64 (pow.f64 (cos.f64 y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cos.f64 y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 y) 4)) (pow.f64 (cbrt.f64 (cos.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 y)) (*.f64 (sqrt.f64 (cos.f64 y)) (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 y) (sqrt.f64 (cos.f64 y))) (sqrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 y) (pow.f64 (cbrt.f64 (cos.f64 y)) 2)) (cbrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 y) 4)) 1) (pow.f64 (cbrt.f64 (cos.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 y) 4)) (cbrt.f64 (cbrt.f64 (pow.f64 (cos.f64 y) 4)))) (pow.f64 (cbrt.f64 (cbrt.f64 (cos.f64 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (cos.f64 y) 4)) (cbrt.f64 (cos.f64 y))) (cbrt.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (cos.f64 (+.f64 y y)) (cos.f64 (-.f64 y y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 y) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cos.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cos.f64 y) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cos.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cos.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (cos.f64 y))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cos.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 y) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cos.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cos.f64 y)))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 y)))))))"]],"rules":[["egg-rr",14],["egg-rr",21]],"stop":[["node limit",1]],"time":33.3330078125,"type":"rewrite"},{"count":[[51,48]],"egraph":[[5,5487,113,0.023509083],[4,2294,113,0.011533666],[3,567,113,0.004398582999999999],[2,180,113,0.001360208],[1,74,119,0.0004938739999999999],[0,32,126,0.000152166]],"inputs":[["1","(+.f64 (*.f64 -1 (pow.f64 y 2)) 1)","(+.f64 (*.f64 -1 (pow.f64 y 2)) (+.f64 1 (*.f64 1/3 (pow.f64 y 4))))","(+.f64 (*.f64 -1 (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -2/45 (pow.f64 y 6)) (*.f64 1/3 (pow.f64 y 4)))))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 y 2)))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4))))","(+.f64 (*.f64 -1/720 (pow.f64 y 6)) (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4)))))","(cos.f64 y)","(cos.f64 y)","(cos.f64 y)","(cos.f64 y)","(cos.f64 y)","(cos.f64 y)","(cos.f64 y)","(cos.f64 y)"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 -1 (pow.f64 y 2)) 1)","(fma.f64 -1 (*.f64 y y) 1)","(-.f64 1 (*.f64 y y))","(+.f64 (*.f64 -1 (pow.f64 y 2)) (+.f64 1 (*.f64 1/3 (pow.f64 y 4))))","(fma.f64 -1 (*.f64 y y) (+.f64 1 (*.f64 1/3 (pow.f64 y 4))))","(-.f64 (fma.f64 1/3 (pow.f64 y 4) 1) (*.f64 y y))","(-.f64 (*.f64 1/3 (pow.f64 y 4)) (fma.f64 y y -1))","(+.f64 (*.f64 -1 (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -2/45 (pow.f64 y 6)) (*.f64 1/3 (pow.f64 y 4)))))","(+.f64 (fma.f64 -1 (*.f64 y y) 1) (fma.f64 -2/45 (pow.f64 y 6) (*.f64 1/3 (pow.f64 y 4))))","(+.f64 (-.f64 1 (*.f64 y y)) (fma.f64 1/3 (pow.f64 y 4) (*.f64 -2/45 (pow.f64 y 6))))","(-.f64 (fma.f64 -2/45 (pow.f64 y 6) (fma.f64 1/3 (pow.f64 y 4) 1)) (*.f64 y y))","(-.f64 (fma.f64 1/3 (pow.f64 y 4) (*.f64 -2/45 (pow.f64 y 6))) (fma.f64 y y -1))","1","(+.f64 1 (*.f64 -1/2 (pow.f64 y 2)))","(+.f64 1 (*.f64 (*.f64 y y) -1/2))","(fma.f64 (*.f64 y y) -1/2 1)","(fma.f64 y (*.f64 y -1/2) 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4))))","(+.f64 1 (fma.f64 -1/2 (*.f64 y y) (*.f64 (pow.f64 y 4) 1/24)))","(+.f64 1 (fma.f64 (*.f64 y y) -1/2 (*.f64 (pow.f64 y 4) 1/24)))","(fma.f64 y (*.f64 y -1/2) (fma.f64 (pow.f64 y 4) 1/24 1))","(fma.f64 (*.f64 y y) -1/2 (fma.f64 (pow.f64 y 4) 1/24 1))","(+.f64 (*.f64 -1/720 (pow.f64 y 6)) (+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (*.f64 1/24 (pow.f64 y 4)))))","(fma.f64 -1/720 (pow.f64 y 6) (+.f64 1 (fma.f64 -1/2 (*.f64 y y) (*.f64 (pow.f64 y 4) 1/24))))","(+.f64 (fma.f64 (*.f64 y y) -1/2 (*.f64 (pow.f64 y 4) 1/24)) (fma.f64 (pow.f64 y 6) -1/720 1))","(fma.f64 (pow.f64 y 6) -1/720 (fma.f64 y (*.f64 y -1/2) (fma.f64 (pow.f64 y 4) 1/24 1)))","(fma.f64 (*.f64 y y) (fma.f64 y (*.f64 y 1/24) -1/2) (fma.f64 (pow.f64 y 6) -1/720 1))","(fma.f64 y (*.f64 y -1/2) (fma.f64 (pow.f64 y 4) 1/24 (fma.f64 (pow.f64 y 6) -1/720 1)))","(cos.f64 y)","(cos.f64 y)","(cos.f64 y)","(cos.f64 y)","(cos.f64 y)","(cos.f64 y)","(cos.f64 y)","(cos.f64 y)"]],"stop":[["node limit",1]],"time":36.56103515625,"type":"simplify"},{"compiler":[[2582,1489]],"time":28.213134765625,"type":"eval"},{"alts":[["(fma.f64 (sqrt.f64 x) (*.f64 2 (sqrt.f64 (pow.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) 2))) (/.f64 (*.f64 a -1/3) b))","fresh",27.96794682503744],["(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (fma.f64 z (*.f64 t -1/3) y)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (fma.f64 z (*.f64 t -1/3) y)))) (sin.f64 1)))) (/.f64 (*.f64 a -1/3) b))","fresh",42.28531952838265],["(fma.f64 (sqrt.f64 x) (*.f64 2 1) (/.f64 (*.f64 a -1/3) b))","fresh",28.493263563571215],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (pow.f64 (cbrt.f64 (*.f64 t -1/3)) 3) y))) (/.f64 (*.f64 a -1/3) b))","fresh",21.262677560158668],["(fma.f64 (sqrt.f64 x) (*.f64 2 (*.f64 (cbrt.f64 (cos.f64 y)) (cbrt.f64 (pow.f64 (cos.f64 y) 2)))) (/.f64 (*.f64 a -1/3) b))","done",18.55025968579708],["(sqrt.f64 (pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 2))","fresh",43.673282642660894],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (+.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/3) t))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/3) t)))) y))) (/.f64 (*.f64 a -1/3) b))","fresh",34.916660427575046],["(fma.f64 (sqrt.f64 x) (*.f64 2 (*.f64 (cbrt.f64 (cos.f64 y)) (cbrt.f64 (-.f64 1 (*.f64 y y))))) (/.f64 (*.f64 a -1/3) b))","fresh",36.142286478825845],["(+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))))","fresh",61.81180202850512],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (/.f64 (*.f64 a -1/3) b))","fresh",21.442491603407785],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (pow.f64 (*.f64 -3 (/.f64 b a)) -1))","done",18.52453717602859],["(fma.f64 (sqrt.f64 x) (*.f64 2 (*.f64 (cbrt.f64 (cos.f64 y)) (cbrt.f64 1))) (/.f64 (*.f64 a -1/3) b))","fresh",26.700441378279223],["(*.f64 (/.f64 -1/3 b) a)","fresh",38.225355967910396],["(pow.f64 (pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 3) 1/3)","fresh",52.89013962017931],["(*.f64 -1/3 (/.f64 a b))","fresh",38.22181342652131],["(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 y)))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 y)))))) (/.f64 (*.f64 a -1/3) b))","fresh",18.63694561956389],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (exp.f64 (log.f64 (*.f64 t -1/3))) y))) (/.f64 (*.f64 a -1/3) b))","fresh",52.51889031916122],["(fma.f64 (sqrt.f64 x) (*.f64 2 (-.f64 (*.f64 (cos.f64 y) (cos.f64 (*.f64 (*.f64 z t) -1/3))) (*.f64 (sin.f64 y) (sin.f64 (*.f64 (*.f64 z t) -1/3))))) (/.f64 (*.f64 a -1/3) b))","fresh",21.271645081191252],["(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (cos.f64 y) (*.f64 (*.f64 t z) (+.f64 (*.f64 1/3 (sin.f64 y)) (*.f64 (*.f64 t z) (*.f64 (cos.f64 y) -1/18)))))) (/.f64 (*.f64 a -1/3) b))","fresh",29.383650130495656],["(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 y))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 y))) (sin.f64 1)))) (/.f64 (*.f64 a -1/3) b))","fresh",35.89131080965195],["(/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) 3) (pow.f64 (*.f64 -1/3 (/.f64 a b)) 3)) (fma.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (-.f64 (pow.f64 (*.f64 -1/3 (/.f64 a b)) 2) (*.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (*.f64 -1/3 (/.f64 a b))))))","fresh",41.18483947082501],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (expm1.f64 (log1p.f64 (*.f64 -1/3 a))) b))","fresh",31.67221084142025],["(pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))) 3)","fresh",18.87374637129519],["(fma.f64 (sqrt.f64 x) (*.f64 2 (log.f64 (exp.f64 (cos.f64 y)))) (/.f64 (*.f64 a -1/3) b))","fresh",18.557708477186175],["(fma.f64 (sqrt.f64 x) (*.f64 2 (-.f64 (exp.f64 (log1p.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 1)) (/.f64 (*.f64 a -1/3) b))","fresh",21.502412115800862],["(pow.f64 (pow.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b))) 3) 1/3)","fresh",51.8343161544688],["(fma.f64 (sqrt.f64 x) (*.f64 2 (fma.f64 1/3 (*.f64 z (*.f64 t (sin.f64 y))) (cos.f64 y))) (/.f64 (*.f64 a -1/3) b))","fresh",24.943265235359096],["(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))) (/.f64 a (*.f64 b 3)))","fresh",21.645893871756734],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (sqrt.f64 (*.f64 (*.f64 a a) 1/9)) b))","fresh",37.30033011255939],["(exp.f64 (log.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))","fresh",40.252694368619615],["(fma.f64 (sqrt.f64 x) (*.f64 2 (fabs.f64 (cos.f64 y))) (/.f64 (*.f64 a -1/3) b))","fresh",25.16565327717252],["(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))) (/.f64 (*.f64 a -1/3) b))","fresh",21.631837949844783],["(fma.f64 (sqrt.f64 x) (*.f64 2 (pow.f64 (cbrt.f64 (cos.f64 y)) 3)) (/.f64 (*.f64 a -1/3) b))","fresh",18.58283722487085],["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (pow.f64 (pow.f64 (*.f64 t -1/3) 3) 1/3) y))) (/.f64 (*.f64 a -1/3) b))","fresh",40.7776446609789],["(+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))) (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))))","fresh",62.20045069368174]],"compiler":[[26,20],[41,32],[17,14],[26,20],[25,19],[26,20],[33,26],[26,20],[39,28],[23,17],[20,16],[22,18],[11,9],[27,21],[11,9],[27,18],[25,19],[35,25],[36,24],[31,24],[80,53],[25,19],[21,17],[20,16],[27,21],[22,18],[26,19],[25,19],[21,16],[20,16],[19,15],[47,35],[21,17],[27,21],[67,45]],"count":[[149,35]],"kept":[{"done":[1,1],"fresh":[33,30],"new":[114,3],"picked":[1,1]}],"min-error":[16.41770519297966],"time":39.375,"type":"prune"},{"accuracy":[18.512818426028634],"baseline":[18.512818426028637],"branch":[["x",18.512818426028637,1],["y",18.51281842602864,1],["z",18.512818426028637,1],["t",18.512818426028637,1],["a",18.51281842602865,1],["b",18.512818426028645,1],["(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))) (/.f64 a (*.f64 b 3)))",18.512818426028648,1],["(*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3))))",18.512818426028648,1],["(*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3))))",18.512818426028648,1],["(*.f64 2 (sqrt.f64 x))",18.512818426028637,1],["(*.f64 2 (sqrt.f64 x))",18.512818426028637,1],["(sqrt.f64 x)",18.512818426028637,1],["(cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))",18.512818426028645,1],["(cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))",18.512818426028645,1],["(-.f64 y (/.f64 (*.f64 z t) 3))",18.51281842602864,1],["(-.f64 y (/.f64 (*.f64 z t) 3))",18.51281842602864,1],["(/.f64 (*.f64 z t) 3)",18.512818426028637,1],["(*.f64 z t)",18.512818426028637,1],["(/.f64 a (*.f64 b 3))",18.512818426028634,1],["(*.f64 b 3)",18.512818426028645,1]],"compiler":[[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[25,19],[19,15],[19,15],[10,9],[10,9],[8,7],[14,11],[14,11],[13,10],[13,10],[11,9],[9,7],[11,9],[9,8],[993,600]],"count":[[47,1]],"inputs":[["(fma.f64 (sqrt.f64 x) (*.f64 2 (*.f64 (cbrt.f64 (cos.f64 y)) (cbrt.f64 (-.f64 1 (*.f64 y y))))) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (*.f64 (cbrt.f64 (cos.f64 y)) (cbrt.f64 1))) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (fabs.f64 (cos.f64 y))) (/.f64 (*.f64 a -1/3) b))","(pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b)))) 3)","(pow.f64 (pow.f64 (fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (*.f64 -1/3 (/.f64 a b))) 3) 1/3)","(fma.f64 (sqrt.f64 x) (*.f64 2 1) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (*.f64 (cbrt.f64 (cos.f64 y)) (cbrt.f64 (pow.f64 (cos.f64 y) 2)))) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (pow.f64 (*.f64 -3 (/.f64 b a)) -1))","(fma.f64 (sqrt.f64 x) (*.f64 2 (log1p.f64 (expm1.f64 (cos.f64 y)))) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 y)))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 y)))))) (/.f64 (*.f64 a -1/3) b))","(pow.f64 (cbrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))) 3)","(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 y))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 y))) (sin.f64 1)))) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (sqrt.f64 (pow.f64 (cos.f64 y) 2))) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (sqrt.f64 (*.f64 (*.f64 a a) 1/9)) b))","(exp.f64 (log.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))","(fma.f64 (sqrt.f64 x) (*.f64 2 (pow.f64 (cbrt.f64 (cos.f64 y)) 3)) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (fma.f64 y (*.f64 y -1/2) 1)) (/.f64 (*.f64 a -1/3) b))","(+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y))))))))","(pow.f64 (pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)))) 3) 1/3)","(fma.f64 (sqrt.f64 x) (*.f64 2 (log.f64 (exp.f64 (cos.f64 y)))) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (sqrt.f64 (pow.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)) 2))) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (fma.f64 z (*.f64 t -1/3) y)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (fma.f64 z (*.f64 t -1/3) y)))) (sin.f64 1)))) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (pow.f64 (cbrt.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) 3)) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (pow.f64 (pow.f64 (*.f64 t -1/3) 3) 1/3) y))) (/.f64 (*.f64 a -1/3) b))","(sqrt.f64 (pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 2))","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (+.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/3) t))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/3) t)))) y))) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 t (*.f64 z -1/3) y))) (/.f64 (*.f64 a -1/3) b))","(pow.f64 (cbrt.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))) 3)","(*.f64 (/.f64 -1/3 b) a)","(pow.f64 (pow.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 3) 1/3)","(*.f64 -1/3 (/.f64 a b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (exp.f64 (log.f64 (*.f64 t -1/3))) y))) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (-.f64 (*.f64 (cos.f64 y) (cos.f64 (*.f64 (*.f64 z t) -1/3))) (*.f64 (sin.f64 y) (sin.f64 (*.f64 (*.f64 z t) -1/3))))) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (cos.f64 y) (*.f64 (*.f64 t z) (+.f64 (*.f64 1/3 (sin.f64 y)) (*.f64 (*.f64 t z) (*.f64 (cos.f64 y) -1/18)))))) (/.f64 (*.f64 a -1/3) b))","(/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) 3) (pow.f64 (*.f64 -1/3 (/.f64 a b)) 3)) (fma.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (-.f64 (pow.f64 (*.f64 -1/3 (/.f64 a b)) 2) (*.f64 (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (*.f64 -1/3 (/.f64 a b))))))","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (expm1.f64 (log1p.f64 (*.f64 -1/3 a))) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (log1p.f64 (expm1.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (-.f64 (exp.f64 (log1p.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) 1)) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (fma.f64 1/3 (*.f64 z (*.f64 t (sin.f64 y))) (cos.f64 y))) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))) (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (log.f64 (exp.f64 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))) (/.f64 (*.f64 a -1/3) b))","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (pow.f64 (cbrt.f64 (*.f64 t -1/3)) 3) y))) (/.f64 (*.f64 a -1/3) b))","(+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))) (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y)))))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))))","(exp.f64 (log.f64 (fma.f64 -1/3 (/.f64 a b) (*.f64 (*.f64 (sqrt.f64 x) 2) (cos.f64 (fma.f64 z (*.f64 t -1/3) y))))))","(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 (fma.f64 z (*.f64 t -1/3) y))) (/.f64 (*.f64 a -1/3) b))","(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))) (/.f64 a (*.f64 b 3)))"]],"link":["."],"name":["Diagrams.Solve.Polynomial:cubForm  from diagrams-solve-0.1, K"],"oracle":[63.963872195536794],"outputs":[["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (*.f64 a -1/3) b))"]],"time":285.0009765625,"times":[["x",13.19189453125],["y",13.03515625],["z",13.262939453125],["t",13.1650390625],["a",12.948974609375],["b",13.177001953125],["(-.f64 (*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))) (/.f64 a (*.f64 b 3)))",13.74609375],["(*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3))))",13.869873046875],["(*.f64 (*.f64 2 (sqrt.f64 x)) (cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3))))",13.557861328125],["(*.f64 2 (sqrt.f64 x))",13.43994140625],["(*.f64 2 (sqrt.f64 x))",13.208984375],["(sqrt.f64 x)",13.656982421875],["(cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))",12.677001953125],["(cos.f64 (-.f64 y (/.f64 (*.f64 z t) 3)))",12.557861328125],["(-.f64 y (/.f64 (*.f64 z t) 3))",12.696044921875],["(-.f64 y (/.f64 (*.f64 z t) 3))",12.5390625],["(/.f64 (*.f64 z t) 3)",10.81689453125],["(*.f64 z t)",10.89501953125],["(/.f64 a (*.f64 b 3))",12.676025390625],["(*.f64 b 3)",14.005126953125]],"type":"regimes"},{"compiler":[[18,14]],"egraph":[[1,15,18,3.9832999999999996e-5],[0,13,18,2.3833e-5]],"inputs":[["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (*.f64 a -1/3) b))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 (sqrt.f64 x) (*.f64 2 (cos.f64 y)) (/.f64 (*.f64 a -1/3) b))"]],"stop":[["fuel",1],["saturated",1]],"time":8.556884765625,"type":"simplify"},{"time":0.01513671875,"type":"soundness"},{"compiler":[[18,14],[18,14],[18,14]],"remove-preprocessing":[["(sort z t)"]],"time":10.673828125,"type":"end"}]