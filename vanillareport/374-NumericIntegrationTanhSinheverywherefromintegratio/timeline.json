[{"compiler":[[10,7]],"method":["search"],"sampling":[[12,0.6887799953110516,0.09170725150033832,0.21951275318861008],[11,0.6595117235556245,0.12097552325576544,0.21951275318861008],[10,0.6321946699172258,0.17951206676661968,0.18829326331615448],[9,0.5775605626404285,0.23414617404341698,0.18829326331615448],[8,0.5307313278317451,0.34341438859701157,0.1258542835712433],[7,0.43707285821437836,0.43707285821437836,0.1258542835712433],[6,0.37463387846946716,0.6243897974491119,0.0009763240814208984],[5,0.24975591897964478,0.7492677569389343,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":22.7998046875,"type":"analyze"},{"outcomes":[["body",256,"invalid",11.287109375,347],["body",256,"valid",273.017822265625,8256]],"time":292.400146484375,"type":"sample"},{"compiler":[[9,6]],"egraph":[[0,2,2,1.291e-6],[4,101,16,0.000926874],[3,93,16,0.000657457],[2,50,16,0.000366791],[1,28,16,0.000161957],[0,10,20,6.1166e-5]],"inputs":[["0","1"],["(*.f64 x (+.f64 1 (*.f64 y y)))","(*.f64 y (+.f64 1 (*.f64 x x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 x (+.f64 1 (*.f64 y y)))","(*.f64 x (fma.f64 y y 1))","(fma.f64 y (*.f64 x y) x)","(*.f64 y (+.f64 1 (*.f64 x x)))","(*.f64 y (fma.f64 x x 1))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":22.60400390625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[5,62,8,0.000722001],[4,60,8,0.000572001],[3,56,8,0.000413376],[2,29,8,0.000220167],[1,17,8,0.00010962600000000001],[0,7,10,4.6042e-5]],"inputs":[["(*.f64 x (+.f64 1 (*.f64 y y)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 x (+.f64 1 (*.f64 y y)))","(*.f64 x (fma.f64 y y 1))"]],"stop":[["saturated",1]],"time":10.781982421875,"type":"simplify"},{"compiler":[[15,9]],"time":0.319091796875,"type":"eval"},{"alts":[["(*.f64 x (fma.f64 y y 1))","next",4.3359375]],"compiler":[[8,5],[8,5]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[4.3359375],"time":0.781005859375,"type":"prune"},{"compiler":[[15,8]],"locations":[["(*.f64 x (fma.f64 y y 1))",4.058970243871492,true]],"time":4.19091796875,"type":"localize"},{"count":[[1,24]],"series":[["(*.f64 x (fma.f64 y y 1))","y","-inf",0.404052734375],["(*.f64 x (fma.f64 y y 1))","y","inf",0.39990234375],["(*.f64 x (fma.f64 y y 1))","y","0",0.491943359375],["(*.f64 x (fma.f64 y y 1))","x","-inf",0.327880859375],["(*.f64 x (fma.f64 y y 1))","x","inf",0.406982421875],["(*.f64 x (fma.f64 y y 1))","x","0",0.56298828125]],"time":2.669921875,"type":"series"},{"count":[[1,13]],"egraph":[[2,1226,8,0.01389275],[1,111,8,0.0016946670000000002],[0,6,8,0.000164875]],"inputs":[["(*.f64 x (fma.f64 y y 1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y y) x) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 y y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (fma.f64 y y 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (fma.f64 y y 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (fma.f64 y y 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (fma.f64 y y 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (fma.f64 y y 1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (fma.f64 y y 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (fma.f64 y y 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (fma.f64 y y 1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (fma.f64 y y 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (fma.f64 y y 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (fma.f64 y y 1))))))))"]],"rules":[["egg-rr",13]],"stop":[["node limit",1]],"time":30.0380859375,"type":"rewrite"},{"count":[[37,19]],"egraph":[[22,6255,183,0.099426459],[21,6221,183,0.083358584],[20,6141,183,0.074934209],[19,5833,183,0.066610501],[18,5517,183,0.058830209],[17,5091,183,0.051818084],[16,4229,183,0.044503959],[15,3523,183,0.036477751],[14,2930,183,0.029529834],[13,2473,183,0.024112543],[12,2103,183,0.019785959],[11,1786,183,0.015969834],[10,1545,183,0.012697667],[9,1373,183,0.009922542],[8,1238,183,0.007757042],[7,1118,183,0.0059295419999999995],[6,697,183,0.004055542],[5,475,183,0.002575625],[4,170,183,0.001446167],[3,75,183,0.000637333],[2,40,183,0.000346],[1,22,183,0.00017783300000000002],[0,10,183,7.0417e-5]],"inputs":[["(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","x","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(*.f64 (pow.f64 y 2) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(*.f64 (pow.f64 y 2) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","x","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 (*.f64 y y) x)","(*.f64 y (*.f64 y x))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 (fma.f64 y y 1) x)","(fma.f64 y (*.f64 y x) x)"]],"stop":[["node limit",1]],"time":118.513916015625,"type":"simplify"},{"compiler":[[143,85]],"time":2.35498046875,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (*.f64 x (fma.f64 y y 1))) 3)","fresh",4.984897802821701],["(*.f64 x (fma.f64 y y 1))","done",4.3359375],["(fma.f64 y (*.f64 y x) x)","next",0.12109375]],"compiler":[[11,8],[8,5],[8,4],[11,8],[8,4]],"count":[[20,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[19,2],"picked":[1,1]}],"min-error":[0.05078125],"time":3.18896484375,"type":"prune"},{"compiler":[[13,4]],"locations":[["(fma.f64 y (*.f64 y x) x)",0.12109375,true]],"time":3.156005859375,"type":"localize"},{"count":[[1,24]],"series":[["(fma.f64 y (*.f64 y x) x)","x","-inf",0.552001953125],["(fma.f64 y (*.f64 y x) x)","x","inf",0.485107421875],["(fma.f64 y (*.f64 y x) x)","x","0",0.416015625],["(fma.f64 y (*.f64 y x) x)","y","-inf",0.629150390625],["(fma.f64 y (*.f64 y x) x)","y","inf",0.3388671875],["(fma.f64 y (*.f64 y x) x)","y","0",0.37109375]],"time":2.8720703125,"type":"series"},{"count":[[1,21]],"egraph":[[2,1197,8,0.013832166],[1,99,8,0.001628208],[0,5,8,0.000126375]],"inputs":[["(fma.f64 y (*.f64 y x) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 y (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (*.f64 y x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y (*.f64 y x)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 y (*.f64 y x) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 y (*.f64 y x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 y (*.f64 y x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 y (*.f64 y x) x)) (sqrt.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 y (*.f64 y x)) 3) (pow.f64 x 3)) (+.f64 (*.f64 (*.f64 y (*.f64 y x)) (*.f64 y (*.f64 y x))) (-.f64 (*.f64 x x) (pow.f64 (*.f64 y x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 y (*.f64 y x)) (*.f64 y (*.f64 y x))) (*.f64 x x)) (-.f64 (*.f64 y (*.f64 y x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 y (*.f64 y x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 y (*.f64 y x) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 y (*.f64 y x) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 y (*.f64 y x) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y x) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 y (*.f64 y x) x)))))))"]],"rules":[["egg-rr",21]],"stop":[["node limit",1]],"time":30.669921875,"type":"rewrite"},{"count":[[45,28]],"egraph":[[10,7626,183,0.052208042],[9,6150,183,0.044694334],[8,4291,183,0.033401292],[7,2612,183,0.022444876],[6,1736,183,0.013940708999999999],[5,1186,183,0.008469084],[4,619,183,0.004435292],[3,229,183,0.001797],[2,87,183,0.0007331670000000001],[1,37,183,0.000289625],[0,15,183,9.7e-5]],"inputs":[["x","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(*.f64 (pow.f64 y 2) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(*.f64 (pow.f64 y 2) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))"]],"method":["egg-herbie"],"outputs":[["x","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 y (*.f64 x y))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 y (*.f64 x y))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))"]],"stop":[["node limit",1]],"time":67.814208984375,"type":"simplify"},{"compiler":[[284,92]],"time":2.849853515625,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","next",0.7828066407376812],["(fma.f64 y (*.f64 y x) x)","done",0.12109375],["(*.f64 x (fma.f64 y y 1))","done",4.3359375],["(/.f64 (-.f64 (*.f64 (*.f64 y (*.f64 y x)) (*.f64 y (*.f64 y x))) (*.f64 x x)) (-.f64 (*.f64 y (*.f64 y x)) x))","fresh",29.678605861422643],["(/.f64 (+.f64 (pow.f64 (*.f64 y (*.f64 y x)) 3) (pow.f64 x 3)) (+.f64 (*.f64 (*.f64 y (*.f64 y x)) (*.f64 y (*.f64 y x))) (-.f64 (*.f64 x x) (pow.f64 (*.f64 y x) 2))))","fresh",42.292838375455545]],"compiler":[[19,8],[8,4],[8,5],[25,9],[35,16],[19,8],[25,9],[35,16]],"count":[[31,5]],"kept":[{"done":[1,1],"fresh":[1,0],"new":[28,3],"picked":[1,1]}],"min-error":[0.03515625],"time":5.3271484375,"type":"prune"},{"compiler":[[47,11]],"locations":[["(cbrt.f64 (fma.f64 y (*.f64 y x) x))",0.08203125,true],["(fma.f64 y (*.f64 y x) x)",0.12109375,false],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))",0.328125,true],["(pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2)",0.4567375488422101,true]],"time":7.679931640625,"type":"localize"},{"count":[[3,32]],"series":[["(cbrt.f64 (fma.f64 y (*.f64 y x) x))","x","-inf",0.2490234375],["(cbrt.f64 (fma.f64 y (*.f64 y x) x))","x","inf",0.218994140625],["(cbrt.f64 (fma.f64 y (*.f64 y x) x))","x","0",0.235107421875],["(cbrt.f64 (fma.f64 y (*.f64 y x) x))","y","-inf",0.221923828125],["(cbrt.f64 (fma.f64 y (*.f64 y x) x))","y","inf",0.26904296875],["(cbrt.f64 (fma.f64 y (*.f64 y x) x))","y","0",0.287109375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","x","-inf",0.317138671875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","x","inf",0.281005859375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","x","0",0.2861328125],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","y","-inf",0.222900390625],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","y","inf",0.22607421875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","y","0",0.8701171875],["(pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2)","x","-inf",0.364013671875],["(pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2)","x","inf",0.39208984375],["(pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2)","x","0",0.310791015625],["(pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2)","y","-inf",0.3740234375],["(pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2)","y","inf",0.608154296875],["(pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2)","y","0",1.15185546875]],"time":7.115966796875,"type":"series"},{"count":[[3,53]],"egraph":[[2,1849,31,0.018093292],[1,185,31,0.002797292],[0,9,31,0.000244917]],"inputs":[["(pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2)","(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","(cbrt.f64 (fma.f64 y (*.f64 y x) x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) (cbrt.f64 (fma.f64 y (*.f64 y x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 4)) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 y (*.f64 y x) x)) (pow.f64 (fma.f64 y (*.f64 y x) x) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 y (*.f64 y x) x) 1/6) (sqrt.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2)) (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y x) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 y (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (*.f64 y x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y (*.f64 y x)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 y (*.f64 y x) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 y (*.f64 y x)) 3) (pow.f64 x 3)) (+.f64 (*.f64 (*.f64 y (*.f64 y x)) (*.f64 y (*.f64 y x))) (-.f64 (*.f64 x x) (pow.f64 (*.f64 y x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 y (*.f64 y x)) (*.f64 y (*.f64 y x))) (*.f64 x x)) (-.f64 (*.f64 y (*.f64 y x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 y (*.f64 y x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 y (*.f64 y x) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 y (*.f64 y x) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 y (*.f64 y x) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y x) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 y x) x)))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2) (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 y (*.f64 y x) x) 1/6) (pow.f64 (fma.f64 y (*.f64 y x) x) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 4))) (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 y (*.f64 y x) x)) 1/3) (pow.f64 (sqrt.f64 (fma.f64 y (*.f64 y x) x)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 y (*.f64 y x) x) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 y (*.f64 y x) x) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))))))))"]],"rules":[["egg-rr",20],["egg-rr",17],["egg-rr",16]],"stop":[["node limit",1]],"time":41.283935546875,"type":"rewrite"},{"count":[[85,76]],"egraph":[[4,7901,377,0.033928124999999996],[3,3661,377,0.018543708],[2,769,389,0.006379416],[1,222,412,0.001564541],[0,70,414,0.00035475]],"inputs":[["(pow.f64 (pow.f64 x 2) 1/3)","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3) (pow.f64 y 2))) (pow.f64 (pow.f64 x 2) 1/3))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 y 4) (+.f64 (*.f64 -2/9 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (*.f64 1/9 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)))) (pow.f64 (pow.f64 x 2) 1/3)))","(+.f64 (*.f64 (pow.f64 y 6) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (+.f64 (*.f64 -2/9 x) (*.f64 1/27 x)))) (*.f64 -2/27 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 y 4) (+.f64 (*.f64 -2/9 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (*.f64 1/9 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)))) (pow.f64 (pow.f64 x 2) 1/3))))","x","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(*.f64 (pow.f64 y 2) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(*.f64 (pow.f64 y 2) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(pow.f64 x 1/3)","(+.f64 (pow.f64 x 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (pow.f64 y 2))))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (pow.f64 y 2))) (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (pow.f64 y 4)))))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 6) (+.f64 (*.f64 -2/9 x) (*.f64 1/27 x))))) (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (pow.f64 y 4))))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (pow.f64 x 2) 1/3)","(cbrt.f64 (*.f64 x x))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3) (pow.f64 y 2))) (pow.f64 (pow.f64 x 2) 1/3))","(fma.f64 2/3 (*.f64 (cbrt.f64 (*.f64 x x)) (*.f64 y y)) (cbrt.f64 (*.f64 x x)))","(fma.f64 (*.f64 2/3 (cbrt.f64 (*.f64 x x))) (*.f64 y y) (cbrt.f64 (*.f64 x x)))","(*.f64 (+.f64 (*.f64 2/3 (*.f64 y y)) 1) (cbrt.f64 (*.f64 x x)))","(*.f64 (+.f64 1 (*.f64 2/3 (*.f64 y y))) (cbrt.f64 (*.f64 x x)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 y 4) (+.f64 (*.f64 -2/9 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (*.f64 1/9 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)))) (pow.f64 (pow.f64 x 2) 1/3)))","(fma.f64 2/3 (*.f64 (cbrt.f64 (*.f64 x x)) (*.f64 y y)) (fma.f64 (pow.f64 y 4) (*.f64 (cbrt.f64 (*.f64 x x)) -1/9) (cbrt.f64 (*.f64 x x))))","(+.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (*.f64 2/3 (*.f64 y y)) (*.f64 (pow.f64 y 4) -1/9))))","(*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (+.f64 1 (*.f64 2/3 (*.f64 y y))) (*.f64 (pow.f64 y 4) -1/9)))","(+.f64 (*.f64 (pow.f64 y 6) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (+.f64 (*.f64 -2/9 x) (*.f64 1/27 x)))) (*.f64 -2/27 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3) (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 y 4) (+.f64 (*.f64 -2/9 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)) (*.f64 1/9 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/3)))) (pow.f64 (pow.f64 x 2) 1/3))))","(fma.f64 (pow.f64 y 6) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 x)) (*.f64 x -5/27)) (*.f64 (cbrt.f64 (*.f64 x x)) -2/27)) (fma.f64 2/3 (*.f64 (cbrt.f64 (*.f64 x x)) (*.f64 y y)) (fma.f64 (pow.f64 y 4) (*.f64 (cbrt.f64 (*.f64 x x)) -1/9) (cbrt.f64 (*.f64 x x)))))","(+.f64 (cbrt.f64 (*.f64 x x)) (fma.f64 (pow.f64 y 6) (fma.f64 (cbrt.f64 (/.f64 1 x)) (*.f64 x 10/81) (*.f64 (cbrt.f64 (*.f64 x x)) -2/27)) (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (*.f64 2/3 (*.f64 y y)) (*.f64 (pow.f64 y 4) -1/9)))))","(fma.f64 (pow.f64 y 6) (fma.f64 (cbrt.f64 (/.f64 1 x)) (*.f64 x 10/81) (*.f64 (cbrt.f64 (*.f64 x x)) -2/27)) (*.f64 (cbrt.f64 (*.f64 x x)) (+.f64 (+.f64 1 (*.f64 2/3 (*.f64 y y))) (*.f64 (pow.f64 y 4) -1/9))))","x","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 y (*.f64 x y))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(*.f64 y (*.f64 x y))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(fma.f64 x (*.f64 y y) x)","(pow.f64 x 1/3)","(cbrt.f64 x)","(+.f64 (pow.f64 x 1/3) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (pow.f64 y 2))))","(+.f64 (cbrt.f64 x) (*.f64 (*.f64 1/3 (cbrt.f64 x)) (*.f64 y y)))","(fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 x)) (cbrt.f64 x))","(*.f64 (+.f64 (*.f64 (*.f64 1/3 y) y) 1) (cbrt.f64 x))","(fma.f64 (cbrt.f64 x) (*.f64 (*.f64 1/3 y) y) (cbrt.f64 x))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (pow.f64 y 2))) (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (pow.f64 y 4)))))","(+.f64 (cbrt.f64 x) (fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 x)) (*.f64 (*.f64 -1/9 (cbrt.f64 x)) (pow.f64 y 4))))","(+.f64 (cbrt.f64 x) (fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 x)) (*.f64 (pow.f64 y 4) (*.f64 (cbrt.f64 x) -1/9))))","(+.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 x) (+.f64 (*.f64 (*.f64 1/3 y) y) (*.f64 (pow.f64 y 4) -1/9))))","(*.f64 (cbrt.f64 x) (+.f64 (*.f64 (*.f64 1/3 y) y) (+.f64 1 (*.f64 (pow.f64 y 4) -1/9))))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 6) (+.f64 (*.f64 -2/9 x) (*.f64 1/27 x))))) (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 x) 1/3) (pow.f64 y 4))))))","(+.f64 (cbrt.f64 x) (fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 x)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x x))) (*.f64 (pow.f64 y 6) (*.f64 x -5/27))) (*.f64 (*.f64 -1/9 (cbrt.f64 x)) (pow.f64 y 4)))))","(+.f64 (cbrt.f64 x) (fma.f64 1/3 (*.f64 (*.f64 y y) (cbrt.f64 x)) (fma.f64 -1/3 (*.f64 (pow.f64 y 6) (*.f64 (*.f64 x -5/27) (cbrt.f64 (/.f64 1 (*.f64 x x))))) (*.f64 (pow.f64 y 4) (*.f64 (cbrt.f64 x) -1/9)))))","(+.f64 (cbrt.f64 x) (fma.f64 (cbrt.f64 (/.f64 1 (*.f64 x x))) (*.f64 (pow.f64 y 6) (*.f64 x 5/81)) (*.f64 (cbrt.f64 x) (+.f64 (*.f64 (*.f64 1/3 y) y) (*.f64 (pow.f64 y 4) -1/9)))))","(+.f64 (*.f64 (cbrt.f64 x) (+.f64 (*.f64 (*.f64 1/3 y) y) (+.f64 1 (*.f64 (pow.f64 y 4) -1/9)))) (*.f64 (pow.f64 y 6) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x x))) (*.f64 x 5/81))))"]],"stop":[["node limit",1]],"time":50.071044921875,"type":"simplify"},{"compiler":[[3392,1179]],"time":25.60009765625,"type":"eval"},{"alts":[["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","fresh",1.04335823414252],["(*.f64 x (fma.f64 y y 1))","done",4.3359375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","done",0.7828066407376812],["(fma.f64 y (*.f64 y x) x)","done",0.12109375],["(*.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3) 2) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","fresh",1.372973961118727],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3))","next",0.9920719723575789],["(/.f64 (+.f64 (pow.f64 (*.f64 y (*.f64 y x)) 3) (pow.f64 x 3)) (+.f64 (*.f64 (*.f64 y (*.f64 y x)) (*.f64 y (*.f64 y x))) (-.f64 (*.f64 x x) (pow.f64 (*.f64 y x) 2))))","fresh",42.292838375455545]],"compiler":[[37,11],[8,5],[19,8],[8,4],[22,11],[22,11],[35,16],[37,11],[22,11],[22,11],[35,16]],"count":[[165,7]],"kept":[{"done":[2,2],"fresh":[2,0],"new":[160,4],"picked":[1,1]}],"min-error":[0.01171875],"time":27.48095703125,"type":"prune"},{"compiler":[[69,17]],"locations":[["(cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))",0.140625,true],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3))",0.328125,true],["(pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2)",0.4567375488422101,false],["(pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3)",0.737182812590145,true]],"time":10.802978515625,"type":"localize"},{"count":[[3,72]],"series":[["(cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","x","-inf",0.19091796875],["(cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","x","inf",0.1669921875],["(cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","x","0",0.161865234375],["(cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","y","-inf",0.35498046875],["(cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","y","inf",0.360107421875],["(cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","y","0",0.27294921875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3))","x","-inf",0.1669921875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3))","x","inf",0.157958984375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3))","x","0",0.1650390625],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3))","y","-inf",0.159912109375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3))","y","inf",0.177978515625],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3))","y","0",0.1669921875],["(pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3)","x","-inf",8.378173828125],["(pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3)","x","inf",9.786865234375],["(pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3)","x","0",15.75390625],["(pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3)","y","-inf",1.5830078125],["(pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3)","y","inf",1.97900390625],["(pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3)","y","0",1.718017578125]],"time":42.075927734375,"type":"series"},{"count":[[3,60]],"egraph":[[2,2281,30,0.019913375],[1,249,30,0.003549542],[0,12,30,0.000355708]],"inputs":[["(pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3)","(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3))","(cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2) (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 y (*.f64 y x) x) 1/6) (pow.f64 (fma.f64 y (*.f64 y x) x) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 1/6) (*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 1/6) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 4))) (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 y (*.f64 y x) x)) 1/3) (pow.f64 (sqrt.f64 (fma.f64 y (*.f64 y x) x)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))) 2) 3) (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 1/6) 3) (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 1/6) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2) 1) (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))) 2)) (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2) (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 1/6)) (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (fma.f64 y (*.f64 y x) x))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 y (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (*.f64 y x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y (*.f64 y x)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 y (*.f64 y x) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 y (*.f64 y x)) 3) (pow.f64 x 3)) (+.f64 (*.f64 (*.f64 y (*.f64 y x)) (*.f64 y (*.f64 y x))) (-.f64 (*.f64 x x) (pow.f64 (*.f64 y x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 y (*.f64 y x)) (*.f64 y (*.f64 y x))) (*.f64 x x)) (-.f64 (*.f64 y (*.f64 y x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 y (*.f64 y x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 y (*.f64 y x) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 y (*.f64 y x) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 y (*.f64 y x) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 y (*.f64 y x) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 y (*.f64 y x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 y x) x)))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))) (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))) 2) (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 1/6) (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2) 1/3) (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (fma.f64 y (*.f64 y x) x) 1/6) 1/3) (pow.f64 (pow.f64 (fma.f64 y (*.f64 y x) x) 1/6) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 y (*.f64 y x) x) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))))))))"]],"rules":[["egg-rr",20],["egg-rr",17],["egg-rr",23]],"stop":[["node limit",1]],"time":44.43798828125,"type":"rewrite"},{"count":[[132,125]],"egraph":[[3,6421,2158,0.029856959],[2,2466,2272,0.015589084],[1,702,2459,0.0052667090000000005],[0,209,2686,0.001196542]],"inputs":[["(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))","(+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))) (pow.f64 y 2)))","(+.f64 (*.f64 (pow.f64 y 4) (+.f64 (*.f64 2/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (+.f64 (*.f64 1/81 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9)) (*.f64 -8/81 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9)))) (*.f64 -4/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))))) (+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))) (pow.f64 y 2))))","(+.f64 (*.f64 (+.f64 (*.f64 -8/729 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (+.f64 (*.f64 -8/729 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9)) (*.f64 136/2187 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9)))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (+.f64 (*.f64 1/81 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9)) (*.f64 -8/81 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9))))) (*.f64 68/2187 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))))) (pow.f64 y 6)) (+.f64 (*.f64 (pow.f64 y 4) (+.f64 (*.f64 2/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (+.f64 (*.f64 1/81 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9)) (*.f64 -8/81 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9)))) (*.f64 -4/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))))) (+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))) (pow.f64 y 2)))))","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3)","(+.f64 (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 2))) (+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (*.f64 2/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 2)))))","(+.f64 (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 2))) (+.f64 (*.f64 2/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 4))) (+.f64 (*.f64 -4/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (+.f64 (*.f64 -8/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 2)) (*.f64 1/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 2)))) (pow.f64 y 4)) (+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (*.f64 2/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 2))))))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -8/729 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 2)) (*.f64 136/2187 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 2))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x))))) (pow.f64 y 6)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (+.f64 (*.f64 -8/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 2)) (*.f64 1/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 2)))) (pow.f64 y 4)) (+.f64 (*.f64 -4/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 4))) (+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (+.f64 (*.f64 -8/729 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 6))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 2))) (+.f64 (*.f64 68/2187 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 6))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 2))) (+.f64 (*.f64 2/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 4))) (*.f64 1/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (+.f64 (*.f64 -8/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 2)) (*.f64 1/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 2)))) (pow.f64 y 6))))))))))))","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3)","(+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 2))) (*.f64 2/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 2)))))","(+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 2)) (*.f64 -8/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 2))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x))))) (pow.f64 y 4)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 2))) (+.f64 (*.f64 -4/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 4))) (*.f64 2/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 4))))))))","(+.f64 (*.f64 68/2187 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 6))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -8/729 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 2)) (*.f64 136/2187 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 2))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x))))) (pow.f64 y 6)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 1/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 2)) (*.f64 -8/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 2))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x))))) (pow.f64 y 6))) (+.f64 (*.f64 -8/729 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 6))) (+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 2)) (*.f64 -8/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 2))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x))))) (pow.f64 y 4)) (+.f64 (*.f64 -4/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 4))) (*.f64 2/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 4))))))))))))","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (pow.f64 y 2))) (log.f64 x)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (pow.f64 y 2))) (log.f64 x)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (pow.f64 y 2))) (log.f64 x)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (pow.f64 y 2))) (log.f64 x)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (pow.f64 y 2)))))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (pow.f64 y 2)))))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (pow.f64 y 2)))))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (pow.f64 y 2)))))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1))))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1))))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1))))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1))))) 3)","x","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(*.f64 (pow.f64 y 2) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(*.f64 (pow.f64 y 2) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(pow.f64 x 1/9)","(+.f64 (pow.f64 x 1/9) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (pow.f64 y 2))))","(+.f64 (pow.f64 x 1/9) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (pow.f64 y 2))) (*.f64 -4/81 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (pow.f64 y 4)))))","(+.f64 (*.f64 68/2187 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (pow.f64 y 6))) (+.f64 (pow.f64 x 1/9) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (pow.f64 y 2))) (*.f64 -4/81 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (pow.f64 y 4))))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x))))","(+.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (*.f64 1/9 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (pow.f64 y 2))))","(+.f64 (*.f64 -4/81 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (pow.f64 y 4))) (+.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (*.f64 1/9 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (pow.f64 y 2)))))","(+.f64 (*.f64 -4/81 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (pow.f64 y 4))) (+.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (+.f64 (*.f64 68/2187 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (pow.f64 y 6))) (*.f64 1/9 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (pow.f64 y 2))))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x))))","(+.f64 (*.f64 1/9 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) (pow.f64 y 2))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))))","(+.f64 (*.f64 -4/81 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) (pow.f64 y 4))) (+.f64 (*.f64 1/9 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) (pow.f64 y 2))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x))))))","(+.f64 (*.f64 -4/81 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) (pow.f64 y 4))) (+.f64 (*.f64 1/9 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) (pow.f64 y 2))) (+.f64 (*.f64 68/2187 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) (pow.f64 y 6))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))))))","(exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (pow.f64 y 2))) (log.f64 x))))","(exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (pow.f64 y 2))) (log.f64 x))))","(exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (pow.f64 y 2))) (log.f64 x))))","(exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (pow.f64 y 2))) (log.f64 x))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (pow.f64 y 2))))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (pow.f64 y 2))))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (pow.f64 y 2))))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (pow.f64 y 2))))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1)))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1)))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1)))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))","(*.f64 1 (cbrt.f64 x))","(cbrt.f64 x)","(+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))) (pow.f64 y 2)))","(fma.f64 1 (cbrt.f64 x) (*.f64 (*.f64 (*.f64 1 (cbrt.f64 x)) 1/3) (*.f64 y y)))","(fma.f64 (*.f64 1/3 (cbrt.f64 x)) (*.f64 y y) (cbrt.f64 x))","(*.f64 (cbrt.f64 x) (+.f64 1 (*.f64 1/3 (*.f64 y y))))","(+.f64 (*.f64 (pow.f64 y 4) (+.f64 (*.f64 2/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (+.f64 (*.f64 1/81 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9)) (*.f64 -8/81 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9)))) (*.f64 -4/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))))) (+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))) (pow.f64 y 2))))","(fma.f64 (pow.f64 y 4) (+.f64 (*.f64 2/81 (cbrt.f64 x)) (fma.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) -7/81) (*.f64 -4/81 (cbrt.f64 x)))) (fma.f64 1 (cbrt.f64 x) (*.f64 (*.f64 (*.f64 1 (cbrt.f64 x)) 1/3) (*.f64 y y))))","(fma.f64 (pow.f64 y 4) (fma.f64 (cbrt.f64 x) 2/81 (fma.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) -7/81) (*.f64 (cbrt.f64 x) -4/81))) (fma.f64 (*.f64 1/3 (cbrt.f64 x)) (*.f64 y y) (cbrt.f64 x)))","(fma.f64 (pow.f64 y 4) (+.f64 (*.f64 (pow.f64 (exp.f64 1/9) (log.f64 x)) (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) -7/81)) (*.f64 (cbrt.f64 x) -2/81)) (*.f64 (cbrt.f64 x) (+.f64 1 (*.f64 1/3 (*.f64 y y)))))","(+.f64 (*.f64 (+.f64 (*.f64 -8/729 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (+.f64 (*.f64 -8/729 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9)) (*.f64 136/2187 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9)))) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (+.f64 (*.f64 1/81 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9)) (*.f64 -8/81 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9))))) (*.f64 68/2187 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))))) (pow.f64 y 6)) (+.f64 (*.f64 (pow.f64 y 4) (+.f64 (*.f64 2/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (+.f64 (*.f64 1/81 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9)) (*.f64 -8/81 (pow.f64 (*.f64 1 (pow.f64 x 2)) 1/9)))) (*.f64 -4/81 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))))) (+.f64 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 x 1/3)))) (pow.f64 y 2)))))","(fma.f64 (+.f64 (*.f64 -8/729 (cbrt.f64 x)) (fma.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) 112/2187) (fma.f64 1/9 (*.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) -7/81)) (*.f64 68/2187 (cbrt.f64 x))))) (pow.f64 y 6) (fma.f64 (pow.f64 y 4) (+.f64 (*.f64 2/81 (cbrt.f64 x)) (fma.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) -7/81) (*.f64 -4/81 (cbrt.f64 x)))) (fma.f64 1 (cbrt.f64 x) (*.f64 (*.f64 (*.f64 1 (cbrt.f64 x)) 1/3) (*.f64 y y)))))","(fma.f64 (fma.f64 (cbrt.f64 x) -8/729 (fma.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) 112/2187) (fma.f64 1/9 (*.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) -7/81)) (*.f64 (cbrt.f64 x) 68/2187)))) (pow.f64 y 6) (fma.f64 (pow.f64 y 4) (fma.f64 (cbrt.f64 x) 2/81 (fma.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) -7/81) (*.f64 (cbrt.f64 x) -4/81))) (fma.f64 (*.f64 1/3 (cbrt.f64 x)) (*.f64 y y) (cbrt.f64 x))))","(fma.f64 (+.f64 (*.f64 (pow.f64 (exp.f64 1/9) (log.f64 x)) (+.f64 (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) 112/2187) (*.f64 1/9 (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) -7/81)))) (*.f64 (cbrt.f64 x) 44/2187)) (pow.f64 y 6) (fma.f64 (pow.f64 y 4) (+.f64 (*.f64 (pow.f64 (exp.f64 1/9) (log.f64 x)) (*.f64 (*.f64 (pow.f64 (*.f64 x x) 1/18) (pow.f64 (*.f64 x x) 1/18)) -7/81)) (*.f64 (cbrt.f64 x) -2/81)) (*.f64 (cbrt.f64 x) (+.f64 1 (*.f64 1/3 (*.f64 y y))))))","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) 3)","(pow.f64 (fabs.f64 (pow.f64 (*.f64 x (*.f64 y y)) 1/18)) 6)","(+.f64 (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 2))) (+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (*.f64 2/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 2)))))","(fma.f64 1/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (*.f64 y y)) (+.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (*.f64 2/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (*.f64 y y)))))","(fma.f64 1/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (*.f64 y y)) (fma.f64 2/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (*.f64 y y)) (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3)))","(+.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) 3) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) 3) (*.f64 y y)) 1/3))","(+.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (*.f64 y y)) 1/18)) 6) (*.f64 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (*.f64 y y)) 1/18)) 6) (*.f64 y y)) 1/3))","(+.f64 (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 2))) (+.f64 (*.f64 2/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 4))) (+.f64 (*.f64 -4/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 4))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (+.f64 (*.f64 -8/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 2)) (*.f64 1/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 2)))) (pow.f64 y 4)) (+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (*.f64 2/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 2))))))))","(fma.f64 1/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (*.f64 y y)) (fma.f64 2/81 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (pow.f64 y 4)) (fma.f64 -4/81 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (pow.f64 y 4)) (+.f64 (+.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (*.f64 2/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (*.f64 y y)))) (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) (/.f64 (pow.f64 y 4) (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 2) -7/81)))))))","(fma.f64 1/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (*.f64 y y)) (+.f64 (+.f64 (fma.f64 2/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (*.f64 y y)) (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3)) (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) -7/81) (pow.f64 y 4))) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (pow.f64 y 4)) -2/81)))","(+.f64 (+.f64 (+.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) 3) (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) 3) (/.f64 (pow.f64 y 4) -7/81))) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) 3) (*.f64 y y)) (+.f64 2/9 (/.f64 -4/81 (*.f64 y y))))) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) 3) (*.f64 y y)) (+.f64 1/9 (/.f64 2/81 (*.f64 y y)))))","(+.f64 (+.f64 (+.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (*.f64 y y)) 1/18)) 6) (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (*.f64 y y)) 1/18)) 6) (/.f64 (pow.f64 y 4) -7/81))) (*.f64 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (*.f64 y y)) 1/18)) 6) (*.f64 y y)) (+.f64 2/9 (/.f64 -4/81 (*.f64 y y))))) (*.f64 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (*.f64 y y)) 1/18)) 6) (*.f64 y y)) (+.f64 1/9 (/.f64 2/81 (*.f64 y y)))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -8/729 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 2)) (*.f64 136/2187 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 2))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x))))) (pow.f64 y 6)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (+.f64 (*.f64 -8/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 2)) (*.f64 1/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 2)))) (pow.f64 y 4)) (+.f64 (*.f64 -4/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 4))) (+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (+.f64 (*.f64 -8/729 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 6))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 2))) (+.f64 (*.f64 68/2187 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 6))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 2))) (+.f64 (*.f64 2/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 3) (pow.f64 y 4))) (*.f64 1/9 (/.f64 (*.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (+.f64 (*.f64 -8/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 2)) (*.f64 1/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) 2)))) (pow.f64 y 6))))))))))))","(+.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 2) 112/2187) (/.f64 (pow.f64 y 6) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))))) (+.f64 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) (/.f64 (pow.f64 y 4) (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 2) -7/81))) (fma.f64 -4/81 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (pow.f64 y 4)) (+.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (fma.f64 -8/729 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (pow.f64 y 6)) (fma.f64 2/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (*.f64 y y)) (fma.f64 68/2187 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (pow.f64 y 6)) (fma.f64 1/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (*.f64 y y)) (fma.f64 2/81 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (pow.f64 y 4)) (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) (/.f64 (pow.f64 y 6) (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 2) -7/81)))))))))))))","(+.f64 (+.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) -7/81) (pow.f64 y 4)) (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) 112/2187) (pow.f64 y 6))) (fma.f64 -4/81 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (pow.f64 y 4)) (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3))) (fma.f64 -8/729 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (pow.f64 y 6)) (fma.f64 2/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (*.f64 y y)) (fma.f64 68/2187 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (pow.f64 y 6)) (fma.f64 1/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (*.f64 y y)) (fma.f64 1/9 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) -7/81) (pow.f64 y 6)) (*.f64 2/81 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) 3) (pow.f64 y 4)))))))))","(+.f64 (fma.f64 -8/729 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) 3) (pow.f64 y 6)) (fma.f64 2/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) 3) (*.f64 y y)) (fma.f64 68/2187 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) 3) (pow.f64 y 6)) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) 3) (/.f64 (pow.f64 y 6) -7/81))) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) 3) (*.f64 y y)) (+.f64 1/9 (/.f64 2/81 (*.f64 y y)))))))) (+.f64 (fma.f64 -4/81 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) 3) (pow.f64 y 4)) (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) 3)) (+.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) 3) (/.f64 (pow.f64 y 4) -7/81)) (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) 3) (/.f64 (pow.f64 y 6) 112/2187)))))","(+.f64 (fma.f64 -8/729 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (*.f64 y y)) 1/18)) 6) (pow.f64 y 6)) (fma.f64 2/9 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (*.f64 y y)) 1/18)) 6) (*.f64 y y)) (fma.f64 68/2187 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (*.f64 y y)) 1/18)) 6) (pow.f64 y 6)) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (*.f64 y y)) 1/18)) 6) (/.f64 (pow.f64 y 6) -7/81))) (*.f64 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (*.f64 y y)) 1/18)) 6) (*.f64 y y)) (+.f64 1/9 (/.f64 2/81 (*.f64 y y)))))))) (+.f64 (fma.f64 -4/81 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (*.f64 y y)) 1/18)) 6) (pow.f64 y 4)) (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (*.f64 y y)) 1/18)) 6)) (+.f64 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (*.f64 y y)) 1/18)) 6) (/.f64 (pow.f64 y 4) -7/81)) (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (*.f64 y y)) 1/18)) 6) (/.f64 (pow.f64 y 6) 112/2187)))))","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3)","(pow.f64 (fabs.f64 (pow.f64 (*.f64 x (pow.f64 (/.f64 -1 y) -2)) 1/18)) 6)","(+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 2))) (*.f64 2/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 2)))))","(+.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (*.f64 y y)) 1/3))","(fma.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (*.f64 y y)) 1/3 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3))","(fma.f64 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (pow.f64 (/.f64 -1 y) -2)) 1/18)) 6) (*.f64 y y)) 1/3 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (pow.f64 (/.f64 -1 y) -2)) 1/18)) 6))","(+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 2)) (*.f64 -8/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 2))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x))))) (pow.f64 y 4)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 2))) (+.f64 (*.f64 -4/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 4))) (*.f64 2/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 4))))))))","(+.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (fma.f64 1/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (*.f64 y y)) (+.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 2) -7/81) (/.f64 (pow.f64 y 4) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))))) (fma.f64 2/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (*.f64 y y)) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (pow.f64 y 4)) -2/81)))))","(+.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (+.f64 (fma.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (pow.f64 y 4)) -2/81 (*.f64 2/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (*.f64 y y)))) (fma.f64 1/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (*.f64 y y)) (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) -7/81) (pow.f64 y 4)))))","(+.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (+.f64 (fma.f64 2/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (*.f64 y y)) (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (/.f64 (pow.f64 y 4) -2/81))) (fma.f64 1/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (*.f64 y y)) (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (/.f64 (pow.f64 y 4) -7/81)))))","(+.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (pow.f64 (/.f64 -1 y) -2)) 1/18)) 6) (+.f64 (fma.f64 2/9 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (pow.f64 (/.f64 -1 y) -2)) 1/18)) 6) (*.f64 y y)) (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (pow.f64 (/.f64 -1 y) -2)) 1/18)) 6) (/.f64 (pow.f64 y 4) -2/81))) (fma.f64 1/9 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (pow.f64 (/.f64 -1 y) -2)) 1/18)) 6) (*.f64 y y)) (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (pow.f64 (/.f64 -1 y) -2)) 1/18)) 6) (/.f64 (pow.f64 y 4) -7/81)))))","(+.f64 (*.f64 68/2187 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 6))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -8/729 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 2)) (*.f64 136/2187 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 2))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x))))) (pow.f64 y 6)) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 2))) (+.f64 (*.f64 1/9 (/.f64 (*.f64 (+.f64 (*.f64 1/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 2)) (*.f64 -8/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 2))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x))))) (pow.f64 y 6))) (+.f64 (*.f64 -8/729 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 6))) (+.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 2)) (*.f64 -8/81 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 2))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x))))) (pow.f64 y 4)) (+.f64 (*.f64 -4/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 4))) (*.f64 2/81 (/.f64 (pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) 3) (pow.f64 y 4))))))))))))","(fma.f64 68/2187 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (pow.f64 y 6)) (+.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 2) 112/2187) (/.f64 (pow.f64 y 6) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))))) (fma.f64 2/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (*.f64 y y)) (fma.f64 1/9 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 2) -7/81) (/.f64 (pow.f64 y 6) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))))) (fma.f64 -8/729 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (pow.f64 y 6)) (+.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (fma.f64 1/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (*.f64 y y)) (+.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 2) -7/81) (/.f64 (pow.f64 y 4) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))))) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (pow.f64 y 4)) -2/81)))))))))","(+.f64 (fma.f64 2/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (*.f64 y y)) (fma.f64 1/9 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) -7/81) (pow.f64 y 6)) (+.f64 (fma.f64 1/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (*.f64 y y)) (fma.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (pow.f64 y 4)) -2/81 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) -7/81) (pow.f64 y 4)))) (fma.f64 -8/729 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (pow.f64 y 6)) (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3))))) (fma.f64 68/2187 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (pow.f64 y 6)) (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) 112/2187) (pow.f64 y 6))))","(+.f64 (fma.f64 2/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (*.f64 y y)) (fma.f64 1/9 (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (pow.f64 y 6)) -7/81) (+.f64 (fma.f64 1/9 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (*.f64 y y)) (fma.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (pow.f64 y 4)) -2/81 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (/.f64 (pow.f64 y 4) -7/81)))) (fma.f64 -8/729 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (pow.f64 y 6)) (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3))))) (fma.f64 68/2187 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (pow.f64 y 6)) (/.f64 (pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) 3) (/.f64 (pow.f64 y 6) 112/2187))))","(+.f64 (fma.f64 2/9 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (pow.f64 (/.f64 -1 y) -2)) 1/18)) 6) (*.f64 y y)) (fma.f64 1/9 (*.f64 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (pow.f64 (/.f64 -1 y) -2)) 1/18)) 6) (pow.f64 y 6)) -7/81) (+.f64 (fma.f64 1/9 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (pow.f64 (/.f64 -1 y) -2)) 1/18)) 6) (*.f64 y y)) (fma.f64 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (pow.f64 (/.f64 -1 y) -2)) 1/18)) 6) (pow.f64 y 4)) -2/81 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (pow.f64 (/.f64 -1 y) -2)) 1/18)) 6) (/.f64 (pow.f64 y 4) -7/81)))) (fma.f64 -8/729 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (pow.f64 (/.f64 -1 y) -2)) 1/18)) 6) (pow.f64 y 6)) (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (pow.f64 (/.f64 -1 y) -2)) 1/18)) 6))))) (fma.f64 68/2187 (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (pow.f64 (/.f64 -1 y) -2)) 1/18)) 6) (pow.f64 y 6)) (/.f64 (pow.f64 (fabs.f64 (pow.f64 (*.f64 x (pow.f64 (/.f64 -1 y) -2)) 1/18)) 6) (/.f64 (pow.f64 y 6) 112/2187))))","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (pow.f64 y 2))) (log.f64 x)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 x) (log1p.f64 (*.f64 y y)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (pow.f64 y 2))) (log.f64 x)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 x) (log1p.f64 (*.f64 y y)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (pow.f64 y 2))) (log.f64 x)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 x) (log1p.f64 (*.f64 y y)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (pow.f64 y 2))) (log.f64 x)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 x) (log1p.f64 (*.f64 y y)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (pow.f64 y 2)))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 x) (log1p.f64 (*.f64 y y)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (pow.f64 y 2)))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 x) (log1p.f64 (*.f64 y y)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (pow.f64 y 2)))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 x) (log1p.f64 (*.f64 y y)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (pow.f64 y 2)))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (+.f64 (log.f64 x) (log1p.f64 (*.f64 y y)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (fma.f64 -1 (*.f64 y y) -1)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (*.f64 (fma.f64 y y 1) -1)) (log.f64 (/.f64 -1 x)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (-.f64 -1 (*.f64 y y))) (log.f64 (/.f64 -1 x)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (fma.f64 -1 (*.f64 y y) -1)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (*.f64 (fma.f64 y y 1) -1)) (log.f64 (/.f64 -1 x)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (-.f64 -1 (*.f64 y y))) (log.f64 (/.f64 -1 x)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (fma.f64 -1 (*.f64 y y) -1)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (*.f64 (fma.f64 y y 1) -1)) (log.f64 (/.f64 -1 x)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (-.f64 -1 (*.f64 y y))) (log.f64 (/.f64 -1 x)))) 3)","(pow.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1))))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (fma.f64 -1 (*.f64 y y) -1)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (*.f64 (fma.f64 y y 1) -1)) (log.f64 (/.f64 -1 x)))) 3)","(pow.f64 (pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (-.f64 -1 (*.f64 y y))) (log.f64 (/.f64 -1 x)))) 3)","x","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (pow.f64 y 2) x)","(*.f64 x (*.f64 y y))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(+.f64 (*.f64 (pow.f64 y 2) x) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 (+.f64 1 (pow.f64 y 2)) x)","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1) x))","(fma.f64 (*.f64 y y) x x)","(*.f64 x (fma.f64 y y 1))","(pow.f64 x 1/9)","(*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18))","(pow.f64 (exp.f64 1/9) (log.f64 x))","(+.f64 (pow.f64 x 1/9) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (pow.f64 y 2))))","(+.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (*.f64 1/9 (*.f64 (*.f64 y y) (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)))))","(fma.f64 (*.f64 1/9 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18))) (*.f64 y y) (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)))","(*.f64 (+.f64 (*.f64 1/9 (*.f64 y y)) 1) (pow.f64 (exp.f64 1/9) (log.f64 x)))","(+.f64 (pow.f64 x 1/9) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (pow.f64 y 2))) (*.f64 -4/81 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (pow.f64 y 4)))))","(+.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (fma.f64 1/9 (*.f64 (*.f64 y y) (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18))) (*.f64 -4/81 (*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18))))))","(fma.f64 (pow.f64 x 1/18) (pow.f64 x 1/18) (fma.f64 1/9 (*.f64 y (*.f64 y (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)))) (*.f64 (pow.f64 y 4) (*.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) -4/81))))","(+.f64 (pow.f64 (exp.f64 1/9) (log.f64 x)) (*.f64 (pow.f64 (exp.f64 1/9) (log.f64 x)) (+.f64 (*.f64 1/9 (*.f64 y y)) (*.f64 (pow.f64 y 4) -4/81))))","(+.f64 (*.f64 68/2187 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (pow.f64 y 6))) (+.f64 (pow.f64 x 1/9) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (pow.f64 y 2))) (*.f64 -4/81 (*.f64 (pow.f64 (*.f64 1 x) 1/9) (pow.f64 y 4))))))","(fma.f64 68/2187 (*.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (pow.f64 y 6)) (+.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (fma.f64 1/9 (*.f64 (*.f64 y y) (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18))) (*.f64 -4/81 (*.f64 (pow.f64 y 4) (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)))))))","(fma.f64 68/2187 (*.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) (pow.f64 y 6)) (fma.f64 (pow.f64 x 1/18) (pow.f64 x 1/18) (fma.f64 1/9 (*.f64 y (*.f64 y (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)))) (*.f64 (pow.f64 y 4) (*.f64 (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18)) -4/81)))))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 y y)) 1) (pow.f64 (exp.f64 1/9) (log.f64 x))) (*.f64 (pow.f64 (exp.f64 1/9) (log.f64 x)) (+.f64 (*.f64 (pow.f64 y 4) -4/81) (*.f64 68/2187 (pow.f64 y 6)))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x))))","(pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x)))","(pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x)))","(pow.f64 (exp.f64 1/9) (fma.f64 2 (log.f64 y) (log.f64 x)))","(+.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (*.f64 1/9 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (pow.f64 y 2))))","(+.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) (*.f64 y y))))","(fma.f64 1/9 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) (*.f64 y y)) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))))","(fma.f64 1/9 (/.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) (*.f64 y y)) (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))))","(fma.f64 1/9 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 2 (log.f64 y) (log.f64 x))) (*.f64 y y)) (pow.f64 (exp.f64 1/9) (fma.f64 2 (log.f64 y) (log.f64 x))))","(+.f64 (*.f64 -4/81 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (pow.f64 y 4))) (+.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (*.f64 1/9 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (pow.f64 y 2)))))","(fma.f64 -4/81 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) (pow.f64 y 4)) (+.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) (*.f64 y y)))))","(fma.f64 -4/81 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) (pow.f64 y 4)) (fma.f64 1/9 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) (*.f64 y y)) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x)))))","(+.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) (*.f64 (/.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) (*.f64 y y)) (+.f64 1/9 (/.f64 -4/81 (*.f64 y y)))))","(+.f64 (pow.f64 (exp.f64 1/9) (fma.f64 2 (log.f64 y) (log.f64 x))) (*.f64 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 2 (log.f64 y) (log.f64 x))) (*.f64 y y)) (+.f64 1/9 (/.f64 -4/81 (*.f64 y y)))))","(+.f64 (*.f64 -4/81 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (pow.f64 y 4))) (+.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (+.f64 (*.f64 68/2187 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (pow.f64 y 6))) (*.f64 1/9 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 y))) (log.f64 x)))) (pow.f64 y 2))))))","(fma.f64 -4/81 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) (pow.f64 y 4)) (+.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) (fma.f64 68/2187 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) (pow.f64 y 6)) (*.f64 1/9 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) (*.f64 y y))))))","(+.f64 (fma.f64 -4/81 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) (pow.f64 y 4)) (fma.f64 1/9 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) (*.f64 y y)) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))))) (*.f64 68/2187 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (neg.f64 (log.f64 y)) (log.f64 x))) (pow.f64 y 6))))","(+.f64 (+.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) (*.f64 (/.f64 (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x))) (*.f64 y y)) (+.f64 1/9 (/.f64 -4/81 (*.f64 y y))))) (*.f64 (/.f64 68/2187 (pow.f64 y 6)) (pow.f64 (exp.f64 1/9) (+.f64 (*.f64 2 (log.f64 y)) (log.f64 x)))))","(+.f64 (+.f64 (pow.f64 (exp.f64 1/9) (fma.f64 2 (log.f64 y) (log.f64 x))) (*.f64 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 2 (log.f64 y) (log.f64 x))) (*.f64 y y)) (+.f64 1/9 (/.f64 -4/81 (*.f64 y y))))) (*.f64 (/.f64 68/2187 (pow.f64 y 6)) (pow.f64 (exp.f64 1/9) (fma.f64 2 (log.f64 y) (log.f64 x)))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x))))","(pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x)))","(+.f64 (*.f64 1/9 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) (pow.f64 y 2))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))))","(fma.f64 1/9 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) (*.f64 y y)) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))))","(+.f64 (*.f64 -4/81 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) (pow.f64 y 4))) (+.f64 (*.f64 1/9 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) (pow.f64 y 2))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x))))))","(fma.f64 -4/81 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) (pow.f64 y 4)) (fma.f64 1/9 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) (*.f64 y y)) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x)))))","(+.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) (*.f64 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) (*.f64 y y)) (+.f64 1/9 (/.f64 -4/81 (*.f64 y y)))))","(+.f64 (*.f64 -4/81 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) (pow.f64 y 4))) (+.f64 (*.f64 1/9 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) (pow.f64 y 2))) (+.f64 (*.f64 68/2187 (/.f64 (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))) (pow.f64 y 6))) (exp.f64 (*.f64 1/9 (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 y))) (log.f64 x)))))))","(fma.f64 -4/81 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) (pow.f64 y 4)) (fma.f64 1/9 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) (*.f64 y y)) (fma.f64 68/2187 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) (pow.f64 y 6)) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))))))","(+.f64 (fma.f64 68/2187 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) (pow.f64 y 6)) (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x)))) (*.f64 (/.f64 (pow.f64 (exp.f64 1/9) (fma.f64 -2 (log.f64 (/.f64 -1 y)) (log.f64 x))) (*.f64 y y)) (+.f64 1/9 (/.f64 -4/81 (*.f64 y y)))))","(exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (pow.f64 y 2))) (log.f64 x))))","(pow.f64 (exp.f64 1/9) (+.f64 (log.f64 x) (log1p.f64 (*.f64 y y))))","(exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (pow.f64 y 2))) (log.f64 x))))","(pow.f64 (exp.f64 1/9) (+.f64 (log.f64 x) (log1p.f64 (*.f64 y y))))","(exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (pow.f64 y 2))) (log.f64 x))))","(pow.f64 (exp.f64 1/9) (+.f64 (log.f64 x) (log1p.f64 (*.f64 y y))))","(exp.f64 (*.f64 1/9 (+.f64 (log.f64 (+.f64 1 (pow.f64 y 2))) (log.f64 x))))","(pow.f64 (exp.f64 1/9) (+.f64 (log.f64 x) (log1p.f64 (*.f64 y y))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (pow.f64 y 2))))))","(pow.f64 (exp.f64 1/9) (+.f64 (log.f64 x) (log1p.f64 (*.f64 y y))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (pow.f64 y 2))))))","(pow.f64 (exp.f64 1/9) (+.f64 (log.f64 x) (log1p.f64 (*.f64 y y))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (pow.f64 y 2))))))","(pow.f64 (exp.f64 1/9) (+.f64 (log.f64 x) (log1p.f64 (*.f64 y y))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 1 (pow.f64 y 2))))))","(pow.f64 (exp.f64 1/9) (+.f64 (log.f64 x) (log1p.f64 (*.f64 y y))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1)))))","(pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (fma.f64 -1 (*.f64 y y) -1))))","(pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (*.f64 (fma.f64 y y 1) -1)) (log.f64 (/.f64 -1 x))))","(pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (-.f64 -1 (*.f64 y y))) (log.f64 (/.f64 -1 x))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1)))))","(pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (fma.f64 -1 (*.f64 y y) -1))))","(pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (*.f64 (fma.f64 y y 1) -1)) (log.f64 (/.f64 -1 x))))","(pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (-.f64 -1 (*.f64 y y))) (log.f64 (/.f64 -1 x))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1)))))","(pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (fma.f64 -1 (*.f64 y y) -1))))","(pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (*.f64 (fma.f64 y y 1) -1)) (log.f64 (/.f64 -1 x))))","(pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (-.f64 -1 (*.f64 y y))) (log.f64 (/.f64 -1 x))))","(exp.f64 (*.f64 1/9 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (-.f64 (*.f64 -1 (pow.f64 y 2)) 1)))))","(pow.f64 (exp.f64 1/9) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (fma.f64 -1 (*.f64 y y) -1))))","(pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (*.f64 (fma.f64 y y 1) -1)) (log.f64 (/.f64 -1 x))))","(pow.f64 (exp.f64 1/9) (-.f64 (log.f64 (-.f64 -1 (*.f64 y y))) (log.f64 (/.f64 -1 x))))"]],"stop":[["node limit",1]],"time":68.05810546875,"type":"simplify"},{"compiler":[[5588,3127]],"time":51.303955078125,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","done",0.7828066407376812],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2))))","fresh",1.2081698072045144],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","fresh",1.04335823414252],["(*.f64 x (fma.f64 y y 1))","done",4.3359375],["(*.f64 (*.f64 (*.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2)) (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3))","fresh",1.3554825604837986],["(fma.f64 y (*.f64 y x) x)","done",0.12109375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3))","done",0.9920719723575789],["(/.f64 (+.f64 (pow.f64 (*.f64 y (*.f64 y x)) 3) (pow.f64 x 3)) (+.f64 (*.f64 (*.f64 y (*.f64 y x)) (*.f64 y (*.f64 y x))) (-.f64 (*.f64 x x) (pow.f64 (*.f64 y x) 2))))","fresh",42.292838375455545]],"compiler":[[19,8],[44,16],[37,11],[8,5],[40,13],[8,4],[22,11],[35,16]],"count":[[156,8]],"kept":[{"done":[3,3],"fresh":[3,2],"new":[149,2],"picked":[1,1]}],"min-error":[0.0078125],"time":18.9189453125,"type":"prune"},{"accuracy":[0.12109375],"baseline":[0.12109375],"branch":[["x",0.12109375,1],["y",0.12109375,1],["(*.f64 x (+.f64 1 (*.f64 y y)))",0.12109375,1],["(+.f64 1 (*.f64 y y))",0.12109375,1],["(*.f64 y y)",0.12109375,1]],"compiler":[[3,2],[3,2],[9,6],[7,5],[5,3],[291,80]],"count":[[13,1]],"inputs":[["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2))))","(*.f64 (*.f64 (*.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2)) (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3))","(*.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","(*.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3) 2) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x))) 3))","(/.f64 (+.f64 (pow.f64 (*.f64 y (*.f64 y x)) 3) (pow.f64 x 3)) (+.f64 (*.f64 (*.f64 y (*.f64 y x)) (*.f64 y (*.f64 y x))) (-.f64 (*.f64 x x) (pow.f64 (*.f64 y x) 2))))","(*.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y x) x)) 2) (cbrt.f64 (fma.f64 y (*.f64 y x) x)))","(/.f64 (-.f64 (*.f64 (*.f64 y (*.f64 y x)) (*.f64 y (*.f64 y x))) (*.f64 x x)) (-.f64 (*.f64 y (*.f64 y x)) x))","(/.f64 (+.f64 (pow.f64 (*.f64 y (*.f64 y x)) 3) (pow.f64 x 3)) (+.f64 (*.f64 (*.f64 y (*.f64 y x)) (*.f64 y (*.f64 y x))) (-.f64 (*.f64 x x) (pow.f64 (*.f64 y x) 2))))","(pow.f64 (cbrt.f64 (*.f64 x (fma.f64 y y 1))) 3)","(fma.f64 y (*.f64 y x) x)","(*.f64 x (fma.f64 y y 1))","(*.f64 x (+.f64 1 (*.f64 y y)))"]],"link":["."],"name":["Numeric.Integration.TanhSinh:everywhere from integration-0.2.1"],"oracle":[42.94435414020446],"outputs":[["(fma.f64 y (*.f64 y x) x)"]],"time":26.030029296875,"times":[["x",5.41796875],["y",5.723876953125],["(*.f64 x (+.f64 1 (*.f64 y y)))",5.486083984375],["(+.f64 1 (*.f64 y y))",2.348876953125],["(*.f64 y y)",3.7001953125]],"type":"regimes"},{"compiler":[[8,4]],"egraph":[[1,6,8,2.3874999999999998e-5],[0,5,8,1.45e-5]],"inputs":[["(fma.f64 y (*.f64 y x) x)"]],"method":["egg-herbie"],"outputs":[["(fma.f64 y (*.f64 y x) x)"]],"stop":[["fuel",1],["saturated",1]],"time":8.2939453125,"type":"simplify"},{"time":0.01708984375,"type":"soundness"},{"compiler":[[8,4]],"remove-preprocessing":[[]],"time":7.217041015625,"type":"end"}]