[{"compiler":[[107,71]],"method":["search"],"sampling":[[12,0.0013440847396850586,0.00024437904357910156,0.9984115362167358],[11,0.0012218952178955078,0.0004887580871582031,0.9982893466949463],[10,0.0009775161743164063,0.0009775161743164063,0.9980449676513672],[9,0.0009775161743164063,0.0019550323486328125,0.9970674514770508],[8,0.0,0.003910064697265625,0.9960899353027344],[7,0.0,0.00782012939453125,0.9921798706054688],[6,0.0,0.0156402587890625,0.9843597412109375],[5,0.0,0.031280517578125,0.968719482421875],[4,0.0,0.06256103515625,0.93743896484375],[3,0.0,0.1251220703125,0.8748779296875],[2,0.0,0.250244140625,0.749755859375],[1,0.0,0.250244140625,0.749755859375],[0,0.0,0.250244140625,0.749755859375]],"time":6.703125,"type":"analyze"},{"outcomes":[["body",256,"invalid",235.509765625,1281],["body",256,"valid",1490.70703125,8256]],"time":1735.4208984375,"type":"sample"},{"compiler":[[104,69]],"egraph":[[0,1,1,2.5e-6],[6,7330,47,0.050405916999999995],[5,6326,47,0.038182917],[4,5413,49,0.024220250999999998],[3,1507,52,0.01343921],[2,321,58,0.003425001],[1,91,82,0.0007237089999999999],[0,35,152,0.000160417]],"inputs":[["0"],["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (exp.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)))) (+.f64 (+.f64 (+.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 2) (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))) (*.f64 (/.f64 3 4) (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))) (*.f64 (/.f64 15 8) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (exp.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)))) (+.f64 (+.f64 (+.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 2) (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))) (*.f64 (/.f64 3 4) (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))) (*.f64 (/.f64 15 8) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))))","(*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (*.f64 (exp.f64 (*.f64 x x)) (+.f64 (+.f64 (+.f64 (/.f64 1 (fabs.f64 x)) (*.f64 1/2 (*.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x)))))) (*.f64 3/4 (*.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x)))))))) (*.f64 15/8 (*.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))))))))))))","(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (sqrt.f64 (PI.f64))) (fma.f64 15/8 (*.f64 (pow.f64 (/.f64 1 (fabs.f64 x)) 3) (/.f64 (pow.f64 (/.f64 1 (fabs.f64 x)) 3) (fabs.f64 x))) (fma.f64 3/4 (/.f64 (/.f64 (pow.f64 (/.f64 1 (fabs.f64 x)) 3) (fabs.f64 x)) (fabs.f64 x)) (fma.f64 1/2 (pow.f64 (/.f64 1 (fabs.f64 x)) 3) (/.f64 1 (fabs.f64 x))))))","(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (sqrt.f64 (PI.f64))) (fma.f64 (+.f64 1 (/.f64 1/2 (*.f64 x x))) (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 (pow.f64 (/.f64 1 (fabs.f64 x)) 4) (fabs.f64 x)) (+.f64 3/4 (/.f64 15/8 (*.f64 x x))))))","(*.f64 (pow.f64 (exp.f64 x) x) (/.f64 (+.f64 (/.f64 (+.f64 1 (/.f64 1/2 (*.f64 x x))) (fabs.f64 x)) (*.f64 (pow.f64 (/.f64 1 (fabs.f64 x)) 5) (+.f64 3/4 (/.f64 15/8 (*.f64 x x))))) (sqrt.f64 (PI.f64))))","(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 (fabs.f64 x) 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":80.39697265625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[6,7330,47,0.050122749],[5,6326,47,0.037674124],[4,5413,49,0.024594458],[3,1507,52,0.013020208],[2,321,58,0.0031035],[1,91,82,0.000725875],[0,35,152,0.000160792]],"inputs":[["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (exp.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)))) (+.f64 (+.f64 (+.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 2) (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))) (*.f64 (/.f64 3 4) (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))) (*.f64 (/.f64 15 8) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (exp.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)))) (+.f64 (+.f64 (+.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 2) (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))) (*.f64 (/.f64 3 4) (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))) (*.f64 (/.f64 15 8) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))))","(*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (*.f64 (exp.f64 (*.f64 x x)) (+.f64 (+.f64 (+.f64 (/.f64 1 (fabs.f64 x)) (*.f64 1/2 (*.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x)))))) (*.f64 3/4 (*.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x)))))))) (*.f64 15/8 (*.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))))))))))))","(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (sqrt.f64 (PI.f64))) (fma.f64 15/8 (*.f64 (pow.f64 (/.f64 1 (fabs.f64 x)) 3) (/.f64 (pow.f64 (/.f64 1 (fabs.f64 x)) 3) (fabs.f64 x))) (fma.f64 3/4 (/.f64 (/.f64 (pow.f64 (/.f64 1 (fabs.f64 x)) 3) (fabs.f64 x)) (fabs.f64 x)) (fma.f64 1/2 (pow.f64 (/.f64 1 (fabs.f64 x)) 3) (/.f64 1 (fabs.f64 x))))))","(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (sqrt.f64 (PI.f64))) (fma.f64 (+.f64 1 (/.f64 1/2 (*.f64 x x))) (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 (pow.f64 (/.f64 1 (fabs.f64 x)) 4) (fabs.f64 x)) (+.f64 3/4 (/.f64 15/8 (*.f64 x x))))))","(*.f64 (pow.f64 (exp.f64 x) x) (/.f64 (+.f64 (/.f64 (+.f64 1 (/.f64 1/2 (*.f64 x x))) (fabs.f64 x)) (*.f64 (pow.f64 (/.f64 1 (fabs.f64 x)) 5) (+.f64 3/4 (/.f64 15/8 (*.f64 x x))))) (sqrt.f64 (PI.f64))))","(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 (fabs.f64 x) 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))"]],"stop":[["node limit",1]],"time":74.801025390625,"type":"simplify"},{"compiler":[[134,87]],"time":1.498046875,"type":"eval"},{"alts":[["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (exp.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)))) (+.f64 (+.f64 (+.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 2) (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))) (*.f64 (/.f64 3 4) (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))) (*.f64 (/.f64 15 8) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))))","fresh",2.7453276732938745],["(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","next",1.2277806499340487]],"compiler":[[104,69],[31,22],[104,69],[31,22]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[1.1553167953036454],"time":3.954833984375,"type":"prune"},{"compiler":[[133,66]],"locations":[["(/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x))",0.38900375976844204,true],["(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))",0.3984375,true],["(sqrt.f64 (PI.f64))",1.0,true],["(pow.f64 (exp.f64 x) x)",1.0051940709283078,true]],"time":33.51416015625,"type":"localize"},{"count":[[4,36]],"series":[["(/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x))","x","-inf",0.240966796875],["(/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x))","x","inf",0.391845703125],["(/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x))","x","0",0.68310546875],["(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","x","-inf",1.02099609375],["(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","x","inf",1.7900390625],["(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","x","0",1.407958984375],["(pow.f64 (exp.f64 x) x)","x","-inf",0.260009765625],["(pow.f64 (exp.f64 x) x)","x","inf",0.263916015625],["(pow.f64 (exp.f64 x) x)","x","0",0.78515625]],"time":7.1279296875,"type":"series"},{"count":[[4,133]],"egraph":[[2,7900,64,0.057143499],[1,531,64,0.016325374],[0,23,73,0.000985208]],"inputs":[["(pow.f64 (exp.f64 x) x)","(sqrt.f64 (PI.f64))","(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (exp.f64 x) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (exp.f64 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) (cbrt.f64 (pow.f64 (exp.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (sqrt.f64 (pow.f64 (exp.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 x) (pow.f64 (exp.f64 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 2) x) (pow.f64 (cbrt.f64 (exp.f64 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (exp.f64 x)) x) (pow.f64 (sqrt.f64 (exp.f64 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (exp.f64 x) (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (exp.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (exp.f64 x) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (exp.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (exp.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 x x))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (PI.f64))) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 1/4) (pow.f64 (PI.f64) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2)) (sqrt.f64 (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) 1/2) (pow.f64 (cbrt.f64 (PI.f64)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (PI.f64) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (PI.f64) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (PI.f64))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (PI.f64) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (PI.f64) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (PI.f64)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (PI.f64))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 1 (/.f64 15/8 (pow.f64 x 6))) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (*.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (+.f64 1 (/.f64 15/8 (pow.f64 x 6)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (exp.f64 x) x) (/.f64 (*.f64 x (sqrt.f64 (PI.f64))) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 x (sqrt.f64 (PI.f64))) (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (/.f64 x (/.f64 (pow.f64 (exp.f64 x) x) (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) (*.f64 (/.f64 x (/.f64 (pow.f64 (exp.f64 x) x) (sqrt.f64 (PI.f64)))) (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (*.f64 (/.f64 x (/.f64 (pow.f64 (exp.f64 x) x) (sqrt.f64 (PI.f64)))) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))) (*.f64 x (neg.f64 (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (exp.f64 x) x) (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3))) (*.f64 (*.f64 x (sqrt.f64 (PI.f64))) (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (exp.f64 x) x)) (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3))) (*.f64 (*.f64 x (neg.f64 (sqrt.f64 (PI.f64)))) (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3))) (*.f64 (sqrt.f64 (PI.f64)) (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (exp.f64 x) x) (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2))) (*.f64 (*.f64 x (sqrt.f64 (PI.f64))) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (exp.f64 x) x)) (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2))) (*.f64 (*.f64 x (neg.f64 (sqrt.f64 (PI.f64)))) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2))) (*.f64 (sqrt.f64 (PI.f64)) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) (pow.f64 (exp.f64 x) x)) (*.f64 (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 x (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (pow.f64 (exp.f64 x) x)) (*.f64 (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 x (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) 1) (*.f64 (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (/.f64 x (/.f64 (pow.f64 (exp.f64 x) x) (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) 1) (*.f64 (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (/.f64 x (/.f64 (pow.f64 (exp.f64 x) x) (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) (neg.f64 (pow.f64 (exp.f64 x) x))) (*.f64 (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 x (neg.f64 (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (neg.f64 (pow.f64 (exp.f64 x) x))) (*.f64 (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 x (neg.f64 (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 3) (pow.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 3)) (+.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 2) (-.f64 (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 2) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (-.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (sqrt.f64 (PI.f64))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) x) (sqrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) 1) (*.f64 x (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (cbrt.f64 (*.f64 (PI.f64) (*.f64 x x)))) (cbrt.f64 (*.f64 x (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (sqrt.f64 (*.f64 x (sqrt.f64 (PI.f64))))) (sqrt.f64 (*.f64 x (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (exp.f64 x) x)) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 x (neg.f64 (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (sqrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3))) (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2))) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (neg.f64 (pow.f64 (exp.f64 x) x))) (*.f64 x (neg.f64 (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (sqrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 3) (pow.f64 (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 3) (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (-.f64 (*.f64 x x) (log.f64 (*.f64 x (sqrt.f64 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (+.f64 (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (-.f64 (*.f64 x x) (log.f64 (*.f64 x (sqrt.f64 (PI.f64)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (exp.f64 x) x) (/.f64 1 (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 1 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 2)) (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) (pow.f64 (cbrt.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (cbrt.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2)) 2) (*.f64 (cbrt.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2)) (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2)) x) (/.f64 (sqrt.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2)) (*.f64 (sqrt.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2)) (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2)) (/.f64 1 (*.f64 x (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -2) (fma.f64 3/4 (pow.f64 x -2) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) x) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2)) 2) 1) (/.f64 (cbrt.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2)) 1) (/.f64 (sqrt.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2)) 2) x) (/.f64 (cbrt.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 x 4))) (/.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 (cbrt.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2)) 2) (cbrt.f64 (pow.f64 x 4))) (cbrt.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2)) (cbrt.f64 (pow.f64 x 4))) (/.f64 (sqrt.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2)) (pow.f64 (cbrt.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2)) x) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) 3) (pow.f64 x 6)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 x x) (fma.f64 3/4 (pow.f64 x -2) 1/2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (*.f64 x (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) 2) (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2)) (pow.f64 x -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) 3) (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 1))))))"]],"rules":[["egg-rr",33],["egg-rr",61],["egg-rr",23],["egg-rr",16]],"stop":[["node limit",1]],"time":97.194091796875,"type":"rewrite"},{"count":[[169,163]],"egraph":[[9,7968,635,0.091873083],[8,7134,635,0.077659833],[7,6547,651,0.058961374],[6,5701,651,0.042565041],[5,5344,651,0.031311999],[4,4662,651,0.022481541],[3,2772,661,0.014016416],[2,552,736,0.00514225],[1,181,888,0.001368125],[0,71,1001,0.0003825]],"inputs":[["1","(+.f64 1 (pow.f64 x 2))","(+.f64 1 (+.f64 (pow.f64 x 2) (*.f64 1/2 (pow.f64 x 4))))","(+.f64 1 (+.f64 (*.f64 1/6 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/2 (pow.f64 x 4)))))","(exp.f64 (pow.f64 x 2))","(exp.f64 (pow.f64 x 2))","(exp.f64 (pow.f64 x 2))","(exp.f64 (pow.f64 x 2))","(exp.f64 (pow.f64 x 2))","(exp.f64 (pow.f64 x 2))","(exp.f64 (pow.f64 x 2))","(exp.f64 (pow.f64 x 2))","(*.f64 15/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64)))))","(+.f64 (*.f64 21/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 21/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 15/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 35/16 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(+.f64 (*.f64 21/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 15/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 35/16 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 35/16 (*.f64 (/.f64 1 (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))))))","(/.f64 3/4 (pow.f64 x 4))","(+.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(/.f64 1/2 (pow.f64 x 2))","(+.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(/.f64 1/2 (pow.f64 x 2))","(+.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (pow.f64 x 2))","(+.f64 1 (*.f64 x x))","(fma.f64 x x 1)","(+.f64 1 (+.f64 (pow.f64 x 2) (*.f64 1/2 (pow.f64 x 4))))","(+.f64 1 (+.f64 (*.f64 x x) (*.f64 1/2 (pow.f64 x 4))))","(+.f64 (fma.f64 x x 1) (*.f64 1/2 (pow.f64 x 4)))","(fma.f64 x x (fma.f64 1/2 (pow.f64 x 4) 1))","(+.f64 1 (+.f64 (*.f64 1/6 (pow.f64 x 6)) (+.f64 (pow.f64 x 2) (*.f64 1/2 (pow.f64 x 4)))))","(+.f64 1 (fma.f64 1/6 (pow.f64 x 6) (+.f64 (*.f64 x x) (*.f64 1/2 (pow.f64 x 4)))))","(+.f64 1 (fma.f64 1/6 (pow.f64 x 6) (fma.f64 x x (*.f64 1/2 (pow.f64 x 4)))))","(fma.f64 1/6 (pow.f64 x 6) (fma.f64 x x (fma.f64 1/2 (pow.f64 x 4) 1)))","(exp.f64 (pow.f64 x 2))","(exp.f64 (*.f64 x x))","(pow.f64 (exp.f64 x) x)","(exp.f64 (pow.f64 x 2))","(exp.f64 (*.f64 x x))","(pow.f64 (exp.f64 x) x)","(exp.f64 (pow.f64 x 2))","(exp.f64 (*.f64 x x))","(pow.f64 (exp.f64 x) x)","(exp.f64 (pow.f64 x 2))","(exp.f64 (*.f64 x x))","(pow.f64 (exp.f64 x) x)","(exp.f64 (pow.f64 x 2))","(exp.f64 (*.f64 x x))","(pow.f64 (exp.f64 x) x)","(exp.f64 (pow.f64 x 2))","(exp.f64 (*.f64 x x))","(pow.f64 (exp.f64 x) x)","(exp.f64 (pow.f64 x 2))","(exp.f64 (*.f64 x x))","(pow.f64 (exp.f64 x) x)","(exp.f64 (pow.f64 x 2))","(exp.f64 (*.f64 x x))","(pow.f64 (exp.f64 x) x)","(*.f64 15/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64)))))","(*.f64 (*.f64 15/8 (/.f64 1 (*.f64 (pow.f64 x 6) (fabs.f64 x)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 15/8 (*.f64 (pow.f64 x 6) (fabs.f64 x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 15/8 (*.f64 x (pow.f64 x 6))))","(*.f64 15/8 (/.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 15/8 (pow.f64 x 7)))","(+.f64 (*.f64 21/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 21/8 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 1 (*.f64 (pow.f64 x 4) (fabs.f64 x)))) (*.f64 (*.f64 15/8 (/.f64 1 (*.f64 (pow.f64 x 6) (fabs.f64 x)))) (sqrt.f64 (/.f64 1 (PI.f64)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 15/8 (*.f64 (pow.f64 x 6) (fabs.f64 x))) (/.f64 21/8 (*.f64 (pow.f64 x 4) (fabs.f64 x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 21/8 (*.f64 x (pow.f64 x 4))) (/.f64 15/8 (*.f64 x (pow.f64 x 6)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 21/8 (pow.f64 x 5)) (/.f64 15/8 (pow.f64 x 7))))","(+.f64 (*.f64 21/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 15/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 35/16 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(fma.f64 21/8 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 1 (*.f64 (pow.f64 x 4) (fabs.f64 x)))) (fma.f64 15/8 (*.f64 (/.f64 1 (*.f64 (pow.f64 x 6) (fabs.f64 x))) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 (*.f64 35/16 (/.f64 1 (*.f64 (*.f64 x x) (fabs.f64 x)))) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 21/8 (/.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (pow.f64 x 4) (fabs.f64 x))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 35/16 (*.f64 (*.f64 x x) (fabs.f64 x))) (/.f64 15/8 (*.f64 (pow.f64 x 6) (fabs.f64 x))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 35/16 (pow.f64 x 3)) (+.f64 (/.f64 21/8 (*.f64 x (pow.f64 x 4))) (/.f64 15/8 (*.f64 x (pow.f64 x 6))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 21/8 (pow.f64 x 5)) (+.f64 (/.f64 15/8 (pow.f64 x 7)) (/.f64 35/16 (pow.f64 x 3)))))","(+.f64 (*.f64 21/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 15/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 35/16 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 35/16 (*.f64 (/.f64 1 (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))))))","(fma.f64 21/8 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 1 (*.f64 (pow.f64 x 4) (fabs.f64 x)))) (fma.f64 15/8 (*.f64 (/.f64 1 (*.f64 (pow.f64 x 6) (fabs.f64 x))) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 35/16 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 1 (*.f64 (*.f64 x x) (fabs.f64 x)))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 1 (fabs.f64 x)))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 15/8 (*.f64 (pow.f64 x 6) (fabs.f64 x))) (/.f64 21/8 (*.f64 (pow.f64 x 4) (fabs.f64 x))))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 35/16 (*.f64 (*.f64 x x) (fabs.f64 x))) (/.f64 35/16 (fabs.f64 x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (+.f64 (/.f64 21/8 (*.f64 x (pow.f64 x 4))) (/.f64 15/8 (*.f64 x (pow.f64 x 6)))) (+.f64 (/.f64 35/16 x) (/.f64 35/16 (pow.f64 x 3)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (+.f64 (/.f64 21/8 (pow.f64 x 5)) (/.f64 35/16 (pow.f64 x 3))) (+.f64 (/.f64 35/16 x) (/.f64 15/8 (pow.f64 x 7)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 21/8 (pow.f64 x 5)) (+.f64 (/.f64 35/16 (pow.f64 x 3)) (+.f64 (/.f64 35/16 x) (/.f64 15/8 (pow.f64 x 7))))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x))","(*.f64 (pow.f64 (exp.f64 x) x) (/.f64 (sqrt.f64 (/.f64 1 (PI.f64))) x))","(+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (*.f64 1/2 (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (*.f64 x x) (fabs.f64 x)))) (sqrt.f64 (/.f64 1 (PI.f64)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)) (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (*.f64 x x) (fabs.f64 x))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (/.f64 (pow.f64 (exp.f64 x) x) x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (+.f64 (/.f64 1/2 (*.f64 x x)) 1) (/.f64 (pow.f64 (exp.f64 x) x) x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 1 (/.f64 1/2 (*.f64 x x)))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(fma.f64 3/4 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (pow.f64 x 4) (fabs.f64 x)))) (fma.f64 (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (*.f64 1/2 (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (*.f64 x x) (fabs.f64 x)))) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 3/4 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (pow.f64 x 4) (fabs.f64 x)))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)) (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (*.f64 x x) (fabs.f64 x)))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (fma.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (pow.f64 x 4))) (/.f64 (pow.f64 (exp.f64 x) x) x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (+.f64 (/.f64 3/4 (*.f64 x x)) 1/2))))","(*.f64 (*.f64 (pow.f64 (exp.f64 x) x) (/.f64 (sqrt.f64 (/.f64 1 (PI.f64))) x)) (+.f64 (+.f64 1 (/.f64 1/2 (*.f64 x x))) (/.f64 3/4 (pow.f64 x 4))))","(*.f64 (*.f64 (pow.f64 (exp.f64 x) x) (/.f64 (sqrt.f64 (/.f64 1 (PI.f64))) x)) (+.f64 1 (+.f64 (/.f64 3/4 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 1 (+.f64 (/.f64 3/4 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x))))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))))))","(fma.f64 3/4 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (pow.f64 x 4) (fabs.f64 x)))) (fma.f64 (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (*.f64 x x) (fabs.f64 x)))) (*.f64 (*.f64 15/8 (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (pow.f64 x 6) (fabs.f64 x)))) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (*.f64 x x) (fabs.f64 x)))) (*.f64 15/8 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (pow.f64 x 6) (fabs.f64 x)))))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (pow.f64 x 4) (fabs.f64 x)))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (fma.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (pow.f64 x 4))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (*.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (pow.f64 (exp.f64 x) x) x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (+.f64 1/2 (/.f64 15/8 (pow.f64 x 4)))) (*.f64 (+.f64 (/.f64 3/4 (pow.f64 x 4)) 1) (/.f64 (pow.f64 (exp.f64 x) x) x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 5))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 1/2 (*.f64 x x)) (+.f64 1 (/.f64 15/8 (pow.f64 x 6)))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (+.f64 (/.f64 3/4 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x)))))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x))","(*.f64 (pow.f64 (exp.f64 x) x) (/.f64 (sqrt.f64 (/.f64 1 (PI.f64))) x))","(+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (*.f64 1/2 (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (*.f64 x x) (fabs.f64 x)))) (sqrt.f64 (/.f64 1 (PI.f64)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)) (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (*.f64 x x) (fabs.f64 x))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (/.f64 (pow.f64 (exp.f64 x) x) x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (+.f64 (/.f64 1/2 (*.f64 x x)) 1) (/.f64 (pow.f64 (exp.f64 x) x) x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 1 (/.f64 1/2 (*.f64 x x)))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(fma.f64 3/4 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (pow.f64 x 4) (fabs.f64 x)))) (fma.f64 (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (*.f64 1/2 (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (*.f64 x x) (fabs.f64 x)))) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 3/4 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (pow.f64 x 4) (fabs.f64 x)))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)) (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (*.f64 x x) (fabs.f64 x)))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (fma.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (pow.f64 x 4))) (/.f64 (pow.f64 (exp.f64 x) x) x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (+.f64 (/.f64 3/4 (*.f64 x x)) 1/2))))","(*.f64 (*.f64 (pow.f64 (exp.f64 x) x) (/.f64 (sqrt.f64 (/.f64 1 (PI.f64))) x)) (+.f64 (+.f64 1 (/.f64 1/2 (*.f64 x x))) (/.f64 3/4 (pow.f64 x 4))))","(*.f64 (*.f64 (pow.f64 (exp.f64 x) x) (/.f64 (sqrt.f64 (/.f64 1 (PI.f64))) x)) (+.f64 1 (+.f64 (/.f64 3/4 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 1 (+.f64 (/.f64 3/4 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x))))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))))))","(fma.f64 3/4 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (pow.f64 x 4) (fabs.f64 x)))) (fma.f64 (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (*.f64 x x) (fabs.f64 x)))) (*.f64 (*.f64 15/8 (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (pow.f64 x 6) (fabs.f64 x)))) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (*.f64 x x) (fabs.f64 x)))) (*.f64 15/8 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (pow.f64 x 6) (fabs.f64 x)))))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (pow.f64 x 4) (fabs.f64 x)))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (fma.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (pow.f64 x 4))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (*.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (pow.f64 (exp.f64 x) x) x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (+.f64 1/2 (/.f64 15/8 (pow.f64 x 4)))) (*.f64 (+.f64 (/.f64 3/4 (pow.f64 x 4)) 1) (/.f64 (pow.f64 (exp.f64 x) x) x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 5))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 1/2 (*.f64 x x)) (+.f64 1 (/.f64 15/8 (pow.f64 x 6)))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (+.f64 (/.f64 3/4 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x)))))))","(/.f64 3/4 (pow.f64 x 4))","(+.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 3/4 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x)))","(+.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 3/4 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x)))","(+.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 3/4 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x)))","(/.f64 1/2 (pow.f64 x 2))","(/.f64 1/2 (*.f64 x x))","(+.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 3/4 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x)))","(+.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 3/4 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x)))","(+.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 3/4 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x)))","(/.f64 1/2 (pow.f64 x 2))","(/.f64 1/2 (*.f64 x x))","(+.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 3/4 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x)))","(+.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 3/4 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x)))","(+.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 4))) (*.f64 1/2 (/.f64 1 (pow.f64 x 2))))","(+.f64 (/.f64 3/4 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x)))"]],"stop":[["node limit",1]],"time":121.708984375,"type":"simplify"},{"compiler":[[5958,3551]],"time":77.948974609375,"type":"eval"},{"alts":[["(pow.f64 (pow.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64)))) 3) 1/3)","fresh",8.820494145282577],["(/.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 3) (pow.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 3)) (+.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 2) (-.f64 (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))","fresh",7.53737321350084],["(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (expm1.f64 (log1p.f64 (sqrt.f64 (PI.f64)))))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.488380345480935],["(/.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (sqrt.f64 (PI.f64))))","fresh",1.1962791145984029],["(/.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (*.f64 (/.f64 x (/.f64 (pow.f64 (exp.f64 x) x) (sqrt.f64 (PI.f64)))) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))","fresh",1.235358283335697],["(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","next",1.1403527670394251],["(*.f64 (/.f64 (-.f64 (exp.f64 (log1p.f64 (pow.f64 (exp.f64 x) x))) 1) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",2.597686635802749],["(/.f64 (*.f64 (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (sqrt.f64 (PI.f64)))","fresh",1.196359098697603],["(/.f64 (*.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (sqrt.f64 (PI.f64))))","fresh",1.2131026008434962],["(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (+.f64 (/.f64 3/4 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x)))))))","fresh",1.1688151519174796],["(/.f64 (*.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) (pow.f64 (exp.f64 x) x)) (*.f64 (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 x (sqrt.f64 (PI.f64)))))","fresh",1.2459019703296423],["(+.f64 (*.f64 (+.f64 1 (/.f64 15/8 (pow.f64 x 6))) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (*.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))))","fresh",1.2068314118866643],["(*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 2) x) (pow.f64 (cbrt.f64 (exp.f64 x)) x)) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",2.0132014780861467],["(/.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (cbrt.f64 (*.f64 (PI.f64) (*.f64 x x)))) (cbrt.f64 (*.f64 x (sqrt.f64 (PI.f64)))))","fresh",2.9127806866334147],["(/.f64 1 (/.f64 (*.f64 x (sqrt.f64 (PI.f64))) (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))","fresh",2.9361986091089265],["(exp.f64 (+.f64 (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (-.f64 (*.f64 x x) (log.f64 (*.f64 x (sqrt.f64 (PI.f64)))))))","fresh",3.035679514452075],["(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))))))","fresh",2.5451176015057624],["(*.f64 (/.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 x)) x) (pow.f64 (sqrt.f64 (exp.f64 x)) x)) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.7909454219629624],["(*.f64 (/.f64 (*.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (sqrt.f64 (pow.f64 (exp.f64 x) x))) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.3101097061980633],["(*.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) (cbrt.f64 (pow.f64 (exp.f64 x) x))) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.414696883533677]],"compiler":[[31,25],[140,71],[33,24],[48,39],[48,39],[33,24],[35,26],[28,22],[66,54],[32,25],[66,54],[39,24],[40,27],[35,25],[29,23],[28,22],[70,53],[38,24],[38,24],[40,26],[31,25],[140,71],[33,24],[48,39],[48,39],[33,24],[35,26],[28,22],[66,54],[32,25],[66,54],[39,24],[40,27],[35,25],[29,23],[28,22],[70,53],[38,24],[38,24],[40,26]],"count":[[165,20]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[163,20],"picked":[1,0]}],"min-error":[0.44736908102224054],"time":49.324951171875,"type":"prune"},{"compiler":[[145,83]],"locations":[["(/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2))))",0.3522262695368841,true],["(/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x))",0.38900375976844204,false],["(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))",0.3984375,true],["(pow.f64 (exp.f64 x) x)",1.0051940709283078,false]],"time":45.847900390625,"type":"localize"},{"count":[[2,24]],"series":[["(/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2))))","x","-inf",0.557861328125],["(/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2))))","x","inf",0.7880859375],["(/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2))))","x","0",0.60205078125],["(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","x","-inf",0.329833984375],["(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","x","inf",0.340087890625],["(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","x","0",0.40185546875]],"time":3.2490234375,"type":"series"},{"count":[[2,106]],"egraph":[[1,575,55,0.016081749],[0,25,70,0.000931708]],"inputs":[["(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 1 (*.f64 15/8 (pow.f64 x -6))) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (*.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (+.f64 1 (*.f64 15/8 (pow.f64 x -6)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (exp.f64 x) x) (/.f64 (*.f64 x (sqrt.f64 (PI.f64))) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 x (sqrt.f64 (PI.f64))) (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (/.f64 (sqrt.f64 (PI.f64)) (/.f64 (pow.f64 (exp.f64 x) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) (*.f64 (/.f64 (sqrt.f64 (PI.f64)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (*.f64 (/.f64 (sqrt.f64 (PI.f64)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))) (*.f64 (sqrt.f64 (PI.f64)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (exp.f64 x) x) (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3))) (*.f64 (*.f64 x (sqrt.f64 (PI.f64))) (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (exp.f64 x) x)) (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3))) (*.f64 (*.f64 (sqrt.f64 (PI.f64)) (neg.f64 x)) (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3))) (*.f64 (sqrt.f64 (PI.f64)) (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (exp.f64 x) x) (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2))) (*.f64 (*.f64 x (sqrt.f64 (PI.f64))) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (exp.f64 x) x)) (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2))) (*.f64 (*.f64 (sqrt.f64 (PI.f64)) (neg.f64 x)) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2))) (*.f64 (sqrt.f64 (PI.f64)) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) (pow.f64 (exp.f64 x) x)) (*.f64 (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 x (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (pow.f64 (exp.f64 x) x)) (*.f64 (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 x (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) 1) (*.f64 (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (/.f64 (sqrt.f64 (PI.f64)) (/.f64 (pow.f64 (exp.f64 x) x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) 1) (*.f64 (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (/.f64 (sqrt.f64 (PI.f64)) (/.f64 (pow.f64 (exp.f64 x) x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) (neg.f64 (pow.f64 (exp.f64 x) x))) (*.f64 (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 (sqrt.f64 (PI.f64)) (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (neg.f64 (pow.f64 (exp.f64 x) x))) (*.f64 (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 (sqrt.f64 (PI.f64)) (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 3) (pow.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 3)) (+.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 2) (-.f64 (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 2) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (-.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 1) (/.f64 (sqrt.f64 (PI.f64)) (/.f64 (pow.f64 (exp.f64 x) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) x) (sqrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (sqrt.f64 (PI.f64))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) 1) (*.f64 x (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (cbrt.f64 (*.f64 (PI.f64) (*.f64 x x)))) (cbrt.f64 (*.f64 x (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (sqrt.f64 (*.f64 x (sqrt.f64 (PI.f64))))) (sqrt.f64 (*.f64 x (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (exp.f64 x) x)) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 (sqrt.f64 (PI.f64)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (sqrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3))) (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2))) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (pow.f64 (exp.f64 x) x)) (*.f64 x (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (neg.f64 (pow.f64 (exp.f64 x) x))) (*.f64 (sqrt.f64 (PI.f64)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (sqrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 3) (pow.f64 (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 3) (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (-.f64 (*.f64 x x) (log.f64 (*.f64 x (sqrt.f64 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (+.f64 (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (-.f64 (*.f64 x x) (log.f64 (*.f64 x (sqrt.f64 (PI.f64)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (exp.f64 x) x) (/.f64 1 (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 1 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) 2) (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 x) x) (/.f64 1 (*.f64 x (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 x) x) (*.f64 (/.f64 1 (*.f64 x (sqrt.f64 (PI.f64)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) 2) (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) 2) (*.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (/.f64 1 (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (*.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (exp.f64 x) x)) (/.f64 1 (*.f64 (sqrt.f64 (PI.f64)) (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 x (sqrt.f64 (PI.f64)))) (pow.f64 (exp.f64 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (*.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (/.f64 1 (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (/.f64 1 (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) 1) (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (*.f64 x (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) 1) (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (*.f64 x (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) x) (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 (pow.f64 (exp.f64 x) x) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) x) (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (sqrt.f64 (PI.f64))) (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) (sqrt.f64 (PI.f64))) (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (*.f64 (PI.f64) (*.f64 x x)))) (/.f64 (pow.f64 (exp.f64 x) x) (cbrt.f64 (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) (cbrt.f64 (*.f64 (PI.f64) (*.f64 x x)))) (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (cbrt.f64 (*.f64 (PI.f64) (*.f64 x x)))) (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (cbrt.f64 (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (*.f64 x (sqrt.f64 (PI.f64))))) (/.f64 (pow.f64 (exp.f64 x) x) (sqrt.f64 (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) (sqrt.f64 (*.f64 x (sqrt.f64 (PI.f64))))) (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (sqrt.f64 (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (PI.f64)) (/.f64 (pow.f64 (exp.f64 x) x) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 x) x) 3) (pow.f64 (*.f64 x (sqrt.f64 (PI.f64))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 x x) (log.f64 (*.f64 x (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (*.f64 x x) (log.f64 (*.f64 x (sqrt.f64 (PI.f64))))) 1))))))"]],"rules":[["egg-rr",43],["egg-rr",63]],"stop":[["node limit",1]],"time":49.953125,"type":"rewrite"},{"count":[[130,130]],"egraph":[[8,7756,624,0.07044558299999999],[7,7095,624,0.05856945799999999],[6,5720,624,0.045983291999999995],[5,5239,624,0.033964417],[4,4443,624,0.024580458],[3,3047,634,0.016005708],[2,607,736,0.007983249999999999],[1,192,942,0.001502792],[0,70,1059,0.000387542]],"inputs":[["(*.f64 15/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64)))))","(+.f64 (*.f64 21/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 21/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 15/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 35/16 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(+.f64 (*.f64 21/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 15/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 35/16 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 35/16 (*.f64 (/.f64 1 (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))))))","(*.f64 (/.f64 1 (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(+.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 (/.f64 (pow.f64 x 2) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (pow.f64 x 4) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 (/.f64 (pow.f64 x 2) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (pow.f64 x 4) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (+.f64 (*.f64 (/.f64 (pow.f64 x 2) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 1/6 (*.f64 (/.f64 (pow.f64 x 6) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 15/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64)))))","(*.f64 15/8 (/.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (fabs.f64 x) (pow.f64 x 6))))","(*.f64 15/8 (/.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 x (pow.f64 x 6))))","(*.f64 15/8 (/.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7)))","(+.f64 (*.f64 21/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 21/8 (/.f64 (*.f64 1 (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (*.f64 15/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 15/8 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (/.f64 21/8 (*.f64 (fabs.f64 x) (pow.f64 x 4)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 21/8 (*.f64 x (pow.f64 x 4))) (/.f64 (/.f64 15/8 x) (pow.f64 x 6))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 21/8 (pow.f64 x 5)) (/.f64 15/8 (pow.f64 x 7))))","(+.f64 (*.f64 21/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 15/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 35/16 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(fma.f64 21/8 (/.f64 (*.f64 1 (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (fma.f64 15/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 35/16 (/.f64 (*.f64 1 (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 (fabs.f64 x) (*.f64 x x))))))","(fma.f64 21/8 (/.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 15/8 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (/.f64 35/16 (*.f64 x (*.f64 x (fabs.f64 x)))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (+.f64 (/.f64 21/8 (*.f64 x (pow.f64 x 4))) (/.f64 (/.f64 15/8 x) (pow.f64 x 6))) (/.f64 35/16 (pow.f64 x 3))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 21/8 (pow.f64 x 5)) (+.f64 (/.f64 35/16 (pow.f64 x 3)) (/.f64 15/8 (pow.f64 x 7)))))","(+.f64 (*.f64 21/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 15/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 35/16 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 35/16 (*.f64 (/.f64 1 (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))))))","(fma.f64 21/8 (/.f64 (*.f64 1 (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (fma.f64 15/8 (*.f64 (/.f64 1 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 35/16 (+.f64 (/.f64 (*.f64 1 (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 (fabs.f64 x) (*.f64 x x))) (/.f64 (*.f64 1 (sqrt.f64 (/.f64 1 (PI.f64)))) (fabs.f64 x))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 15/8 (*.f64 (fabs.f64 x) (pow.f64 x 6))) (/.f64 21/8 (*.f64 (fabs.f64 x) (pow.f64 x 4))))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 35/16 (*.f64 x (*.f64 x (fabs.f64 x)))) (/.f64 35/16 (fabs.f64 x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (+.f64 (/.f64 21/8 (*.f64 x (pow.f64 x 4))) (/.f64 (/.f64 15/8 x) (pow.f64 x 6))) (+.f64 (/.f64 35/16 (pow.f64 x 3)) (/.f64 35/16 x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 35/16 (pow.f64 x 3)) (+.f64 (/.f64 21/8 (pow.f64 x 5)) (+.f64 (/.f64 15/8 (pow.f64 x 7)) (/.f64 35/16 x)))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x))","(+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (fabs.f64 x) (*.f64 x x))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (*.f64 x (fabs.f64 x))))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (/.f64 (pow.f64 (exp.f64 x) x) x)))","(*.f64 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (+.f64 (/.f64 1/2 (*.f64 x x)) 1))","(*.f64 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (+.f64 1 (/.f64 1/2 (*.f64 x x))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(fma.f64 3/4 (/.f64 (*.f64 (exp.f64 (*.f64 x x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (fma.f64 (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (fabs.f64 x) (*.f64 x x)))))))","(fma.f64 3/4 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (pow.f64 x 4)))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (*.f64 x (fabs.f64 x))))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (fma.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (pow.f64 x 4))) (/.f64 (pow.f64 (exp.f64 x) x) x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (+.f64 1/2 (/.f64 3/4 (*.f64 x x))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 1/2 (*.f64 x x)) (+.f64 1 (/.f64 3/4 (pow.f64 x 4))))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))))))","(fma.f64 3/4 (/.f64 (*.f64 (exp.f64 (*.f64 x x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (fma.f64 (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (fabs.f64 x) (*.f64 x x)))) (*.f64 15/8 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (fabs.f64 x) (pow.f64 x 6))))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (*.f64 x (fabs.f64 x))))) (/.f64 (*.f64 15/8 (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x))) (pow.f64 x 6)))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (pow.f64 x 4)))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (fma.f64 15/8 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (pow.f64 x 6))) (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)))) (fma.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (pow.f64 x 4))) (/.f64 (pow.f64 (exp.f64 x) x) x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (+.f64 (/.f64 15/8 (pow.f64 x 4)) 1/2)) (*.f64 (+.f64 (/.f64 3/4 (pow.f64 x 4)) 1) (/.f64 (pow.f64 (exp.f64 x) x) x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (/.f64 3/4 (pow.f64 x 4)))))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x))","(+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (fabs.f64 x) (*.f64 x x))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (*.f64 x (fabs.f64 x))))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (/.f64 (pow.f64 (exp.f64 x) x) x)))","(*.f64 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (+.f64 (/.f64 1/2 (*.f64 x x)) 1))","(*.f64 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (+.f64 1 (/.f64 1/2 (*.f64 x x))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(fma.f64 3/4 (/.f64 (*.f64 (exp.f64 (*.f64 x x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (fma.f64 (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (fabs.f64 x) (*.f64 x x)))))))","(fma.f64 3/4 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (pow.f64 x 4)))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (*.f64 x (fabs.f64 x))))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (fma.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (pow.f64 x 4))) (/.f64 (pow.f64 (exp.f64 x) x) x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (+.f64 1/2 (/.f64 3/4 (*.f64 x x))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 1/2 (*.f64 x x)) (+.f64 1 (/.f64 3/4 (pow.f64 x 4))))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))))))","(fma.f64 3/4 (/.f64 (*.f64 (exp.f64 (*.f64 x x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (fma.f64 (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (fabs.f64 x) (*.f64 x x)))) (*.f64 15/8 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (*.f64 (fabs.f64 x) (pow.f64 x 6))))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (*.f64 x (fabs.f64 x))))) (/.f64 (*.f64 15/8 (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x))) (pow.f64 x 6)))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (pow.f64 x 4)))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (fma.f64 15/8 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (pow.f64 x 6))) (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)))) (fma.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (pow.f64 x 4))) (/.f64 (pow.f64 (exp.f64 x) x) x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (+.f64 (/.f64 15/8 (pow.f64 x 4)) 1/2)) (*.f64 (+.f64 (/.f64 3/4 (pow.f64 x 4)) 1) (/.f64 (pow.f64 (exp.f64 x) x) x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (/.f64 3/4 (pow.f64 x 4)))))))","(*.f64 (/.f64 1 (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(/.f64 (*.f64 1 (sqrt.f64 (/.f64 1 (PI.f64)))) (fabs.f64 x))","(/.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fabs.f64 x))","(/.f64 (sqrt.f64 (/.f64 1 (PI.f64))) x)","(+.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 (/.f64 (pow.f64 x 2) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 1 (fabs.f64 x)) (/.f64 (*.f64 x x) (fabs.f64 x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 1 (fabs.f64 x)) (/.f64 x (/.f64 (fabs.f64 x) x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 1 x) (*.f64 (/.f64 x x) x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 x (/.f64 1 x)))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (pow.f64 x 4) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 (/.f64 (pow.f64 x 2) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 x 4) (fabs.f64 x))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 1 (fabs.f64 x)) (/.f64 (*.f64 x x) (fabs.f64 x)))))","(fma.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 1 (fabs.f64 x)) (/.f64 x (/.f64 (fabs.f64 x) x))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 1/2 (/.f64 (pow.f64 x 4) (fabs.f64 x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 (/.f64 x x) x) (fma.f64 1/2 (/.f64 (pow.f64 x 4) x) (/.f64 1 x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 x (fma.f64 1/2 (pow.f64 x 3) (/.f64 1 x))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (pow.f64 x 4) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (+.f64 (*.f64 (/.f64 (pow.f64 x 2) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (*.f64 1/6 (*.f64 (/.f64 (pow.f64 x 6) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 x 4) (fabs.f64 x))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 1 (fabs.f64 x)) (/.f64 (*.f64 x x) (fabs.f64 x)))) (*.f64 (*.f64 1/6 (/.f64 (pow.f64 x 6) (fabs.f64 x))) (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 x (/.f64 (fabs.f64 x) x)) (*.f64 1/6 (/.f64 (pow.f64 x 6) (fabs.f64 x))))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 4) (fabs.f64 x))) (/.f64 1 (fabs.f64 x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (fma.f64 1/2 (/.f64 (pow.f64 x 4) x) (/.f64 1 x)) (fma.f64 1/6 (/.f64 (pow.f64 x 6) x) (*.f64 (/.f64 x x) x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (fma.f64 (pow.f64 x 5) 1/6 x) (fma.f64 1/2 (pow.f64 x 3) (/.f64 1 x))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) (fabs.f64 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x))"]],"stop":[["node limit",1]],"time":98.95703125,"type":"simplify"},{"compiler":[[7227,4376]],"time":81.162841796875,"type":"eval"},{"alts":[["(*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 2) x) (pow.f64 (cbrt.f64 (exp.f64 x)) x)) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.9352265828988495],["(/.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 3) (pow.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 3)) (+.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 2) (-.f64 (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))","fresh",7.53737321350084],["(*.f64 (/.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 x)) x) (pow.f64 (sqrt.f64 (exp.f64 x)) x)) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.6969686335703695],["(/.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (sqrt.f64 (PI.f64))))","fresh",1.1962791145984029],["(*.f64 (/.f64 (-.f64 (exp.f64 (log1p.f64 (pow.f64 (exp.f64 x) x))) 1) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",2.597686635802749],["(*.f64 (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (+.f64 x x))) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",5.249564159052584],["(pow.f64 (pow.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64)))) 3) 1/3)","fresh",8.820494145282577],["(exp.f64 (+.f64 (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (-.f64 (*.f64 x x) (log.f64 (*.f64 x (sqrt.f64 (PI.f64)))))))","fresh",3.035679514452075],["(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (+.f64 (/.f64 3/4 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x)))))))","fresh",1.1688151519174796],["(/.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (*.f64 (/.f64 (sqrt.f64 (PI.f64)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))","fresh",1.1730987079255935],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) (sqrt.f64 (*.f64 x (sqrt.f64 (PI.f64))))) (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (sqrt.f64 (*.f64 x (sqrt.f64 (PI.f64)))))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.415044714278687],["(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))))))","fresh",2.5451176015057624],["(*.f64 (/.f64 (-.f64 (exp.f64 (log1p.f64 (pow.f64 (exp.f64 x) x))) 1) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",2.540210247099853],["(*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 2) x) (pow.f64 (cbrt.f64 (exp.f64 x)) x)) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",2.0132014780861467],["(/.f64 1 (/.f64 (*.f64 x (sqrt.f64 (PI.f64))) (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))","fresh",2.9361986091089265],["(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (/.f64 3/4 (pow.f64 x 4)))))))","fresh",1.1175141455943602],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (/.f64 1 (*.f64 x (sqrt.f64 (PI.f64)))))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.4076267459764895],["(+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (+.f64 1 (*.f64 15/8 (pow.f64 x -6)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))","fresh",1.2097801911919903],["(*.f64 (/.f64 (*.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (sqrt.f64 (pow.f64 (exp.f64 x) x))) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.2185679391101714],["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","next",1.104746855930797],["(*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) 2)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.4330864996368156],["(*.f64 (*.f64 (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (sqrt.f64 (PI.f64))) (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.285508027185603],["(*.f64 (pow.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 3) 1/3) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",8.630865507369801],["(*.f64 (/.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 x)) x) (pow.f64 (sqrt.f64 (exp.f64 x)) x)) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.7909454219629624],["(*.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2)) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.3509246211880988],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) (sqrt.f64 (PI.f64))) (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.4226507034731068]],"compiler":[[42,29],[140,71],[40,26],[48,39],[35,26],[36,26],[31,25],[28,22],[32,25],[48,39],[46,27],[70,53],[37,28],[40,27],[29,23],[37,27],[41,27],[39,24],[40,26],[32,23],[44,25],[37,23],[34,25],[38,24],[42,28],[39,25],[42,29],[140,71],[40,26],[48,39],[35,26],[36,26],[31,25],[28,22],[32,25],[48,39],[46,27],[70,53],[37,28],[40,27],[29,23],[37,27],[41,27],[39,24],[40,26],[32,23],[44,25],[37,23],[34,25],[38,24],[42,28],[39,25]],"count":[[213,26]],"kept":[{"done":[0,0],"fresh":[19,8],"new":[193,18],"picked":[1,0]}],"min-error":[0.3615652361602793],"time":65.443115234375,"type":"prune"},{"compiler":[[138,72]],"locations":[["(/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x))",0.38900375976844204,false],["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))",0.3984375,true],["(sqrt.f64 (PI.f64))",1.0,false],["(pow.f64 (exp.f64 x) x)",1.0051940709283078,false]],"time":33.319091796875,"type":"localize"},{"count":[[1,12]],"series":[["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","x","-inf",0.5078125],["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","x","inf",0.65087890625],["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","x","0",1.2880859375]],"time":2.582763671875,"type":"series"},{"count":[[1,50]],"egraph":[[1,539,41,0.012337124],[0,23,45,0.000765541]],"inputs":[["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 1 (/.f64 15/8 (pow.f64 x 6))) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x))) (*.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (+.f64 1 (/.f64 15/8 (pow.f64 x 6)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (sqrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (exp.f64 x) x) (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3))) (*.f64 (*.f64 (sqrt.f64 (PI.f64)) x) (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3))) (*.f64 (sqrt.f64 (PI.f64)) (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (sqrt.f64 (PI.f64))) (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3))) (*.f64 x (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (exp.f64 x) x) (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2))) (*.f64 (*.f64 (sqrt.f64 (PI.f64)) x) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2))) (*.f64 (sqrt.f64 (PI.f64)) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (sqrt.f64 (PI.f64))) (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2))) (*.f64 x (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) (pow.f64 (exp.f64 x) x)) (*.f64 (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 (sqrt.f64 (PI.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (pow.f64 (exp.f64 x) x)) (*.f64 (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 (sqrt.f64 (PI.f64)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) (/.f64 (pow.f64 (exp.f64 x) x) (sqrt.f64 (PI.f64)))) (*.f64 (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (/.f64 (pow.f64 (exp.f64 x) x) (sqrt.f64 (PI.f64)))) (*.f64 (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) 3) (pow.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 3)) (+.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) 2) (PI.f64)) (-.f64 (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) 2) (PI.f64)) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (-.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (neg.f64 (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (exp.f64 x) x) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 (sqrt.f64 (PI.f64)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (sqrt.f64 (PI.f64))) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x))) (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x))) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3))) (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2))) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (pow.f64 (exp.f64 x) x)) (*.f64 (sqrt.f64 (PI.f64)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (/.f64 (pow.f64 (exp.f64 x) x) (sqrt.f64 (PI.f64)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x))) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) 3) (pow.f64 (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 3) (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (-.f64 (*.f64 x x) (log.f64 (*.f64 (sqrt.f64 (PI.f64)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (+.f64 (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (-.f64 (*.f64 x x) (log.f64 (*.f64 (sqrt.f64 (PI.f64)) x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (PI.f64) -1/2) (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (pow.f64 (PI.f64) -1/2) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) 1 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) 2) (PI.f64))) (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x))) (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))))))"]],"rules":[["egg-rr",50]],"stop":[["node limit",1]],"time":36.44921875,"type":"rewrite"},{"count":[[62,66]],"egraph":[[5,7003,401,0.038908293],[4,6042,411,0.024688418],[3,1547,429,0.013256793],[2,397,447,0.0031704589999999996],[1,129,511,0.000933417],[0,49,619,0.000259459]],"inputs":[["(*.f64 15/8 (*.f64 (/.f64 1 (pow.f64 x 7)) (sqrt.f64 (/.f64 1 (PI.f64)))))","(+.f64 (*.f64 21/8 (*.f64 (/.f64 1 (pow.f64 x 5)) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 1 (pow.f64 x 7)) (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 35/16 (*.f64 (/.f64 1 (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 21/8 (*.f64 (/.f64 1 (pow.f64 x 5)) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 1 (pow.f64 x 7)) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(+.f64 (*.f64 35/16 (*.f64 (/.f64 1 x) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 35/16 (*.f64 (/.f64 1 (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 21/8 (*.f64 (/.f64 1 (pow.f64 x 5)) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 1 (pow.f64 x 7)) (sqrt.f64 (/.f64 1 (PI.f64))))))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) x) (sqrt.f64 (/.f64 1 (PI.f64))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) x) (sqrt.f64 (/.f64 1 (PI.f64)))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) x) (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 15/8 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 7)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) x) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) x) (sqrt.f64 (/.f64 1 (PI.f64))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) x) (sqrt.f64 (/.f64 1 (PI.f64)))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) x) (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 15/8 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 7)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) x) (sqrt.f64 (/.f64 1 (PI.f64)))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 15/8 (*.f64 (/.f64 1 (pow.f64 x 7)) (sqrt.f64 (/.f64 1 (PI.f64)))))","(*.f64 15/8 (/.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 15/8 (pow.f64 x 7)))","(+.f64 (*.f64 21/8 (*.f64 (/.f64 1 (pow.f64 x 5)) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 1 (pow.f64 x 7)) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 21/8 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 1 (pow.f64 x 5))) (*.f64 15/8 (*.f64 (/.f64 1 (pow.f64 x 7)) (sqrt.f64 (/.f64 1 (PI.f64))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 15/8 (pow.f64 x 7)) (/.f64 21/8 (pow.f64 x 5))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 21/8 (pow.f64 x 5)) (/.f64 15/8 (pow.f64 x 7))))","(+.f64 (*.f64 35/16 (*.f64 (/.f64 1 (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 21/8 (*.f64 (/.f64 1 (pow.f64 x 5)) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 1 (pow.f64 x 7)) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(fma.f64 35/16 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 1 (pow.f64 x 3))) (fma.f64 21/8 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 1 (pow.f64 x 5))) (*.f64 15/8 (*.f64 (/.f64 1 (pow.f64 x 7)) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(fma.f64 35/16 (/.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 15/8 (pow.f64 x 7)) (/.f64 21/8 (pow.f64 x 5)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (+.f64 (/.f64 21/8 (pow.f64 x 5)) (/.f64 15/8 (pow.f64 x 7))) (/.f64 35/16 (pow.f64 x 3))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 35/16 (pow.f64 x 3)) (+.f64 (/.f64 21/8 (pow.f64 x 5)) (/.f64 15/8 (pow.f64 x 7)))))","(+.f64 (*.f64 35/16 (*.f64 (/.f64 1 x) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 35/16 (*.f64 (/.f64 1 (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 21/8 (*.f64 (/.f64 1 (pow.f64 x 5)) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 1 (pow.f64 x 7)) (sqrt.f64 (/.f64 1 (PI.f64))))))))","(fma.f64 35/16 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 1 x)) (fma.f64 35/16 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 1 (pow.f64 x 3))) (fma.f64 21/8 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 1 (pow.f64 x 5))) (*.f64 15/8 (*.f64 (/.f64 1 (pow.f64 x 7)) (sqrt.f64 (/.f64 1 (PI.f64))))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 15/8 (pow.f64 x 7)) (/.f64 21/8 (pow.f64 x 5)))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 35/16 x) (/.f64 35/16 (pow.f64 x 3)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (+.f64 (/.f64 21/8 (pow.f64 x 5)) (/.f64 15/8 (pow.f64 x 7))) (+.f64 (/.f64 35/16 x) (/.f64 35/16 (pow.f64 x 3)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 21/8 (pow.f64 x 5)) (+.f64 (/.f64 35/16 (pow.f64 x 3)) (+.f64 (/.f64 15/8 (pow.f64 x 7)) (/.f64 35/16 x)))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) x) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) x))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) x) (sqrt.f64 (/.f64 1 (PI.f64)))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 (exp.f64 (*.f64 x x)) x) (*.f64 1/2 (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (/.f64 (pow.f64 (exp.f64 x) x) x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (+.f64 (/.f64 (/.f64 1/2 x) x) 1) (/.f64 (pow.f64 (exp.f64 x) x) x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 1 (/.f64 (/.f64 1/2 x) x))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) x) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 3/4 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 5))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) x))))","(fma.f64 3/4 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 5))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 (exp.f64 (*.f64 x x)) x) (*.f64 1/2 (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (/.f64 (*.f64 (pow.f64 (exp.f64 x) x) 3/4) (pow.f64 x 5))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 (/.f64 3/4 (pow.f64 x 5)) (pow.f64 (exp.f64 x) x)) (*.f64 (+.f64 (/.f64 (/.f64 1/2 x) x) 1) (/.f64 (pow.f64 (exp.f64 x) x) x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 (pow.f64 (exp.f64 x) x) (+.f64 (/.f64 3/4 (pow.f64 x 5)) (/.f64 1/2 (pow.f64 x 3))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (pow.f64 (exp.f64 x) x) (+.f64 (/.f64 1 x) (+.f64 (/.f64 3/4 (pow.f64 x 5)) (/.f64 1/2 (pow.f64 x 3))))))","(+.f64 (*.f64 15/8 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 7)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) x) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(fma.f64 15/8 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 7))) (fma.f64 3/4 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 5))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) x)))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 (exp.f64 (*.f64 x x)) x) (*.f64 1/2 (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3))))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 15/8 (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 7))) (/.f64 (*.f64 3/4 (exp.f64 (*.f64 x x))) (pow.f64 x 5)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (fma.f64 15/8 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 7)) (/.f64 (*.f64 (pow.f64 (exp.f64 x) x) 3/4) (pow.f64 x 5)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 (+.f64 (/.f64 (/.f64 1/2 x) x) 1) (/.f64 (pow.f64 (exp.f64 x) x) x)) (fma.f64 15/8 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 7)) (*.f64 (/.f64 3/4 (pow.f64 x 5)) (pow.f64 (exp.f64 x) x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 1 (/.f64 (/.f64 1/2 x) x))) (*.f64 (pow.f64 (exp.f64 x) x) (+.f64 (/.f64 3/4 (pow.f64 x 5)) (/.f64 15/8 (pow.f64 x 7))))))","(*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) x) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) x))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) x) (sqrt.f64 (/.f64 1 (PI.f64)))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 (exp.f64 (*.f64 x x)) x) (*.f64 1/2 (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (/.f64 (pow.f64 (exp.f64 x) x) x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (+.f64 (/.f64 (/.f64 1/2 x) x) 1) (/.f64 (pow.f64 (exp.f64 x) x) x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 1 (/.f64 (/.f64 1/2 x) x))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) x) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 3/4 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 5))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) x))))","(fma.f64 3/4 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 5))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 (exp.f64 (*.f64 x x)) x) (*.f64 1/2 (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (/.f64 (*.f64 (pow.f64 (exp.f64 x) x) 3/4) (pow.f64 x 5))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 (/.f64 3/4 (pow.f64 x 5)) (pow.f64 (exp.f64 x) x)) (*.f64 (+.f64 (/.f64 (/.f64 1/2 x) x) 1) (/.f64 (pow.f64 (exp.f64 x) x) x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 (pow.f64 (exp.f64 x) x) (+.f64 (/.f64 3/4 (pow.f64 x 5)) (/.f64 1/2 (pow.f64 x 3))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (pow.f64 (exp.f64 x) x) (+.f64 (/.f64 1 x) (+.f64 (/.f64 3/4 (pow.f64 x 5)) (/.f64 1/2 (pow.f64 x 3))))))","(+.f64 (*.f64 15/8 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 7)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5)) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) x) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(fma.f64 15/8 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 7))) (fma.f64 3/4 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 5))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (/.f64 (exp.f64 (*.f64 x x)) x)))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (/.f64 (exp.f64 (*.f64 x x)) x) (*.f64 1/2 (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3))))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 15/8 (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 7))) (/.f64 (*.f64 3/4 (exp.f64 (*.f64 x x))) (pow.f64 x 5)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (fma.f64 15/8 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 7)) (/.f64 (*.f64 (pow.f64 (exp.f64 x) x) 3/4) (pow.f64 x 5)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 (+.f64 (/.f64 (/.f64 1/2 x) x) 1) (/.f64 (pow.f64 (exp.f64 x) x) x)) (fma.f64 15/8 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 7)) (*.f64 (/.f64 3/4 (pow.f64 x 5)) (pow.f64 (exp.f64 x) x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 1 (/.f64 (/.f64 1/2 x) x))) (*.f64 (pow.f64 (exp.f64 x) x) (+.f64 (/.f64 3/4 (pow.f64 x 5)) (/.f64 15/8 (pow.f64 x 7))))))"]],"stop":[["node limit",1]],"time":63.476806640625,"type":"simplify"},{"compiler":[[5575,3455]],"time":64.2890625,"type":"eval"},{"alts":[["(*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 2) x) (pow.f64 (cbrt.f64 (exp.f64 x)) x)) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.9352265828988495],["(/.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 3) (pow.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 3)) (+.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 2) (-.f64 (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))","fresh",7.53737321350084],["(*.f64 (/.f64 (-.f64 (exp.f64 (log1p.f64 (pow.f64 (exp.f64 x) x))) 1) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",2.597686635802749],["(*.f64 (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (+.f64 x x))) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",5.249564159052584],["(/.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (*.f64 (/.f64 (sqrt.f64 (PI.f64)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))","fresh",1.1730987079255935],["(/.f64 (-.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) 2) (PI.f64)) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (-.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))","fresh",5.3527427995783725],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) (sqrt.f64 (*.f64 x (sqrt.f64 (PI.f64))))) (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (sqrt.f64 (*.f64 x (sqrt.f64 (PI.f64)))))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.415044714278687],["(/.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) 3) (pow.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 3)) (+.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) 2) (PI.f64)) (-.f64 (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))","fresh",7.743672311237507],["(*.f64 (/.f64 (-.f64 (exp.f64 (log1p.f64 (pow.f64 (exp.f64 x) x))) 1) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",2.540210247099853],["(*.f64 (/.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 x)) x) (pow.f64 (sqrt.f64 (exp.f64 x)) x)) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.7909454219629624],["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (-.f64 (exp.f64 (log1p.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 1))))","fresh",1.1652532926581805],["(*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 2) x) (pow.f64 (cbrt.f64 (exp.f64 x)) x)) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",2.0132014780861467],["(/.f64 1 (/.f64 (*.f64 x (sqrt.f64 (PI.f64))) (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))","fresh",2.9361986091089265],["(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (/.f64 3/4 (pow.f64 x 4)))))))","next",1.1175141455943602],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (/.f64 1 (*.f64 x (sqrt.f64 (PI.f64)))))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.4076267459764895],["(pow.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) 3)","fresh",1.3621915612509787],["(*.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2)) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.3509246211880988],["(pow.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) 3) 1/3)","fresh",8.637490043585531],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) (sqrt.f64 (PI.f64))) (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.4226507034731068],["(*.f64 (*.f64 (/.f64 1 (expm1.f64 (log1p.f64 (sqrt.f64 (PI.f64))))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.3867338302236332],["(*.f64 (/.f64 (*.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (sqrt.f64 (pow.f64 (exp.f64 x) x))) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.2185679391101714],["(*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) 2)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.4330864996368156],["(*.f64 (*.f64 (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (sqrt.f64 (PI.f64))) (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.285508027185603],["(*.f64 (/.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 x)) x) (pow.f64 (sqrt.f64 (exp.f64 x)) x)) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.6969686335703695],["(pow.f64 (pow.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64)))) 3) 1/3)","fresh",8.820494145282577],["(-.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))) 1)","fresh",2.7082000608359196]],"compiler":[[42,29],[140,71],[35,26],[36,26],[48,39],[99,54],[46,27],[139,73],[37,28],[38,24],[35,29],[40,27],[29,23],[37,27],[41,27],[31,25],[42,28],[32,26],[39,25],[34,25],[40,26],[44,25],[37,23],[40,26],[31,25],[32,26],[42,29],[140,71],[35,26],[36,26],[48,39],[99,54],[46,27],[139,73],[37,28],[38,24],[35,29],[40,27],[29,23],[37,27],[41,27],[31,25],[42,28],[32,26],[39,25],[34,25],[40,26],[44,25],[37,23],[40,26],[31,25],[32,26]],"count":[[178,26]],"kept":[{"done":[0,0],"fresh":[25,19],"new":[152,7],"picked":[1,0]}],"min-error":[0.32700274824404896],"time":56.820068359375,"type":"prune"},{"compiler":[[173,108]],"locations":[["(/.f64 3/4 (pow.f64 x 4))",0.27734375,true],["(/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))",0.348320019536884,true],["(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (/.f64 3/4 (pow.f64 x 4)))))",0.3951950195368841,true],["(pow.f64 (exp.f64 x) x)",1.0051940709283078,false]],"time":46.14990234375,"type":"localize"},{"count":[[3,24]],"series":[["(/.f64 3/4 (pow.f64 x 4))","x","-inf",0.1630859375],["(/.f64 3/4 (pow.f64 x 4))","x","inf",0.244873046875],["(/.f64 3/4 (pow.f64 x 4))","x","0",0.43408203125],["(/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))","x","-inf",0.348876953125],["(/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))","x","inf",0.427001953125],["(/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))","x","0",0.276123046875],["(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (/.f64 3/4 (pow.f64 x 4)))))","x","-inf",0.407958984375],["(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (/.f64 3/4 (pow.f64 x 4)))))","x","inf",0.533935546875],["(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (/.f64 3/4 (pow.f64 x 4)))))","x","0",0.402099609375]],"time":3.405029296875,"type":"series"},{"count":[[3,152]],"egraph":[[2,6350,45,0.044496166],[1,465,45,0.010495958],[0,20,49,0.00075625]],"inputs":[["(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (/.f64 3/4 (pow.f64 x 4)))))","(/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))","(/.f64 3/4 (pow.f64 x 4))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 15/8 (pow.f64 x -6) 1) (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (*.f64 3/4 (pow.f64 x -4)) (/.f64 (pow.f64 (exp.f64 x) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))) 1) (*.f64 (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (fma.f64 15/8 (pow.f64 x -6) 1)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 3/4 (pow.f64 x -4))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (pow.f64 (exp.f64 x) x) (/.f64 x (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (exp.f64 x) x) (/.f64 x (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 x (*.f64 (pow.f64 (exp.f64 x) x) (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1)) (/.f64 x (pow.f64 (exp.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 3375/512 (pow.f64 (pow.f64 x -6) 3) (pow.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 3)) (*.f64 (/.f64 x (pow.f64 (exp.f64 x) x)) (fma.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (-.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (*.f64 15/8 (pow.f64 x -6))) (/.f64 225/64 (pow.f64 x 12)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 225/64 (pow.f64 x 12)) (pow.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 2)) (*.f64 (/.f64 x (pow.f64 (exp.f64 x) x)) (-.f64 (fma.f64 15/8 (pow.f64 x -6) -1) (*.f64 3/4 (pow.f64 x -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (exp.f64 x) x) (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (pow.f64 (exp.f64 x) x) (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1)))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (exp.f64 x) x) (fma.f64 3375/512 (pow.f64 (pow.f64 x -6) 3) (pow.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 3))) (*.f64 x (fma.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (-.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (*.f64 15/8 (pow.f64 x -6))) (/.f64 225/64 (pow.f64 x 12)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (exp.f64 x) x)) (fma.f64 3375/512 (pow.f64 (pow.f64 x -6) 3) (pow.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 3))) (*.f64 (neg.f64 x) (fma.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (-.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (*.f64 15/8 (pow.f64 x -6))) (/.f64 225/64 (pow.f64 x 12)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (exp.f64 x) x) (-.f64 (/.f64 225/64 (pow.f64 x 12)) (pow.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 2))) (*.f64 x (-.f64 (fma.f64 15/8 (pow.f64 x -6) -1) (*.f64 3/4 (pow.f64 x -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (exp.f64 x) x)) (-.f64 (/.f64 225/64 (pow.f64 x 12)) (pow.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 2))) (*.f64 (neg.f64 x) (-.f64 (fma.f64 15/8 (pow.f64 x -6) -1) (*.f64 3/4 (pow.f64 x -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 3375/512 (pow.f64 (pow.f64 x -6) 3) (pow.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 3)) (pow.f64 (exp.f64 x) x)) (*.f64 (fma.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (-.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (*.f64 15/8 (pow.f64 x -6))) (/.f64 225/64 (pow.f64 x 12))) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (/.f64 225/64 (pow.f64 x 12)) (pow.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 2)) (pow.f64 (exp.f64 x) x)) (*.f64 (-.f64 (fma.f64 15/8 (pow.f64 x -6) -1) (*.f64 3/4 (pow.f64 x -4))) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 3375/512 (pow.f64 (pow.f64 x -6) 3) (pow.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 3)) 1) (*.f64 (fma.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (-.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (*.f64 15/8 (pow.f64 x -6))) (/.f64 225/64 (pow.f64 x 12))) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (/.f64 225/64 (pow.f64 x 12)) (pow.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 2)) 1) (*.f64 (-.f64 (fma.f64 15/8 (pow.f64 x -6) -1) (*.f64 3/4 (pow.f64 x -4))) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 3375/512 (pow.f64 (pow.f64 x -6) 3) (pow.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 3)) (neg.f64 (pow.f64 (exp.f64 x) x))) (*.f64 (fma.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (-.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (*.f64 15/8 (pow.f64 x -6))) (/.f64 225/64 (pow.f64 x 12))) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (/.f64 225/64 (pow.f64 x 12)) (pow.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 2)) (neg.f64 (pow.f64 (exp.f64 x) x))) (*.f64 (-.f64 (fma.f64 15/8 (pow.f64 x -6) -1) (*.f64 3/4 (pow.f64 x -4))) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))) 3) (pow.f64 (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))) 3)) (fma.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))) (-.f64 (*.f64 (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x)))) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6)))) (*.f64 (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))) (-.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 x) x) (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1))) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 x) x) (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1))) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 x) x) (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1))) (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (pow.f64 (exp.f64 x) x)) (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 3375/512 (pow.f64 (pow.f64 x -6) 3) (pow.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 3)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (fma.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (-.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (*.f64 15/8 (pow.f64 x -6))) (/.f64 225/64 (pow.f64 x 12))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (/.f64 225/64 (pow.f64 x 12)) (pow.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 2)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (-.f64 (fma.f64 15/8 (pow.f64 x -6) -1) (*.f64 3/4 (pow.f64 x -4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (fma.f64 3375/512 (pow.f64 (pow.f64 x -6) 3) (pow.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 3))) (fma.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (-.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (*.f64 15/8 (pow.f64 x -6))) (/.f64 225/64 (pow.f64 x 12))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (-.f64 (/.f64 225/64 (pow.f64 x 12)) (pow.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 2))) (-.f64 (fma.f64 15/8 (pow.f64 x -6) -1) (*.f64 3/4 (pow.f64 x -4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1)) (neg.f64 (pow.f64 (exp.f64 x) x))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (/.f64 x (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (/.f64 x (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (/.f64 x (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (/.f64 x (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (/.f64 x (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1))) (/.f64 (pow.f64 (exp.f64 x) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (pow.f64 (exp.f64 x) x) (/.f64 x (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (/.f64 x (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) 3) (pow.f64 (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1)) 3) (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (pow.f64 (exp.f64 x) x) (/.f64 x (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (pow.f64 (exp.f64 x) x) (/.f64 x (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (-.f64 (*.f64 x x) (log.f64 x)) (log.f64 (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (+.f64 (-.f64 (*.f64 x x) (log.f64 x)) (log.f64 (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (exp.f64 x) x) (*.f64 (/.f64 1 x) (*.f64 15/8 (pow.f64 x -6))) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (exp.f64 x) x) (*.f64 (/.f64 1 x) (fma.f64 3/4 (pow.f64 x -4) 1)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6)) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (fma.f64 3/4 (pow.f64 x -4) 1) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (fma.f64 15/8 (pow.f64 x -6) 1) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 3/4 (pow.f64 x -4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 15/8 (*.f64 (pow.f64 x -6) (/.f64 (pow.f64 (exp.f64 x) x) x)) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 15/8 (pow.f64 x -6)) (/.f64 (pow.f64 (exp.f64 x) x) x) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) 2) (*.f64 (cbrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 225/64 (pow.f64 x 12))) (*.f64 (/.f64 (cbrt.f64 15/8) (*.f64 x x)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) 2) (*.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 15/8 (pow.f64 x -6))) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) 2) (*.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (fma.f64 3/4 (pow.f64 x -4) 1)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) (*.f64 (sqrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 15/8) (pow.f64 x 3)) (*.f64 (/.f64 (sqrt.f64 15/8) (pow.f64 x 3)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 15/8 (pow.f64 x -6))) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (fma.f64 3/4 (pow.f64 x -4) 1)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))) 1 (*.f64 (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 15/8 (pow.f64 x -6) 1) (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 (*.f64 3/4 (pow.f64 x -4)) (/.f64 (pow.f64 (exp.f64 x) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x)))) (cbrt.f64 (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))) (cbrt.f64 (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6)))) (cbrt.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))) (cbrt.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6)))) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x)))) (sqrt.f64 (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6)))) (sqrt.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6)))) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (/.f64 (sqrt.f64 15/8) (pow.f64 x 3))) (*.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (/.f64 (sqrt.f64 15/8) (pow.f64 x 3))) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (sqrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1))) (*.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (sqrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (sqrt.f64 15/8) (pow.f64 x 3)) (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x))) (*.f64 (/.f64 (sqrt.f64 15/8) (pow.f64 x 3)) (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x))) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x))) (*.f64 (sqrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 15/8 (pow.f64 x -6)) (pow.f64 (exp.f64 x) x)) (/.f64 1 x) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (pow.f64 (exp.f64 x) x)) (/.f64 1 x) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) 15/8) (pow.f64 x -6) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (cbrt.f64 (/.f64 225/64 (pow.f64 x 12)))) (/.f64 (cbrt.f64 15/8) (*.f64 x x)) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (/.f64 (sqrt.f64 15/8) (pow.f64 x 3))) (/.f64 (sqrt.f64 15/8) (pow.f64 x 3)) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (pow.f64 (cbrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) 2)) (cbrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (sqrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1))) (sqrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 15/8 (pow.f64 x -6)) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) 2)) (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 15/8 (pow.f64 x -6)) (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x))) (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) 2)) (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x))) (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x -3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) x) (pow.f64 (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) x) 2) (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (+.f64 x x))) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (pow.f64 x -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (pow.f64 x 3/2)) (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (pow.f64 x 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (exp.f64 x) x)) (/.f64 1 (neg.f64 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -3) (pow.f64 (exp.f64 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (*.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (pow.f64 x -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (+.f64 x x))) x) (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) x) (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (*.f64 x x)) (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (+.f64 x x))) 1) (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) 1) (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 x x)) (/.f64 (pow.f64 (exp.f64 x) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (+.f64 x x))) (*.f64 x x)) (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 x 3/2)) (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (+.f64 x x))) (pow.f64 x 3/2)) (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (pow.f64 x 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x -3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) x) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (pow.f64 x 3/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x 3) (pow.f64 (exp.f64 x) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (exp.f64 x) x) (neg.f64 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) (+.f64 x x)) (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x -3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 x) x) 3) (pow.f64 x 9)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 x x (log.f64 (pow.f64 x -3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 x x (log.f64 (pow.f64 x -3))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 3/4 (pow.f64 x -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3/4 (pow.f64 x -4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 3/4 (pow.f64 x -4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 3/4 (pow.f64 x -4))) (cbrt.f64 (/.f64 9/16 (pow.f64 x 8))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 9/16 (pow.f64 x 8))) (cbrt.f64 (*.f64 3/4 (pow.f64 x -4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 3/4) (*.f64 x x)) (/.f64 (sqrt.f64 3/4) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -3/4 (/.f64 1 (neg.f64 (pow.f64 x 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -4) 3/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 3/4 (pow.f64 x -4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 3/4 (pow.f64 x -4))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 3/4) (*.f64 x x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 27/64 (pow.f64 x 12)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 4) 4/3) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 9/16 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 3/4) (pow.f64 x -4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 3/4 (pow.f64 x -4)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 27/64 (pow.f64 x 12)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 3/4 (pow.f64 x -4))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 3/4 (pow.f64 x -4))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 3/4 (pow.f64 x -4))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 3/4 (pow.f64 x -4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 3/4 (pow.f64 x -4) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) (pow.f64 (cbrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) 2) (cbrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) (sqrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (/.f64 27/64 (pow.f64 x 12))) (/.f64 1 (fma.f64 (*.f64 3/4 (pow.f64 x -4)) (fma.f64 3/4 (pow.f64 x -4) -1) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (/.f64 9/16 (pow.f64 x 8))) (/.f64 1 (+.f64 1 (*.f64 -3/4 (pow.f64 x -4)))) -1)))))"]],"rules":[["egg-rr",29],["egg-rr",36],["egg-rr",87]],"stop":[["node limit",1]],"time":78.330078125,"type":"rewrite"},{"count":[[176,174]],"egraph":[[5,7583,434,0.024484332],[4,1661,434,0.013920332],[3,614,442,0.004292332],[2,259,458,0.001765166],[1,112,458,0.0007660410000000001],[0,45,458,0.000246125]],"inputs":[["(/.f64 15/8 (pow.f64 x 7))","(+.f64 (*.f64 21/8 (/.f64 1 (pow.f64 x 5))) (*.f64 15/8 (/.f64 1 (pow.f64 x 7))))","(+.f64 (*.f64 21/8 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 15/8 (/.f64 1 (pow.f64 x 7))) (*.f64 27/16 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 27/16 (/.f64 1 x)) (+.f64 (*.f64 21/8 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 15/8 (/.f64 1 (pow.f64 x 7))) (*.f64 27/16 (/.f64 1 (pow.f64 x 3))))))","(/.f64 (exp.f64 (pow.f64 x 2)) x)","(+.f64 (*.f64 3/4 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5))) (/.f64 (exp.f64 (pow.f64 x 2)) x))","(+.f64 (*.f64 3/4 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5))) (+.f64 (*.f64 15/8 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 7))) (/.f64 (exp.f64 (pow.f64 x 2)) x)))","(+.f64 (*.f64 3/4 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5))) (+.f64 (*.f64 15/8 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 7))) (/.f64 (exp.f64 (pow.f64 x 2)) x)))","(/.f64 (exp.f64 (pow.f64 x 2)) x)","(+.f64 (*.f64 3/4 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5))) (/.f64 (exp.f64 (pow.f64 x 2)) x))","(+.f64 (*.f64 3/4 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5))) (+.f64 (*.f64 15/8 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 7))) (/.f64 (exp.f64 (pow.f64 x 2)) x)))","(+.f64 (*.f64 3/4 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5))) (+.f64 (*.f64 15/8 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 7))) (/.f64 (exp.f64 (pow.f64 x 2)) x)))","(/.f64 1 (pow.f64 x 3))","(+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3)))","(+.f64 (*.f64 1/2 x) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 (*.f64 1/2 x) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3)))))","(/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3))","(/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3))","(/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3))","(/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3))","(/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3))","(/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3))","(/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3))","(/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3))"]],"method":["egg-herbie"],"outputs":[["(/.f64 15/8 (pow.f64 x 7))","(+.f64 (*.f64 21/8 (/.f64 1 (pow.f64 x 5))) (*.f64 15/8 (/.f64 1 (pow.f64 x 7))))","(+.f64 (/.f64 21/8 (pow.f64 x 5)) (/.f64 15/8 (pow.f64 x 7)))","(+.f64 (*.f64 21/8 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 15/8 (/.f64 1 (pow.f64 x 7))) (*.f64 27/16 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (/.f64 21/8 (pow.f64 x 5)) (+.f64 (/.f64 15/8 (pow.f64 x 7)) (/.f64 27/16 (pow.f64 x 3))))","(+.f64 (/.f64 15/8 (pow.f64 x 7)) (+.f64 (/.f64 21/8 (pow.f64 x 5)) (/.f64 27/16 (pow.f64 x 3))))","(+.f64 (*.f64 27/16 (/.f64 1 x)) (+.f64 (*.f64 21/8 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 15/8 (/.f64 1 (pow.f64 x 7))) (*.f64 27/16 (/.f64 1 (pow.f64 x 3))))))","(+.f64 (+.f64 (/.f64 27/16 x) (/.f64 21/8 (pow.f64 x 5))) (+.f64 (/.f64 15/8 (pow.f64 x 7)) (/.f64 27/16 (pow.f64 x 3))))","(+.f64 (+.f64 (/.f64 15/8 (pow.f64 x 7)) (/.f64 27/16 (pow.f64 x 3))) (+.f64 (/.f64 21/8 (pow.f64 x 5)) (/.f64 27/16 x)))","(+.f64 (/.f64 15/8 (pow.f64 x 7)) (+.f64 (/.f64 21/8 (pow.f64 x 5)) (+.f64 (/.f64 27/16 (pow.f64 x 3)) (/.f64 27/16 x))))","(/.f64 (exp.f64 (pow.f64 x 2)) x)","(/.f64 (exp.f64 (*.f64 x x)) x)","(/.f64 (pow.f64 (exp.f64 x) x) x)","(+.f64 (*.f64 3/4 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5))) (/.f64 (exp.f64 (pow.f64 x 2)) x))","(fma.f64 3/4 (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 5)) (/.f64 (exp.f64 (*.f64 x x)) x))","(fma.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 5)) (/.f64 (pow.f64 (exp.f64 x) x) x))","(fma.f64 (pow.f64 (exp.f64 x) x) (/.f64 3/4 (pow.f64 x 5)) (/.f64 (pow.f64 (exp.f64 x) x) x))","(+.f64 (*.f64 3/4 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5))) (+.f64 (*.f64 15/8 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 7))) (/.f64 (exp.f64 (pow.f64 x 2)) x)))","(fma.f64 3/4 (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 5)) (fma.f64 15/8 (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 7)) (/.f64 (exp.f64 (*.f64 x x)) x)))","(fma.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 5)) (fma.f64 15/8 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 7)) (/.f64 (pow.f64 (exp.f64 x) x) x)))","(fma.f64 15/8 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 7)) (fma.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 5)) (/.f64 (pow.f64 (exp.f64 x) x) x)))","(+.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 (pow.f64 (exp.f64 x) x) (+.f64 (/.f64 3/4 (pow.f64 x 5)) (/.f64 15/8 (pow.f64 x 7)))))","(fma.f64 (pow.f64 (exp.f64 x) x) (+.f64 (/.f64 15/8 (pow.f64 x 7)) (/.f64 3/4 (pow.f64 x 5))) (/.f64 (pow.f64 (exp.f64 x) x) x))","(+.f64 (*.f64 3/4 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5))) (+.f64 (*.f64 15/8 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 7))) (/.f64 (exp.f64 (pow.f64 x 2)) x)))","(fma.f64 3/4 (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 5)) (fma.f64 15/8 (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 7)) (/.f64 (exp.f64 (*.f64 x x)) x)))","(fma.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 5)) (fma.f64 15/8 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 7)) (/.f64 (pow.f64 (exp.f64 x) x) x)))","(fma.f64 15/8 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 7)) (fma.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 5)) (/.f64 (pow.f64 (exp.f64 x) x) x)))","(+.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 (pow.f64 (exp.f64 x) x) (+.f64 (/.f64 3/4 (pow.f64 x 5)) (/.f64 15/8 (pow.f64 x 7)))))","(fma.f64 (pow.f64 (exp.f64 x) x) (+.f64 (/.f64 15/8 (pow.f64 x 7)) (/.f64 3/4 (pow.f64 x 5))) (/.f64 (pow.f64 (exp.f64 x) x) x))","(/.f64 (exp.f64 (pow.f64 x 2)) x)","(/.f64 (exp.f64 (*.f64 x x)) x)","(/.f64 (pow.f64 (exp.f64 x) x) x)","(+.f64 (*.f64 3/4 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5))) (/.f64 (exp.f64 (pow.f64 x 2)) x))","(fma.f64 3/4 (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 5)) (/.f64 (exp.f64 (*.f64 x x)) x))","(fma.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 5)) (/.f64 (pow.f64 (exp.f64 x) x) x))","(fma.f64 (pow.f64 (exp.f64 x) x) (/.f64 3/4 (pow.f64 x 5)) (/.f64 (pow.f64 (exp.f64 x) x) x))","(+.f64 (*.f64 3/4 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5))) (+.f64 (*.f64 15/8 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 7))) (/.f64 (exp.f64 (pow.f64 x 2)) x)))","(fma.f64 3/4 (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 5)) (fma.f64 15/8 (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 7)) (/.f64 (exp.f64 (*.f64 x x)) x)))","(fma.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 5)) (fma.f64 15/8 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 7)) (/.f64 (pow.f64 (exp.f64 x) x) x)))","(fma.f64 15/8 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 7)) (fma.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 5)) (/.f64 (pow.f64 (exp.f64 x) x) x)))","(+.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 (pow.f64 (exp.f64 x) x) (+.f64 (/.f64 3/4 (pow.f64 x 5)) (/.f64 15/8 (pow.f64 x 7)))))","(fma.f64 (pow.f64 (exp.f64 x) x) (+.f64 (/.f64 15/8 (pow.f64 x 7)) (/.f64 3/4 (pow.f64 x 5))) (/.f64 (pow.f64 (exp.f64 x) x) x))","(+.f64 (*.f64 3/4 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 5))) (+.f64 (*.f64 15/8 (/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 7))) (/.f64 (exp.f64 (pow.f64 x 2)) x)))","(fma.f64 3/4 (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 5)) (fma.f64 15/8 (/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 7)) (/.f64 (exp.f64 (*.f64 x x)) x)))","(fma.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 5)) (fma.f64 15/8 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 7)) (/.f64 (pow.f64 (exp.f64 x) x) x)))","(fma.f64 15/8 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 7)) (fma.f64 3/4 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 5)) (/.f64 (pow.f64 (exp.f64 x) x) x)))","(+.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 (pow.f64 (exp.f64 x) x) (+.f64 (/.f64 3/4 (pow.f64 x 5)) (/.f64 15/8 (pow.f64 x 7)))))","(fma.f64 (pow.f64 (exp.f64 x) x) (+.f64 (/.f64 15/8 (pow.f64 x 7)) (/.f64 3/4 (pow.f64 x 5))) (/.f64 (pow.f64 (exp.f64 x) x) x))","(/.f64 1 (pow.f64 x 3))","(+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))","(+.f64 (*.f64 1/2 x) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(fma.f64 1/2 x (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (pow.f64 x 3)) (fma.f64 x 1/2 (/.f64 1 x)))","(+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 (*.f64 1/2 x) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3)))))","(fma.f64 1/6 (pow.f64 x 3) (fma.f64 1/2 x (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(fma.f64 (pow.f64 x 3) 1/6 (+.f64 (/.f64 1 (pow.f64 x 3)) (fma.f64 x 1/2 (/.f64 1 x))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (fma.f64 (pow.f64 x 3) 1/6 (fma.f64 x 1/2 (/.f64 1 x))))","(+.f64 (/.f64 1 x) (fma.f64 x 1/2 (fma.f64 (pow.f64 x 3) 1/6 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (/.f64 1 (pow.f64 x 3)) (fma.f64 x (fma.f64 x (*.f64 x 1/6) 1/2) (/.f64 1 x)))","(/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3))","(/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3))","(/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))","(/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3))","(/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3))","(/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))","(/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3))","(/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3))","(/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))","(/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3))","(/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3))","(/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))","(/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3))","(/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3))","(/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))","(/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3))","(/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3))","(/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))","(/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3))","(/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3))","(/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))","(/.f64 (exp.f64 (pow.f64 x 2)) (pow.f64 x 3))","(/.f64 (exp.f64 (*.f64 x x)) (pow.f64 x 3))","(/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))"]],"stop":[["node limit",1]],"time":43.784912109375,"type":"simplify"},{"compiler":[[9639,5902]],"time":105.34814453125,"type":"eval"},{"alts":[["(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (fma.f64 (pow.f64 (cbrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) 2) (*.f64 (cbrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))","fresh",1.2782096087784611],["(*.f64 (*.f64 (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (sqrt.f64 (PI.f64))) (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.285508027185603],["(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (/.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 x) x) (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1))) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))","fresh",1.2444880873884834],["(*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 2) x) (pow.f64 (cbrt.f64 (exp.f64 x)) x)) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.9352265828988495],["(/.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 3) (pow.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 3)) (+.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 2) (-.f64 (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))","fresh",7.53737321350084],["(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 2) x) (pow.f64 (cbrt.f64 (exp.f64 x)) x)) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (/.f64 3/4 (pow.f64 x 4)))))))","fresh",1.902789275927583],["(*.f64 (/.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 x)) x) (pow.f64 (sqrt.f64 (exp.f64 x)) x)) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.6969686335703695],["(*.f64 (/.f64 (-.f64 (exp.f64 (log1p.f64 (pow.f64 (exp.f64 x) x))) 1) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",2.597686635802749],["(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (fma.f64 (-.f64 1 (/.f64 9/16 (pow.f64 x 8))) (/.f64 1 (+.f64 1 (*.f64 -3/4 (pow.f64 x -4)))) -1))))))","fresh",1.1816405631597715],["(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (*.f64 (/.f64 (-.f64 (exp.f64 (log1p.f64 (pow.f64 (exp.f64 x) x))) 1) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (/.f64 3/4 (pow.f64 x 4)))))))","fresh",2.5141167210857716],["(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (*.f64 (/.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 x)) x) (pow.f64 (sqrt.f64 (exp.f64 x)) x)) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (/.f64 3/4 (pow.f64 x 4)))))))","fresh",1.6779492136003955],["(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (fma.f64 15/8 (pow.f64 x -6) 1)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 3/4 (pow.f64 x -4))))))","fresh",1.1260229178556171],["(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (fma.f64 (pow.f64 (cbrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) 2) (cbrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) -1))))))","fresh",1.2666860030955156],["(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (fma.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x)))) (cbrt.f64 (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))) (cbrt.f64 (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))","fresh",1.2614736374855915],["(/.f64 (-.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) 2) (PI.f64)) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (-.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))","fresh",5.3527427995783725],["(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (fma.f64 3/4 (pow.f64 x -4) 1)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))","fresh",1.1511531374629207],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) (sqrt.f64 (*.f64 x (sqrt.f64 (PI.f64))))) (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (sqrt.f64 (*.f64 x (sqrt.f64 (PI.f64)))))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.415044714278687],["(/.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) 3) (pow.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 3)) (+.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) 2) (PI.f64)) (-.f64 (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))","fresh",7.743672311237507],["(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (/.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (-.f64 (/.f64 225/64 (pow.f64 x 12)) (pow.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 2))) (-.f64 (fma.f64 15/8 (pow.f64 x -6) -1) (*.f64 3/4 (pow.f64 x -4))))))","fresh",1.2912917988460322],["(*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 2) x) (pow.f64 (cbrt.f64 (exp.f64 x)) x)) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",2.0132014780861467],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (/.f64 1 (*.f64 x (sqrt.f64 (PI.f64)))))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.4076267459764895],["(pow.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) 3)","fresh",1.3621915612509787],["(*.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2)) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.3509246211880988],["(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (fma.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) 2) (*.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (fma.f64 3/4 (pow.f64 x -4) 1)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))","fresh",1.1850476738799087],["(*.f64 (/.f64 (*.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (sqrt.f64 (pow.f64 (exp.f64 x) x))) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.2185679391101714],["(*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) 2)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.4330864996368156],["(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (fma.f64 (sqrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) (sqrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) -1))))))","fresh",1.206717806899462],["(*.f64 (/.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 x)) x) (pow.f64 (sqrt.f64 (exp.f64 x)) x)) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.7909454219629624],["(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) (sqrt.f64 (PI.f64))) (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","fresh",1.4226507034731068]],"compiler":[[53,36],[37,23],[41,29],[42,29],[140,71],[46,33],[40,26],[35,26],[50,39],[41,31],[44,30],[43,27],[50,39],[73,44],[99,54],[51,28],[46,27],[139,73],[51,39],[40,27],[41,27],[31,25],[42,28],[53,30],[40,26],[44,25],[48,37],[38,24],[39,25]],"count":[[250,29]],"kept":[{"done":[0,0],"fresh":[25,16],"new":[224,13],"picked":[1,0]}],"min-error":[0.25833023132132105],"time":81.369873046875,"type":"prune"},{"accuracy":[1.1047468559307978],"baseline":[1.104746855930797],"branch":[["x",1.1047468559307978,1],["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (exp.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)))) (+.f64 (+.f64 (+.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 2) (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))) (*.f64 (/.f64 3 4) (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))) (*.f64 (/.f64 15 8) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))))",1.1047468559307978,1],["(fabs.f64 x)",1.1047468559307978,1]],"compiler":[[2,1],[104,69],[3,2],[2733,1552]],"count":[[60,1]],"inputs":[["(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (fma.f64 (pow.f64 (cbrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) 2) (*.f64 (cbrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (/.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 x) x) (fma.f64 3/4 (pow.f64 x -4) (fma.f64 15/8 (pow.f64 x -6) 1))) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 2) x) (pow.f64 (cbrt.f64 (exp.f64 x)) x)) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (/.f64 3/4 (pow.f64 x 4)))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (fma.f64 (-.f64 1 (/.f64 9/16 (pow.f64 x 8))) (/.f64 1 (+.f64 1 (*.f64 -3/4 (pow.f64 x -4)))) -1))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (*.f64 (/.f64 (-.f64 (exp.f64 (log1p.f64 (pow.f64 (exp.f64 x) x))) 1) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (/.f64 3/4 (pow.f64 x 4)))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (*.f64 (/.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 x)) x) (pow.f64 (sqrt.f64 (exp.f64 x)) x)) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (/.f64 3/4 (pow.f64 x 4)))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (fma.f64 15/8 (pow.f64 x -6) 1)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 3/4 (pow.f64 x -4))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (fma.f64 (pow.f64 (cbrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) 2) (cbrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) -1))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (fma.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x)))) (cbrt.f64 (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x))))) (cbrt.f64 (/.f64 (fma.f64 3/4 (pow.f64 x -4) 1) (/.f64 x (pow.f64 (exp.f64 x) x)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (fma.f64 3/4 (pow.f64 x -4) 1)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (/.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (-.f64 (/.f64 225/64 (pow.f64 x 12)) (pow.f64 (fma.f64 3/4 (pow.f64 x -4) 1) 2))) (-.f64 (fma.f64 15/8 (pow.f64 x -6) -1) (*.f64 3/4 (pow.f64 x -4))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (fma.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) 2) (*.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) x)) (fma.f64 3/4 (pow.f64 x -4) 1)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (*.f64 15/8 (pow.f64 x -6))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (fma.f64 (sqrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) (sqrt.f64 (fma.f64 3/4 (pow.f64 x -4) 1)) -1))))))","(/.f64 (-.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) 2) (PI.f64)) (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (-.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))","(/.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) 3) (pow.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 3)) (+.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) 2) (PI.f64)) (-.f64 (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))","(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (-.f64 (exp.f64 (log1p.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 1))))","(pow.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) 3)","(pow.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) 3) 1/3)","(*.f64 (*.f64 (/.f64 1 (expm1.f64 (log1p.f64 (sqrt.f64 (PI.f64))))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(-.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (sqrt.f64 (PI.f64)) x)) (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))) 1)","(*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 2) x) (pow.f64 (cbrt.f64 (exp.f64 x)) x)) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(*.f64 (/.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 x)) x) (pow.f64 (sqrt.f64 (exp.f64 x)) x)) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(*.f64 (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (+.f64 x x))) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(pow.f64 (pow.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64)))) 3) 1/3)","(/.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (*.f64 (/.f64 (sqrt.f64 (PI.f64)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))","(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) (sqrt.f64 (*.f64 x (sqrt.f64 (PI.f64))))) (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (sqrt.f64 (*.f64 x (sqrt.f64 (PI.f64)))))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(*.f64 (/.f64 (-.f64 (exp.f64 (log1p.f64 (pow.f64 (exp.f64 x) x))) 1) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(/.f64 1 (/.f64 (*.f64 x (sqrt.f64 (PI.f64))) (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 x) x) (pow.f64 x 3))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (/.f64 3/4 (pow.f64 x 4)))))))","(*.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) (*.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (/.f64 1 (*.f64 x (sqrt.f64 (PI.f64)))))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (+.f64 1 (*.f64 15/8 (pow.f64 x -6)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))","(*.f64 (/.f64 (*.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (sqrt.f64 (pow.f64 (exp.f64 x) x))) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) 2)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(*.f64 (*.f64 (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (sqrt.f64 (PI.f64))) (/.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(*.f64 (pow.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 3) 1/3) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(*.f64 (/.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2)) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(*.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) (sqrt.f64 (PI.f64))) (/.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(pow.f64 (pow.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (*.f64 x (sqrt.f64 (PI.f64)))) 3) 1/3)","(/.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 3) (pow.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) 3)) (+.f64 (pow.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) 2) (-.f64 (*.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64)))) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))","(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (expm1.f64 (log1p.f64 (sqrt.f64 (PI.f64)))))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (sqrt.f64 (PI.f64))))","(/.f64 (-.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2)) (*.f64 (/.f64 x (/.f64 (pow.f64 (exp.f64 x) x) (sqrt.f64 (PI.f64)))) (-.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))","(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (cbrt.f64 (pow.f64 (PI.f64) 3/2)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(*.f64 (/.f64 (-.f64 (exp.f64 (log1p.f64 (pow.f64 (exp.f64 x) x))) 1) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(/.f64 (*.f64 (+.f64 1 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (sqrt.f64 (PI.f64)))","(/.f64 (*.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) (/.f64 (pow.f64 (exp.f64 x) x) x)) (*.f64 (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (sqrt.f64 (PI.f64))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) x) x) (+.f64 (/.f64 15/8 (pow.f64 x 6)) (+.f64 1 (+.f64 (/.f64 3/4 (pow.f64 x 4)) (/.f64 1/2 (*.f64 x x)))))))","(/.f64 (*.f64 (+.f64 1 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 3)) (pow.f64 (exp.f64 x) x)) (*.f64 (+.f64 1 (-.f64 (pow.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))) 2) (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))) (*.f64 x (sqrt.f64 (PI.f64)))))","(+.f64 (*.f64 (+.f64 1 (/.f64 15/8 (pow.f64 x 6))) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))) (*.f64 (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)) (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 x (sqrt.f64 (PI.f64))))))","(*.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (exp.f64 x)) 2) x) (pow.f64 (cbrt.f64 (exp.f64 x)) x)) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(/.f64 (/.f64 (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))))) (cbrt.f64 (*.f64 (PI.f64) (*.f64 x x)))) (cbrt.f64 (*.f64 x (sqrt.f64 (PI.f64)))))","(/.f64 1 (/.f64 (*.f64 x (sqrt.f64 (PI.f64))) (exp.f64 (+.f64 (*.f64 x x) (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2))))))))","(exp.f64 (+.f64 (log1p.f64 (fma.f64 15/8 (pow.f64 x -6) (*.f64 (fma.f64 3/4 (pow.f64 x -2) 1/2) (pow.f64 x -2)))) (-.f64 (*.f64 x x) (log.f64 (*.f64 x (sqrt.f64 (PI.f64)))))))","(+.f64 (*.f64 3/4 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 4))) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (fabs.f64 x)) (sqrt.f64 (/.f64 1 (PI.f64)))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 2))) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 15/8 (*.f64 (/.f64 (exp.f64 (pow.f64 x 2)) (*.f64 (fabs.f64 x) (pow.f64 x 6))) (sqrt.f64 (/.f64 1 (PI.f64))))))))","(*.f64 (/.f64 (*.f64 (pow.f64 (sqrt.f64 (exp.f64 x)) x) (pow.f64 (sqrt.f64 (exp.f64 x)) x)) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(*.f64 (/.f64 (*.f64 (sqrt.f64 (pow.f64 (exp.f64 x) x)) (sqrt.f64 (pow.f64 (exp.f64 x) x))) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(*.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) x)) 2) (cbrt.f64 (pow.f64 (exp.f64 x) x))) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(*.f64 (/.f64 (pow.f64 (exp.f64 x) x) (*.f64 (fabs.f64 x) (sqrt.f64 (PI.f64)))) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))","(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (exp.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)))) (+.f64 (+.f64 (+.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 2) (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))) (*.f64 (/.f64 3 4) (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))) (*.f64 (/.f64 15 8) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))))"]],"link":["."],"name":["Jmat.Real.erfi, branch x greater than or equal to 5"],"oracle":[9.718332820144026],"outputs":[["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))"]],"time":105.0400390625,"times":[["x",18.06201171875],["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (exp.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)))) (+.f64 (+.f64 (+.f64 (/.f64 1 (fabs.f64 x)) (*.f64 (/.f64 1 2) (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))) (*.f64 (/.f64 3 4) (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))) (*.f64 (/.f64 15 8) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (/.f64 1 (fabs.f64 x)) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))) (/.f64 1 (fabs.f64 x))))))",20.484130859375],["(fabs.f64 x)",21.5859375]],"type":"regimes"},{"compiler":[[32,23]],"egraph":[[1,30,48,9.3333e-5],[0,23,48,5.4458e-5]],"inputs":[["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (/.f64 (pow.f64 (exp.f64 x) x) x)) (+.f64 1 (+.f64 (/.f64 15/8 (pow.f64 x 6)) (/.f64 (+.f64 1/2 (/.f64 3/4 (*.f64 x x))) (*.f64 x x)))))"]],"stop":[["fuel",1],["saturated",1]],"time":9.681884765625,"type":"simplify"},{"time":0.031982421875,"type":"soundness"},{"compiler":[[32,23]],"remove-preprocessing":[[]],"time":15.609130859375,"type":"end"}]