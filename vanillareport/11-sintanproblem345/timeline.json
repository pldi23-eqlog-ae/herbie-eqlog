[{"compiler":[[11,7]],"method":["search"],"sampling":[[12,0.0,0.99951171875,0.00048828125],[11,0.0,0.99951171875,0.00048828125],[10,0.0,0.99951171875,0.00048828125],[9,0.0,0.99951171875,0.00048828125],[8,0.0,0.99951171875,0.00048828125],[7,0.0,0.99951171875,0.00048828125],[6,0.0,0.99951171875,0.00048828125],[5,0.0,0.99951171875,0.00048828125],[4,0.0,0.99951171875,0.00048828125],[3,0.0,0.99951171875,0.00048828125],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":214.925048828125,"type":"analyze"},{"outcomes":[["body",4096,"valid",93.9052734375,107],["body",512,"valid",213.605224609375,1484],["body",1024,"valid",913.726318359375,3143],["body",256,"valid",110.668701171875,1472],["body",2048,"valid",2951.300537109375,2050]],"time":4291.345947265625,"type":"sample"},{"compiler":[[10,6]],"egraph":[[0,1,1,1.458e-6],[16,3922,14,0.08243491500000001],[15,3922,14,0.070470207],[14,3918,14,0.059926582000000006],[13,3908,14,0.049472207000000004],[12,3881,14,0.043084874],[11,3752,14,0.036784624],[10,3387,14,0.029778415000000003],[9,2566,14,0.022318624000000002],[8,1413,14,0.012763249],[7,546,14,0.005722499],[6,260,14,0.002627333],[5,130,14,0.001361375],[4,75,14,0.000765417],[3,41,14,0.00044258300000000003],[2,24,14,0.00024029200000000002],[1,14,14,0.00014304200000000002],[0,7,14,6.4542e-5]],"inputs":[["0"],["(/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))","(/.f64 (-.f64 (sin.f64 x) x) (-.f64 (tan.f64 x) x))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":106.72998046875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[16,3922,14,0.080562583],[15,3922,14,0.068934999],[14,3918,14,0.058508332999999996],[13,3908,14,0.048287040999999996],[12,3881,14,0.041875708],[11,3752,14,0.035553541],[10,3387,14,0.028611750000000002],[9,2566,14,0.02129175],[8,1413,14,0.012234542000000001],[7,546,14,0.005389542],[6,260,14,0.002371167],[5,130,14,0.001177834],[4,75,14,0.000647709],[3,41,14,0.00037183400000000003],[2,24,14,0.000206209],[1,14,14,0.000111667],[0,7,14,4.7792e-5]],"inputs":[["(/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))","(/.f64 (-.f64 (sin.f64 x) x) (-.f64 (tan.f64 x) x))"]],"stop":[["saturated",1]],"time":92.136962890625,"type":"simplify"},{"compiler":[[19,9]],"time":0.314208984375,"type":"eval"},{"alts":[["(/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))","next",30.06091553067967]],"compiler":[[10,6],[10,6]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[30.06091553067967],"time":0.81689453125,"type":"prune"},{"compiler":[[23,6]],"locations":[["(/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))",0.015625,true],["(tan.f64 x)",0.27476503907376804,true],["(-.f64 x (tan.f64 x))",1.0314596239921074,true],["(-.f64 x (sin.f64 x))",1.0406686178732973,true]],"time":6.001953125,"type":"localize"},{"count":[[4,48]],"series":[["(/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))","x","-inf",0.546142578125],["(/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))","x","inf",0.654052734375],["(/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))","x","0",0.29296875],["(tan.f64 x)","x","-inf",0.23388671875],["(tan.f64 x)","x","inf",0.259033203125],["(tan.f64 x)","x","0",0.182861328125],["(-.f64 x (tan.f64 x))","x","-inf",0.321044921875],["(-.f64 x (tan.f64 x))","x","inf",0.39892578125],["(-.f64 x (tan.f64 x))","x","0",0.33984375],["(-.f64 x (sin.f64 x))","x","-inf",0.19677734375],["(-.f64 x (sin.f64 x))","x","inf",0.300048828125],["(-.f64 x (sin.f64 x))","x","0",0.631103515625]],"time":4.52197265625,"type":"series"},{"count":[[4,449]],"egraph":[[2,2788,29,0.024615541999999997],[1,170,29,0.003369709],[0,7,29,0.000187209]],"inputs":[["(-.f64 x (sin.f64 x))","(-.f64 x (tan.f64 x))","(tan.f64 x)","(/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (neg.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (neg.f64 (sin.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (sin.f64 x)) (fma.f64 (neg.f64 (sin.f64 x)) 1 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (sin.f64 x)) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 x))) (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (sin.f64 x)) (+.f64 (neg.f64 (sin.f64 x)) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (sin.f64 x)) (fma.f64 -1 (sin.f64 x) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (sin.f64 x)) (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2)) (cbrt.f64 (sin.f64 x)) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (sin.f64 x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 x (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (-.f64 x (sin.f64 x)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (-.f64 x (sin.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 x (sin.f64 x))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 x (sin.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x (sin.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 x (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) (pow.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) 2) (cbrt.f64 (-.f64 x (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x (sin.f64 x))) (sqrt.f64 (-.f64 x (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 x 3) (pow.f64 (sin.f64 x) 3)) (/.f64 1 (fma.f64 x x (*.f64 (sin.f64 x) (+.f64 x (sin.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 x x) (pow.f64 (sin.f64 x) 2)) (/.f64 1 (+.f64 x (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (sin.f64 x))) (-.f64 (sqrt.f64 x) (sqrt.f64 (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 x x (*.f64 (sin.f64 x) (+.f64 x (sin.f64 x)))) (-.f64 (pow.f64 x 3) (pow.f64 (sin.f64 x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 x (sin.f64 x)) (-.f64 (*.f64 x x) (pow.f64 (sin.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x 3) (pow.f64 (sin.f64 x) 3)) (fma.f64 x x (*.f64 (sin.f64 x) (+.f64 x (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (pow.f64 (sin.f64 x) 2)) (+.f64 x (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 x 3) (pow.f64 (sin.f64 x) 3))) (neg.f64 (fma.f64 x x (*.f64 (sin.f64 x) (+.f64 x (sin.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 x x) (pow.f64 (sin.f64 x) 2))) (neg.f64 (+.f64 x (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (neg.f64 (sin.f64 x)) 3)) (fma.f64 x x (-.f64 (pow.f64 (neg.f64 (sin.f64 x)) 2) (*.f64 x (neg.f64 (sin.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (pow.f64 (neg.f64 (sin.f64 x)) 2)) (-.f64 x (neg.f64 (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 x (sin.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x (sin.f64 x)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x (sin.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 x (sin.f64 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 x x (*.f64 (sin.f64 x) (+.f64 x (sin.f64 x)))) (-.f64 (pow.f64 x 3) (pow.f64 (sin.f64 x) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x (sin.f64 x)) (-.f64 (*.f64 x x) (pow.f64 (sin.f64 x) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 x (sin.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 x (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 x (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (neg.f64 (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (/.f64 1 (exp.f64 (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (/.f64 1 (exp.f64 (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (sin.f64 x))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (sin.f64 x))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (sin.f64 x))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (sin.f64 x))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 x (sin.f64 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 x (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 x (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 x (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 x (sin.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (neg.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (neg.f64 (sin.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (sin.f64 x)) 1 (fma.f64 (neg.f64 (sin.f64 x)) 1 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (sin.f64 x)) 1 (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 x))) (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (sin.f64 x)) 1 (+.f64 (neg.f64 (sin.f64 x)) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (neg.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (neg.f64 (sin.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (sin.f64 x)) (fma.f64 (neg.f64 (sin.f64 x)) 1 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (sin.f64 x)) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 x))) (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (sin.f64 x)) (+.f64 (neg.f64 (sin.f64 x)) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (sin.f64 x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (neg.f64 (cbrt.f64 (sin.f64 x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 (neg.f64 (sin.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 (neg.f64 (sin.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) (pow.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) 2) (fma.f64 (neg.f64 (sin.f64 x)) 1 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) (pow.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) 2) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 x))) (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) (pow.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) 2) (+.f64 (neg.f64 (sin.f64 x)) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) 2) (cbrt.f64 (-.f64 x (sin.f64 x))) (fma.f64 (neg.f64 (sin.f64 x)) 1 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) 2) (cbrt.f64 (-.f64 x (sin.f64 x))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 x))) (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) 2) (cbrt.f64 (-.f64 x (sin.f64 x))) (+.f64 (neg.f64 (sin.f64 x)) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sin.f64 x)) (neg.f64 (sqrt.f64 (sin.f64 x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (neg.f64 (sin.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (sin.f64 x))) (sqrt.f64 (-.f64 x (sin.f64 x))) (fma.f64 (neg.f64 (sin.f64 x)) 1 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (sin.f64 x))) (sqrt.f64 (-.f64 x (sin.f64 x))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 x))) (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (sin.f64 x))) (sqrt.f64 (-.f64 x (sin.f64 x))) (+.f64 (neg.f64 (sin.f64 x)) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 3) (pow.f64 (sin.f64 x) 3)) (/.f64 1 (fma.f64 x x (*.f64 (sin.f64 x) (+.f64 x (sin.f64 x))))) (fma.f64 (neg.f64 (sin.f64 x)) 1 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 3) (pow.f64 (sin.f64 x) 3)) (/.f64 1 (fma.f64 x x (*.f64 (sin.f64 x) (+.f64 x (sin.f64 x))))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 x))) (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 3) (pow.f64 (sin.f64 x) 3)) (/.f64 1 (fma.f64 x x (*.f64 (sin.f64 x) (+.f64 x (sin.f64 x))))) (+.f64 (neg.f64 (sin.f64 x)) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) (pow.f64 (sin.f64 x) 2)) (/.f64 1 (+.f64 x (sin.f64 x))) (fma.f64 (neg.f64 (sin.f64 x)) 1 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) (pow.f64 (sin.f64 x) 2)) (/.f64 1 (+.f64 x (sin.f64 x))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 x))) (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) (pow.f64 (sin.f64 x) 2)) (/.f64 1 (+.f64 x (sin.f64 x))) (+.f64 (neg.f64 (sin.f64 x)) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (neg.f64 (sin.f64 x))) 2) (cbrt.f64 (neg.f64 (sin.f64 x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (sin.f64 x))) (sqrt.f64 (neg.f64 (sin.f64 x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (sin.f64 x))) (sqrt.f64 (sin.f64 x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (sin.f64 x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (sin.f64 x))) (-.f64 (sqrt.f64 x) (sqrt.f64 (sin.f64 x))) (fma.f64 (neg.f64 (sin.f64 x)) 1 (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (sin.f64 x))) (-.f64 (sqrt.f64 x) (sqrt.f64 (sin.f64 x))) (fma.f64 (neg.f64 (cbrt.f64 (sin.f64 x))) (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (sin.f64 x))) (-.f64 (sqrt.f64 x) (sqrt.f64 (sin.f64 x))) (+.f64 (neg.f64 (sin.f64 x)) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2)) (cbrt.f64 (sin.f64 x)) x)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (neg.f64 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (neg.f64 (tan.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (tan.f64 x)) (fma.f64 (neg.f64 (tan.f64 x)) 1 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (tan.f64 x)) (fma.f64 (neg.f64 (cbrt.f64 (tan.f64 x))) (pow.f64 (cbrt.f64 (tan.f64 x)) 2) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (tan.f64 x)) (+.f64 (neg.f64 (tan.f64 x)) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (tan.f64 x)) (fma.f64 -1 (tan.f64 x) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 x (tan.f64 x)) (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (tan.f64 x)) 2)) (cbrt.f64 (tan.f64 x)) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (tan.f64 x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 x (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x 1 (neg.f64 (*.f64 (/.f64 1 (cos.f64 x)) (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (cos.f64 x))) (sin.f64 x) (*.f64 (/.f64 1 (cos.f64 x)) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 x (neg.f64 (*.f64 (/.f64 1 (cos.f64 x)) (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (cos.f64 x))) (sin.f64 x) (*.f64 (/.f64 1 (cos.f64 x)) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (*.f64 (/.f64 1 (cos.f64 x)) (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (cos.f64 x))) (sin.f64 x) (*.f64 (/.f64 1 (cos.f64 x)) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (*.f64 (/.f64 1 (cos.f64 x)) (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (cos.f64 x))) (sin.f64 x) (*.f64 (/.f64 1 (cos.f64 x)) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (*.f64 (/.f64 1 (cos.f64 x)) (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (cos.f64 x))) (sin.f64 x) (*.f64 (/.f64 1 (cos.f64 x)) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (-.f64 x (tan.f64 x)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (-.f64 x (tan.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 x (tan.f64 x))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 x (tan.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x (tan.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 x (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2) (cbrt.f64 (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x (tan.f64 x))) (sqrt.f64 (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3)) (/.f64 1 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2)) (/.f64 1 (+.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 x))) (-.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 x (tan.f64 x)) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3)) (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2)) (+.f64 x (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (neg.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (neg.f64 (+.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (neg.f64 (tan.f64 x)) 3)) (fma.f64 x x (-.f64 (pow.f64 (neg.f64 (tan.f64 x)) 2) (*.f64 x (neg.f64 (tan.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (pow.f64 (neg.f64 (tan.f64 x)) 2)) (-.f64 x (neg.f64 (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 x (tan.f64 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x (tan.f64 x)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x (tan.f64 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 x (tan.f64 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x (tan.f64 x)) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 x (tan.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (neg.f64 (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (/.f64 1 (exp.f64 (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (/.f64 1 (exp.f64 (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (tan.f64 x))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (tan.f64 x))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (tan.f64 x))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (tan.f64 x))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 x (tan.f64 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (neg.f64 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (neg.f64 (tan.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (tan.f64 x)) 1 (fma.f64 (neg.f64 (tan.f64 x)) 1 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (tan.f64 x)) 1 (fma.f64 (neg.f64 (cbrt.f64 (tan.f64 x))) (pow.f64 (cbrt.f64 (tan.f64 x)) 2) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (tan.f64 x)) 1 (+.f64 (neg.f64 (tan.f64 x)) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (neg.f64 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (neg.f64 (tan.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (tan.f64 x)) (fma.f64 (neg.f64 (tan.f64 x)) 1 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (tan.f64 x)) (fma.f64 (neg.f64 (cbrt.f64 (tan.f64 x))) (pow.f64 (cbrt.f64 (tan.f64 x)) 2) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 x (tan.f64 x)) (+.f64 (neg.f64 (tan.f64 x)) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (tan.f64 x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2) (fma.f64 (neg.f64 (tan.f64 x)) 1 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2) (fma.f64 (neg.f64 (cbrt.f64 (tan.f64 x))) (pow.f64 (cbrt.f64 (tan.f64 x)) 2) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2) (+.f64 (neg.f64 (tan.f64 x)) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2) (cbrt.f64 (-.f64 x (tan.f64 x))) (fma.f64 (neg.f64 (tan.f64 x)) 1 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2) (cbrt.f64 (-.f64 x (tan.f64 x))) (fma.f64 (neg.f64 (cbrt.f64 (tan.f64 x))) (pow.f64 (cbrt.f64 (tan.f64 x)) 2) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2) (cbrt.f64 (-.f64 x (tan.f64 x))) (+.f64 (neg.f64 (tan.f64 x)) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (tan.f64 x)) 2) (neg.f64 (cbrt.f64 (tan.f64 x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (neg.f64 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 (neg.f64 (tan.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (neg.f64 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 (neg.f64 (tan.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (tan.f64 x))) (sqrt.f64 (-.f64 x (tan.f64 x))) (fma.f64 (neg.f64 (tan.f64 x)) 1 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (tan.f64 x))) (sqrt.f64 (-.f64 x (tan.f64 x))) (fma.f64 (neg.f64 (cbrt.f64 (tan.f64 x))) (pow.f64 (cbrt.f64 (tan.f64 x)) 2) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 x (tan.f64 x))) (sqrt.f64 (-.f64 x (tan.f64 x))) (+.f64 (neg.f64 (tan.f64 x)) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (tan.f64 x)) (neg.f64 (sqrt.f64 (tan.f64 x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (neg.f64 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (neg.f64 (tan.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3)) (/.f64 1 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x))))) (fma.f64 (neg.f64 (tan.f64 x)) 1 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3)) (/.f64 1 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x))))) (fma.f64 (neg.f64 (cbrt.f64 (tan.f64 x))) (pow.f64 (cbrt.f64 (tan.f64 x)) 2) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3)) (/.f64 1 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x))))) (+.f64 (neg.f64 (tan.f64 x)) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2)) (/.f64 1 (+.f64 x (tan.f64 x))) (fma.f64 (neg.f64 (tan.f64 x)) 1 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2)) (/.f64 1 (+.f64 x (tan.f64 x))) (fma.f64 (neg.f64 (cbrt.f64 (tan.f64 x))) (pow.f64 (cbrt.f64 (tan.f64 x)) 2) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2)) (/.f64 1 (+.f64 x (tan.f64 x))) (+.f64 (neg.f64 (tan.f64 x)) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (neg.f64 (tan.f64 x))) 2) (cbrt.f64 (neg.f64 (tan.f64 x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (tan.f64 x))) (sqrt.f64 (neg.f64 (tan.f64 x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (tan.f64 x))) (sqrt.f64 (tan.f64 x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (tan.f64 x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 x))) (-.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 x))) (fma.f64 (neg.f64 (tan.f64 x)) 1 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 x))) (-.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 x))) (fma.f64 (neg.f64 (cbrt.f64 (tan.f64 x))) (pow.f64 (cbrt.f64 (tan.f64 x)) 2) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 x))) (-.f64 (sqrt.f64 x) (sqrt.f64 (tan.f64 x))) (+.f64 (neg.f64 (tan.f64 x)) (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (tan.f64 x)) 2)) (cbrt.f64 (tan.f64 x)) x)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (tan.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (tan.f64 x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (tan.f64 x)))) (log.f64 (sqrt.f64 (exp.f64 (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (tan.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 x) (/.f64 1 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (tan.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (tan.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (tan.f64 x)) (pow.f64 (cbrt.f64 (tan.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (tan.f64 x)) 2) (cbrt.f64 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (tan.f64 x)) (sqrt.f64 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 x) (cos.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cos.f64 x) (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (/.f64 (cos.f64 x) (cbrt.f64 (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (sin.f64 x)) (/.f64 (cos.f64 x) (sqrt.f64 (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 x)) (neg.f64 (cos.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (tan.f64 x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (tan.f64 x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (tan.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (tan.f64 x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cos.f64 x) (sin.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (tan.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (tan.f64 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (tan.f64 x)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (sqrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (sqrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 x (tan.f64 x))) (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 x (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 x (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)) (neg.f64 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 1 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 1 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 1 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 1 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 1 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 1 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 x (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 1 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 1 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 1 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 x (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 1 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 1 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 1 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 1 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 1 (*.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 x (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 x (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (*.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 x (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 x (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 x (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 x (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)) (neg.f64 (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 x (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 x (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) 1) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) 1) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) 1) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) 1) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) 1) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) 1) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 x (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) 1) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) 1) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) 1) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 x (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) 1) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) 1) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) 1) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) 1) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) 1) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sqrt.f64 (sin.f64 x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 x (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 x (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 x (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 x (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 x (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 x (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x))))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x))))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3)))))) (fma.f64 (neg.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x))))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3)))))) (fma.f64 (neg.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x))))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3)))))) (fma.f64 (neg.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x))))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3)))))) (fma.f64 (neg.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x))))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3)))))) (fma.f64 (neg.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x))))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3)))))) (fma.f64 (neg.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x))))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 x (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3)))))) (fma.f64 (neg.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x))))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3)))))) (fma.f64 (neg.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x))))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3)))))) (fma.f64 (neg.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x))))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 x (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3)))))) (fma.f64 (neg.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x))))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3)))))) (fma.f64 (neg.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x))))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3)))))) (fma.f64 (neg.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x))))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3)))))) (fma.f64 (neg.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x))))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)) (neg.f64 (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3)))))) (fma.f64 (neg.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x))))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (*.f64 (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 1 (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2)))))) (fma.f64 (neg.f64 (+.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 x (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2)))))) (fma.f64 (neg.f64 (+.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2)))))) (fma.f64 (neg.f64 (+.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2)))))) (fma.f64 (neg.f64 (+.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2)))))) (fma.f64 (neg.f64 (+.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2)))))) (fma.f64 (neg.f64 (+.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 x (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2)))))) (fma.f64 (neg.f64 (+.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2)))))) (fma.f64 (neg.f64 (+.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2)))))) (fma.f64 (neg.f64 (+.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 x (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2)))))) (fma.f64 (neg.f64 (+.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2)))))) (fma.f64 (neg.f64 (+.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2)))))) (fma.f64 (neg.f64 (+.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (neg.f64 (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2)))))) (fma.f64 (neg.f64 (+.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)) (neg.f64 (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2)))))) (fma.f64 (neg.f64 (+.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (*.f64 (+.f64 x (tan.f64 x)) (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x (sin.f64 x)) (/.f64 1 (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) 2) (*.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) (/.f64 1 (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x (sin.f64 x))) (*.f64 (sqrt.f64 (-.f64 x (sin.f64 x))) (/.f64 1 (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 x (sin.f64 x))) (/.f64 1 (neg.f64 (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (-.f64 x (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (-.f64 x (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (-.f64 x (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) 2) 1) (/.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 x (sin.f64 x))) 1) (/.f64 (sqrt.f64 (-.f64 x (sin.f64 x))) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 x (sin.f64 x))) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (sqrt.f64 (-.f64 x (sin.f64 x))) (cbrt.f64 (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (cbrt.f64 (-.f64 x (sin.f64 x))) (sqrt.f64 (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x (tan.f64 x)) (-.f64 x (sin.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (-.f64 x (sin.f64 x)) 3) (pow.f64 (-.f64 x (tan.f64 x)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 x (tan.f64 x)) (-.f64 x (sin.f64 x))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 x (sin.f64 x)) (neg.f64 (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 x (sin.f64 x)) 3) (pow.f64 (-.f64 x (tan.f64 x)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (-.f64 x (tan.f64 x))) (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (-.f64 x (tan.f64 x))) (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 x (tan.f64 x))) (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 x (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 x (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 x x (*.f64 (tan.f64 x) (+.f64 x (tan.f64 x)))) (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)) (neg.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))))"]],"rules":[["egg-rr",227],["egg-rr",29],["egg-rr",99],["egg-rr",94]],"stop":[["node limit",1]],"time":101.504150390625,"type":"rewrite"},{"count":[[497,492]],"egraph":[[3,5043,678,0.024274501],[2,1034,678,0.009336584],[1,318,712,0.002223834],[0,108,788,0.000547875]],"inputs":[["(*.f64 1/6 (pow.f64 x 3))","(+.f64 (*.f64 1/6 (pow.f64 x 3)) (*.f64 -1/120 (pow.f64 x 5)))","(+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 (*.f64 1/5040 (pow.f64 x 7)) (*.f64 -1/120 (pow.f64 x 5))))","(+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 (*.f64 -1/362880 (pow.f64 x 9)) (+.f64 (*.f64 1/5040 (pow.f64 x 7)) (*.f64 -1/120 (pow.f64 x 5)))))","x","(+.f64 (*.f64 -1 (sin.f64 x)) x)","(+.f64 (*.f64 -1 (sin.f64 x)) x)","(+.f64 (*.f64 -1 (sin.f64 x)) x)","x","(+.f64 (*.f64 -1 (sin.f64 x)) x)","(+.f64 (*.f64 -1 (sin.f64 x)) x)","(+.f64 (*.f64 -1 (sin.f64 x)) x)","(*.f64 -1/3 (pow.f64 x 3))","(+.f64 (*.f64 -1/3 (pow.f64 x 3)) (*.f64 -2/15 (pow.f64 x 5)))","(+.f64 (*.f64 -17/315 (pow.f64 x 7)) (+.f64 (*.f64 -1/3 (pow.f64 x 3)) (*.f64 -2/15 (pow.f64 x 5))))","(+.f64 (*.f64 -17/315 (pow.f64 x 7)) (+.f64 (*.f64 -62/2835 (pow.f64 x 9)) (+.f64 (*.f64 -1/3 (pow.f64 x 3)) (*.f64 -2/15 (pow.f64 x 5)))))","x","(+.f64 (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x))) x)","(+.f64 (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x))) x)","(+.f64 (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x))) x)","x","(+.f64 (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x))) x)","(+.f64 (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x))) x)","(+.f64 (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x))) x)","x","(+.f64 (*.f64 1/3 (pow.f64 x 3)) x)","(+.f64 (*.f64 1/3 (pow.f64 x 3)) (+.f64 (*.f64 2/15 (pow.f64 x 5)) x))","(+.f64 (*.f64 17/315 (pow.f64 x 7)) (+.f64 (*.f64 1/3 (pow.f64 x 3)) (+.f64 (*.f64 2/15 (pow.f64 x 5)) x)))","(/.f64 (sin.f64 x) (cos.f64 x))","(/.f64 (sin.f64 x) (cos.f64 x))","(/.f64 (sin.f64 x) (cos.f64 x))","(/.f64 (sin.f64 x) (cos.f64 x))","(/.f64 (sin.f64 x) (cos.f64 x))","(/.f64 (sin.f64 x) (cos.f64 x))","(/.f64 (sin.f64 x) (cos.f64 x))","(/.f64 (sin.f64 x) (cos.f64 x))","-1/2","(-.f64 (*.f64 9/40 (pow.f64 x 2)) 1/2)","(-.f64 (+.f64 (*.f64 9/40 (pow.f64 x 2)) (*.f64 -27/2800 (pow.f64 x 4))) 1/2)","(-.f64 (+.f64 (*.f64 9/40 (pow.f64 x 2)) (+.f64 (*.f64 -27/2800 (pow.f64 x 4)) (*.f64 27/112000 (pow.f64 x 6)))) 1/2)","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 (sin.f64 x) x))) (*.f64 -1 (/.f64 (sin.f64 x) (*.f64 (cos.f64 x) x))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (sin.f64 x) x)) (/.f64 (*.f64 (sin.f64 x) (-.f64 (*.f64 -1 (sin.f64 x)) (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x))))) (*.f64 (cos.f64 x) (pow.f64 x 2))))) (*.f64 -1 (/.f64 (sin.f64 x) (*.f64 (cos.f64 x) x))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (*.f64 -1 (sin.f64 x)) (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x))))) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (sin.f64 x) x)) (/.f64 (*.f64 (sin.f64 x) (-.f64 (*.f64 -1 (sin.f64 x)) (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x))))) (*.f64 (cos.f64 x) (pow.f64 x 2)))))) (*.f64 -1 (/.f64 (sin.f64 x) (*.f64 (cos.f64 x) x))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 x) (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x)))) (*.f64 (cos.f64 x) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x)))) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3)))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 x) (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x)))) (*.f64 (cos.f64 x) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/6 (pow.f64 x 3))","(+.f64 (*.f64 1/6 (pow.f64 x 3)) (*.f64 -1/120 (pow.f64 x 5)))","(fma.f64 1/6 (pow.f64 x 3) (*.f64 -1/120 (pow.f64 x 5)))","(+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 (*.f64 1/5040 (pow.f64 x 7)) (*.f64 -1/120 (pow.f64 x 5))))","(fma.f64 1/6 (pow.f64 x 3) (fma.f64 1/5040 (pow.f64 x 7) (*.f64 -1/120 (pow.f64 x 5))))","(fma.f64 1/6 (pow.f64 x 3) (fma.f64 -1/120 (pow.f64 x 5) (*.f64 1/5040 (pow.f64 x 7))))","(+.f64 (*.f64 1/6 (pow.f64 x 3)) (+.f64 (*.f64 -1/362880 (pow.f64 x 9)) (+.f64 (*.f64 1/5040 (pow.f64 x 7)) (*.f64 -1/120 (pow.f64 x 5)))))","(fma.f64 1/6 (pow.f64 x 3) (fma.f64 -1/362880 (pow.f64 x 9) (fma.f64 1/5040 (pow.f64 x 7) (*.f64 -1/120 (pow.f64 x 5)))))","(fma.f64 1/6 (pow.f64 x 3) (fma.f64 -1/362880 (pow.f64 x 9) (fma.f64 -1/120 (pow.f64 x 5) (*.f64 1/5040 (pow.f64 x 7)))))","(fma.f64 1/6 (pow.f64 x 3) (fma.f64 -1/120 (pow.f64 x 5) (fma.f64 1/5040 (pow.f64 x 7) (*.f64 -1/362880 (pow.f64 x 9)))))","x","(+.f64 (*.f64 -1 (sin.f64 x)) x)","(fma.f64 -1 (sin.f64 x) x)","(-.f64 x (sin.f64 x))","(+.f64 (*.f64 -1 (sin.f64 x)) x)","(fma.f64 -1 (sin.f64 x) x)","(-.f64 x (sin.f64 x))","(+.f64 (*.f64 -1 (sin.f64 x)) x)","(fma.f64 -1 (sin.f64 x) x)","(-.f64 x (sin.f64 x))","x","(+.f64 (*.f64 -1 (sin.f64 x)) x)","(fma.f64 -1 (sin.f64 x) x)","(-.f64 x (sin.f64 x))","(+.f64 (*.f64 -1 (sin.f64 x)) x)","(fma.f64 -1 (sin.f64 x) x)","(-.f64 x (sin.f64 x))","(+.f64 (*.f64 -1 (sin.f64 x)) x)","(fma.f64 -1 (sin.f64 x) x)","(-.f64 x (sin.f64 x))","(*.f64 -1/3 (pow.f64 x 3))","(*.f64 (pow.f64 x 3) -1/3)","(+.f64 (*.f64 -1/3 (pow.f64 x 3)) (*.f64 -2/15 (pow.f64 x 5)))","(fma.f64 -1/3 (pow.f64 x 3) (*.f64 (pow.f64 x 5) -2/15))","(fma.f64 (pow.f64 x 3) -1/3 (*.f64 (pow.f64 x 5) -2/15))","(+.f64 (*.f64 -17/315 (pow.f64 x 7)) (+.f64 (*.f64 -1/3 (pow.f64 x 3)) (*.f64 -2/15 (pow.f64 x 5))))","(fma.f64 -17/315 (pow.f64 x 7) (fma.f64 -1/3 (pow.f64 x 3) (*.f64 (pow.f64 x 5) -2/15)))","(fma.f64 (pow.f64 x 7) -17/315 (fma.f64 (pow.f64 x 3) -1/3 (*.f64 (pow.f64 x 5) -2/15)))","(fma.f64 (pow.f64 x 3) -1/3 (fma.f64 (pow.f64 x 5) -2/15 (*.f64 (pow.f64 x 7) -17/315)))","(+.f64 (*.f64 -17/315 (pow.f64 x 7)) (+.f64 (*.f64 -62/2835 (pow.f64 x 9)) (+.f64 (*.f64 -1/3 (pow.f64 x 3)) (*.f64 -2/15 (pow.f64 x 5)))))","(fma.f64 -17/315 (pow.f64 x 7) (fma.f64 -62/2835 (pow.f64 x 9) (fma.f64 -1/3 (pow.f64 x 3) (*.f64 (pow.f64 x 5) -2/15))))","(fma.f64 (pow.f64 x 7) -17/315 (fma.f64 (pow.f64 x 9) -62/2835 (fma.f64 (pow.f64 x 3) -1/3 (*.f64 (pow.f64 x 5) -2/15))))","(fma.f64 (pow.f64 x 7) -17/315 (fma.f64 (pow.f64 x 5) -2/15 (fma.f64 (pow.f64 x 3) -1/3 (*.f64 (pow.f64 x 9) -62/2835))))","x","(+.f64 (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x))) x)","(fma.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x)) x)","(-.f64 x (/.f64 (sin.f64 x) (cos.f64 x)))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x))) x)","(fma.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x)) x)","(-.f64 x (/.f64 (sin.f64 x) (cos.f64 x)))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x))) x)","(fma.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x)) x)","(-.f64 x (/.f64 (sin.f64 x) (cos.f64 x)))","x","(+.f64 (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x))) x)","(fma.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x)) x)","(-.f64 x (/.f64 (sin.f64 x) (cos.f64 x)))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x))) x)","(fma.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x)) x)","(-.f64 x (/.f64 (sin.f64 x) (cos.f64 x)))","(+.f64 (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x))) x)","(fma.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x)) x)","(-.f64 x (/.f64 (sin.f64 x) (cos.f64 x)))","x","(+.f64 (*.f64 1/3 (pow.f64 x 3)) x)","(fma.f64 1/3 (pow.f64 x 3) x)","(fma.f64 (pow.f64 x 3) 1/3 x)","(+.f64 (*.f64 1/3 (pow.f64 x 3)) (+.f64 (*.f64 2/15 (pow.f64 x 5)) x))","(fma.f64 1/3 (pow.f64 x 3) (fma.f64 2/15 (pow.f64 x 5) x))","(fma.f64 (pow.f64 x 3) 1/3 (fma.f64 (pow.f64 x 5) 2/15 x))","(fma.f64 (pow.f64 x 5) 2/15 (fma.f64 (pow.f64 x 3) 1/3 x))","(+.f64 (*.f64 17/315 (pow.f64 x 7)) (+.f64 (*.f64 1/3 (pow.f64 x 3)) (+.f64 (*.f64 2/15 (pow.f64 x 5)) x)))","(fma.f64 17/315 (pow.f64 x 7) (fma.f64 1/3 (pow.f64 x 3) (fma.f64 2/15 (pow.f64 x 5) x)))","(fma.f64 (pow.f64 x 7) 17/315 (fma.f64 (pow.f64 x 3) 1/3 (fma.f64 (pow.f64 x 5) 2/15 x)))","(fma.f64 (pow.f64 x 7) 17/315 (fma.f64 (pow.f64 x 5) 2/15 (fma.f64 (pow.f64 x 3) 1/3 x)))","(fma.f64 (pow.f64 x 3) 1/3 (fma.f64 (pow.f64 x 7) 17/315 (fma.f64 (pow.f64 x 5) 2/15 x)))","(/.f64 (sin.f64 x) (cos.f64 x))","(/.f64 (sin.f64 x) (cos.f64 x))","(/.f64 (sin.f64 x) (cos.f64 x))","(/.f64 (sin.f64 x) (cos.f64 x))","(/.f64 (sin.f64 x) (cos.f64 x))","(/.f64 (sin.f64 x) (cos.f64 x))","(/.f64 (sin.f64 x) (cos.f64 x))","(/.f64 (sin.f64 x) (cos.f64 x))","-1/2","(-.f64 (*.f64 9/40 (pow.f64 x 2)) 1/2)","(fma.f64 9/40 (*.f64 x x) -1/2)","(fma.f64 x (*.f64 x 9/40) -1/2)","(-.f64 (+.f64 (*.f64 9/40 (pow.f64 x 2)) (*.f64 -27/2800 (pow.f64 x 4))) 1/2)","(+.f64 (fma.f64 9/40 (*.f64 x x) (*.f64 -27/2800 (pow.f64 x 4))) -1/2)","(fma.f64 9/40 (*.f64 x x) (fma.f64 -27/2800 (pow.f64 x 4) -1/2))","(fma.f64 x (*.f64 x 9/40) (fma.f64 -27/2800 (pow.f64 x 4) -1/2))","(-.f64 (+.f64 (*.f64 9/40 (pow.f64 x 2)) (+.f64 (*.f64 -27/2800 (pow.f64 x 4)) (*.f64 27/112000 (pow.f64 x 6)))) 1/2)","(+.f64 (fma.f64 9/40 (*.f64 x x) (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6)))) -1/2)","(fma.f64 x (*.f64 x 9/40) (fma.f64 -27/2800 (pow.f64 x 4) (fma.f64 27/112000 (pow.f64 x 6) -1/2)))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 (sin.f64 x) x))) (*.f64 -1 (/.f64 (sin.f64 x) (*.f64 (cos.f64 x) x))))","(-.f64 (+.f64 1 (/.f64 (neg.f64 (sin.f64 x)) x)) (/.f64 (neg.f64 (sin.f64 x)) (*.f64 x (cos.f64 x))))","(-.f64 1 (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x))","(+.f64 1 (/.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) x))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (sin.f64 x) x)) (/.f64 (*.f64 (sin.f64 x) (-.f64 (*.f64 -1 (sin.f64 x)) (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x))))) (*.f64 (cos.f64 x) (pow.f64 x 2))))) (*.f64 -1 (/.f64 (sin.f64 x) (*.f64 (cos.f64 x) x))))","(+.f64 1 (-.f64 (fma.f64 -1 (/.f64 (sin.f64 x) x) (*.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (/.f64 (*.f64 -1 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x)))) (*.f64 x x)))) (/.f64 (neg.f64 (sin.f64 x)) (*.f64 x (cos.f64 x)))))","(fma.f64 -1 (fma.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) (*.f64 x x)) (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x)) 1)","(+.f64 (-.f64 1 (/.f64 (sin.f64 x) x)) (*.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (-.f64 (/.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) (*.f64 x x)) (/.f64 -1 x))))","(+.f64 (-.f64 1 (/.f64 (sin.f64 x) x)) (*.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (+.f64 (/.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) (*.f64 x x)) (/.f64 1 x))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (*.f64 -1 (sin.f64 x)) (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x))))) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (sin.f64 x) x)) (/.f64 (*.f64 (sin.f64 x) (-.f64 (*.f64 -1 (sin.f64 x)) (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x))))) (*.f64 (cos.f64 x) (pow.f64 x 2)))))) (*.f64 -1 (/.f64 (sin.f64 x) (*.f64 (cos.f64 x) x))))","(+.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (pow.f64 (cos.f64 x) 2)) (/.f64 (*.f64 -1 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x)))) (pow.f64 x 3))) (+.f64 1 (-.f64 (fma.f64 -1 (/.f64 (sin.f64 x) x) (*.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (/.f64 (*.f64 -1 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x)))) (*.f64 x x)))) (/.f64 (neg.f64 (sin.f64 x)) (*.f64 x (cos.f64 x))))))","(fma.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (pow.f64 (cos.f64 x) 2)) (/.f64 (fma.f64 -1 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) (pow.f64 x 3)) (fma.f64 -1 (fma.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) (*.f64 x x)) (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x)) 1))","(+.f64 (+.f64 1 (/.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) x)) (*.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) (+.f64 (/.f64 (sin.f64 x) (*.f64 (cos.f64 x) (*.f64 x x))) (/.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (pow.f64 x 3)) (pow.f64 (cos.f64 x) 2)))))","(+.f64 1 (+.f64 (/.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) x) (*.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) (+.f64 (/.f64 (/.f64 (sin.f64 x) x) (*.f64 x (cos.f64 x))) (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 x 3) (pow.f64 (cos.f64 x) 2)))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x)))","(-.f64 (+.f64 1 (/.f64 (neg.f64 (sin.f64 x)) x)) (/.f64 (neg.f64 (sin.f64 x)) (*.f64 x (cos.f64 x))))","(-.f64 1 (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x))","(+.f64 1 (/.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) x))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 x) (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x)))) (*.f64 (cos.f64 x) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x))))","(+.f64 1 (-.f64 (fma.f64 -1 (/.f64 (sin.f64 x) x) (*.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (/.f64 (*.f64 -1 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x)))) (*.f64 x x)))) (/.f64 (neg.f64 (sin.f64 x)) (*.f64 x (cos.f64 x)))))","(fma.f64 -1 (fma.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) (*.f64 x x)) (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x)) 1)","(+.f64 (-.f64 1 (/.f64 (sin.f64 x) x)) (*.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (-.f64 (/.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) (*.f64 x x)) (/.f64 -1 x))))","(+.f64 (-.f64 1 (/.f64 (sin.f64 x) x)) (*.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (+.f64 (/.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) (*.f64 x x)) (/.f64 1 x))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (sin.f64 x) 2) (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x)))) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3)))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (sin.f64 x) (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x)))) (*.f64 (cos.f64 x) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x)))))","(+.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (pow.f64 (cos.f64 x) 2)) (/.f64 (*.f64 -1 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x)))) (pow.f64 x 3))) (+.f64 1 (-.f64 (fma.f64 -1 (/.f64 (sin.f64 x) x) (*.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (/.f64 (*.f64 -1 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x)))) (*.f64 x x)))) (/.f64 (neg.f64 (sin.f64 x)) (*.f64 x (cos.f64 x))))))","(fma.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (pow.f64 (cos.f64 x) 2)) (/.f64 (fma.f64 -1 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) (pow.f64 x 3)) (fma.f64 -1 (fma.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) (*.f64 x x)) (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x)) 1))","(+.f64 (+.f64 1 (/.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) x)) (*.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) (+.f64 (/.f64 (sin.f64 x) (*.f64 (cos.f64 x) (*.f64 x x))) (/.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (pow.f64 x 3)) (pow.f64 (cos.f64 x) 2)))))","(+.f64 1 (+.f64 (/.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) x) (*.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) (+.f64 (/.f64 (/.f64 (sin.f64 x) x) (*.f64 x (cos.f64 x))) (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 x 3) (pow.f64 (cos.f64 x) 2)))))))"]],"stop":[["node limit",1]],"time":52.990966796875,"type":"simplify"},{"compiler":[[17602,4948]],"time":96.583984375,"type":"eval"},{"alts":[["(-.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))","next",30.04695242178983],["(-.f64 (+.f64 (*.f64 9/40 (pow.f64 x 2)) (+.f64 (*.f64 -27/2800 (pow.f64 x 4)) (*.f64 27/112000 (pow.f64 x 6)))) 1/2)","fresh",32.74964416877734]],"compiler":[[15,7],[20,17],[15,7],[20,17]],"count":[[493,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[492,2],"picked":[1,0]}],"min-error":[0],"time":159.786865234375,"type":"prune"},{"compiler":[[37,7]],"locations":[["(/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))",0.12890625,true],["(tan.f64 x)",0.27476503907376804,false],["(-.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))",0.7813053864846551,true],["(-.f64 x (tan.f64 x))",1.0314596239921074,false]],"time":7.236083984375,"type":"localize"},{"count":[[2,24]],"series":[["(/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))","x","-inf",0.320068359375],["(/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))","x","inf",0.3759765625],["(/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))","x","0",0.22900390625],["(-.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))","x","-inf",0.698974609375],["(-.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))","x","inf",0.839111328125],["(-.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))","x","0",0.64599609375]],"time":3.22607421875,"type":"series"},{"count":[[2,216]],"egraph":[[2,3441,25,0.027813917],[1,198,25,0.004233084],[0,8,25,0.000229459]],"inputs":[["(-.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))","(/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 x (tan.f64 x))) (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) (fma.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) (+.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 x (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 x (-.f64 x (tan.f64 x))) (*.f64 (-.f64 x (tan.f64 x)) (sin.f64 x))) (/.f64 1 (pow.f64 (-.f64 x (tan.f64 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x (sin.f64 x)) (/.f64 1 (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 3) (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 3)) (/.f64 1 (fma.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (+.f64 x (sin.f64 x))) (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (-.f64 x (sin.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2) (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 2)) (/.f64 1 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (+.f64 x (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (-.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 (tan.f64 x) (+.f64 x (tan.f64 x)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (pow.f64 (-.f64 x (tan.f64 x)) 2) (-.f64 (*.f64 x (-.f64 x (tan.f64 x))) (*.f64 (-.f64 x (tan.f64 x)) (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 x (tan.f64 x)) (-.f64 x (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (+.f64 x (sin.f64 x))) (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2)) (-.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 3) (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (+.f64 x (sin.f64 x))) (-.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2) (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (-.f64 x (tan.f64 x))) (*.f64 (-.f64 x (tan.f64 x)) (sin.f64 x))) (pow.f64 (-.f64 x (tan.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 3) (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 3)) (fma.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (+.f64 x (sin.f64 x))) (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2) (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 2)) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (+.f64 x (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 x (-.f64 x (tan.f64 x))) (*.f64 (-.f64 x (tan.f64 x)) (sin.f64 x)))) (neg.f64 (pow.f64 (-.f64 x (tan.f64 x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 x (sin.f64 x))) (neg.f64 (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 3) (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 3))) (neg.f64 (fma.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (+.f64 x (sin.f64 x))) (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2) (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 2))) (neg.f64 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (+.f64 x (sin.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (-.f64 x (tan.f64 x)) (*.f64 (/.f64 (-.f64 x (tan.f64 x)) x) (sin.f64 x))) (*.f64 (/.f64 (-.f64 x (tan.f64 x)) x) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (-.f64 x (tan.f64 x))) (*.f64 (neg.f64 (-.f64 x (tan.f64 x))) (sin.f64 x))) (*.f64 (neg.f64 (-.f64 x (tan.f64 x))) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (/.f64 (-.f64 x (tan.f64 x)) (sin.f64 x))) (-.f64 x (tan.f64 x))) (*.f64 (-.f64 x (tan.f64 x)) (/.f64 (-.f64 x (tan.f64 x)) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 (-.f64 x (tan.f64 x)) (sin.f64 x)) (*.f64 (/.f64 (-.f64 x (tan.f64 x)) x) 1)) (*.f64 (/.f64 (-.f64 x (tan.f64 x)) x) (/.f64 (-.f64 x (tan.f64 x)) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (/.f64 (-.f64 x (tan.f64 x)) (sin.f64 x))) (*.f64 (neg.f64 (-.f64 x (tan.f64 x))) 1)) (*.f64 (neg.f64 (-.f64 x (tan.f64 x))) (/.f64 (-.f64 x (tan.f64 x)) (sin.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x (neg.f64 (-.f64 x (tan.f64 x)))) (*.f64 (-.f64 x (tan.f64 x)) (neg.f64 (sin.f64 x)))) (*.f64 (-.f64 x (tan.f64 x)) (neg.f64 (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 (-.f64 x (tan.f64 x))) (*.f64 (/.f64 (-.f64 x (tan.f64 x)) x) (neg.f64 (sin.f64 x)))) (*.f64 (/.f64 (-.f64 x (tan.f64 x)) x) (neg.f64 (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (neg.f64 x) (neg.f64 (-.f64 x (tan.f64 x)))) (*.f64 (neg.f64 (-.f64 x (tan.f64 x))) (neg.f64 (sin.f64 x)))) (pow.f64 (neg.f64 (-.f64 x (tan.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 x) (neg.f64 (sin.f64 x))) (neg.f64 (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 3) (pow.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 3)) (+.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2) (-.f64 (pow.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 2) (*.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2) (pow.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 2)) (-.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 x (-.f64 x (tan.f64 x))) (*.f64 (-.f64 x (tan.f64 x)) (sin.f64 x))) (-.f64 x (tan.f64 x))) (-.f64 x (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x (sin.f64 x)) 1) (-.f64 x (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (cbrt.f64 (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 x (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))) (sqrt.f64 (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (-.f64 x (tan.f64 x)) 2) (-.f64 (*.f64 x (-.f64 x (tan.f64 x))) (*.f64 (-.f64 x (tan.f64 x)) (sin.f64 x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x (tan.f64 x)) (-.f64 x (sin.f64 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (+.f64 x (sin.f64 x))) (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2)) (-.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 3) (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (+.f64 x (sin.f64 x))) (-.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2) (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 x (-.f64 x (tan.f64 x))))) (exp.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (+.f64 1 (expm1.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 x (-.f64 x (tan.f64 x))))) (+.f64 1 (expm1.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 x (-.f64 x (tan.f64 x))))) (exp.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (/.f64 1 (exp.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 x (-.f64 x (tan.f64 x))))) (/.f64 1 (exp.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (exp.f64 (/.f64 x (-.f64 x (tan.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (exp.f64 (/.f64 x (-.f64 x (tan.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (+.f64 1 (expm1.f64 (/.f64 x (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (+.f64 1 (expm1.f64 (/.f64 x (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (-.f64 x (tan.f64 x))) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (-.f64 x (tan.f64 x))) (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 x (tan.f64 x))) 1 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 x (tan.f64 x))) 1 (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sin.f64 x) (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (/.f64 x (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) 1 (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) 1 (fma.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) 1 (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) 1 (+.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (-.f64 x (tan.f64 x))) (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) (fma.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x))) (+.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 x (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) 2) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) 2) (fma.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) 2) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) 2) (+.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (fma.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (+.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) 2) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) 2) (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (-.f64 x (tan.f64 x)))) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (/.f64 x (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (fma.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))) (+.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (-.f64 x (tan.f64 x)))) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (neg.f64 (sqrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (/.f64 x (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 1 (neg.f64 (-.f64 x (tan.f64 x)))) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 1 (neg.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sin.f64 x)) (/.f64 1 (-.f64 x (tan.f64 x))) (/.f64 x (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x (-.f64 x (tan.f64 x))) (*.f64 (-.f64 x (tan.f64 x)) (sin.f64 x))) (/.f64 1 (pow.f64 (-.f64 x (tan.f64 x)) 2)) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x (-.f64 x (tan.f64 x))) (*.f64 (-.f64 x (tan.f64 x)) (sin.f64 x))) (/.f64 1 (pow.f64 (-.f64 x (tan.f64 x)) 2)) (fma.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x (-.f64 x (tan.f64 x))) (*.f64 (-.f64 x (tan.f64 x)) (sin.f64 x))) (/.f64 1 (pow.f64 (-.f64 x (tan.f64 x)) 2)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x (-.f64 x (tan.f64 x))) (*.f64 (-.f64 x (tan.f64 x)) (sin.f64 x))) (/.f64 1 (pow.f64 (-.f64 x (tan.f64 x)) 2)) (+.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (sin.f64 x)) (/.f64 1 (-.f64 x (tan.f64 x))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (sin.f64 x)) (/.f64 1 (-.f64 x (tan.f64 x))) (fma.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (sin.f64 x)) (/.f64 1 (-.f64 x (tan.f64 x))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x (sin.f64 x)) (/.f64 1 (-.f64 x (tan.f64 x))) (+.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 3) (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 3)) (/.f64 1 (fma.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (+.f64 x (sin.f64 x))) (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 3) (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 3)) (/.f64 1 (fma.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (+.f64 x (sin.f64 x))) (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2))) (fma.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 3) (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 3)) (/.f64 1 (fma.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (+.f64 x (sin.f64 x))) (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 3) (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 3)) (/.f64 1 (fma.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (+.f64 x (sin.f64 x))) (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2))) (+.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 x (tan.f64 x))) x (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 x (tan.f64 x))) x (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (-.f64 x (sin.f64 x)) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (-.f64 x (sin.f64 x)) (fma.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (-.f64 x (sin.f64 x)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (-.f64 x (sin.f64 x)) (+.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2) (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 2)) (/.f64 1 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (+.f64 x (sin.f64 x)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2) (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 2)) (/.f64 1 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (+.f64 x (sin.f64 x)))) (fma.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2) (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 2)) (/.f64 1 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (+.f64 x (sin.f64 x)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 x (-.f64 x (tan.f64 x))) 2) (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 2)) (/.f64 1 (*.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (+.f64 x (sin.f64 x)))) (+.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 x (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x)))) (/.f64 x (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (sqrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (/.f64 x (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) (/.f64 x (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 x (tan.f64 x))) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 x (tan.f64 x))) (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 x (tan.f64 x))) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 x (tan.f64 x))) (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 x (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 x (cbrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (cbrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 x (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 x (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))) (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (-.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (-.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (fma.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (-.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (-.f64 (sqrt.f64 (/.f64 x (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (+.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2)) (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (/.f64 x (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 (tan.f64 x) (+.f64 x (tan.f64 x)) (*.f64 x x)) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 (tan.f64 x) (+.f64 x (tan.f64 x)) (*.f64 x x)) (fma.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 (tan.f64 x) (+.f64 x (tan.f64 x)) (*.f64 x x)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 (tan.f64 x) (+.f64 x (tan.f64 x)) (*.f64 x x)) (+.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)) (fma.f64 (neg.f64 (/.f64 1 (-.f64 x (tan.f64 x)))) (sin.f64 x) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)) (fma.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 x (sin.f64 x)) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)) (+.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 (tan.f64 x) (+.f64 x (tan.f64 x)) (*.f64 x x)) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 (tan.f64 x) (+.f64 x (tan.f64 x)) (*.f64 x x)) (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)) (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)) (*.f64 (/.f64 (neg.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 x) (/.f64 1 (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (*.f64 (cbrt.f64 (sin.f64 x)) (/.f64 1 (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2) (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 x)) (*.f64 (sqrt.f64 (sin.f64 x)) (/.f64 1 (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (sqrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sin.f64 x)) (/.f64 1 (neg.f64 (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 x (tan.f64 x))) (sin.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (sin.f64 x) (cbrt.f64 (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (sin.f64 x) (sqrt.f64 (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) 1) (/.f64 (cbrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 x)) 1) (/.f64 (sqrt.f64 (sin.f64 x)) (-.f64 x (tan.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (sin.f64 x)) (pow.f64 (cbrt.f64 (-.f64 x (tan.f64 x))) 2)) (/.f64 (sqrt.f64 (sin.f64 x)) (cbrt.f64 (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (sin.f64 x)) 2) (sqrt.f64 (-.f64 x (tan.f64 x)))) (/.f64 (cbrt.f64 (sin.f64 x)) (sqrt.f64 (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 x) (-.f64 (pow.f64 x 3) (pow.f64 (tan.f64 x) 3))) (fma.f64 (tan.f64 x) (+.f64 x (tan.f64 x)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sin.f64 x) (-.f64 (*.f64 x x) (pow.f64 (tan.f64 x) 2))) (+.f64 x (tan.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x (tan.f64 x)) (sin.f64 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 x (tan.f64 x)) (sin.f64 x)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (sin.f64 x) (neg.f64 (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) 1))))))"]],"rules":[["egg-rr",39],["egg-rr",177]],"stop":[["node limit",1]],"time":65.5810546875,"type":"rewrite"},{"count":[[240,248]],"egraph":[[3,6027,692,0.025490541000000002],[2,989,714,0.009744874],[1,288,778,0.001982583],[0,97,814,0.000490083]],"inputs":[["-1/2","(-.f64 (*.f64 9/40 (pow.f64 x 2)) 1/2)","(-.f64 (+.f64 (*.f64 9/40 (pow.f64 x 2)) (*.f64 -27/2800 (pow.f64 x 4))) 1/2)","(-.f64 (+.f64 (*.f64 9/40 (pow.f64 x 2)) (+.f64 (*.f64 -27/2800 (pow.f64 x 4)) (*.f64 27/112000 (pow.f64 x 6)))) 1/2)","1","(+.f64 1 (*.f64 -1 (/.f64 (+.f64 (sin.f64 x) (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x)))) x)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (cos.f64 x) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (+.f64 (sin.f64 x) (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x)))) x)))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 2)))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (cos.f64 x) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (+.f64 (sin.f64 x) (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x)))) x))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 x 3)))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 2))))))","1","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (sin.f64 x) x)) (/.f64 (sin.f64 x) (*.f64 (cos.f64 x) x))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (pow.f64 (cos.f64 x) 2))) (/.f64 (pow.f64 (sin.f64 x) 2) (cos.f64 x))) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (sin.f64 x) x)) (/.f64 (sin.f64 x) (*.f64 (cos.f64 x) x)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (pow.f64 (cos.f64 x) 2))) (/.f64 (pow.f64 (sin.f64 x) 2) (cos.f64 x))) (pow.f64 x 2))) (+.f64 1 (+.f64 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 x) x)) (/.f64 (sin.f64 x) (*.f64 (cos.f64 x) x)))))))","(/.f64 -3 (pow.f64 x 2))","(-.f64 17/10 (*.f64 3 (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 17/10 (*.f64 -307/1400 (pow.f64 x 2))) (*.f64 3 (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 17/10 (+.f64 (*.f64 1247/126000 (pow.f64 x 4)) (*.f64 -307/1400 (pow.f64 x 2)))) (*.f64 3 (/.f64 1 (pow.f64 x 2))))","(/.f64 (sin.f64 x) x)","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (cos.f64 x) (pow.f64 x 2))) (/.f64 (sin.f64 x) x))","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (cos.f64 x) (pow.f64 x 2))) (+.f64 (/.f64 (sin.f64 x) x) (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3)))))","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (cos.f64 x) (pow.f64 x 2))) (+.f64 (/.f64 (pow.f64 (sin.f64 x) 4) (*.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 x 4))) (+.f64 (/.f64 (sin.f64 x) x) (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3))))))","(/.f64 (sin.f64 x) x)","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (cos.f64 x) (pow.f64 x 2))) (/.f64 (sin.f64 x) x))","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (cos.f64 x) (pow.f64 x 2))) (+.f64 (/.f64 (sin.f64 x) x) (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3)))))","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (cos.f64 x) (pow.f64 x 2))) (+.f64 (/.f64 (pow.f64 (sin.f64 x) 4) (*.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 x 4))) (+.f64 (/.f64 (sin.f64 x) x) (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3))))))"]],"method":["egg-herbie"],"outputs":[["-1/2","(-.f64 (*.f64 9/40 (pow.f64 x 2)) 1/2)","(fma.f64 9/40 (*.f64 x x) -1/2)","(fma.f64 x (*.f64 9/40 x) -1/2)","(-.f64 (+.f64 (*.f64 9/40 (pow.f64 x 2)) (*.f64 -27/2800 (pow.f64 x 4))) 1/2)","(+.f64 (fma.f64 9/40 (*.f64 x x) (*.f64 -27/2800 (pow.f64 x 4))) -1/2)","(fma.f64 9/40 (*.f64 x x) (fma.f64 -27/2800 (pow.f64 x 4) -1/2))","(-.f64 (+.f64 (*.f64 9/40 (pow.f64 x 2)) (+.f64 (*.f64 -27/2800 (pow.f64 x 4)) (*.f64 27/112000 (pow.f64 x 6)))) 1/2)","(+.f64 (fma.f64 9/40 (*.f64 x x) (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6)))) -1/2)","(fma.f64 9/40 (*.f64 x x) (fma.f64 -27/2800 (pow.f64 x 4) (fma.f64 27/112000 (pow.f64 x 6) -1/2)))","1","(+.f64 1 (*.f64 -1 (/.f64 (+.f64 (sin.f64 x) (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x)))) x)))","(+.f64 1 (neg.f64 (/.f64 (+.f64 (sin.f64 x) (neg.f64 (/.f64 (sin.f64 x) (cos.f64 x)))) x)))","(-.f64 1 (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x))","(+.f64 1 (/.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) x))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (cos.f64 x) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (+.f64 (sin.f64 x) (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x)))) x)))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 2)))))","(+.f64 1 (-.f64 (*.f64 -1 (+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x))) (/.f64 (+.f64 (sin.f64 x) (neg.f64 (/.f64 (sin.f64 x) (cos.f64 x)))) x))) (neg.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (pow.f64 (cos.f64 x) 2))))))","(+.f64 (-.f64 (-.f64 1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x)))) (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x)) (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (pow.f64 (cos.f64 x) 2))))","(-.f64 (-.f64 1 (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x)) (/.f64 (*.f64 (+.f64 (/.f64 -1 (cos.f64 x)) 1) (/.f64 (pow.f64 (sin.f64 x) 2) (cos.f64 x))) (*.f64 x x)))","(+.f64 1 (-.f64 (/.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) x) (/.f64 (*.f64 (+.f64 (/.f64 -1 (cos.f64 x)) 1) (/.f64 (pow.f64 (sin.f64 x) 2) (cos.f64 x))) (*.f64 x x))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3)))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (cos.f64 x) (pow.f64 x 2)))) (*.f64 -1 (/.f64 (+.f64 (sin.f64 x) (*.f64 -1 (/.f64 (sin.f64 x) (cos.f64 x)))) x))))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 x 3)))) (*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 2))))))","(+.f64 1 (-.f64 (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3))) (*.f64 -1 (+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x))) (/.f64 (+.f64 (sin.f64 x) (neg.f64 (/.f64 (sin.f64 x) (cos.f64 x)))) x)))) (*.f64 -1 (+.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 x) 3) (pow.f64 (cos.f64 x) 3)) (pow.f64 x 3)) (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (pow.f64 (cos.f64 x) 2)))))))","(+.f64 (-.f64 1 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3)))) (-.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 x) 2)) (*.f64 (*.f64 x x) (cos.f64 x))) (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x)) (-.f64 (/.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 x) 2)) (pow.f64 (cos.f64 x) 2)) (*.f64 x x)) (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 x 3) (pow.f64 (cos.f64 x) 3))))))","(+.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (pow.f64 x 3)) (-.f64 (/.f64 (sin.f64 x) (pow.f64 (cos.f64 x) 3)) (/.f64 (sin.f64 x) (pow.f64 (cos.f64 x) 2)))) (-.f64 (-.f64 1 (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x)) (/.f64 (*.f64 (+.f64 (/.f64 -1 (cos.f64 x)) 1) (/.f64 (pow.f64 (sin.f64 x) 2) (cos.f64 x))) (*.f64 x x))))","(+.f64 (pow.f64 (/.f64 (sin.f64 x) (*.f64 x (cos.f64 x))) 3) (+.f64 (-.f64 1 (/.f64 (pow.f64 (/.f64 (sin.f64 x) x) 3) (pow.f64 (cos.f64 x) 2))) (-.f64 (/.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) x) (/.f64 (*.f64 (+.f64 (/.f64 -1 (cos.f64 x)) 1) (/.f64 (pow.f64 (sin.f64 x) 2) (cos.f64 x))) (*.f64 x x)))))","1","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (sin.f64 x) x)) (/.f64 (sin.f64 x) (*.f64 (cos.f64 x) x))))","(+.f64 1 (neg.f64 (/.f64 (+.f64 (sin.f64 x) (neg.f64 (/.f64 (sin.f64 x) (cos.f64 x)))) x)))","(-.f64 1 (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x))","(+.f64 1 (/.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) x))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (pow.f64 (cos.f64 x) 2))) (/.f64 (pow.f64 (sin.f64 x) 2) (cos.f64 x))) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (sin.f64 x) x)) (/.f64 (sin.f64 x) (*.f64 (cos.f64 x) x)))))","(+.f64 1 (-.f64 (*.f64 -1 (+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x))) (/.f64 (+.f64 (sin.f64 x) (neg.f64 (/.f64 (sin.f64 x) (cos.f64 x)))) x))) (neg.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (pow.f64 (cos.f64 x) 2))))))","(+.f64 (-.f64 (-.f64 1 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x)))) (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x)) (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (pow.f64 (cos.f64 x) 2))))","(-.f64 (-.f64 1 (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x)) (/.f64 (*.f64 (+.f64 (/.f64 -1 (cos.f64 x)) 1) (/.f64 (pow.f64 (sin.f64 x) 2) (cos.f64 x))) (*.f64 x x)))","(+.f64 1 (-.f64 (/.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) x) (/.f64 (*.f64 (+.f64 (/.f64 -1 (cos.f64 x)) 1) (/.f64 (pow.f64 (sin.f64 x) 2) (cos.f64 x))) (*.f64 x x))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 2) (pow.f64 (cos.f64 x) 2))) (/.f64 (pow.f64 (sin.f64 x) 2) (cos.f64 x))) (pow.f64 x 2))) (+.f64 1 (+.f64 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3)))) (+.f64 (*.f64 -1 (/.f64 (sin.f64 x) x)) (/.f64 (sin.f64 x) (*.f64 (cos.f64 x) x)))))))","(+.f64 1 (-.f64 (fma.f64 -1 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3))) (*.f64 -1 (+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x))) (/.f64 (+.f64 (sin.f64 x) (neg.f64 (/.f64 (sin.f64 x) (cos.f64 x)))) x)))) (*.f64 -1 (+.f64 (/.f64 (/.f64 (pow.f64 (sin.f64 x) 3) (pow.f64 (cos.f64 x) 3)) (pow.f64 x 3)) (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (pow.f64 (cos.f64 x) 2)))))))","(+.f64 (-.f64 1 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3)))) (-.f64 (-.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 x) 2)) (*.f64 (*.f64 x x) (cos.f64 x))) (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x)) (-.f64 (/.f64 (/.f64 (neg.f64 (pow.f64 (sin.f64 x) 2)) (pow.f64 (cos.f64 x) 2)) (*.f64 x x)) (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 x 3) (pow.f64 (cos.f64 x) 3))))))","(+.f64 (*.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (pow.f64 x 3)) (-.f64 (/.f64 (sin.f64 x) (pow.f64 (cos.f64 x) 3)) (/.f64 (sin.f64 x) (pow.f64 (cos.f64 x) 2)))) (-.f64 (-.f64 1 (/.f64 (-.f64 (sin.f64 x) (/.f64 (sin.f64 x) (cos.f64 x))) x)) (/.f64 (*.f64 (+.f64 (/.f64 -1 (cos.f64 x)) 1) (/.f64 (pow.f64 (sin.f64 x) 2) (cos.f64 x))) (*.f64 x x))))","(+.f64 (pow.f64 (/.f64 (sin.f64 x) (*.f64 x (cos.f64 x))) 3) (+.f64 (-.f64 1 (/.f64 (pow.f64 (/.f64 (sin.f64 x) x) 3) (pow.f64 (cos.f64 x) 2))) (-.f64 (/.f64 (-.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (sin.f64 x)) x) (/.f64 (*.f64 (+.f64 (/.f64 -1 (cos.f64 x)) 1) (/.f64 (pow.f64 (sin.f64 x) 2) (cos.f64 x))) (*.f64 x x)))))","(/.f64 -3 (pow.f64 x 2))","(/.f64 -3 (*.f64 x x))","(/.f64 (/.f64 -3 x) x)","(-.f64 17/10 (*.f64 3 (/.f64 1 (pow.f64 x 2))))","(-.f64 17/10 (/.f64 3 (*.f64 x x)))","(+.f64 17/10 (/.f64 (/.f64 -3 x) x))","(+.f64 17/10 (/.f64 -3 (*.f64 x x)))","(-.f64 (+.f64 17/10 (*.f64 -307/1400 (pow.f64 x 2))) (*.f64 3 (/.f64 1 (pow.f64 x 2))))","(-.f64 (+.f64 17/10 (*.f64 (*.f64 x x) -307/1400)) (/.f64 3 (*.f64 x x)))","(+.f64 17/10 (fma.f64 (*.f64 x x) -307/1400 (/.f64 (/.f64 -3 x) x)))","(+.f64 17/10 (fma.f64 x (*.f64 x -307/1400) (/.f64 (/.f64 -3 x) x)))","(+.f64 17/10 (fma.f64 x (*.f64 x -307/1400) (/.f64 -3 (*.f64 x x))))","(-.f64 (+.f64 17/10 (+.f64 (*.f64 1247/126000 (pow.f64 x 4)) (*.f64 -307/1400 (pow.f64 x 2)))) (*.f64 3 (/.f64 1 (pow.f64 x 2))))","(+.f64 17/10 (-.f64 (fma.f64 1247/126000 (pow.f64 x 4) (*.f64 (*.f64 x x) -307/1400)) (/.f64 3 (*.f64 x x))))","(+.f64 17/10 (+.f64 (*.f64 (pow.f64 x 4) 1247/126000) (fma.f64 (*.f64 x x) -307/1400 (/.f64 (/.f64 -3 x) x))))","(+.f64 17/10 (fma.f64 x (*.f64 x -307/1400) (fma.f64 (pow.f64 x 4) 1247/126000 (/.f64 (/.f64 -3 x) x))))","(+.f64 17/10 (fma.f64 x (*.f64 x -307/1400) (fma.f64 (pow.f64 x 4) 1247/126000 (/.f64 -3 (*.f64 x x)))))","(/.f64 (sin.f64 x) x)","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (cos.f64 x) (pow.f64 x 2))) (/.f64 (sin.f64 x) x))","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x))) (/.f64 (sin.f64 x) x))","(fma.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (/.f64 (sin.f64 x) (*.f64 x x)) (/.f64 (sin.f64 x) x))","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (cos.f64 x) (pow.f64 x 2))) (+.f64 (/.f64 (sin.f64 x) x) (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3)))))","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x))) (+.f64 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3))) (/.f64 (sin.f64 x) x)))","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3))) (fma.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (/.f64 (sin.f64 x) (*.f64 x x)) (/.f64 (sin.f64 x) x)))","(+.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 x) x) 3) (pow.f64 (cos.f64 x) 2)) (+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x))) (/.f64 (sin.f64 x) x)))","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (cos.f64 x) (pow.f64 x 2))) (+.f64 (/.f64 (pow.f64 (sin.f64 x) 4) (*.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 x 4))) (+.f64 (/.f64 (sin.f64 x) x) (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3))))))","(+.f64 (+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x))) (/.f64 (pow.f64 (sin.f64 x) 4) (*.f64 (pow.f64 x 4) (pow.f64 (cos.f64 x) 3)))) (+.f64 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3))) (/.f64 (sin.f64 x) x)))","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x))) (+.f64 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3))) (+.f64 (/.f64 (sin.f64 x) x) (/.f64 (pow.f64 (sin.f64 x) 4) (*.f64 (pow.f64 x 4) (pow.f64 (cos.f64 x) 3))))))","(+.f64 (/.f64 (sin.f64 x) x) (+.f64 (/.f64 (pow.f64 (sin.f64 x) 4) (*.f64 (pow.f64 x 4) (pow.f64 (cos.f64 x) 3))) (+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x))) (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3))))))","(+.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 x) x) 3) (pow.f64 (cos.f64 x) 2)) (+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x))) (+.f64 (/.f64 (sin.f64 x) x) (/.f64 (pow.f64 (sin.f64 x) 4) (*.f64 x (pow.f64 (*.f64 x (cos.f64 x)) 3))))))","(/.f64 (sin.f64 x) x)","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (cos.f64 x) (pow.f64 x 2))) (/.f64 (sin.f64 x) x))","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x))) (/.f64 (sin.f64 x) x))","(fma.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (/.f64 (sin.f64 x) (*.f64 x x)) (/.f64 (sin.f64 x) x))","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (cos.f64 x) (pow.f64 x 2))) (+.f64 (/.f64 (sin.f64 x) x) (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3)))))","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x))) (+.f64 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3))) (/.f64 (sin.f64 x) x)))","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3))) (fma.f64 (/.f64 (sin.f64 x) (cos.f64 x)) (/.f64 (sin.f64 x) (*.f64 x x)) (/.f64 (sin.f64 x) x)))","(+.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 x) x) 3) (pow.f64 (cos.f64 x) 2)) (+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x))) (/.f64 (sin.f64 x) x)))","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (cos.f64 x) (pow.f64 x 2))) (+.f64 (/.f64 (pow.f64 (sin.f64 x) 4) (*.f64 (pow.f64 (cos.f64 x) 3) (pow.f64 x 4))) (+.f64 (/.f64 (sin.f64 x) x) (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3))))))","(+.f64 (+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x))) (/.f64 (pow.f64 (sin.f64 x) 4) (*.f64 (pow.f64 x 4) (pow.f64 (cos.f64 x) 3)))) (+.f64 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3))) (/.f64 (sin.f64 x) x)))","(+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x))) (+.f64 (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3))) (+.f64 (/.f64 (sin.f64 x) x) (/.f64 (pow.f64 (sin.f64 x) 4) (*.f64 (pow.f64 x 4) (pow.f64 (cos.f64 x) 3))))))","(+.f64 (/.f64 (sin.f64 x) x) (+.f64 (/.f64 (pow.f64 (sin.f64 x) 4) (*.f64 (pow.f64 x 4) (pow.f64 (cos.f64 x) 3))) (+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x))) (/.f64 (pow.f64 (sin.f64 x) 3) (*.f64 (pow.f64 (cos.f64 x) 2) (pow.f64 x 3))))))","(+.f64 (/.f64 (pow.f64 (/.f64 (sin.f64 x) x) 3) (pow.f64 (cos.f64 x) 2)) (+.f64 (/.f64 (pow.f64 (sin.f64 x) 2) (*.f64 (*.f64 x x) (cos.f64 x))) (+.f64 (/.f64 (sin.f64 x) x) (/.f64 (pow.f64 (sin.f64 x) 4) (*.f64 x (pow.f64 (*.f64 x (cos.f64 x)) 3))))))"]],"stop":[["node limit",1]],"time":46.73291015625,"type":"simplify"},{"compiler":[[13132,3479]],"time":76.423095703125,"type":"eval"},{"alts":[["(-.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))","done",30.04695242178983],["(-.f64 (+.f64 (*.f64 9/40 (pow.f64 x 2)) (+.f64 (*.f64 -27/2800 (pow.f64 x 4)) (*.f64 27/112000 (pow.f64 x 6)))) 1/2)","next",32.74964416877734]],"compiler":[[15,7],[20,17],[20,17]],"count":[[538,2]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[536,1],"picked":[1,1]}],"min-error":[0],"time":233.408935546875,"type":"prune"},{"compiler":[[80,65]],"locations":[["(*.f64 27/112000 (pow.f64 x 6))",0.0234375,true],["(*.f64 -27/2800 (pow.f64 x 4))",0.109375,true],["(*.f64 9/40 (pow.f64 x 2))",0.12109375,true],["(+.f64 (*.f64 -27/2800 (pow.f64 x 4)) (*.f64 27/112000 (pow.f64 x 6)))",20.523437500000004,true]],"time":21.64599609375,"type":"localize"},{"count":[[4,3]],"series":[["(*.f64 27/112000 (pow.f64 x 6))","x","-inf",0.1640625],["(*.f64 27/112000 (pow.f64 x 6))","x","inf",0.306884765625],["(*.f64 27/112000 (pow.f64 x 6))","x","0",0.258056640625],["(*.f64 -27/2800 (pow.f64 x 4))","x","-inf",0.162841796875],["(*.f64 -27/2800 (pow.f64 x 4))","x","inf",0.2890625],["(*.f64 -27/2800 (pow.f64 x 4))","x","0",0.25390625],["(*.f64 9/40 (pow.f64 x 2))","x","-inf",0.1630859375],["(*.f64 9/40 (pow.f64 x 2))","x","inf",0.8349609375],["(*.f64 9/40 (pow.f64 x 2))","x","0",0.346923828125],["(+.f64 (*.f64 -27/2800 (pow.f64 x 4)) (*.f64 27/112000 (pow.f64 x 6)))","x","-inf",0.2119140625],["(+.f64 (*.f64 -27/2800 (pow.f64 x 4)) (*.f64 27/112000 (pow.f64 x 6)))","x","inf",0.5439453125],["(+.f64 (*.f64 -27/2800 (pow.f64 x 4)) (*.f64 27/112000 (pow.f64 x 6)))","x","0",0.534912109375]],"time":4.2060546875,"type":"series"},{"count":[[4,111]],"egraph":[[2,3611,35,0.028656915999999998],[1,325,35,0.006282833],[0,15,35,0.000656583]],"inputs":[["(+.f64 (*.f64 -27/2800 (pow.f64 x 4)) (*.f64 27/112000 (pow.f64 x 6)))","(*.f64 9/40 (pow.f64 x 2))","(*.f64 -27/2800 (pow.f64 x 4))","(*.f64 27/112000 (pow.f64 x 6))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (pow.f64 x 8) 729/7840000) (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 -27/112000 (pow.f64 x 6)))) (/.f64 (*.f64 (pow.f64 x 12) 729/12544000000) (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 -27/112000 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6)))) (pow.f64 (cbrt.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6)))) 2) (cbrt.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6)))) (sqrt.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 x 18) 19683/1404928000000000 (*.f64 (pow.f64 x 12) -19683/21952000000)) (/.f64 1 (-.f64 (fma.f64 (pow.f64 x 8) 729/7840000 (*.f64 (pow.f64 x 12) 729/12544000000)) (*.f64 -27/2800 (*.f64 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 (pow.f64 x 8) 729/7840000) (*.f64 (pow.f64 x 12) 729/12544000000)) (/.f64 1 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 -27/112000 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (fma.f64 (pow.f64 x 8) 729/7840000 (*.f64 (pow.f64 x 12) 729/12544000000)) (*.f64 -27/2800 (*.f64 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6))))) (fma.f64 (pow.f64 x 18) 19683/1404928000000000 (*.f64 (pow.f64 x 12) -19683/21952000000))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 -27/112000 (pow.f64 x 6))) (-.f64 (*.f64 (pow.f64 x 8) 729/7840000) (*.f64 (pow.f64 x 12) 729/12544000000))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 x 18) 19683/1404928000000000 (*.f64 (pow.f64 x 12) -19683/21952000000)) (-.f64 (fma.f64 (pow.f64 x 8) 729/7840000 (*.f64 (pow.f64 x 12) 729/12544000000)) (*.f64 -27/2800 (*.f64 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 x 18) 19683/1404928000000000 (*.f64 (pow.f64 x 12) -19683/21952000000)) (fma.f64 (pow.f64 x 12) 729/12544000000 (-.f64 (*.f64 (pow.f64 x 8) 729/7840000) (*.f64 -27/2800 (*.f64 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 x 8) 729/7840000) (*.f64 (pow.f64 x 12) 729/12544000000)) (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 -27/112000 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (pow.f64 x 18) 19683/1404928000000000 (*.f64 (pow.f64 x 12) -19683/21952000000))) (neg.f64 (-.f64 (fma.f64 (pow.f64 x 8) 729/7840000 (*.f64 (pow.f64 x 12) 729/12544000000)) (*.f64 -27/2800 (*.f64 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 (pow.f64 x 8) 729/7840000) (*.f64 (pow.f64 x 12) 729/12544000000))) (neg.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 -27/112000 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 x 12) 729/12544000000 (neg.f64 (*.f64 (pow.f64 x 8) 729/7840000))) (-.f64 (*.f64 27/112000 (pow.f64 x 6)) (*.f64 -27/2800 (pow.f64 x 4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (fma.f64 (pow.f64 x 8) 729/7840000 (*.f64 (pow.f64 x 12) 729/12544000000)) (*.f64 -27/2800 (*.f64 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6))))) (fma.f64 (pow.f64 x 18) 19683/1404928000000000 (*.f64 (pow.f64 x 12) -19683/21952000000))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 -27/112000 (pow.f64 x 6))) (-.f64 (*.f64 (pow.f64 x 8) 729/7840000) (*.f64 (pow.f64 x 12) 729/12544000000))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 -27/2800 (pow.f64 x 4)))) (pow.f64 (exp.f64 27/112000) (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (pow.f64 x 4)) -27/2800) (+.f64 1 (expm1.f64 (*.f64 27/112000 (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 -27/2800 (pow.f64 x 4)))) (+.f64 1 (expm1.f64 (*.f64 27/112000 (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 27/112000 (pow.f64 x 6)))) (pow.f64 (exp.f64 (pow.f64 x 4)) -27/2800)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 27/112000) (pow.f64 x 6)) (+.f64 1 (expm1.f64 (*.f64 -27/2800 (pow.f64 x 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 27/112000 (pow.f64 x 6)))) (+.f64 1 (expm1.f64 (*.f64 -27/2800 (pow.f64 x 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -27/2800 (pow.f64 x 4) (*.f64 27/112000 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 4) -27/2800 (*.f64 27/112000 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 4) (*.f64 (*.f64 x x) 27/112000) (*.f64 -27/2800 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -27/2800 (pow.f64 x 4)) 1 (*.f64 27/112000 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 27/112000 (pow.f64 x 6) (*.f64 -27/2800 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 6) 27/112000 (*.f64 -27/2800 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 27/112000 (pow.f64 x 6)) 1 (*.f64 -27/2800 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) (*.f64 (*.f64 x x) -27/2800) (*.f64 27/112000 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -27/2800 (pow.f64 x 4)) (*.f64 27/112000 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 27/112000 (pow.f64 x 6)) (*.f64 -27/2800 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 27/112000) (*.f64 -27/2800 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -27/2800 (pow.f64 x 4))) (cbrt.f64 (*.f64 (pow.f64 x 8) 729/7840000)) (*.f64 27/112000 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 x 8) 729/7840000)) (cbrt.f64 (*.f64 -27/2800 (pow.f64 x 4))) (*.f64 27/112000 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 8) (*.f64 (*.f64 (cbrt.f64 x) x) -27/2800) (*.f64 27/112000 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 x x) (cbrt.f64 27/112000)) (cbrt.f64 (*.f64 (pow.f64 x 12) 729/12544000000)) (*.f64 -27/2800 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 x 12) 729/12544000000)) (*.f64 (*.f64 x x) (cbrt.f64 27/112000)) (*.f64 -27/2800 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 x x) (sqrt.f64 -27/2800)) (*.f64 (*.f64 x x) (sqrt.f64 -27/2800)) (*.f64 27/112000 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 x 3) (sqrt.f64 27/112000)) (*.f64 (pow.f64 x 3) (sqrt.f64 27/112000)) (*.f64 -27/2800 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -27/2800 (*.f64 x x)) (*.f64 x x) (*.f64 27/112000 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -27/2800 (pow.f64 (cbrt.f64 x) 8)) (*.f64 (cbrt.f64 x) x) (*.f64 27/112000 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 27/112000 (pow.f64 x 4)) (*.f64 x x) (*.f64 -27/2800 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 27/112000 (pow.f64 x 3)) (pow.f64 x 3) (*.f64 -27/2800 (pow.f64 x 4)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 x (*.f64 x 9/40)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 9/40) (*.f64 x x))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 9/40) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 9/40) (*.f64 x x)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 9/40) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 x (*.f64 x 9/40)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 x 9/40)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 4) 81/1600) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (sqrt.f64 9/40)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 x 9/40))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (sqrt.f64 9/40)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 x 4) 81/1600))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 9/40) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 x (*.f64 x 9/40)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (sqrt.f64 9/40)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (*.f64 x 9/40))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (*.f64 x 9/40))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (*.f64 x 9/40))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (*.f64 x 9/40))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 -27/2800 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 x 4)) -27/2800)) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 x 4)) -27/2800))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 x 4)) -27/2800))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 x 4)) -27/2800))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 -27/2800 (pow.f64 x 4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -27/2800 (pow.f64 x 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 8) 729/7840000) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -27/2800 (pow.f64 x 4))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 x x) (sqrt.f64 -27/2800)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 12) -19683/21952000000) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 x 8) 729/7840000))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (pow.f64 x 4)) -27/2800))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 -27/2800 (pow.f64 x 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 12) -19683/21952000000))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 -27/2800 (pow.f64 x 4))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 -27/2800 (pow.f64 x 4))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 4 (log.f64 x) (log1p.f64 -2827/2800)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 4 (log.f64 x) (log1p.f64 -2827/2800)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 27/112000 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 27/112000) (pow.f64 x 6))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 27/112000) (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 27/112000) (pow.f64 x 6)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 27/112000) (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 27/112000 (pow.f64 x 6)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 27/112000 (pow.f64 x 6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 12) 729/12544000000) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 x x) (cbrt.f64 27/112000)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 3) (sqrt.f64 27/112000)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 18) 19683/1404928000000000) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 x 12) 729/12544000000))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 27/112000) (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 27/112000 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 18) 19683/1404928000000000))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 27/112000 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 27/112000 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 6 (log.f64 x) (log.f64 27/112000)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 6 (log.f64 x) (log.f64 27/112000)) 1))))))"]],"rules":[["egg-rr",17],["egg-rr",17],["egg-rr",17],["egg-rr",60]],"stop":[["node limit",1]],"time":55.1279296875,"type":"rewrite"},{"count":[[114,113]],"egraph":[[17,7509,21,0.088450831],[16,6997,21,0.079388165],[15,6491,21,0.070457956],[14,6048,21,0.062691915],[13,5282,21,0.054206290000000004],[12,4639,21,0.045417207],[11,4115,21,0.037587165],[10,3658,21,0.030214957],[9,3312,21,0.023440332],[8,3048,21,0.018001457000000002],[7,2784,21,0.013473166000000002],[6,2627,21,0.009658249],[5,1581,21,0.006217749],[4,350,21,0.002947541],[3,106,21,0.000871208],[2,42,21,0.00036458300000000003],[1,20,21,0.000164625],[0,10,21,6.7083e-5]],"inputs":[["(*.f64 -27/2800 (pow.f64 x 4))","(*.f64 27/112000 (pow.f64 x 6))","(*.f64 27/112000 (pow.f64 x 6))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -27/2800 (pow.f64 x 4))","(*.f64 27/112000 (pow.f64 x 6))","(*.f64 27/112000 (pow.f64 x 6))"]],"stop":[["node limit",1]],"time":101.153076171875,"type":"simplify"},{"compiler":[[2733,2279]],"time":39.15185546875,"type":"eval"},{"alts":[["(-.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))","done",30.04695242178983],["(-.f64 (+.f64 (*.f64 9/40 (pow.f64 x 2)) (+.f64 (*.f64 -27/2800 (pow.f64 x 4)) (*.f64 27/112000 (pow.f64 x 6)))) 1/2)","done",32.74964416877734]],"compiler":[[15,7],[20,17]],"count":[[115,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[113,0],"picked":[1,1]}],"min-error":[0],"time":20.508056640625,"type":"prune"},{"accuracy":[0],"baseline":[30.04695242178983],"branch":[["x",0,3],["(/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))",0.2969524217898299,2]],"compiler":[[2,1],[10,6],[62,41]],"count":[[4,3]],"inputs":[["(-.f64 (+.f64 (*.f64 9/40 (pow.f64 x 2)) (+.f64 (*.f64 -27/2800 (pow.f64 x 4)) (*.f64 27/112000 (pow.f64 x 6)))) 1/2)","(-.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))","(-.f64 (+.f64 (*.f64 9/40 (pow.f64 x 2)) (+.f64 (*.f64 -27/2800 (pow.f64 x 4)) (*.f64 27/112000 (pow.f64 x 6)))) 1/2)","(/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))"]],"link":["."],"name":["sintan (problem 3.4.5)"],"oracle":[62.806748797684364],"outputs":[["(-.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))","(-.f64 (+.f64 (*.f64 9/40 (pow.f64 x 2)) (+.f64 (*.f64 -27/2800 (pow.f64 x 4)) (*.f64 27/112000 (pow.f64 x 6)))) 1/2)","(-.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))"]],"time":18.2099609375,"times":[["x",11.55615234375],["(/.f64 (-.f64 x (sin.f64 x)) (-.f64 x (tan.f64 x)))",3.863037109375]],"type":"regimes"},{"bstep":[[0.0009976555059424367,3495.7724458261373,15.69384765625],[-32.59303543867799,-0.007599221567222652,18.60302734375]],"compiler":[[12,8],[2,1]],"method":["binary-search","binary-search"],"time":34.444091796875,"type":"bsearch"},{"compiler":[[56,29]],"egraph":[[5,65,84,0.00043020800000000007],[4,64,84,0.00035812500000000004],[3,60,84,0.00028404200000000003],[2,54,84,0.00021179200000000003],[1,43,84,0.00012916700000000002],[0,31,84,6.6042e-5]],"inputs":[["(if (<=.f64 x -573382743189467/17592186044416) (-.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (if (<=.f64 x 4600873947961837/4611686018427387904) (-.f64 (+.f64 (*.f64 9/40 (pow.f64 x 2)) (+.f64 (*.f64 -27/2800 (pow.f64 x 4)) (*.f64 27/112000 (pow.f64 x 6)))) 1/2) (-.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 x -573382743189467/17592186044416) (-.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (if (<=.f64 x 4600873947961837/4611686018427387904) (-.f64 (+.f64 (*.f64 9/40 (pow.f64 x 2)) (+.f64 (*.f64 -27/2800 (pow.f64 x 4)) (*.f64 27/112000 (pow.f64 x 6)))) 1/2) (-.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))))","(if (<=.f64 x -573382743189467/17592186044416) (-.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x)))) (if (<=.f64 x 4600873947961837/4611686018427387904) (+.f64 (+.f64 (*.f64 9/40 (pow.f64 x 2)) (+.f64 (*.f64 -27/2800 (pow.f64 x 4)) (*.f64 27/112000 (pow.f64 x 6)))) -1/2) (-.f64 (/.f64 x (-.f64 x (tan.f64 x))) (/.f64 (sin.f64 x) (-.f64 x (tan.f64 x))))))"]],"stop":[["done",1],["saturated",1]],"time":10.14306640625,"type":"simplify"},{"time":0.0078125,"type":"soundness"},{"compiler":[[56,29]],"remove-preprocessing":[[]],"time":17.609130859375,"type":"end"}]