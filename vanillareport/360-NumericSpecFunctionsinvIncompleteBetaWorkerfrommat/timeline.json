[{"compiler":[[18,13]],"method":["search"],"sampling":[[12,0.03508763572426887,0.2300189453035404,0.7348934189721907],[11,0.023391757149512582,0.24171482387829668,0.7348934189721907],[10,0.0,0.280701085794151,0.719298914205849],[9,0.0,0.3118900953268344,0.6881099046731656],[8,0.0,0.3118900953268344,0.6881099046731656],[7,0.0,0.3118900953268344,0.6881099046731656],[6,0.0,0.8109142478497695,0.1890857521502305],[5,0.0,0.8732922669151364,0.1267077330848636],[4,0.0,0.8732922669151364,0.1267077330848636],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":62.39306640625,"type":"analyze"},{"outcomes":[["body",256,"invalid",39.125244140625,533],["body",1024,"valid",219.623779296875,680],["body",512,"valid",144.234375,910],["body",2048,"valid",12.68798828125,27],["body",256,"valid",486.606689453125,6639]],"time":911.5859375,"type":"sample"},{"compiler":[[17,12]],"egraph":[[0,4,4,2.625e-6],[19,7227,119,0.188642],[18,6975,119,0.166584792],[17,6967,119,0.147019334],[16,6939,119,0.132031459],[15,6621,119,0.11656137499999998],[14,6621,119,0.10071941699999998],[13,6621,119,0.09089237499999998],[12,6621,119,0.08181749999999999],[11,5757,119,0.07047345799999999],[10,5078,119,0.056564082999999994],[9,4710,119,0.04682341599999999],[8,4451,119,0.038023958],[7,3695,119,0.028736458],[6,2189,119,0.01836175],[5,1102,119,0.009143499999999999],[4,666,119,0.004559667],[3,386,119,0.002361833],[2,216,119,0.0012048739999999999],[1,101,119,0.000498208],[0,44,126,0.000150416]],"inputs":[["0","1","2","3"],["(-.f64 (+.f64 (*.f64 x (log.f64 y)) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (+.f64 (*.f64 y (log.f64 x)) (*.f64 z (log.f64 (-.f64 1 x)))) t)","(-.f64 (+.f64 (*.f64 z (log.f64 y)) (*.f64 x (log.f64 (-.f64 1 y)))) t)","(-.f64 (+.f64 (*.f64 t (log.f64 y)) (*.f64 z (log.f64 (-.f64 1 y)))) x)","(-.f64 (+.f64 (*.f64 x (log.f64 z)) (*.f64 y (log.f64 (-.f64 1 z)))) t)","(-.f64 (+.f64 (*.f64 x (log.f64 t)) (*.f64 z (log.f64 (-.f64 1 t)))) y)","(-.f64 (+.f64 (*.f64 x (log.f64 y)) (*.f64 t (log.f64 (-.f64 1 y)))) z)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(-.f64 (+.f64 (*.f64 x (log.f64 y)) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 x (log.f64 y) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 x (log.f64 y) (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(fma.f64 x (log.f64 y) (fma.f64 z (log1p.f64 (neg.f64 y)) (neg.f64 t)))","(-.f64 (+.f64 (*.f64 y (log.f64 x)) (*.f64 z (log.f64 (-.f64 1 x)))) t)","(-.f64 (fma.f64 y (log.f64 x) (*.f64 z (log.f64 (-.f64 1 x)))) t)","(-.f64 (fma.f64 y (log.f64 x) (*.f64 z (log1p.f64 (neg.f64 x)))) t)","(fma.f64 y (log.f64 x) (fma.f64 z (log1p.f64 (neg.f64 x)) (neg.f64 t)))","(fma.f64 z (log1p.f64 (neg.f64 x)) (-.f64 (*.f64 y (log.f64 x)) t))","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 x)) (*.f64 y (log.f64 x))) t)","(-.f64 (+.f64 (*.f64 z (log.f64 y)) (*.f64 x (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 z (log.f64 y) (*.f64 x (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 x (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) z)) t)","(fma.f64 (log.f64 y) z (fma.f64 x (log1p.f64 (neg.f64 y)) (neg.f64 t)))","(-.f64 (+.f64 (*.f64 t (log.f64 y)) (*.f64 z (log.f64 (-.f64 1 y)))) x)","(-.f64 (fma.f64 t (log.f64 y) (*.f64 z (log.f64 (-.f64 1 y)))) x)","(-.f64 (fma.f64 (log.f64 y) t (*.f64 z (log1p.f64 (neg.f64 y)))) x)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (log.f64 y) t) x))","(-.f64 (+.f64 (*.f64 x (log.f64 z)) (*.f64 y (log.f64 (-.f64 1 z)))) t)","(-.f64 (fma.f64 x (log.f64 z) (*.f64 y (log.f64 (-.f64 1 z)))) t)","(-.f64 (fma.f64 x (log.f64 z) (*.f64 y (log1p.f64 (neg.f64 z)))) t)","(-.f64 (fma.f64 y (log1p.f64 (neg.f64 z)) (*.f64 x (log.f64 z))) t)","(fma.f64 x (log.f64 z) (fma.f64 y (log1p.f64 (neg.f64 z)) (neg.f64 t)))","(-.f64 (+.f64 (*.f64 x (log.f64 t)) (*.f64 z (log.f64 (-.f64 1 t)))) y)","(-.f64 (fma.f64 x (log.f64 t) (*.f64 z (log.f64 (-.f64 1 t)))) y)","(-.f64 (fma.f64 x (log.f64 t) (*.f64 z (log1p.f64 (neg.f64 t)))) y)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 t)) (*.f64 x (log.f64 t))) y)","(fma.f64 z (log1p.f64 (neg.f64 t)) (fma.f64 x (log.f64 t) (neg.f64 y)))","(-.f64 (+.f64 (*.f64 x (log.f64 y)) (*.f64 t (log.f64 (-.f64 1 y)))) z)","(-.f64 (fma.f64 x (log.f64 y) (*.f64 (log.f64 (-.f64 1 y)) t)) z)","(-.f64 (fma.f64 x (log.f64 y) (*.f64 (log1p.f64 (neg.f64 y)) t)) z)","(fma.f64 x (log.f64 y) (-.f64 (*.f64 (log1p.f64 (neg.f64 y)) t) z))","(fma.f64 x (log.f64 y) (fma.f64 (log1p.f64 (neg.f64 y)) t (neg.f64 z)))","(fma.f64 (log1p.f64 (neg.f64 y)) t (fma.f64 x (log.f64 y) (neg.f64 z)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":217.451171875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[13,3005,17,0.047367249],[12,3005,17,0.040296541],[11,2989,17,0.033555708],[10,2713,17,0.0266495],[9,2030,17,0.018834083],[8,1278,17,0.011218458],[7,719,17,0.006501875000000001],[6,376,17,0.0036090000000000002],[5,200,17,0.0017694170000000001],[4,123,17,0.0009563750000000001],[3,75,17,0.0005454170000000001],[2,46,17,0.00030000000000000003],[1,25,17,0.000143],[0,13,18,5.6084e-5]],"inputs":[["(-.f64 (+.f64 (*.f64 x (log.f64 y)) (*.f64 z (log.f64 (-.f64 1 y)))) t)"]],"method":["egg-herbie"],"outputs":[["(-.f64 (+.f64 (*.f64 x (log.f64 y)) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 x (log.f64 y) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 x (log.f64 y) (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))"]],"stop":[["saturated",1]],"time":58.907958984375,"type":"simplify"},{"compiler":[[28,16]],"time":0.409912109375,"type":"eval"},{"alts":[["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))","next",0.0859375]],"compiler":[[15,10],[15,10]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.0859375],"time":0.906982421875,"type":"prune"},{"compiler":[[36,10]],"locations":[["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))",0.00390625,true],["(-.f64 (*.f64 x (log.f64 y)) t)",0.00390625,true],["(*.f64 x (log.f64 y))",0.25390625,true]],"time":8.214111328125,"type":"localize"},{"count":[[3,108]],"series":[["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))","t","-inf",0.172119140625],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))","t","inf",0.205810546875],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))","t","0",1.0390625],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))","x","-inf",0.1748046875],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))","x","inf",0.255126953125],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))","x","0",1.06201171875],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))","y","-inf",0.386962890625],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))","y","inf",0.453857421875],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))","y","0",0.3359375],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))","z","-inf",0.3291015625],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))","z","inf",0.27783203125],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))","z","0",2.987060546875],["(-.f64 (*.f64 x (log.f64 y)) t)","t","-inf",0.1708984375],["(-.f64 (*.f64 x (log.f64 y)) t)","t","inf",0.241943359375],["(-.f64 (*.f64 x (log.f64 y)) t)","t","0",1.06494140625],["(-.f64 (*.f64 x (log.f64 y)) t)","y","-inf",0.184814453125],["(-.f64 (*.f64 x (log.f64 y)) t)","y","inf",0.18212890625],["(-.f64 (*.f64 x (log.f64 y)) t)","y","0",0.18408203125],["(-.f64 (*.f64 x (log.f64 y)) t)","x","-inf",0.162841796875],["(-.f64 (*.f64 x (log.f64 y)) t)","x","inf",0.201171875],["(-.f64 (*.f64 x (log.f64 y)) t)","x","0",0.18896484375],["(*.f64 x (log.f64 y))","y","-inf",8.861083984375],["(*.f64 x (log.f64 y))","y","inf",4.20703125],["(*.f64 x (log.f64 y))","y","0",9.169921875],["(*.f64 x (log.f64 y))","x","-inf",0.30810546875],["(*.f64 x (log.f64 y))","x","inf",0.31201171875],["(*.f64 x (log.f64 y))","x","0",19.121826171875]],"time":52.64599609375,"type":"series"},{"count":[[3,161]],"egraph":[[2,2969,30,0.024782751],[1,228,30,0.004022084],[0,11,32,0.000248042]],"inputs":[["(*.f64 x (log.f64 y))","(-.f64 (*.f64 x (log.f64 y)) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 x (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 y x)) 2)) (log.f64 (cbrt.f64 (pow.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 y x))) (log.f64 (sqrt.f64 (pow.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 x (log.f64 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (log.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (log.f64 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (log.f64 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (log.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 y x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (log.f64 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 y x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (log.f64 y))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (log.f64 y)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (log.f64 y)) (*.f64 (neg.f64 t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x (log.f64 y)) t) (fma.f64 (neg.f64 t) 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x (log.f64 y)) t) (fma.f64 (neg.f64 (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x (log.f64 y)) t) (+.f64 (neg.f64 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x (log.f64 y)) t) (fma.f64 -1 t t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x (log.f64 y)) t) (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 t) 2)) (cbrt.f64 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 t) (*.f64 x (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (*.f64 x (log.f64 y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 y x) (exp.f64 t))) 2)) (log.f64 (cbrt.f64 (/.f64 (pow.f64 y x) (exp.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (/.f64 (pow.f64 y x) (exp.f64 t)))) (log.f64 (sqrt.f64 (/.f64 (pow.f64 y x) (exp.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 x (log.f64 y)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (*.f64 x (log.f64 y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) 2) (cbrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) (sqrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 3) (pow.f64 t 3)) (/.f64 1 (fma.f64 t (fma.f64 x (log.f64 y) t) (pow.f64 (*.f64 x (log.f64 y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 t t)) (/.f64 1 (fma.f64 x (log.f64 y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (*.f64 x (log.f64 y))) (sqrt.f64 t)) (-.f64 (sqrt.f64 (*.f64 x (log.f64 y))) (sqrt.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 t (fma.f64 x (log.f64 y) t) (pow.f64 (*.f64 x (log.f64 y)) 2)) (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 3) (pow.f64 t 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 x (log.f64 y) t) (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 t t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 3) (pow.f64 t 3)) (fma.f64 t (fma.f64 x (log.f64 y) t) (pow.f64 (*.f64 x (log.f64 y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 t t)) (fma.f64 x (log.f64 y) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 3) (pow.f64 t 3))) (neg.f64 (fma.f64 t (fma.f64 x (log.f64 y) t) (pow.f64 (*.f64 x (log.f64 y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 t t))) (neg.f64 (fma.f64 x (log.f64 y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (log.f64 y)) 3) (pow.f64 (neg.f64 t) 3)) (+.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (-.f64 (pow.f64 (neg.f64 t) 2) (*.f64 (*.f64 x (log.f64 y)) (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (pow.f64 (neg.f64 t) 2)) (fma.f64 x (log.f64 y) (neg.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 x (log.f64 y)) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 x (log.f64 y)) t) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 x (log.f64 y)) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 t (fma.f64 x (log.f64 y) t) (pow.f64 (*.f64 x (log.f64 y)) 2)) (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 3) (pow.f64 t 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 x (log.f64 y) t) (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 t t))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (*.f64 x (log.f64 y)) t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 y x) (exp.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (*.f64 x (log.f64 y)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (-.f64 (pow.f64 y x) 1)) (exp.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 y x) (+.f64 1 (expm1.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (-.f64 (pow.f64 y x) 1)) (+.f64 1 (expm1.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (-.f64 (pow.f64 y x) 1)) (exp.f64 (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (-.f64 (pow.f64 y x) 1)) (/.f64 1 (exp.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 t)) (pow.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 t)) (+.f64 1 (-.f64 (pow.f64 y x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 t)) (+.f64 1 (-.f64 (pow.f64 y x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 x (log.f64 y)) t) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (*.f64 x (log.f64 y)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (*.f64 x (log.f64 y)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (*.f64 x (log.f64 y)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (*.f64 x (log.f64 y)) t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (log.f64 y) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (log.f64 y) (*.f64 (neg.f64 t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 y) x (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 y) x (*.f64 (neg.f64 t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (log.f64 y)) 1 (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (log.f64 y)) 1 (*.f64 (neg.f64 t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x (log.f64 y)) t) 1 (fma.f64 (neg.f64 t) 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x (log.f64 y)) t) 1 (fma.f64 (neg.f64 (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x (log.f64 y)) t) 1 (+.f64 (neg.f64 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (log.f64 y)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (log.f64 y)) (*.f64 (neg.f64 t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 x (log.f64 y)) t) (fma.f64 (neg.f64 t) 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 x (log.f64 y)) t) (fma.f64 (neg.f64 (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 x (log.f64 y)) t) (+.f64 (neg.f64 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 t) (*.f64 x (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x (log.f64 y))) (cbrt.f64 (pow.f64 (*.f64 x (log.f64 y)) 2)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x (log.f64 y))) (cbrt.f64 (pow.f64 (*.f64 x (log.f64 y)) 2)) (*.f64 (neg.f64 t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 x (log.f64 y)) 2)) (cbrt.f64 (*.f64 x (log.f64 y))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 x (log.f64 y)) 2)) (cbrt.f64 (*.f64 x (log.f64 y))) (*.f64 (neg.f64 t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (cbrt.f64 x) (log.f64 y)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (cbrt.f64 x) (log.f64 y)) (*.f64 (neg.f64 t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 t) 2) (neg.f64 (cbrt.f64 t)) (*.f64 x (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) 2) (fma.f64 (neg.f64 t) 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) 2) (fma.f64 (neg.f64 (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) (pow.f64 (cbrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) 2) (+.f64 (neg.f64 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) 2) (cbrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) (fma.f64 (neg.f64 t) 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) 2) (cbrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) (fma.f64 (neg.f64 (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) 2) (cbrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) (+.f64 (neg.f64 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2) (*.f64 (cbrt.f64 (log.f64 y)) x) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2) (*.f64 (cbrt.f64 (log.f64 y)) x) (*.f64 (neg.f64 t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x (log.f64 y))) (sqrt.f64 (*.f64 x (log.f64 y))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x (log.f64 y))) (sqrt.f64 (*.f64 x (log.f64 y))) (*.f64 (neg.f64 t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (log.f64 y)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (log.f64 y)) (*.f64 (neg.f64 t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 t) (neg.f64 (sqrt.f64 t)) (*.f64 x (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) (sqrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) (fma.f64 (neg.f64 t) 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) (sqrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) (fma.f64 (neg.f64 (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) (sqrt.f64 (-.f64 (*.f64 x (log.f64 y)) t)) (+.f64 (neg.f64 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 y)) (*.f64 (sqrt.f64 (log.f64 y)) x) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 y)) (*.f64 (sqrt.f64 (log.f64 y)) x) (*.f64 (neg.f64 t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 3) (pow.f64 t 3)) (/.f64 1 (fma.f64 t (fma.f64 x (log.f64 y) t) (pow.f64 (*.f64 x (log.f64 y)) 2))) (fma.f64 (neg.f64 t) 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 3) (pow.f64 t 3)) (/.f64 1 (fma.f64 t (fma.f64 x (log.f64 y) t) (pow.f64 (*.f64 x (log.f64 y)) 2))) (fma.f64 (neg.f64 (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 3) (pow.f64 t 3)) (/.f64 1 (fma.f64 t (fma.f64 x (log.f64 y) t) (pow.f64 (*.f64 x (log.f64 y)) 2))) (+.f64 (neg.f64 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 t (*.f64 x (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 t t)) (/.f64 1 (fma.f64 x (log.f64 y) t)) (fma.f64 (neg.f64 t) 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 t t)) (/.f64 1 (fma.f64 x (log.f64 y) t)) (fma.f64 (neg.f64 (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 t t)) (/.f64 1 (fma.f64 x (log.f64 y) t)) (+.f64 (neg.f64 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (neg.f64 t)) 2) (cbrt.f64 (neg.f64 t)) (*.f64 x (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 t)) (sqrt.f64 (neg.f64 t)) (*.f64 x (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 t)) (sqrt.f64 t) (*.f64 x (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 x (log.f64 y))) (sqrt.f64 t)) (-.f64 (sqrt.f64 (*.f64 x (log.f64 y))) (sqrt.f64 t)) (fma.f64 (neg.f64 t) 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 x (log.f64 y))) (sqrt.f64 t)) (-.f64 (sqrt.f64 (*.f64 x (log.f64 y))) (sqrt.f64 t)) (fma.f64 (neg.f64 (cbrt.f64 t)) (pow.f64 (cbrt.f64 t) 2) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 x (log.f64 y))) (sqrt.f64 t)) (-.f64 (sqrt.f64 (*.f64 x (log.f64 y))) (sqrt.f64 t)) (+.f64 (neg.f64 t) t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 t) 2)) (cbrt.f64 t) (*.f64 x (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y)) (*.f64 (neg.f64 t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sqrt.f64 (log.f64 y))) (sqrt.f64 (log.f64 y)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sqrt.f64 (log.f64 y))) (sqrt.f64 (log.f64 y)) (*.f64 (neg.f64 t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (log.f64 y) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (log.f64 y) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x) (*.f64 (neg.f64 t) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (log.f64 y) (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (log.f64 y) (sqrt.f64 x)) (sqrt.f64 x) (*.f64 (neg.f64 t) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x (log.f64 y)) t) (*.f64 z (log1p.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (log1p.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (log1p.f64 y)) 1) (-.f64 (*.f64 x (log.f64 y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t))) (cbrt.f64 (pow.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t)) 2)) (cbrt.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t))) (sqrt.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 z (log1p.f64 y)) 3) (pow.f64 (-.f64 (*.f64 x (log.f64 y)) t) 3)) (+.f64 (pow.f64 (*.f64 z (log1p.f64 y)) 2) (-.f64 (pow.f64 (-.f64 (*.f64 x (log.f64 y)) t) 2) (*.f64 (*.f64 z (log1p.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 z (log1p.f64 y)) 2) (pow.f64 (-.f64 (*.f64 x (log.f64 y)) t) 2)) (-.f64 (*.f64 z (log1p.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 (pow.f64 y x) (exp.f64 t)) (exp.f64 (*.f64 z (log1p.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (-.f64 (*.f64 x (log.f64 y)) t))) (exp.f64 (*.f64 z (log1p.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 z (log1p.f64 y))) (+.f64 1 (expm1.f64 (-.f64 (*.f64 x (log.f64 y)) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 z (log1p.f64 y) (-.f64 (*.f64 x (log.f64 y)) t))) 1))))))"]],"rules":[["egg-rr",32],["egg-rr",112],["egg-rr",17]],"stop":[["node limit",1]],"time":56.533935546875,"type":"rewrite"},{"count":[[269,201]],"egraph":[[4,7972,1278,0.031515751],[3,3513,1278,0.018992292],[2,814,1317,0.0069255],[1,260,1335,0.001986417],[0,85,1417,0.000464084]],"inputs":[["(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(-.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)) t)","(-.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)) t)","(-.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)) t)","(-.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)) t)","(-.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) t)","(-.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) t)","(-.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) t)","(-.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) t)","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(*.f64 z (log.f64 (-.f64 1 y)))","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(*.f64 z (log.f64 (-.f64 1 y)))","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(-.f64 (+.f64 (*.f64 -1 (*.f64 y z)) (*.f64 (log.f64 y) x)) t)","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (*.f64 y z)) (*.f64 (log.f64 y) x))) t)","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (*.f64 y z)) (+.f64 (*.f64 (log.f64 y) x) (*.f64 -1/3 (*.f64 (pow.f64 y 3) z))))) t)","(-.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)) (*.f64 z (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 y)))))) t)","(-.f64 (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 z (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 y))))) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)))) t)","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 z (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 z (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 y))))) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))))) t)","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 z (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 -1/3 (/.f64 z (pow.f64 y 3))) (+.f64 (*.f64 z (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 y))))) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)))))) t)","(-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z))) t)","(-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z)) (*.f64 -1 (/.f64 z y)))) t)","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 z (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z)) (*.f64 -1 (/.f64 z y))))) t)","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 z (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z)) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1/3 (/.f64 z (pow.f64 y 3))))))) t)","(-.f64 (*.f64 z (log.f64 (-.f64 1 y))) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(*.f64 (log.f64 y) x)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(*.f64 (log.f64 y) x)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y))))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))))","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))))","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))","(*.f64 (log.f64 y) x)","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))","(*.f64 (log.f64 y) x)","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))","(*.f64 (log.f64 y) x)","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))","(*.f64 (log.f64 y) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)","(*.f64 (log.f64 y) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)","(*.f64 (log.f64 y) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)","(*.f64 (log.f64 y) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)","(*.f64 (log.f64 y) x)","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(*.f64 z (log.f64 (-.f64 1 y)))","(*.f64 z (log1p.f64 (neg.f64 y)))","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(*.f64 z (log.f64 (-.f64 1 y)))","(*.f64 z (log1p.f64 (neg.f64 y)))","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (+.f64 (*.f64 -1 (*.f64 y z)) (*.f64 (log.f64 y) x)) t)","(-.f64 (fma.f64 -1 (*.f64 y z) (*.f64 (log.f64 y) x)) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 y (neg.f64 z))) t)","(-.f64 (*.f64 (log.f64 y) x) (+.f64 (*.f64 y z) t))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (*.f64 y z)) (*.f64 (log.f64 y) x))) t)","(-.f64 (fma.f64 -1/2 (*.f64 z (*.f64 y y)) (fma.f64 -1 (*.f64 y z) (*.f64 (log.f64 y) x))) t)","(-.f64 (fma.f64 (*.f64 (*.f64 -1/2 y) y) z (fma.f64 (log.f64 y) x (*.f64 y (neg.f64 z)))) t)","(-.f64 (fma.f64 z (-.f64 (*.f64 y (*.f64 y -1/2)) y) (*.f64 (log.f64 y) x)) t)","(fma.f64 z (-.f64 (*.f64 y (*.f64 y -1/2)) y) (fma.f64 (log.f64 y) x (neg.f64 t)))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (*.f64 y z)) (+.f64 (*.f64 (log.f64 y) x) (*.f64 -1/3 (*.f64 (pow.f64 y 3) z))))) t)","(-.f64 (fma.f64 -1/2 (*.f64 z (*.f64 y y)) (fma.f64 -1 (*.f64 y z) (fma.f64 (log.f64 y) x (*.f64 -1/3 (*.f64 z (pow.f64 y 3)))))) t)","(-.f64 (fma.f64 -1/2 (*.f64 y (*.f64 y z)) (-.f64 (fma.f64 (log.f64 y) x (*.f64 z (*.f64 -1/3 (pow.f64 y 3)))) (*.f64 y z))) t)","(-.f64 (fma.f64 z (-.f64 (*.f64 y (*.f64 y -1/2)) y) (fma.f64 (log.f64 y) x (*.f64 -1/3 (*.f64 z (pow.f64 y 3))))) t)","(-.f64 (*.f64 (log.f64 y) x) (+.f64 (*.f64 z (-.f64 y (*.f64 (*.f64 y y) (+.f64 (*.f64 y -1/3) -1/2)))) t))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)) (*.f64 z (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 y)))))) t)","(-.f64 (fma.f64 z (+.f64 (log.f64 -1) (neg.f64 (neg.f64 (log.f64 y)))) (*.f64 (neg.f64 (neg.f64 (log.f64 y))) x)) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (+.f64 (log.f64 y) (log.f64 -1)))) t)","(-.f64 (fma.f64 (log.f64 -1) z (*.f64 (log.f64 y) (+.f64 z x))) t)","(-.f64 (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 z (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 y))))) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)))) t)","(-.f64 (fma.f64 -1 (/.f64 z y) (fma.f64 z (+.f64 (log.f64 -1) (neg.f64 (neg.f64 (log.f64 y)))) (*.f64 (neg.f64 (neg.f64 (log.f64 y))) x))) t)","(-.f64 (-.f64 (fma.f64 (log.f64 y) x (*.f64 z (+.f64 (log.f64 y) (log.f64 -1)))) (/.f64 z y)) t)","(-.f64 (fma.f64 (log.f64 -1) z (*.f64 (log.f64 y) (+.f64 z x))) (+.f64 (/.f64 z y) t))","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 z (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 z (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 y))))) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))))) t)","(-.f64 (fma.f64 -1/2 (/.f64 z (*.f64 y y)) (fma.f64 -1 (/.f64 z y) (fma.f64 z (+.f64 (log.f64 -1) (neg.f64 (neg.f64 (log.f64 y)))) (*.f64 (neg.f64 (neg.f64 (log.f64 y))) x)))) t)","(-.f64 (fma.f64 -1/2 (/.f64 (/.f64 z y) y) (-.f64 (fma.f64 (log.f64 y) x (*.f64 z (+.f64 (log.f64 y) (log.f64 -1)))) (/.f64 z y))) t)","(+.f64 (fma.f64 (log.f64 -1) z (*.f64 (log.f64 y) (+.f64 z x))) (-.f64 (*.f64 (/.f64 z y) (+.f64 -1 (/.f64 -1/2 y))) t))","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 z (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 -1/3 (/.f64 z (pow.f64 y 3))) (+.f64 (*.f64 z (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 y))))) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)))))) t)","(-.f64 (fma.f64 -1/2 (/.f64 z (*.f64 y y)) (fma.f64 -1 (/.f64 z y) (fma.f64 -1/3 (/.f64 z (pow.f64 y 3)) (fma.f64 z (+.f64 (log.f64 -1) (neg.f64 (neg.f64 (log.f64 y)))) (*.f64 (neg.f64 (neg.f64 (log.f64 y))) x))))) t)","(-.f64 (fma.f64 -1/2 (/.f64 (/.f64 z y) y) (-.f64 (fma.f64 -1/3 (/.f64 z (pow.f64 y 3)) (fma.f64 (log.f64 y) x (*.f64 z (+.f64 (log.f64 y) (log.f64 -1))))) (/.f64 z y))) t)","(+.f64 (fma.f64 -1/3 (/.f64 z (pow.f64 y 3)) (fma.f64 (log.f64 -1) z (*.f64 (log.f64 y) (+.f64 z x)))) (-.f64 (*.f64 (/.f64 z y) (+.f64 -1 (/.f64 -1/2 y))) t))","(+.f64 (*.f64 (/.f64 z y) (+.f64 (/.f64 -1/3 (*.f64 y y)) (+.f64 (/.f64 -1/2 y) -1))) (-.f64 (fma.f64 (log.f64 -1) z (*.f64 (log.f64 y) (+.f64 z x))) t))","(-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z))) t)","(-.f64 (fma.f64 (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 -1)) x (*.f64 (neg.f64 (log.f64 (/.f64 -1 y))) z)) t)","(-.f64 (-.f64 (*.f64 x (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y)))) (*.f64 (log.f64 (/.f64 -1 y)) z)) t)","(-.f64 (*.f64 x (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y)))) (+.f64 (*.f64 (log.f64 (/.f64 -1 y)) z) t))","(fma.f64 (-.f64 (log.f64 y) (log.f64 -1)) z (fma.f64 (log.f64 y) x (neg.f64 t)))","(-.f64 (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z)) (*.f64 -1 (/.f64 z y)))) t)","(-.f64 (fma.f64 (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 -1)) x (fma.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z) (neg.f64 (/.f64 z y)))) t)","(-.f64 (fma.f64 x (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y))) (neg.f64 (fma.f64 (log.f64 (/.f64 -1 y)) z (/.f64 z y)))) t)","(-.f64 (-.f64 (*.f64 x (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y)))) (fma.f64 (log.f64 (/.f64 -1 y)) z (/.f64 z y))) t)","(-.f64 (*.f64 (log.f64 y) x) (+.f64 (fma.f64 (log.f64 (/.f64 -1 y)) z (/.f64 z y)) t))","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 z (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z)) (*.f64 -1 (/.f64 z y))))) t)","(-.f64 (fma.f64 -1/2 (/.f64 z (*.f64 y y)) (fma.f64 (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 -1)) x (fma.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z) (neg.f64 (/.f64 z y))))) t)","(-.f64 (fma.f64 -1/2 (/.f64 (/.f64 z y) y) (fma.f64 x (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y))) (neg.f64 (fma.f64 (log.f64 (/.f64 -1 y)) z (/.f64 z y))))) t)","(-.f64 (fma.f64 x (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y))) (-.f64 (*.f64 (/.f64 z y) (+.f64 -1 (/.f64 -1/2 y))) (*.f64 (log.f64 (/.f64 -1 y)) z))) t)","(-.f64 (fma.f64 (log.f64 y) x (-.f64 (*.f64 (/.f64 z y) (+.f64 -1 (/.f64 -1/2 y))) (*.f64 (log.f64 (/.f64 -1 y)) z))) t)","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 z (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z)) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1/3 (/.f64 z (pow.f64 y 3))))))) t)","(-.f64 (fma.f64 -1/2 (/.f64 z (*.f64 y y)) (fma.f64 (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 -1)) x (fma.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z) (fma.f64 -1 (/.f64 z y) (*.f64 -1/3 (/.f64 z (pow.f64 y 3))))))) t)","(-.f64 (fma.f64 -1/2 (/.f64 (/.f64 z y) y) (fma.f64 x (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y))) (fma.f64 -1 (fma.f64 (log.f64 (/.f64 -1 y)) z (/.f64 z y)) (*.f64 -1/3 (/.f64 z (pow.f64 y 3)))))) t)","(-.f64 (fma.f64 x (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y))) (fma.f64 -1/2 (/.f64 (/.f64 z y) y) (-.f64 (*.f64 -1/3 (/.f64 z (pow.f64 y 3))) (fma.f64 (log.f64 (/.f64 -1 y)) z (/.f64 z y))))) t)","(-.f64 (fma.f64 (log.f64 y) x (-.f64 (*.f64 (/.f64 (/.f64 z y) y) (+.f64 -1/2 (/.f64 -1/3 y))) (fma.f64 (log.f64 (/.f64 -1 y)) z (/.f64 z y)))) t)","(-.f64 (*.f64 z (log.f64 (-.f64 1 y))) t)","(-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (neg.f64 t))","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(*.f64 (log.f64 y) x)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(*.f64 (log.f64 y) x)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(-.f64 (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y))))","(fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y))))","(fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y))))","(fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))))","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))))","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))))","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))))","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))))","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))))","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))))","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))))","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 (log.f64 y) x) (*.f64 z (log.f64 (-.f64 1 y)))))","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log.f64 (-.f64 1 y)))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y)))) t)","(-.f64 (fma.f64 z (log1p.f64 (neg.f64 y)) (*.f64 (log.f64 y) x)) t)"]],"stop":[["node limit",1]],"time":59.945068359375,"type":"simplify"},{"compiler":[[3697,1189]],"time":29.826904296875,"type":"eval"},{"alts":[["(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2) (*.f64 (cbrt.f64 (log.f64 y)) x) (neg.f64 t)))","fresh",0.35982143560039836],["(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 (log.f64 y) (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 t)))","fresh",33.84212875976844],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3) t))","next",0.3354264649057244],["(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (cbrt.f64 x) (log.f64 y)) (neg.f64 t)))","fresh",17.19214680192871],["(fma.f64 z (log1p.f64 (neg.f64 y)) (pow.f64 (/.f64 (fma.f64 x (log.f64 y) t) (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 t t))) -1))","fresh",29.786893540644957],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))","done",0.0859375],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (log.f64 (pow.f64 y x)) t))","fresh",34.69754975726243],["(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y)) (neg.f64 t)))","fresh",0.35657895513728244]],"compiler":[[22,14],[19,12],[18,13],[21,14],[27,17],[15,10],[15,10],[22,14],[22,14],[19,12],[18,13],[21,14],[27,17],[15,10],[22,14]],"count":[[202,8]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[201,7],"picked":[1,1]}],"min-error":[0.01171875],"time":51.5400390625,"type":"prune"},{"compiler":[[55,19]],"locations":[["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3) t))",0.00390625,true],["(cbrt.f64 (*.f64 x (log.f64 y)))",0.109375,true],["(*.f64 x (log.f64 y))",0.25390625,false],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3)",0.7368891114323551,true]],"time":12.18896484375,"type":"localize"},{"count":[[3,63]],"series":[["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3) t))","t","-inf",0.20703125],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3) t))","t","inf",0.206787109375],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3) t))","t","0",0.59814453125],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3) t))","x","-inf",0.298828125],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3) t))","x","inf",1.195068359375],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3) t))","x","0",0.261962890625],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3) t))","y","-inf",0.323974609375],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3) t))","y","inf",0.326904296875],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3) t))","y","0",0.2109375],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3) t))","z","-inf",0.198974609375],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3) t))","z","inf",0.197021484375],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3) t))","z","0",0.580078125],["(cbrt.f64 (*.f64 x (log.f64 y)))","y","-inf",0.196044921875],["(cbrt.f64 (*.f64 x (log.f64 y)))","y","inf",0.18701171875],["(cbrt.f64 (*.f64 x (log.f64 y)))","y","0",0.172119140625],["(cbrt.f64 (*.f64 x (log.f64 y)))","x","-inf",0.2900390625],["(cbrt.f64 (*.f64 x (log.f64 y)))","x","inf",0.256103515625],["(cbrt.f64 (*.f64 x (log.f64 y)))","x","0",0.2158203125],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3)","y","-inf",1.427978515625],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3)","y","inf",9.279052734375],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3)","y","0",1.529052734375],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3)","x","-inf",0.968994140625],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3)","x","inf",0.55712890625],["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3)","x","0",0.77099609375]],"time":20.7900390625,"type":"series"},{"count":[[3,95]],"egraph":[[2,3492,29,0.027117791000000002],[1,296,29,0.004969541],[0,14,31,0.000356833]],"inputs":[["(pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3)","(cbrt.f64 (*.f64 x (log.f64 y)))","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3) t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 x (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 y x)) 2)) (log.f64 (cbrt.f64 (pow.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 y x))) (log.f64 (sqrt.f64 (pow.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 x (log.f64 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (log.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 y) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (log.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (log.f64 y))) (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 2) (cbrt.f64 (*.f64 x (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (log.f64 y)) (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 2)) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 y)))) (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2) (*.f64 (cbrt.f64 (log.f64 y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 x (log.f64 y))) (sqrt.f64 (*.f64 x (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (log.f64 y)) 1/6) (*.f64 (pow.f64 (*.f64 x (log.f64 y)) 1/6) (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 y)) (*.f64 (sqrt.f64 (log.f64 y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (sqrt.f64 (log.f64 y))) (sqrt.f64 (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 y) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 y) (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 2) 1) (cbrt.f64 (*.f64 x (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 2) (cbrt.f64 x)) (cbrt.f64 (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 x (log.f64 y))) (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 y))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 2) (pow.f64 (*.f64 x (log.f64 y)) 1/6)) (pow.f64 (*.f64 x (log.f64 y)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (log.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 y x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (log.f64 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 y x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (log.f64 y))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (*.f64 x (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (*.f64 x (log.f64 y))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (*.f64 x (log.f64 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (*.f64 x (log.f64 y)))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (*.f64 x (log.f64 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (*.f64 x (log.f64 y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 x (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 y)))) (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 2)) (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 y)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (log.f64 y)) 1/6) (pow.f64 (*.f64 x (log.f64 y)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (*.f64 x (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (log.f64 y)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (log.f64 y)) 3) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 2)) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (log.f64 y))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (log.f64 y)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (*.f64 x (log.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (*.f64 x (log.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (*.f64 x (log.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (*.f64 x (log.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (*.f64 x (log.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (log.f64 y))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 x (log.f64 y)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 x (log.f64 y)) t) (*.f64 z (log1p.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (log1p.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (log1p.f64 y)) 1) (-.f64 (*.f64 x (log.f64 y)) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t))) 2)) (log.f64 (cbrt.f64 (exp.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t)))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t)) (pow.f64 (cbrt.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t)) 2) (cbrt.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t)) (sqrt.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 z (log1p.f64 y)) 3) (pow.f64 (-.f64 (*.f64 x (log.f64 y)) t) 3)) (+.f64 (pow.f64 (*.f64 z (log1p.f64 y)) 2) (-.f64 (pow.f64 (-.f64 (*.f64 x (log.f64 y)) t) 2) (*.f64 (*.f64 z (log1p.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 z (log1p.f64 y)) 2) (pow.f64 (-.f64 (*.f64 x (log.f64 y)) t) 2)) (-.f64 (*.f64 z (log1p.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 (pow.f64 y x) (exp.f64 t)) (exp.f64 (*.f64 z (log1p.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (-.f64 (*.f64 x (log.f64 y)) t))) (exp.f64 (*.f64 z (log1p.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 z (log1p.f64 y))) (+.f64 1 (expm1.f64 (-.f64 (*.f64 x (log.f64 y)) t)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (fma.f64 z (log1p.f64 y) (*.f64 x (log.f64 y))) t)) 1))))))"]],"rules":[["egg-rr",32],["egg-rr",29],["egg-rr",34]],"stop":[["node limit",1]],"time":50.35302734375,"type":"rewrite"},{"count":[[158,138]],"egraph":[[3,3755,892,0.020906792],[2,949,929,0.007675292],[1,298,947,0.002187792],[0,93,1142,0.000502042]],"inputs":[["(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 y)) x)))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 y)) x)))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 y)) x)))","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 y)) x)))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x))","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x))","(pow.f64 (*.f64 (log.f64 y) x) 1/3)","(pow.f64 (*.f64 (log.f64 y) x) 1/3)","(pow.f64 (*.f64 (log.f64 y) x) 1/3)","(pow.f64 (*.f64 (log.f64 y) x) 1/3)","(*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 (/.f64 1 y)) x)) 1/3) (cbrt.f64 -1))","(*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 (/.f64 1 y)) x)) 1/3) (cbrt.f64 -1))","(*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 (/.f64 1 y)) x)) 1/3) (cbrt.f64 -1))","(*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 (/.f64 1 y)) x)) 1/3) (cbrt.f64 -1))","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) 1/3)","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) 1/3)","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) 1/3)","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) 1/3)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(-.f64 (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(-.f64 (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(*.f64 z (log.f64 (-.f64 1 y)))","(-.f64 (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(-.f64 (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(-.f64 (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(*.f64 z (log.f64 (-.f64 1 y)))","(-.f64 (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(-.f64 (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(-.f64 (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (+.f64 (*.f64 -1 (*.f64 y z)) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (*.f64 y z)) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))) t)","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (*.f64 y z)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 y 3) z)) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))) t)","(-.f64 (+.f64 (*.f64 z (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 y))))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 y)) x)))) t)","(-.f64 (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 y)) x))) (*.f64 z (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 y))))))) t)","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 z (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 y)) x))) (*.f64 z (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 y)))))))) t)","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 z (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 -1/3 (/.f64 z (pow.f64 y 3))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 y)) x))) (*.f64 z (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 y))))))))) t)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z))) t)","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z)) (*.f64 -1 (/.f64 z y)))) t)","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 z (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z)) (*.f64 -1 (/.f64 z y))))) t)","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 z (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z)) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1/3 (/.f64 z (pow.f64 y 3))))))) t)","(-.f64 (*.f64 z (log.f64 (-.f64 1 y))) t)","(-.f64 (*.f64 z (log.f64 (-.f64 1 y))) t)","(-.f64 (*.f64 z (log.f64 (-.f64 1 y))) t)","(+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(*.f64 1 (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(*.f64 1 (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(*.f64 1 (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(*.f64 1 (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 y)) x)))","(*.f64 1 (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 y)) x)))","(*.f64 1 (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 y)) x)))","(*.f64 1 (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 y)) x)))","(*.f64 1 (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x))","(*.f64 1 (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x))","(*.f64 1 (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x))","(*.f64 1 (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x))","(*.f64 1 (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(pow.f64 (*.f64 (log.f64 y) x) 1/3)","(cbrt.f64 (*.f64 (log.f64 y) x))","(pow.f64 (*.f64 (log.f64 y) x) 1/3)","(cbrt.f64 (*.f64 (log.f64 y) x))","(pow.f64 (*.f64 (log.f64 y) x) 1/3)","(cbrt.f64 (*.f64 (log.f64 y) x))","(pow.f64 (*.f64 (log.f64 y) x) 1/3)","(cbrt.f64 (*.f64 (log.f64 y) x))","(*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 (/.f64 1 y)) x)) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 x (neg.f64 (log.f64 y)))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (log.f64 y) (neg.f64 x))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 -1) (cbrt.f64 (*.f64 (log.f64 y) (neg.f64 x))))","(*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 (/.f64 1 y)) x)) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 x (neg.f64 (log.f64 y)))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (log.f64 y) (neg.f64 x))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 -1) (cbrt.f64 (*.f64 (log.f64 y) (neg.f64 x))))","(*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 (/.f64 1 y)) x)) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 x (neg.f64 (log.f64 y)))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (log.f64 y) (neg.f64 x))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 -1) (cbrt.f64 (*.f64 (log.f64 y) (neg.f64 x))))","(*.f64 (pow.f64 (*.f64 1 (*.f64 (log.f64 (/.f64 1 y)) x)) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 x (neg.f64 (log.f64 y)))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (log.f64 y) (neg.f64 x))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 -1) (cbrt.f64 (*.f64 (log.f64 y) (neg.f64 x))))","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) 1/3)","(cbrt.f64 (*.f64 (log.f64 y) x))","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) 1/3)","(cbrt.f64 (*.f64 (log.f64 y) x))","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) 1/3)","(cbrt.f64 (*.f64 (log.f64 y) x))","(pow.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) 1/3)","(cbrt.f64 (*.f64 (log.f64 y) x))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(-.f64 (fma.f64 z (log.f64 (-.f64 1 y)) (*.f64 1 (*.f64 (log.f64 y) x))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (log.f64 y) x) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (log.f64 y) x (neg.f64 t)))","(fma.f64 (log.f64 y) x (-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t))","(-.f64 (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(-.f64 (fma.f64 z (log.f64 (-.f64 1 y)) (*.f64 1 (*.f64 (log.f64 y) x))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (log.f64 y) x) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (log.f64 y) x (neg.f64 t)))","(fma.f64 (log.f64 y) x (-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t))","(-.f64 (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(-.f64 (fma.f64 z (log.f64 (-.f64 1 y)) (*.f64 1 (*.f64 (log.f64 y) x))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (log.f64 y) x) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (log.f64 y) x (neg.f64 t)))","(fma.f64 (log.f64 y) x (-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t))","(*.f64 z (log.f64 (-.f64 1 y)))","(*.f64 z (log1p.f64 (neg.f64 y)))","(-.f64 (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(-.f64 (fma.f64 z (log.f64 (-.f64 1 y)) (*.f64 1 (*.f64 (log.f64 y) x))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (log.f64 y) x) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (log.f64 y) x (neg.f64 t)))","(fma.f64 (log.f64 y) x (-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t))","(-.f64 (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(-.f64 (fma.f64 z (log.f64 (-.f64 1 y)) (*.f64 1 (*.f64 (log.f64 y) x))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (log.f64 y) x) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (log.f64 y) x (neg.f64 t)))","(fma.f64 (log.f64 y) x (-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t))","(-.f64 (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(-.f64 (fma.f64 z (log.f64 (-.f64 1 y)) (*.f64 1 (*.f64 (log.f64 y) x))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (log.f64 y) x) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (log.f64 y) x (neg.f64 t)))","(fma.f64 (log.f64 y) x (-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t))","(*.f64 z (log.f64 (-.f64 1 y)))","(*.f64 z (log1p.f64 (neg.f64 y)))","(-.f64 (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(-.f64 (fma.f64 z (log.f64 (-.f64 1 y)) (*.f64 1 (*.f64 (log.f64 y) x))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (log.f64 y) x) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (log.f64 y) x (neg.f64 t)))","(fma.f64 (log.f64 y) x (-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t))","(-.f64 (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(-.f64 (fma.f64 z (log.f64 (-.f64 1 y)) (*.f64 1 (*.f64 (log.f64 y) x))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (log.f64 y) x) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (log.f64 y) x (neg.f64 t)))","(fma.f64 (log.f64 y) x (-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t))","(-.f64 (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(-.f64 (fma.f64 z (log.f64 (-.f64 1 y)) (*.f64 1 (*.f64 (log.f64 y) x))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (log.f64 y) x) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (log.f64 y) x (neg.f64 t)))","(fma.f64 (log.f64 y) x (-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (+.f64 (*.f64 -1 (*.f64 y z)) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))) t)","(-.f64 (fma.f64 -1 (*.f64 y z) (*.f64 1 (*.f64 (log.f64 y) x))) t)","(-.f64 (fma.f64 (log.f64 y) x (*.f64 z (neg.f64 y))) t)","(-.f64 (*.f64 (log.f64 y) x) (+.f64 (*.f64 y z) t))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (*.f64 y z)) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))) t)","(-.f64 (fma.f64 -1/2 (*.f64 z (*.f64 y y)) (fma.f64 -1 (*.f64 y z) (*.f64 1 (*.f64 (log.f64 y) x)))) t)","(-.f64 (fma.f64 (*.f64 -1/2 (*.f64 y y)) z (fma.f64 (log.f64 y) x (*.f64 z (neg.f64 y)))) t)","(fma.f64 z (-.f64 (*.f64 -1/2 (*.f64 y y)) y) (fma.f64 (log.f64 y) x (neg.f64 t)))","(fma.f64 z (-.f64 (*.f64 y (*.f64 y -1/2)) y) (fma.f64 (log.f64 y) x (neg.f64 t)))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 y 2) z)) (+.f64 (*.f64 -1 (*.f64 y z)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 y 3) z)) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))) t)","(-.f64 (fma.f64 -1/2 (*.f64 z (*.f64 y y)) (fma.f64 -1 (*.f64 y z) (fma.f64 -1/3 (*.f64 z (pow.f64 y 3)) (*.f64 1 (*.f64 (log.f64 y) x))))) t)","(-.f64 (fma.f64 -1/2 (*.f64 y (*.f64 y z)) (-.f64 (fma.f64 (log.f64 y) x (*.f64 -1/3 (*.f64 z (pow.f64 y 3)))) (*.f64 y z))) t)","(-.f64 (fma.f64 z (-.f64 (*.f64 -1/2 (*.f64 y y)) y) (fma.f64 (log.f64 y) x (*.f64 -1/3 (*.f64 z (pow.f64 y 3))))) t)","(-.f64 (fma.f64 z (-.f64 (*.f64 -1/3 (pow.f64 y 3)) y) (fma.f64 (log.f64 y) x (*.f64 (*.f64 y y) (*.f64 z -1/2)))) t)","(-.f64 (+.f64 (*.f64 z (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 y))))) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 y)) x)))) t)","(-.f64 (fma.f64 z (+.f64 (log.f64 -1) (neg.f64 (neg.f64 (log.f64 y)))) (neg.f64 (*.f64 x (neg.f64 (log.f64 y))))) t)","(fma.f64 z (+.f64 (log.f64 y) (log.f64 -1)) (-.f64 (*.f64 (log.f64 y) x) t))","(-.f64 (fma.f64 (log.f64 -1) z (*.f64 (log.f64 y) (+.f64 z x))) t)","(-.f64 (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 y)) x))) (*.f64 z (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 y))))))) t)","(-.f64 (fma.f64 -1 (/.f64 z y) (fma.f64 z (+.f64 (log.f64 -1) (neg.f64 (neg.f64 (log.f64 y)))) (neg.f64 (*.f64 x (neg.f64 (log.f64 y)))))) t)","(-.f64 (-.f64 (fma.f64 z (+.f64 (log.f64 y) (log.f64 -1)) (*.f64 (log.f64 y) x)) (/.f64 z y)) t)","(-.f64 (fma.f64 (log.f64 -1) z (*.f64 (log.f64 y) (+.f64 z x))) (+.f64 (/.f64 z y) t))","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 z (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 y)) x))) (*.f64 z (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 y)))))))) t)","(-.f64 (fma.f64 -1/2 (/.f64 z (*.f64 y y)) (fma.f64 -1 (/.f64 z y) (fma.f64 z (+.f64 (log.f64 -1) (neg.f64 (neg.f64 (log.f64 y)))) (neg.f64 (*.f64 x (neg.f64 (log.f64 y))))))) t)","(-.f64 (fma.f64 -1/2 (/.f64 z (*.f64 y y)) (-.f64 (fma.f64 z (+.f64 (log.f64 y) (log.f64 -1)) (*.f64 (log.f64 y) x)) (/.f64 z y))) t)","(+.f64 (-.f64 (fma.f64 (log.f64 -1) z (*.f64 (log.f64 y) (+.f64 z x))) t) (*.f64 (/.f64 z y) (+.f64 -1 (/.f64 -1/2 y))))","(+.f64 (fma.f64 (log.f64 -1) z (*.f64 (log.f64 y) (+.f64 z x))) (-.f64 (*.f64 (/.f64 z y) (+.f64 (/.f64 -1/2 y) -1)) t))","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 z (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 z y)) (+.f64 (*.f64 -1/3 (/.f64 z (pow.f64 y 3))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 (/.f64 1 y)) x))) (*.f64 z (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 1 y))))))))) t)","(-.f64 (fma.f64 -1/2 (/.f64 z (*.f64 y y)) (fma.f64 -1 (/.f64 z y) (fma.f64 -1/3 (/.f64 z (pow.f64 y 3)) (fma.f64 z (+.f64 (log.f64 -1) (neg.f64 (neg.f64 (log.f64 y)))) (neg.f64 (*.f64 x (neg.f64 (log.f64 y)))))))) t)","(-.f64 (fma.f64 -1/2 (/.f64 z (*.f64 y y)) (-.f64 (fma.f64 -1/3 (/.f64 z (pow.f64 y 3)) (fma.f64 z (+.f64 (log.f64 y) (log.f64 -1)) (*.f64 (log.f64 y) x))) (/.f64 z y))) t)","(+.f64 (fma.f64 -1/3 (/.f64 z (pow.f64 y 3)) (fma.f64 (log.f64 -1) z (*.f64 (log.f64 y) (+.f64 z x)))) (-.f64 (*.f64 (/.f64 z y) (+.f64 -1 (/.f64 -1/2 y))) t))","(+.f64 (-.f64 (*.f64 (/.f64 z (*.f64 y y)) (+.f64 -1/2 (/.f64 -1/3 y))) (/.f64 z y)) (-.f64 (fma.f64 (log.f64 -1) z (*.f64 (log.f64 y) (+.f64 z x))) t))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z))) t)","(-.f64 (fma.f64 1 (*.f64 x (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 -1))) (*.f64 (neg.f64 (log.f64 (/.f64 -1 y))) z)) t)","(-.f64 (-.f64 (*.f64 x (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y)))) (*.f64 (log.f64 (/.f64 -1 y)) z)) t)","(-.f64 (*.f64 x (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y)))) (+.f64 (*.f64 (log.f64 (/.f64 -1 y)) z) t))","(fma.f64 (-.f64 (log.f64 y) (log.f64 -1)) z (fma.f64 (log.f64 y) x (neg.f64 t)))","(-.f64 (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z)) (*.f64 -1 (/.f64 z y)))) t)","(-.f64 (fma.f64 1 (*.f64 x (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 -1))) (*.f64 -1 (+.f64 (*.f64 (log.f64 (/.f64 -1 y)) z) (/.f64 z y)))) t)","(-.f64 (fma.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y))) x (neg.f64 (fma.f64 (log.f64 (/.f64 -1 y)) z (/.f64 z y)))) t)","(-.f64 (-.f64 (*.f64 x (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y)))) (fma.f64 (log.f64 (/.f64 -1 y)) z (/.f64 z y))) t)","(-.f64 (fma.f64 (log.f64 y) x (neg.f64 t)) (fma.f64 (log.f64 (/.f64 -1 y)) z (/.f64 z y)))","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 z (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z)) (*.f64 -1 (/.f64 z y))))) t)","(-.f64 (fma.f64 -1/2 (/.f64 z (*.f64 y y)) (fma.f64 1 (*.f64 x (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 -1))) (*.f64 -1 (+.f64 (*.f64 (log.f64 (/.f64 -1 y)) z) (/.f64 z y))))) t)","(-.f64 (fma.f64 -1/2 (/.f64 z (*.f64 y y)) (fma.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y))) x (neg.f64 (fma.f64 (log.f64 (/.f64 -1 y)) z (/.f64 z y))))) t)","(-.f64 (fma.f64 x (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y))) (-.f64 (*.f64 (/.f64 z y) (+.f64 -1 (/.f64 -1/2 y))) (*.f64 (log.f64 (/.f64 -1 y)) z))) t)","(-.f64 (fma.f64 (log.f64 y) x (-.f64 (*.f64 (/.f64 z y) (+.f64 (/.f64 -1/2 y) -1)) (*.f64 (log.f64 (/.f64 -1 y)) z))) t)","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 z (pow.f64 y 2))) (+.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) (+.f64 (*.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z)) (+.f64 (*.f64 -1 (/.f64 z y)) (*.f64 -1/3 (/.f64 z (pow.f64 y 3))))))) t)","(-.f64 (fma.f64 -1/2 (/.f64 z (*.f64 y y)) (fma.f64 1 (*.f64 x (fma.f64 -1 (log.f64 (/.f64 -1 y)) (log.f64 -1))) (fma.f64 -1 (*.f64 (log.f64 (/.f64 -1 y)) z) (fma.f64 -1 (/.f64 z y) (*.f64 -1/3 (/.f64 z (pow.f64 y 3))))))) t)","(-.f64 (fma.f64 -1/2 (/.f64 z (*.f64 y y)) (fma.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y))) x (fma.f64 -1 (fma.f64 (log.f64 (/.f64 -1 y)) z (/.f64 z y)) (*.f64 -1/3 (/.f64 z (pow.f64 y 3)))))) t)","(-.f64 (fma.f64 -1/2 (/.f64 z (*.f64 y y)) (fma.f64 x (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 y))) (-.f64 (*.f64 (/.f64 -1/3 (pow.f64 y 3)) z) (fma.f64 (log.f64 (/.f64 -1 y)) z (/.f64 z y))))) t)","(-.f64 (fma.f64 (log.f64 y) x (-.f64 (*.f64 (/.f64 z (*.f64 y y)) (+.f64 -1/2 (/.f64 -1/3 y))) (fma.f64 (log.f64 (/.f64 -1 y)) z (/.f64 z y)))) t)","(-.f64 (*.f64 z (log.f64 (-.f64 1 y))) t)","(-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t)","(-.f64 (*.f64 z (log.f64 (-.f64 1 y))) t)","(-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t)","(-.f64 (*.f64 z (log.f64 (-.f64 1 y))) t)","(-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t)","(+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(fma.f64 z (log.f64 (-.f64 1 y)) (*.f64 1 (*.f64 (log.f64 y) x)))","(fma.f64 (log.f64 y) x (*.f64 z (log1p.f64 (neg.f64 y))))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))","(-.f64 (fma.f64 z (log.f64 (-.f64 1 y)) (*.f64 1 (*.f64 (log.f64 y) x))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (log.f64 y) x) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (log.f64 y) x (neg.f64 t)))","(fma.f64 (log.f64 y) x (-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))","(-.f64 (fma.f64 z (log.f64 (-.f64 1 y)) (*.f64 1 (*.f64 (log.f64 y) x))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (log.f64 y) x) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (log.f64 y) x (neg.f64 t)))","(fma.f64 (log.f64 y) x (-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))","(-.f64 (fma.f64 z (log.f64 (-.f64 1 y)) (*.f64 1 (*.f64 (log.f64 y) x))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (log.f64 y) x) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (log.f64 y) x (neg.f64 t)))","(fma.f64 (log.f64 y) x (-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t))","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))","(-.f64 (fma.f64 z (log.f64 (-.f64 1 y)) (*.f64 1 (*.f64 (log.f64 y) x))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (log.f64 y) x) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (log.f64 y) x (neg.f64 t)))","(fma.f64 (log.f64 y) x (-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))","(-.f64 (fma.f64 z (log.f64 (-.f64 1 y)) (*.f64 1 (*.f64 (log.f64 y) x))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (log.f64 y) x) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (log.f64 y) x (neg.f64 t)))","(fma.f64 (log.f64 y) x (-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))","(-.f64 (fma.f64 z (log.f64 (-.f64 1 y)) (*.f64 1 (*.f64 (log.f64 y) x))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (log.f64 y) x) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (log.f64 y) x (neg.f64 t)))","(fma.f64 (log.f64 y) x (-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t))","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))","(-.f64 (fma.f64 z (log.f64 (-.f64 1 y)) (*.f64 1 (*.f64 (log.f64 y) x))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (log.f64 y) x) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (log.f64 y) x (neg.f64 t)))","(fma.f64 (log.f64 y) x (-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))","(-.f64 (fma.f64 z (log.f64 (-.f64 1 y)) (*.f64 1 (*.f64 (log.f64 y) x))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (log.f64 y) x) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (log.f64 y) x (neg.f64 t)))","(fma.f64 (log.f64 y) x (-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t))","(+.f64 (*.f64 -1 t) (+.f64 (*.f64 z (log.f64 (-.f64 1 y))) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))))","(-.f64 (fma.f64 z (log.f64 (-.f64 1 y)) (*.f64 1 (*.f64 (log.f64 y) x))) t)","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (log.f64 y) x) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (log.f64 y) x (neg.f64 t)))","(fma.f64 (log.f64 y) x (-.f64 (*.f64 z (log1p.f64 (neg.f64 y))) t))"]],"stop":[["node limit",1]],"time":43.196044921875,"type":"simplify"},{"compiler":[[2817,1144]],"time":24.468994140625,"type":"eval"},{"alts":[["(fma.f64 z (log1p.f64 (neg.f64 y)) (pow.f64 (/.f64 (fma.f64 x (log.f64 y) t) (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 t t))) -1))","fresh",29.786893540644957],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (log.f64 (pow.f64 y x)) t))","fresh",34.69754975726243],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))","done",0.0859375],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 x (log.f64 y))) (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 y))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 y))))) t))","fresh",0.4375890867576842],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (*.f64 (log.f64 y) (sqrt.f64 x)) (sqrt.f64 x)) t))","fresh",33.84212875976844],["(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y)) (neg.f64 t)))","next",0.35657895513728244]],"compiler":[[27,17],[15,10],[15,10],[32,16],[19,12],[22,14],[27,17],[15,10],[32,16],[19,12],[22,14]],"count":[[166,6]],"kept":[{"done":[1,1],"fresh":[6,2],"new":[158,3],"picked":[1,0]}],"min-error":[0.01171875],"time":37.68798828125,"type":"prune"},{"compiler":[[64,24]],"locations":[["(cbrt.f64 (log.f64 y))",0.12109375,true],["(fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y)) (neg.f64 t))",0.15234375,true],["(*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2))",0.30078125,true],["(pow.f64 (cbrt.f64 (log.f64 y)) 2)",0.50390625,true]],"time":15.655029296875,"type":"localize"},{"count":[[4,84]],"series":[["(cbrt.f64 (log.f64 y))","y","-inf",0.174072265625],["(cbrt.f64 (log.f64 y))","y","inf",0.202880859375],["(cbrt.f64 (log.f64 y))","y","0",0.14501953125],["(fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y)) (neg.f64 t))","t","-inf",0.175048828125],["(fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y)) (neg.f64 t))","t","inf",0.198974609375],["(fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y)) (neg.f64 t))","t","0",1.552978515625],["(fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y)) (neg.f64 t))","y","-inf",0.35205078125],["(fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y)) (neg.f64 t))","y","inf",0.343994140625],["(fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y)) (neg.f64 t))","y","0",0.302978515625],["(fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y)) (neg.f64 t))","x","-inf",0.2919921875],["(fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y)) (neg.f64 t))","x","inf",0.219970703125],["(fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y)) (neg.f64 t))","x","0",0.55712890625],["(*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2))","y","-inf",1.443115234375],["(*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2))","y","inf",1.087890625],["(*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2))","y","0",1.14794921875],["(*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2))","x","-inf",0.316162109375],["(*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2))","x","inf",0.380859375],["(*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2))","x","0",1.64990234375],["(pow.f64 (cbrt.f64 (log.f64 y)) 2)","y","-inf",1.2119140625],["(pow.f64 (cbrt.f64 (log.f64 y)) 2)","y","inf",1.202880859375],["(pow.f64 (cbrt.f64 (log.f64 y)) 2)","y","0",1.208984375]],"time":14.477783203125,"type":"series"},{"count":[[4,72]],"egraph":[[2,2509,33,0.020474958],[1,220,33,0.0036220830000000003],[0,11,45,0.00027375]],"inputs":[["(pow.f64 (cbrt.f64 (log.f64 y)) 2)","(*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2))","(fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y)) (neg.f64 t))","(cbrt.f64 (log.f64 y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 (cbrt.f64 (log.f64 y)) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 y)) (cbrt.f64 (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (log.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 y))) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 y))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (log.f64 y))) (cbrt.f64 (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 4)) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 y)) (pow.f64 (log.f64 y) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 y) 1/6) (*.f64 (pow.f64 (log.f64 y) 1/6) (cbrt.f64 (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (log.f64 y)) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 y))) 2)) (cbrt.f64 (cbrt.f64 (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (cbrt.f64 (log.f64 y)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (log.f64 y)) (sqrt.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 4) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2)) x))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (log.f64 y) 2) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (log.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2) x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 t (*.f64 x (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (log.f64 y)) t)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (log.f64 y)) 1) t)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x (log.f64 y)) t)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (+.f64 t (*.f64 x (log.f64 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 x (log.f64 y)) 0) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 t (*.f64 x (log.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 t (*.f64 x (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 t (*.f64 x (log.f64 y)))) (pow.f64 (cbrt.f64 (+.f64 t (*.f64 x (log.f64 y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 t (*.f64 x (log.f64 y)))) 2) (cbrt.f64 (+.f64 t (*.f64 x (log.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 t (*.f64 x (log.f64 y)))) (sqrt.f64 (+.f64 t (*.f64 x (log.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (log.f64 y)) 3) (pow.f64 t 3)) (+.f64 (*.f64 (*.f64 x (log.f64 y)) (*.f64 x (log.f64 y))) (-.f64 (*.f64 t t) (*.f64 (*.f64 x (log.f64 y)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x (log.f64 y)) (*.f64 x (log.f64 y))) (*.f64 t t)) (+.f64 t (*.f64 x (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 t (*.f64 x (log.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 t (*.f64 x (log.f64 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 t (*.f64 x (log.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 t (*.f64 x (log.f64 y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 t (*.f64 x (log.f64 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 t (*.f64 x (log.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 t (*.f64 x (log.f64 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 t (*.f64 x (log.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 t (*.f64 x (log.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 t (*.f64 x (log.f64 y)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cbrt.f64 (log.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 y))) 2) (cbrt.f64 (cbrt.f64 (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (log.f64 y))) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 y) 1/6) (pow.f64 (log.f64 y) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 4))) (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (log.f64 y)) 1/3) (pow.f64 (sqrt.f64 (log.f64 y)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 y) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 y) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (log.f64 y))))))))"]],"rules":[["egg-rr",20],["egg-rr",23],["egg-rr",13],["egg-rr",16]],"stop":[["node limit",1]],"time":45.088134765625,"type":"rewrite"},{"count":[[156,94]],"egraph":[[6,7879,797,0.038548125],[5,4479,797,0.026762958],[4,1952,797,0.013099042],[3,839,805,0.0058585],[2,289,805,0.002501291],[1,142,805,0.0008882499999999999],[0,51,912,0.000311916]],"inputs":[["(pow.f64 (pow.f64 (log.f64 y) 2) 1/3)","(pow.f64 (pow.f64 (log.f64 y) 2) 1/3)","(pow.f64 (pow.f64 (log.f64 y) 2) 1/3)","(pow.f64 (pow.f64 (log.f64 y) 2) 1/3)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2) 1/3)","(pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2) 1/3)","(pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2) 1/3)","(pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2) 1/3)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)) 1/3) x)","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (*.f64 (log.f64 (/.f64 1 y)) x))) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (*.f64 (log.f64 (/.f64 1 y)) x))) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (*.f64 (log.f64 (/.f64 1 y)) x))) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (*.f64 (log.f64 (/.f64 1 y)) x))) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) t)","(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(pow.f64 (log.f64 y) 1/3)","(pow.f64 (log.f64 y) 1/3)","(pow.f64 (log.f64 y) 1/3)","(pow.f64 (log.f64 y) 1/3)","(*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 y))) 1/3) (cbrt.f64 -1))","(*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 y))) 1/3) (cbrt.f64 -1))","(*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 y))) 1/3) (cbrt.f64 -1))","(*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 y))) 1/3) (cbrt.f64 -1))","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 1/3)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 1/3)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 1/3)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 1/3)"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (pow.f64 (log.f64 y) 2) 1/3)","(cbrt.f64 (pow.f64 (log.f64 y) 2))","(pow.f64 (pow.f64 (log.f64 y) 2) 1/3)","(cbrt.f64 (pow.f64 (log.f64 y) 2))","(pow.f64 (pow.f64 (log.f64 y) 2) 1/3)","(cbrt.f64 (pow.f64 (log.f64 y) 2))","(pow.f64 (pow.f64 (log.f64 y) 2) 1/3)","(cbrt.f64 (pow.f64 (log.f64 y) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 y)) 2)) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 y)) 2)) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 y)) 2)) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (pow.f64 (neg.f64 (log.f64 y)) 2)) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) (pow.f64 (cbrt.f64 -1) 2))","(pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2) 1/3)","(cbrt.f64 (pow.f64 (log.f64 y) 2))","(pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2) 1/3)","(cbrt.f64 (pow.f64 (log.f64 y) 2))","(pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2) 1/3)","(cbrt.f64 (pow.f64 (log.f64 y) 2))","(pow.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2) 1/3)","(cbrt.f64 (pow.f64 (log.f64 y) 2))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(*.f64 1 (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(*.f64 1 (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (*.f64 (log.f64 (/.f64 1 y)) x))) t)","(-.f64 (*.f64 1 (*.f64 (cbrt.f64 -1) (*.f64 (neg.f64 (log.f64 y)) x))) t)","(-.f64 (*.f64 x (neg.f64 (*.f64 (cbrt.f64 -1) (log.f64 y)))) t)","(-.f64 (*.f64 (neg.f64 (log.f64 y)) (*.f64 (cbrt.f64 -1) x)) t)","(neg.f64 (fma.f64 (log.f64 y) (*.f64 (cbrt.f64 -1) x) t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (*.f64 (log.f64 (/.f64 1 y)) x))) t)","(-.f64 (*.f64 1 (*.f64 (cbrt.f64 -1) (*.f64 (neg.f64 (log.f64 y)) x))) t)","(-.f64 (*.f64 x (neg.f64 (*.f64 (cbrt.f64 -1) (log.f64 y)))) t)","(-.f64 (*.f64 (neg.f64 (log.f64 y)) (*.f64 (cbrt.f64 -1) x)) t)","(neg.f64 (fma.f64 (log.f64 y) (*.f64 (cbrt.f64 -1) x) t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (*.f64 (log.f64 (/.f64 1 y)) x))) t)","(-.f64 (*.f64 1 (*.f64 (cbrt.f64 -1) (*.f64 (neg.f64 (log.f64 y)) x))) t)","(-.f64 (*.f64 x (neg.f64 (*.f64 (cbrt.f64 -1) (log.f64 y)))) t)","(-.f64 (*.f64 (neg.f64 (log.f64 y)) (*.f64 (cbrt.f64 -1) x)) t)","(neg.f64 (fma.f64 (log.f64 y) (*.f64 (cbrt.f64 -1) x) t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (*.f64 (log.f64 (/.f64 1 y)) x))) t)","(-.f64 (*.f64 1 (*.f64 (cbrt.f64 -1) (*.f64 (neg.f64 (log.f64 y)) x))) t)","(-.f64 (*.f64 x (neg.f64 (*.f64 (cbrt.f64 -1) (log.f64 y)))) t)","(-.f64 (*.f64 (neg.f64 (log.f64 y)) (*.f64 (cbrt.f64 -1) x)) t)","(neg.f64 (fma.f64 (log.f64 y) (*.f64 (cbrt.f64 -1) x) t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) t)","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) t)","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) t)","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) t)","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(*.f64 1 (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(pow.f64 (log.f64 y) 1/3)","(cbrt.f64 (log.f64 y))","(pow.f64 (log.f64 y) 1/3)","(cbrt.f64 (log.f64 y))","(pow.f64 (log.f64 y) 1/3)","(cbrt.f64 (log.f64 y))","(pow.f64 (log.f64 y) 1/3)","(cbrt.f64 (log.f64 y))","(*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 y))) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 -1) (cbrt.f64 (neg.f64 (log.f64 y))))","(*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 y))) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 -1) (cbrt.f64 (neg.f64 (log.f64 y))))","(*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 y))) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 -1) (cbrt.f64 (neg.f64 (log.f64 y))))","(*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 y))) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 -1) (cbrt.f64 (neg.f64 (log.f64 y))))","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 1/3)","(cbrt.f64 (log.f64 y))","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 1/3)","(cbrt.f64 (log.f64 y))","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 1/3)","(cbrt.f64 (log.f64 y))","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 1/3)","(cbrt.f64 (log.f64 y))"]],"stop":[["node limit",1]],"time":69.052001953125,"type":"simplify"},{"compiler":[[2369,867]],"time":21.098876953125,"type":"eval"},{"alts":[["(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 y))) 3) (neg.f64 t)))","fresh",0.365278918378842],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))","done",0.0859375],["(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 x (pow.f64 (*.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 4))) (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 y))) 2))) 2)) (cbrt.f64 (log.f64 y)) (neg.f64 t)))","fresh",0.40434777814703204],["(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 y))) 1/3) (cbrt.f64 -1)) (neg.f64 t)))","fresh",0.3249588867581883],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 x (log.f64 y))) (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 y))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 y))))) t))","fresh",0.4375890867576842],["(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2))) (cbrt.f64 (log.f64 y)) (neg.f64 t)))","next",0.1989250488422101]],"compiler":[[25,17],[15,10],[34,23],[30,24],[32,16],[22,15],[25,17],[34,23],[30,24],[32,16],[22,15]],"count":[[124,6]],"kept":[{"done":[1,1],"fresh":[4,1],"new":[118,4],"picked":[1,0]}],"min-error":[0.00390625],"time":27.217041015625,"type":"prune"},{"compiler":[[68,30]],"locations":[["(cbrt.f64 (log.f64 y))",0.12109375,false],["(fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2))) (cbrt.f64 (log.f64 y)) (neg.f64 t))",0.15234375,true],["(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))",0.30078125,true],["(pow.f64 (log.f64 y) 2)",0.5302925293053261,true]],"time":18.359130859375,"type":"localize"},{"count":[[3,68]],"series":[["(fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2))) (cbrt.f64 (log.f64 y)) (neg.f64 t))","t","-inf",0.176025390625],["(fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2))) (cbrt.f64 (log.f64 y)) (neg.f64 t))","t","inf",0.18798828125],["(fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2))) (cbrt.f64 (log.f64 y)) (neg.f64 t))","t","0",0.5458984375],["(fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2))) (cbrt.f64 (log.f64 y)) (neg.f64 t))","y","-inf",0.2890625],["(fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2))) (cbrt.f64 (log.f64 y)) (neg.f64 t))","y","inf",0.258056640625],["(fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2))) (cbrt.f64 (log.f64 y)) (neg.f64 t))","y","0",0.27099609375],["(fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2))) (cbrt.f64 (log.f64 y)) (neg.f64 t))","x","-inf",0.239990234375],["(fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2))) (cbrt.f64 (log.f64 y)) (neg.f64 t))","x","inf",0.213134765625],["(fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2))) (cbrt.f64 (log.f64 y)) (neg.f64 t))","x","0",0.2431640625],["(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","y","-inf",0.97509765625],["(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","y","inf",1.10986328125],["(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","y","0",0.93408203125],["(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","x","-inf",0.23583984375],["(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","x","inf",0.27197265625],["(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","x","0",1.1259765625],["(pow.f64 (log.f64 y) 2)","y","-inf",0.22216796875],["(pow.f64 (log.f64 y) 2)","y","inf",0.151123046875],["(pow.f64 (log.f64 y) 2)","y","0",0.183837890625]],"time":7.876953125,"type":"series"},{"count":[[3,54]],"egraph":[[2,2705,26,0.021564502],[1,237,26,0.0038390430000000003],[0,12,38,0.000289959]],"inputs":[["(pow.f64 (log.f64 y) 2)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2))) (cbrt.f64 (log.f64 y)) (neg.f64 t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 (log.f64 y) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 y) (log.f64 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 y) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2) (cbrt.f64 (pow.f64 (log.f64 y) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (log.f64 y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (log.f64 y) 4)) (pow.f64 (cbrt.f64 (log.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 y)) (*.f64 (sqrt.f64 (log.f64 y)) (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 y) (sqrt.f64 (log.f64 y))) (sqrt.f64 (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 y) (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 4)) 1) (pow.f64 (cbrt.f64 (log.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 4)) (cbrt.f64 (cbrt.f64 (pow.f64 (log.f64 y) 4)))) (cbrt.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 4)) (cbrt.f64 (log.f64 y))) (cbrt.f64 (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 y) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 y (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (log.f64 y) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (log.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (log.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (log.f64 y))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (log.f64 y)) (sqrt.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (*.f64 x x) (cbrt.f64 (pow.f64 (log.f64 y) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (pow.f64 (cbrt.f64 (log.f64 y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (log.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (log.f64 y) 2) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 t (*.f64 x (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (log.f64 y)) t)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (log.f64 y)) 1) t)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 x (log.f64 y)) t)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (+.f64 t (*.f64 x (log.f64 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 x (log.f64 y)) 0) t)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 t (*.f64 x (log.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 t (*.f64 x (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 t (*.f64 x (log.f64 y)))) (pow.f64 (cbrt.f64 (+.f64 t (*.f64 x (log.f64 y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 t (*.f64 x (log.f64 y)))) 2) (cbrt.f64 (+.f64 t (*.f64 x (log.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 t (*.f64 x (log.f64 y)))) (sqrt.f64 (+.f64 t (*.f64 x (log.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (log.f64 y)) 3) (pow.f64 t 3)) (+.f64 (*.f64 (*.f64 x (log.f64 y)) (*.f64 x (log.f64 y))) (-.f64 (*.f64 t t) (*.f64 (*.f64 x (log.f64 y)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x (log.f64 y)) (*.f64 x (log.f64 y))) (*.f64 t t)) (+.f64 t (*.f64 x (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 t (*.f64 x (log.f64 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 t (*.f64 x (log.f64 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 t (*.f64 x (log.f64 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 t (*.f64 x (log.f64 y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 t (*.f64 x (log.f64 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 t (*.f64 x (log.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 t (*.f64 x (log.f64 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 t (*.f64 x (log.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 t (*.f64 x (log.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 t (*.f64 x (log.f64 y)))))))))"]],"rules":[["egg-rr",23],["egg-rr",13],["egg-rr",18]],"stop":[["node limit",1]],"time":44.5478515625,"type":"rewrite"},{"count":[[122,71]],"egraph":[[5,4947,629,0.026886],[4,2062,629,0.013099375],[3,632,637,0.005417666999999999],[2,239,637,0.0020083339999999996],[1,116,637,0.0007395419999999999],[0,42,752,0.000264209]],"inputs":[["(pow.f64 (log.f64 (/.f64 1 y)) 2)","(pow.f64 (log.f64 (/.f64 1 y)) 2)","(pow.f64 (log.f64 (/.f64 1 y)) 2)","(pow.f64 (log.f64 (/.f64 1 y)) 2)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)) 1/3) x)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)) 1/3) x)","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (*.f64 (log.f64 (/.f64 1 y)) x))) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (*.f64 (log.f64 (/.f64 1 y)) x))) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (*.f64 (log.f64 (/.f64 1 y)) x))) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (*.f64 (log.f64 (/.f64 1 y)) x))) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) t)","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) t)","(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(*.f64 -1 t)","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (log.f64 (/.f64 1 y)) 2)","(pow.f64 (neg.f64 (log.f64 y)) 2)","(pow.f64 (log.f64 y) 2)","(pow.f64 (log.f64 (/.f64 1 y)) 2)","(pow.f64 (neg.f64 (log.f64 y)) 2)","(pow.f64 (log.f64 y) 2)","(pow.f64 (log.f64 (/.f64 1 y)) 2)","(pow.f64 (neg.f64 (log.f64 y)) 2)","(pow.f64 (log.f64 y) 2)","(pow.f64 (log.f64 (/.f64 1 y)) 2)","(pow.f64 (neg.f64 (log.f64 y)) 2)","(pow.f64 (log.f64 y) 2)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)","(pow.f64 (neg.f64 (log.f64 y)) 2)","(pow.f64 (log.f64 y) 2)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)","(pow.f64 (neg.f64 (log.f64 y)) 2)","(pow.f64 (log.f64 y) 2)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)","(pow.f64 (neg.f64 (log.f64 y)) 2)","(pow.f64 (log.f64 y) 2)","(pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)","(pow.f64 (neg.f64 (log.f64 y)) 2)","(pow.f64 (log.f64 y) 2)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 y) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 y)) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) 2)) 1/3) x)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 y) 2)) x)","(*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2)))","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(*.f64 1 (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(*.f64 1 (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (*.f64 (log.f64 (/.f64 1 y)) x))) t)","(-.f64 (*.f64 1 (*.f64 (cbrt.f64 -1) (*.f64 (neg.f64 (log.f64 y)) x))) t)","(fma.f64 (cbrt.f64 -1) (*.f64 (neg.f64 (log.f64 y)) x) (neg.f64 t))","(-.f64 (*.f64 (neg.f64 (log.f64 y)) (*.f64 x (cbrt.f64 -1))) t)","(-.f64 (*.f64 (log.f64 y) (*.f64 (cbrt.f64 -1) (neg.f64 x))) t)","(neg.f64 (fma.f64 x (*.f64 (log.f64 y) (cbrt.f64 -1)) t))","(neg.f64 (fma.f64 (log.f64 y) (*.f64 x (cbrt.f64 -1)) t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (*.f64 (log.f64 (/.f64 1 y)) x))) t)","(-.f64 (*.f64 1 (*.f64 (cbrt.f64 -1) (*.f64 (neg.f64 (log.f64 y)) x))) t)","(fma.f64 (cbrt.f64 -1) (*.f64 (neg.f64 (log.f64 y)) x) (neg.f64 t))","(-.f64 (*.f64 (neg.f64 (log.f64 y)) (*.f64 x (cbrt.f64 -1))) t)","(-.f64 (*.f64 (log.f64 y) (*.f64 (cbrt.f64 -1) (neg.f64 x))) t)","(neg.f64 (fma.f64 x (*.f64 (log.f64 y) (cbrt.f64 -1)) t))","(neg.f64 (fma.f64 (log.f64 y) (*.f64 x (cbrt.f64 -1)) t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (*.f64 (log.f64 (/.f64 1 y)) x))) t)","(-.f64 (*.f64 1 (*.f64 (cbrt.f64 -1) (*.f64 (neg.f64 (log.f64 y)) x))) t)","(fma.f64 (cbrt.f64 -1) (*.f64 (neg.f64 (log.f64 y)) x) (neg.f64 t))","(-.f64 (*.f64 (neg.f64 (log.f64 y)) (*.f64 x (cbrt.f64 -1))) t)","(-.f64 (*.f64 (log.f64 y) (*.f64 (cbrt.f64 -1) (neg.f64 x))) t)","(neg.f64 (fma.f64 x (*.f64 (log.f64 y) (cbrt.f64 -1)) t))","(neg.f64 (fma.f64 (log.f64 y) (*.f64 x (cbrt.f64 -1)) t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (cbrt.f64 -1) (*.f64 (log.f64 (/.f64 1 y)) x))) t)","(-.f64 (*.f64 1 (*.f64 (cbrt.f64 -1) (*.f64 (neg.f64 (log.f64 y)) x))) t)","(fma.f64 (cbrt.f64 -1) (*.f64 (neg.f64 (log.f64 y)) x) (neg.f64 t))","(-.f64 (*.f64 (neg.f64 (log.f64 y)) (*.f64 x (cbrt.f64 -1))) t)","(-.f64 (*.f64 (log.f64 y) (*.f64 (cbrt.f64 -1) (neg.f64 x))) t)","(neg.f64 (fma.f64 x (*.f64 (log.f64 y) (cbrt.f64 -1)) t))","(neg.f64 (fma.f64 (log.f64 y) (*.f64 x (cbrt.f64 -1)) t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) t)","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) t)","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) t)","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(-.f64 (*.f64 (pow.f64 1 1/3) (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)) t)","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x))","(*.f64 1 (*.f64 (log.f64 y) x))","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(*.f64 -1 t)","(neg.f64 t)","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))","(+.f64 (*.f64 -1 t) (*.f64 (pow.f64 1 1/3) (*.f64 (log.f64 y) x)))","(-.f64 (*.f64 1 (*.f64 (log.f64 y) x)) t)","(-.f64 (*.f64 (log.f64 y) x) t)","(fma.f64 (log.f64 y) x (neg.f64 t))"]],"stop":[["node limit",1]],"time":48.328125,"type":"simplify"},{"compiler":[[1862,716]],"time":17.575927734375,"type":"eval"},{"alts":[["(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2))) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 y))) 2) (cbrt.f64 (cbrt.f64 (log.f64 y)))) (neg.f64 t)))","fresh",0.32688018791572604],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))","done",0.0859375],["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 x (log.f64 y))) (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 y))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 y))))) t))","fresh",0.4375890867576842],["(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2))) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 y))) 1/3) (cbrt.f64 -1)) (neg.f64 t)))","fresh",0.2813263672213042],["(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2))) (cbrt.f64 (log.f64 y)) (neg.f64 t)))","done",0.1989250488422101],["(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 x (cbrt.f64 (*.f64 (*.f64 (log.f64 y) (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y))))) (cbrt.f64 (log.f64 y)) (neg.f64 t)))","fresh",0.28361137698974626]],"compiler":[[30,19],[15,10],[32,16],[30,24],[22,15],[30,17]],"count":[[101,6]],"kept":[{"done":[1,1],"fresh":[4,1],"new":[95,3],"picked":[1,1]}],"min-error":[0.00390625],"time":20.14111328125,"type":"prune"},{"accuracy":[0.0859375],"baseline":[0.0859375],"branch":[["x",0.0859375,1],["y",0.0859375,1],["z",0.0859375,1],["t",0.0859375,1],["(-.f64 (+.f64 (*.f64 x (log.f64 y)) (*.f64 z (log.f64 (-.f64 1 y)))) t)",0.0859375,1],["(+.f64 (*.f64 x (log.f64 y)) (*.f64 z (log.f64 (-.f64 1 y))))",0.0859375,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[17,12],[15,11],[371,141]],"count":[[19,1]],"inputs":[["(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2))) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 y))) 2) (cbrt.f64 (cbrt.f64 (log.f64 y)))) (neg.f64 t)))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2))) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 y))) 1/3) (cbrt.f64 -1)) (neg.f64 t)))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 x (cbrt.f64 (*.f64 (*.f64 (log.f64 y) (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y))))) (cbrt.f64 (log.f64 y)) (neg.f64 t)))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 y))) 3) (neg.f64 t)))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 x (pow.f64 (*.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 4))) (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (log.f64 y))) 2))) 2)) (cbrt.f64 (log.f64 y)) (neg.f64 t)))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (*.f64 (pow.f64 (*.f64 1 (log.f64 (/.f64 1 y))) 1/3) (cbrt.f64 -1)) (neg.f64 t)))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (log.f64 y) 2))) (cbrt.f64 (log.f64 y)) (neg.f64 t)))","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (log.f64 (pow.f64 y x)) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 x (log.f64 y))) (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 y))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 x (log.f64 y))))) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 (*.f64 (log.f64 y) (sqrt.f64 x)) (sqrt.f64 x)) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (pow.f64 (cbrt.f64 (log.f64 y)) 2) (*.f64 (cbrt.f64 (log.f64 y)) x) (neg.f64 t)))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 (log.f64 y) (sqrt.f64 x)) (sqrt.f64 x) (neg.f64 t)))","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (cbrt.f64 x) (log.f64 y)) (neg.f64 t)))","(fma.f64 z (log1p.f64 (neg.f64 y)) (pow.f64 (/.f64 (fma.f64 x (log.f64 y) t) (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 t t))) -1))","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (log.f64 (pow.f64 y x)) t))","(fma.f64 z (log1p.f64 (neg.f64 y)) (fma.f64 (*.f64 x (pow.f64 (cbrt.f64 (log.f64 y)) 2)) (cbrt.f64 (log.f64 y)) (neg.f64 t)))","(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))","(-.f64 (+.f64 (*.f64 x (log.f64 y)) (*.f64 z (log.f64 (-.f64 1 y)))) t)"]],"link":["."],"name":["Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, B"],"oracle":[59.096121970739446],"outputs":[["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))"]],"time":47.14794921875,"times":[["x",6.652099609375],["y",6.7021484375],["z",6.962158203125],["t",7.016845703125],["(-.f64 (+.f64 (*.f64 x (log.f64 y)) (*.f64 z (log.f64 (-.f64 1 y)))) t)",6.89990234375],["(+.f64 (*.f64 x (log.f64 y)) (*.f64 z (log.f64 (-.f64 1 y))))",6.992919921875]],"type":"regimes"},{"compiler":[[15,10]],"egraph":[[4,27,17,0.000153125],[3,26,17,0.0001215],[2,23,17,8.9417e-5],[1,18,17,5.9125e-5],[0,11,17,3.1875e-5]],"inputs":[["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 z (log1p.f64 (neg.f64 y)) (-.f64 (*.f64 x (log.f64 y)) t))"]],"stop":[["fuel",1],["saturated",1]],"time":8.489990234375,"type":"simplify"},{"time":0.012939453125,"type":"soundness"},{"compiler":[[15,10]],"remove-preprocessing":[[]],"time":14.38916015625,"type":"end"}]