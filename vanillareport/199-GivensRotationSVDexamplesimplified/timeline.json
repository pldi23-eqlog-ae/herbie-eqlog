[{"compiler":[[14,13]],"method":["search"],"sampling":[[1,0.99951171875,0.0,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":0.218017578125,"type":"analyze"},{"outcomes":[["body",1024,"valid",130.965087890625,1034],["body",512,"valid",43.105712890625,529],["body",2048,"valid",378.578857421875,2153],["body",256,"valid",196.248291015625,4540]],"time":759.36279296875,"type":"sample"},{"compiler":[[13,12]],"egraph":[[0,1,1,3.125e-6],[8,80,15,0.0012239999999999998],[7,77,15,0.0010425839999999998],[6,65,15,0.0008364169999999999],[5,54,15,0.0006448339999999999],[4,44,15,0.00046662599999999993],[3,37,15,0.00034100099999999996],[2,29,15,0.00023050099999999998],[1,22,15,0.000148584],[0,10,18,7.7417e-5]],"inputs":[["0"],["(-.f64 1 (sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 1 (hypot.f64 1 x))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(-.f64 1 (sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 1 (hypot.f64 1 x))))))","(-.f64 1 (sqrt.f64 (+.f64 1/2 (*.f64 (/.f64 1 (hypot.f64 1 x)) 1/2))))","(-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":25.10205078125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[8,80,15,0.0012032079999999999],[7,77,15,0.001024],[6,65,15,0.000824583],[5,54,15,0.00063425],[4,44,15,0.00046275000000000005],[3,37,15,0.00033679200000000004],[2,29,15,0.00022683300000000002],[1,22,15,0.000145458],[0,10,18,7.5125e-5]],"inputs":[["(-.f64 1 (sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 1 (hypot.f64 1 x))))))"]],"method":["egg-herbie"],"outputs":[["(-.f64 1 (sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 1 (hypot.f64 1 x))))))","(-.f64 1 (sqrt.f64 (+.f64 1/2 (*.f64 (/.f64 1 (hypot.f64 1 x)) 1/2))))","(-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))"]],"stop":[["saturated",1]],"time":12.72509765625,"type":"simplify"},{"compiler":[[23,21]],"time":0.552001953125,"type":"eval"},{"alts":[["(-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))","next",16.0194705902668]],"compiler":[[11,10],[11,10]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[16.0194705902668],"time":1.4990234375,"type":"prune"},{"compiler":[[37,31]],"locations":[["(-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))",2.1435725671325105,true]],"time":9.992919921875,"type":"localize"},{"count":[[1,12]],"series":[["(-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))","x","-inf",0.35791015625],["(-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))","x","inf",0.65283203125],["(-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))","x","0",0.68603515625]],"time":1.7890625,"type":"series"},{"count":[[1,55]],"egraph":[[2,2602,15,0.026587],[1,201,15,0.0037453749999999996],[0,9,15,0.000324958]],"inputs":[["(-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) (pow.f64 (cbrt.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 2) (cbrt.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) (sqrt.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 3/2)) (/.f64 1 (+.f64 1 (+.f64 (/.f64 1/2 (hypot.f64 1 x)) (+.f64 1/2 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 3/2)) (pow.f64 (/.f64 1 (+.f64 1 (+.f64 (/.f64 1/2 (hypot.f64 1 x)) (+.f64 1/2 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (pow.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (pow.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 3)) 1/3) (pow.f64 (sqrt.f64 (pow.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) (cbrt.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) 2) 1/3) (cbrt.f64 (cbrt.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 5/2) 1/3) (cbrt.f64 (sqrt.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) 2) 3) (cbrt.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (cbrt.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) 3) (pow.f64 (sqrt.f64 (cbrt.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (+.f64 (/.f64 1/2 (hypot.f64 1 x)) (+.f64 1/2 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) (-.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) (-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 3/2)) (+.f64 1 (+.f64 (/.f64 1/2 (hypot.f64 1 x)) (+.f64 1/2 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 3/2))) (neg.f64 (+.f64 1 (+.f64 (/.f64 1/2 (hypot.f64 1 x)) (+.f64 1/2 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))) (neg.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (*.f64 -1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 3/2))) (+.f64 1 (-.f64 (pow.f64 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 2) (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 2)) (-.f64 1 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1 (+.f64 (/.f64 1/2 (hypot.f64 1 x)) (+.f64 1/2 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) (-.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) (-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log1p.f64 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (log1p.f64 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/2 (log1p.f64 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))) (neg.f64 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 1/6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 1/4) (neg.f64 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 1/4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 2) (cbrt.f64 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) (sqrt.f64 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 1/6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 1/4)) (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 1/4) 1)))))"]],"rules":[["egg-rr",55]],"stop":[["node limit",1]],"time":49.222900390625,"type":"rewrite"},{"count":[[67,76]],"egraph":[[4,6960,268,0.030542041],[3,1818,268,0.015765791],[2,553,268,0.004089624],[1,179,272,0.001455374],[0,63,306,0.000348583]],"inputs":[["(*.f64 1/8 (pow.f64 x 2))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -11/128 (pow.f64 x 4)))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -11/128 (pow.f64 x 4))))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))))","(-.f64 1 (sqrt.f64 1/2))","(-.f64 1 (+.f64 (sqrt.f64 1/2) (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x)))))","(-.f64 (+.f64 1 (*.f64 1/32 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 x 2))))) (+.f64 (sqrt.f64 1/2) (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x)))))","(-.f64 (+.f64 1 (+.f64 (*.f64 1/32 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 x 2)))) (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 4))) 1/4) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3)))))) (+.f64 (sqrt.f64 1/2) (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x)))))","(-.f64 1 (sqrt.f64 1/2))","(-.f64 (+.f64 1 (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x)))) (sqrt.f64 1/2))","(-.f64 (+.f64 1 (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x))) (*.f64 1/32 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 x 2)))))) (sqrt.f64 1/2))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 4))) 1/4) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3)))) (+.f64 1 (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x))) (*.f64 1/32 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 x 2))))))) (sqrt.f64 1/2))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/8 (pow.f64 x 2))","(*.f64 1/8 (*.f64 x x))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 1/8 (*.f64 x x) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -11/128 (pow.f64 x 4) (*.f64 1/8 (*.f64 x x)))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 1/8 (*.f64 x x) (fma.f64 69/1024 (pow.f64 x 6) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 1/8 (*.f64 x x) (fma.f64 -11/128 (pow.f64 x 4) (*.f64 69/1024 (pow.f64 x 6))))","(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 1/8 (*.f64 x x) (*.f64 69/1024 (pow.f64 x 6))))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))))","(fma.f64 1/8 (*.f64 x x) (fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4)))))","(fma.f64 1/8 (*.f64 x x) (fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8)))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 1/8 (*.f64 x x) (fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8)))))","(-.f64 1 (sqrt.f64 1/2))","(-.f64 1 (+.f64 (sqrt.f64 1/2) (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x)))))","(-.f64 (-.f64 1 (sqrt.f64 1/2)) (/.f64 1/4 (*.f64 x (sqrt.f64 1/2))))","(-.f64 1 (+.f64 (sqrt.f64 1/2) (/.f64 1/4 (*.f64 x (sqrt.f64 1/2)))))","(+.f64 (-.f64 1 (sqrt.f64 1/2)) (/.f64 (/.f64 -1/4 (sqrt.f64 1/2)) x))","(-.f64 (+.f64 1 (*.f64 1/32 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 x 2))))) (+.f64 (sqrt.f64 1/2) (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x)))))","(+.f64 1 (-.f64 (/.f64 1/32 (*.f64 (*.f64 x x) (pow.f64 (sqrt.f64 1/2) 3))) (+.f64 (sqrt.f64 1/2) (/.f64 1/4 (*.f64 x (sqrt.f64 1/2))))))","(-.f64 (fma.f64 1/32 (/.f64 (/.f64 2 (sqrt.f64 1/2)) (*.f64 x x)) 1) (+.f64 (sqrt.f64 1/2) (/.f64 1/4 (*.f64 x (sqrt.f64 1/2)))))","(+.f64 (-.f64 (-.f64 1 (sqrt.f64 1/2)) (/.f64 1/4 (*.f64 x (sqrt.f64 1/2)))) (/.f64 1/16 (*.f64 (*.f64 x x) (sqrt.f64 1/2))))","(+.f64 (-.f64 1 (sqrt.f64 1/2)) (-.f64 (/.f64 (/.f64 (/.f64 1/16 x) (sqrt.f64 1/2)) x) (/.f64 (/.f64 1/4 x) (sqrt.f64 1/2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 1/32 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 x 2)))) (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 4))) 1/4) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3)))))) (+.f64 (sqrt.f64 1/2) (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x)))))","(+.f64 1 (-.f64 (+.f64 (/.f64 1/32 (*.f64 (*.f64 x x) (pow.f64 (sqrt.f64 1/2) 3))) (/.f64 (*.f64 -1/2 (+.f64 (/.f64 1/64 (pow.f64 (sqrt.f64 1/2) 4)) -1/4)) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3)))) (+.f64 (sqrt.f64 1/2) (/.f64 1/4 (*.f64 x (sqrt.f64 1/2))))))","(+.f64 1 (-.f64 (fma.f64 1/32 (/.f64 (/.f64 2 (sqrt.f64 1/2)) (*.f64 x x)) (/.f64 3/32 (*.f64 (sqrt.f64 1/2) (pow.f64 x 3)))) (+.f64 (sqrt.f64 1/2) (/.f64 1/4 (*.f64 x (sqrt.f64 1/2))))))","(+.f64 1 (+.f64 (/.f64 1/16 (*.f64 (*.f64 x x) (sqrt.f64 1/2))) (-.f64 (-.f64 (/.f64 3/32 (*.f64 (sqrt.f64 1/2) (pow.f64 x 3))) (/.f64 1/4 (*.f64 x (sqrt.f64 1/2)))) (sqrt.f64 1/2))))","(+.f64 1 (-.f64 (+.f64 (/.f64 (/.f64 (/.f64 1/16 x) (sqrt.f64 1/2)) x) (-.f64 (/.f64 3/32 (*.f64 (sqrt.f64 1/2) (pow.f64 x 3))) (sqrt.f64 1/2))) (/.f64 (/.f64 1/4 x) (sqrt.f64 1/2))))","(-.f64 1 (sqrt.f64 1/2))","(-.f64 (+.f64 1 (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x)))) (sqrt.f64 1/2))","(+.f64 1 (-.f64 (/.f64 1/4 (*.f64 x (sqrt.f64 1/2))) (sqrt.f64 1/2)))","(+.f64 (-.f64 1 (sqrt.f64 1/2)) (/.f64 (/.f64 1/4 x) (sqrt.f64 1/2)))","(-.f64 (+.f64 1 (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x))) (*.f64 1/32 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 x 2)))))) (sqrt.f64 1/2))","(+.f64 1 (-.f64 (+.f64 (/.f64 1/4 (*.f64 x (sqrt.f64 1/2))) (/.f64 1/32 (*.f64 (*.f64 x x) (pow.f64 (sqrt.f64 1/2) 3)))) (sqrt.f64 1/2)))","(+.f64 1 (-.f64 (fma.f64 1/32 (/.f64 (/.f64 2 (sqrt.f64 1/2)) (*.f64 x x)) (/.f64 1/4 (*.f64 x (sqrt.f64 1/2)))) (sqrt.f64 1/2)))","(+.f64 1 (+.f64 (/.f64 1/4 (*.f64 x (sqrt.f64 1/2))) (-.f64 (/.f64 1/16 (*.f64 (*.f64 x x) (sqrt.f64 1/2))) (sqrt.f64 1/2))))","(+.f64 1 (+.f64 (/.f64 (/.f64 1/4 x) (sqrt.f64 1/2)) (-.f64 (/.f64 (/.f64 (/.f64 1/16 x) (sqrt.f64 1/2)) x) (sqrt.f64 1/2))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 4))) 1/4) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3)))) (+.f64 1 (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x))) (*.f64 1/32 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 x 2))))))) (sqrt.f64 1/2))","(-.f64 (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 (sqrt.f64 1/2) 4)) -1/4) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3))) (+.f64 1 (+.f64 (/.f64 1/4 (*.f64 x (sqrt.f64 1/2))) (/.f64 1/32 (*.f64 (*.f64 x x) (pow.f64 (sqrt.f64 1/2) 3)))))) (sqrt.f64 1/2))","(+.f64 (+.f64 1 (fma.f64 1/32 (/.f64 (/.f64 2 (sqrt.f64 1/2)) (*.f64 x x)) (/.f64 1/4 (*.f64 x (sqrt.f64 1/2))))) (-.f64 (/.f64 -3/32 (*.f64 (sqrt.f64 1/2) (pow.f64 x 3))) (sqrt.f64 1/2)))","(+.f64 1 (-.f64 (+.f64 (/.f64 1/4 (*.f64 x (sqrt.f64 1/2))) (+.f64 (/.f64 1/16 (*.f64 (*.f64 x x) (sqrt.f64 1/2))) (/.f64 -3/32 (*.f64 (sqrt.f64 1/2) (pow.f64 x 3))))) (sqrt.f64 1/2)))","(+.f64 1 (+.f64 (/.f64 (/.f64 1/4 x) (sqrt.f64 1/2)) (+.f64 (/.f64 (/.f64 (/.f64 1/16 x) (sqrt.f64 1/2)) x) (-.f64 (/.f64 -3/32 (*.f64 (sqrt.f64 1/2) (pow.f64 x 3))) (sqrt.f64 1/2)))))"]],"stop":[["node limit",1]],"time":47.26904296875,"type":"simplify"},{"compiler":[[1505,1357]],"time":24.89111328125,"type":"eval"},{"alts":[["(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 1/8 (*.f64 x x) (fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8)))))","fresh",31.967105014936905],["(*.f64 (-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))","next",15.505685399681331]],"compiler":[[21,16],[21,19],[21,16],[21,19]],"count":[[77,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[76,2],"picked":[1,0]}],"min-error":[0.00390625],"time":12.266845703125,"type":"prune"},{"compiler":[[76,66]],"locations":[["(+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))",0.00390625,true],["(/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))",0.0078125,true],["(*.f64 (-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))",0.01171875,true],["(-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))",1.629817228715076,true]],"time":19.012939453125,"type":"localize"},{"count":[[4,48]],"series":[["(+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))","x","-inf",0.291015625],["(+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))","x","inf",0.326904296875],["(+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))","x","0",0.246826171875],["(/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))","x","-inf",0.623046875],["(/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))","x","inf",1.172119140625],["(/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))","x","0",0.2509765625],["(*.f64 (-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))","x","-inf",0.880126953125],["(*.f64 (-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))","x","inf",1.5771484375],["(*.f64 (-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))","x","0",0.27490234375],["(-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))","x","-inf",0.2880859375],["(-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))","x","inf",0.35791015625],["(-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))","x","0",0.349853515625]],"time":7.13818359375,"type":"series"},{"count":[[4,189]],"egraph":[[2,3785,58,0.033594625],[1,274,58,0.006490791],[0,12,70,0.000510625]],"inputs":[["(-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))","(*.f64 (-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))","(/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))","(+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 (/.f64 -1/2 (hypot.f64 1 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 -1 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (cbrt.f64 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 2))) (cbrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1/2 (hypot.f64 1 x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))))) (cbrt.f64 (exp.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))))))) (log.f64 (cbrt.f64 (exp.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))))) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))) (pow.f64 (cbrt.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))) 2) (cbrt.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))) 2) (*.f64 (cbrt.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))) (sqrt.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))) (*.f64 (sqrt.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1/8 (pow.f64 (/.f64 1/2 (hypot.f64 1 x)) 3)) (/.f64 1 (+.f64 (+.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (/.f64 1/4 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (/.f64 1 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (-.f64 1/4 (/.f64 1/4 (fma.f64 x x 1)))) (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (+.f64 1/8 (pow.f64 (/.f64 1/2 (hypot.f64 1 x)) 3))) (+.f64 1/4 (-.f64 (/.f64 1/4 (fma.f64 x x 1)) (/.f64 1/4 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (+.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (/.f64 1/4 (hypot.f64 1 x))) (-.f64 1/8 (pow.f64 (/.f64 1/2 (hypot.f64 1 x)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (-.f64 1/4 (/.f64 1/4 (fma.f64 x x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1/8 (pow.f64 (/.f64 1/2 (hypot.f64 1 x)) 3)) (+.f64 (+.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (/.f64 1/4 (hypot.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1/4 (/.f64 1/4 (fma.f64 x x 1)))) (neg.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1/8 (pow.f64 (/.f64 1/2 (hypot.f64 1 x)) 3))) (neg.f64 (+.f64 (+.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (/.f64 1/4 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1/8 (pow.f64 (/.f64 1/2 (hypot.f64 1 x)) 3)) 1) (+.f64 (+.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (/.f64 1/4 (hypot.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) 1) (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 3)) (+.f64 1 (+.f64 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 2) (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1/8 (pow.f64 (/.f64 -1/2 (hypot.f64 1 x)) 3)) (+.f64 1/4 (-.f64 (*.f64 (/.f64 -1/2 (hypot.f64 1 x)) (/.f64 -1/2 (hypot.f64 1 x))) (*.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 2)) (+.f64 1 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1/4 (*.f64 (/.f64 -1/2 (hypot.f64 1 x)) (/.f64 -1/2 (hypot.f64 1 x)))) (-.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) 1) (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (cbrt.f64 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 2))) (cbrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (+.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (/.f64 1/4 (hypot.f64 1 x))) (-.f64 1/8 (pow.f64 (/.f64 1/2 (hypot.f64 1 x)) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (-.f64 1/4 (/.f64 1/4 (fma.f64 x x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (neg.f64 (/.f64 1 (hypot.f64 1 x))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -1/2 (hypot.f64 1 x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1/4 (fma.f64 x x 1))) (neg.f64 (cbrt.f64 (/.f64 1/2 (hypot.f64 1 x)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 1/2 (hypot.f64 1 x))) (neg.f64 (sqrt.f64 (/.f64 1/2 (hypot.f64 1 x)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1/2 (hypot.f64 1 x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (/.f64 1 (hypot.f64 1 x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 -1/2 (hypot.f64 1 x))) (cbrt.f64 (/.f64 -1/2 (hypot.f64 1 x)))) (cbrt.f64 (/.f64 -1/2 (hypot.f64 1 x))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 -1/2 (hypot.f64 1 x))) (sqrt.f64 (/.f64 -1/2 (hypot.f64 1 x))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/4 (fma.f64 x x 1)))) (cbrt.f64 (/.f64 1/2 (hypot.f64 1 x))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (/.f64 1/2 (hypot.f64 1 x)))) (sqrt.f64 (/.f64 1/2 (hypot.f64 1 x))) 1/2)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 -1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (cbrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) (cbrt.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 1/4)) (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) (*.f64 (/.f64 -1/2 (hypot.f64 1 x)) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 1/2) (*.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) (/.f64 -1/2 (hypot.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) (cbrt.f64 (exp.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))) (log.f64 (cbrt.f64 (exp.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) (/.f64 (/.f64 1/2 (hypot.f64 1 x)) (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))) (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))) 2) (/.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) (cbrt.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))) (/.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) (sqrt.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1/8 (pow.f64 (/.f64 1/2 (hypot.f64 1 x)) 3)) (*.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) (+.f64 (+.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (/.f64 1/4 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (*.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))) (+.f64 -1 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1/8 (pow.f64 (/.f64 1/2 (hypot.f64 1 x)) 3)) 1) (*.f64 (+.f64 (+.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (/.f64 1/4 (hypot.f64 1 x))) (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) 1) (*.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1/8 (pow.f64 (/.f64 1/2 (hypot.f64 1 x)) 3)) -1) (*.f64 (+.f64 (+.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (/.f64 1/4 (hypot.f64 1 x))) (+.f64 -1 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) -1) (*.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (+.f64 -1 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (-.f64 1/8 (pow.f64 (/.f64 1/2 (hypot.f64 1 x)) 3))) (*.f64 (+.f64 -1 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) (+.f64 (+.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (/.f64 1/4 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (-.f64 1/4 (/.f64 1/4 (fma.f64 x x 1)))) (*.f64 (+.f64 -1 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))) (hypot.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 1/4))) (hypot.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))) 1) (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))) (pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 2)) (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 3/2)) (+.f64 1 (+.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1/8 (pow.f64 (/.f64 1/2 (hypot.f64 1 x)) 3)) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) (+.f64 (+.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (/.f64 1/4 (hypot.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))) (+.f64 -1 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))) -1) (+.f64 -1 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) (-.f64 1/8 (pow.f64 (/.f64 1/2 (hypot.f64 1 x)) 3))) (+.f64 (+.f64 1/4 (/.f64 1/4 (fma.f64 x x 1))) (/.f64 1/4 (hypot.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) (-.f64 1/4 (/.f64 1/4 (fma.f64 x x 1)))) (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))) 3) (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))) 3) (pow.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 3) (pow.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))) 3) (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))) 3) (pow.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 3) (pow.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) (*.f64 (/.f64 -1/2 (hypot.f64 1 x)) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 1/2 (*.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) (/.f64 -1/2 (hypot.f64 1 x))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))) (cbrt.f64 (exp.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) (cbrt.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) -2)) (/.f64 1 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) -1/2) (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (+.f64 -1 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 2)) (/.f64 1 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))) (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 3/2))) (+.f64 1 (-.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (+.f64 -1 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log1p.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log1p.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) (/.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))) (/.f64 1 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) (pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 2) (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 1/4)) (hypot.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 3/2)) (/.f64 1 (+.f64 1 (-.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (-.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) (+.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))) (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 2) (/.f64 1 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (hypot.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 1/4)) (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (neg.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 3/2)) (+.f64 1 (-.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 3/2)) (+.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 1) (-.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))) (neg.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 3/2))) (neg.f64 (+.f64 1 (-.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 1/4)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1 (-.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))) (+.f64 1 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))) 1 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))) (cbrt.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) (cbrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 1/4) (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 1/4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 2))) (sqrt.f64 (cbrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 1 1/2) (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) 2)) 1/2) (pow.f64 (cbrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))) 1/2) 1)))))"]],"rules":[["egg-rr",45],["egg-rr",28],["egg-rr",56],["egg-rr",60]],"stop":[["node limit",1]],"time":72.554931640625,"type":"rewrite"},{"count":[[237,272]],"egraph":[[2,3189,1974,0.019028125],[1,853,2099,0.006225709],[0,258,2475,0.00128525]],"inputs":[["(*.f64 1/4 (pow.f64 x 2))","(+.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -3/16 (pow.f64 x 4)))","(+.f64 (*.f64 5/32 (pow.f64 x 6)) (+.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -3/16 (pow.f64 x 4))))","(+.f64 (*.f64 5/32 (pow.f64 x 6)) (+.f64 (*.f64 1/4 (pow.f64 x 2)) (+.f64 (*.f64 -3/16 (pow.f64 x 4)) (*.f64 -35/256 (pow.f64 x 8)))))","1/2","(-.f64 1/2 (*.f64 1/2 (/.f64 1 x)))","(-.f64 (+.f64 1/2 (*.f64 1/4 (/.f64 1 (pow.f64 x 3)))) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (+.f64 1/2 (*.f64 1/4 (/.f64 1 (pow.f64 x 3)))) (+.f64 (*.f64 1/2 (/.f64 1 x)) (*.f64 3/16 (/.f64 1 (pow.f64 x 5)))))","1/2","(+.f64 1/2 (*.f64 1/2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 x)) 1/2) (*.f64 1/4 (/.f64 1 (pow.f64 x 3))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 1/2 (*.f64 3/16 (/.f64 1 (pow.f64 x 5))))) (*.f64 1/4 (/.f64 1 (pow.f64 x 3))))","(*.f64 1/8 (pow.f64 x 2))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -11/128 (pow.f64 x 4)))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -11/128 (pow.f64 x 4))))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))))","(/.f64 1/2 (+.f64 (sqrt.f64 1/2) 1))","(+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))))) x)))","(-.f64 (+.f64 (*.f64 1/64 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))))) x)))) (*.f64 -1/4 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (sqrt.f64 1/2)))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (pow.f64 x 2))))))","(-.f64 (+.f64 (*.f64 1/64 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))))) x)) (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (pow.f64 x 3))))))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (sqrt.f64 1/2)))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (pow.f64 x 2))))) (+.f64 (*.f64 1/32 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (sqrt.f64 1/2)))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 x 3))))) (+.f64 (*.f64 1/4 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 4))) 1/4) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 3)))))) (*.f64 1/4 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 -1/4 (/.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1)))) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3)))))))))","(/.f64 1/2 (+.f64 (sqrt.f64 1/2) 1))","(+.f64 (/.f64 1/8 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) x)))) (+.f64 (/.f64 1/2 (*.f64 (+.f64 (sqrt.f64 1/2) 1) x)) (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) x))) (+.f64 (*.f64 1/64 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) x)))))))) (*.f64 -1/4 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (sqrt.f64 1/2)))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (pow.f64 x 2))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) x))) (+.f64 (*.f64 1/64 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 1/4 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))) (+.f64 (*.f64 1/4 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 -1/4 (/.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1)))) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (sqrt.f64 1/2)))) (+.f64 (*.f64 1/4 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 4))) 1/4) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 1/32 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (sqrt.f64 1/2)))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (pow.f64 (sqrt.f64 1/2) 3))))))) (pow.f64 x 3))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) x))))))))) (*.f64 -1/4 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (sqrt.f64 1/2)))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (pow.f64 x 2))))))","1/2","(+.f64 1/2 (*.f64 1/32 (pow.f64 x 2)))","(+.f64 1/2 (+.f64 (*.f64 -5/256 (pow.f64 x 4)) (*.f64 1/32 (pow.f64 x 2))))","(+.f64 1/2 (+.f64 (*.f64 -5/256 (pow.f64 x 4)) (+.f64 (*.f64 1/32 (pow.f64 x 2)) (*.f64 117/8192 (pow.f64 x 6)))))","(/.f64 1 (+.f64 (sqrt.f64 1/2) 1))","(-.f64 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1)) (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) x))))))","(-.f64 (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 (sqrt.f64 1/2) 1) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (+.f64 (*.f64 1/32 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (/.f64 1 (+.f64 (sqrt.f64 1/2) 1)))) (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) x))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/32 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 1/16 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2)))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (sqrt.f64 1/2)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 4))) 1/4) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 1/128 (/.f64 1 (*.f64 (pow.f64 (+.f64 (sqrt.f64 1/2) 1) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 4) (+.f64 1 (sqrt.f64 1/2)))))))) (pow.f64 x 3))) (+.f64 (*.f64 1/32 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 (sqrt.f64 1/2) 1) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))))) (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) x))))))","(/.f64 1 (+.f64 (sqrt.f64 1/2) 1))","(+.f64 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1)) (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) x))))))","(+.f64 (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) x))))) (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 (sqrt.f64 1/2) 1) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (+.f64 (*.f64 1/32 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (/.f64 1 (+.f64 (sqrt.f64 1/2) 1)))))","(+.f64 (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) x))))) (+.f64 (*.f64 1/32 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 (sqrt.f64 1/2) 1) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (+.f64 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1)) (+.f64 (*.f64 1/128 (/.f64 1 (*.f64 (pow.f64 (+.f64 (sqrt.f64 1/2) 1) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 4) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 3)))))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 4))) 1/4) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 3)))))) (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/32 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 1/16 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2)))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3)))))))))))","2","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) 2)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 2 (*.f64 11/128 (pow.f64 x 4))))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 -69/1024 (pow.f64 x 6)) (+.f64 2 (*.f64 11/128 (pow.f64 x 4)))))","(+.f64 1 (sqrt.f64 1/2))","(+.f64 (sqrt.f64 1/2) (+.f64 1 (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x)))))","(-.f64 (+.f64 (sqrt.f64 1/2) (+.f64 1 (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x))))) (*.f64 1/32 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 4))) 1/4) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3)))) (+.f64 (sqrt.f64 1/2) (+.f64 1 (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x)))))) (*.f64 1/32 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 x 2)))))","(+.f64 1 (sqrt.f64 1/2))","(-.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x))))","(-.f64 (+.f64 (sqrt.f64 1/2) 1) (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x))) (*.f64 1/32 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 x 2))))))","(-.f64 (+.f64 (sqrt.f64 1/2) (+.f64 1 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 4))) 1/4) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3)))))) (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x))) (*.f64 1/32 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 x 2))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/4 (pow.f64 x 2))","(*.f64 1/4 (*.f64 x x))","(+.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -3/16 (pow.f64 x 4)))","(fma.f64 1/4 (*.f64 x x) (*.f64 -3/16 (pow.f64 x 4)))","(fma.f64 1/4 (*.f64 x x) (*.f64 (pow.f64 x 4) -3/16))","(fma.f64 (pow.f64 x 4) -3/16 (*.f64 1/4 (*.f64 x x)))","(+.f64 (*.f64 5/32 (pow.f64 x 6)) (+.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -3/16 (pow.f64 x 4))))","(fma.f64 5/32 (pow.f64 x 6) (fma.f64 1/4 (*.f64 x x) (*.f64 -3/16 (pow.f64 x 4))))","(fma.f64 5/32 (pow.f64 x 6) (fma.f64 1/4 (*.f64 x x) (*.f64 (pow.f64 x 4) -3/16)))","(fma.f64 5/32 (pow.f64 x 6) (fma.f64 (pow.f64 x 4) -3/16 (*.f64 1/4 (*.f64 x x))))","(+.f64 (*.f64 5/32 (pow.f64 x 6)) (+.f64 (*.f64 1/4 (pow.f64 x 2)) (+.f64 (*.f64 -3/16 (pow.f64 x 4)) (*.f64 -35/256 (pow.f64 x 8)))))","(fma.f64 5/32 (pow.f64 x 6) (fma.f64 1/4 (*.f64 x x) (fma.f64 -3/16 (pow.f64 x 4) (*.f64 -35/256 (pow.f64 x 8)))))","(fma.f64 5/32 (pow.f64 x 6) (fma.f64 1/4 (*.f64 x x) (fma.f64 (pow.f64 x 4) -3/16 (*.f64 -35/256 (pow.f64 x 8)))))","1/2","(-.f64 1/2 (*.f64 1/2 (/.f64 1 x)))","(-.f64 1/2 (/.f64 1/2 x))","(+.f64 1/2 (/.f64 -1/2 x))","(-.f64 (+.f64 1/2 (*.f64 1/4 (/.f64 1 (pow.f64 x 3)))) (*.f64 1/2 (/.f64 1 x)))","(+.f64 1/2 (-.f64 (/.f64 1/4 (pow.f64 x 3)) (/.f64 1/2 x)))","(+.f64 (/.f64 1/4 (pow.f64 x 3)) (+.f64 1/2 (/.f64 -1/2 x)))","(+.f64 1/2 (+.f64 (/.f64 1/4 (pow.f64 x 3)) (/.f64 -1/2 x)))","(-.f64 (+.f64 1/2 (*.f64 1/4 (/.f64 1 (pow.f64 x 3)))) (+.f64 (*.f64 1/2 (/.f64 1 x)) (*.f64 3/16 (/.f64 1 (pow.f64 x 5)))))","(-.f64 (+.f64 1/2 (/.f64 1/4 (pow.f64 x 3))) (+.f64 (/.f64 1/2 x) (/.f64 3/16 (pow.f64 x 5))))","(+.f64 1/2 (+.f64 (/.f64 1/4 (pow.f64 x 3)) (+.f64 (/.f64 -1/2 x) (/.f64 -3/16 (pow.f64 x 5)))))","1/2","(+.f64 1/2 (*.f64 1/2 (/.f64 1 x)))","(+.f64 1/2 (/.f64 1/2 x))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 x)) 1/2) (*.f64 1/4 (/.f64 1 (pow.f64 x 3))))","(-.f64 (+.f64 1/2 (/.f64 1/2 x)) (/.f64 1/4 (pow.f64 x 3)))","(+.f64 1/2 (-.f64 (/.f64 1/2 x) (/.f64 1/4 (pow.f64 x 3))))","(+.f64 1/2 (+.f64 (/.f64 1/2 x) (/.f64 -1/4 (pow.f64 x 3))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 1/2 (*.f64 3/16 (/.f64 1 (pow.f64 x 5))))) (*.f64 1/4 (/.f64 1 (pow.f64 x 3))))","(-.f64 (+.f64 (/.f64 1/2 x) (+.f64 1/2 (/.f64 3/16 (pow.f64 x 5)))) (/.f64 1/4 (pow.f64 x 3)))","(+.f64 (+.f64 1/2 (/.f64 1/2 x)) (-.f64 (/.f64 3/16 (pow.f64 x 5)) (/.f64 1/4 (pow.f64 x 3))))","(+.f64 1/2 (-.f64 (+.f64 (/.f64 1/2 x) (/.f64 3/16 (pow.f64 x 5))) (/.f64 1/4 (pow.f64 x 3))))","(*.f64 1/8 (pow.f64 x 2))","(*.f64 (*.f64 x x) 1/8)","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 1/8 (*.f64 x x) (*.f64 (pow.f64 x 4) -11/128))","(fma.f64 (*.f64 x x) 1/8 (*.f64 (pow.f64 x 4) -11/128))","(fma.f64 (pow.f64 x 4) -11/128 (*.f64 (*.f64 x x) 1/8))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 1/8 (*.f64 x x) (fma.f64 69/1024 (pow.f64 x 6) (*.f64 (pow.f64 x 4) -11/128)))","(fma.f64 (*.f64 x x) 1/8 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 6) 69/1024)))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))))","(fma.f64 1/8 (*.f64 x x) (fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 (pow.f64 x 4) -11/128))))","(fma.f64 (*.f64 x x) 1/8 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))","(/.f64 1/2 (+.f64 (sqrt.f64 1/2) 1))","(/.f64 1/2 (+.f64 1 (sqrt.f64 1/2)))","(+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))))) x)))","(+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (neg.f64 (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) x)))","(-.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))) x))","(-.f64 (+.f64 (*.f64 1/64 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))))) x)))) (*.f64 -1/4 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (sqrt.f64 1/2)))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (pow.f64 x 2))))))","(+.f64 (/.f64 1/64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (*.f64 x x) (+.f64 1 (sqrt.f64 1/2)))))) (-.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (neg.f64 (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) x))) (*.f64 -1/4 (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (*.f64 x x) (sqrt.f64 1/2)))))))","(+.f64 (-.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))) x)) (-.f64 (/.f64 1/64 (*.f64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/4 (*.f64 1/2 (sqrt.f64 1/2)))) (*.f64 x x))) (/.f64 -1/4 (/.f64 (*.f64 (*.f64 x x) (+.f64 1/2 (sqrt.f64 1/2))) (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2)))))))))","(+.f64 (-.f64 (*.f64 1/32 (/.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (*.f64 (*.f64 x x) (+.f64 1/2 (sqrt.f64 1/2))))) (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))) x)) (-.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 (+.f64 (/.f64 -1/8 (+.f64 1 (sqrt.f64 1/2))) (/.f64 -1/32 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))) (*.f64 (*.f64 x x) (+.f64 1/2 (sqrt.f64 1/2))))))","(-.f64 (+.f64 (*.f64 1/64 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))))) x)) (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (pow.f64 x 3))))))) (+.f64 (*.f64 -1/4 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (sqrt.f64 1/2)))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (pow.f64 x 2))))) (+.f64 (*.f64 1/32 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (sqrt.f64 1/2)))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 x 3))))) (+.f64 (*.f64 1/4 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 4))) 1/4) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 3)))))) (*.f64 1/4 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 -1/4 (/.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1)))) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3)))))))))","(-.f64 (+.f64 (/.f64 1/64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (*.f64 x x) (+.f64 1 (sqrt.f64 1/2)))))) (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (fma.f64 -1 (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) x) (/.f64 1/4 (*.f64 (pow.f64 x 3) (+.f64 1 (sqrt.f64 1/2))))))) (fma.f64 -1/4 (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (*.f64 x x) (sqrt.f64 1/2)))) (fma.f64 1/32 (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (pow.f64 x 3) (pow.f64 (sqrt.f64 1/2) 3)))) (*.f64 1/4 (+.f64 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 (sqrt.f64 1/2) 4)) -1/4) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))) (pow.f64 x 3)))) (/.f64 (-.f64 (/.f64 1/64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 (sqrt.f64 1/2) 3)))) (*.f64 -1/4 (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))) (pow.f64 x 3))))))))","(-.f64 (+.f64 (-.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))) x)) (+.f64 (/.f64 1/4 (*.f64 (pow.f64 x 3) (+.f64 1 (sqrt.f64 1/2)))) (/.f64 1/64 (*.f64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/4 (*.f64 1/2 (sqrt.f64 1/2)))) (*.f64 x x))))) (fma.f64 -1/4 (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))) (*.f64 (*.f64 x x) (+.f64 1/2 (sqrt.f64 1/2)))) (fma.f64 1/32 (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))) (*.f64 (pow.f64 x 3) (+.f64 1/4 (*.f64 1/2 (sqrt.f64 1/2))))) (fma.f64 1/4 (/.f64 (+.f64 (/.f64 1/64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/4 (*.f64 1/2 (sqrt.f64 1/2))))) (*.f64 1/4 (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))) (+.f64 1/2 (sqrt.f64 1/2))))) (*.f64 (pow.f64 x 3) (+.f64 1/2 (sqrt.f64 1/2)))) (/.f64 -3/64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (pow.f64 x 3) (+.f64 1/2 (sqrt.f64 1/2)))))))))","(+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (-.f64 (+.f64 (-.f64 (/.f64 1/4 (*.f64 (pow.f64 x 3) (+.f64 1 (sqrt.f64 1/2)))) (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))) x)) (*.f64 1/32 (/.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (*.f64 (*.f64 x x) (+.f64 1/2 (sqrt.f64 1/2)))))) (+.f64 (*.f64 (/.f64 1/4 (+.f64 1/2 (sqrt.f64 1/2))) (+.f64 (/.f64 -3/16 (*.f64 (pow.f64 x 3) (+.f64 1 (sqrt.f64 1/2)))) (/.f64 (-.f64 (*.f64 (/.f64 (/.f64 1 (+.f64 1/2 (sqrt.f64 1/2))) (+.f64 1 (sqrt.f64 1/2))) 1/32) (/.f64 (+.f64 (/.f64 -1/8 (+.f64 1 (sqrt.f64 1/2))) (/.f64 -1/32 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))) (+.f64 1/2 (sqrt.f64 1/2)))) (pow.f64 x 3)))) (*.f64 (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))) (+.f64 1 (sqrt.f64 1/2))) (+.f64 (/.f64 -1/4 (*.f64 x (*.f64 x (sqrt.f64 1/2)))) (/.f64 1/32 (*.f64 1/2 (*.f64 (pow.f64 x 3) (sqrt.f64 1/2)))))))))","(/.f64 1/2 (+.f64 (sqrt.f64 1/2) 1))","(/.f64 1/2 (+.f64 1 (sqrt.f64 1/2)))","(+.f64 (/.f64 1/8 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) x)))) (+.f64 (/.f64 1/2 (*.f64 (+.f64 (sqrt.f64 1/2) 1) x)) (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1)))))","(+.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/2 (*.f64 x (+.f64 1 (sqrt.f64 1/2))))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (*.f64 x (+.f64 1 (sqrt.f64 1/2)))))))","(+.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 (/.f64 1/2 x) (+.f64 1 (sqrt.f64 1/2)))) (/.f64 1/8 (*.f64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))) x)))","(+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (+.f64 (/.f64 (/.f64 1/2 x) (+.f64 1 (sqrt.f64 1/2))) (/.f64 (/.f64 1/8 (+.f64 1 (sqrt.f64 1/2))) (*.f64 x (+.f64 1/2 (sqrt.f64 1/2))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) x))) (+.f64 (*.f64 1/64 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) x)))))))) (*.f64 -1/4 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (sqrt.f64 1/2)))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (pow.f64 x 2))))))","(+.f64 (/.f64 1/2 (*.f64 x (+.f64 1 (sqrt.f64 1/2)))) (-.f64 (+.f64 (/.f64 1/64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (*.f64 x x) (+.f64 1 (sqrt.f64 1/2)))))) (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (*.f64 x (+.f64 1 (sqrt.f64 1/2)))))))) (*.f64 -1/4 (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (*.f64 x x) (sqrt.f64 1/2)))))))","(+.f64 (/.f64 (/.f64 1/2 x) (+.f64 1 (sqrt.f64 1/2))) (+.f64 (/.f64 1/64 (*.f64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/4 (*.f64 1/2 (sqrt.f64 1/2)))) (*.f64 x x))) (-.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))) x))) (/.f64 -1/4 (/.f64 (*.f64 (*.f64 x x) (+.f64 1/2 (sqrt.f64 1/2))) (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))))))))","(+.f64 (*.f64 1/32 (/.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (*.f64 (*.f64 x x) (+.f64 1/2 (sqrt.f64 1/2))))) (-.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (+.f64 (/.f64 (/.f64 1/2 x) (+.f64 1 (sqrt.f64 1/2))) (/.f64 (/.f64 1/8 (+.f64 1 (sqrt.f64 1/2))) (*.f64 x (+.f64 1/2 (sqrt.f64 1/2)))))) (/.f64 (+.f64 (/.f64 -1/8 (+.f64 1 (sqrt.f64 1/2))) (/.f64 -1/32 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))) (*.f64 (*.f64 x x) (+.f64 1/2 (sqrt.f64 1/2))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) x))) (+.f64 (*.f64 1/64 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 1/4 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))) (+.f64 (*.f64 1/4 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 -1/4 (/.f64 (+.f64 (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 1/2 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1)))) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (sqrt.f64 1/2)))) (+.f64 (*.f64 1/4 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 4))) 1/4) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 1/32 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (sqrt.f64 1/2)))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (pow.f64 (sqrt.f64 1/2) 3))))))) (pow.f64 x 3))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) x))))))))) (*.f64 -1/4 (/.f64 (+.f64 (*.f64 1/2 (/.f64 1 (+.f64 1 (sqrt.f64 1/2)))) (*.f64 1/8 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (pow.f64 x 2))))))","(+.f64 (/.f64 1/2 (*.f64 x (+.f64 1 (sqrt.f64 1/2)))) (-.f64 (+.f64 (/.f64 1/64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (*.f64 x x) (+.f64 1 (sqrt.f64 1/2)))))) (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (fma.f64 -1 (/.f64 (-.f64 (/.f64 1/4 (+.f64 1 (sqrt.f64 1/2))) (fma.f64 1/4 (/.f64 (-.f64 (/.f64 1/64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 (sqrt.f64 1/2) 3)))) (*.f64 -1/4 (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))) (fma.f64 1/4 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 (sqrt.f64 1/2) 4)) -1/4) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))) (*.f64 1/32 (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 (sqrt.f64 1/2) 3))))))) (pow.f64 x 3)) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (*.f64 x (+.f64 1 (sqrt.f64 1/2))))))))) (*.f64 -1/4 (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (*.f64 x x) (sqrt.f64 1/2)))))))","(+.f64 (/.f64 (/.f64 1/2 x) (+.f64 1 (sqrt.f64 1/2))) (+.f64 (/.f64 1/64 (*.f64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/4 (*.f64 1/2 (sqrt.f64 1/2)))) (*.f64 x x))) (-.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (-.f64 (/.f64 1/8 (*.f64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))) x)) (/.f64 (-.f64 (/.f64 1/4 (+.f64 1 (sqrt.f64 1/2))) (fma.f64 1/4 (/.f64 (+.f64 (/.f64 1/64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/4 (*.f64 1/2 (sqrt.f64 1/2))))) (*.f64 1/4 (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))) (+.f64 1/2 (sqrt.f64 1/2))))) (+.f64 1/2 (sqrt.f64 1/2))) (fma.f64 1/32 (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))) (+.f64 1/4 (*.f64 1/2 (sqrt.f64 1/2)))) (/.f64 -3/64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))))) (pow.f64 x 3)))) (/.f64 -1/4 (/.f64 (*.f64 (*.f64 x x) (+.f64 1/2 (sqrt.f64 1/2))) (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))))))))","(+.f64 (/.f64 (/.f64 1/2 x) (+.f64 1 (sqrt.f64 1/2))) (+.f64 (*.f64 1/32 (/.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (*.f64 (*.f64 x x) (+.f64 1/2 (sqrt.f64 1/2))))) (+.f64 (-.f64 (/.f64 (/.f64 1/8 (+.f64 1 (sqrt.f64 1/2))) (*.f64 x (+.f64 1/2 (sqrt.f64 1/2)))) (/.f64 (-.f64 (-.f64 (/.f64 1/4 (+.f64 1 (sqrt.f64 1/2))) (*.f64 (/.f64 1/4 (+.f64 1 (sqrt.f64 1/2))) (+.f64 (-.f64 (*.f64 1/64 (/.f64 1 (*.f64 1/4 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2)))) (/.f64 (+.f64 (/.f64 -1/8 (+.f64 1 (sqrt.f64 1/2))) (/.f64 -1/32 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))) (+.f64 1/2 (*.f64 1/2 (sqrt.f64 1/2))))) (/.f64 -3/16 (+.f64 1/2 (sqrt.f64 1/2)))))) (*.f64 (/.f64 (+.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/8 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))) (+.f64 1/2 (sqrt.f64 1/2))) 1/16)) (pow.f64 x 3))) (-.f64 (/.f64 1/2 (+.f64 1 (sqrt.f64 1/2))) (/.f64 (+.f64 (/.f64 -1/8 (+.f64 1 (sqrt.f64 1/2))) (/.f64 -1/32 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))))) (*.f64 (*.f64 x x) (+.f64 1/2 (sqrt.f64 1/2))))))))","1/2","(+.f64 1/2 (*.f64 1/32 (pow.f64 x 2)))","(+.f64 1/2 (*.f64 (*.f64 x x) 1/32))","(fma.f64 (*.f64 x x) 1/32 1/2)","(+.f64 1/2 (+.f64 (*.f64 -5/256 (pow.f64 x 4)) (*.f64 1/32 (pow.f64 x 2))))","(+.f64 1/2 (fma.f64 -5/256 (pow.f64 x 4) (*.f64 (*.f64 x x) 1/32)))","(+.f64 1/2 (fma.f64 (*.f64 x x) 1/32 (*.f64 (pow.f64 x 4) -5/256)))","(+.f64 (fma.f64 (*.f64 x x) 1/32 1/2) (*.f64 (pow.f64 x 4) -5/256))","(+.f64 1/2 (+.f64 (*.f64 -5/256 (pow.f64 x 4)) (+.f64 (*.f64 1/32 (pow.f64 x 2)) (*.f64 117/8192 (pow.f64 x 6)))))","(+.f64 1/2 (fma.f64 -5/256 (pow.f64 x 4) (fma.f64 1/32 (*.f64 x x) (*.f64 (pow.f64 x 6) 117/8192))))","(+.f64 1/2 (fma.f64 (pow.f64 x 4) -5/256 (fma.f64 (*.f64 x x) 1/32 (*.f64 (pow.f64 x 6) 117/8192))))","(+.f64 1/2 (fma.f64 (pow.f64 x 4) -5/256 (fma.f64 (pow.f64 x 6) 117/8192 (*.f64 x (*.f64 x 1/32)))))","(/.f64 1 (+.f64 (sqrt.f64 1/2) 1))","(/.f64 1 (+.f64 1 (sqrt.f64 1/2)))","(-.f64 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1)) (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) x))))))","(-.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/4 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (*.f64 x (+.f64 1 (sqrt.f64 1/2)))))))","(-.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/4 (*.f64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))) x)))","(+.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (/.f64 -1/4 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 x (+.f64 1/2 (sqrt.f64 1/2))))))","(-.f64 (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 (sqrt.f64 1/2) 1) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (+.f64 (*.f64 1/32 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (/.f64 1 (+.f64 (sqrt.f64 1/2) 1)))) (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) x))))))","(+.f64 (/.f64 1/16 (*.f64 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (+.f64 1 (sqrt.f64 1/2))) (*.f64 x x)))) (-.f64 (+.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/32 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (*.f64 x x) (+.f64 1 (sqrt.f64 1/2))))))) (/.f64 1/4 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (*.f64 x (+.f64 1 (sqrt.f64 1/2))))))))","(+.f64 (/.f64 1/16 (*.f64 1/2 (*.f64 (*.f64 x (*.f64 x (+.f64 1 (sqrt.f64 1/2)))) (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2)))) (+.f64 (/.f64 1/32 (*.f64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/4 (*.f64 1/2 (sqrt.f64 1/2)))) (*.f64 x x))) (-.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/4 (*.f64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))) x)))))","(+.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (-.f64 (+.f64 (/.f64 1/16 (*.f64 (*.f64 1/2 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 3)) (*.f64 x x))) (/.f64 (*.f64 (/.f64 (/.f64 1 (+.f64 1/2 (sqrt.f64 1/2))) (+.f64 1 (sqrt.f64 1/2))) 1/16) (*.f64 x x))) (/.f64 1/4 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 x (+.f64 1/2 (sqrt.f64 1/2)))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/32 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 1/16 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2)))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (sqrt.f64 1/2)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 4))) 1/4) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 1/128 (/.f64 1 (*.f64 (pow.f64 (+.f64 (sqrt.f64 1/2) 1) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 4) (+.f64 1 (sqrt.f64 1/2)))))))) (pow.f64 x 3))) (+.f64 (*.f64 1/32 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 (sqrt.f64 1/2) 1) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (/.f64 1 (+.f64 (sqrt.f64 1/2) 1))))) (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) x))))))","(-.f64 (fma.f64 -1 (/.f64 (fma.f64 1/4 (/.f64 (+.f64 (/.f64 1/32 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 (sqrt.f64 1/2) 3)))) (/.f64 1/16 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2) (pow.f64 (sqrt.f64 1/2) 2))))) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2)))) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 (sqrt.f64 1/2) 4)) -1/4) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))))) (/.f64 1/128 (*.f64 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 (sqrt.f64 1/2) 4)))))) (pow.f64 x 3)) (+.f64 (/.f64 1/32 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (*.f64 x x) (+.f64 1 (sqrt.f64 1/2)))))) (+.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/16 (*.f64 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (+.f64 1 (sqrt.f64 1/2))) (*.f64 x x))))))) (/.f64 1/4 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (*.f64 x (+.f64 1 (sqrt.f64 1/2)))))))","(+.f64 (-.f64 (+.f64 (/.f64 1/16 (*.f64 1/2 (*.f64 (*.f64 x (*.f64 x (+.f64 1 (sqrt.f64 1/2)))) (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2)))) (+.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/32 (*.f64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/4 (*.f64 1/2 (sqrt.f64 1/2)))) (*.f64 x x))))) (/.f64 (+.f64 (/.f64 1/128 (*.f64 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2) (+.f64 1/4 (*.f64 1/4 (sqrt.f64 1/2))))) (fma.f64 1/4 (/.f64 (+.f64 (/.f64 1/32 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/4 (*.f64 1/2 (sqrt.f64 1/2))))) (/.f64 1/16 (*.f64 1/2 (*.f64 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2) (+.f64 1 (sqrt.f64 1/2)))))) (+.f64 1/2 (sqrt.f64 1/2))) (/.f64 -3/32 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2)))))) (pow.f64 x 3))) (/.f64 -1/4 (*.f64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))) x)))","(-.f64 (+.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (+.f64 (/.f64 1/16 (*.f64 (*.f64 1/2 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 3)) (*.f64 x x))) (/.f64 (*.f64 (/.f64 (/.f64 1 (+.f64 1/2 (sqrt.f64 1/2))) (+.f64 1 (sqrt.f64 1/2))) 1/16) (*.f64 x x)))) (+.f64 (/.f64 (+.f64 (/.f64 (+.f64 (/.f64 1/128 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 1/2 (+.f64 1/2 (sqrt.f64 1/2))))) (/.f64 1/64 (*.f64 1/2 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 3)))) (+.f64 1/2 (sqrt.f64 1/2))) (+.f64 (/.f64 -3/32 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2)))) (/.f64 1/128 (*.f64 1/4 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 3))))) (pow.f64 x 3)) (/.f64 1/4 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 x (+.f64 1/2 (sqrt.f64 1/2)))))))","(/.f64 1 (+.f64 (sqrt.f64 1/2) 1))","(/.f64 1 (+.f64 1 (sqrt.f64 1/2)))","(+.f64 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1)) (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) x))))))","(+.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/4 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (*.f64 x (+.f64 1 (sqrt.f64 1/2)))))))","(+.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/4 (*.f64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))) x)))","(+.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/4 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 x (+.f64 1/2 (sqrt.f64 1/2))))))","(+.f64 (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) x))))) (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 (sqrt.f64 1/2) 1) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (+.f64 (*.f64 1/32 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (/.f64 1 (+.f64 (sqrt.f64 1/2) 1)))))","(+.f64 (/.f64 1/4 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (*.f64 x (+.f64 1 (sqrt.f64 1/2)))))) (+.f64 (/.f64 1/16 (*.f64 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (+.f64 1 (sqrt.f64 1/2))) (*.f64 x x)))) (+.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/32 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (*.f64 x x) (+.f64 1 (sqrt.f64 1/2)))))))))","(+.f64 (/.f64 1/4 (*.f64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))) x)) (+.f64 (/.f64 1/16 (*.f64 1/2 (*.f64 (*.f64 x (*.f64 x (+.f64 1 (sqrt.f64 1/2)))) (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2)))) (+.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/32 (*.f64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/4 (*.f64 1/2 (sqrt.f64 1/2)))) (*.f64 x x))))))","(+.f64 (/.f64 1/4 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 x (+.f64 1/2 (sqrt.f64 1/2))))) (+.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (+.f64 (/.f64 1/16 (*.f64 (*.f64 1/2 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 3)) (*.f64 x x))) (/.f64 (*.f64 (/.f64 (/.f64 1 (+.f64 1/2 (sqrt.f64 1/2))) (+.f64 1 (sqrt.f64 1/2))) 1/16) (*.f64 x x)))))","(+.f64 (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) x))))) (+.f64 (*.f64 1/32 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 (sqrt.f64 1/2) 1) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 2)))))) (+.f64 (/.f64 1 (+.f64 (sqrt.f64 1/2) 1)) (+.f64 (*.f64 1/128 (/.f64 1 (*.f64 (pow.f64 (+.f64 (sqrt.f64 1/2) 1) 2) (*.f64 (pow.f64 (sqrt.f64 1/2) 4) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 3)))))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 4))) 1/4) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 x 3)))))) (*.f64 1/4 (/.f64 (+.f64 (*.f64 1/32 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 1/16 (/.f64 1 (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2)))))) (*.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3)))))))))))","(+.f64 (/.f64 1/4 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (sqrt.f64 1/2) (*.f64 x (+.f64 1 (sqrt.f64 1/2)))))) (+.f64 (/.f64 1/32 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (*.f64 (*.f64 x x) (+.f64 1 (sqrt.f64 1/2)))))) (+.f64 (/.f64 1/16 (*.f64 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2) (*.f64 (*.f64 (pow.f64 (sqrt.f64 1/2) 2) (+.f64 1 (sqrt.f64 1/2))) (*.f64 x x)))) (+.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (+.f64 (/.f64 1/128 (*.f64 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2) (*.f64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 (sqrt.f64 1/2) 4)) (pow.f64 x 3)))) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 (sqrt.f64 1/2) 4)) -1/4) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))) (pow.f64 x 3)))) (*.f64 1/4 (/.f64 (+.f64 (/.f64 1/32 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (+.f64 1 (sqrt.f64 1/2)) (pow.f64 (sqrt.f64 1/2) 3)))) (/.f64 1/16 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2) (pow.f64 (sqrt.f64 1/2) 2))))) (*.f64 (*.f64 (sqrt.f64 1/2) (+.f64 1 (sqrt.f64 1/2))) (pow.f64 x 3))))))))))","(+.f64 (/.f64 1/4 (*.f64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2))) x)) (+.f64 (+.f64 (+.f64 (/.f64 1/16 (*.f64 1/2 (*.f64 (*.f64 x (*.f64 x (+.f64 1 (sqrt.f64 1/2)))) (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2)))) (/.f64 1/32 (*.f64 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/4 (*.f64 1/2 (sqrt.f64 1/2)))) (*.f64 x x)))) (+.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (/.f64 1/128 (*.f64 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2) (*.f64 (pow.f64 x 3) (+.f64 1/4 (*.f64 1/4 (sqrt.f64 1/2)))))))) (fma.f64 1/4 (/.f64 (+.f64 (/.f64 1/32 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/4 (*.f64 1/2 (sqrt.f64 1/2))))) (/.f64 1/16 (*.f64 1/2 (*.f64 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 2) (+.f64 1 (sqrt.f64 1/2)))))) (*.f64 (pow.f64 x 3) (+.f64 1/2 (sqrt.f64 1/2)))) (/.f64 -3/32 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 (pow.f64 x 3) (+.f64 1/2 (sqrt.f64 1/2))))))))","(+.f64 (/.f64 (*.f64 (/.f64 (/.f64 1 (+.f64 1/2 (sqrt.f64 1/2))) (+.f64 1 (sqrt.f64 1/2))) 1/16) (*.f64 x x)) (+.f64 (+.f64 (/.f64 1 (+.f64 1 (sqrt.f64 1/2))) (+.f64 (/.f64 1/16 (*.f64 (*.f64 1/2 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 3)) (*.f64 x x))) (+.f64 (/.f64 (/.f64 (+.f64 (/.f64 1/128 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 1/2 (+.f64 1/2 (sqrt.f64 1/2))))) (/.f64 1/64 (*.f64 1/2 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 3)))) (+.f64 1/2 (sqrt.f64 1/2))) (pow.f64 x 3)) (+.f64 (/.f64 1/128 (*.f64 (*.f64 1/4 (pow.f64 (+.f64 1 (sqrt.f64 1/2)) 3)) (pow.f64 x 3))) (/.f64 (/.f64 -3/32 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 1/2 (sqrt.f64 1/2)))) (pow.f64 x 3)))))) (/.f64 1/4 (*.f64 (+.f64 1 (sqrt.f64 1/2)) (*.f64 x (+.f64 1/2 (sqrt.f64 1/2)))))))","2","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) 2)","(fma.f64 -1/8 (*.f64 x x) 2)","(fma.f64 (*.f64 x x) -1/8 2)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 2 (*.f64 11/128 (pow.f64 x 4))))","(+.f64 (fma.f64 -1/8 (*.f64 x x) 2) (*.f64 (pow.f64 x 4) 11/128))","(fma.f64 (*.f64 x x) -1/8 (fma.f64 (pow.f64 x 4) 11/128 2))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 -69/1024 (pow.f64 x 6)) (+.f64 2 (*.f64 11/128 (pow.f64 x 4)))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 -69/1024 (pow.f64 x 6) (+.f64 2 (*.f64 (pow.f64 x 4) 11/128))))","(fma.f64 (*.f64 x x) -1/8 (fma.f64 (pow.f64 x 6) -69/1024 (fma.f64 (pow.f64 x 4) 11/128 2)))","(+.f64 1 (sqrt.f64 1/2))","(+.f64 (sqrt.f64 1/2) (+.f64 1 (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x)))))","(+.f64 (sqrt.f64 1/2) (+.f64 1 (/.f64 1/4 (*.f64 x (sqrt.f64 1/2)))))","(+.f64 1 (+.f64 (sqrt.f64 1/2) (/.f64 (/.f64 1/4 x) (sqrt.f64 1/2))))","(+.f64 (+.f64 1 (sqrt.f64 1/2)) (/.f64 1/4 (*.f64 x (sqrt.f64 1/2))))","(-.f64 (+.f64 (sqrt.f64 1/2) (+.f64 1 (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x))))) (*.f64 1/32 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 x 2)))))","(-.f64 (+.f64 (sqrt.f64 1/2) (+.f64 1 (/.f64 1/4 (*.f64 x (sqrt.f64 1/2))))) (/.f64 1/32 (*.f64 (*.f64 x x) (pow.f64 (sqrt.f64 1/2) 3))))","(+.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 (/.f64 (/.f64 1/4 x) (sqrt.f64 1/2)) (*.f64 (/.f64 (/.f64 2 (sqrt.f64 1/2)) (*.f64 x x)) -1/32)))","(+.f64 (sqrt.f64 1/2) (+.f64 (/.f64 1/4 (*.f64 x (sqrt.f64 1/2))) (+.f64 1 (/.f64 (/.f64 -1/16 (sqrt.f64 1/2)) (*.f64 x x)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 4))) 1/4) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3)))) (+.f64 (sqrt.f64 1/2) (+.f64 1 (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x)))))) (*.f64 1/32 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 x 2)))))","(-.f64 (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 (sqrt.f64 1/2) 4)) -1/4) (*.f64 (pow.f64 x 3) (sqrt.f64 1/2))) (+.f64 (sqrt.f64 1/2) (+.f64 1 (/.f64 1/4 (*.f64 x (sqrt.f64 1/2)))))) (/.f64 1/32 (*.f64 (*.f64 x x) (pow.f64 (sqrt.f64 1/2) 3))))","(+.f64 (+.f64 1 (+.f64 (sqrt.f64 1/2) (/.f64 (/.f64 1/4 x) (sqrt.f64 1/2)))) (-.f64 (/.f64 -3/32 (*.f64 (pow.f64 x 3) (sqrt.f64 1/2))) (*.f64 1/32 (/.f64 (/.f64 2 (sqrt.f64 1/2)) (*.f64 x x)))))","(+.f64 (sqrt.f64 1/2) (-.f64 (+.f64 (+.f64 1 (/.f64 1/4 (*.f64 x (sqrt.f64 1/2)))) (/.f64 (/.f64 -3/32 (sqrt.f64 1/2)) (pow.f64 x 3))) (/.f64 (/.f64 1/16 (sqrt.f64 1/2)) (*.f64 x x))))","(+.f64 1 (sqrt.f64 1/2))","(-.f64 (+.f64 (sqrt.f64 1/2) 1) (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x))))","(-.f64 (+.f64 1 (sqrt.f64 1/2)) (/.f64 1/4 (*.f64 x (sqrt.f64 1/2))))","(+.f64 1 (-.f64 (sqrt.f64 1/2) (/.f64 (/.f64 1/4 x) (sqrt.f64 1/2))))","(+.f64 (+.f64 1 (sqrt.f64 1/2)) (/.f64 -1/4 (*.f64 x (sqrt.f64 1/2))))","(-.f64 (+.f64 (sqrt.f64 1/2) 1) (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x))) (*.f64 1/32 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 x 2))))))","(+.f64 (sqrt.f64 1/2) (-.f64 1 (+.f64 (/.f64 1/4 (*.f64 x (sqrt.f64 1/2))) (/.f64 1/32 (*.f64 (*.f64 x x) (pow.f64 (sqrt.f64 1/2) 3))))))","(-.f64 (+.f64 1 (sqrt.f64 1/2)) (fma.f64 1/32 (/.f64 (/.f64 2 (sqrt.f64 1/2)) (*.f64 x x)) (/.f64 (/.f64 1/4 x) (sqrt.f64 1/2))))","(+.f64 (+.f64 1 (sqrt.f64 1/2)) (+.f64 (/.f64 -1/4 (*.f64 x (sqrt.f64 1/2))) (/.f64 (/.f64 -1/16 (sqrt.f64 1/2)) (*.f64 x x))))","(-.f64 (+.f64 (sqrt.f64 1/2) (+.f64 1 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 1/64 (/.f64 1 (pow.f64 (sqrt.f64 1/2) 4))) 1/4) (*.f64 (sqrt.f64 1/2) (pow.f64 x 3)))))) (+.f64 (*.f64 1/4 (/.f64 1 (*.f64 (sqrt.f64 1/2) x))) (*.f64 1/32 (/.f64 1 (*.f64 (pow.f64 (sqrt.f64 1/2) 3) (pow.f64 x 2))))))","(-.f64 (+.f64 (sqrt.f64 1/2) (+.f64 1 (*.f64 (/.f64 (+.f64 (/.f64 1/64 (pow.f64 (sqrt.f64 1/2) 4)) -1/4) (*.f64 (pow.f64 x 3) (sqrt.f64 1/2))) -1/2))) (+.f64 (/.f64 1/4 (*.f64 x (sqrt.f64 1/2))) (/.f64 1/32 (*.f64 (*.f64 x x) (pow.f64 (sqrt.f64 1/2) 3)))))","(+.f64 (sqrt.f64 1/2) (-.f64 (+.f64 1 (/.f64 (/.f64 3/32 (pow.f64 x 3)) (sqrt.f64 1/2))) (fma.f64 1/32 (/.f64 (/.f64 2 (sqrt.f64 1/2)) (*.f64 x x)) (/.f64 (/.f64 1/4 x) (sqrt.f64 1/2)))))","(+.f64 1 (-.f64 (+.f64 (sqrt.f64 1/2) (/.f64 (/.f64 3/32 (pow.f64 x 3)) (sqrt.f64 1/2))) (+.f64 (/.f64 1/4 (*.f64 x (sqrt.f64 1/2))) (/.f64 (/.f64 1/16 (sqrt.f64 1/2)) (*.f64 x x)))))"]],"stop":[["node limit",1]],"time":49.889892578125,"type":"simplify"},{"compiler":[[8830,7996]],"time":120.189208984375,"type":"eval"},{"alts":[["(fma.f64 (*.f64 x x) 1/8 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))","next",31.967105014936905],["(*.f64 (-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))","done",15.505685399681331]],"compiler":[[21,16],[21,19],[21,16]],"count":[[274,2]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[272,1],"picked":[1,1]}],"min-error":[0.00390625],"time":96.16796875,"type":"prune"},{"compiler":[[71,53]],"locations":[["(*.f64 (pow.f64 x 8) -1843/32768)",0.03125,true],["(fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))",0.04296875,true],["(fma.f64 (*.f64 x x) 1/8 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))",17.00767213645402,true],["(fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))",27.011495819662215,true]],"time":19.52099609375,"type":"localize"},{"count":[[4,48]],"series":[["(*.f64 (pow.f64 x 8) -1843/32768)","x","-inf",0.14111328125],["(*.f64 (pow.f64 x 8) -1843/32768)","x","inf",0.169921875],["(*.f64 (pow.f64 x 8) -1843/32768)","x","0",0.27197265625],["(fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))","x","-inf",0.299072265625],["(fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))","x","inf",0.44189453125],["(fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))","x","0",0.576904296875],["(fma.f64 (*.f64 x x) 1/8 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))","x","-inf",0.23486328125],["(fma.f64 (*.f64 x x) 1/8 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))","x","inf",0.22314453125],["(fma.f64 (*.f64 x x) 1/8 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))","x","0",0.242919921875],["(fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))","x","-inf",0.416015625],["(fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))","x","inf",0.547119140625],["(fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))","x","0",0.48095703125]],"time":4.251953125,"type":"series"},{"count":[[4,109]],"egraph":[[2,3693,70,0.028983625],[1,359,70,0.0068302499999999995],[0,17,70,0.000831042]],"inputs":[["(fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))","(fma.f64 (*.f64 x x) 1/8 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))","(fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))","(*.f64 (pow.f64 x 8) -1843/32768)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)) (*.f64 (pow.f64 x 6) 69/1024))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 x 6) 69/1024) (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 x 6) 69/1024) 1) (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 x 6) 69/1024 (*.f64 (pow.f64 x 4) -11/128)) (*.f64 (pow.f64 x 8) -1843/32768))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))) (pow.f64 (cbrt.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))) 2) (cbrt.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))) (sqrt.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 x 6) 69/1024) 3) (pow.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)) 3)) (+.f64 (pow.f64 (*.f64 (pow.f64 x 6) 69/1024) 2) (-.f64 (pow.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)) 2) (*.f64 (*.f64 (pow.f64 x 6) 69/1024) (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (pow.f64 x 6) 69/1024) 2) (pow.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)) 2)) (-.f64 (*.f64 (pow.f64 x 6) 69/1024) (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))) (exp.f64 (*.f64 (pow.f64 x 6) 69/1024))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))) (exp.f64 (*.f64 (pow.f64 x 6) 69/1024))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (pow.f64 x 6) 69/1024)) (+.f64 1 (expm1.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))) (*.f64 x (*.f64 x 1/8)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (*.f64 x 1/8)) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (*.f64 x 1/8)) 1) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 x 1/8) (*.f64 (pow.f64 x 6) 69/1024)) (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))) (pow.f64 (cbrt.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))) 2) (cbrt.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))) (sqrt.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (*.f64 x 1/8)) 3) (pow.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))) 3)) (+.f64 (pow.f64 (*.f64 x (*.f64 x 1/8)) 2) (-.f64 (pow.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))) 2) (*.f64 (*.f64 x (*.f64 x 1/8)) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (*.f64 x 1/8)) 2) (pow.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))) 2)) (-.f64 (*.f64 x (*.f64 x 1/8)) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))) (exp.f64 (*.f64 x (*.f64 x 1/8)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))) (exp.f64 (*.f64 x (*.f64 x 1/8)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 x 1/8))) (+.f64 1 (expm1.f64 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 x 8) -1843/32768) (*.f64 (pow.f64 x 4) -11/128))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 x 4) -11/128) (*.f64 (pow.f64 x 8) -1843/32768))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 x 4) -11/128) 1) (*.f64 (pow.f64 x 8) -1843/32768))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))) (pow.f64 (cbrt.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))) 2) (cbrt.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))) (sqrt.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 x 4) -11/128) 3) (pow.f64 (*.f64 (pow.f64 x 8) -1843/32768) 3)) (+.f64 (pow.f64 (*.f64 (pow.f64 x 4) -11/128) 2) (-.f64 (*.f64 3396649/1073741824 (pow.f64 x 16)) (*.f64 (*.f64 (pow.f64 x 4) -11/128) (*.f64 (pow.f64 x 8) -1843/32768)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (pow.f64 x 4) -11/128) 2) (*.f64 3396649/1073741824 (pow.f64 x 16))) (-.f64 (*.f64 (pow.f64 x 4) -11/128) (*.f64 (pow.f64 x 8) -1843/32768)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 -1843/32768) (pow.f64 x 8)) (exp.f64 (*.f64 (pow.f64 x 4) -11/128))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (pow.f64 x 8) -1843/32768))) (exp.f64 (*.f64 (pow.f64 x 4) -11/128))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (pow.f64 x 4) -11/128)) (+.f64 1 (expm1.f64 (*.f64 (pow.f64 x 8) -1843/32768)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (pow.f64 x 8) -1843/32768))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 -1843/32768) (pow.f64 x 8))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 -1843/32768) (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1843/32768) (pow.f64 x 8)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1843/32768) (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (pow.f64 x 8) -1843/32768))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 8) -1843/32768) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 3396649/1073741824 (pow.f64 x 16)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 x 8) -1843/32768) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 x 8) -1843/32768)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 4) (sqrt.f64 -1843/32768)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 3396649/1073741824 (pow.f64 x 16)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 -1843/32768) (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (pow.f64 x 8) -1843/32768))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 x 8) -1843/32768) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (pow.f64 x 8) -1843/32768)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (pow.f64 x 8) -1843/32768)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 8 (log.f64 x) (log1p.f64 -34611/32768)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 8 (log.f64 x) (log1p.f64 -34611/32768)) 1))))))"]],"rules":[["egg-rr",17],["egg-rr",30],["egg-rr",31],["egg-rr",31]],"stop":[["node limit",1]],"time":58.370849609375,"type":"rewrite"},{"count":[[157,127]],"egraph":[[10,7646,630,0.067615582],[9,7207,630,0.055906081999999996],[8,6223,630,0.044498999],[7,5233,630,0.033002958],[6,4727,630,0.023762791],[5,4355,630,0.016502916],[4,1964,630,0.009314666],[3,404,630,0.0038574580000000002],[2,135,630,0.001351791],[1,60,630,0.000611958],[0,25,630,0.000226625]],"inputs":[["(*.f64 -11/128 (pow.f64 x 4))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -11/128 (pow.f64 x 4)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(*.f64 1/8 (pow.f64 x 2))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -11/128 (pow.f64 x 4)))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -11/128 (pow.f64 x 4))))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))))","(*.f64 -11/128 (pow.f64 x 4))","(+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))","(+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))","(+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))","(+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))","(+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))","(+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))","(+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -11/128 (pow.f64 x 4))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -11/128 (pow.f64 x 4) (*.f64 69/1024 (pow.f64 x 6)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8))))","(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))","(fma.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) -1843/32768 -11/128) (*.f64 69/1024 (pow.f64 x 6)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8))))","(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))","(fma.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) -1843/32768 -11/128) (*.f64 69/1024 (pow.f64 x 6)))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 -1843/32768 (pow.f64 x 8)))","(fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8))))","(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))","(fma.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) -1843/32768 -11/128) (*.f64 69/1024 (pow.f64 x 6)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8))))","(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))","(fma.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) -1843/32768 -11/128) (*.f64 69/1024 (pow.f64 x 6)))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 -1843/32768 (pow.f64 x 8)))","(fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8))))","(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))","(fma.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) -1843/32768 -11/128) (*.f64 69/1024 (pow.f64 x 6)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8))))","(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))","(fma.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) -1843/32768 -11/128) (*.f64 69/1024 (pow.f64 x 6)))","(*.f64 1/8 (pow.f64 x 2))","(*.f64 1/8 (*.f64 x x))","(*.f64 x (*.f64 x 1/8))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 1/8 (*.f64 x x) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -11/128 (pow.f64 x 4) (*.f64 x (*.f64 x 1/8)))","(*.f64 (*.f64 x x) (fma.f64 -11/128 (*.f64 x x) 1/8))","(*.f64 x (*.f64 x (fma.f64 -11/128 (*.f64 x x) 1/8)))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 1/8 (*.f64 x x) (fma.f64 69/1024 (pow.f64 x 6) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 1/8 (*.f64 x x) (fma.f64 -11/128 (pow.f64 x 4) (*.f64 69/1024 (pow.f64 x 6))))","(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (*.f64 69/1024 (pow.f64 x 6))))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 (*.f64 x x) (fma.f64 -11/128 (*.f64 x x) 1/8)))","(fma.f64 x (*.f64 x 1/8) (fma.f64 -11/128 (pow.f64 x 4) (*.f64 69/1024 (pow.f64 x 6))))","(fma.f64 (*.f64 x x) (fma.f64 -11/128 (*.f64 x x) 1/8) (*.f64 69/1024 (pow.f64 x 6)))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))))","(fma.f64 1/8 (*.f64 x x) (fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4)))))","(fma.f64 1/8 (*.f64 x x) (fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8)))))","(fma.f64 x (*.f64 x 1/8) (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 (*.f64 x x) (fma.f64 -11/128 (*.f64 x x) 1/8) (*.f64 -1843/32768 (pow.f64 x 8))))","(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 -1843/32768 (pow.f64 x 8)))","(fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8))))","(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))","(fma.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) -1843/32768 -11/128) (*.f64 69/1024 (pow.f64 x 6)))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))))","(fma.f64 1/8 (*.f64 x x) (fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4)))))","(fma.f64 1/8 (*.f64 x x) (fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8)))))","(fma.f64 x (*.f64 x 1/8) (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 (*.f64 x x) (fma.f64 -11/128 (*.f64 x x) 1/8) (*.f64 -1843/32768 (pow.f64 x 8))))","(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 -1843/32768 (pow.f64 x 8)))","(fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8))))","(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))","(fma.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) -1843/32768 -11/128) (*.f64 69/1024 (pow.f64 x 6)))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))))","(fma.f64 1/8 (*.f64 x x) (fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4)))))","(fma.f64 1/8 (*.f64 x x) (fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8)))))","(fma.f64 x (*.f64 x 1/8) (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 (*.f64 x x) (fma.f64 -11/128 (*.f64 x x) 1/8) (*.f64 -1843/32768 (pow.f64 x 8))))","(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))","(*.f64 -11/128 (pow.f64 x 4))","(+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8)))","(*.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) -1843/32768 -11/128))","(+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8)))","(*.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) -1843/32768 -11/128))","(+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8)))","(*.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) -1843/32768 -11/128))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8)))","(*.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) -1843/32768 -11/128))","(+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8)))","(*.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) -1843/32768 -11/128))","(+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8)))","(*.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) -1843/32768 -11/128))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8)))","(*.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) -1843/32768 -11/128))","(+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8)))","(*.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) -1843/32768 -11/128))","(+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8)))","(*.f64 (pow.f64 x 4) (fma.f64 (pow.f64 x 4) -1843/32768 -11/128))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))","(*.f64 -1843/32768 (pow.f64 x 8))"]],"stop":[["node limit",1]],"time":93.4091796875,"type":"simplify"},{"compiler":[[3230,2444]],"time":43.81982421875,"type":"eval"},{"alts":[["(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))","next",31.963198764936905],["(*.f64 (-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))","done",15.505685399681331]],"compiler":[[21,16],[21,19],[21,16]],"count":[[129,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[127,1],"picked":[1,0]}],"min-error":[0],"time":24.927001953125,"type":"prune"},{"compiler":[[71,54]],"locations":[["(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))",0.00390625,true],["(pow.f64 x 6)",0.00390625,true],["(*.f64 69/1024 (pow.f64 x 6))",0.046875,true],["(fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))",27.027120819662215,true]],"time":19.634033203125,"type":"localize"},{"count":[[4,24]],"series":[["(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))","x","-inf",0.235107421875],["(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))","x","inf",0.203857421875],["(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))","x","0",0.283203125],["(pow.f64 x 6)","x","-inf",0.963134765625],["(pow.f64 x 6)","x","inf",0.404052734375],["(pow.f64 x 6)","x","0",0.142822265625],["(*.f64 69/1024 (pow.f64 x 6))","x","-inf",0.35595703125],["(*.f64 69/1024 (pow.f64 x 6))","x","inf",0.2431640625],["(*.f64 69/1024 (pow.f64 x 6))","x","0",0.295166015625],["(fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))","x","-inf",0.3740234375],["(fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))","x","inf",0.498046875],["(fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))","x","0",0.38818359375]],"time":4.545166015625,"type":"series"},{"count":[[4,95]],"egraph":[[2,3791,53,0.035215543],[1,361,53,0.007446042999999999],[0,17,53,0.000815709]],"inputs":[["(fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))","(*.f64 69/1024 (pow.f64 x 6))","(pow.f64 x 6)","(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 69/1024 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1843/32768 (pow.f64 x 8)) 1) (*.f64 69/1024 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))) (pow.f64 (cbrt.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))) 2) (cbrt.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))) (sqrt.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 -1843/32768 (pow.f64 x 8)) 3) (pow.f64 (*.f64 69/1024 (pow.f64 x 6)) 3)) (+.f64 (pow.f64 (*.f64 -1843/32768 (pow.f64 x 8)) 2) (-.f64 (*.f64 4761/1048576 (pow.f64 x 12)) (*.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 69/1024 (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 -1843/32768 (pow.f64 x 8)) 2) (*.f64 4761/1048576 (pow.f64 x 12))) (-.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 69/1024 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 69/1024) (pow.f64 x 6)) (exp.f64 (*.f64 -1843/32768 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 69/1024 (pow.f64 x 6)))) (exp.f64 (*.f64 -1843/32768 (pow.f64 x 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 -1843/32768 (pow.f64 x 8))) (+.f64 1 (expm1.f64 (*.f64 69/1024 (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 69/1024 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 69/1024) (pow.f64 x 6))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 69/1024) (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 69/1024) (pow.f64 x 6)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 69/1024) (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 69/1024 (pow.f64 x 6)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 69/1024 (pow.f64 x 6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 4761/1048576 (pow.f64 x 12)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 69/1024 (pow.f64 x 6)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 x x) (cbrt.f64 69/1024)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 3) (sqrt.f64 69/1024)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 4761/1048576 (pow.f64 x 12)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 69/1024) (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 69/1024 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 69/1024 (pow.f64 x 6)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 69/1024 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 69/1024 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 6 (log.f64 x) (log.f64 69/1024)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 6 (log.f64 x) (log.f64 69/1024)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 x 6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 x 6))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 x 6)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 x 6))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 4) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 x 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x x) (pow.f64 x 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 3) (pow.f64 x 3))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 x 12))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 x 18))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 x 6)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 6 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 6 (log.f64 x)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))) (*.f64 -11/128 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -11/128 (pow.f64 x 4)) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -11/128 (pow.f64 x 4)) 1) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -11/128 (pow.f64 x 4) (*.f64 x (*.f64 x 1/8))) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))) (pow.f64 (cbrt.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))) 2) (cbrt.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))) (sqrt.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 -11/128 (pow.f64 x 4)) 3) (pow.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))) 3)) (+.f64 (pow.f64 (*.f64 -11/128 (pow.f64 x 4)) 2) (-.f64 (pow.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))) 2) (*.f64 (*.f64 -11/128 (pow.f64 x 4)) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 -11/128 (pow.f64 x 4)) 2) (pow.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))) 2)) (-.f64 (*.f64 -11/128 (pow.f64 x 4)) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))) (exp.f64 (*.f64 -11/128 (pow.f64 x 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))) (exp.f64 (*.f64 -11/128 (pow.f64 x 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 -11/128 (pow.f64 x 4))) (+.f64 1 (expm1.f64 (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))) 1))))))"]],"rules":[["egg-rr",31],["egg-rr",17],["egg-rr",17],["egg-rr",30]],"stop":[["node limit",1]],"time":66.078857421875,"type":"rewrite"},{"count":[[119,108]],"egraph":[[10,7658,357,0.077033084],[9,7219,357,0.063641459],[8,6235,357,0.050823667],[7,5245,357,0.0370575],[6,4739,357,0.026763583],[5,4361,357,0.018878708],[4,1968,357,0.009800749000000001],[3,404,357,0.003966124],[2,135,357,0.001396874],[1,60,357,0.000590458],[0,25,357,0.000223458]],"inputs":[["(*.f64 69/1024 (pow.f64 x 6))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(*.f64 1/8 (pow.f64 x 2))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -11/128 (pow.f64 x 4)))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -11/128 (pow.f64 x 4))))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 69/1024 (pow.f64 x 6))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 -1843/32768 (pow.f64 x 8)))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 -1843/32768 (pow.f64 x 8)))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 -1843/32768 (pow.f64 x 8)))","(*.f64 1/8 (pow.f64 x 2))","(*.f64 1/8 (*.f64 x x))","(*.f64 x (*.f64 x 1/8))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 1/8 (*.f64 x x) (*.f64 -11/128 (pow.f64 x 4)))","(fma.f64 x (*.f64 x 1/8) (*.f64 -11/128 (pow.f64 x 4)))","(*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -11/128 1/8)))","(fma.f64 -11/128 (pow.f64 x 4) (*.f64 x (*.f64 x 1/8)))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 1/8 (*.f64 x x) (fma.f64 69/1024 (pow.f64 x 6) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 x (*.f64 x 1/8) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -11/128 1/8))))","(fma.f64 (*.f64 x x) (fma.f64 (*.f64 x x) -11/128 1/8) (*.f64 69/1024 (pow.f64 x 6)))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -11/128 (pow.f64 x 4) (*.f64 x (*.f64 x 1/8))))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))))","(fma.f64 1/8 (*.f64 x x) (fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4)))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4)))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -11/128 1/8)))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 x (*.f64 x 1/8) (*.f64 (pow.f64 x 4) (fma.f64 -1843/32768 (pow.f64 x 4) -11/128))))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 (pow.f64 x 4) (fma.f64 -1843/32768 (pow.f64 x 4) -11/128)))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))))","(fma.f64 1/8 (*.f64 x x) (fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4)))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4)))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -11/128 1/8)))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 x (*.f64 x 1/8) (*.f64 (pow.f64 x 4) (fma.f64 -1843/32768 (pow.f64 x 4) -11/128))))","(*.f64 -1843/32768 (pow.f64 x 8))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (*.f64 -1843/32768 (pow.f64 x 8)))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 -1843/32768 (pow.f64 x 8)))","(+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4))))","(fma.f64 69/1024 (pow.f64 x 6) (*.f64 (pow.f64 x 4) (fma.f64 -1843/32768 (pow.f64 x 4) -11/128)))","(+.f64 (*.f64 1/8 (pow.f64 x 2)) (+.f64 (*.f64 69/1024 (pow.f64 x 6)) (+.f64 (*.f64 -1843/32768 (pow.f64 x 8)) (*.f64 -11/128 (pow.f64 x 4)))))","(fma.f64 1/8 (*.f64 x x) (fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4)))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 -11/128 (pow.f64 x 4)))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 x (*.f64 x (fma.f64 (*.f64 x x) -11/128 1/8)))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 x (*.f64 x 1/8) (*.f64 (pow.f64 x 4) (fma.f64 -1843/32768 (pow.f64 x 4) -11/128))))"]],"stop":[["node limit",1]],"time":99.3330078125,"type":"simplify"},{"compiler":[[2690,2101]],"time":42.30908203125,"type":"eval"},{"alts":[["(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))","done",31.963198764936905],["(*.f64 (-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))","done",15.505685399681331]],"compiler":[[21,16],[21,19]],"count":[[110,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[108,0],"picked":[1,1]}],"min-error":[0],"time":21.825927734375,"type":"prune"},{"accuracy":[0],"baseline":[15.505685399681331],"branch":[["x",0,3],["(-.f64 1 (sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 1 (hypot.f64 1 x))))))",0,2],["(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 1 (hypot.f64 1 x)))))",0,2],["(*.f64 1/2 (+.f64 1 (/.f64 1 (hypot.f64 1 x))))",0,2],["(+.f64 1 (/.f64 1 (hypot.f64 1 x)))",0,2],["(/.f64 1 (hypot.f64 1 x))",0,2],["(hypot.f64 1 x)",0,2],["(hypot.f64 1 x)",0,2]],"compiler":[[2,1],[13,12],[11,10],[10,9],[8,7],[6,5],[4,3],[4,3],[103,83]],"count":[[6,2]],"inputs":[["(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))","(fma.f64 (*.f64 x x) 1/8 (fma.f64 (pow.f64 x 6) 69/1024 (fma.f64 (pow.f64 x 4) -11/128 (*.f64 (pow.f64 x 8) -1843/32768))))","(fma.f64 69/1024 (pow.f64 x 6) (fma.f64 1/8 (*.f64 x x) (fma.f64 -11/128 (pow.f64 x 4) (*.f64 -1843/32768 (pow.f64 x 8)))))","(*.f64 (-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))","(-.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))","(-.f64 1 (sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 1 (hypot.f64 1 x))))))"]],"link":["."],"name":["Given's Rotation SVD example, simplified"],"oracle":[47.49963706014593],"outputs":[["(fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6)))))","(*.f64 (-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x)))))))"]],"time":49.89892578125,"times":[["x",12.890869140625],["(-.f64 1 (sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 1 (hypot.f64 1 x))))))",3.85400390625],["(sqrt.f64 (*.f64 1/2 (+.f64 1 (/.f64 1 (hypot.f64 1 x)))))",4.093994140625],["(*.f64 1/2 (+.f64 1 (/.f64 1 (hypot.f64 1 x))))",4.496826171875],["(+.f64 1 (/.f64 1 (hypot.f64 1 x)))",3.85205078125],["(/.f64 1 (hypot.f64 1 x))",7.751220703125],["(hypot.f64 1 x)",5.43994140625],["(hypot.f64 1 x)",4.83203125]],"type":"regimes"},{"bstep":[[1.000066551788155,9.608241794309938,0.0791015625]],"compiler":[[13,12],[4,3]],"method":["left-value"],"time":0.216064453125,"type":"bsearch"},{"compiler":[[47,39]],"egraph":[[4,50,67,0.000277792],[3,49,67,0.000225792],[2,47,67,0.00017125],[1,40,67,0.000118667],[0,31,67,5.5625e-5]],"inputs":[["(if (<=.f64 (hypot.f64 1 x) 2) (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))) (*.f64 (-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (hypot.f64 1 x) 2) (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))) (*.f64 (-.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))","(if (<=.f64 (hypot.f64 1 x) 2) (fma.f64 -11/128 (pow.f64 x 4) (fma.f64 x (*.f64 x 1/8) (fma.f64 -1843/32768 (pow.f64 x 8) (*.f64 69/1024 (pow.f64 x 6))))) (*.f64 (+.f64 1/2 (/.f64 -1/2 (hypot.f64 1 x))) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 1/2 (/.f64 1/2 (hypot.f64 1 x))))))))"]],"stop":[["done",1],["saturated",1]],"time":9.828125,"type":"simplify"},{"time":0.02880859375,"type":"soundness"},{"compiler":[[47,39]],"remove-preprocessing":[[]],"time":21.634033203125,"type":"end"}]