[{"compiler":[[13,10]],"method":["search"],"sampling":[[12,0.6804873183136806,0.09170725150033832,0.2278054301859811],[11,0.6429263695608824,0.13658526819199324,0.22048836224712431],[10,0.6146337068639696,0.17951206676661968,0.20585422636941075],[9,0.542438636533916,0.2653656639158726,0.19219569955021143],[8,0.49170696549117565,0.34341438859701157,0.16487864591181278],[7,0.35902413353323936,0.49951183795928955,0.14146402850747108],[6,0.2809754088521004,0.6243897974491119,0.09463479369878769],[5,0.062438979744911194,0.8741457164287567,0.06341530382633209],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":33.757080078125,"type":"analyze"},{"outcomes":[["body",256,"invalid",10.7490234375,262],["body",4096,"valid",6.694091796875,9],["body",1024,"valid",370.317626953125,1795],["body",512,"valid",139.038818359375,1163],["body",2048,"valid",555.259033203125,1492],["body",256,"valid",199.228271484375,3797]],"time":1289.925048828125,"type":"sample"},{"compiler":[[12,9]],"egraph":[[0,2,2,2.375e-6],[21,6821,22,0.09869383500000001],[20,5102,22,0.084196876],[19,4459,22,0.069850376],[18,4284,22,0.061904001],[17,3866,22,0.055691876],[16,3569,22,0.048890209000000004],[15,2649,22,0.042330167],[14,2013,22,0.032879542],[13,1593,22,0.026141959],[12,1456,22,0.021637542],[11,1337,22,0.018409459],[10,1201,22,0.015548541999999999],[9,1015,22,0.012771834],[8,774,22,0.010021917],[7,633,22,0.007395708],[6,526,22,0.005500583],[5,407,22,0.003868208],[4,291,22,0.002491375],[3,169,22,0.0013331670000000001],[2,73,22,0.0005787920000000001],[1,30,22,0.000207458],[0,14,24,7.1375e-5]],"inputs":[["0","1"],["(*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x))))","(*.f64 (*.f64 y 1) (log.f64 (-.f64 1 (/.f64 x y))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x))))","(*.f64 x (log.f64 (-.f64 1 (/.f64 y x))))","(*.f64 x (log1p.f64 (/.f64 (neg.f64 y) x)))","(*.f64 x (log1p.f64 (/.f64 y (neg.f64 x))))","(*.f64 (*.f64 y 1) (log.f64 (-.f64 1 (/.f64 x y))))","(*.f64 y (log.f64 (-.f64 1 (/.f64 x y))))","(*.f64 y (log1p.f64 (/.f64 (neg.f64 x) y)))","(*.f64 y (log1p.f64 (/.f64 x (neg.f64 y))))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":124.556884765625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[13,335,11,0.005206918],[12,271,11,0.004596876],[11,251,11,0.0039007509999999996],[10,246,11,0.0033870009999999997],[9,240,11,0.002906251],[8,213,11,0.0024264589999999997],[7,178,11,0.001864],[6,144,11,0.001401209],[5,107,11,0.000995959],[4,69,11,0.0006646670000000001],[3,44,11,0.00042100000000000004],[2,33,11,0.00024191700000000002],[1,18,11,0.000127834],[0,9,12,5.2125e-5]],"inputs":[["(*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x))))","(*.f64 x (log.f64 (-.f64 1 (/.f64 y x))))","(*.f64 x (log1p.f64 (/.f64 (neg.f64 y) x)))","(*.f64 x (log1p.f64 (/.f64 y (neg.f64 x))))"]],"stop":[["saturated",1]],"time":15.818115234375,"type":"simplify"},{"compiler":[[19,13]],"time":0.373779296875,"type":"eval"},{"alts":[["(*.f64 x (log1p.f64 (/.f64 y (neg.f64 x))))","next",15.343120206248795]],"compiler":[[9,6],[9,6]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[15.343120206248795],"time":0.80908203125,"type":"prune"},{"compiler":[[22,6]],"locations":[["(log1p.f64 (/.f64 y (neg.f64 x)))",4.381832495438947,true],["(*.f64 x (log1p.f64 (/.f64 y (neg.f64 x))))",10.854838956248791,true]],"time":4.697998046875,"type":"localize"},{"count":[[2,48]],"series":[["(log1p.f64 (/.f64 y (neg.f64 x)))","x","-inf",0.195068359375],["(log1p.f64 (/.f64 y (neg.f64 x)))","x","inf",0.23388671875],["(log1p.f64 (/.f64 y (neg.f64 x)))","x","0",0.2109375],["(log1p.f64 (/.f64 y (neg.f64 x)))","y","-inf",0.2490234375],["(log1p.f64 (/.f64 y (neg.f64 x)))","y","inf",0.255859375],["(log1p.f64 (/.f64 y (neg.f64 x)))","y","0",0.279052734375],["(*.f64 x (log1p.f64 (/.f64 y (neg.f64 x))))","y","-inf",0.570068359375],["(*.f64 x (log1p.f64 (/.f64 y (neg.f64 x))))","y","inf",0.541015625],["(*.f64 x (log1p.f64 (/.f64 y (neg.f64 x))))","y","0",0.47412109375],["(*.f64 x (log1p.f64 (/.f64 y (neg.f64 x))))","x","-inf",0.40185546875],["(*.f64 x (log1p.f64 (/.f64 y (neg.f64 x))))","x","inf",0.567138671875],["(*.f64 x (log1p.f64 (/.f64 y (neg.f64 x))))","x","0",0.843994140625]],"time":5.01611328125,"type":"series"},{"count":[[2,28]],"egraph":[[2,1992,15,0.017111708],[1,145,15,0.002634458],[0,7,19,0.000164083]],"inputs":[["(*.f64 x (log1p.f64 (/.f64 y (neg.f64 x))))","(log1p.f64 (/.f64 y (neg.f64 x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (log1p.f64 (/.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (log1p.f64 (/.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (log1p.f64 (/.f64 y x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (log1p.f64 (/.f64 y x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (log1p.f64 (/.f64 y x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (log1p.f64 (/.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (+.f64 (/.f64 y x) 1) x))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (log1p.f64 (/.f64 y x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (log1p.f64 (/.f64 y x)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (log1p.f64 (/.f64 y x)) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (log1p.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (log1p.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (log1p.f64 (/.f64 y x)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (log1p.f64 (/.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (/.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (/.f64 y x))) (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 y x))) 2) (cbrt.f64 (log1p.f64 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log1p.f64 (/.f64 y x))) (sqrt.f64 (log1p.f64 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (/.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (/.f64 y x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (/.f64 y x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log1p.f64 (/.f64 y x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log1p.f64 (/.f64 y x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 (/.f64 y x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (/.f64 y x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log1p.f64 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log1p.f64 (/.f64 y x))))))))"]],"rules":[["egg-rr",15],["egg-rr",13]],"stop":[["node limit",1]],"time":36.616943359375,"type":"rewrite"},{"count":[[76,84]],"egraph":[[3,4574,1182,0.021108249000000003],[2,1073,1191,0.008574583],[1,317,1226,0.0021397079999999997],[0,100,1290,0.000487583]],"inputs":[["(*.f64 (+.f64 (log.f64 (*.f64 -1 y)) (*.f64 -1 (log.f64 x))) x)","(+.f64 (*.f64 (+.f64 (log.f64 (*.f64 -1 y)) (*.f64 -1 (log.f64 x))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (log.f64 (*.f64 -1 y)) (*.f64 -1 (log.f64 x))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (log.f64 (*.f64 -1 y)) (*.f64 -1 (log.f64 x))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))))","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))))","(*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))))","(+.f64 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (pow.f64 x 2) y))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))))","(*.f64 -1 (/.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1 (/.f64 y x)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (+.f64 (log.f64 (neg.f64 (/.f64 1 x))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (+.f64 (log.f64 (neg.f64 (/.f64 1 x))) (*.f64 -1 (/.f64 x y)))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (+.f64 (log.f64 (neg.f64 (/.f64 1 x))) (*.f64 -1 (/.f64 x y))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 (/.f64 1 x)) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 (/.f64 1 x)) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 (/.f64 1 x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))))))","(+.f64 (log.f64 (*.f64 -1 y)) (*.f64 -1 (log.f64 x)))","(+.f64 (log.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (/.f64 x y)) (*.f64 -1 (log.f64 x))))","(+.f64 (log.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 x y)) (*.f64 -1 (log.f64 x)))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (log.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 x y)) (*.f64 -1 (log.f64 x))))))","(*.f64 -1 (/.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1 (/.f64 y x)))))","(*.f64 -1 (/.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1 (/.f64 y x)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (+.f64 (log.f64 (*.f64 -1 y)) (*.f64 -1 (log.f64 x))) x)","(*.f64 x (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))","(*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)))","(+.f64 (*.f64 (+.f64 (log.f64 (*.f64 -1 y)) (*.f64 -1 (log.f64 x))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(fma.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) x (neg.f64 (/.f64 (*.f64 x x) y)))","(-.f64 (*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x))) (*.f64 (/.f64 x y) x))","(fma.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)) (/.f64 (neg.f64 x) (/.f64 y x)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (log.f64 (*.f64 -1 y)) (*.f64 -1 (log.f64 x))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y))))","(fma.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (fma.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) x (neg.f64 (/.f64 (*.f64 x x) y))))","(-.f64 (fma.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)))) (/.f64 x (/.f64 y x)))","(fma.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)) (-.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y))) (*.f64 (/.f64 x y) x)))","(fma.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)) (fma.f64 (/.f64 -1/2 (*.f64 y y)) (pow.f64 x 3) (/.f64 (neg.f64 x) (/.f64 y x))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (log.f64 (*.f64 -1 y)) (*.f64 -1 (log.f64 x))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))))","(fma.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (fma.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (fma.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) x (neg.f64 (/.f64 (*.f64 x x) y)))))","(fma.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (-.f64 (fma.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)))) (/.f64 x (/.f64 y x))))","(fma.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (fma.f64 -1/3 (*.f64 (pow.f64 (/.f64 x y) 3) x) (-.f64 (*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x))) (*.f64 (/.f64 x y) x))))","(fma.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (fma.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)) (-.f64 (*.f64 -1/3 (/.f64 x (pow.f64 (/.f64 y x) 3))) (*.f64 (/.f64 x y) x))))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 -1/2 (/.f64 y (/.f64 x y))) y)","(-.f64 (*.f64 -1/2 (*.f64 (/.f64 y x) y)) y)","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(-.f64 (fma.f64 -1/2 (/.f64 y (/.f64 x y)) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)))) y)","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/3 (/.f64 (/.f64 (pow.f64 y 3) x) x))) y)","(fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (neg.f64 y))))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (-.f64 (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))) y))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (fma.f64 -1/3 (/.f64 (/.f64 (pow.f64 y 3) x) x) (*.f64 -1/4 (/.f64 y (pow.f64 (/.f64 x y) 3))))) y)","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 -1/2 (/.f64 y (/.f64 x y))) y)","(-.f64 (*.f64 -1/2 (*.f64 (/.f64 y x) y)) y)","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(-.f64 (fma.f64 -1/2 (/.f64 y (/.f64 x y)) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)))) y)","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/3 (/.f64 (/.f64 (pow.f64 y 3) x) x))) y)","(fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (neg.f64 y))))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (-.f64 (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))) y))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (fma.f64 -1/3 (/.f64 (/.f64 (pow.f64 y 3) x) x) (*.f64 -1/4 (/.f64 y (pow.f64 (/.f64 x y) 3))))) y)","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 -1/2 (/.f64 y (/.f64 x y))) y)","(-.f64 (*.f64 -1/2 (*.f64 (/.f64 y x) y)) y)","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(-.f64 (fma.f64 -1/2 (/.f64 y (/.f64 x y)) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)))) y)","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/3 (/.f64 (/.f64 (pow.f64 y 3) x) x))) y)","(fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (neg.f64 y))))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (-.f64 (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))) y))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (fma.f64 -1/3 (/.f64 (/.f64 (pow.f64 y 3) x) x) (*.f64 -1/4 (/.f64 y (pow.f64 (/.f64 x y) 3))))) y)","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x)","(*.f64 x (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))))","(*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(fma.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) x (neg.f64 (/.f64 (*.f64 x x) y)))","(-.f64 (*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x))) (*.f64 (/.f64 x y) x))","(fma.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)) (/.f64 (neg.f64 x) (/.f64 y x)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y))))","(fma.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (fma.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) x (neg.f64 (/.f64 (*.f64 x x) y))))","(-.f64 (fma.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)))) (/.f64 x (/.f64 y x)))","(fma.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)) (-.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y))) (*.f64 (/.f64 x y) x)))","(fma.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)) (fma.f64 (/.f64 -1/2 (*.f64 y y)) (pow.f64 x 3) (/.f64 (neg.f64 x) (/.f64 y x))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))) x) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))))","(fma.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (fma.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (fma.f64 (+.f64 (log.f64 (neg.f64 y)) (neg.f64 (log.f64 x))) x (neg.f64 (/.f64 (*.f64 x x) y)))))","(fma.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (-.f64 (fma.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)))) (/.f64 x (/.f64 y x))))","(fma.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (fma.f64 -1/3 (*.f64 (pow.f64 (/.f64 x y) 3) x) (-.f64 (*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x))) (*.f64 (/.f64 x y) x))))","(fma.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (fma.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)) (-.f64 (*.f64 -1/3 (/.f64 x (pow.f64 (/.f64 y x) 3))) (*.f64 (/.f64 x y) x))))","(*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x))))","(*.f64 x (fma.f64 -1 (log.f64 (/.f64 -1 y)) (neg.f64 (log.f64 x))))","(*.f64 x (-.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (log.f64 x)))","(+.f64 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))","(fma.f64 x (fma.f64 -1 (log.f64 (/.f64 -1 y)) (neg.f64 (log.f64 x))) (neg.f64 (/.f64 (*.f64 x x) y)))","(-.f64 (*.f64 x (-.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (log.f64 x))) (/.f64 x (/.f64 y x)))","(-.f64 (*.f64 x (-.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (log.f64 x))) (*.f64 (/.f64 x y) x))","(-.f64 (/.f64 (neg.f64 x) (/.f64 y x)) (*.f64 x (+.f64 (log.f64 x) (log.f64 (/.f64 -1 y)))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (pow.f64 x 2) y))))","(fma.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (fma.f64 x (fma.f64 -1 (log.f64 (/.f64 -1 y)) (neg.f64 (log.f64 x))) (neg.f64 (/.f64 (*.f64 x x) y))))","(fma.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (-.f64 (*.f64 x (-.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (log.f64 x))) (/.f64 x (/.f64 y x))))","(fma.f64 x (-.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (log.f64 x)) (-.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y))) (*.f64 (/.f64 x y) x)))","(fma.f64 (neg.f64 x) (+.f64 (log.f64 x) (log.f64 (/.f64 -1 y))) (fma.f64 (/.f64 -1/2 (*.f64 y y)) (pow.f64 x 3) (/.f64 (neg.f64 x) (/.f64 y x))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))) (*.f64 -1 (/.f64 (pow.f64 x 2) y)))))","(fma.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (fma.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (fma.f64 x (fma.f64 -1 (log.f64 (/.f64 -1 y)) (neg.f64 (log.f64 x))) (neg.f64 (/.f64 (*.f64 x x) y)))))","(fma.f64 -1/3 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (fma.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (-.f64 (*.f64 x (-.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (log.f64 x))) (/.f64 x (/.f64 y x)))))","(fma.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (fma.f64 -1/3 (*.f64 (pow.f64 (/.f64 x y) 3) x) (-.f64 (*.f64 x (-.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (log.f64 x))) (*.f64 (/.f64 x y) x))))","(-.f64 (-.f64 (fma.f64 -1/2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -1/3 (/.f64 x (pow.f64 (/.f64 y x) 3)))) (*.f64 (/.f64 x y) x)) (*.f64 x (+.f64 (log.f64 x) (log.f64 (/.f64 -1 y)))))","(*.f64 -1 (/.f64 y x))","(/.f64 (neg.f64 y) x)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (neg.f64 y) x))","(-.f64 (*.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 y x))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (neg.f64 y) x)))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (-.f64 (*.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 y x)))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 -1/3 (pow.f64 (/.f64 y x) 3))) (/.f64 y x))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1 (/.f64 y x)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (neg.f64 y) x))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (-.f64 (/.f64 (*.f64 -1/4 (pow.f64 y 4)) (pow.f64 x 4)) (/.f64 y x))))","(fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 -1/3 (pow.f64 (/.f64 y x) 3) (-.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (/.f64 y x))))","(-.f64 (fma.f64 -1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 -1/4 (pow.f64 (/.f64 y x) 4)))) (/.f64 y x))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))","(fma.f64 -1 (neg.f64 (log.f64 y)) (log.f64 (/.f64 -1 x)))","(+.f64 (log.f64 y) (log.f64 (/.f64 -1 x)))","(-.f64 (log.f64 (neg.f64 y)) (log.f64 x))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (+.f64 (log.f64 (neg.f64 (/.f64 1 x))) (*.f64 -1 (/.f64 x y))))","(+.f64 (fma.f64 -1 (neg.f64 (log.f64 y)) (log.f64 (/.f64 -1 x))) (neg.f64 (/.f64 x y)))","(+.f64 (log.f64 y) (-.f64 (log.f64 (/.f64 -1 x)) (/.f64 x y)))","(-.f64 (log.f64 (neg.f64 y)) (+.f64 (log.f64 x) (/.f64 x y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (+.f64 (log.f64 (neg.f64 (/.f64 1 x))) (*.f64 -1 (/.f64 x y)))))","(fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (fma.f64 -1 (neg.f64 (log.f64 y)) (log.f64 (/.f64 -1 x))) (neg.f64 (/.f64 x y))))","(+.f64 (-.f64 (log.f64 (/.f64 -1 x)) (/.f64 x y)) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 y)))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 (neg.f64 y))) (+.f64 (log.f64 x) (/.f64 x y)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (+.f64 (log.f64 (neg.f64 (/.f64 1 x))) (*.f64 -1 (/.f64 x y))))))","(fma.f64 -1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (fma.f64 -1 (neg.f64 (log.f64 y)) (log.f64 (/.f64 -1 x))) (neg.f64 (/.f64 x y)))))","(fma.f64 -1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (-.f64 (log.f64 (/.f64 -1 x)) (/.f64 x y)) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 y))))","(-.f64 (fma.f64 -1/3 (pow.f64 (/.f64 x y) 3) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 (neg.f64 y)))) (+.f64 (log.f64 x) (/.f64 x y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 (/.f64 1 x)))","(fma.f64 -1 (log.f64 (/.f64 -1 y)) (neg.f64 (log.f64 x)))","(-.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (log.f64 x))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 (/.f64 1 x)) (*.f64 -1 (/.f64 x y))))","(fma.f64 -1 (log.f64 (/.f64 -1 y)) (*.f64 -1 (+.f64 (/.f64 x y) (log.f64 x))))","(-.f64 (-.f64 (/.f64 (neg.f64 x) y) (log.f64 x)) (log.f64 (/.f64 -1 y)))","(-.f64 (neg.f64 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 x) (/.f64 x y)))","(-.f64 (-.f64 (neg.f64 (log.f64 x)) (/.f64 x y)) (log.f64 (/.f64 -1 y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 (/.f64 1 x)) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))))","(fma.f64 -1 (log.f64 (/.f64 -1 y)) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 -1 (+.f64 (/.f64 x y) (log.f64 x)))))","(-.f64 (-.f64 (-.f64 (*.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y))) (/.f64 x y)) (log.f64 x)) (log.f64 (/.f64 -1 y)))","(-.f64 (-.f64 (*.f64 (*.f64 (/.f64 x y) x) (/.f64 -1/2 y)) (/.f64 x y)) (+.f64 (log.f64 x) (log.f64 (/.f64 -1 y))))","(-.f64 (*.f64 (*.f64 (/.f64 x y) x) (/.f64 -1/2 y)) (+.f64 (log.f64 (/.f64 -1 y)) (+.f64 (log.f64 x) (/.f64 x y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (+.f64 (log.f64 (/.f64 1 x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))))))","(+.f64 (fma.f64 -1 (log.f64 (/.f64 -1 y)) (neg.f64 (log.f64 x))) (fma.f64 -1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (neg.f64 (/.f64 x y)))))","(-.f64 (-.f64 (fma.f64 -1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (-.f64 (*.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y))) (/.f64 x y))) (log.f64 x)) (log.f64 (/.f64 -1 y)))","(-.f64 (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (*.f64 -1/3 (pow.f64 (/.f64 x y) 3))) (/.f64 x y)) (+.f64 (log.f64 x) (log.f64 (/.f64 -1 y))))","(-.f64 (fma.f64 (/.f64 -1/2 y) (*.f64 (/.f64 x y) x) (/.f64 -1/3 (pow.f64 (/.f64 y x) 3))) (+.f64 (log.f64 (/.f64 -1 y)) (+.f64 (log.f64 x) (/.f64 x y))))","(+.f64 (log.f64 (*.f64 -1 y)) (*.f64 -1 (log.f64 x)))","(fma.f64 -1 (neg.f64 (log.f64 y)) (log.f64 (/.f64 -1 x)))","(+.f64 (log.f64 y) (log.f64 (/.f64 -1 x)))","(-.f64 (log.f64 (neg.f64 y)) (log.f64 x))","(+.f64 (log.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (/.f64 x y)) (*.f64 -1 (log.f64 x))))","(+.f64 (fma.f64 -1 (neg.f64 (log.f64 y)) (log.f64 (/.f64 -1 x))) (neg.f64 (/.f64 x y)))","(+.f64 (log.f64 y) (-.f64 (log.f64 (/.f64 -1 x)) (/.f64 x y)))","(-.f64 (log.f64 (neg.f64 y)) (+.f64 (log.f64 x) (/.f64 x y)))","(+.f64 (log.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 x y)) (*.f64 -1 (log.f64 x)))))","(fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (fma.f64 -1 (neg.f64 (log.f64 y)) (log.f64 (/.f64 -1 x))) (neg.f64 (/.f64 x y))))","(+.f64 (-.f64 (log.f64 (/.f64 -1 x)) (/.f64 x y)) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 y)))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 (neg.f64 y))) (+.f64 (log.f64 x) (/.f64 x y)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (log.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 x y)) (*.f64 -1 (log.f64 x))))))","(fma.f64 -1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (fma.f64 -1 (neg.f64 (log.f64 y)) (log.f64 (/.f64 -1 x))) (neg.f64 (/.f64 x y)))))","(fma.f64 -1/3 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 (-.f64 (log.f64 (/.f64 -1 x)) (/.f64 x y)) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 y))))","(-.f64 (fma.f64 -1/3 (pow.f64 (/.f64 x y) 3) (fma.f64 -1/2 (*.f64 (/.f64 x y) (/.f64 x y)) (log.f64 (neg.f64 y)))) (+.f64 (log.f64 x) (/.f64 x y)))","(*.f64 -1 (/.f64 y x))","(/.f64 (neg.f64 y) x)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (neg.f64 y) x))","(-.f64 (*.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 y x))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (neg.f64 y) x)))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (-.f64 (*.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 y x)))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 -1/3 (pow.f64 (/.f64 y x) 3))) (/.f64 y x))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1 (/.f64 y x)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (neg.f64 y) x))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (-.f64 (/.f64 (*.f64 -1/4 (pow.f64 y 4)) (pow.f64 x 4)) (/.f64 y x))))","(fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 -1/3 (pow.f64 (/.f64 y x) 3) (-.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (/.f64 y x))))","(-.f64 (fma.f64 -1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 -1/4 (pow.f64 (/.f64 y x) 4)))) (/.f64 y x))","(*.f64 -1 (/.f64 y x))","(/.f64 (neg.f64 y) x)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (neg.f64 y) x))","(-.f64 (*.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 y x))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (/.f64 (neg.f64 y) x)))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (-.f64 (*.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 y x)))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 -1/3 (pow.f64 (/.f64 y x) 3))) (/.f64 y x))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1 (/.f64 y x)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (neg.f64 y) x))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (-.f64 (/.f64 (*.f64 -1/4 (pow.f64 y 4)) (pow.f64 x 4)) (/.f64 y x))))","(fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 -1/3 (pow.f64 (/.f64 y x) 3) (-.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (/.f64 y x))))","(-.f64 (fma.f64 -1/3 (pow.f64 (/.f64 y x) 3) (fma.f64 -1/2 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 -1/4 (pow.f64 (/.f64 y x) 4)))) (/.f64 y x))"]],"stop":[["node limit",1]],"time":43.635009765625,"type":"simplify"},{"compiler":[[1467,833]],"time":19.60205078125,"type":"eval"},{"alts":[["(*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)))","fresh",55.364761361496726],["(*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))))","fresh",52.164551345343945],["(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))))","fresh",25.784559766415814],["(*.f64 x (log1p.f64 (/.f64 y (neg.f64 x))))","done",15.343120206248795],["(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))","next",20.716155540354364]],"compiler":[[10,7],[16,13],[29,18],[9,6],[11,7],[10,7],[16,13],[29,18],[11,7]],"count":[[85,5]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[84,4],"picked":[1,1]}],"min-error":[0.1015625],"time":11.07080078125,"type":"prune"},{"compiler":[[24,8]],"locations":[["(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))",0.00390625,true],["(*.f64 (/.f64 y x) y)",0.10546875,true]],"time":5.01904296875,"type":"localize"},{"count":[[2,48]],"series":[["(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))","x","-inf",0.724853515625],["(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))","x","inf",0.240966796875],["(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))","x","0",0.23388671875],["(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))","y","-inf",0.208984375],["(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))","y","inf",0.31591796875],["(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))","y","0",0.237060546875],["(*.f64 (/.f64 y x) y)","x","-inf",0.31201171875],["(*.f64 (/.f64 y x) y)","x","inf",0.304931640625],["(*.f64 (/.f64 y x) y)","x","0",0.440185546875],["(*.f64 (/.f64 y x) y)","y","-inf",0.172119140625],["(*.f64 (/.f64 y x) y)","y","inf",0.455078125],["(*.f64 (/.f64 y x) y)","y","0",0.487060546875]],"time":4.302001953125,"type":"series"},{"count":[[2,43]],"egraph":[[2,2185,18,0.019673207999999998],[1,169,18,0.0029692919999999997],[0,8,20,0.000230958]],"inputs":[["(*.f64 (/.f64 y x) y)","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 y (/.f64 y x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (/.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 x (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y y) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y y) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y y) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y y) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y y) (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (/.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (/.f64 y x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y (/.f64 y x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (sqrt.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 y (/.f64 y x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 y) (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y (/.f64 y x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 3) (pow.f64 (/.f64 y x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 y x) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 y (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 y (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 y (/.f64 y x))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 y (*.f64 (*.f64 y (/.f64 y x)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y (/.f64 y x)) -1/2) y)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 y (/.f64 y x)) -1/2) 1) y)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (*.f64 y (/.f64 y x)) -1/2) y)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (*.f64 (*.f64 y (/.f64 y x)) -1/2) 0) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y)) (pow.f64 (cbrt.f64 (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y)) 2) (cbrt.f64 (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y)) (sqrt.f64 (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (*.f64 y (/.f64 y x)) -1/2) 3) (pow.f64 y 3)) (+.f64 (*.f64 (*.f64 (*.f64 y (/.f64 y x)) -1/2) (*.f64 (*.f64 y (/.f64 y x)) -1/2)) (-.f64 (*.f64 y y) (*.f64 (*.f64 (*.f64 y (/.f64 y x)) -1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 y (/.f64 y x)) -1/2) (*.f64 (*.f64 y (/.f64 y x)) -1/2)) (*.f64 y y)) (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -1/2 (*.f64 y (/.f64 y x)) y)))))))"]],"rules":[["egg-rr",23],["egg-rr",20]],"stop":[["node limit",1]],"time":40.5810546875,"type":"rewrite"},{"count":[[91,51]],"egraph":[[7,6666,405,0.031105417000000003],[6,3177,405,0.016279542],[5,917,405,0.00650475],[4,234,441,0.002130875],[3,88,441,0.0008320840000000001],[2,43,441,0.00042425000000000004],[1,23,441,0.00022633400000000002],[0,11,441,9.3375e-5]],"inputs":[["(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(/.f64 (pow.f64 y 2) x)","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(*.f64 -1/2 (/.f64 (pow.f64 y 2) x))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(*.f64 -1/2 (/.f64 (pow.f64 y 2) x))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(*.f64 -1/2 (/.f64 (pow.f64 y 2) x))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(/.f64 (pow.f64 y 2) x)","(/.f64 (*.f64 y y) x)","(/.f64 y (/.f64 x y))","(*.f64 (/.f64 y x) y)","(*.f64 y (/.f64 y x))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y (/.f64 x y)) -1/2) y)","(-.f64 (*.f64 (*.f64 (/.f64 y x) y) -1/2) y)","(-.f64 (*.f64 (*.f64 y y) (/.f64 -1/2 x)) y)","(-.f64 (/.f64 (*.f64 y -1/2) (/.f64 x y)) y)","(*.f64 y (fma.f64 -1/2 (/.f64 y x) -1))","(*.f64 y (fma.f64 y (/.f64 -1/2 x) -1))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y (/.f64 x y)) -1/2) y)","(-.f64 (*.f64 (*.f64 (/.f64 y x) y) -1/2) y)","(-.f64 (*.f64 (*.f64 y y) (/.f64 -1/2 x)) y)","(-.f64 (/.f64 (*.f64 y -1/2) (/.f64 x y)) y)","(*.f64 y (fma.f64 -1/2 (/.f64 y x) -1))","(*.f64 y (fma.f64 y (/.f64 -1/2 x) -1))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y (/.f64 x y)) -1/2) y)","(-.f64 (*.f64 (*.f64 (/.f64 y x) y) -1/2) y)","(-.f64 (*.f64 (*.f64 y y) (/.f64 -1/2 x)) y)","(-.f64 (/.f64 (*.f64 y -1/2) (/.f64 x y)) y)","(*.f64 y (fma.f64 -1/2 (/.f64 y x) -1))","(*.f64 y (fma.f64 y (/.f64 -1/2 x) -1))","(*.f64 -1/2 (/.f64 (pow.f64 y 2) x))","(*.f64 (/.f64 (*.f64 y y) x) -1/2)","(*.f64 (/.f64 y (/.f64 x y)) -1/2)","(*.f64 (*.f64 (/.f64 y x) y) -1/2)","(*.f64 (*.f64 y y) (/.f64 -1/2 x))","(/.f64 (*.f64 y -1/2) (/.f64 x y))","(*.f64 y (*.f64 -1/2 (/.f64 y x)))","(*.f64 (*.f64 y (/.f64 y x)) -1/2)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y (/.f64 x y)) -1/2) y)","(-.f64 (*.f64 (*.f64 (/.f64 y x) y) -1/2) y)","(-.f64 (*.f64 (*.f64 y y) (/.f64 -1/2 x)) y)","(-.f64 (/.f64 (*.f64 y -1/2) (/.f64 x y)) y)","(*.f64 y (fma.f64 -1/2 (/.f64 y x) -1))","(*.f64 y (fma.f64 y (/.f64 -1/2 x) -1))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y (/.f64 x y)) -1/2) y)","(-.f64 (*.f64 (*.f64 (/.f64 y x) y) -1/2) y)","(-.f64 (*.f64 (*.f64 y y) (/.f64 -1/2 x)) y)","(-.f64 (/.f64 (*.f64 y -1/2) (/.f64 x y)) y)","(*.f64 y (fma.f64 -1/2 (/.f64 y x) -1))","(*.f64 y (fma.f64 y (/.f64 -1/2 x) -1))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y (/.f64 x y)) -1/2) y)","(-.f64 (*.f64 (*.f64 (/.f64 y x) y) -1/2) y)","(-.f64 (*.f64 (*.f64 y y) (/.f64 -1/2 x)) y)","(-.f64 (/.f64 (*.f64 y -1/2) (/.f64 x y)) y)","(*.f64 y (fma.f64 -1/2 (/.f64 y x) -1))","(*.f64 y (fma.f64 y (/.f64 -1/2 x) -1))","(*.f64 -1/2 (/.f64 (pow.f64 y 2) x))","(*.f64 (/.f64 (*.f64 y y) x) -1/2)","(*.f64 (/.f64 y (/.f64 x y)) -1/2)","(*.f64 (*.f64 (/.f64 y x) y) -1/2)","(*.f64 (*.f64 y y) (/.f64 -1/2 x))","(/.f64 (*.f64 y -1/2) (/.f64 x y))","(*.f64 y (*.f64 -1/2 (/.f64 y x)))","(*.f64 (*.f64 y (/.f64 y x)) -1/2)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y (/.f64 x y)) -1/2) y)","(-.f64 (*.f64 (*.f64 (/.f64 y x) y) -1/2) y)","(-.f64 (*.f64 (*.f64 y y) (/.f64 -1/2 x)) y)","(-.f64 (/.f64 (*.f64 y -1/2) (/.f64 x y)) y)","(*.f64 y (fma.f64 -1/2 (/.f64 y x) -1))","(*.f64 y (fma.f64 y (/.f64 -1/2 x) -1))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y (/.f64 x y)) -1/2) y)","(-.f64 (*.f64 (*.f64 (/.f64 y x) y) -1/2) y)","(-.f64 (*.f64 (*.f64 y y) (/.f64 -1/2 x)) y)","(-.f64 (/.f64 (*.f64 y -1/2) (/.f64 x y)) y)","(*.f64 y (fma.f64 -1/2 (/.f64 y x) -1))","(*.f64 y (fma.f64 y (/.f64 -1/2 x) -1))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y (/.f64 x y)) -1/2) y)","(-.f64 (*.f64 (*.f64 (/.f64 y x) y) -1/2) y)","(-.f64 (*.f64 (*.f64 y y) (/.f64 -1/2 x)) y)","(-.f64 (/.f64 (*.f64 y -1/2) (/.f64 x y)) y)","(*.f64 y (fma.f64 -1/2 (/.f64 y x) -1))","(*.f64 y (fma.f64 y (/.f64 -1/2 x) -1))","(*.f64 -1/2 (/.f64 (pow.f64 y 2) x))","(*.f64 (/.f64 (*.f64 y y) x) -1/2)","(*.f64 (/.f64 y (/.f64 x y)) -1/2)","(*.f64 (*.f64 (/.f64 y x) y) -1/2)","(*.f64 (*.f64 y y) (/.f64 -1/2 x))","(/.f64 (*.f64 y -1/2) (/.f64 x y))","(*.f64 y (*.f64 -1/2 (/.f64 y x)))","(*.f64 (*.f64 y (/.f64 y x)) -1/2)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y (/.f64 x y)) -1/2) y)","(-.f64 (*.f64 (*.f64 (/.f64 y x) y) -1/2) y)","(-.f64 (*.f64 (*.f64 y y) (/.f64 -1/2 x)) y)","(-.f64 (/.f64 (*.f64 y -1/2) (/.f64 x y)) y)","(*.f64 y (fma.f64 -1/2 (/.f64 y x) -1))","(*.f64 y (fma.f64 y (/.f64 -1/2 x) -1))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y (/.f64 x y)) -1/2) y)","(-.f64 (*.f64 (*.f64 (/.f64 y x) y) -1/2) y)","(-.f64 (*.f64 (*.f64 y y) (/.f64 -1/2 x)) y)","(-.f64 (/.f64 (*.f64 y -1/2) (/.f64 x y)) y)","(*.f64 y (fma.f64 -1/2 (/.f64 y x) -1))","(*.f64 y (fma.f64 y (/.f64 -1/2 x) -1))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y (/.f64 x y)) -1/2) y)","(-.f64 (*.f64 (*.f64 (/.f64 y x) y) -1/2) y)","(-.f64 (*.f64 (*.f64 y y) (/.f64 -1/2 x)) y)","(-.f64 (/.f64 (*.f64 y -1/2) (/.f64 x y)) y)","(*.f64 y (fma.f64 -1/2 (/.f64 y x) -1))","(*.f64 y (fma.f64 y (/.f64 -1/2 x) -1))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y (/.f64 x y)) -1/2) y)","(-.f64 (*.f64 (*.f64 (/.f64 y x) y) -1/2) y)","(-.f64 (*.f64 (*.f64 y y) (/.f64 -1/2 x)) y)","(-.f64 (/.f64 (*.f64 y -1/2) (/.f64 x y)) y)","(*.f64 y (fma.f64 -1/2 (/.f64 y x) -1))","(*.f64 y (fma.f64 y (/.f64 -1/2 x) -1))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y (/.f64 x y)) -1/2) y)","(-.f64 (*.f64 (*.f64 (/.f64 y x) y) -1/2) y)","(-.f64 (*.f64 (*.f64 y y) (/.f64 -1/2 x)) y)","(-.f64 (/.f64 (*.f64 y -1/2) (/.f64 x y)) y)","(*.f64 y (fma.f64 -1/2 (/.f64 y x) -1))","(*.f64 y (fma.f64 y (/.f64 -1/2 x) -1))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y (/.f64 x y)) -1/2) y)","(-.f64 (*.f64 (*.f64 (/.f64 y x) y) -1/2) y)","(-.f64 (*.f64 (*.f64 y y) (/.f64 -1/2 x)) y)","(-.f64 (/.f64 (*.f64 y -1/2) (/.f64 x y)) y)","(*.f64 y (fma.f64 -1/2 (/.f64 y x) -1))","(*.f64 y (fma.f64 y (/.f64 -1/2 x) -1))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y (/.f64 x y)) -1/2) y)","(-.f64 (*.f64 (*.f64 (/.f64 y x) y) -1/2) y)","(-.f64 (*.f64 (*.f64 y y) (/.f64 -1/2 x)) y)","(-.f64 (/.f64 (*.f64 y -1/2) (/.f64 x y)) y)","(*.f64 y (fma.f64 -1/2 (/.f64 y x) -1))","(*.f64 y (fma.f64 y (/.f64 -1/2 x) -1))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y (/.f64 x y)) -1/2) y)","(-.f64 (*.f64 (*.f64 (/.f64 y x) y) -1/2) y)","(-.f64 (*.f64 (*.f64 y y) (/.f64 -1/2 x)) y)","(-.f64 (/.f64 (*.f64 y -1/2) (/.f64 x y)) y)","(*.f64 y (fma.f64 -1/2 (/.f64 y x) -1))","(*.f64 y (fma.f64 y (/.f64 -1/2 x) -1))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y (/.f64 x y)) -1/2) y)","(-.f64 (*.f64 (*.f64 (/.f64 y x) y) -1/2) y)","(-.f64 (*.f64 (*.f64 y y) (/.f64 -1/2 x)) y)","(-.f64 (/.f64 (*.f64 y -1/2) (/.f64 x y)) y)","(*.f64 y (fma.f64 -1/2 (/.f64 y x) -1))","(*.f64 y (fma.f64 y (/.f64 -1/2 x) -1))"]],"stop":[["node limit",1]],"time":49.761962890625,"type":"simplify"},{"compiler":[[610,268]],"time":6.998046875,"type":"eval"},{"alts":[["(*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)))","fresh",55.364761361496726],["(*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))))","fresh",52.164551345343945],["(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))))","next",25.784559766415814],["(*.f64 x (log1p.f64 (/.f64 y (neg.f64 x))))","done",15.343120206248795],["(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))","done",20.716155540354364]],"compiler":[[10,7],[16,13],[29,18],[9,6],[11,7],[10,7],[16,13],[29,18]],"count":[[56,5]],"kept":[{"done":[1,1],"fresh":[3,3],"new":[51,0],"picked":[1,1]}],"min-error":[0.1015625],"time":8.318115234375,"type":"prune"},{"compiler":[[95,44]],"locations":[["(*.f64 (pow.f64 (/.f64 y x) 3) y)",2.4733880700527284,true],["(/.f64 (pow.f64 y 3) x)",5.989568896161415,true],["(fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y)))",12.328492538825222,true],["(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))))",13.230417145755155,true]],"time":21.135986328125,"type":"localize"},{"count":[[4,72]],"series":[["(*.f64 (pow.f64 (/.f64 y x) 3) y)","x","-inf",0.28515625],["(*.f64 (pow.f64 (/.f64 y x) 3) y)","x","inf",0.244140625],["(*.f64 (pow.f64 (/.f64 y x) 3) y)","x","0",0.60791015625],["(*.f64 (pow.f64 (/.f64 y x) 3) y)","y","-inf",0.15087890625],["(*.f64 (pow.f64 (/.f64 y x) 3) y)","y","inf",0.43701171875],["(*.f64 (pow.f64 (/.f64 y x) 3) y)","y","0",0.70703125],["(/.f64 (pow.f64 y 3) x)","x","-inf",0.248046875],["(/.f64 (pow.f64 y 3) x)","x","inf",0.262939453125],["(/.f64 (pow.f64 y 3) x)","x","0",0.411865234375],["(/.f64 (pow.f64 y 3) x)","y","-inf",0.251953125],["(/.f64 (pow.f64 y 3) x)","y","inf",0.2919921875],["(/.f64 (pow.f64 y 3) x)","y","0",0.36083984375],["(fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y)))","y","-inf",0.22900390625],["(fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y)))","y","inf",0.238037109375],["(fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y)))","y","0",0.23681640625],["(fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y)))","x","-inf",0.22412109375],["(fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y)))","x","inf",0.239990234375],["(fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y)))","x","0",0.2900390625],["(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))))","x","-inf",0.400146484375],["(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))))","x","inf",0.27587890625],["(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))))","x","0",0.346923828125],["(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))))","y","-inf",0.320068359375],["(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))))","y","inf",0.4111328125],["(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))))","y","0",0.381103515625]],"time":8.199951171875,"type":"series"},{"count":[[4,122]],"egraph":[[2,4860,78,0.034582958999999996],[1,398,78,0.007124542],[0,18,82,0.0005935]],"inputs":[["(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))))","(fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y)))","(/.f64 (pow.f64 y 3) x)","(*.f64 (pow.f64 (/.f64 y x) 3) y)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)) (*.f64 (*.f64 -1/4 y) (pow.f64 (/.f64 y x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/4 y) (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 -1/4 y) (pow.f64 (/.f64 y x) 3)) 1) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/4 y) (pow.f64 (/.f64 y x) 3) (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x -3) x))) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))) (cbrt.f64 (exp.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))) (pow.f64 (cbrt.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))) 2) (cbrt.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))) (sqrt.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (*.f64 -1/4 y) (pow.f64 (/.f64 y x) 3)) 3) (pow.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)) 3)) (fma.f64 (*.f64 (*.f64 -1/4 y) (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 -1/4 y) (pow.f64 (/.f64 y x) 3)) (-.f64 (pow.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)) 2) (*.f64 (*.f64 (*.f64 -1/4 y) (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 (*.f64 -1/4 y) (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 -1/4 y) (pow.f64 (/.f64 y x) 3))) (pow.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)) 2)) (-.f64 (*.f64 (*.f64 -1/4 y) (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))) (exp.f64 (*.f64 (*.f64 -1/4 y) (pow.f64 (/.f64 y x) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))) (exp.f64 (*.f64 (*.f64 -1/4 y) (pow.f64 (/.f64 y x) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (*.f64 -1/4 y) (pow.f64 (/.f64 y x) 3))) (+.f64 1 (expm1.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y) (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x -3) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x -3) x)) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x -3) x)) 1) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (*.f64 -1/2 (/.f64 (*.f64 y y) x))) y)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))) (cbrt.f64 (exp.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))) 2) (cbrt.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))) (sqrt.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x -3) x)) 3) (pow.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y) 3)) (fma.f64 (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x -3) x)) (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x -3) x)) (-.f64 (pow.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y) 2) (*.f64 (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x -3) x)) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x -3) x)) (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x -3) x))) (pow.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y) 2)) (-.f64 (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x -3) x)) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)) (exp.f64 (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x -3) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))) (exp.f64 (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x -3) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (pow.f64 y 3) (*.f64 (*.f64 x -3) x))) (+.f64 1 (expm1.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) y))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (pow.f64 y 3) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 y 3) x))) (cbrt.f64 (exp.f64 (/.f64 (pow.f64 y 3) x))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 y 3) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 y 3) x)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 y 3) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (pow.f64 y 3) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 (*.f64 y y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 3) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 3) (/.f64 1 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 y 3) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 y 3) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y y) (/.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 x)) (pow.f64 (/.f64 y (cbrt.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y (cbrt.f64 x)) 2) (/.f64 y (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 y 3/2) (sqrt.f64 x)) (/.f64 (pow.f64 y 3/2) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (sqrt.f64 x)) (/.f64 (*.f64 y y) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (pow.f64 y 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 3/2) (*.f64 (pow.f64 y 3/2) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y 1) (/.f64 (*.f64 y y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (pow.f64 (cbrt.f64 x) 2)) (/.f64 (*.f64 y y) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 (pow.f64 y 3) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 (pow.f64 y 3) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y y) 1) (/.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 y 3/2) 1) (/.f64 (pow.f64 y 3/2) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y y) (pow.f64 (cbrt.f64 x) 2)) (/.f64 y (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 y 3/2) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (pow.f64 y 3/2) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 y y) (sqrt.f64 x)) (/.f64 y (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 y 3) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 y 3) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (cbrt.f64 x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 y 3/2) (sqrt.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (pow.f64 y 3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 y 3) x))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 y 6) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (pow.f64 y 3) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (pow.f64 y 3) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (exp.f64 (/.f64 (pow.f64 y 3) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (/.f64 (pow.f64 y 3) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 y 3) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (pow.f64 y 3) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (pow.f64 y 3) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (pow.f64 y 3) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (pow.f64 y 3) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (pow.f64 y 3) x)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 y (pow.f64 (/.f64 y x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 y) (pow.f64 (/.f64 y x) 3))) (cbrt.f64 (pow.f64 (exp.f64 y) (pow.f64 (/.f64 y x) 3))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 y) (pow.f64 (/.f64 y x) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 y) (pow.f64 (/.f64 y x) 3)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 y) (pow.f64 (/.f64 y x) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 y (pow.f64 (/.f64 y x) 3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 y 3) y) (pow.f64 x 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (pow.f64 y 3)) (pow.f64 x 3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (pow.f64 (/.f64 y x) 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y (pow.f64 (/.f64 y x) 3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 y x) (cbrt.f64 y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 y) (pow.f64 (/.f64 y x) 3/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (*.f64 y y) (pow.f64 (/.f64 y x) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 y) (pow.f64 (/.f64 y x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 y (pow.f64 (/.f64 y x) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y (pow.f64 (/.f64 y x) 3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 3) (pow.f64 (pow.f64 (/.f64 y x) 3) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 (/.f64 y x) 3) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 y (pow.f64 (/.f64 y x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 y (pow.f64 (/.f64 y x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 y (pow.f64 (/.f64 y x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 y (pow.f64 (/.f64 y x) 3))) 1))))))"]],"rules":[["egg-rr",20],["egg-rr",42],["egg-rr",30],["egg-rr",30]],"stop":[["node limit",1]],"time":65.887939453125,"type":"rewrite"},{"count":[[194,143]],"egraph":[[4,4646,1185,0.017997166000000002],[3,756,1185,0.007595374],[2,232,1293,0.002002957],[1,98,1293,0.000799582],[0,34,1293,0.000256541]],"inputs":[["(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(/.f64 (pow.f64 y 4) (pow.f64 x 3))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 -1/2 (/.f64 y (/.f64 x y))) y)","(-.f64 (*.f64 -1/2 (*.f64 (/.f64 y x) y)) y)","(fma.f64 (/.f64 -1/2 x) (*.f64 y y) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y x) (*.f64 y -1/2)) y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(-.f64 (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))) y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (neg.f64 y))))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (-.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) y)))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))) y)","(-.f64 (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))) y)","(-.f64 (fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))) y)","(*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))","(/.f64 -1/4 (/.f64 (pow.f64 x 3) (pow.f64 y 4)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 -1/4 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (/.f64 y (/.f64 x y)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (neg.f64 y))))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (-.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) y)))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))) y)","(-.f64 (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))) y)","(-.f64 (fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))) y)","(*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))","(/.f64 -1/4 (/.f64 (pow.f64 x 3) (pow.f64 y 4)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 -1/4 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (/.f64 y (/.f64 x y)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (neg.f64 y))))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (-.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) y)))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))) y)","(-.f64 (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))) y)","(-.f64 (fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))) y)","(*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))","(/.f64 -1/4 (/.f64 (pow.f64 x 3) (pow.f64 y 4)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 -1/4 (/.f64 (pow.f64 x 3) (pow.f64 y 4))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (/.f64 y (/.f64 x y)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (neg.f64 y))))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (-.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) y)))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))) y)","(-.f64 (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))) y)","(-.f64 (fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))) y)","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 -1/2 (/.f64 y (/.f64 x y))) y)","(-.f64 (*.f64 -1/2 (*.f64 (/.f64 y x) y)) y)","(fma.f64 (/.f64 -1/2 x) (*.f64 y y) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y x) (*.f64 y -1/2)) y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(-.f64 (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))) y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (neg.f64 y))))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (-.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) y)))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))) y)","(-.f64 (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))) y)","(-.f64 (fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))) y)","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 -1/2 (/.f64 y (/.f64 x y))) y)","(-.f64 (*.f64 -1/2 (*.f64 (/.f64 y x) y)) y)","(fma.f64 (/.f64 -1/2 x) (*.f64 y y) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y x) (*.f64 y -1/2)) y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(-.f64 (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))) y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1 y))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (neg.f64 y))))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (-.f64 (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) y)))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))) y)","(-.f64 (fma.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))) y)","(-.f64 (fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))) y)","(*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2)))","(*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(-.f64 (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))) y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(-.f64 (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))) y)","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 -1/2 (/.f64 y (/.f64 x y))) y)","(-.f64 (*.f64 -1/2 (*.f64 (/.f64 y x) y)) y)","(fma.f64 (/.f64 -1/2 x) (*.f64 y y) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y x) (*.f64 y -1/2)) y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(-.f64 (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))) y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(-.f64 (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))) y)","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 -1/2 (/.f64 y (/.f64 x y))) y)","(-.f64 (*.f64 -1/2 (*.f64 (/.f64 y x) y)) y)","(fma.f64 (/.f64 -1/2 x) (*.f64 y y) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y x) (*.f64 y -1/2)) y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(-.f64 (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))) y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(-.f64 (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))) y)","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (neg.f64 y))","(-.f64 (*.f64 -1/2 (/.f64 y (/.f64 x y))) y)","(-.f64 (*.f64 -1/2 (*.f64 (/.f64 y x) y)) y)","(fma.f64 (/.f64 -1/2 x) (*.f64 y y) (neg.f64 y))","(-.f64 (*.f64 (/.f64 y x) (*.f64 y -1/2)) y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(-.f64 (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))) y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(-.f64 (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))) y)","(*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2)))","(*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(-.f64 (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))) y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(-.f64 (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))) y)","(*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2)))","(*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(-.f64 (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))) y)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(fma.f64 -1/2 (/.f64 y (/.f64 x y)) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (-.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))) y))","(-.f64 (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)","(/.f64 (pow.f64 y 4) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) y)"]],"stop":[["node limit",1]],"time":43.325927734375,"type":"simplify"},{"compiler":[[4559,2466]],"time":45.72705078125,"type":"eval"},{"alts":[["(*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)))","fresh",55.364761361496726],["(*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))))","fresh",52.164551345343945],["(*.f64 x (log1p.f64 (/.f64 y (neg.f64 x))))","done",15.343120206248795],["(-.f64 (fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))) y)","next",20.28774599154811]],"compiler":[[10,7],[16,13],[9,6],[26,15],[10,7],[16,13],[26,15]],"count":[[148,4]],"kept":[{"done":[2,1],"fresh":[2,2],"new":[143,1],"picked":[1,0]}],"min-error":[0.09765625],"time":19.676025390625,"type":"prune"},{"compiler":[[99,45]],"locations":[["(pow.f64 (/.f64 y x) 3)",0.20578007814753613,true],["(*.f64 -1/3 (/.f64 y x))",0.30078125,true],["(*.f64 (pow.f64 (/.f64 y x) 3) y)",2.4733880700527284,false],["(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))",13.230417145755155,true]],"time":17.197021484375,"type":"localize"},{"count":[[3,48]],"series":[["(pow.f64 (/.f64 y x) 3)","x","-inf",0.52001953125],["(pow.f64 (/.f64 y x) 3)","x","inf",0.2958984375],["(pow.f64 (/.f64 y x) 3)","x","0",0.31689453125],["(pow.f64 (/.f64 y x) 3)","y","-inf",0.507080078125],["(pow.f64 (/.f64 y x) 3)","y","inf",0.39990234375],["(pow.f64 (/.f64 y x) 3)","y","0",0.411865234375],["(*.f64 -1/3 (/.f64 y x))","x","-inf",0.235107421875],["(*.f64 -1/3 (/.f64 y x))","x","inf",0.303955078125],["(*.f64 -1/3 (/.f64 y x))","x","0",0.343017578125],["(*.f64 -1/3 (/.f64 y x))","y","-inf",1.484130859375],["(*.f64 -1/3 (/.f64 y x))","y","inf",0.372802734375],["(*.f64 -1/3 (/.f64 y x))","y","0",0.3310546875],["(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","x","-inf",0.409912109375],["(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","x","inf",0.3388671875],["(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","x","0",0.333984375],["(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","y","-inf",0.298095703125],["(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","y","inf",0.43115234375],["(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","y","0",0.60302734375]],"time":8.1689453125,"type":"series"},{"count":[[3,94]],"egraph":[[2,4454,44,0.034011542],[1,341,44,0.006472292],[0,15,46,0.000523875]],"inputs":[["(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","(*.f64 -1/3 (/.f64 y x))","(pow.f64 (/.f64 y x) 3)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)) (*.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3))) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3))) 1) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 -1/4 y) (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (*.f64 y -1/2))) (*.f64 (*.f64 y (/.f64 y x)) (*.f64 (/.f64 y x) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2))))) (cbrt.f64 (exp.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2))))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))) (pow.f64 (cbrt.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))) 2) (cbrt.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))) (sqrt.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3))) 3) (pow.f64 (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)) 3)) (fma.f64 (*.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3))) (*.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3))) (-.f64 (pow.f64 (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)) 2) (*.f64 (*.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3))) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3))) (*.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)))) (pow.f64 (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)) 2)) (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (neg.f64 (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 y) (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)) (exp.f64 (*.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))) (exp.f64 (*.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)))) (+.f64 1 (expm1.f64 (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (fma.f64 (/.f64 y x) -1/3 -1/2)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 y x) -1/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 -1/3) (/.f64 y x))) (cbrt.f64 (pow.f64 (exp.f64 -1/3) (/.f64 y x))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 -1/3) (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/3) (/.f64 y x)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -1/3) (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 y x) -1/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1/3 (/.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 x (*.f64 y -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y -1/3) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y -1/3)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y -1/3) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y -1/3) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y -1/3) (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) -1/3) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/3 (neg.f64 y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 y x) -1/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 y x) -1/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 y x) -1/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (/.f64 y x) 3) -1/27) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 1/9 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 -1/3) (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 y x) -1/3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 y x) 3) -1/27))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 y x) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 y x) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 y x) -1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 y x) -1/3)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (/.f64 y x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (/.f64 y x) 3))) (cbrt.f64 (exp.f64 (pow.f64 (/.f64 y x) 3))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (/.f64 y x) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (/.f64 y x) 3)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (/.f64 y x) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (/.f64 y x) 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 (/.f64 1 x) (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y x) (pow.f64 (/.f64 y x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y x) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 y x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y x) 2) (/.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (*.f64 (cbrt.f64 (/.f64 y x)) (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 y x)) (*.f64 (sqrt.f64 (/.f64 y x)) (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 3) (pow.f64 (/.f64 1 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y 3) (/.f64 1 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y x) 3/2) (pow.f64 (/.f64 y x) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) 3) (/.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 y x)) 3) (pow.f64 (sqrt.f64 (/.f64 y x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 y x) 2) y) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 y x) 2) 1) (/.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 y x) 2) (pow.f64 (cbrt.f64 (/.f64 y x)) 2)) (cbrt.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 y x) 2) (sqrt.f64 (/.f64 y x))) (sqrt.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (pow.f64 (/.f64 x y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 y x) 2) (/.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 y 3) (pow.f64 x 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (neg.f64 y) 3) (pow.f64 (neg.f64 x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 y 3)) (neg.f64 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (pow.f64 (/.f64 y x) 2)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (pow.f64 (/.f64 y x) 2)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 y x) 2) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 y x) 2) 1) (/.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (/.f64 y x) 2) (neg.f64 y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 y x) 6))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (/.f64 y x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (/.f64 y x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (/.f64 y x) 3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (/.f64 y x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (/.f64 y x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 3 (log.f64 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 y x))) 1))))))"]],"rules":[["egg-rr",39],["egg-rr",25],["egg-rr",30]],"stop":[["node limit",1]],"time":60.078125,"type":"rewrite"},{"count":[[142,105]],"egraph":[[5,7012,690,0.027959584],[4,4709,690,0.015766626],[3,726,756,0.0069701680000000005],[2,186,888,0.001561584],[1,65,888,0.0005811670000000001],[0,25,888,0.000191417]],"inputs":[["(*.f64 -1/2 (/.f64 (pow.f64 y 2) x))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(*.f64 -1/2 (/.f64 (pow.f64 y 2) x))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(*.f64 -1/2 (/.f64 (pow.f64 y 2) x))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1/2 (/.f64 (pow.f64 y 2) x))","(*.f64 -1/2 (/.f64 (*.f64 y y) x))","(*.f64 -1/2 (*.f64 (/.f64 y x) y))","(*.f64 (/.f64 y x) (*.f64 -1/2 y))","(*.f64 -1/2 (*.f64 y (/.f64 y x)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/2 (/.f64 (*.f64 y y) x)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))","(*.f64 (*.f64 y (/.f64 y x)) (fma.f64 -1/3 (/.f64 y x) -1/2))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","(*.f64 (*.f64 y (/.f64 y x)) (+.f64 (*.f64 (/.f64 y x) (+.f64 -1/3 (*.f64 -1/4 (/.f64 y x)))) -1/2))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","(*.f64 (*.f64 y (/.f64 y x)) (+.f64 (*.f64 (/.f64 y x) (+.f64 -1/3 (*.f64 -1/4 (/.f64 y x)))) -1/2))","(*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))","(*.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(*.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (+.f64 -1/3 (*.f64 -1/4 (/.f64 y x))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","(*.f64 (*.f64 y (/.f64 y x)) (+.f64 (*.f64 (/.f64 y x) (+.f64 -1/3 (*.f64 -1/4 (/.f64 y x)))) -1/2))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","(*.f64 (*.f64 y (/.f64 y x)) (+.f64 (*.f64 (/.f64 y x) (+.f64 -1/3 (*.f64 -1/4 (/.f64 y x)))) -1/2))","(*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))","(*.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(*.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (+.f64 -1/3 (*.f64 -1/4 (/.f64 y x))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","(*.f64 (*.f64 y (/.f64 y x)) (+.f64 (*.f64 (/.f64 y x) (+.f64 -1/3 (*.f64 -1/4 (/.f64 y x)))) -1/2))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","(*.f64 (*.f64 y (/.f64 y x)) (+.f64 (*.f64 (/.f64 y x) (+.f64 -1/3 (*.f64 -1/4 (/.f64 y x)))) -1/2))","(*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))","(*.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3))))","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(*.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (+.f64 -1/3 (*.f64 -1/4 (/.f64 y x))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","(*.f64 (*.f64 y (/.f64 y x)) (+.f64 (*.f64 (/.f64 y x) (+.f64 -1/3 (*.f64 -1/4 (/.f64 y x)))) -1/2))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","(*.f64 (*.f64 y (/.f64 y x)) (+.f64 (*.f64 (/.f64 y x) (+.f64 -1/3 (*.f64 -1/4 (/.f64 y x)))) -1/2))","(*.f64 -1/2 (/.f64 (pow.f64 y 2) x))","(*.f64 -1/2 (/.f64 (*.f64 y y) x))","(*.f64 -1/2 (*.f64 (/.f64 y x) y))","(*.f64 (/.f64 y x) (*.f64 -1/2 y))","(*.f64 -1/2 (*.f64 y (/.f64 y x)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/2 (/.f64 (*.f64 y y) x)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))","(*.f64 (*.f64 y (/.f64 y x)) (fma.f64 -1/3 (/.f64 y x) -1/2))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","(*.f64 (*.f64 y (/.f64 y x)) (+.f64 (*.f64 (/.f64 y x) (+.f64 -1/3 (*.f64 -1/4 (/.f64 y x)))) -1/2))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","(*.f64 (*.f64 y (/.f64 y x)) (+.f64 (*.f64 (/.f64 y x) (+.f64 -1/3 (*.f64 -1/4 (/.f64 y x)))) -1/2))","(*.f64 -1/2 (/.f64 (pow.f64 y 2) x))","(*.f64 -1/2 (/.f64 (*.f64 y y) x))","(*.f64 -1/2 (*.f64 (/.f64 y x) y))","(*.f64 (/.f64 y x) (*.f64 -1/2 y))","(*.f64 -1/2 (*.f64 y (/.f64 y x)))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (*.f64 -1/2 (/.f64 (*.f64 y y) x)))","(fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x))))","(*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))","(*.f64 (*.f64 y (/.f64 y x)) (fma.f64 -1/3 (/.f64 y x) -1/2))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","(*.f64 (*.f64 y (/.f64 y x)) (+.f64 (*.f64 (/.f64 y x) (+.f64 -1/3 (*.f64 -1/4 (/.f64 y x)))) -1/2))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) x)) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (/.f64 (*.f64 y y) x) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/3 (/.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (*.f64 -1/4 (/.f64 (pow.f64 y 4) (pow.f64 x 3)))))","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x)))))","(*.f64 (*.f64 y (/.f64 y x)) (+.f64 (*.f64 (/.f64 y x) (+.f64 -1/3 (*.f64 -1/4 (/.f64 y x)))) -1/2))","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)","(/.f64 (pow.f64 y 3) (pow.f64 x 3))","(pow.f64 (/.f64 y x) 3)"]],"stop":[["node limit",1]],"time":49.5068359375,"type":"simplify"},{"compiler":[[3656,1855]],"time":33.89697265625,"type":"eval"},{"alts":[["(*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)))","fresh",55.364761361496726],["(*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))))","fresh",52.164551345343945],["(*.f64 x (log1p.f64 (/.f64 y (neg.f64 x))))","done",15.343120206248795],["(-.f64 (fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))) y)","done",20.28774599154811]],"compiler":[[10,7],[16,13],[9,6],[26,15]],"count":[[131,4]],"kept":[{"done":[1,1],"fresh":[2,2],"new":[127,0],"picked":[1,1]}],"min-error":[0.09765625],"time":27.9990234375,"type":"prune"},{"accuracy":[0.6536941917308755],"baseline":[15.343120206248795],"branch":[["x",6.15588374930594,5],["y",5.074124519575215,4],["(*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x))))",0.6536941917308755,4]],"compiler":[[3,2],[3,2],[12,9],[101,57]],"count":[[7,4]],"inputs":[["(-.f64 (fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))) y)","(*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)))","(*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))))","(fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (fma.f64 (/.f64 -1/3 x) (/.f64 (pow.f64 y 3) x) (fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))))","(fma.f64 -1/2 (*.f64 (/.f64 y x) y) (neg.f64 y))","(*.f64 x (log1p.f64 (/.f64 y (neg.f64 x))))","(*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x))))"]],"link":["."],"name":["Data.HyperLogLog.Type:size from hyperloglog-0.3.4, A"],"oracle":[64.0],"outputs":[["(*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x)))))","(*.f64 x (log1p.f64 (/.f64 y (neg.f64 x))))","(-.f64 (fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))) y)","(*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x)))"]],"time":46.862060546875,"times":[["x",21.90185546875],["y",14.179931640625],["(*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x))))",8.887939453125]],"type":"regimes"},{"bstep":[[1.2536871204372171e-290,2.9202899423875612e-261,0.031005859375],[-2.5349617211351917e-289,0.0,0.08203125],[{"type":"real","value":"-inf"},-3.545048353122891e+207,0.029052734375]],"compiler":[[5,4],[12,9]],"method":["left-value","left-value","left-value"],"time":0.258056640625,"type":"bsearch"},{"compiler":[[85,53]],"egraph":[[4,108,127,0.000624459],[3,105,127,0.000474334],[2,97,127,0.00034929199999999996],[1,78,127,0.000218834],[0,49,129,0.000107]],"inputs":[["(if (<=.f64 (*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x)))) -inf.0) (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) (if (<=.f64 (*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x)))) -4388899255034951/21944496275174754733023745004748837080297570543729328280448007953824789527038691788660702798145451174453138901351488446979832735450978591612896414872982681198457994802840025058142360791167736098566050165049439180766375815715632675961171034001565824849041810386302038359368560295224574744242597208206082048) (*.f64 x (log1p.f64 (/.f64 y (neg.f64 x)))) (if (<=.f64 (*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x)))) 3511119404027961/175555970201398037864189960037990696642380564349834626243584063630598316216309534309285622385163609395625111210811907575838661883607828732903171318983861449587663958422720200465138886329341888788528401320395513446131006525725061407689368272012526598792334483090416306874948482361796597953940777665648656384) (-.f64 (fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))) y) (*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x)))) -inf.0) (*.f64 x (+.f64 (*.f64 -1 (log.f64 (/.f64 1 y))) (log.f64 (neg.f64 (/.f64 1 x))))) (if (<=.f64 (*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x)))) -4388899255034951/21944496275174754733023745004748837080297570543729328280448007953824789527038691788660702798145451174453138901351488446979832735450978591612896414872982681198457994802840025058142360791167736098566050165049439180766375815715632675961171034001565824849041810386302038359368560295224574744242597208206082048) (*.f64 x (log1p.f64 (/.f64 y (neg.f64 x)))) (if (<=.f64 (*.f64 (*.f64 x 1) (log.f64 (-.f64 1 (/.f64 y x)))) 3511119404027961/175555970201398037864189960037990696642380564349834626243584063630598316216309534309285622385163609395625111210811907575838661883607828732903171318983861449587663958422720200465138886329341888788528401320395513446131006525725061407689368272012526598792334483090416306874948482361796597953940777665648656384) (-.f64 (fma.f64 -1/4 (*.f64 (pow.f64 (/.f64 y x) 3) y) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 -1/3 (/.f64 y x))))) y) (*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x))))))","(if (<=.f64 (*.f64 x (log.f64 (-.f64 1 (/.f64 y x)))) -inf.0) (*.f64 x (+.f64 (neg.f64 (log.f64 (/.f64 1 y))) (log.f64 (/.f64 -1 x)))) (if (<=.f64 (*.f64 x (log.f64 (-.f64 1 (/.f64 y x)))) -4388899255034951/21944496275174754733023745004748837080297570543729328280448007953824789527038691788660702798145451174453138901351488446979832735450978591612896414872982681198457994802840025058142360791167736098566050165049439180766375815715632675961171034001565824849041810386302038359368560295224574744242597208206082048) (*.f64 x (log1p.f64 (/.f64 y (neg.f64 x)))) (if (<=.f64 (*.f64 x (log.f64 (-.f64 1 (/.f64 y x)))) 3511119404027961/175555970201398037864189960037990696642380564349834626243584063630598316216309534309285622385163609395625111210811907575838661883607828732903171318983861449587663958422720200465138886329341888788528401320395513446131006525725061407689368272012526598792334483090416306874948482361796597953940777665648656384) (-.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 (/.f64 y x) -1/3)))) y) (*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x))))))","(if (<=.f64 (*.f64 x (log.f64 (-.f64 1 (/.f64 y x)))) -inf.0) (*.f64 x (-.f64 (log.f64 (/.f64 -1 x)) (log.f64 (/.f64 1 y)))) (if (<=.f64 (*.f64 x (log.f64 (-.f64 1 (/.f64 y x)))) -4388899255034951/21944496275174754733023745004748837080297570543729328280448007953824789527038691788660702798145451174453138901351488446979832735450978591612896414872982681198457994802840025058142360791167736098566050165049439180766375815715632675961171034001565824849041810386302038359368560295224574744242597208206082048) (*.f64 x (log1p.f64 (/.f64 y (neg.f64 x)))) (if (<=.f64 (*.f64 x (log.f64 (-.f64 1 (/.f64 y x)))) 3511119404027961/175555970201398037864189960037990696642380564349834626243584063630598316216309534309285622385163609395625111210811907575838661883607828732903171318983861449587663958422720200465138886329341888788528401320395513446131006525725061407689368272012526598792334483090416306874948482361796597953940777665648656384) (-.f64 (fma.f64 -1/4 (*.f64 y (pow.f64 (/.f64 y x) 3)) (*.f64 (*.f64 y (/.f64 y x)) (+.f64 -1/2 (*.f64 (/.f64 y x) -1/3)))) y) (*.f64 x (-.f64 (log.f64 (neg.f64 y)) (log.f64 x))))))"]],"stop":[["fuel",1],["saturated",1]],"time":11.493896484375,"type":"simplify"},{"time":0.031005859375,"type":"soundness"},{"compiler":[[85,53]],"remove-preprocessing":[[]],"time":23.906982421875,"type":"end"}]