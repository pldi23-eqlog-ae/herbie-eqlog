[{"compiler":[[11,7]],"method":["search"],"sampling":[[12,0.6868287771940231,0.02682924910914153,0.28634197369683534],[11,0.6868287771940231,0.04585362575016916,0.2673175970558077],[10,0.6868287771940231,0.05268288915976882,0.26048833364620805],[9,0.6868287771940231,0.08975603338330984,0.22341518942266703],[8,0.6868287771940231,0.10146334208548069,0.21170788072049618],[7,0.6868287771940231,0.17170719429850578,0.14146402850747108],[6,0.6868287771940231,0.18731693923473358,0.1258542835712433],[5,0.6868287771940231,0.31219489872455597,0.0009763240814208984],[4,0.6243897974491119,0.37463387846946716,0.0009763240814208984],[3,0.24975591897964478,0.7492677569389343,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":9.197021484375,"type":"analyze"},{"outcomes":[["body",256,"invalid",6.651611328125,186],["body",256,"valid",309.641357421875,8256]],"time":323.6669921875,"type":"sample"},{"compiler":[[10,6]],"egraph":[[0,2,2,1.166e-6],[1,10,26,8.2874e-5],[0,9,26,4.6833e-5]],"inputs":[["0","1"],["(/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))","(/.f64 (exp.f64 b) (+.f64 (exp.f64 b) (exp.f64 a)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))","(/.f64 (exp.f64 b) (+.f64 (exp.f64 b) (exp.f64 a)))","(/.f64 (exp.f64 b) (+.f64 (exp.f64 a) (exp.f64 b)))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":22.56396484375,"type":"preprocess"},{"count":[[1,1]],"egraph":[[1,8,13,7.2125e-5],[0,7,13,3.9167e-5]],"inputs":[["(/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))"]],"stop":[["saturated",1]],"time":10.220947265625,"type":"simplify"},{"compiler":[[10,6]],"time":0.194091796875,"type":"eval"},{"alts":[["(/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))","next",0.515625]],"compiler":[[10,6],[10,6]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[0.515625],"time":0.68798828125,"type":"prune"},{"compiler":[[21,6]],"locations":[["(+.f64 (exp.f64 a) (exp.f64 b))",0.01171875,true],["(/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))",0.5078138750216392,true]],"time":4.485107421875,"type":"localize"},{"count":[[2,16]],"series":[["(+.f64 (exp.f64 a) (exp.f64 b))","b","-inf",0.171875],["(+.f64 (exp.f64 a) (exp.f64 b))","b","inf",0.14404296875],["(+.f64 (exp.f64 a) (exp.f64 b))","b","0",0.18408203125],["(+.f64 (exp.f64 a) (exp.f64 b))","a","-inf",0.1708984375],["(+.f64 (exp.f64 a) (exp.f64 b))","a","inf",0.14794921875],["(+.f64 (exp.f64 a) (exp.f64 b))","a","0",0.2158203125],["(/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))","b","-inf",0.45703125],["(/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))","b","inf",0.90478515625],["(/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))","b","0",0.9521484375],["(/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))","a","-inf",0.4990234375],["(/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))","a","inf",0.550048828125],["(/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))","a","0",0.934814453125]],"time":5.488037109375,"type":"series"},{"count":[[2,66]],"egraph":[[2,2122,21,0.020122167],[1,147,21,0.002768084],[0,7,21,0.000177584]],"inputs":[["(/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))","(+.f64 (exp.f64 a) (exp.f64 b))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 a) (/.f64 1 (+.f64 (exp.f64 a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (exp.f64 a)) 2) (*.f64 (cbrt.f64 (exp.f64 a)) (/.f64 1 (+.f64 (exp.f64 a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))) (pow.f64 (cbrt.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))) 2) (cbrt.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (exp.f64 a)) (*.f64 (sqrt.f64 (exp.f64 a)) (/.f64 1 (+.f64 (exp.f64 a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))) (sqrt.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 a)) (/.f64 1 (neg.f64 (+.f64 (exp.f64 a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (exp.f64 a) (exp.f64 b))) (exp.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (exp.f64 a)) 2) 1) (/.f64 (cbrt.f64 (exp.f64 a)) (+.f64 (exp.f64 a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (exp.f64 a)) 1) (/.f64 (sqrt.f64 (exp.f64 a)) (+.f64 (exp.f64 a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 (exp.f64 a) (exp.f64 b))) 2)) (/.f64 (exp.f64 a) (cbrt.f64 (+.f64 (exp.f64 a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (exp.f64 a)) 2) (pow.f64 (cbrt.f64 (+.f64 (exp.f64 a) (exp.f64 b))) 2)) (cbrt.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (exp.f64 a)) (pow.f64 (cbrt.f64 (+.f64 (exp.f64 a) (exp.f64 b))) 2)) (/.f64 (sqrt.f64 (exp.f64 a)) (cbrt.f64 (+.f64 (exp.f64 a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 (exp.f64 a) (exp.f64 b)))) (/.f64 (exp.f64 a) (sqrt.f64 (+.f64 (exp.f64 a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (exp.f64 a)) 2) (sqrt.f64 (+.f64 (exp.f64 a) (exp.f64 b)))) (/.f64 (cbrt.f64 (exp.f64 a)) (sqrt.f64 (+.f64 (exp.f64 a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (exp.f64 a) (+.f64 (pow.f64 (exp.f64 a) 3) (pow.f64 (exp.f64 b) 3))) (+.f64 (pow.f64 (exp.f64 a) 2) (*.f64 (exp.f64 b) (-.f64 (exp.f64 b) (exp.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (exp.f64 a) (-.f64 (pow.f64 (exp.f64 a) 2) (pow.f64 (exp.f64 b) 2))) (-.f64 (exp.f64 a) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (exp.f64 a) (exp.f64 b)) (exp.f64 a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (exp.f64 a) (neg.f64 (+.f64 (exp.f64 a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (exp.f64 a) 3) (pow.f64 (+.f64 (exp.f64 a) (exp.f64 b)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 a (log.f64 (+.f64 (exp.f64 a) (exp.f64 b)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (+.f64 (exp.f64 a) (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (exp.f64 a) 2) (-.f64 (exp.f64 a) (exp.f64 b))) (/.f64 (pow.f64 (exp.f64 b) 2) (-.f64 (exp.f64 a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (exp.f64 a) (exp.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (exp.f64 a) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (exp.f64 a) (exp.f64 b))) (pow.f64 (cbrt.f64 (+.f64 (exp.f64 a) (exp.f64 b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (exp.f64 a) (exp.f64 b))) 2) (cbrt.f64 (+.f64 (exp.f64 a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (exp.f64 a) (exp.f64 b))) (sqrt.f64 (+.f64 (exp.f64 a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (exp.f64 a) 3) (pow.f64 (exp.f64 b) 3)) (/.f64 1 (+.f64 (pow.f64 (exp.f64 a) 2) (*.f64 (exp.f64 b) (-.f64 (exp.f64 b) (exp.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (exp.f64 a) 2) (pow.f64 (exp.f64 b) 2)) (/.f64 1 (-.f64 (exp.f64 a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (exp.f64 a) 2) (*.f64 (exp.f64 b) (-.f64 (exp.f64 b) (exp.f64 a)))) (+.f64 (pow.f64 (exp.f64 a) 3) (pow.f64 (exp.f64 b) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (exp.f64 a) (exp.f64 b)) (-.f64 (pow.f64 (exp.f64 a) 2) (pow.f64 (exp.f64 b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (exp.f64 a) 3) (pow.f64 (exp.f64 b) 3)) (+.f64 (pow.f64 (exp.f64 a) 2) (*.f64 (exp.f64 b) (-.f64 (exp.f64 b) (exp.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (exp.f64 a) 3) (pow.f64 (exp.f64 b) 3)) (+.f64 (pow.f64 (exp.f64 b) 2) (-.f64 (pow.f64 (exp.f64 a) 2) (exp.f64 (+.f64 a b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (exp.f64 a) 2) (pow.f64 (exp.f64 b) 2)) (-.f64 (exp.f64 a) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (exp.f64 a) 3) (pow.f64 (exp.f64 b) 3))) (neg.f64 (+.f64 (pow.f64 (exp.f64 a) 2) (*.f64 (exp.f64 b) (-.f64 (exp.f64 b) (exp.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (exp.f64 a) 2) (pow.f64 (exp.f64 b) 2))) (neg.f64 (-.f64 (exp.f64 a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (exp.f64 b) 2) (pow.f64 (exp.f64 a) 2)) (-.f64 (exp.f64 b) (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (exp.f64 a) (exp.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (exp.f64 a) (exp.f64 b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (exp.f64 a) (exp.f64 b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (exp.f64 a) (exp.f64 b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (exp.f64 a) (exp.f64 b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (exp.f64 a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (exp.f64 a) (exp.f64 b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (exp.f64 a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (exp.f64 a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (exp.f64 a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 a) (exp.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (exp.f64 b) (exp.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (exp.f64 a)) 2) (cbrt.f64 (exp.f64 a)) (exp.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (exp.f64 b)) 2) (cbrt.f64 (exp.f64 b)) (exp.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (exp.f64 a)) (sqrt.f64 (exp.f64 a)) (exp.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (exp.f64 b)) (sqrt.f64 (exp.f64 b)) (exp.f64 a))))))"]],"rules":[["egg-rr",33],["egg-rr",33]],"stop":[["node limit",1]],"time":42.07177734375,"type":"rewrite"},{"count":[[82,94]],"egraph":[[3,3997,617,0.021576333000000003],[2,875,638,0.007579250000000001],[1,273,662,0.001971458],[0,90,686,0.000454625]],"inputs":[["(/.f64 1 (+.f64 1 (exp.f64 b)))","(+.f64 (*.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (/.f64 1 (+.f64 1 (exp.f64 b))))","(+.f64 (*.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (*.f64 1/2 (/.f64 1 (+.f64 1 (exp.f64 b))))) (*.f64 3/2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (pow.f64 a 2)) (/.f64 1 (+.f64 1 (exp.f64 b)))))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (/.f64 1 (+.f64 1 (exp.f64 b)))) (*.f64 3/2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)))) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4)) (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (+.f64 1 (exp.f64 b))))))) (pow.f64 a 3)) (+.f64 (*.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (*.f64 1/2 (/.f64 1 (+.f64 1 (exp.f64 b))))) (*.f64 3/2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (pow.f64 a 2)) (/.f64 1 (+.f64 1 (exp.f64 b))))))","(/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a)))","(+.f64 (/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 a) b) (pow.f64 (+.f64 1 (exp.f64 a)) 2))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 3))) (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)))) (pow.f64 b 2))) (+.f64 (/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 a) b) (pow.f64 (+.f64 1 (exp.f64 a)) 2)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 3))) (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)))) (+.f64 1 (exp.f64 a)))) (+.f64 (*.f64 -1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 3))) (*.f64 1/6 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2))))) (pow.f64 b 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 3))) (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)))) (pow.f64 b 2))) (+.f64 (/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 a) b) (pow.f64 (+.f64 1 (exp.f64 a)) 2))))))","(+.f64 1 (exp.f64 b))","(+.f64 1 (+.f64 a (exp.f64 b)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (+.f64 (*.f64 1/6 (pow.f64 a 3)) (exp.f64 b)))))","(+.f64 1 (exp.f64 a))","(+.f64 1 (+.f64 (exp.f64 a) b))","(+.f64 1 (+.f64 (exp.f64 a) (+.f64 b (*.f64 1/2 (pow.f64 b 2)))))","(+.f64 (*.f64 1/6 (pow.f64 b 3)) (+.f64 1 (+.f64 (exp.f64 a) (+.f64 b (*.f64 1/2 (pow.f64 b 2))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 (+.f64 1 (exp.f64 b)))","(+.f64 (*.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (/.f64 1 (+.f64 1 (exp.f64 b))))","(fma.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (/.f64 1 (+.f64 1 (exp.f64 b))))","(fma.f64 a (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (/.f64 1 (+.f64 1 (exp.f64 b))))","(+.f64 (*.f64 (+.f64 1 a) (/.f64 1 (+.f64 1 (exp.f64 b)))) (/.f64 (neg.f64 a) (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(+.f64 (*.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (*.f64 1/2 (/.f64 1 (+.f64 1 (exp.f64 b))))) (*.f64 3/2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (pow.f64 a 2)) (/.f64 1 (+.f64 1 (exp.f64 b)))))","(fma.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (fma.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (-.f64 (/.f64 1/2 (+.f64 1 (exp.f64 b))) (/.f64 3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (*.f64 a a) (/.f64 1 (+.f64 1 (exp.f64 b)))))","(fma.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (fma.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (+.f64 (/.f64 1/2 (+.f64 1 (exp.f64 b))) (/.f64 -3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (*.f64 a a) (/.f64 1 (+.f64 1 (exp.f64 b)))))","(fma.f64 a (*.f64 a (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (+.f64 (/.f64 1/2 (+.f64 1 (exp.f64 b))) (/.f64 -3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (fma.f64 a (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (/.f64 1 (+.f64 1 (exp.f64 b)))))","(fma.f64 a (*.f64 a (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (+.f64 (/.f64 1/2 (+.f64 1 (exp.f64 b))) (/.f64 -3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (+.f64 (*.f64 (+.f64 1 a) (/.f64 1 (+.f64 1 (exp.f64 b)))) (/.f64 (neg.f64 a) (pow.f64 (+.f64 1 (exp.f64 b)) 2))))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (/.f64 1 (+.f64 1 (exp.f64 b)))) (*.f64 3/2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)))) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4)) (+.f64 (*.f64 2/3 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (+.f64 1 (exp.f64 b))))))) (pow.f64 a 3)) (+.f64 (*.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (*.f64 1/2 (/.f64 1 (+.f64 1 (exp.f64 b))))) (*.f64 3/2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (pow.f64 a 2)) (/.f64 1 (+.f64 1 (exp.f64 b))))))","(fma.f64 (+.f64 (/.f64 1/6 (+.f64 1 (exp.f64 b))) (-.f64 (/.f64 3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (+.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4)) (/.f64 2/3 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (+.f64 1 (exp.f64 b))))))) (pow.f64 a 3) (fma.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (fma.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (-.f64 (/.f64 1/2 (+.f64 1 (exp.f64 b))) (/.f64 3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (*.f64 a a) (/.f64 1 (+.f64 1 (exp.f64 b))))))","(fma.f64 (+.f64 (/.f64 3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (-.f64 (/.f64 1/6 (+.f64 1 (exp.f64 b))) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4)) (fma.f64 1/2 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3))) (/.f64 2/3 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (pow.f64 a 3) (fma.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (fma.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (+.f64 (/.f64 1/2 (+.f64 1 (exp.f64 b))) (/.f64 -3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (*.f64 a a) (/.f64 1 (+.f64 1 (exp.f64 b))))))","(fma.f64 a (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (fma.f64 (+.f64 (/.f64 3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (-.f64 (-.f64 (/.f64 1/6 (+.f64 1 (exp.f64 b))) (/.f64 2/3 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (fma.f64 1/2 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 3))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4))))) (pow.f64 a 3) (fma.f64 a (*.f64 a (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (+.f64 (/.f64 1/2 (+.f64 1 (exp.f64 b))) (/.f64 -3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (/.f64 1 (+.f64 1 (exp.f64 b))))))","(fma.f64 (+.f64 (/.f64 1/6 (+.f64 1 (exp.f64 b))) (+.f64 (/.f64 3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (fma.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 3))) -1/2 (+.f64 (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 4)) (/.f64 -2/3 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (pow.f64 a 3) (fma.f64 a (*.f64 a (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (+.f64 (/.f64 1/2 (+.f64 1 (exp.f64 b))) (/.f64 -3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (+.f64 (*.f64 (+.f64 1 a) (/.f64 1 (+.f64 1 (exp.f64 b)))) (/.f64 (neg.f64 a) (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))","(/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a)))","(+.f64 (/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 a) b) (pow.f64 (+.f64 1 (exp.f64 a)) 2))))","(+.f64 (/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a))) (neg.f64 (/.f64 (exp.f64 a) (/.f64 (pow.f64 (+.f64 1 (exp.f64 a)) 2) b))))","(-.f64 (/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a))) (*.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)) b))","(-.f64 (/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a))) (*.f64 b (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2))))","(*.f64 (+.f64 (/.f64 (neg.f64 b) (+.f64 1 (exp.f64 a))) 1) (/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 3))) (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)))) (pow.f64 b 2))) (+.f64 (/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 a) b) (pow.f64 (+.f64 1 (exp.f64 a)) 2)))))","(fma.f64 -1 (*.f64 (fma.f64 -1 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 3)) (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)))) (*.f64 b b)) (+.f64 (/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a))) (neg.f64 (/.f64 (exp.f64 a) (/.f64 (pow.f64 (+.f64 1 (exp.f64 a)) 2) b)))))","(-.f64 (-.f64 (/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a))) (*.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)) b)) (*.f64 b (*.f64 b (-.f64 (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2))) (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 3))))))","(fma.f64 (*.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)) (+.f64 (/.f64 -1 (+.f64 1 (exp.f64 a))) 1/2)) (*.f64 b (neg.f64 b)) (-.f64 (/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a))) (*.f64 b (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)))))","(-.f64 (*.f64 (+.f64 (/.f64 (neg.f64 b) (+.f64 1 (exp.f64 a))) 1) (/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a)))) (*.f64 b (*.f64 b (*.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)) (+.f64 (/.f64 -1 (+.f64 1 (exp.f64 a))) 1/2)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 3))) (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)))) (+.f64 1 (exp.f64 a)))) (+.f64 (*.f64 -1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 3))) (*.f64 1/6 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2))))) (pow.f64 b 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 3))) (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)))) (pow.f64 b 2))) (+.f64 (/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 a) b) (pow.f64 (+.f64 1 (exp.f64 a)) 2))))))","(fma.f64 -1 (*.f64 (fma.f64 -1 (/.f64 (fma.f64 -1 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 3)) (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)))) (+.f64 1 (exp.f64 a))) (fma.f64 -1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 3)) (*.f64 1/6 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2))))) (pow.f64 b 3)) (fma.f64 -1 (*.f64 (fma.f64 -1 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 3)) (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)))) (*.f64 b b)) (+.f64 (/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a))) (neg.f64 (/.f64 (exp.f64 a) (/.f64 (pow.f64 (+.f64 1 (exp.f64 a)) 2) b))))))","(-.f64 (-.f64 (-.f64 (/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a))) (*.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)) b)) (*.f64 b (*.f64 b (-.f64 (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2))) (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 3)))))) (*.f64 (-.f64 (fma.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 3)) -1/2 (*.f64 1/6 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)))) (/.f64 (-.f64 (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2))) (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 3))) (+.f64 1 (exp.f64 a)))) (pow.f64 b 3)))","(-.f64 (-.f64 (/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a))) (*.f64 b (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)))) (*.f64 (*.f64 b b) (+.f64 (*.f64 b (-.f64 (*.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)) (+.f64 (/.f64 -1/2 (+.f64 1 (exp.f64 a))) 1/6)) (/.f64 (*.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)) (+.f64 (/.f64 -1 (+.f64 1 (exp.f64 a))) 1/2)) (+.f64 1 (exp.f64 a))))) (*.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)) (+.f64 (/.f64 -1 (+.f64 1 (exp.f64 a))) 1/2)))))","(+.f64 (*.f64 (+.f64 (/.f64 (neg.f64 b) (+.f64 1 (exp.f64 a))) 1) (/.f64 (exp.f64 a) (+.f64 1 (exp.f64 a)))) (*.f64 (*.f64 b b) (-.f64 (*.f64 b (-.f64 (/.f64 (*.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)) (+.f64 (/.f64 -1 (+.f64 1 (exp.f64 a))) 1/2)) (+.f64 1 (exp.f64 a))) (*.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)) (+.f64 (/.f64 -1/2 (+.f64 1 (exp.f64 a))) 1/6)))) (*.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 1 (exp.f64 a)) 2)) (+.f64 (/.f64 -1 (+.f64 1 (exp.f64 a))) 1/2)))))","(+.f64 1 (exp.f64 b))","(+.f64 1 (+.f64 a (exp.f64 b)))","(+.f64 (+.f64 1 a) (exp.f64 b))","(+.f64 1 (+.f64 (exp.f64 b) a))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(fma.f64 1/2 (*.f64 a a) (+.f64 (+.f64 1 a) (exp.f64 b)))","(+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))","(+.f64 a (+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) 1)))","(+.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (+.f64 (*.f64 1/6 (pow.f64 a 3)) (exp.f64 b)))))","(fma.f64 1/2 (*.f64 a a) (+.f64 (+.f64 1 a) (fma.f64 1/6 (pow.f64 a 3) (exp.f64 b))))","(+.f64 (+.f64 a (fma.f64 1/6 (pow.f64 a 3) (exp.f64 b))) (fma.f64 1/2 (*.f64 a a) 1))","(+.f64 (exp.f64 b) (+.f64 (fma.f64 1/2 (*.f64 a a) 1) (fma.f64 1/6 (pow.f64 a 3) a)))","(+.f64 a (+.f64 (fma.f64 1/6 (pow.f64 a 3) (exp.f64 b)) (fma.f64 a (*.f64 a 1/2) 1)))","(+.f64 1 (exp.f64 a))","(+.f64 1 (+.f64 (exp.f64 a) b))","(+.f64 1 (+.f64 b (exp.f64 a)))","(+.f64 (exp.f64 a) (+.f64 1 b))","(+.f64 1 (+.f64 (exp.f64 a) (+.f64 b (*.f64 1/2 (pow.f64 b 2)))))","(+.f64 (+.f64 1 (exp.f64 a)) (+.f64 b (*.f64 1/2 (*.f64 b b))))","(+.f64 1 (+.f64 (exp.f64 a) (fma.f64 1/2 (*.f64 b b) b)))","(+.f64 (exp.f64 a) (+.f64 b (fma.f64 1/2 (*.f64 b b) 1)))","(+.f64 (*.f64 1/6 (pow.f64 b 3)) (+.f64 1 (+.f64 (exp.f64 a) (+.f64 b (*.f64 1/2 (pow.f64 b 2))))))","(fma.f64 1/6 (pow.f64 b 3) (+.f64 (+.f64 1 (exp.f64 a)) (+.f64 b (*.f64 1/2 (*.f64 b b)))))","(+.f64 (+.f64 (fma.f64 1/6 (pow.f64 b 3) 1) (fma.f64 1/2 (*.f64 b b) b)) (exp.f64 a))","(+.f64 b (+.f64 (fma.f64 b (*.f64 b 1/2) (exp.f64 a)) (fma.f64 1/6 (pow.f64 b 3) 1)))","(+.f64 (exp.f64 a) (+.f64 (fma.f64 1/2 (*.f64 b b) b) (fma.f64 1/6 (pow.f64 b 3) 1)))"]],"stop":[["node limit",1]],"time":39.22509765625,"type":"simplify"},{"compiler":[[1902,915]],"time":16.721923828125,"type":"eval"},{"alts":[["(pow.f64 (sqrt.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))) 2)","fresh",0.818691259768442],["(/.f64 (exp.f64 a) (+.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a))))","next",0.3854675034501867],["(+.f64 (*.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (/.f64 1 (+.f64 1 (exp.f64 b))))","fresh",10.634256138054303],["(/.f64 (exp.f64 a) (fma.f64 (pow.f64 (cbrt.f64 (exp.f64 b)) 2) (cbrt.f64 (exp.f64 b)) (exp.f64 a)))","fresh",0.521816259768442],["(log.f64 (exp.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))))","fresh",0.529628759768442]],"compiler":[[13,9],[16,11],[26,20],[16,9],[12,8],[13,9],[16,11],[26,20],[16,9],[12,8]],"count":[[95,5]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[94,5],"picked":[1,0]}],"min-error":[0],"time":22.8720703125,"type":"prune"},{"compiler":[[51,23]],"locations":[["(fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a))",0.00390625,true],["(+.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a)))",0.01171875,true],["(/.f64 (exp.f64 a) (+.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a))))",0.0234375,true]],"time":10.64306640625,"type":"localize"},{"count":[[3,72]],"series":[["(fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a))","b","-inf",0.171142578125],["(fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a))","b","inf",0.158203125],["(fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a))","b","0",0.18115234375],["(fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a))","a","-inf",0.1640625],["(fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a))","a","inf",0.153076171875],["(fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a))","a","0",0.172119140625],["(+.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a)))","b","-inf",0.159912109375],["(+.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a)))","b","inf",0.162109375],["(+.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a)))","b","0",0.201904296875],["(+.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a)))","a","-inf",0.255859375],["(+.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a)))","a","inf",0.276123046875],["(+.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a)))","a","0",0.241943359375],["(/.f64 (exp.f64 a) (+.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a))))","b","-inf",0.542236328125],["(/.f64 (exp.f64 a) (+.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a))))","b","inf",0.785888671875],["(/.f64 (exp.f64 a) (+.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a))))","b","0",0.7919921875],["(/.f64 (exp.f64 a) (+.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a))))","a","-inf",0.574951171875],["(/.f64 (exp.f64 a) (+.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a))))","a","inf",1.180908203125],["(/.f64 (exp.f64 a) (+.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a))))","a","0",0.530029296875]],"time":6.992919921875,"type":"series"},{"count":[[3,119]],"egraph":[[2,3399,49,0.027447833],[1,251,49,0.004569125],[0,12,50,0.000350708]],"inputs":[["(/.f64 (exp.f64 a) (+.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a))))","(+.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a)))","(fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))) (cbrt.f64 (exp.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))))) (log.f64 (cbrt.f64 (exp.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))) (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 a) (/.f64 1 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (exp.f64 a)) (*.f64 (sqrt.f64 (exp.f64 a)) (/.f64 1 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))) (cbrt.f64 (pow.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))) 2)) (cbrt.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (+.f64 a a))) (*.f64 (cbrt.f64 (exp.f64 a)) (/.f64 1 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))) (sqrt.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (exp.f64 a)) (/.f64 1 (+.f64 (neg.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))) (exp.f64 a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (exp.f64 (+.f64 a a))) 1) (/.f64 (cbrt.f64 (exp.f64 a)) (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (exp.f64 a)) 1) (/.f64 (sqrt.f64 (exp.f64 a)) (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))) 2)) (/.f64 (exp.f64 a) (cbrt.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (exp.f64 (+.f64 a a))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))) 2)) (cbrt.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (exp.f64 a)) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))) 2)) (/.f64 (sqrt.f64 (exp.f64 a)) (cbrt.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))) (/.f64 (exp.f64 a) (sqrt.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (exp.f64 (+.f64 a a))) (sqrt.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))) (/.f64 (cbrt.f64 (exp.f64 a)) (sqrt.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (exp.f64 a) (+.f64 1 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 3))) (fma.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) (-.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (exp.f64 a) (-.f64 1 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 2))) (-.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (-.f64 (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) a)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (exp.f64 a) 3) (pow.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (exp.f64 (-.f64 (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) a)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (exp.f64 a) (+.f64 (neg.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (exp.f64 a) 3) (pow.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (-.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))) (/.f64 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 2) (-.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))) (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))) 2) (cbrt.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))) (sqrt.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 3)) (/.f64 1 (fma.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) (-.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 2)) (/.f64 1 (-.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) (-.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 1) 1) (+.f64 1 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) (-.f64 1 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 3)) (fma.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) (-.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 3)) (+.f64 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 2) (-.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 2)) (-.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 1 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 3))) (neg.f64 (fma.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) (-.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 2))) (neg.f64 (-.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 2) 1) (-.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) (-.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 1) 1) (+.f64 1 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) (-.f64 1 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (*.f64 a 1/2) (+.f64 (+.f64 a (exp.f64 b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a (*.f64 a 1/2)) (+.f64 (+.f64 a (exp.f64 b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a 1/2) a (+.f64 (+.f64 a (exp.f64 b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 1 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a a) 1/2 (+.f64 (+.f64 a (exp.f64 b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 a) 2) (*.f64 (cbrt.f64 a) (*.f64 a 1/2)) (+.f64 (+.f64 a (exp.f64 b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) (cbrt.f64 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 2)) (cbrt.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 a) (*.f64 (sqrt.f64 a) (*.f64 a 1/2)) (+.f64 (+.f64 a (exp.f64 b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) (sqrt.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 a (*.f64 a 1/2))) (cbrt.f64 (*.f64 a (*.f64 a 1/2)))) (cbrt.f64 (*.f64 a (*.f64 a 1/2))) (+.f64 (+.f64 a (exp.f64 b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 a (*.f64 a 1/2))) (sqrt.f64 (*.f64 a (*.f64 a 1/2))) (+.f64 (+.f64 a (exp.f64 b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 a) (sqrt.f64 (*.f64 a 1/2))) (*.f64 (sqrt.f64 a) (sqrt.f64 (*.f64 a 1/2))) (+.f64 (+.f64 a (exp.f64 b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (pow.f64 (cbrt.f64 (*.f64 a 1/2)) 2)) (cbrt.f64 (*.f64 a 1/2)) (+.f64 (+.f64 a (exp.f64 b)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (sqrt.f64 (*.f64 a 1/2))) (sqrt.f64 (*.f64 a 1/2)) (+.f64 (+.f64 a (exp.f64 b)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 a (exp.f64 b)) (*.f64 a (*.f64 a 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (*.f64 a 1/2)) (+.f64 a (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a (*.f64 a 1/2)) 1) (+.f64 a (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 a (*.f64 a 1/2) (exp.f64 b)) a)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))) (cbrt.f64 (exp.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))) (log.f64 (cbrt.f64 (exp.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))) (log.f64 (sqrt.f64 (exp.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) (cbrt.f64 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 2)) (cbrt.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) (sqrt.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 a (*.f64 a 1/2)) 3) (pow.f64 (+.f64 a (exp.f64 b)) 3)) (fma.f64 (*.f64 a (*.f64 a 1/2)) (*.f64 a (*.f64 a 1/2)) (-.f64 (pow.f64 (+.f64 a (exp.f64 b)) 2) (*.f64 (*.f64 a (*.f64 a 1/2)) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 a (*.f64 a 1/2)) (*.f64 a (*.f64 a 1/2))) (pow.f64 (+.f64 a (exp.f64 b)) 2)) (-.f64 (*.f64 a (*.f64 a 1/2)) (+.f64 a (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (+.f64 a (exp.f64 b))) (exp.f64 (*.f64 a (*.f64 a 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (+.f64 a (exp.f64 b)))) (exp.f64 (*.f64 a (*.f64 a 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 a (*.f64 a 1/2))) (+.f64 1 (expm1.f64 (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (*.f64 (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))) 1))))))"]],"rules":[["egg-rr",32],["egg-rr",47],["egg-rr",40]],"stop":[["node limit",1]],"time":55.291015625,"type":"rewrite"},{"count":[[191,176]],"egraph":[[3,7678,1722,0.029079459000000002],[2,1523,1722,0.013589917],[1,430,1813,0.00316725],[0,132,1845,0.00069025]],"inputs":[["(/.f64 1 (+.f64 1 (exp.f64 b)))","(+.f64 (*.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (/.f64 1 (+.f64 1 (exp.f64 b))))","(+.f64 (*.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (*.f64 1/2 (/.f64 1 (+.f64 1 (exp.f64 b))))) (*.f64 3/2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (pow.f64 a 2)) (/.f64 1 (+.f64 1 (exp.f64 b)))))","(+.f64 (*.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (/.f64 1 (+.f64 1 (exp.f64 b)))) (*.f64 3/2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)))) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4)) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (+.f64 1 (exp.f64 b)))) (*.f64 1/2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (pow.f64 a 3)) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (*.f64 1/2 (/.f64 1 (+.f64 1 (exp.f64 b))))) (*.f64 3/2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (pow.f64 a 2)) (/.f64 1 (+.f64 1 (exp.f64 b))))))","(*.f64 2 (/.f64 (exp.f64 a) (pow.f64 a 2)))","(+.f64 (*.f64 2 (/.f64 (exp.f64 a) (pow.f64 a 2))) (*.f64 -4 (/.f64 (exp.f64 a) (pow.f64 a 3))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -8 (exp.f64 a)) (*.f64 4 (*.f64 (exp.f64 a) (+.f64 1 (exp.f64 b))))) (pow.f64 a 4))) (+.f64 (*.f64 2 (/.f64 (exp.f64 a) (pow.f64 a 2))) (*.f64 -4 (/.f64 (exp.f64 a) (pow.f64 a 3)))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (+.f64 (*.f64 -8 (exp.f64 a)) (*.f64 4 (*.f64 (exp.f64 a) (+.f64 1 (exp.f64 b)))))) (*.f64 -8 (*.f64 (exp.f64 a) (+.f64 1 (exp.f64 b))))) (pow.f64 a 5))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -8 (exp.f64 a)) (*.f64 4 (*.f64 (exp.f64 a) (+.f64 1 (exp.f64 b))))) (pow.f64 a 4))) (+.f64 (*.f64 2 (/.f64 (exp.f64 a) (pow.f64 a 2))) (*.f64 -4 (/.f64 (exp.f64 a) (pow.f64 a 3))))))","(*.f64 2 (/.f64 (exp.f64 a) (pow.f64 a 2)))","(+.f64 (*.f64 2 (/.f64 (exp.f64 a) (pow.f64 a 2))) (*.f64 -4 (/.f64 (exp.f64 a) (pow.f64 a 3))))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -8 (exp.f64 a)) (*.f64 4 (*.f64 (exp.f64 a) (+.f64 1 (exp.f64 b))))) (pow.f64 a 4))) (+.f64 (*.f64 2 (/.f64 (exp.f64 a) (pow.f64 a 2))) (*.f64 -4 (/.f64 (exp.f64 a) (pow.f64 a 3)))))","(+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 -8 (exp.f64 a)) (*.f64 4 (*.f64 (exp.f64 a) (+.f64 1 (exp.f64 b))))) (pow.f64 a 5))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -8 (exp.f64 a)) (*.f64 4 (*.f64 (exp.f64 a) (+.f64 1 (exp.f64 b))))) (pow.f64 a 4))) (+.f64 (*.f64 2 (/.f64 (exp.f64 a) (pow.f64 a 2))) (+.f64 (*.f64 -4 (/.f64 (exp.f64 a) (pow.f64 a 3))) (*.f64 8 (/.f64 (*.f64 (exp.f64 a) (+.f64 1 (exp.f64 b))) (pow.f64 a 5)))))))","(/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)))","(+.f64 (/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 a) b) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -1 (/.f64 (exp.f64 a) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 3))) (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2)))))) (+.f64 (/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 a) b) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2)))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -1 (/.f64 (exp.f64 a) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 3))) (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 b 3) (+.f64 (*.f64 -1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (exp.f64 a) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 3))) (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2)))) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)))) (*.f64 1/6 (/.f64 (exp.f64 a) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2))))))) (+.f64 (/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 a) b) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2))))))","(/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(+.f64 1 (exp.f64 b))","(+.f64 1 (+.f64 a (exp.f64 b)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(*.f64 1/2 (pow.f64 a 2))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) a)","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(*.f64 1/2 (pow.f64 a 2))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) a)","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 (+.f64 a b)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 (+.f64 a (+.f64 b (*.f64 1/2 (pow.f64 b 2))))))","(+.f64 (*.f64 1/6 (pow.f64 b 3)) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 (+.f64 a (+.f64 b (*.f64 1/2 (pow.f64 b 2)))))))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(exp.f64 b)","(+.f64 a (exp.f64 b))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(*.f64 1/2 (pow.f64 a 2))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) a)","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(*.f64 1/2 (pow.f64 a 2))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) a)","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 a))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a b)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (+.f64 b (*.f64 1/2 (pow.f64 b 2))))))","(+.f64 (*.f64 1/6 (pow.f64 b 3)) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (+.f64 b (*.f64 1/2 (pow.f64 b 2)))))))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 (+.f64 1 (exp.f64 b)))","(+.f64 (*.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (/.f64 1 (+.f64 1 (exp.f64 b))))","(fma.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (/.f64 1 (+.f64 1 (exp.f64 b))))","(fma.f64 a (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (/.f64 1 (+.f64 1 (exp.f64 b))))","(+.f64 (*.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (*.f64 1/2 (/.f64 1 (+.f64 1 (exp.f64 b))))) (*.f64 3/2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (pow.f64 a 2)) (/.f64 1 (+.f64 1 (exp.f64 b)))))","(fma.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (fma.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (-.f64 (/.f64 1/2 (+.f64 1 (exp.f64 b))) (/.f64 3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (*.f64 a a) (/.f64 1 (+.f64 1 (exp.f64 b)))))","(fma.f64 a (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (fma.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (+.f64 (/.f64 1/2 (+.f64 1 (exp.f64 b))) (/.f64 -3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (*.f64 a a) (/.f64 1 (+.f64 1 (exp.f64 b)))))","(fma.f64 a (*.f64 a (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (+.f64 (/.f64 1/2 (+.f64 1 (exp.f64 b))) (/.f64 -3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (fma.f64 a (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (/.f64 1 (+.f64 1 (exp.f64 b)))))","(+.f64 (*.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (/.f64 1 (+.f64 1 (exp.f64 b)))) (*.f64 3/2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)))) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4)) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (+.f64 1 (exp.f64 b)))) (*.f64 1/2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (pow.f64 a 3)) (+.f64 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (*.f64 1/2 (/.f64 1 (+.f64 1 (exp.f64 b))))) (*.f64 3/2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (pow.f64 a 2)) (/.f64 1 (+.f64 1 (exp.f64 b))))))","(fma.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (fma.f64 (+.f64 (/.f64 1/6 (+.f64 1 (exp.f64 b))) (-.f64 (/.f64 3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4)) (fma.f64 1/2 (/.f64 (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (+.f64 1 (exp.f64 b))) (/.f64 1/2 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (pow.f64 a 3) (fma.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (-.f64 (/.f64 1/2 (+.f64 1 (exp.f64 b))) (/.f64 3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (*.f64 a a) (/.f64 1 (+.f64 1 (exp.f64 b))))))","(fma.f64 a (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (fma.f64 (-.f64 (-.f64 (+.f64 (/.f64 1/6 (+.f64 1 (exp.f64 b))) (/.f64 3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 3))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4))) (fma.f64 1/2 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3))) (/.f64 1/2 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (pow.f64 a 3) (fma.f64 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (+.f64 (/.f64 1/2 (+.f64 1 (exp.f64 b))) (/.f64 -3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (*.f64 a a) (/.f64 1 (+.f64 1 (exp.f64 b))))))","(fma.f64 (+.f64 (-.f64 (+.f64 (/.f64 1/6 (+.f64 1 (exp.f64 b))) (/.f64 3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 3))) (fma.f64 1/2 (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 3))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4)))) (/.f64 -1/2 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (pow.f64 a 3) (fma.f64 a (*.f64 a (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (+.f64 (/.f64 1/2 (+.f64 1 (exp.f64 b))) (/.f64 -3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (fma.f64 a (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (/.f64 1 (+.f64 1 (exp.f64 b))))))","(fma.f64 (+.f64 (/.f64 1/6 (+.f64 1 (exp.f64 b))) (+.f64 (/.f64 3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (fma.f64 -1/2 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 4))))) (pow.f64 a 3) (fma.f64 a (*.f64 a (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (+.f64 (/.f64 1/2 (+.f64 1 (exp.f64 b))) (/.f64 -3/2 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (fma.f64 a (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (/.f64 1 (+.f64 1 (exp.f64 b))))))","(*.f64 2 (/.f64 (exp.f64 a) (pow.f64 a 2)))","(*.f64 2 (/.f64 (exp.f64 a) (*.f64 a a)))","(+.f64 (*.f64 2 (/.f64 (exp.f64 a) (pow.f64 a 2))) (*.f64 -4 (/.f64 (exp.f64 a) (pow.f64 a 3))))","(fma.f64 2 (/.f64 (exp.f64 a) (*.f64 a a)) (*.f64 -4 (/.f64 (exp.f64 a) (pow.f64 a 3))))","(fma.f64 2 (/.f64 (exp.f64 a) (*.f64 a a)) (/.f64 -4 (/.f64 (pow.f64 a 3) (exp.f64 a))))","(*.f64 (/.f64 (exp.f64 a) (*.f64 a a)) (+.f64 2 (/.f64 -4 a)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -8 (exp.f64 a)) (*.f64 4 (*.f64 (exp.f64 a) (+.f64 1 (exp.f64 b))))) (pow.f64 a 4))) (+.f64 (*.f64 2 (/.f64 (exp.f64 a) (pow.f64 a 2))) (*.f64 -4 (/.f64 (exp.f64 a) (pow.f64 a 3)))))","(fma.f64 -1 (/.f64 (fma.f64 -8 (exp.f64 a) (*.f64 4 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 a)))) (pow.f64 a 4)) (fma.f64 2 (/.f64 (exp.f64 a) (*.f64 a a)) (*.f64 -4 (/.f64 (exp.f64 a) (pow.f64 a 3)))))","(-.f64 (fma.f64 2 (/.f64 (exp.f64 a) (*.f64 a a)) (/.f64 -4 (/.f64 (pow.f64 a 3) (exp.f64 a)))) (/.f64 (fma.f64 4 (+.f64 (exp.f64 a) (exp.f64 (+.f64 b a))) (*.f64 (exp.f64 a) -8)) (pow.f64 a 4)))","(-.f64 (*.f64 (/.f64 (exp.f64 a) (*.f64 a a)) (+.f64 2 (/.f64 -4 a))) (/.f64 (*.f64 (exp.f64 a) (+.f64 -8 (+.f64 4 (*.f64 (exp.f64 b) 4)))) (pow.f64 a 4)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (+.f64 (*.f64 -8 (exp.f64 a)) (*.f64 4 (*.f64 (exp.f64 a) (+.f64 1 (exp.f64 b)))))) (*.f64 -8 (*.f64 (exp.f64 a) (+.f64 1 (exp.f64 b))))) (pow.f64 a 5))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -8 (exp.f64 a)) (*.f64 4 (*.f64 (exp.f64 a) (+.f64 1 (exp.f64 b))))) (pow.f64 a 4))) (+.f64 (*.f64 2 (/.f64 (exp.f64 a) (pow.f64 a 2))) (*.f64 -4 (/.f64 (exp.f64 a) (pow.f64 a 3))))))","(fma.f64 -1 (/.f64 (fma.f64 -2 (fma.f64 -8 (exp.f64 a) (*.f64 4 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 a)))) (*.f64 -8 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 a)))) (pow.f64 a 5)) (fma.f64 -1 (/.f64 (fma.f64 -8 (exp.f64 a) (*.f64 4 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 a)))) (pow.f64 a 4)) (fma.f64 2 (/.f64 (exp.f64 a) (*.f64 a a)) (*.f64 -4 (/.f64 (exp.f64 a) (pow.f64 a 3))))))","(-.f64 (-.f64 (fma.f64 2 (/.f64 (exp.f64 a) (*.f64 a a)) (/.f64 -4 (/.f64 (pow.f64 a 3) (exp.f64 a)))) (/.f64 (fma.f64 4 (+.f64 (exp.f64 a) (exp.f64 (+.f64 b a))) (*.f64 (exp.f64 a) -8)) (pow.f64 a 4))) (/.f64 (fma.f64 -8 (+.f64 (exp.f64 a) (exp.f64 (+.f64 b a))) (+.f64 (*.f64 (exp.f64 a) (*.f64 -8 (+.f64 1 (exp.f64 b)))) (*.f64 (exp.f64 a) 16))) (pow.f64 a 5)))","(-.f64 (*.f64 (/.f64 (exp.f64 a) (*.f64 a a)) (+.f64 2 (/.f64 -4 a))) (+.f64 (/.f64 (*.f64 (exp.f64 a) (+.f64 -8 (+.f64 4 (*.f64 (exp.f64 b) 4)))) (pow.f64 a 4)) (/.f64 (fma.f64 (exp.f64 a) 16 (*.f64 (+.f64 (exp.f64 a) (exp.f64 (+.f64 b a))) -16)) (pow.f64 a 5))))","(*.f64 2 (/.f64 (exp.f64 a) (pow.f64 a 2)))","(*.f64 2 (/.f64 (exp.f64 a) (*.f64 a a)))","(+.f64 (*.f64 2 (/.f64 (exp.f64 a) (pow.f64 a 2))) (*.f64 -4 (/.f64 (exp.f64 a) (pow.f64 a 3))))","(fma.f64 2 (/.f64 (exp.f64 a) (*.f64 a a)) (*.f64 -4 (/.f64 (exp.f64 a) (pow.f64 a 3))))","(fma.f64 2 (/.f64 (exp.f64 a) (*.f64 a a)) (/.f64 -4 (/.f64 (pow.f64 a 3) (exp.f64 a))))","(*.f64 (/.f64 (exp.f64 a) (*.f64 a a)) (+.f64 2 (/.f64 -4 a)))","(+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -8 (exp.f64 a)) (*.f64 4 (*.f64 (exp.f64 a) (+.f64 1 (exp.f64 b))))) (pow.f64 a 4))) (+.f64 (*.f64 2 (/.f64 (exp.f64 a) (pow.f64 a 2))) (*.f64 -4 (/.f64 (exp.f64 a) (pow.f64 a 3)))))","(fma.f64 -1 (/.f64 (fma.f64 -8 (exp.f64 a) (*.f64 4 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 a)))) (pow.f64 a 4)) (fma.f64 2 (/.f64 (exp.f64 a) (*.f64 a a)) (*.f64 -4 (/.f64 (exp.f64 a) (pow.f64 a 3)))))","(-.f64 (fma.f64 2 (/.f64 (exp.f64 a) (*.f64 a a)) (/.f64 -4 (/.f64 (pow.f64 a 3) (exp.f64 a)))) (/.f64 (fma.f64 4 (+.f64 (exp.f64 a) (exp.f64 (+.f64 b a))) (*.f64 (exp.f64 a) -8)) (pow.f64 a 4)))","(-.f64 (*.f64 (/.f64 (exp.f64 a) (*.f64 a a)) (+.f64 2 (/.f64 -4 a))) (/.f64 (*.f64 (exp.f64 a) (+.f64 -8 (+.f64 4 (*.f64 (exp.f64 b) 4)))) (pow.f64 a 4)))","(+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 -8 (exp.f64 a)) (*.f64 4 (*.f64 (exp.f64 a) (+.f64 1 (exp.f64 b))))) (pow.f64 a 5))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -8 (exp.f64 a)) (*.f64 4 (*.f64 (exp.f64 a) (+.f64 1 (exp.f64 b))))) (pow.f64 a 4))) (+.f64 (*.f64 2 (/.f64 (exp.f64 a) (pow.f64 a 2))) (+.f64 (*.f64 -4 (/.f64 (exp.f64 a) (pow.f64 a 3))) (*.f64 8 (/.f64 (*.f64 (exp.f64 a) (+.f64 1 (exp.f64 b))) (pow.f64 a 5)))))))","(fma.f64 2 (/.f64 (fma.f64 -8 (exp.f64 a) (*.f64 4 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 a)))) (pow.f64 a 5)) (fma.f64 -1 (/.f64 (fma.f64 -8 (exp.f64 a) (*.f64 4 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 a)))) (pow.f64 a 4)) (fma.f64 2 (/.f64 (exp.f64 a) (*.f64 a a)) (fma.f64 -4 (/.f64 (exp.f64 a) (pow.f64 a 3)) (*.f64 8 (/.f64 (exp.f64 a) (/.f64 (pow.f64 a 5) (+.f64 1 (exp.f64 b)))))))))","(fma.f64 2 (/.f64 (fma.f64 4 (+.f64 (exp.f64 a) (exp.f64 (+.f64 b a))) (*.f64 (exp.f64 a) -8)) (pow.f64 a 5)) (-.f64 (fma.f64 2 (/.f64 (exp.f64 a) (*.f64 a a)) (fma.f64 -4 (/.f64 (exp.f64 a) (pow.f64 a 3)) (/.f64 (*.f64 8 (exp.f64 a)) (/.f64 (pow.f64 a 5) (+.f64 1 (exp.f64 b)))))) (/.f64 (fma.f64 4 (+.f64 (exp.f64 a) (exp.f64 (+.f64 b a))) (*.f64 (exp.f64 a) -8)) (pow.f64 a 4))))","(-.f64 (fma.f64 2 (/.f64 (*.f64 (exp.f64 a) (+.f64 -8 (+.f64 4 (*.f64 (exp.f64 b) 4)))) (pow.f64 a 5)) (fma.f64 8 (*.f64 (+.f64 1 (exp.f64 b)) (/.f64 (exp.f64 a) (pow.f64 a 5))) (*.f64 (/.f64 (exp.f64 a) (*.f64 a a)) (+.f64 2 (/.f64 -4 a))))) (/.f64 (*.f64 (exp.f64 a) (+.f64 -8 (+.f64 4 (*.f64 (exp.f64 b) 4)))) (pow.f64 a 4)))","(/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)))","(/.f64 (exp.f64 a) (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)))","(/.f64 (exp.f64 a) (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)))","(/.f64 (exp.f64 a) (+.f64 2 (fma.f64 a (*.f64 a 1/2) a)))","(+.f64 (/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 a) b) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2))))","(+.f64 (/.f64 (exp.f64 a) (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))) (neg.f64 (/.f64 (exp.f64 a) (/.f64 (pow.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)) 2) b))))","(-.f64 (/.f64 (exp.f64 a) (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (*.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2)) b))","(-.f64 (/.f64 (exp.f64 a) (+.f64 2 (fma.f64 a (*.f64 a 1/2) a))) (*.f64 b (/.f64 (exp.f64 a) (pow.f64 (+.f64 2 (fma.f64 a (*.f64 a 1/2) a)) 2))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -1 (/.f64 (exp.f64 a) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 3))) (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2)))))) (+.f64 (/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 a) b) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2)))))","(fma.f64 -1 (*.f64 (*.f64 b b) (fma.f64 -1 (/.f64 (exp.f64 a) (pow.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)) 3)) (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)) 2))))) (+.f64 (/.f64 (exp.f64 a) (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))) (neg.f64 (/.f64 (exp.f64 a) (/.f64 (pow.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)) 2) b)))))","(-.f64 (-.f64 (/.f64 (exp.f64 a) (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (*.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2)) b)) (*.f64 (*.f64 b b) (-.f64 (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2))) (/.f64 (exp.f64 a) (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 3)))))","(-.f64 (-.f64 (/.f64 (exp.f64 a) (+.f64 2 (fma.f64 a (*.f64 a 1/2) a))) (*.f64 b (/.f64 (exp.f64 a) (pow.f64 (+.f64 2 (fma.f64 a (*.f64 a 1/2) a)) 2)))) (*.f64 (*.f64 b b) (*.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 2 (fma.f64 a (*.f64 a 1/2) a)) 2)) (+.f64 (/.f64 -1 (+.f64 2 (fma.f64 a (*.f64 a 1/2) a))) 1/2))))","(+.f64 (*.f64 -1 (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -1 (/.f64 (exp.f64 a) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 3))) (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2)))))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 b 3) (+.f64 (*.f64 -1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (/.f64 (exp.f64 a) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 3))) (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2)))) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)))) (*.f64 1/6 (/.f64 (exp.f64 a) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2))))))) (+.f64 (/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 a) b) (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2))))))","(fma.f64 -1 (*.f64 (*.f64 b b) (fma.f64 -1 (/.f64 (exp.f64 a) (pow.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)) 3)) (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)) 2))))) (fma.f64 -1 (*.f64 (pow.f64 b 3) (fma.f64 -1/2 (/.f64 (exp.f64 a) (pow.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)) 3)) (fma.f64 -1 (/.f64 (fma.f64 -1 (/.f64 (exp.f64 a) (pow.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)) 3)) (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)) 2)))) (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))) (*.f64 1/6 (/.f64 (exp.f64 a) (pow.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)) 2)))))) (+.f64 (/.f64 (exp.f64 a) (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))) (neg.f64 (/.f64 (exp.f64 a) (/.f64 (pow.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)) 2) b))))))","(-.f64 (-.f64 (-.f64 (/.f64 (exp.f64 a) (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (*.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2)) b)) (*.f64 (pow.f64 b 3) (fma.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 3)) -1/2 (-.f64 (*.f64 1/6 (/.f64 (exp.f64 a) (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2))) (/.f64 (-.f64 (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2))) (/.f64 (exp.f64 a) (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 3))) (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))))))) (*.f64 (*.f64 b b) (-.f64 (*.f64 1/2 (/.f64 (exp.f64 a) (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2))) (/.f64 (exp.f64 a) (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 3)))))","(-.f64 (-.f64 (/.f64 (exp.f64 a) (+.f64 2 (fma.f64 a (*.f64 a 1/2) a))) (*.f64 b (/.f64 (exp.f64 a) (pow.f64 (+.f64 2 (fma.f64 a (*.f64 a 1/2) a)) 2)))) (*.f64 (*.f64 b b) (+.f64 (*.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 2 (fma.f64 a (*.f64 a 1/2) a)) 2)) (+.f64 (/.f64 -1 (+.f64 2 (fma.f64 a (*.f64 a 1/2) a))) 1/2)) (*.f64 b (-.f64 (*.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 2 (fma.f64 a (*.f64 a 1/2) a)) 2)) (+.f64 1/6 (/.f64 -1/2 (+.f64 2 (fma.f64 a (*.f64 a 1/2) a))))) (/.f64 (*.f64 (/.f64 (exp.f64 a) (pow.f64 (+.f64 2 (fma.f64 a (*.f64 a 1/2) a)) 2)) (+.f64 (/.f64 -1 (+.f64 2 (fma.f64 a (*.f64 a 1/2) a))) 1/2)) (+.f64 2 (fma.f64 a (*.f64 a 1/2) a))))))))","(/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(/.f64 (exp.f64 a) (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a))))","(/.f64 (exp.f64 a) (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1)))","(/.f64 (exp.f64 a) (+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))))","(/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(/.f64 (exp.f64 a) (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a))))","(/.f64 (exp.f64 a) (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1)))","(/.f64 (exp.f64 a) (+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))))","(/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(/.f64 (exp.f64 a) (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a))))","(/.f64 (exp.f64 a) (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1)))","(/.f64 (exp.f64 a) (+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))))","(/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(/.f64 (exp.f64 a) (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a))))","(/.f64 (exp.f64 a) (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1)))","(/.f64 (exp.f64 a) (+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))))","(/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(/.f64 (exp.f64 a) (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a))))","(/.f64 (exp.f64 a) (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1)))","(/.f64 (exp.f64 a) (+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))))","(/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(/.f64 (exp.f64 a) (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a))))","(/.f64 (exp.f64 a) (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1)))","(/.f64 (exp.f64 a) (+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))))","(/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(/.f64 (exp.f64 a) (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a))))","(/.f64 (exp.f64 a) (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1)))","(/.f64 (exp.f64 a) (+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))))","(/.f64 (exp.f64 a) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(/.f64 (exp.f64 a) (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a))))","(/.f64 (exp.f64 a) (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1)))","(/.f64 (exp.f64 a) (+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))))","(+.f64 1 (exp.f64 b))","(+.f64 1 (+.f64 a (exp.f64 b)))","(+.f64 1 (+.f64 (exp.f64 b) a))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))","(+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))","(+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))","(+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))","(+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a)))","(*.f64 1/2 (pow.f64 a 2))","(*.f64 1/2 (*.f64 a a))","(*.f64 a (*.f64 a 1/2))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) a)","(fma.f64 1/2 (*.f64 a a) a)","(fma.f64 a (*.f64 a 1/2) a)","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))","(+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))","(+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))","(+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))","(+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a)))","(*.f64 1/2 (pow.f64 a 2))","(*.f64 1/2 (*.f64 a a))","(*.f64 a (*.f64 a 1/2))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) a)","(fma.f64 1/2 (*.f64 a a) a)","(fma.f64 a (*.f64 a 1/2) a)","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))","(+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))","(+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))","(+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))","(+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))","(fma.f64 1/2 (*.f64 a a) (+.f64 a 2))","(+.f64 a (fma.f64 1/2 (*.f64 a a) 2))","(+.f64 2 (fma.f64 a (*.f64 a 1/2) a))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 (+.f64 a b)))","(fma.f64 1/2 (*.f64 a a) (+.f64 2 (+.f64 b a)))","(+.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) b)","(fma.f64 a (*.f64 a 1/2) (+.f64 a (+.f64 b 2)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 (+.f64 a (+.f64 b (*.f64 1/2 (pow.f64 b 2))))))","(fma.f64 1/2 (*.f64 a a) (+.f64 2 (+.f64 a (+.f64 b (*.f64 1/2 (*.f64 b b))))))","(+.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) (fma.f64 1/2 (*.f64 b b) b))","(+.f64 2 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (fma.f64 1/2 (*.f64 b b) b)))","(+.f64 (*.f64 1/6 (pow.f64 b 3)) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 (+.f64 a (+.f64 b (*.f64 1/2 (pow.f64 b 2)))))))","(fma.f64 1/6 (pow.f64 b 3) (fma.f64 1/2 (*.f64 a a) (+.f64 2 (+.f64 a (+.f64 b (*.f64 1/2 (*.f64 b b)))))))","(fma.f64 1/6 (pow.f64 b 3) (+.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) (fma.f64 1/2 (*.f64 b b) b)))","(fma.f64 a (*.f64 a 1/2) (fma.f64 1/6 (pow.f64 b 3) (+.f64 a (+.f64 2 (fma.f64 1/2 (*.f64 b b) b)))))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))","(+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))","(+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))","(+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))","(+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))","(+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))","(+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))","(+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))","(+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))","(+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))","(+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))","(+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))","(+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))","(+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))","(+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))","(fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))","(+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))","(+.f64 1 (+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a)))","(exp.f64 b)","(+.f64 a (exp.f64 b))","(+.f64 (exp.f64 b) a)","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (fma.f64 1/2 (*.f64 a a) a) (exp.f64 b))","(+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))","(+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (fma.f64 1/2 (*.f64 a a) a) (exp.f64 b))","(+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))","(+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))","(*.f64 1/2 (pow.f64 a 2))","(*.f64 1/2 (*.f64 a a))","(*.f64 a (*.f64 a 1/2))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) a)","(fma.f64 1/2 (*.f64 a a) a)","(fma.f64 a (*.f64 a 1/2) a)","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (fma.f64 1/2 (*.f64 a a) a) (exp.f64 b))","(+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))","(+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (fma.f64 1/2 (*.f64 a a) a) (exp.f64 b))","(+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))","(+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))","(*.f64 1/2 (pow.f64 a 2))","(*.f64 1/2 (*.f64 a a))","(*.f64 a (*.f64 a 1/2))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) a)","(fma.f64 1/2 (*.f64 a a) a)","(fma.f64 a (*.f64 a 1/2) a)","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (fma.f64 1/2 (*.f64 a a) a) (exp.f64 b))","(+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))","(+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (fma.f64 1/2 (*.f64 a a) a) (exp.f64 b))","(+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))","(+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 a))","(fma.f64 1/2 (*.f64 a a) (+.f64 1 a))","(+.f64 1 (fma.f64 1/2 (*.f64 a a) a))","(+.f64 1 (fma.f64 a (*.f64 a 1/2) a))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a b)))","(fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 b a)))","(+.f64 (+.f64 b a) (fma.f64 1/2 (*.f64 a a) 1))","(+.f64 1 (+.f64 b (fma.f64 a (*.f64 a 1/2) a)))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (+.f64 b (*.f64 1/2 (pow.f64 b 2))))))","(fma.f64 1/2 (*.f64 a a) (+.f64 (+.f64 1 a) (+.f64 b (*.f64 1/2 (*.f64 b b)))))","(+.f64 (+.f64 a (fma.f64 1/2 (*.f64 b b) b)) (fma.f64 1/2 (*.f64 a a) 1))","(+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (fma.f64 1/2 (*.f64 b b) b)))","(+.f64 (*.f64 1/6 (pow.f64 b 3)) (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (+.f64 b (*.f64 1/2 (pow.f64 b 2)))))))","(fma.f64 1/6 (pow.f64 b 3) (fma.f64 1/2 (*.f64 a a) (+.f64 (+.f64 1 a) (+.f64 b (*.f64 1/2 (*.f64 b b))))))","(fma.f64 1/6 (pow.f64 b 3) (+.f64 (+.f64 a (fma.f64 1/2 (*.f64 b b) b)) (fma.f64 1/2 (*.f64 a a) 1)))","(fma.f64 1/6 (pow.f64 b 3) (+.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (fma.f64 1/2 (*.f64 b b) b))))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (fma.f64 1/2 (*.f64 a a) a) (exp.f64 b))","(+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))","(+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (fma.f64 1/2 (*.f64 a a) a) (exp.f64 b))","(+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))","(+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (fma.f64 1/2 (*.f64 a a) a) (exp.f64 b))","(+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))","(+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (fma.f64 1/2 (*.f64 a a) a) (exp.f64 b))","(+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))","(+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (fma.f64 1/2 (*.f64 a a) a) (exp.f64 b))","(+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))","(+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (fma.f64 1/2 (*.f64 a a) a) (exp.f64 b))","(+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))","(+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (fma.f64 1/2 (*.f64 a a) a) (exp.f64 b))","(+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))","(+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))","(+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 a (exp.f64 b)))","(+.f64 (fma.f64 1/2 (*.f64 a a) a) (exp.f64 b))","(+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))","(+.f64 (exp.f64 b) (fma.f64 a (*.f64 a 1/2) a))"]],"stop":[["node limit",1]],"time":57.458984375,"type":"simplify"},{"compiler":[[4357,2646]],"time":45.68310546875,"type":"eval"},{"alts":[["(/.f64 (exp.f64 a) (fma.f64 (pow.f64 (cbrt.f64 (exp.f64 b)) 2) (cbrt.f64 (exp.f64 b)) (exp.f64 a)))","fresh",0.521816259768442],["(fma.f64 a (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (/.f64 1 (+.f64 1 (exp.f64 b))))","fresh",10.634256138054303],["(exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))","next",0.3737487534501867]],"compiler":[[16,9],[25,19],[15,10],[16,9],[25,19],[15,10]],"count":[[181,3]],"kept":[{"done":[0,0],"fresh":[4,1],"new":[176,2],"picked":[1,0]}],"min-error":[0],"time":60.85986328125,"type":"prune"},{"compiler":[[60,31]],"locations":[["(-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))",0.24559557453655118,true],["(log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))",5.088673511911091,true]],"time":15.260986328125,"type":"localize"},{"count":[[2,48]],"series":[["(-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))","b","-inf",0.2119140625],["(-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))","b","inf",0.205078125],["(-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))","b","0",0.442138671875],["(-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))","a","-inf",0.255859375],["(-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))","a","inf",0.275146484375],["(-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))","a","0",0.375],["(log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))","b","-inf",13.31884765625],["(log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))","b","inf",18.5029296875],["(log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))","b","0",0.557861328125],["(log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))","a","-inf",0.594970703125],["(log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))","a","inf",0.416015625],["(log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))","a","0",1.3720703125]],"time":36.76318359375,"type":"series"},{"count":[[2,114]],"egraph":[[2,2971,33,0.025408916],[1,216,33,0.0040285],[0,10,33,0.000288458]],"inputs":[["(log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))","(-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))) 1)) 2)) (log.f64 (cbrt.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))) 1))) (log.f64 (sqrt.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log1p.f64 (pow.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))) 3)) (log.f64 (+.f64 1 (-.f64 (pow.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))) 2) (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (-.f64 1 (pow.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))) 2))) (log.f64 (-.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2) (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (sqrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 a (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 a (*.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (fma.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (fma.f64 (neg.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (+.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (fma.f64 -1 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2)) (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) a)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (cbrt.f64 (pow.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2)) (cbrt.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (sqrt.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 a 3) (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 3)) (/.f64 1 (fma.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) (+.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 a a) (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 2)) (/.f64 1 (+.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 a) (sqrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (-.f64 (sqrt.f64 a) (sqrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) (+.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (*.f64 a a)) (-.f64 (pow.f64 a 3) (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (-.f64 (*.f64 a a) (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 a 3) (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 3)) (fma.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) (+.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 a a) (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 2)) (+.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 a 3) (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 3))) (neg.f64 (fma.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) (+.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 a a) (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 2))) (neg.f64 (+.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 a 3) (pow.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 3)) (fma.f64 a a (-.f64 (pow.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2) (*.f64 a (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 a a) (pow.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2)) (-.f64 a (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) (+.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (*.f64 a a)) (-.f64 (pow.f64 a 3) (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (-.f64 (*.f64 a a) (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 a)) (+.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 a)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 a) (/.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 a)) (/.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))) 1)) (exp.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (+.f64 1 (expm1.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (+.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))) 1)) (+.f64 1 (expm1.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a 1 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a 1 (*.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1 (fma.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1 (fma.f64 (neg.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1 (+.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 a (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 a (*.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (fma.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (fma.f64 (neg.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (+.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) a)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (pow.f64 (cbrt.f64 a) 2) (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 a) (pow.f64 (cbrt.f64 a) 2) (*.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 a) 2) (cbrt.f64 a) (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 a) 2) (cbrt.f64 a) (*.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2) (neg.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) a)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (cbrt.f64 (pow.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2)) (fma.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (cbrt.f64 (pow.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2)) (fma.f64 (neg.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (cbrt.f64 (pow.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2)) (+.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2)) (cbrt.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (fma.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2)) (cbrt.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (fma.f64 (neg.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2)) (cbrt.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (+.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 a) (sqrt.f64 a) (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 a) (sqrt.f64 a) (*.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (neg.f64 (sqrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) a)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (sqrt.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (fma.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (sqrt.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (fma.f64 (neg.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (sqrt.f64 (-.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (+.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 a 3) (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 3)) (/.f64 1 (fma.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) (+.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (*.f64 a a))) (fma.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 a 3) (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 3)) (/.f64 1 (fma.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) (+.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (*.f64 a a))) (fma.f64 (neg.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 a 3) (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 3)) (/.f64 1 (fma.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) (+.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (*.f64 a a))) (+.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 a a) (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 2)) (/.f64 1 (+.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (fma.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 a a) (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 2)) (/.f64 1 (+.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (fma.f64 (neg.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 a a) (pow.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) 2)) (/.f64 1 (+.f64 a (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (+.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) 2) (cbrt.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) a)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (sqrt.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) a)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (sqrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) a)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))) a)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 a) (sqrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (-.f64 (sqrt.f64 a) (sqrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (fma.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 1 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 a) (sqrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (-.f64 (sqrt.f64 a) (sqrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (fma.f64 (neg.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 a) (sqrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (-.f64 (sqrt.f64 a) (sqrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b)))))) (+.f64 (neg.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) 2)) (cbrt.f64 (log1p.f64 (fma.f64 a (*.f64 a 1/2) (+.f64 a (exp.f64 b))))) a)))))"]],"rules":[["egg-rr",92],["egg-rr",22]],"stop":[["node limit",1]],"time":56.139892578125,"type":"rewrite"},{"count":[[162,179]],"egraph":[[3,6368,1436,0.026598042000000002],[2,1508,1457,0.011922292000000001],[1,469,1540,0.0031311250000000002],[0,144,1571,0.000758125]],"inputs":[["(log.f64 (+.f64 1 (exp.f64 b)))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 a 2) (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b)))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 a 3) (-.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3))) (*.f64 3 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 a 2) (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))))","(+.f64 (log.f64 1/2) (*.f64 -2 (log.f64 (/.f64 1 a))))","(+.f64 (*.f64 -2 (log.f64 (/.f64 1 a))) (+.f64 (log.f64 1/2) (*.f64 2 (/.f64 1 a))))","(+.f64 (*.f64 2 (/.f64 1 a)) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 a))) (+.f64 (log.f64 1/2) (*.f64 1/2 (/.f64 (-.f64 (*.f64 4 (+.f64 1 (exp.f64 b))) 4) (pow.f64 a 2))))))","(+.f64 (*.f64 2 (/.f64 1 a)) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 a))) (+.f64 (log.f64 1/2) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 4 (+.f64 1 (exp.f64 b))) 4) (pow.f64 a 2))) (*.f64 1/6 (/.f64 (+.f64 16 (*.f64 -24 (+.f64 1 (exp.f64 b)))) (pow.f64 a 3)))))))","(+.f64 (log.f64 1/2) (*.f64 -2 (log.f64 (/.f64 -1 a))))","(+.f64 (log.f64 1/2) (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 a))) (*.f64 2 (/.f64 1 a))))","(+.f64 (*.f64 2 (/.f64 1 a)) (+.f64 (log.f64 1/2) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 4 (+.f64 1 (exp.f64 b))) 4) (pow.f64 a 2))) (*.f64 -2 (log.f64 (/.f64 -1 a))))))","(+.f64 (*.f64 2 (/.f64 1 a)) (+.f64 (log.f64 1/2) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 4 (+.f64 1 (exp.f64 b))) 4) (pow.f64 a 2))) (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 a))) (*.f64 -1/6 (/.f64 (-.f64 (*.f64 24 (+.f64 1 (exp.f64 b))) 16) (pow.f64 a 3)))))))","(log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)))","(+.f64 (/.f64 b (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))))","(+.f64 (/.f64 b (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (/.f64 1 (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2))) (pow.f64 b 2))) (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 b 3) (-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 3))) (/.f64 1 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)))) (*.f64 3 (/.f64 1 (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2)))))) (+.f64 (/.f64 b (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (/.f64 1 (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2))) (pow.f64 b 2))) (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))))))","(log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(*.f64 -1 (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (*.f64 -1 (log.f64 (+.f64 1 (exp.f64 b)))) (*.f64 a (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 b))))))","(+.f64 (*.f64 -1 (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 (*.f64 a (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 b))))) (*.f64 -1/2 (*.f64 (pow.f64 a 2) (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))))","(+.f64 (*.f64 -1 (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 a 3) (-.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3))) (*.f64 3 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (+.f64 (*.f64 a (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 b))))) (*.f64 -1/2 (*.f64 (pow.f64 a 2) (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))))))","a","(+.f64 a (*.f64 -1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 a))) (log.f64 1/2))))","(-.f64 (+.f64 a (*.f64 -1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 a))) (log.f64 1/2)))) (*.f64 2 (/.f64 1 a)))","(-.f64 (+.f64 a (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 4 (+.f64 1 (exp.f64 b))) 4) (pow.f64 a 2))) (*.f64 -1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 a))) (log.f64 1/2))))) (*.f64 2 (/.f64 1 a)))","a","(+.f64 a (*.f64 -1 (+.f64 (log.f64 1/2) (*.f64 -2 (log.f64 (/.f64 -1 a))))))","(-.f64 (+.f64 a (*.f64 -1 (+.f64 (log.f64 1/2) (*.f64 -2 (log.f64 (/.f64 -1 a)))))) (*.f64 2 (/.f64 1 a)))","(-.f64 (+.f64 a (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 4 (+.f64 1 (exp.f64 b))) 4) (pow.f64 a 2))) (*.f64 -1 (+.f64 (log.f64 1/2) (*.f64 -2 (log.f64 (/.f64 -1 a))))))) (*.f64 2 (/.f64 1 a)))","(-.f64 a (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))))","(-.f64 (+.f64 a (*.f64 -1 (/.f64 b (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))))) (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (/.f64 1 (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2))) (pow.f64 b 2))) (+.f64 a (*.f64 -1 (/.f64 b (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)))))) (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (/.f64 1 (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2))) (pow.f64 b 2))) (+.f64 a (+.f64 (*.f64 -1 (/.f64 b (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)))) (*.f64 -1/6 (*.f64 (pow.f64 b 3) (-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 3))) (/.f64 1 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)))) (*.f64 3 (/.f64 1 (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2))))))))) (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))))","(-.f64 a (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))))","(-.f64 a (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))))","(-.f64 a (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))))","(-.f64 a (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))))","(-.f64 a (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))))","(-.f64 a (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))))","(-.f64 a (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))))","(-.f64 a (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))))"]],"method":["egg-herbie"],"outputs":[["(log.f64 (+.f64 1 (exp.f64 b)))","(log1p.f64 (exp.f64 b))","(+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))","(+.f64 (log1p.f64 (exp.f64 b)) (/.f64 a (+.f64 1 (exp.f64 b))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 a 2) (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b)))))","(fma.f64 1/2 (*.f64 (*.f64 a a) (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (+.f64 (log1p.f64 (exp.f64 b)) (/.f64 a (+.f64 1 (exp.f64 b)))))","(+.f64 (log1p.f64 (exp.f64 b)) (fma.f64 (*.f64 a (*.f64 a 1/2)) (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (/.f64 a (+.f64 1 (exp.f64 b)))))","(+.f64 (log1p.f64 (exp.f64 b)) (fma.f64 1/2 (*.f64 a (*.f64 a (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (/.f64 a (+.f64 1 (exp.f64 b)))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 a 3) (-.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3))) (*.f64 3 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 a 2) (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (+.f64 (/.f64 a (+.f64 1 (exp.f64 b))) (log.f64 (+.f64 1 (exp.f64 b))))))","(fma.f64 1/6 (*.f64 (pow.f64 a 3) (-.f64 (/.f64 2 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (/.f64 3 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (fma.f64 1/2 (*.f64 (*.f64 a a) (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (+.f64 (log1p.f64 (exp.f64 b)) (/.f64 a (+.f64 1 (exp.f64 b))))))","(fma.f64 1/6 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 2 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (/.f64 -3 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (+.f64 (log1p.f64 (exp.f64 b)) (fma.f64 (*.f64 a (*.f64 a 1/2)) (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (/.f64 a (+.f64 1 (exp.f64 b))))))","(+.f64 (log1p.f64 (exp.f64 b)) (fma.f64 1/6 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 2 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (/.f64 -3 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (fma.f64 1/2 (*.f64 a (*.f64 a (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (/.f64 a (+.f64 1 (exp.f64 b))))))","(+.f64 (log.f64 1/2) (*.f64 -2 (log.f64 (/.f64 1 a))))","(fma.f64 -2 (neg.f64 (log.f64 a)) (log.f64 1/2))","(+.f64 (log.f64 1/2) (*.f64 2 (log.f64 a)))","(+.f64 (*.f64 -2 (log.f64 (/.f64 1 a))) (+.f64 (log.f64 1/2) (*.f64 2 (/.f64 1 a))))","(+.f64 (fma.f64 -2 (neg.f64 (log.f64 a)) (log.f64 1/2)) (/.f64 2 a))","(+.f64 (/.f64 2 a) (fma.f64 -2 (neg.f64 (log.f64 a)) (log.f64 1/2)))","(+.f64 (log.f64 1/2) (+.f64 (*.f64 2 (log.f64 a)) (/.f64 2 a)))","(+.f64 (*.f64 2 (/.f64 1 a)) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 a))) (+.f64 (log.f64 1/2) (*.f64 1/2 (/.f64 (-.f64 (*.f64 4 (+.f64 1 (exp.f64 b))) 4) (pow.f64 a 2))))))","(+.f64 (/.f64 2 a) (+.f64 (fma.f64 -2 (neg.f64 (log.f64 a)) (log.f64 1/2)) (*.f64 1/2 (/.f64 (fma.f64 4 (+.f64 1 (exp.f64 b)) -4) (*.f64 a a)))))","(+.f64 (/.f64 2 a) (fma.f64 -2 (neg.f64 (log.f64 a)) (fma.f64 1/2 (/.f64 (fma.f64 (+.f64 1 (exp.f64 b)) 4 -4) (*.f64 a a)) (log.f64 1/2))))","(+.f64 (*.f64 2 (log.f64 a)) (+.f64 (log.f64 1/2) (fma.f64 (/.f64 1/2 a) (/.f64 (+.f64 0 (*.f64 (exp.f64 b) 4)) a) (/.f64 2 a))))","(+.f64 (fma.f64 1/2 (/.f64 (*.f64 (exp.f64 b) 4) (*.f64 a a)) (log.f64 1/2)) (+.f64 (*.f64 2 (log.f64 a)) (/.f64 2 a)))","(+.f64 (*.f64 2 (/.f64 1 a)) (+.f64 (*.f64 -2 (log.f64 (/.f64 1 a))) (+.f64 (log.f64 1/2) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 4 (+.f64 1 (exp.f64 b))) 4) (pow.f64 a 2))) (*.f64 1/6 (/.f64 (+.f64 16 (*.f64 -24 (+.f64 1 (exp.f64 b)))) (pow.f64 a 3)))))))","(+.f64 (/.f64 2 a) (+.f64 (fma.f64 -2 (neg.f64 (log.f64 a)) (log.f64 1/2)) (fma.f64 1/2 (/.f64 (fma.f64 4 (+.f64 1 (exp.f64 b)) -4) (*.f64 a a)) (*.f64 1/6 (/.f64 (+.f64 16 (*.f64 (+.f64 1 (exp.f64 b)) -24)) (pow.f64 a 3))))))","(+.f64 (/.f64 2 a) (+.f64 (fma.f64 1/2 (/.f64 (fma.f64 (+.f64 1 (exp.f64 b)) 4 -4) (*.f64 a a)) (/.f64 (*.f64 1/6 (+.f64 -8 (*.f64 (exp.f64 b) -24))) (pow.f64 a 3))) (fma.f64 -2 (neg.f64 (log.f64 a)) (log.f64 1/2))))","(+.f64 (*.f64 2 (log.f64 a)) (+.f64 (/.f64 2 a) (fma.f64 (/.f64 1/2 a) (/.f64 (+.f64 0 (*.f64 (exp.f64 b) 4)) a) (fma.f64 -1/6 (/.f64 (+.f64 (*.f64 (exp.f64 b) 24) 8) (pow.f64 a 3)) (log.f64 1/2)))))","(+.f64 (*.f64 2 (log.f64 a)) (+.f64 (/.f64 2 a) (fma.f64 1/2 (/.f64 (*.f64 (exp.f64 b) 4) (*.f64 a a)) (fma.f64 -1/6 (/.f64 (+.f64 (*.f64 (exp.f64 b) 24) 8) (pow.f64 a 3)) (log.f64 1/2)))))","(+.f64 (log.f64 1/2) (*.f64 -2 (log.f64 (/.f64 -1 a))))","(fma.f64 -2 (log.f64 (/.f64 -1 a)) (log.f64 1/2))","(+.f64 (log.f64 1/2) (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 a))) (*.f64 2 (/.f64 1 a))))","(+.f64 (log.f64 1/2) (fma.f64 -2 (log.f64 (/.f64 -1 a)) (/.f64 2 a)))","(+.f64 (/.f64 2 a) (fma.f64 -2 (log.f64 (/.f64 -1 a)) (log.f64 1/2)))","(+.f64 (*.f64 2 (/.f64 1 a)) (+.f64 (log.f64 1/2) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 4 (+.f64 1 (exp.f64 b))) 4) (pow.f64 a 2))) (*.f64 -2 (log.f64 (/.f64 -1 a))))))","(+.f64 (/.f64 2 a) (+.f64 (log.f64 1/2) (fma.f64 1/2 (/.f64 (fma.f64 4 (+.f64 1 (exp.f64 b)) -4) (*.f64 a a)) (*.f64 -2 (log.f64 (/.f64 -1 a))))))","(+.f64 (fma.f64 1/2 (/.f64 (fma.f64 (+.f64 1 (exp.f64 b)) 4 -4) (*.f64 a a)) (log.f64 1/2)) (fma.f64 -2 (log.f64 (/.f64 -1 a)) (/.f64 2 a)))","(+.f64 (/.f64 2 a) (fma.f64 1/2 (/.f64 (+.f64 0 (*.f64 (exp.f64 b) 4)) (*.f64 a a)) (fma.f64 -2 (log.f64 (/.f64 -1 a)) (log.f64 1/2))))","(+.f64 (/.f64 2 a) (fma.f64 1/2 (/.f64 (*.f64 (exp.f64 b) 4) (*.f64 a a)) (fma.f64 -2 (log.f64 (/.f64 -1 a)) (log.f64 1/2))))","(+.f64 (*.f64 2 (/.f64 1 a)) (+.f64 (log.f64 1/2) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (*.f64 4 (+.f64 1 (exp.f64 b))) 4) (pow.f64 a 2))) (+.f64 (*.f64 -2 (log.f64 (/.f64 -1 a))) (*.f64 -1/6 (/.f64 (-.f64 (*.f64 24 (+.f64 1 (exp.f64 b))) 16) (pow.f64 a 3)))))))","(+.f64 (/.f64 2 a) (+.f64 (log.f64 1/2) (fma.f64 1/2 (/.f64 (fma.f64 4 (+.f64 1 (exp.f64 b)) -4) (*.f64 a a)) (fma.f64 -2 (log.f64 (/.f64 -1 a)) (*.f64 -1/6 (/.f64 (fma.f64 24 (+.f64 1 (exp.f64 b)) -16) (pow.f64 a 3)))))))","(+.f64 (log.f64 1/2) (+.f64 (fma.f64 1/2 (/.f64 (fma.f64 (+.f64 1 (exp.f64 b)) 4 -4) (*.f64 a a)) (fma.f64 -1/6 (/.f64 (fma.f64 (+.f64 1 (exp.f64 b)) 24 -16) (pow.f64 a 3)) (*.f64 -2 (log.f64 (/.f64 -1 a))))) (/.f64 2 a)))","(+.f64 (fma.f64 (/.f64 1/2 a) (/.f64 (+.f64 0 (*.f64 (exp.f64 b) 4)) a) (fma.f64 -1/6 (/.f64 (+.f64 (*.f64 (exp.f64 b) 24) 8) (pow.f64 a 3)) (log.f64 1/2))) (fma.f64 -2 (log.f64 (/.f64 -1 a)) (/.f64 2 a)))","(+.f64 (fma.f64 1/2 (/.f64 (*.f64 (exp.f64 b) 4) (*.f64 a a)) (fma.f64 -1/6 (/.f64 (+.f64 (*.f64 (exp.f64 b) 24) 8) (pow.f64 a 3)) (log.f64 1/2))) (fma.f64 -2 (log.f64 (/.f64 -1 a)) (/.f64 2 a)))","(log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)))","(log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)))","(log.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)))","(+.f64 (/.f64 b (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))))","(+.f64 (log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))) (/.f64 b (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))))","(+.f64 (log.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (/.f64 b (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))))","(+.f64 (/.f64 b (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (/.f64 1 (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2))) (pow.f64 b 2))) (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)))))","(+.f64 (/.f64 b (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))) (fma.f64 1/2 (*.f64 (-.f64 (/.f64 1 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))) (/.f64 1 (pow.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)) 2))) (*.f64 b b)) (log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)))))","(+.f64 (/.f64 b (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (fma.f64 1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (/.f64 -1 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2))) (*.f64 b b)) (log.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)))))","(fma.f64 (*.f64 b b) (+.f64 (/.f64 1/2 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (/.f64 -1/2 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2))) (+.f64 (log.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (/.f64 b (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 b 3) (-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 3))) (/.f64 1 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)))) (*.f64 3 (/.f64 1 (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2)))))) (+.f64 (/.f64 b (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (+.f64 (*.f64 1/2 (*.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (/.f64 1 (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2))) (pow.f64 b 2))) (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))))))","(fma.f64 1/6 (*.f64 (pow.f64 b 3) (+.f64 (/.f64 2 (pow.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)) 3)) (-.f64 (/.f64 1 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))) (/.f64 3 (pow.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)) 2))))) (+.f64 (/.f64 b (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))) (fma.f64 1/2 (*.f64 (-.f64 (/.f64 1 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))) (/.f64 1 (pow.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)) 2))) (*.f64 b b)) (log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))))))","(+.f64 (fma.f64 1/2 (*.f64 (+.f64 (/.f64 1 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (/.f64 -1 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2))) (*.f64 b b)) (log.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)))) (fma.f64 1/6 (*.f64 (pow.f64 b 3) (+.f64 (/.f64 1 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (+.f64 (/.f64 2 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 3)) (/.f64 -3 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2))))) (/.f64 b (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)))))","(+.f64 (fma.f64 (*.f64 b b) (+.f64 (/.f64 1/2 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (/.f64 -1/2 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2))) (log.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)))) (fma.f64 1/6 (*.f64 (pow.f64 b 3) (+.f64 (/.f64 1 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (+.f64 (/.f64 2 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 3)) (/.f64 -3 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2))))) (/.f64 b (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)))))","(log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a))))","(log.f64 (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1)))","(log1p.f64 (+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a)))","(log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a))))","(log.f64 (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1)))","(log1p.f64 (+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a)))","(log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a))))","(log.f64 (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1)))","(log1p.f64 (+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a)))","(log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a))))","(log.f64 (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1)))","(log1p.f64 (+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a)))","(log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a))))","(log.f64 (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1)))","(log1p.f64 (+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a)))","(log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a))))","(log.f64 (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1)))","(log1p.f64 (+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a)))","(log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a))))","(log.f64 (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1)))","(log1p.f64 (+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a)))","(log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b)))))","(log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a))))","(log.f64 (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1)))","(log1p.f64 (+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a)))","(*.f64 -1 (log.f64 (+.f64 1 (exp.f64 b))))","(neg.f64 (log1p.f64 (exp.f64 b)))","(+.f64 (*.f64 -1 (log.f64 (+.f64 1 (exp.f64 b)))) (*.f64 a (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 b))))))","(fma.f64 -1 (log1p.f64 (exp.f64 b)) (*.f64 a (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 b))))))","(fma.f64 a (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 b)))) (neg.f64 (log1p.f64 (exp.f64 b))))","(+.f64 a (-.f64 (/.f64 (*.f64 -1 a) (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b))))","(+.f64 a (-.f64 (/.f64 (neg.f64 a) (+.f64 1 (exp.f64 b))) (log1p.f64 (exp.f64 b))))","(+.f64 (*.f64 -1 (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 (*.f64 a (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 b))))) (*.f64 -1/2 (*.f64 (pow.f64 a 2) (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))))","(fma.f64 -1 (log1p.f64 (exp.f64 b)) (fma.f64 a (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 b)))) (*.f64 (*.f64 (*.f64 a a) (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) -1/2)))","(-.f64 (fma.f64 (*.f64 (*.f64 a a) -1/2) (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (*.f64 a (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 b)))))) (log1p.f64 (exp.f64 b)))","(-.f64 (fma.f64 (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (*.f64 a (*.f64 a -1/2)) (+.f64 a (/.f64 (*.f64 -1 a) (+.f64 1 (exp.f64 b))))) (log1p.f64 (exp.f64 b)))","(-.f64 (+.f64 a (/.f64 (neg.f64 a) (+.f64 1 (exp.f64 b)))) (fma.f64 (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (*.f64 a (*.f64 a 1/2)) (log1p.f64 (exp.f64 b))))","(+.f64 (*.f64 -1 (log.f64 (+.f64 1 (exp.f64 b)))) (+.f64 (*.f64 -1/6 (*.f64 (pow.f64 a 3) (-.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 3))) (*.f64 3 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (+.f64 (*.f64 a (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 b))))) (*.f64 -1/2 (*.f64 (pow.f64 a 2) (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))))))","(fma.f64 -1 (log1p.f64 (exp.f64 b)) (fma.f64 -1/6 (*.f64 (pow.f64 a 3) (-.f64 (/.f64 2 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (/.f64 3 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (fma.f64 a (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 b)))) (*.f64 (*.f64 (*.f64 a a) (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) -1/2))))","(-.f64 (fma.f64 (*.f64 (pow.f64 a 3) (+.f64 (/.f64 2 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (/.f64 -3 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) -1/6 (fma.f64 (*.f64 (*.f64 a a) -1/2) (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (*.f64 a (-.f64 1 (/.f64 1 (+.f64 1 (exp.f64 b))))))) (log1p.f64 (exp.f64 b)))","(fma.f64 (+.f64 (/.f64 2 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (/.f64 -3 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (*.f64 (pow.f64 a 3) -1/6) (-.f64 (fma.f64 (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (*.f64 a (*.f64 a -1/2)) (+.f64 a (/.f64 (*.f64 -1 a) (+.f64 1 (exp.f64 b))))) (log1p.f64 (exp.f64 b))))","(fma.f64 (+.f64 (/.f64 2 (pow.f64 (+.f64 1 (exp.f64 b)) 3)) (/.f64 -3 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (*.f64 (pow.f64 a 3) -1/6) (-.f64 (+.f64 a (/.f64 (neg.f64 a) (+.f64 1 (exp.f64 b)))) (fma.f64 (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (*.f64 a (*.f64 a 1/2)) (log1p.f64 (exp.f64 b)))))","a","(+.f64 a (*.f64 -1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 a))) (log.f64 1/2))))","(+.f64 a (neg.f64 (fma.f64 -2 (neg.f64 (log.f64 a)) (log.f64 1/2))))","(-.f64 a (fma.f64 -2 (neg.f64 (log.f64 a)) (log.f64 1/2)))","(fma.f64 -2 (log.f64 a) (-.f64 a (log.f64 1/2)))","(-.f64 (+.f64 a (*.f64 -1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 a))) (log.f64 1/2)))) (*.f64 2 (/.f64 1 a)))","(+.f64 a (-.f64 (neg.f64 (fma.f64 -2 (neg.f64 (log.f64 a)) (log.f64 1/2))) (/.f64 2 a)))","(+.f64 (-.f64 a (fma.f64 -2 (neg.f64 (log.f64 a)) (log.f64 1/2))) (/.f64 -2 a))","(+.f64 (fma.f64 -2 (log.f64 a) (-.f64 a (log.f64 1/2))) (/.f64 -2 a))","(-.f64 (+.f64 a (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 4 (+.f64 1 (exp.f64 b))) 4) (pow.f64 a 2))) (*.f64 -1 (+.f64 (*.f64 -2 (log.f64 (/.f64 1 a))) (log.f64 1/2))))) (*.f64 2 (/.f64 1 a)))","(-.f64 (+.f64 a (fma.f64 -1/2 (/.f64 (fma.f64 4 (+.f64 1 (exp.f64 b)) -4) (*.f64 a a)) (neg.f64 (fma.f64 -2 (neg.f64 (log.f64 a)) (log.f64 1/2))))) (/.f64 2 a))","(+.f64 (-.f64 (*.f64 (/.f64 -1/2 a) (/.f64 (fma.f64 (+.f64 1 (exp.f64 b)) 4 -4) a)) (fma.f64 -2 (neg.f64 (log.f64 a)) (log.f64 1/2))) (-.f64 a (/.f64 2 a)))","(+.f64 (fma.f64 -2 (log.f64 a) (-.f64 a (log.f64 1/2))) (fma.f64 (/.f64 (+.f64 0 (*.f64 (exp.f64 b) 4)) (*.f64 a a)) -1/2 (/.f64 -2 a)))","(+.f64 (fma.f64 -2 (log.f64 a) (-.f64 a (log.f64 1/2))) (fma.f64 (/.f64 -1/2 (*.f64 a a)) (*.f64 (exp.f64 b) 4) (/.f64 -2 a)))","a","(+.f64 a (*.f64 -1 (+.f64 (log.f64 1/2) (*.f64 -2 (log.f64 (/.f64 -1 a))))))","(+.f64 a (neg.f64 (+.f64 (log.f64 1/2) (*.f64 -2 (log.f64 (/.f64 -1 a))))))","(-.f64 a (fma.f64 -2 (log.f64 (/.f64 -1 a)) (log.f64 1/2)))","(-.f64 (+.f64 a (*.f64 -1 (+.f64 (log.f64 1/2) (*.f64 -2 (log.f64 (/.f64 -1 a)))))) (*.f64 2 (/.f64 1 a)))","(-.f64 (+.f64 a (neg.f64 (+.f64 (log.f64 1/2) (*.f64 -2 (log.f64 (/.f64 -1 a)))))) (/.f64 2 a))","(+.f64 (-.f64 a (fma.f64 -2 (log.f64 (/.f64 -1 a)) (log.f64 1/2))) (/.f64 -2 a))","(+.f64 (-.f64 a (log.f64 1/2)) (fma.f64 2 (log.f64 (/.f64 -1 a)) (/.f64 -2 a)))","(+.f64 (-.f64 (/.f64 -2 a) (log.f64 1/2)) (fma.f64 2 (log.f64 (/.f64 -1 a)) a))","(-.f64 (+.f64 a (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (*.f64 4 (+.f64 1 (exp.f64 b))) 4) (pow.f64 a 2))) (*.f64 -1 (+.f64 (log.f64 1/2) (*.f64 -2 (log.f64 (/.f64 -1 a))))))) (*.f64 2 (/.f64 1 a)))","(-.f64 (+.f64 a (fma.f64 -1/2 (/.f64 (fma.f64 4 (+.f64 1 (exp.f64 b)) -4) (*.f64 a a)) (neg.f64 (+.f64 (log.f64 1/2) (*.f64 -2 (log.f64 (/.f64 -1 a))))))) (/.f64 2 a))","(+.f64 (-.f64 (*.f64 (/.f64 -1/2 a) (/.f64 (fma.f64 (+.f64 1 (exp.f64 b)) 4 -4) a)) (fma.f64 -2 (log.f64 (/.f64 -1 a)) (log.f64 1/2))) (-.f64 a (/.f64 2 a)))","(-.f64 (fma.f64 (/.f64 (+.f64 0 (*.f64 (exp.f64 b) 4)) (*.f64 a a)) -1/2 a) (+.f64 (/.f64 2 a) (fma.f64 -2 (log.f64 (/.f64 -1 a)) (log.f64 1/2))))","(+.f64 (-.f64 (/.f64 -2 a) (fma.f64 -2 (log.f64 (/.f64 -1 a)) (log.f64 1/2))) (fma.f64 (/.f64 (*.f64 (exp.f64 b) 4) (*.f64 a a)) -1/2 a))","(-.f64 a (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))))","(-.f64 a (log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))))","(-.f64 a (log.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))))","(-.f64 (+.f64 a (*.f64 -1 (/.f64 b (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))))) (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))))","(-.f64 (+.f64 a (neg.f64 (/.f64 b (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))))) (log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))))","(-.f64 (-.f64 a (/.f64 b (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)))) (log.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))))","(-.f64 a (+.f64 (log.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (/.f64 b (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)))))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (/.f64 1 (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2))) (pow.f64 b 2))) (+.f64 a (*.f64 -1 (/.f64 b (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)))))) (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))))","(-.f64 (fma.f64 -1/2 (*.f64 (-.f64 (/.f64 1 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))) (/.f64 1 (pow.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)) 2))) (*.f64 b b)) (+.f64 a (neg.f64 (/.f64 b (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)))))) (log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))))","(fma.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (/.f64 -1 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2))) (*.f64 b b)) -1/2 (-.f64 (-.f64 a (/.f64 b (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)))) (log.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)))))","(-.f64 (-.f64 (fma.f64 (*.f64 b b) (+.f64 (/.f64 -1/2 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (/.f64 1/2 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2))) a) (/.f64 b (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)))) (log.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))))","(-.f64 (-.f64 a (/.f64 b (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)))) (fma.f64 (*.f64 b b) (+.f64 (/.f64 1/2 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (/.f64 -1/2 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2))) (log.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)))))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (-.f64 (/.f64 1 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))) (/.f64 1 (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2))) (pow.f64 b 2))) (+.f64 a (+.f64 (*.f64 -1 (/.f64 b (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)))) (*.f64 -1/6 (*.f64 (pow.f64 b 3) (-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 3))) (/.f64 1 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)))) (*.f64 3 (/.f64 1 (pow.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a)) 2))))))))) (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 2 a))))","(-.f64 (fma.f64 -1/2 (*.f64 (-.f64 (/.f64 1 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))) (/.f64 1 (pow.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)) 2))) (*.f64 b b)) (+.f64 a (fma.f64 -1 (/.f64 b (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))) (*.f64 -1/6 (*.f64 (pow.f64 b 3) (+.f64 (/.f64 2 (pow.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)) 3)) (-.f64 (/.f64 1 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))) (/.f64 3 (pow.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2)) 2))))))))) (log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 a 2))))","(+.f64 (fma.f64 (*.f64 (+.f64 (/.f64 1 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (/.f64 -1 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2))) (*.f64 b b)) -1/2 a) (-.f64 (fma.f64 (*.f64 -1/6 (pow.f64 b 3)) (+.f64 (/.f64 1 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (+.f64 (/.f64 2 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 3)) (/.f64 -3 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2)))) (/.f64 (neg.f64 b) (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)))) (log.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)))))","(fma.f64 (*.f64 b b) (+.f64 (/.f64 -1/2 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (/.f64 1/2 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2))) (-.f64 (-.f64 (fma.f64 (+.f64 (/.f64 1 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (+.f64 (/.f64 2 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 3)) (/.f64 -3 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2)))) (*.f64 -1/6 (pow.f64 b 3)) a) (/.f64 b (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)))) (log.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)))))","(-.f64 (fma.f64 (+.f64 (/.f64 1 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (+.f64 (/.f64 2 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 3)) (/.f64 -3 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2)))) (*.f64 -1/6 (pow.f64 b 3)) (-.f64 (fma.f64 (*.f64 b b) (+.f64 (/.f64 -1/2 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))) (/.f64 1/2 (pow.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2)) 2))) a) (/.f64 b (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))))) (log.f64 (+.f64 a (fma.f64 1/2 (*.f64 a a) 2))))","(-.f64 a (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))))","(-.f64 a (log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))))","(-.f64 a (log.f64 (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))))","(-.f64 a (log1p.f64 (+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))))","(-.f64 a (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))))","(-.f64 a (log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))))","(-.f64 a (log.f64 (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))))","(-.f64 a (log1p.f64 (+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))))","(-.f64 a (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))))","(-.f64 a (log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))))","(-.f64 a (log.f64 (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))))","(-.f64 a (log1p.f64 (+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))))","(-.f64 a (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))))","(-.f64 a (log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))))","(-.f64 a (log.f64 (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))))","(-.f64 a (log1p.f64 (+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))))","(-.f64 a (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))))","(-.f64 a (log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))))","(-.f64 a (log.f64 (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))))","(-.f64 a (log1p.f64 (+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))))","(-.f64 a (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))))","(-.f64 a (log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))))","(-.f64 a (log.f64 (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))))","(-.f64 a (log1p.f64 (+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))))","(-.f64 a (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))))","(-.f64 a (log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))))","(-.f64 a (log.f64 (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))))","(-.f64 a (log1p.f64 (+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))))","(-.f64 a (log.f64 (+.f64 (*.f64 1/2 (pow.f64 a 2)) (+.f64 1 (+.f64 a (exp.f64 b))))))","(-.f64 a (log.f64 (fma.f64 1/2 (*.f64 a a) (+.f64 1 (+.f64 (exp.f64 b) a)))))","(-.f64 a (log.f64 (+.f64 (+.f64 (exp.f64 b) a) (fma.f64 1/2 (*.f64 a a) 1))))","(-.f64 a (log1p.f64 (+.f64 (exp.f64 b) (fma.f64 1/2 (*.f64 a a) a))))"]],"stop":[["node limit",1]],"time":54.260009765625,"type":"simplify"},{"compiler":[[5393,3189]],"time":55.22900390625,"type":"eval"},{"alts":[["(/.f64 (exp.f64 a) (fma.f64 (pow.f64 (cbrt.f64 (exp.f64 b)) 2) (cbrt.f64 (exp.f64 b)) (exp.f64 a)))","fresh",0.521816259768442],["(exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))","done",0.3737487534501867],["(exp.f64 (-.f64 a (+.f64 (log1p.f64 (exp.f64 b)) (fma.f64 1/2 (*.f64 a (*.f64 a (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (/.f64 a (+.f64 1 (exp.f64 b)))))))","next",0.33113484653116365]],"compiler":[[16,9],[15,10],[36,25],[16,9],[36,25]],"count":[[182,3]],"kept":[{"done":[0,0],"fresh":[2,1],"new":[179,1],"picked":[1,1]}],"min-error":[0],"time":49.219970703125,"type":"prune"},{"compiler":[[219,141]],"locations":[["(/.f64 1 (+.f64 1 (exp.f64 b)))",0.01953125,true],["(/.f64 a (+.f64 1 (exp.f64 b)))",0.01953125,true],["(+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))",0.0234375,true],["(pow.f64 (+.f64 1 (exp.f64 b)) 2)",0.03515625,true]],"time":45.841064453125,"type":"localize"},{"count":[[4,24]],"series":[["(/.f64 1 (+.f64 1 (exp.f64 b)))","b","-inf",0.166015625],["(/.f64 1 (+.f64 1 (exp.f64 b)))","b","inf",0.14404296875],["(/.f64 1 (+.f64 1 (exp.f64 b)))","b","0",0.221923828125],["(/.f64 a (+.f64 1 (exp.f64 b)))","b","-inf",0.405029296875],["(/.f64 a (+.f64 1 (exp.f64 b)))","b","inf",0.385009765625],["(/.f64 a (+.f64 1 (exp.f64 b)))","b","0",0.369873046875],["(/.f64 a (+.f64 1 (exp.f64 b)))","a","-inf",0.39794921875],["(/.f64 a (+.f64 1 (exp.f64 b)))","a","inf",0.532958984375],["(/.f64 a (+.f64 1 (exp.f64 b)))","a","0",0.382080078125],["(+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","b","-inf",0.721923828125],["(+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","b","inf",0.717041015625],["(+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","b","0",0.44091796875],["(pow.f64 (+.f64 1 (exp.f64 b)) 2)","b","-inf",0.35888671875],["(pow.f64 (+.f64 1 (exp.f64 b)) 2)","b","inf",0.403076171875],["(pow.f64 (+.f64 1 (exp.f64 b)) 2)","b","0",0.2529296875]],"time":6.0830078125,"type":"series"},{"count":[[4,178]],"egraph":[[2,3927,48,0.029900583999999997],[1,285,48,0.005373251],[0,13,50,0.000392292]],"inputs":[["(pow.f64 (+.f64 1 (exp.f64 b)) 2)","(+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(/.f64 a (+.f64 1 (exp.f64 b)))","(/.f64 1 (+.f64 1 (exp.f64 b)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (exp.f64 b)) (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (exp.f64 b)) (*.f64 (exp.f64 b) (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b)) (+.f64 1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (exp.f64 b) (+.f64 1 (exp.f64 b))) (+.f64 1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (exp.f64 b)) (+.f64 1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) (*.f64 (cbrt.f64 (+.f64 1 (exp.f64 b))) (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 4)) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 1 (sqrt.f64 (exp.f64 b))) (*.f64 (hypot.f64 1 (sqrt.f64 (exp.f64 b))) (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 1 (exp.f64 b)) (hypot.f64 1 (sqrt.f64 (exp.f64 b)))) (hypot.f64 1 (sqrt.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 1 (exp.f64 b)) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (cbrt.f64 (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (exp.f64 b) 2)) (-.f64 1 (pow.f64 (exp.f64 b) 2))) (*.f64 (-.f64 1 (exp.f64 b)) (-.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (exp.f64 (*.f64 b 3))) (+.f64 1 (exp.f64 (*.f64 b 3)))) (*.f64 (fma.f64 (exp.f64 b) (expm1.f64 b) 1) (fma.f64 (exp.f64 b) (expm1.f64 b) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (exp.f64 b) 2)) (+.f64 1 (exp.f64 (*.f64 b 3)))) (*.f64 (-.f64 1 (exp.f64 b)) (fma.f64 (exp.f64 b) (expm1.f64 b) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (exp.f64 (*.f64 b 3))) (-.f64 1 (pow.f64 (exp.f64 b) 2))) (*.f64 (fma.f64 (exp.f64 b) (expm1.f64 b) 1) (-.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (exp.f64 (*.f64 b 3))) (+.f64 1 (exp.f64 b))) (fma.f64 (exp.f64 b) (expm1.f64 b) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (exp.f64 b) 2)) (+.f64 1 (exp.f64 b))) (-.f64 1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (exp.f64 b)) (+.f64 1 (exp.f64 (*.f64 b 3)))) (fma.f64 (exp.f64 b) (expm1.f64 b) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (exp.f64 b)) (-.f64 1 (pow.f64 (exp.f64 b) 2))) (-.f64 1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log1p.f64 (exp.f64 b))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 1 (exp.f64 b)) (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 1 (exp.f64 b)) (*.f64 (exp.f64 b) (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (exp.f64 b) (+.f64 1 (exp.f64 b)) (+.f64 1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (exp.f64 b)) 1 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (exp.f64 b)) 1 (*.f64 (exp.f64 b) (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b) (+.f64 1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 1 (exp.f64 b))) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 1 (exp.f64 b))) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) (*.f64 (exp.f64 b) (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) (cbrt.f64 (+.f64 1 (exp.f64 b))) (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) (cbrt.f64 (+.f64 1 (exp.f64 b))) (*.f64 (exp.f64 b) (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 1 (sqrt.f64 (exp.f64 b))) (hypot.f64 1 (sqrt.f64 (exp.f64 b))) (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 1 (sqrt.f64 (exp.f64 b))) (hypot.f64 1 (sqrt.f64 (exp.f64 b))) (*.f64 (exp.f64 b) (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (exp.f64 (*.f64 b 3))) (/.f64 1 (fma.f64 (exp.f64 b) (expm1.f64 b) 1)) (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (exp.f64 (*.f64 b 3))) (/.f64 1 (fma.f64 (exp.f64 b) (expm1.f64 b) 1)) (*.f64 (exp.f64 b) (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (pow.f64 (exp.f64 b) 2)) (/.f64 1 (-.f64 1 (exp.f64 b))) (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (pow.f64 (exp.f64 b) 2)) (/.f64 1 (-.f64 1 (exp.f64 b))) (*.f64 (exp.f64 b) (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 4))) (sqrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 4))) (sqrt.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (*.f64 (exp.f64 b) (+.f64 1 (exp.f64 b))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (+.f64 1 (exp.f64 b)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (pow.f64 (+.f64 1 (exp.f64 b)) -2))) (/.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4)) (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (pow.f64 (+.f64 1 (exp.f64 b)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (+.f64 1 (exp.f64 b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b))) (+.f64 1 (exp.f64 b))) (pow.f64 (/.f64 (cbrt.f64 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b))) (+.f64 1 (exp.f64 b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cbrt.f64 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b))) (+.f64 1 (exp.f64 b))) 2) (/.f64 (cbrt.f64 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b))) (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -1/2) (/.f64 (sqrt.f64 -1) (+.f64 1 (exp.f64 b)))) (hypot.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -1/2) (/.f64 (sqrt.f64 -1) (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b)) (pow.f64 (+.f64 1 (exp.f64 b)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2) 3) (pow.f64 (+.f64 1 (exp.f64 b)) -3)) (/.f64 1 (-.f64 (+.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4))) (/.f64 1 (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (pow.f64 (+.f64 1 (exp.f64 b)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 3) (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (+.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 3))) (fma.f64 -1 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2) 3) (pow.f64 (+.f64 1 (exp.f64 b)) -3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (pow.f64 (+.f64 1 (exp.f64 b)) -2)) (-.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b)) (pow.f64 (+.f64 1 (exp.f64 b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2) 3) (pow.f64 (+.f64 1 (exp.f64 b)) -3)) (-.f64 (+.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2) 3) (pow.f64 (+.f64 1 (exp.f64 b)) -3)) (+.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4)) (-.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4))) (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (pow.f64 (+.f64 1 (exp.f64 b)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b))) (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 -1 (pow.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2) 3) (pow.f64 (+.f64 1 (exp.f64 b)) -3))) (neg.f64 (-.f64 (+.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4)))) (neg.f64 (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (pow.f64 (+.f64 1 (exp.f64 b)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2) (+.f64 1 (exp.f64 b))) (*.f64 (+.f64 1 (exp.f64 b)) (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) (*.f64 (+.f64 -1 (neg.f64 (exp.f64 b))) 1)) (*.f64 (+.f64 -1 (neg.f64 (exp.f64 b))) (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2) -1 (+.f64 1 (exp.f64 b))) (*.f64 (+.f64 1 (exp.f64 b)) (*.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (*.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2) -1) (*.f64 (+.f64 -1 (neg.f64 (exp.f64 b))) 1)) (*.f64 (+.f64 -1 (neg.f64 (exp.f64 b))) (*.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2) (*.f64 (+.f64 -1 (neg.f64 (exp.f64 b))) -1)) (*.f64 (+.f64 -1 (neg.f64 (exp.f64 b))) (pow.f64 (+.f64 1 (exp.f64 b)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 1 (exp.f64 b)) (*.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) 1)) (*.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 1 (exp.f64 b)) (*.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2) -1) 1)) (*.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2) -1) (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 1 (exp.f64 b)) -1 (*.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) -1)) (*.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) (+.f64 -1 (neg.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 1 (exp.f64 b)) -1 (*.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2) -1) -1)) (*.f64 (*.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2) -1) (+.f64 -1 (neg.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (+.f64 -1 (neg.f64 (exp.f64 b))) (*.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2) -1)) (*.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2) (+.f64 -1 (neg.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4)) (pow.f64 (+.f64 1 (exp.f64 b)) -2)) (-.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)) (/.f64 1 (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b)) (+.f64 1 (exp.f64 b))) (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (+.f64 1 (exp.f64 b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (+.f64 1 (exp.f64 b)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b))) (+.f64 1 (exp.f64 b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -1/2) (/.f64 (sqrt.f64 -1) (+.f64 1 (exp.f64 b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (+.f64 1 (exp.f64 b)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (+.f64 1 (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (+.f64 1 (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 (exp.f64 b))))) (exp.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 1 (+.f64 1 (exp.f64 b)))) (+.f64 1 (expm1.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 (exp.f64 b))))) (+.f64 1 (expm1.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)))) (exp.f64 (/.f64 1 (+.f64 1 (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2))) (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)))) (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 (exp.f64 b)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (+.f64 1 (exp.f64 b)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (+.f64 1 (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (+.f64 1 (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b))) (*.f64 3 (log1p.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (log.f64 (*.f64 (+.f64 1 (exp.f64 b)) (exp.f64 b))) (*.f64 3 (log1p.f64 (exp.f64 b)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 (+.f64 1 (exp.f64 b))) (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)) (/.f64 1 (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) 1 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) -2) (/.f64 1 (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (+.f64 -1 (neg.f64 (exp.f64 b)))) (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)) 1 (/.f64 1 (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (+.f64 1 (exp.f64 b)))) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)) (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)) (/.f64 1 (cbrt.f64 (+.f64 1 (exp.f64 b)))) (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2))) (cbrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4))) (/.f64 1 (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 4))) (cbrt.f64 (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2))) (/.f64 1 (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -1/2) (pow.f64 (+.f64 1 (exp.f64 b)) -1/2) (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 -1) (+.f64 1 (exp.f64 b))) (/.f64 (sqrt.f64 -1) (+.f64 1 (exp.f64 b))) (/.f64 1 (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2) -1 (/.f64 1 (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) -1) (pow.f64 (cbrt.f64 (+.f64 1 (exp.f64 b))) -1) (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (hypot.f64 1 (sqrt.f64 (exp.f64 b))) -1) (pow.f64 (hypot.f64 1 (sqrt.f64 (exp.f64 b))) -1) (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 b 3)))) (fma.f64 (exp.f64 b) (expm1.f64 b) 1) (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 1 (pow.f64 (exp.f64 b) 2))) (-.f64 1 (exp.f64 b)) (neg.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 a (+.f64 1 (exp.f64 b))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 a (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (/.f64 1 (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 a) 2) (*.f64 (cbrt.f64 a) (/.f64 1 (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (pow.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) 2) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -1/2) (/.f64 a (hypot.f64 1 (sqrt.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 a) (*.f64 (sqrt.f64 a) (/.f64 1 (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) (sqrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 a) (/.f64 1 (+.f64 -1 (neg.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 a) 2) 1) (/.f64 (cbrt.f64 a) (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 a) 1) (/.f64 (sqrt.f64 a) (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (/.f64 a (cbrt.f64 (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 a) 2) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 a) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (/.f64 (sqrt.f64 a) (cbrt.f64 (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 a) 2) (hypot.f64 1 (sqrt.f64 (exp.f64 b)))) (/.f64 (cbrt.f64 a) (hypot.f64 1 (sqrt.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (+.f64 1 (exp.f64 (*.f64 b 3)))) (fma.f64 (exp.f64 b) (expm1.f64 b) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 a (-.f64 1 (pow.f64 (exp.f64 b) 2))) (-.f64 1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2))) (/.f64 1 (cbrt.f64 (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (pow.f64 (+.f64 1 (exp.f64 b)) -1/2)) (pow.f64 (+.f64 1 (exp.f64 b)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 a (+.f64 1 (exp.f64 b)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1 (exp.f64 b)) a) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 a (+.f64 -1 (neg.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 a (+.f64 1 (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 a (+.f64 1 (exp.f64 b))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 a 3) (pow.f64 (+.f64 1 (exp.f64 b)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 a 3) (pow.f64 (+.f64 1 (exp.f64 b)) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 a (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 a) (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (log.f64 a) (log1p.f64 (exp.f64 b))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (+.f64 1 (exp.f64 b))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (+.f64 1 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (+.f64 -1 (neg.f64 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (+.f64 1 (exp.f64 b)))) (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2)) (/.f64 1 (cbrt.f64 (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -1/2) (pow.f64 (+.f64 1 (exp.f64 b)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) 2)) -1) (pow.f64 (cbrt.f64 (+.f64 1 (exp.f64 b))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 1 (sqrt.f64 (exp.f64 b))) -1) (pow.f64 (hypot.f64 1 (sqrt.f64 (exp.f64 b))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (exp.f64 (*.f64 b 3)))) (fma.f64 (exp.f64 b) (expm1.f64 b) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 1 (pow.f64 (exp.f64 b) 2))) (-.f64 1 (exp.f64 b)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (exp.f64 b)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (+.f64 1 (exp.f64 b)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (+.f64 1 (exp.f64 b))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 (exp.f64 b)) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (+.f64 1 (exp.f64 b)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log1p.f64 (exp.f64 b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (exp.f64 b)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log1p.f64 (exp.f64 b))) 1))))))"]],"rules":[["egg-rr",25],["egg-rr",38],["egg-rr",67],["egg-rr",48]],"stop":[["node limit",1]],"time":64.365966796875,"type":"rewrite"},{"count":[[202,207]],"egraph":[[4,6206,341,0.025842001],[3,2527,341,0.013659876],[2,656,344,0.005036251],[1,209,367,0.0014518340000000002],[0,79,389,0.000361542]],"inputs":[["4","(+.f64 (*.f64 4 b) 4)","(+.f64 (*.f64 4 b) (+.f64 4 (*.f64 3 (pow.f64 b 2))))","(+.f64 (*.f64 4 b) (+.f64 (*.f64 5/3 (pow.f64 b 3)) (+.f64 4 (*.f64 3 (pow.f64 b 2)))))","1/4","(+.f64 1/4 (*.f64 -1/16 (pow.f64 b 2)))","(+.f64 (*.f64 1/96 (pow.f64 b 4)) (+.f64 1/4 (*.f64 -1/16 (pow.f64 b 2))))","(+.f64 (*.f64 1/96 (pow.f64 b 4)) (+.f64 1/4 (+.f64 (*.f64 -1/16 (pow.f64 b 2)) (*.f64 -17/11520 (pow.f64 b 6)))))","(-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(*.f64 1/2 a)","(+.f64 (*.f64 1/2 a) (*.f64 -1/4 (*.f64 a b)))","(+.f64 (*.f64 1/2 a) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a)) (pow.f64 b 2))) (*.f64 -1/4 (*.f64 a b))))","(+.f64 (*.f64 1/2 a) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a)) (pow.f64 b 2))) (+.f64 (*.f64 -1/4 (*.f64 a b)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a))) (+.f64 (*.f64 1/24 a) (*.f64 -1/16 a))) (pow.f64 b 3))))))","1/2","(+.f64 1/2 (*.f64 -1/4 b))","(+.f64 1/2 (+.f64 (*.f64 1/48 (pow.f64 b 3)) (*.f64 -1/4 b)))","(+.f64 1/2 (+.f64 (*.f64 -1/480 (pow.f64 b 5)) (+.f64 (*.f64 1/48 (pow.f64 b 3)) (*.f64 -1/4 b))))"]],"method":["egg-herbie"],"outputs":[["4","(+.f64 (*.f64 4 b) 4)","(fma.f64 4 b 4)","(+.f64 (*.f64 4 b) (+.f64 4 (*.f64 3 (pow.f64 b 2))))","(+.f64 (fma.f64 4 b 4) (*.f64 3 (*.f64 b b)))","(fma.f64 4 b (fma.f64 3 (*.f64 b b) 4))","(fma.f64 4 b (fma.f64 b (*.f64 b 3) 4))","(+.f64 (*.f64 4 b) (+.f64 (*.f64 5/3 (pow.f64 b 3)) (+.f64 4 (*.f64 3 (pow.f64 b 2)))))","(fma.f64 4 b (fma.f64 5/3 (pow.f64 b 3) (+.f64 4 (*.f64 3 (*.f64 b b)))))","(fma.f64 4 b (fma.f64 5/3 (pow.f64 b 3) (fma.f64 3 (*.f64 b b) 4)))","(fma.f64 4 b (fma.f64 b (*.f64 b 3) (fma.f64 5/3 (pow.f64 b 3) 4)))","(+.f64 4 (*.f64 b (+.f64 (*.f64 b (+.f64 3 (*.f64 b 5/3))) 4)))","1/4","(+.f64 1/4 (*.f64 -1/16 (pow.f64 b 2)))","(+.f64 1/4 (*.f64 (*.f64 b b) -1/16))","(fma.f64 (*.f64 b b) -1/16 1/4)","(fma.f64 b (*.f64 b -1/16) 1/4)","(+.f64 (*.f64 1/96 (pow.f64 b 4)) (+.f64 1/4 (*.f64 -1/16 (pow.f64 b 2))))","(fma.f64 1/96 (pow.f64 b 4) (+.f64 1/4 (*.f64 (*.f64 b b) -1/16)))","(fma.f64 1/96 (pow.f64 b 4) (fma.f64 (*.f64 b b) -1/16 1/4))","(fma.f64 1/96 (pow.f64 b 4) (fma.f64 b (*.f64 b -1/16) 1/4))","(fma.f64 b (*.f64 b -1/16) (fma.f64 1/96 (pow.f64 b 4) 1/4))","(+.f64 (*.f64 1/96 (pow.f64 b 4)) (+.f64 1/4 (+.f64 (*.f64 -1/16 (pow.f64 b 2)) (*.f64 -17/11520 (pow.f64 b 6)))))","(fma.f64 1/96 (pow.f64 b 4) (+.f64 1/4 (fma.f64 -1/16 (*.f64 b b) (*.f64 -17/11520 (pow.f64 b 6)))))","(+.f64 (fma.f64 1/96 (pow.f64 b 4) (fma.f64 (*.f64 b b) -1/16 1/4)) (*.f64 -17/11520 (pow.f64 b 6)))","(fma.f64 1/96 (pow.f64 b 4) (fma.f64 b (*.f64 b -1/16) (fma.f64 -17/11520 (pow.f64 b 6) 1/4)))","(-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))","(*.f64 1/2 a)","(+.f64 (*.f64 1/2 a) (*.f64 -1/4 (*.f64 a b)))","(fma.f64 1/2 a (*.f64 (*.f64 -1/4 a) b))","(fma.f64 1/2 a (*.f64 b (*.f64 a -1/4)))","(*.f64 a (fma.f64 b -1/4 1/2))","(+.f64 (*.f64 1/2 a) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a)) (pow.f64 b 2))) (*.f64 -1/4 (*.f64 a b))))","(fma.f64 1/2 a (*.f64 (*.f64 -1/4 a) b))","(fma.f64 1/2 a (*.f64 b (*.f64 a -1/4)))","(*.f64 a (fma.f64 b -1/4 1/2))","(+.f64 (*.f64 1/2 a) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a)) (pow.f64 b 2))) (+.f64 (*.f64 -1/4 (*.f64 a b)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 1/8 a) (*.f64 -1/8 a))) (+.f64 (*.f64 1/24 a) (*.f64 -1/16 a))) (pow.f64 b 3))))))","(fma.f64 1/2 a (fma.f64 -1 (*.f64 (*.f64 b b) (*.f64 a 0)) (fma.f64 -1/4 (*.f64 b a) (neg.f64 (*.f64 (pow.f64 b 3) (fma.f64 -1/2 (*.f64 a 0) (*.f64 a -1/48)))))))","(fma.f64 1/2 a (fma.f64 0 (*.f64 b b) (fma.f64 (neg.f64 (fma.f64 a -1/48 0)) (pow.f64 b 3) (*.f64 b (*.f64 a -1/4)))))","(+.f64 (*.f64 a (fma.f64 b -1/4 1/2)) (*.f64 (pow.f64 b 3) (*.f64 a 1/48)))","(*.f64 a (-.f64 (fma.f64 b -1/4 1/2) (*.f64 (pow.f64 b 3) -1/48)))","1/2","(+.f64 1/2 (*.f64 -1/4 b))","(+.f64 1/2 (*.f64 b -1/4))","(fma.f64 b -1/4 1/2)","(+.f64 1/2 (+.f64 (*.f64 1/48 (pow.f64 b 3)) (*.f64 -1/4 b)))","(+.f64 1/2 (fma.f64 1/48 (pow.f64 b 3) (*.f64 b -1/4)))","(+.f64 1/2 (fma.f64 (pow.f64 b 3) 1/48 (*.f64 b -1/4)))","(fma.f64 b -1/4 (fma.f64 (pow.f64 b 3) 1/48 1/2))","(+.f64 1/2 (+.f64 (*.f64 -1/480 (pow.f64 b 5)) (+.f64 (*.f64 1/48 (pow.f64 b 3)) (*.f64 -1/4 b))))","(+.f64 1/2 (fma.f64 -1/480 (pow.f64 b 5) (fma.f64 1/48 (pow.f64 b 3) (*.f64 b -1/4))))","(+.f64 1/2 (fma.f64 -1/480 (pow.f64 b 5) (fma.f64 (pow.f64 b 3) 1/48 (*.f64 b -1/4))))","(fma.f64 -1/480 (pow.f64 b 5) (fma.f64 b -1/4 (fma.f64 (pow.f64 b 3) 1/48 1/2)))"]],"stop":[["node limit",1]],"time":43.212890625,"type":"simplify"},{"compiler":[[8407,5286]],"time":79.7080078125,"type":"eval"},{"alts":[["(/.f64 (exp.f64 a) (fma.f64 (pow.f64 (cbrt.f64 (exp.f64 b)) 2) (cbrt.f64 (exp.f64 b)) (exp.f64 a)))","fresh",0.521816259768442],["(exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))","done",0.3737487534501867],["(exp.f64 (-.f64 a (+.f64 (log1p.f64 (exp.f64 b)) (fma.f64 1/2 (*.f64 a (*.f64 a (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (/.f64 a (+.f64 1 (exp.f64 b)))))))","done",0.33113484653116365]],"compiler":[[16,9],[15,10],[36,25]],"count":[[210,3]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[207,0],"picked":[1,1]}],"min-error":[0],"time":79.593017578125,"type":"prune"},{"accuracy":[0.33113484653116365],"baseline":[0.33113484653116365],"branch":[["a",0.33113484653116365,1],["b",0.33113484653116365,1],["(/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))",0.33113484653116365,1],["(/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))",0.33113484653116365,1],["(exp.f64 a)",0.33113484653116365,1],["(exp.f64 a)",0.33113484653116365,1],["(exp.f64 b)",0.33113484653116365,1]],"compiler":[[3,2],[3,2],[10,6],[10,6],[4,3],[4,3],[4,3],[153,85]],"count":[[9,1]],"inputs":[["(exp.f64 (-.f64 a (+.f64 (log1p.f64 (exp.f64 b)) (fma.f64 1/2 (*.f64 a (*.f64 a (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (/.f64 a (+.f64 1 (exp.f64 b)))))))","(fma.f64 a (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))) (/.f64 1 (+.f64 1 (exp.f64 b))))","(exp.f64 (-.f64 a (log1p.f64 (+.f64 (fma.f64 a (*.f64 a 1/2) a) (exp.f64 b)))))","(pow.f64 (sqrt.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))) 2)","(/.f64 (exp.f64 a) (+.f64 1 (fma.f64 a (*.f64 a 1/2) (+.f64 (exp.f64 b) a))))","(+.f64 (*.f64 a (-.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 1 (pow.f64 (+.f64 1 (exp.f64 b)) 2)))) (/.f64 1 (+.f64 1 (exp.f64 b))))","(/.f64 (exp.f64 a) (fma.f64 (pow.f64 (cbrt.f64 (exp.f64 b)) 2) (cbrt.f64 (exp.f64 b)) (exp.f64 a)))","(log.f64 (exp.f64 (/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))))","(/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))"]],"link":["."],"name":["Quotient of sum of exps"],"oracle":[11.223171092131675],"outputs":[["(exp.f64 (-.f64 a (+.f64 (log1p.f64 (exp.f64 b)) (fma.f64 1/2 (*.f64 a (*.f64 a (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (/.f64 a (+.f64 1 (exp.f64 b)))))))"]],"time":20.815185546875,"times":[["a",4.35400390625],["b",4.427001953125],["(/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))",1.89208984375],["(/.f64 (exp.f64 a) (+.f64 (exp.f64 a) (exp.f64 b)))",1.897216796875],["(exp.f64 a)",1.761962890625],["(exp.f64 a)",1.79296875],["(exp.f64 b)",2.113037109375]],"type":"regimes"},{"compiler":[[36,25]],"egraph":[[5,52,53,0.00031266700000000003],[4,50,53,0.000252958],[3,45,53,0.000191917],[2,37,53,0.000135],[1,30,53,8.3292e-5],[0,21,53,4.2917e-5]],"inputs":[["(exp.f64 (-.f64 a (+.f64 (log1p.f64 (exp.f64 b)) (fma.f64 1/2 (*.f64 a (*.f64 a (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (/.f64 a (+.f64 1 (exp.f64 b)))))))"]],"method":["egg-herbie"],"outputs":[["(exp.f64 (-.f64 a (+.f64 (log1p.f64 (exp.f64 b)) (fma.f64 1/2 (*.f64 a (*.f64 a (+.f64 (/.f64 1 (+.f64 1 (exp.f64 b))) (/.f64 -1 (pow.f64 (+.f64 1 (exp.f64 b)) 2))))) (/.f64 a (+.f64 1 (exp.f64 b)))))))","(exp.f64 (-.f64 a (+.f64 (log1p.f64 (exp.f64 b)) (fma.f64 1/2 (*.f64 a (*.f64 a (+.f64 (/.f64 1 (+.f64 (exp.f64 b) 1)) (/.f64 -1 (pow.f64 (+.f64 (exp.f64 b) 1) 2))))) (/.f64 a (+.f64 (exp.f64 b) 1))))))"]],"stop":[["fuel",1],["saturated",1]],"time":9.414794921875,"type":"simplify"},{"time":0.01904296875,"type":"soundness"},{"compiler":[[36,25]],"remove-preprocessing":[[]],"time":14.7021484375,"type":"end"}]