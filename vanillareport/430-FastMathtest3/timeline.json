[{"compiler":[[15,10]],"method":["search"],"sampling":[[12,0.4680636897137447,0.4573372301578047,0.07459908012845062],[11,0.41345625924714113,0.52852191630177,0.05802182445108883],[10,0.34324670579007943,0.6279854503659408,0.02876784384397979],[9,0.2496339678473305,0.7332997805515333,0.017066251601136173],[8,0.18722547588549787,0.8113103955038241,0.0014641286106780171],[7,0.12481698392366525,0.8737188874656567,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":94.158935546875,"type":"analyze"},{"outcomes":[["body",256,"invalid",64.83154296875,1490],["body",512,"valid",16.3427734375,208],["body",1024,"valid",20.0947265625,183],["body",256,"valid",345.31103515625,7865]],"time":456.35302734375,"type":"sample"},{"compiler":[[14,9]],"egraph":[[1,3,3,8.708999999999999e-6],[0,3,3,7.667e-6],[5,226,40,0.002124792],[4,224,40,0.00169325],[3,213,40,0.001242],[2,149,40,0.0007527090000000001],[1,58,40,0.000340667],[0,22,52,0.000102875]],"inputs":[["0","1","2"],["(+.f64 (+.f64 (*.f64 d1 3) (*.f64 d1 d2)) (*.f64 d1 d3))","(+.f64 (+.f64 (*.f64 d2 3) (*.f64 d2 d1)) (*.f64 d2 d3))","(+.f64 (+.f64 (*.f64 d3 3) (*.f64 d3 d2)) (*.f64 d3 d1))","(+.f64 (+.f64 (*.f64 d1 3) (*.f64 d1 d3)) (*.f64 d1 d2))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","1"],["(+.f64 (+.f64 (*.f64 d1 3) (*.f64 d1 d2)) (*.f64 d1 d3))","(+.f64 (*.f64 d1 (+.f64 3 d2)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 (+.f64 3 d3) d2))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (+.f64 (*.f64 d2 3) (*.f64 d2 d1)) (*.f64 d2 d3))","(+.f64 (*.f64 d2 (+.f64 3 d1)) (*.f64 d2 d3))","(*.f64 d2 (+.f64 (+.f64 d1 3) d3))","(*.f64 d2 (+.f64 d3 (+.f64 d1 3)))","(+.f64 (+.f64 (*.f64 d3 3) (*.f64 d3 d2)) (*.f64 d3 d1))","(+.f64 (*.f64 d1 d3) (*.f64 d3 (+.f64 3 d2)))","(*.f64 d3 (+.f64 d1 (+.f64 3 d2)))","(+.f64 (+.f64 (*.f64 d1 3) (*.f64 d1 d3)) (*.f64 d1 d2))","(+.f64 (*.f64 d1 (+.f64 3 d2)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 (+.f64 3 d3) d2))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))"]],"stop":[["unsound",1],["saturated",1]],"symmetry":[["(sort d2 d3)"]],"time":29.48681640625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[5,86,10,0.0008851670000000001],[4,85,10,0.0007138330000000001],[3,74,10,0.000523166],[2,46,10,0.00033275000000000004],[1,20,10,0.00017041700000000002],[0,10,13,6.6958e-5]],"inputs":[["(+.f64 (+.f64 (*.f64 d1 3) (*.f64 d1 d2)) (*.f64 d1 d3))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (+.f64 (*.f64 d1 3) (*.f64 d1 d2)) (*.f64 d1 d3))","(+.f64 (*.f64 d1 (+.f64 3 d2)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 (+.f64 3 d2) d3))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))"]],"stop":[["saturated",1]],"time":12.18212890625,"type":"simplify"},{"compiler":[[21,13]],"time":0.419921875,"type":"eval"},{"alts":[["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","next",0.046875]],"compiler":[[10,7],[10,7]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.046875],"time":0.928955078125,"type":"prune"},{"compiler":[[22,10]],"locations":[["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))",0.0078125,true]],"time":4.39208984375,"type":"localize"},{"count":[[1,28]],"series":[["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","d3","-inf",0.267822265625],["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","d3","inf",0.322998046875],["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","d3","0",0.307861328125],["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","d2","-inf",0.31005859375],["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","d2","inf",0.549072265625],["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","d2","0",0.285888671875],["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","d1","-inf",0.43505859375],["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","d1","inf",0.34521484375],["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","d1","0",0.52490234375]],"time":3.4609375,"type":"series"},{"count":[[1,56]],"egraph":[[2,2729,10,0.028861331999999996],[1,186,10,0.003695749],[0,8,10,0.000234416]],"inputs":[["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 3) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 d2 d3)) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 3 d2) d1) (*.f64 d3 d1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d1 3) 1) (*.f64 (*.f64 d1 (+.f64 d2 d3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 3 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 d1) (+.f64 3 (+.f64 d2 d3)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 d1) (+.f64 3 (+.f64 d2 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 d1) (+.f64 3 (+.f64 d2 d3))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 d1) (+.f64 3 (+.f64 d2 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (pow.f64 d1 3) 27) (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 3)) (+.f64 (pow.f64 (*.f64 d1 3) 2) (-.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 2) (*.f64 (*.f64 d1 3) (*.f64 d1 (+.f64 d2 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 d1 3) 2) (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 2)) (-.f64 (*.f64 d1 3) (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 27 (pow.f64 (+.f64 d2 d3) 3)) d1) (fma.f64 (+.f64 d2 d3) (-.f64 (+.f64 d2 d3) 3) 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 9 (pow.f64 (+.f64 d2 d3) 2)) d1) (-.f64 3 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (+.f64 27 (pow.f64 (+.f64 d2 d3) 3))) (fma.f64 (+.f64 d2 d3) (-.f64 (+.f64 d2 d3) 3) 9))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (-.f64 9 (pow.f64 (+.f64 d2 d3) 2))) (-.f64 3 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 d1) (+.f64 3 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 d1 (+.f64 d2 d3))) (exp.f64 (*.f64 d1 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 (+.f64 d2 d3) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 (+.f64 3 d2) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 3 d1 (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 d2 d3) d1 (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 3) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 (+.f64 d2 d3)) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) (+.f64 d2 d3)) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) 3) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 d2 d3)) 2) (*.f64 (cbrt.f64 (+.f64 d2 d3)) d1) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 d1) (*.f64 (sqrt.f64 d1) (+.f64 d2 d3)) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 d1) (*.f64 (sqrt.f64 d1) 3) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 d2 d3)) (*.f64 (sqrt.f64 (+.f64 d2 d3)) d1) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 3) 1 (*.f64 (*.f64 d1 (+.f64 d2 d3)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 3 d2) d1 (*.f64 d3 d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 d1 3)) 2) (cbrt.f64 (*.f64 d1 3)) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 2) (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 d1 3)) (sqrt.f64 (*.f64 d1 3)) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 d1 (+.f64 d2 d3))) (sqrt.f64 (*.f64 d1 (+.f64 d2 d3))) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 d1) (sqrt.f64 (+.f64 d2 d3))) (*.f64 (sqrt.f64 d1) (sqrt.f64 (+.f64 d2 d3))) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (+.f64 d2 d3)) (sqrt.f64 d1)) (*.f64 (sqrt.f64 (+.f64 d2 d3)) (sqrt.f64 d1)) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 d2 d3)) 2)) (cbrt.f64 (+.f64 d2 d3)) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (sqrt.f64 (+.f64 d2 d3))) (sqrt.f64 (+.f64 d2 d3)) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 d2 d3) (pow.f64 (cbrt.f64 d1) 2)) (cbrt.f64 d1) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 d2 d3) (sqrt.f64 d1)) (sqrt.f64 d1) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 3 (pow.f64 (cbrt.f64 d1) 2)) (cbrt.f64 d1) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 3 (sqrt.f64 d1)) (sqrt.f64 d1) (*.f64 d1 (+.f64 d2 d3)))))))"]],"rules":[["egg-rr",56]],"stop":[["node limit",1]],"time":49.967041015625,"type":"rewrite"},{"count":[[84,65]],"egraph":[[4,93,250,0.000803249],[3,89,250,0.000626624],[2,67,250,0.000437291],[1,41,250,0.000250999],[0,15,250,8.9833e-5]],"inputs":[["(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 3 d3))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d2 d1)","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d2 d1)","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 d2))","(+.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))","(+.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))","(+.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))","(*.f64 d1 d3)","(+.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))","(+.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))","(+.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))","(*.f64 d1 d3)","(+.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))","(+.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))","(+.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 3 d3))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d2 d1)","(*.f64 d1 d2)","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d2 d1)","(*.f64 d1 d2)","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(+.f64 (*.f64 d1 (+.f64 3 d3)) (*.f64 d2 d1))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 (+.f64 3 d2))","(*.f64 d1 (+.f64 d2 3))","(+.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(+.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(+.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(+.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(+.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(+.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))","(+.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 3 d2)))","(*.f64 d1 (+.f64 d2 (+.f64 3 d3)))"]],"stop":[["saturated",1]],"time":15.55712890625,"type":"simplify"},{"compiler":[[780,360]],"time":9.5,"type":"eval"},{"alts":[["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","done",0.046875],["(fma.f64 (pow.f64 (cbrt.f64 (+.f64 d2 d3)) 2) (*.f64 (cbrt.f64 (+.f64 d2 d3)) d1) (*.f64 d1 3))","fresh",0.5710589965263783],["(fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) 3) (*.f64 d1 (+.f64 d2 d3)))","fresh",0.2461701172213042],["(fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))","next",0.015625]],"compiler":[[10,7],[19,11],[17,11],[11,7],[19,11],[17,11],[11,7]],"count":[[66,4]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[65,3],"picked":[1,1]}],"min-error":[0],"time":12.495849609375,"type":"prune"},{"compiler":[[23,8]],"locations":[["(*.f64 d1 (+.f64 d2 d3))",0.01953125,true],["(fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))",0.04296875,true]],"time":4.820068359375,"type":"localize"},{"count":[[2,60]],"series":[["(*.f64 d1 (+.f64 d2 d3))","d3","-inf",0.158935546875],["(*.f64 d1 (+.f64 d2 d3))","d3","inf",0.140869140625],["(*.f64 d1 (+.f64 d2 d3))","d3","0",0.1640625],["(*.f64 d1 (+.f64 d2 d3))","d2","-inf",0.14306640625],["(*.f64 d1 (+.f64 d2 d3))","d2","inf",0.14599609375],["(*.f64 d1 (+.f64 d2 d3))","d2","0",0.18603515625],["(*.f64 d1 (+.f64 d2 d3))","d1","-inf",0.14599609375],["(*.f64 d1 (+.f64 d2 d3))","d1","inf",0.14404296875],["(*.f64 d1 (+.f64 d2 d3))","d1","0",0.169921875],["(fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))","d3","-inf",0.258056640625],["(fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))","d3","inf",0.2880859375],["(fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))","d3","0",0.296875],["(fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))","d2","-inf",0.244873046875],["(fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))","d2","inf",0.27001953125],["(fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))","d2","0",0.299072265625],["(fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))","d1","-inf",0.576171875],["(fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))","d1","inf",0.513916015625],["(fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))","d1","0",0.906982421875]],"time":5.259033203125,"type":"series"},{"count":[[2,49]],"egraph":[[2,2412,17,0.021566791000000002],[1,175,17,0.003265791],[0,8,18,0.000227583]],"inputs":[["(fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 d3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 d2 d3)) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 3) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d1 3) 1) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 d1 3) (*.f64 d1 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 d1 (+.f64 3 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) 2) (cbrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) (sqrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 d1 3) 3) (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 3)) (+.f64 (*.f64 (*.f64 d1 3) (*.f64 d1 3)) (-.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 2) (*.f64 (*.f64 d1 3) (*.f64 d1 (+.f64 d2 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 d1 3) (*.f64 d1 3)) (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 2)) (-.f64 (*.f64 d1 3) (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d2) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d3) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d1 d2) 1) (*.f64 (*.f64 d1 d3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 d1 (+.f64 d2 d3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 d1 d2) 3) (pow.f64 (*.f64 d1 d3) 3)) (+.f64 (*.f64 (*.f64 d1 d2) (*.f64 d1 d2)) (-.f64 (*.f64 (*.f64 d1 d3) (*.f64 d1 d3)) (*.f64 (*.f64 d1 d2) (*.f64 d1 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 d1 d2) (*.f64 d1 d2)) (*.f64 (*.f64 d1 d3) (*.f64 d1 d3))) (-.f64 (*.f64 d1 d2) (*.f64 d1 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 d2 3) (pow.f64 d3 3)) d1) (fma.f64 d2 d2 (*.f64 d3 (-.f64 d3 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 d2 d2 (neg.f64 (*.f64 d3 d3))) d1) (-.f64 d2 d3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (+.f64 (pow.f64 d2 3) (pow.f64 d3 3))) (fma.f64 d2 d2 (*.f64 d3 (-.f64 d3 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (fma.f64 d2 d2 (neg.f64 (*.f64 d3 d3)))) (-.f64 d2 d3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 d1 (+.f64 d2 d3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 d1 (+.f64 d2 d3))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 d1) (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 d1 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 d1 3) (pow.f64 (+.f64 d2 d3) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 d2 d3) 3) (pow.f64 d1 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 d2 (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d2 d1 (*.f64 d1 d3))))))"]],"rules":[["egg-rr",25],["egg-rr",24]],"stop":[["node limit",1]],"time":43.1318359375,"type":"rewrite"},{"count":[[109,60]],"egraph":[[8,1927,480,0.023415250999999998],[7,1919,480,0.019145667999999998],[6,1709,480,0.014832251],[5,1181,480,0.009432376],[4,608,480,0.004891126],[3,273,480,0.002292292],[2,134,480,0.000955917],[1,60,480,0.000437001],[0,20,499,0.000148542]],"inputs":[["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 3)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 3)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 3)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 d3))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d2 d1))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))"]],"method":["egg-herbie"],"outputs":[["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 d1 (-.f64 (*.f64 -1 (+.f64 d2 d3)) 3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 d3))","(fma.f64 3 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d3 3))","(*.f64 d1 (+.f64 3 d3))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d2 d1)","(*.f64 d1 d2)","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d2 d1)","(*.f64 d1 d2)","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d2 d1))","(*.f64 d1 (+.f64 3 d2))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(fma.f64 d2 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(fma.f64 d2 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(fma.f64 d2 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d2 d1)","(*.f64 d1 d2)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(fma.f64 d2 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(fma.f64 d2 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(fma.f64 d2 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d2 d1)","(*.f64 d1 d2)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(fma.f64 d2 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(fma.f64 d2 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(fma.f64 d2 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d2 d1)","(*.f64 d1 d2)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(fma.f64 d2 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(fma.f64 d2 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(fma.f64 d2 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(fma.f64 d2 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(fma.f64 d2 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(fma.f64 d2 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(fma.f64 d2 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(fma.f64 d2 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 d2 d1) (*.f64 d1 d3))","(fma.f64 d2 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d2 d3))"]],"stop":[["saturated",1]],"time":44.113037109375,"type":"simplify"},{"compiler":[[724,339]],"time":7.865966796875,"type":"eval"},{"alts":[["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","done",0.046875],["(fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) 3) (*.f64 d1 (+.f64 d2 d3)))","next",0.2461701172213042],["(fma.f64 d1 3 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3))","fresh",0.46396264652663033]],"compiler":[[10,7],[17,11],[14,10],[17,11],[14,10]],"count":[[64,3]],"kept":[{"done":[1,1],"fresh":[2,1],"new":[60,1],"picked":[1,0]}],"min-error":[0],"time":11.155029296875,"type":"prune"},{"compiler":[[40,17]],"locations":[["(cbrt.f64 d1)",0.0859375,true],["(fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) 3) (*.f64 d1 (+.f64 d2 d3)))",0.13671875,true],["(*.f64 (cbrt.f64 d1) 3)",0.30859375,true],["(pow.f64 (cbrt.f64 d1) 2)",0.4576950195368841,true]],"time":8.801025390625,"type":"localize"},{"count":[[4,27]],"series":[["(cbrt.f64 d1)","d1","-inf",0.403076171875],["(cbrt.f64 d1)","d1","inf",0.226806640625],["(cbrt.f64 d1)","d1","0",0.2080078125],["(fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) 3) (*.f64 d1 (+.f64 d2 d3)))","d3","-inf",0.18994140625],["(fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) 3) (*.f64 d1 (+.f64 d2 d3)))","d3","inf",0.18115234375],["(fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) 3) (*.f64 d1 (+.f64 d2 d3)))","d3","0",0.869140625],["(fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) 3) (*.f64 d1 (+.f64 d2 d3)))","d2","-inf",0.19091796875],["(fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) 3) (*.f64 d1 (+.f64 d2 d3)))","d2","inf",0.180908203125],["(fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) 3) (*.f64 d1 (+.f64 d2 d3)))","d2","0",1.26806640625],["(fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) 3) (*.f64 d1 (+.f64 d2 d3)))","d1","-inf",0.5380859375],["(fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) 3) (*.f64 d1 (+.f64 d2 d3)))","d1","inf",0.35595703125],["(fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) 3) (*.f64 d1 (+.f64 d2 d3)))","d1","0",0.43603515625],["(*.f64 (cbrt.f64 d1) 3)","d1","-inf",0.589111328125],["(*.f64 (cbrt.f64 d1) 3)","d1","inf",0.2822265625],["(*.f64 (cbrt.f64 d1) 3)","d1","0",0.925048828125],["(pow.f64 (cbrt.f64 d1) 2)","d1","-inf",0.689208984375],["(pow.f64 (cbrt.f64 d1) 2)","d1","inf",0.406005859375],["(pow.f64 (cbrt.f64 d1) 2)","d1","0",0.578125]],"time":8.738037109375,"type":"series"},{"count":[[4,92]],"egraph":[[2,3251,26,0.025696499999999997],[1,257,28,0.004436417],[0,12,36,0.000336542]],"inputs":[["(pow.f64 (cbrt.f64 d1) 2)","(*.f64 (cbrt.f64 d1) 3)","(fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) 3) (*.f64 d1 (+.f64 d2 d3)))","(cbrt.f64 d1)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 d1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 d1) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 d1) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 d1) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 d1) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 d1) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 d1) (cbrt.f64 d1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 d1) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 d1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 d1)) 2) (cbrt.f64 (*.f64 d1 (cbrt.f64 d1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 d1)) 2) (*.f64 (cbrt.f64 (cbrt.f64 d1)) (cbrt.f64 d1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 (cbrt.f64 d1))) (pow.f64 (cbrt.f64 (cbrt.f64 d1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 d1) (pow.f64 d1 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 d1 1/6) (*.f64 (pow.f64 d1 1/6) (cbrt.f64 d1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 d1) (pow.f64 (cbrt.f64 (cbrt.f64 d1)) 2)) (cbrt.f64 (cbrt.f64 d1)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 d1 (cbrt.f64 d1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 d1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 d1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 d1 d1))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 d1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 d1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 d1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 d1)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (cbrt.f64 d1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (exp.f64 (cbrt.f64 d1)) 2)) (cbrt.f64 d1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 3) (cbrt.f64 d1)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 3) (cbrt.f64 d1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (cbrt.f64 d1) 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 d1) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cbrt.f64 d1) 3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cbrt.f64 d1) 3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (cbrt.f64 d1) 3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (cbrt.f64 d1) 2) 9))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 3) (cbrt.f64 d1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (cbrt.f64 d1) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cbrt.f64 d1) 3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (cbrt.f64 d1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (cbrt.f64 d1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (cbrt.f64 d1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (cbrt.f64 d1) 3)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 d2 d3)) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 3) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d1 3) 1) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 d1 3 (*.f64 d1 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))) (pow.f64 (cbrt.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))) 2) (cbrt.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))) (sqrt.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 d1 3) 3) (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 3)) (+.f64 (pow.f64 (*.f64 d1 3) 2) (-.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 2) (*.f64 (*.f64 d1 3) (*.f64 d1 (+.f64 d2 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 d1 3) 2) (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 2)) (-.f64 (*.f64 d1 3) (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 d1) (+.f64 d2 d3)) (exp.f64 (*.f64 d1 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 d1 (+.f64 d2 d3)))) (exp.f64 (*.f64 d1 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 d1 3)) (+.f64 1 (expm1.f64 (*.f64 d1 (+.f64 d2 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 d1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 d1))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 d1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 d1)))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 d1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 d1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 d1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 d1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 d1)) 2) (cbrt.f64 (cbrt.f64 d1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 d1)) (pow.f64 (cbrt.f64 (cbrt.f64 d1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 d1 1/6) (pow.f64 d1 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (*.f64 d1 (cbrt.f64 d1)))) (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 d1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 d1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 d1 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 d1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 d1) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 d1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 d1 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 d1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 d1))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 d1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 d1))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 d1)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 d1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 d1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 d1) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 d1)) 1))))))"]],"rules":[["egg-rr",25],["egg-rr",30],["egg-rr",16],["egg-rr",21]],"stop":[["node limit",1]],"time":49.87109375,"type":"rewrite"},{"count":[[119,103]],"egraph":[[1944,7999,231,1.7012526570000002],[1943,7995,231,1.7001821570000002],[1942,7991,231,1.698979865],[1941,7987,231,1.697794199],[1940,7983,231,1.6965652820000001],[1939,7979,231,1.695388657],[1938,7975,231,1.694208199],[1937,7971,231,1.693007366],[1936,7967,231,1.691596283],[1935,7963,231,1.690041241],[1934,7959,231,1.688658325],[1933,7955,231,1.687252367],[1932,7951,231,1.6858182419999999],[1931,7947,231,1.6843768669999999],[1930,7943,231,1.6831747],[1929,7939,231,1.6819554079999999],[1928,7935,231,1.680688158],[1927,7931,231,1.679461116],[1926,7927,231,1.6782904079999998],[1925,7923,231,1.6771091999999999],[1924,7919,231,1.6759041159999999],[1923,7915,231,1.674558907],[1922,7911,231,1.672958282],[1921,7907,231,1.671443532],[1920,7903,231,1.6698831570000001],[1919,7899,231,1.6684598650000002],[1918,7895,231,1.6672249900000002],[1917,7891,231,1.6660171150000003],[1916,7887,231,1.6647249480000004],[1915,7883,231,1.6633090310000003],[1914,7879,231,1.6619957390000002],[1913,7875,231,1.6606676980000001],[1912,7871,231,1.659465656],[1911,7867,231,1.6574936150000001],[1910,7863,231,1.656035407],[1909,7859,231,1.65424024],[1908,7855,231,1.652773615],[1907,7851,231,1.651108282],[1906,7847,231,1.649906198],[1905,7843,231,1.648714698],[1904,7839,231,1.647550115],[1903,7835,231,1.646304282],[1902,7831,231,1.64514874],[1901,7827,231,1.643954698],[1900,7823,231,1.642639864],[1899,7819,231,1.6410932809999998],[1898,7815,231,1.6394000309999999],[1897,7811,231,1.6379675729999998],[1896,7807,231,1.636555823],[1895,7803,231,1.635139698],[1894,7799,231,1.633990281],[1893,7795,231,1.632804448],[1892,7791,231,1.63164399],[1891,7787,231,1.630468281],[1890,7783,231,1.629253823],[1889,7779,231,1.628085406],[1888,7775,231,1.6268893640000002],[1887,7771,231,1.6256249480000002],[1886,7767,231,1.6238965310000002],[1885,7763,231,1.6224893230000001],[1884,7759,231,1.6210911150000002],[1883,7755,231,1.6196730320000003],[1882,7751,231,1.6182489490000003],[1881,7747,231,1.6169684900000003],[1880,7743,231,1.6157834900000003],[1879,7739,231,1.6146140320000004],[1878,7735,231,1.6134222820000004],[1877,7731,231,1.6122060320000005],[1876,7727,231,1.6110265730000004],[1875,7723,231,1.6098411980000005],[1874,7719,231,1.6085753230000004],[1873,7715,231,1.6071507820000004],[1872,7711,231,1.6056680320000003],[1871,7707,231,1.6041779910000002],[1870,7703,231,1.6026420330000002],[1869,7699,231,1.601121991],[1868,7695,231,1.5999231580000002],[1867,7691,231,1.5987740330000002],[1866,7687,231,1.5976194080000001],[1865,7683,231,1.5963964080000002],[1864,7679,231,1.5952445330000002],[1863,7675,231,1.5940417410000003],[1862,7671,231,1.5928710740000003],[1861,7667,231,1.5915437410000002],[1860,7663,231,1.5900276160000002],[1859,7659,231,1.5887000330000003],[1858,7655,231,1.5873527420000002],[1857,7651,231,1.5859874500000002],[1856,7647,231,1.5846131170000002],[1855,7643,231,1.5834389090000003],[1854,7639,231,1.5822897840000003],[1853,7635,231,1.5810673250000002],[1852,7631,231,1.5798128660000001],[1851,7627,231,1.578664574],[1850,7623,231,1.577523866],[1849,7619,231,1.5763745329999999],[1848,7615,231,1.5751686159999998],[1847,7611,231,1.5738096579999998],[1846,7607,231,1.5723484909999998],[1845,7603,231,1.5709979499999998],[1844,7599,231,1.5695924499999998],[1843,7595,231,1.5682332419999998],[1842,7591,231,1.5670394499999998],[1841,7587,231,1.5658701589999997],[1840,7583,231,1.5647165339999998],[1839,7579,231,1.5634236169999998],[1838,7575,231,1.5622232419999997],[1837,7571,231,1.5610319919999998],[1836,7567,231,1.5596535749999998],[1835,7563,231,1.558108492],[1834,7559,231,1.5563818249999999],[1833,7555,231,1.555027575],[1832,7551,231,1.553693575],[1831,7547,231,1.55232945],[1830,7543,231,1.550923241],[1829,7539,231,1.549737658],[1828,7535,231,1.5486021159999999],[1827,7531,231,1.547465575],[1826,7527,231,1.546271575],[1825,7523,231,1.5451192],[1824,7519,231,1.54397695],[1823,7515,231,1.542759409],[1822,7511,231,1.541412159],[1821,7507,231,1.539949993],[1820,7503,231,1.538581243],[1819,7499,231,1.5371053270000001],[1818,7495,231,1.535580077],[1817,7491,231,1.53433441],[1816,7487,231,1.533174494],[1815,7483,231,1.532028827],[1814,7479,231,1.530891244],[1813,7475,231,1.529660494],[1812,7471,231,1.528538244],[1811,7467,231,1.527383577],[1810,7463,231,1.52624941],[1809,7459,231,1.524840077],[1808,7455,231,1.523392619],[1807,7451,231,1.522023577],[1806,7447,231,1.52067041],[1805,7443,231,1.5192782439999999],[1804,7439,231,1.517905536],[1803,7435,231,1.516732911],[1802,7431,231,1.5156092030000001],[1801,7427,231,1.514404536],[1800,7423,231,1.513216869],[1799,7419,231,1.512084369],[1798,7415,231,1.5109537030000002],[1797,7411,231,1.5098098690000001],[1796,7407,231,1.5086238280000002],[1795,7403,231,1.5072512860000002],[1794,7399,231,1.5058330780000002],[1793,7395,231,1.5044700780000002],[1792,7391,231,1.5030664950000001],[1791,7387,231,1.501706495],[1790,7383,231,1.5005204120000002],[1789,7379,231,1.4993493290000002],[1788,7375,231,1.4982095370000001],[1787,7371,231,1.4970454540000002],[1786,7367,231,1.4958815370000003],[1785,7363,231,1.4947464540000002],[1784,7359,231,1.4936131200000002],[1783,7355,231,1.4924508700000003],[1782,7351,231,1.4910835370000004],[1781,7347,231,1.4895526200000004],[1780,7343,231,1.4882666620000005],[1779,7339,231,1.4868903710000005],[1778,7335,231,1.4854468710000006],[1777,7331,231,1.4839870370000006],[1776,7327,231,1.4828571620000006],[1775,7323,231,1.4816794120000005],[1774,7319,231,1.4805053700000006],[1773,7315,231,1.4793409540000007],[1772,7311,231,1.4782359540000007],[1771,7307,231,1.4770819540000006],[1770,7303,231,1.4759785370000007],[1769,7299,231,1.4747601620000006],[1768,7295,231,1.4734349950000005],[1767,7291,231,1.4720569950000004],[1766,7287,231,1.4707895360000005],[1765,7283,231,1.4694448700000005],[1764,7279,231,1.4681325370000005],[1763,7275,231,1.4669590370000005],[1762,7271,231,1.4658311200000005],[1761,7267,231,1.4647233280000005],[1760,7263,231,1.4635569120000005],[1759,7259,231,1.4623491620000004],[1758,7255,231,1.4612164120000004],[1757,7251,231,1.4601157870000003],[1756,7247,231,1.4590138280000002],[1755,7243,231,1.4577063280000002],[1754,7239,231,1.4562806620000002],[1753,7235,231,1.4550302870000003],[1752,7231,231,1.4537605370000002],[1751,7227,231,1.4524314540000003],[1750,7223,231,1.4509496620000002],[1749,7219,231,1.449789079],[1748,7215,231,1.448669621],[1747,7211,231,1.447570746],[1746,7207,231,1.446402663],[1745,7203,231,1.4452973709999999],[1744,7199,231,1.444187205],[1743,7195,231,1.442976372],[1742,7191,231,1.44165058],[1741,7187,231,1.4402389139999998],[1740,7183,231,1.4387822479999999],[1739,7179,231,1.43741379],[1738,7175,231,1.4360004979999998],[1737,7171,231,1.434508623],[1736,7167,231,1.433297748],[1735,7163,231,1.431844832],[1734,7159,231,1.4306694149999999],[1733,7155,231,1.4295082069999998],[1732,7151,231,1.4283365819999998],[1731,7147,231,1.4272204149999999],[1730,7143,231,1.4259390819999997],[1729,7139,231,1.4244050819999998],[1728,7135,231,1.4225364149999997],[1727,7131,231,1.4211182479999998],[1726,7127,231,1.4198349979999998],[1725,7123,231,1.4185433309999997],[1724,7119,231,1.4172157479999998],[1723,7115,231,1.4160879979999998],[1722,7111,231,1.4149975399999999],[1721,7107,231,1.413912873],[1720,7103,231,1.4127329149999999],[1719,7099,231,1.411638749],[1718,7095,231,1.41054554],[1717,7091,231,1.409403082],[1716,7087,231,1.40822679],[1715,7083,231,1.406942332],[1714,7079,231,1.405563082],[1713,7075,231,1.404257123],[1712,7071,231,1.402854123],[1711,7067,231,1.4012464980000001],[1710,7063,231,1.4000861230000001],[1709,7059,231,1.3989920390000001],[1708,7055,231,1.3978879560000002],[1707,7051,231,1.396737539],[1706,7047,231,1.3956301640000002],[1705,7043,231,1.3945377890000001],[1704,7039,231,1.3934150390000002],[1703,7035,231,1.392187706],[1702,7031,231,1.390776998],[1701,7027,231,1.389526373],[1700,7023,231,1.388263373],[1699,7019,231,1.386980998],[1698,7015,231,1.385655582],[1697,7011,231,1.3844207480000001],[1696,7007,231,1.383307832],[1695,7003,231,1.382218374],[1694,6999,231,1.381132249],[1693,6995,231,1.379985457],[1692,6991,231,1.378899582],[1691,6987,231,1.37781029],[1690,6983,231,1.376685582],[1689,6979,231,1.3755094159999999],[1688,6975,231,1.374228625],[1687,6971,231,1.372769875],[1686,6967,231,1.371424375],[1685,6963,231,1.370090417],[1684,6959,231,1.36853275],[1683,6955,231,1.3672897499999999],[1682,6951,231,1.3661786249999999],[1681,6947,231,1.3651124579999998],[1680,6943,231,1.3640447079999998],[1679,6939,231,1.3629019999999998],[1678,6935,231,1.361830167],[1677,6931,231,1.36074075],[1676,6927,231,1.359621],[1675,6923,231,1.357984709],[1674,6919,231,1.356701376],[1673,6915,231,1.35542821],[1672,6911,231,1.354108543],[1671,6907,231,1.352791001],[1670,6903,231,1.3515015849999998],[1669,6899,231,1.3504140429999998],[1668,6895,231,1.3493405849999998],[1667,6891,231,1.3482739179999998],[1666,6887,231,1.3471764599999998],[1665,6883,231,1.3460603349999998],[1664,6879,231,1.3449782509999997],[1663,6875,231,1.3439094179999997],[1662,6871,231,1.3428379179999999],[1661,6867,231,1.3416645019999998],[1660,6863,231,1.3405095439999997],[1659,6859,231,1.3392435849999997],[1658,6855,231,1.3379395019999998],[1657,6851,231,1.3364669599999999],[1656,6847,231,1.3352051269999998],[1655,6843,231,1.3340373349999999],[1654,6839,231,1.3329811269999998],[1653,6835,231,1.3319434179999998],[1652,6831,231,1.3309076679999998],[1651,6827,231,1.3298044589999998],[1650,6823,231,1.3287694179999998],[1649,6819,231,1.3277298339999999],[1648,6815,231,1.326692459],[1647,6811,231,1.325604293],[1646,6807,231,1.324163377],[1645,6803,231,1.322901294],[1644,6799,231,1.321673002],[1643,6795,231,1.3204007930000001],[1642,6791,231,1.319138168],[1641,6787,231,1.3177068760000001],[1640,6783,231,1.3163800010000002],[1639,6779,231,1.3151859170000002],[1638,6775,231,1.3141196250000002],[1637,6771,231,1.3130395840000002],[1636,6767,231,1.3120180000000001],[1635,6763,231,1.310997084],[1634,6759,231,1.309982334],[1633,6755,231,1.308919167],[1632,6751,231,1.307882959],[1631,6747,231,1.306671834],[1630,6743,231,1.305441376],[1629,6739,231,1.3042643760000001],[1628,6735,231,1.303032959],[1627,6731,231,1.3018255840000001],[1626,6727,231,1.3007358750000002],[1625,6723,231,1.2996755840000003],[1624,6719,231,1.2986522920000003],[1623,6715,231,1.2975268760000003],[1622,6711,231,1.2964540430000002],[1621,6707,231,1.2953558770000002],[1620,6703,231,1.2943367520000002],[1619,6699,231,1.2933215020000002],[1618,6695,231,1.292292919],[1617,6691,231,1.291055086],[1616,6687,231,1.289796836],[1615,6683,231,1.288625336],[1614,6679,231,1.2874540859999999],[1613,6675,231,1.2862522109999999],[1612,6671,231,1.284948794],[1611,6667,231,1.2838274189999999],[1610,6663,231,1.2827658359999998],[1609,6659,231,1.281705336],[1608,6655,231,1.280658627],[1607,6651,231,1.279582169],[1606,6647,231,1.278549127],[1605,6643,231,1.277529627],[1604,6639,231,1.276421752],[1603,6635,231,1.2753115430000002],[1602,6631,231,1.2740785840000002],[1601,6627,231,1.272835834],[1600,6623,231,1.271634793],[1599,6619,231,1.270306293],[1598,6615,231,1.268766918],[1597,6611,231,1.26772196],[1596,6607,231,1.266678043],[1595,6603,231,1.265650001],[1594,6599,231,1.26460471],[1593,6595,231,1.263551127],[1592,6591,231,1.262499586],[1591,6587,231,1.261491419],[1590,6583,231,1.2604798769999999],[1589,6579,231,1.2594488769999999],[1588,6575,231,1.258104043],[1587,6571,231,1.256854293],[1586,6567,231,1.255730377],[1585,6563,231,1.2545828769999998],[1584,6559,231,1.2534172519999998],[1583,6555,231,1.2522587519999997],[1582,6551,231,1.2511006689999997],[1581,6547,231,1.2500497939999997],[1580,6543,231,1.2490136689999998],[1579,6539,231,1.2480039189999999],[1578,6535,231,1.2469692519999998],[1577,6531,231,1.2459225019999998],[1576,6527,231,1.2449118769999998],[1575,6523,231,1.243890794],[1574,6519,231,1.242886336],[1573,6515,231,1.241788836],[1572,6511,231,1.240665086],[1571,6507,231,1.239425294],[1570,6503,231,1.2382253349999999],[1569,6499,231,1.237063044],[1568,6495,231,1.2358122939999998],[1567,6491,231,1.2346205439999998],[1566,6487,231,1.2335805859999998],[1565,6483,231,1.2325441699999997],[1564,6479,231,1.2315374609999996],[1563,6475,231,1.2305322939999996],[1562,6471,231,1.2294862099999997],[1561,6467,231,1.2284896689999998],[1560,6463,231,1.2274859189999998],[1559,6459,231,1.2264715019999999],[1558,6455,231,1.225182711],[1557,6451,231,1.223727086],[1556,6447,231,1.222587378],[1555,6443,231,1.221331878],[1554,6439,231,1.220170795],[1553,6435,231,1.21892292],[1552,6431,231,1.217839795],[1551,6427,231,1.216729587],[1550,6423,231,1.215731629],[1549,6419,231,1.214552879],[1548,6415,231,1.213490379],[1547,6411,231,1.212375296],[1546,6407,231,1.211382046],[1545,6403,231,1.210316129],[1544,6399,231,1.209316713],[1543,6395,231,1.208155838],[1542,6391,231,1.206956338],[1541,6387,231,1.2052780459999999],[1540,6383,231,1.2041112959999998],[1539,6379,231,1.2026506289999999],[1538,6375,231,1.201410795],[1537,6371,231,1.200247879],[1536,6367,231,1.199258129],[1535,6363,231,1.198198921],[1534,6359,231,1.1971341709999999],[1533,6355,231,1.195992129],[1532,6351,231,1.194937212],[1531,6347,231,1.1938350039999999],[1530,6343,231,1.192754379],[1529,6339,231,1.190785921],[1528,6335,231,1.189622754],[1527,6331,231,1.1884732949999999],[1526,6327,231,1.1873394199999998],[1525,6323,231,1.1861563779999997],[1524,6319,231,1.1849590439999997],[1523,6315,231,1.1838817939999997],[1522,6311,231,1.1828673359999997],[1521,6307,231,1.1818537109999998],[1520,6303,231,1.1808596689999997],[1519,6299,231,1.1797875859999998],[1518,6295,231,1.1787903779999998],[1517,6291,231,1.1777798359999998],[1516,6287,231,1.1767544199999997],[1515,6283,231,1.1755852109999998],[1514,6279,231,1.1743240859999997],[1513,6275,231,1.1728927939999998],[1512,6271,231,1.1717457519999999],[1511,6267,231,1.170591335],[1510,6263,231,1.169483377],[1509,6259,231,1.168274919],[1508,6255,231,1.167296961],[1507,6251,231,1.166300044],[1506,6247,231,1.1653170019999999],[1505,6243,231,1.1643365849999998],[1504,6239,231,1.1632909599999999],[1503,6235,231,1.162300502],[1502,6231,231,1.16131496],[1501,6227,231,1.160307002],[1500,6223,231,1.159308502],[1499,6219,231,1.158160043],[1498,6215,231,1.15696146],[1497,6211,231,1.155833627],[1496,6207,231,1.154720502],[1495,6203,231,1.153573335],[1494,6199,231,1.152420168],[1493,6195,231,1.1512475009999998],[1492,6191,231,1.1502310009999999],[1491,6187,231,1.1492440009999998],[1490,6183,231,1.1482700009999998],[1489,6179,231,1.1472848759999998],[1488,6175,231,1.1462458759999998],[1487,6171,231,1.1452453339999997],[1486,6167,231,1.1442325009999996],[1485,6163,231,1.1432475009999996],[1484,6159,231,1.1422134179999996],[1483,6155,231,1.1411118769999997],[1482,6151,231,1.1399626689999998],[1481,6147,231,1.1388577939999998],[1480,6143,231,1.1377505859999997],[1479,6139,231,1.1366366689999996],[1478,6135,231,1.1355240019999997],[1477,6131,231,1.1344415849999998],[1476,6127,231,1.1334552099999997],[1475,6123,231,1.1324859189999996],[1474,6119,231,1.1315134189999996],[1473,6115,231,1.1305015439999995],[1472,6111,231,1.1294683769999996],[1471,6107,231,1.1284641689999997],[1470,6103,231,1.1274231269999997],[1469,6099,231,1.1264554189999998],[1468,6095,231,1.1253663349999998],[1467,6091,231,1.1242622519999999],[1466,6087,231,1.1231023349999998],[1465,6083,231,1.1219461679999998],[1464,6079,231,1.120826376],[1463,6075,231,1.1196818759999998],[1462,6071,231,1.1185420419999998],[1461,6067,231,1.117567501],[1460,6063,231,1.116546001],[1459,6059,231,1.115492126],[1458,6055,231,1.11447496],[1457,6051,231,1.1133098769999998],[1456,6047,231,1.112343669],[1455,6043,231,1.111280794],[1454,6039,231,1.110289877],[1453,6035,231,1.109073752],[1452,6031,231,1.107771752],[1451,6027,231,1.1062263350000001],[1450,6023,231,1.10504971],[1449,6019,231,1.103958876],[1448,6015,231,1.102817584],[1447,6011,231,1.1015518340000001],[1446,6007,231,1.1005965430000002],[1445,6003,231,1.0995982510000002],[1444,5999,231,1.0986380430000002],[1443,5995,231,1.0976809590000003],[1442,5991,231,1.0966643340000002],[1441,5987,231,1.095665625],[1440,5983,231,1.094714167],[1439,5979,231,1.093751584],[1438,5975,231,1.092718334],[1437,5971,231,1.091676501],[1436,5967,231,1.090568001],[1435,5963,231,1.089414126],[1434,5959,231,1.0883384180000002],[1433,5955,231,1.0871429590000001],[1432,5951,231,1.085991501],[1431,5947,231,1.084874793],[1430,5943,231,1.083924501],[1429,5939,231,1.082925168],[1428,5935,231,1.0819665010000001],[1427,5931,231,1.0810063760000002],[1426,5927,231,1.0799782930000001],[1425,5923,231,1.0790282510000002],[1424,5919,231,1.0780617100000003],[1423,5915,231,1.0770255850000003],[1422,5911,231,1.0751508350000003],[1421,5907,231,1.0739929600000002],[1420,5903,231,1.0729093350000003],[1419,5899,231,1.0717791680000004],[1418,5895,231,1.0706513350000004],[1417,5891,231,1.0694962930000005],[1416,5887,231,1.0684059600000004],[1415,5883,231,1.0674526270000004],[1414,5879,231,1.0664757100000004],[1413,5875,231,1.0654870020000005],[1412,5871,231,1.0645182100000004],[1411,5867,231,1.0635019600000004],[1410,5863,231,1.0625370430000005],[1409,5859,231,1.0615635010000004],[1408,5855,231,1.0606152100000004],[1407,5851,231,1.0596625010000003],[1406,5847,231,1.0586149590000002],[1405,5843,231,1.0575191260000003],[1404,5839,231,1.0561187510000003],[1403,5835,231,1.0549825840000002],[1402,5831,231,1.0538780840000002],[1401,5827,231,1.0526881670000001],[1400,5823,231,1.051399417],[1399,5819,231,1.050416958],[1398,5815,231,1.049461],[1397,5811,231,1.04850925],[1396,5807,231,1.047543833],[1395,5803,231,1.046522667],[1394,5799,231,1.0455592500000002],[1393,5795,231,1.044616291],[1392,5791,231,1.043663875],[1391,5787,231,1.042680709],[1390,5783,231,1.041474126],[1389,5779,231,1.040350376],[1388,5775,231,1.0393032089999998],[1387,5771,231,1.0382383759999998],[1386,5767,231,1.0371547099999998],[1385,5763,231,1.0360840849999997],[1384,5759,231,1.0349539179999998],[1383,5755,231,1.0339860009999997],[1382,5751,231,1.0329979179999997],[1381,5747,231,1.0320284589999997],[1380,5743,231,1.0310591679999996],[1379,5739,231,1.0300417929999997],[1378,5735,231,1.0291045849999996],[1377,5731,231,1.0281165429999997],[1376,5727,231,1.0271636679999996],[1375,5723,231,1.0262207509999997],[1374,5719,231,1.0252215419999997],[1373,5715,231,1.0241610419999998],[1372,5711,231,1.0230644169999998],[1371,5707,231,1.0219636669999999],[1370,5703,231,1.020884126],[1369,5699,231,1.0197282509999999],[1368,5695,231,1.0185816259999998],[1367,5691,231,1.0176313339999998],[1366,5687,231,1.0166456259999999],[1365,5683,231,1.0156743759999998],[1364,5679,231,1.0147245429999998],[1363,5675,231,1.013756293],[1362,5671,231,1.012792293],[1361,5667,231,1.011864002],[1360,5663,231,1.010921294],[1359,5659,231,1.00998621],[1358,5655,231,1.008984585],[1357,5651,231,1.007634127],[1356,5647,231,1.006529668],[1355,5643,231,1.005498626],[1354,5639,231,1.004445835],[1353,5635,231,1.003400544],[1352,5631,231,1.002330502],[1351,5627,231,1.001240086],[1350,5623,231,1.000303336],[1349,5619,231,0.999371544],[1348,5615,231,0.9984284189999999],[1347,5611,231,0.9974787109999999],[1346,5607,231,0.9964941699999998],[1345,5603,231,0.9954694199999998],[1344,5599,231,0.9945457119999999],[1343,5595,231,0.9936215869999998],[1342,5591,231,0.9926796289999998],[1341,5587,231,0.9917305039999998],[1340,5583,231,0.9906526709999999],[1339,5579,231,0.9895056709999999],[1338,5575,231,0.9884378379999998],[1337,5571,231,0.9873908799999999],[1336,5567,231,0.9863083799999999],[1335,5563,231,0.9851753799999998],[1334,5559,231,0.9841247549999999],[1333,5555,231,0.9831569209999999],[1332,5551,231,0.9821713789999998],[1331,5547,231,0.9811778789999999],[1330,5543,231,0.9801578789999998],[1329,5539,231,0.9792199629999998],[1328,5535,231,0.9783025039999999],[1327,5531,231,0.9773817539999998],[1326,5527,231,0.9764432949999998],[1325,5523,231,0.9751954619999998],[1324,5519,231,0.9736265029999999],[1323,5515,231,0.9725958779999999],[1322,5511,231,0.97156017],[1321,5507,231,0.9705225449999999],[1320,5503,231,0.9694876699999999],[1319,5499,231,0.9684261289999999],[1318,5495,231,0.9675076709999999],[1317,5491,231,0.9665165869999999],[1316,5487,231,0.9655450459999999],[1315,5483,231,0.9646278369999999],[1314,5479,231,0.9637059619999999],[1313,5475,231,0.962780004],[1312,5471,231,0.961848921],[1311,5467,231,0.960918712],[1310,5463,231,0.959925754],[1309,5459,231,0.958838212],[1308,5455,231,0.9576845869999999],[1307,5451,231,0.9566285459999999],[1306,5447,231,0.9555855459999999],[1305,5443,231,0.9545195459999999],[1304,5439,231,0.9533676709999999],[1303,5435,231,0.9522035869999999],[1302,5431,231,0.9512771289999998],[1301,5427,231,0.9503159619999998],[1300,5423,231,0.9493985869999998],[1299,5419,231,0.9484845869999998],[1298,5415,231,0.9475648779999998],[1297,5411,231,0.9465672529999998],[1296,5407,231,0.9456491279999998],[1295,5403,231,0.9447306699999998],[1294,5399,231,0.9437981279999997],[1293,5395,231,0.9427947119999998],[1292,5391,231,0.9416405459999998],[1291,5387,231,0.9404477549999998],[1290,5383,231,0.9394417549999998],[1289,5379,231,0.9384092959999998],[1288,5375,231,0.9373257959999998],[1287,5371,231,0.9362911709999998],[1286,5367,231,0.9352511709999998],[1285,5363,231,0.9342980049999998],[1284,5359,231,0.9333459629999998],[1283,5355,231,0.9324378379999998],[1282,5351,231,0.9315149209999998],[1281,5347,231,0.9306073799999998],[1280,5343,231,0.9296297969999998],[1279,5339,231,0.9287126299999998],[1278,5335,231,0.9278102549999998],[1277,5331,231,0.9268815049999998],[1276,5327,231,0.9259239629999998],[1275,5323,231,0.9249674209999998],[1274,5319,231,0.9238979209999999],[1273,5315,231,0.9228305869999999],[1272,5311,231,0.9218049619999998],[1271,5307,231,0.9207732539999999],[1270,5303,231,0.9195721289999998],[1269,5299,231,0.9184945879999998],[1268,5295,231,0.9175759629999999],[1267,5291,231,0.9166637129999999],[1266,5287,231,0.9156609219999999],[1265,5283,231,0.9147239629999999],[1264,5279,231,0.9137500049999999],[1263,5275,231,0.9128580049999999],[1262,5271,231,0.911964547],[1261,5267,231,0.911064213],[1260,5263,231,0.9101623799999999],[1259,5259,231,0.9092554629999999],[1258,5255,231,0.908047046],[1257,5251,231,0.9068650039999999],[1256,5247,231,0.905590712],[1255,5243,231,0.904594795],[1254,5239,231,0.90347892],[1253,5235,231,0.902430462],[1252,5231,231,0.901281878],[1251,5227,231,0.900339961],[1250,5223,231,0.899372586],[1249,5219,231,0.898469378],[1248,5215,231,0.897410378],[1247,5211,231,0.896436461],[1246,5207,231,0.895413794],[1245,5203,231,0.894523169],[1244,5199,231,0.8935532939999999],[1243,5195,231,0.892600961],[1242,5191,231,0.891337336],[1241,5187,231,0.890282794],[1240,5183,231,0.889106752],[1239,5179,231,0.888095627],[1238,5175,231,0.88675346],[1237,5171,231,0.885755002],[1236,5167,231,0.884734836],[1235,5163,231,0.883828253],[1234,5159,231,0.882847461],[1233,5155,231,0.881963877],[1232,5151,231,0.881001377],[1231,5147,231,0.880035502],[1230,5143,231,0.8790715020000001],[1229,5139,231,0.8781387100000001],[1228,5135,231,0.8769328350000001],[1227,5131,231,0.8756233350000001],[1226,5127,231,0.8745315430000001],[1225,5123,231,0.8735561260000001],[1224,5119,231,0.8724971260000001],[1223,5115,231,0.8714743760000001],[1222,5111,231,0.8704327920000001],[1221,5107,231,0.8693204170000001],[1220,5103,231,0.8682717500000001],[1219,5099,231,0.8673894590000001],[1218,5095,231,0.8664464590000001],[1217,5091,231,0.865551959],[1216,5087,231,0.864657209],[1215,5083,231,0.863684334],[1214,5079,231,0.862753042],[1213,5075,231,0.861864375],[1212,5071,231,0.860960666],[1211,5067,231,0.860075041],[1210,5063,231,0.8591813739999999],[1209,5059,231,0.858195457],[1208,5055,231,0.857162582],[1207,5051,231,0.85613379],[1206,5047,231,0.855092998],[1205,5043,231,0.854100748],[1204,5039,231,0.853021082],[1203,5035,231,0.851991998],[1202,5031,231,0.850919206],[1201,5027,231,0.849945998],[1200,5023,231,0.849040581],[1199,5019,231,0.8481032470000001],[1198,5015,231,0.847145581],[1197,5011,231,0.846169122],[1196,5007,231,0.84529083],[1195,5003,231,0.844335205],[1194,4999,231,0.843429288],[1193,4995,231,0.8421664130000001],[1192,4991,231,0.8411378300000001],[1191,4987,231,0.8400341210000001],[1190,4983,231,0.8390333710000001],[1189,4979,231,0.8378849130000001],[1188,4975,231,0.8368982880000001],[1187,4971,231,0.8358394960000001],[1186,4967,231,0.8347858710000001],[1185,4963,231,0.8338321210000001],[1184,4959,231,0.8329219130000002],[1183,4955,231,0.8319852050000002],[1182,4951,231,0.8311123300000002],[1181,4947,231,0.8300985380000002],[1180,4943,231,0.8292154970000002],[1179,4939,231,0.8282701640000002],[1178,4935,231,0.8273957890000002],[1177,4931,231,0.8264377890000002],[1176,4927,231,0.8254572890000001],[1175,4923,231,0.8241960800000001],[1174,4919,231,0.8231950380000002],[1173,4915,231,0.8219372050000001],[1172,4911,231,0.8209031220000002],[1171,4907,231,0.8195104140000001],[1170,4903,231,0.8184600390000001],[1169,4899,231,0.8175575810000001],[1168,4895,231,0.8166387060000001],[1167,4891,231,0.8157372060000001],[1166,4887,231,0.8148699560000001],[1165,4883,231,0.8139377890000001],[1164,4879,231,0.8130327470000002],[1163,4875,231,0.8121487050000001],[1162,4871,231,0.8112852890000002],[1161,4867,231,0.8104129140000002],[1160,4863,231,0.8095423300000002],[1159,4859,231,0.8085912470000002],[1158,4855,231,0.8075577470000002],[1157,4851,231,0.8064414550000002],[1156,4847,231,0.8053923300000002],[1155,4843,231,0.8044169960000002],[1154,4839,231,0.8034073710000001],[1153,4835,231,0.8023988290000001],[1152,4831,231,0.8012174540000001],[1151,4827,231,0.8002559540000002],[1150,4823,231,0.7993642460000001],[1149,4819,231,0.7984117880000001],[1148,4815,231,0.7975530380000001],[1147,4811,231,0.7965631630000001],[1146,4807,231,0.7957043720000001],[1145,4803,231,0.7947847050000001],[1144,4799,231,0.7939329970000001],[1143,4795,231,0.7930099970000001],[1142,4791,231,0.7920347890000001],[1141,4787,231,0.7909498720000001],[1140,4783,231,0.7899470800000001],[1139,4779,231,0.7888269970000001],[1138,4775,231,0.7878851640000002],[1137,4771,231,0.7867474140000001],[1136,4767,231,0.7857882060000001],[1135,4763,231,0.7847496650000001],[1134,4759,231,0.7838839570000001],[1133,4755,231,0.7828790820000001],[1132,4751,231,0.7819292480000001],[1131,4747,231,0.7810372480000001],[1130,4743,231,0.7800540400000001],[1129,4739,231,0.7791884560000001],[1128,4735,231,0.7783292060000001],[1127,4731,231,0.7774757060000002],[1126,4727,231,0.7766077890000002],[1125,4723,231,0.7757339970000001],[1124,4719,231,0.7745176630000001],[1123,4715,231,0.7732852470000001],[1122,4711,231,0.7723400380000002],[1121,4707,231,0.7711932460000002],[1120,4703,231,0.7702101620000001],[1119,4699,231,0.7688654540000002],[1118,4695,231,0.7678492040000001],[1117,4691,231,0.7669724540000001],[1116,4687,231,0.7660870380000001],[1115,4683,231,0.7652315800000001],[1114,4679,231,0.7642754960000001],[1113,4675,231,0.7633972460000001],[1112,4671,231,0.7624567040000001],[1111,4667,231,0.7616098290000001],[1110,4663,231,0.7607556630000001],[1109,4659,231,0.7599168290000001],[1108,4655,231,0.7590425370000001],[1107,4651,231,0.7581109530000001],[1106,4647,231,0.7571104530000001],[1105,4643,231,0.7561427860000002],[1104,4639,231,0.7551958700000002],[1103,4635,231,0.7542677450000003],[1102,4631,231,0.7532937870000003],[1101,4627,231,0.7523653290000003],[1100,4623,231,0.7514393290000003],[1099,4619,231,0.7505937040000004],[1098,4615,231,0.7496907460000004],[1097,4611,231,0.7488530370000004],[1096,4607,231,0.7479969540000004],[1095,4603,231,0.7470999960000004],[1094,4599,231,0.7462382880000005],[1093,4595,231,0.7453871210000005],[1092,4591,231,0.7445182050000004],[1091,4587,231,0.7436485800000004],[1090,4583,231,0.7425059960000004],[1089,4579,231,0.7414864130000004],[1088,4575,231,0.7405422470000004],[1087,4571,231,0.7395807890000003],[1086,4567,231,0.7385972060000003],[1085,4563,231,0.7376496650000003],[1084,4559,231,0.7367225810000003],[1083,4555,231,0.7357506640000003],[1082,4551,231,0.7348904140000003],[1081,4547,231,0.7340193730000003],[1080,4543,231,0.7331389980000003],[1079,4539,231,0.7322947890000002],[1078,4535,231,0.7314629140000002],[1077,4531,231,0.7305956640000002],[1076,4527,231,0.7297240810000002],[1075,4523,231,0.7288752060000002],[1074,4519,231,0.7280277900000002],[1073,4515,231,0.7271934150000001],[1072,4511,231,0.7263644980000001],[1071,4507,231,0.7253932480000002],[1070,4503,231,0.7245314150000002],[1069,4499,231,0.7235609980000002],[1068,4495,231,0.7226054560000001],[1067,4491,231,0.7216028310000001],[1066,4487,231,0.7206069970000001],[1065,4483,231,0.719658831],[1064,4479,231,0.718745998],[1063,4475,231,0.7178325400000001],[1062,4471,231,0.716968582],[1061,4467,231,0.716133248],[1060,4463,231,0.715306123],[1059,4459,231,0.7144619139999999],[1058,4455,231,0.7135602889999999],[1057,4451,231,0.7127096229999998],[1056,4447,231,0.7118688309999999],[1055,4443,231,0.7110022899999998],[1054,4439,231,0.7100984149999998],[1053,4435,231,0.7089283319999998],[1052,4431,231,0.7079760819999998],[1051,4427,231,0.7068863739999999],[1050,4423,231,0.7059382489999999],[1049,4419,231,0.7048057489999999],[1048,4415,231,0.7038798329999999],[1047,4411,231,0.7028291249999999],[1046,4407,231,0.7018567499999999],[1045,4403,231,0.7009093329999999],[1044,4399,231,0.7000532079999999],[1043,4395,231,0.6991610829999999],[1042,4391,231,0.698334583],[1041,4387,231,0.697439374],[1040,4383,231,0.696549374],[1039,4379,231,0.695656457],[1038,4375,231,0.69483204],[1037,4371,231,0.693939831],[1036,4367,231,0.6930879560000001],[1035,4363,231,0.691953997],[1034,4359,231,0.69098508],[1033,4355,231,0.6898058300000001],[1032,4351,231,0.6888734970000001],[1031,4347,231,0.6879398720000001],[1030,4343,231,0.6870019140000001],[1029,4339,231,0.6860239980000001],[1028,4335,231,0.6849902890000001],[1027,4331,231,0.6841772470000002],[1026,4327,231,0.6833144970000001],[1025,4323,231,0.6824904970000001],[1024,4319,231,0.6816775800000001],[1023,4315,231,0.6808151630000001],[1022,4311,231,0.6799340800000001],[1021,4307,231,0.6791176220000001],[1020,4303,231,0.6782939970000001],[1019,4299,231,0.6774489970000002],[1018,4295,231,0.6766310390000002],[1017,4291,231,0.6758058300000002],[1016,4287,231,0.6749192050000001],[1015,4283,231,0.6740065390000002],[1014,4279,231,0.6730978310000002],[1013,4275,231,0.6722149980000002],[1012,4271,231,0.6713240820000002],[1011,4267,231,0.6704283740000001],[1010,4263,231,0.6695423320000001],[1009,4259,231,0.6686624150000001],[1008,4255,231,0.6677639570000001],[1007,4251,231,0.6669212900000001],[1006,4247,231,0.6660826230000001],[1005,4243,231,0.6652751230000001],[1004,4239,231,0.6644634560000001],[1003,4235,231,0.6635931650000001],[1002,4231,231,0.6627634980000001],[1001,4227,231,0.6619010820000001],[1000,4223,231,0.661096623],[999,4219,231,0.6602884560000001],[998,4215,231,0.6594900810000001],[997,4211,231,0.658677664],[996,4207,231,0.6577808310000001],[995,4203,231,0.6569035390000001],[994,4199,231,0.6558860390000001],[993,4195,231,0.6549783310000001],[992,4191,231,0.6540687900000002],[991,4187,231,0.6531945400000002],[990,4183,231,0.6522703730000002],[989,4179,231,0.6513864150000003],[988,4175,231,0.6503509570000002],[987,4171,231,0.6495392900000002],[986,4167,231,0.6487444980000002],[985,4163,231,0.6479371230000002],[984,4159,231,0.6470437480000002],[983,4155,231,0.6461410400000002],[982,4151,231,0.6453185400000002],[981,4147,231,0.6445210400000002],[980,4143,231,0.6437108730000002],[979,4139,231,0.6428577480000002],[978,4135,231,0.6417364980000002],[977,4131,231,0.6407700810000002],[976,4127,231,0.6398789560000002],[975,4123,231,0.6390063720000002],[974,4119,231,0.6380939550000002],[973,4115,231,0.6372153300000002],[972,4111,231,0.6362564550000002],[971,4107,231,0.6352539970000002],[970,4103,231,0.6344692050000001],[969,4099,231,0.6336332470000001],[968,4095,231,0.6328264550000001],[967,4091,231,0.6320210380000001],[966,4087,231,0.6312301220000001],[965,4083,231,0.6303982880000001],[964,4079,231,0.6295669970000001],[963,4075,231,0.6287654970000001],[962,4071,231,0.627977705],[961,4067,231,0.62718158],[960,4063,231,0.62634683],[959,4059,231,0.6255330800000001],[958,4055,231,0.6246366630000001],[957,4051,231,0.623753246],[956,4047,231,0.622859746],[955,4043,231,0.6220074120000001],[954,4039,231,0.6211094960000001],[953,4035,231,0.6201866630000001],[952,4031,231,0.6193193300000002],[951,4027,231,0.6184629970000002],[950,4023,231,0.6176742050000001],[949,4019,231,0.6168525800000001],[948,4015,231,0.6160725800000001],[947,4011,231,0.6152879550000001],[946,4007,231,0.6145033720000002],[945,4003,231,0.6136755800000001],[944,3999,231,0.6128911630000001],[943,3995,231,0.6120767880000001],[942,3991,231,0.611298996],[941,3987,231,0.610515329],[940,3983,231,0.609728995],[939,3979,231,0.608868954],[938,3975,231,0.607901037],[937,3971,231,0.60695662],[936,3967,231,0.606101161],[935,3963,231,0.605209994],[934,3959,231,0.604304536],[933,3955,231,0.603432495],[932,3951,231,0.6025065359999999],[931,3947,231,0.601508411],[930,3943,231,0.600715786],[929,3939,231,0.599826328],[928,3935,231,0.599045036],[927,3931,231,0.598199244],[926,3927,231,0.597375619],[925,3923,231,0.596472494],[924,3919,231,0.595692036],[923,3915,231,0.5948417859999999],[922,3911,231,0.5940626609999999],[921,3907,231,0.593181953],[920,3903,231,0.592305953],[919,3899,231,0.591048994],[918,3895,231,0.589987953],[917,3891,231,0.589132495],[916,3887,231,0.588264995],[915,3883,231,0.587406412],[914,3879,231,0.58654187],[913,3875,231,0.585688536],[912,3871,231,0.584859994],[911,3867,231,0.584036535],[910,3863,231,0.5832370769999999],[909,3859,231,0.5824222849999999],[908,3855,231,0.5815904099999999],[907,3851,231,0.5807563259999999],[906,3847,231,0.57990141],[905,3843,231,0.579134493],[904,3839,231,0.57835466],[903,3835,231,0.577584243],[902,3831,231,0.576783618],[901,3827,231,0.576014326],[900,3823,231,0.575016535],[899,3819,231,0.574079326],[898,3815,231,0.573157992],[897,3811,231,0.5723210339999999],[896,3807,231,0.5714724929999999],[895,3803,231,0.5706185759999999],[894,3799,231,0.5697697419999999],[893,3795,231,0.5688386169999998],[892,3791,231,0.5679618249999998],[891,3787,231,0.5671719089999998],[890,3783,231,0.5663890339999998],[889,3779,231,0.5656164499999998],[888,3775,231,0.5648349499999998],[887,3771,231,0.5639975329999999],[886,3767,231,0.5631946159999999],[885,3763,231,0.5623644909999999],[884,3759,231,0.5616008249999999],[883,3755,231,0.5608272829999998],[882,3751,231,0.5600645749999998],[881,3747,231,0.5592620749999998],[880,3743,231,0.5584427419999998],[879,3739,231,0.5575739079999997],[878,3735,231,0.5567227419999997],[877,3731,231,0.5558601169999997],[876,3727,231,0.5550383669999998],[875,3723,231,0.5541815339999998],[874,3719,231,0.5533518259999998],[873,3715,231,0.5525196169999997],[872,3711,231,0.5516968669999998],[871,3707,231,0.5509400339999998],[870,3703,231,0.5501044089999998],[869,3699,231,0.5493524089999998],[868,3695,231,0.5485617429999998],[867,3691,231,0.5478122009999998],[866,3687,231,0.5469697429999998],[865,3683,231,0.5462138679999998],[864,3679,231,0.5454414099999998],[863,3675,231,0.5446911179999998],[862,3671,231,0.5439181589999998],[861,3667,231,0.5430199919999998],[860,3663,231,0.5421459919999998],[859,3659,231,0.5412914499999998],[858,3655,231,0.5404014919999998],[857,3651,231,0.5394560339999998],[856,3647,231,0.5385570339999998],[855,3643,231,0.5377334089999998],[854,3639,231,0.5369242839999998],[853,3635,231,0.5360920759999999],[852,3631,231,0.5352827009999999],[851,3627,231,0.5345345759999999],[850,3623,231,0.5337769509999999],[849,3619,231,0.5330204929999999],[848,3615,231,0.5322783259999999],[847,3611,231,0.531533034],[846,3607,231,0.5307764509999999],[845,3603,231,0.5299812429999999],[844,3599,231,0.5292338259999999],[843,3595,231,0.5284764929999999],[842,3591,231,0.5277341179999999],[841,3587,231,0.526985493],[840,3583,231,0.52622141],[839,3579,231,0.525173119],[838,3575,231,0.524350578],[837,3571,231,0.523482495],[836,3567,231,0.522644161],[835,3563,231,0.52183137],[834,3559,231,0.520997411],[833,3555,231,0.5200548279999999],[832,3551,231,0.5192502029999999],[831,3547,231,0.51843062],[830,3543,231,0.517675828],[829,3539,231,0.516908786],[828,3535,231,0.516156995],[827,3531,231,0.51541612],[826,3527,231,0.51467387],[825,3523,231,0.513904662],[824,3519,231,0.5131349119999999],[823,3515,231,0.512392078],[822,3511,231,0.511658078],[821,3507,231,0.510907578],[820,3503,231,0.510168661],[819,3499,231,0.5093618280000001],[818,3495,231,0.5084594120000001],[817,3491,231,0.5076076620000001],[816,3487,231,0.5068050370000001],[815,3483,231,0.5060105370000001],[814,3479,231,0.5051626210000001],[813,3475,231,0.5043058710000001],[812,3471,231,0.5034977460000001],[811,3467,231,0.5026957460000001],[810,3463,231,0.5018504960000001],[809,3459,231,0.5011023710000001],[808,3455,231,0.5003351210000001],[807,3451,231,0.4996044960000001],[806,3447,231,0.4988531210000001],[805,3443,231,0.49811449600000013],[804,3439,231,0.4973844960000001],[803,3435,231,0.49659187100000013],[802,3431,231,0.49585091200000014],[801,3427,231,0.49511770400000016],[800,3423,231,0.4943817870000002],[799,3419,231,0.4936447870000002],[798,3415,231,0.4928737460000002],[797,3411,231,0.4921211210000002],[796,3407,231,0.4912011630000002],[795,3403,231,0.49022666300000023],[794,3399,231,0.4894320800000002],[793,3395,231,0.4886441210000002],[792,3391,231,0.4878707040000002],[791,3387,231,0.48705953800000024],[790,3383,231,0.48626624700000026],[789,3379,231,0.4854318300000003],[788,3375,231,0.4847004550000003],[787,3371,231,0.4839594960000003],[786,3367,231,0.48320607900000034],[785,3363,231,0.4824815380000003],[784,3359,231,0.48175732900000034],[783,3355,231,0.48103645400000034],[782,3351,231,0.48025753700000035],[781,3347,231,0.47954187100000034],[780,3343,231,0.47882653700000033],[779,3339,231,0.47811020300000034],[778,3335,231,0.47739645300000033],[777,3331,231,0.47665466200000034],[776,3327,231,0.47593116200000035],[775,3323,231,0.47514391200000033],[774,3319,231,0.4743693710000003],[773,3315,231,0.4735306210000003],[772,3311,231,0.4727599540000003],[771,3307,231,0.47197807900000033],[770,3303,231,0.47120132900000034],[769,3299,231,0.47041766200000035],[768,3295,231,0.46964395400000036],[767,3291,231,0.46886774600000036],[766,3287,231,0.4680906620000004],[765,3283,231,0.46734666200000036],[764,3279,231,0.46660103700000033],[763,3275,231,0.4658881620000003],[762,3271,231,0.46517191200000035],[761,3267,231,0.4644349530000004],[760,3263,231,0.46366224500000036],[759,3259,231,0.46294449500000034],[758,3255,231,0.46220853600000034],[757,3251,231,0.4614745360000003],[756,3247,231,0.46077457700000035],[755,3243,231,0.4600309520000003],[754,3239,231,0.45930628600000034],[753,3235,231,0.45853537000000033],[752,3231,231,0.4577687450000003],[751,3227,231,0.4569874120000003],[750,3223,231,0.45622045400000033],[749,3219,231,0.4554384960000003],[748,3215,231,0.4546785800000003],[747,3211,231,0.45387491300000027],[746,3207,231,0.45310766300000027],[745,3203,231,0.45231682900000025],[744,3199,231,0.45150345400000025],[743,3195,231,0.45079712100000024],[742,3191,231,0.45005103700000026],[741,3187,231,0.44933070400000025],[740,3183,231,0.44862966200000026],[739,3179,231,0.44791187100000024],[738,3175,231,0.44718437100000025],[737,3171,231,0.44645507900000025],[736,3167,231,0.44575712100000026],[735,3163,231,0.44504816200000025],[734,3159,231,0.44432412000000027],[733,3155,231,0.44360232900000024],[732,3151,231,0.4428513710000002],[731,3147,231,0.4418937870000002],[730,3143,231,0.4410369540000002],[729,3139,231,0.4402752040000002],[728,3135,231,0.4395200790000002],[727,3131,231,0.43875528700000016],[726,3127,231,0.43797232800000013],[725,3123,231,0.43721032800000015],[724,3119,231,0.43645891100000017],[723,3115,231,0.4356923280000002],[722,3111,231,0.43496916100000016],[721,3107,231,0.43425720300000015],[720,3103,231,0.43352862000000014],[719,3099,231,0.43282182800000013],[718,3095,231,0.4321266620000001],[717,3091,231,0.4314348280000001],[716,3087,231,0.4306782870000001],[715,3083,231,0.4299419950000001],[714,3079,231,0.42920903700000007],[713,3075,231,0.42846495400000006],[712,3071,231,0.4277728290000001],[711,3067,231,0.4270888710000001],[710,3063,231,0.4263987870000001],[709,3059,231,0.4256444960000001],[708,3055,231,0.4249196630000001],[707,3051,231,0.42416562200000013],[706,3047,231,0.42340924700000016],[705,3043,231,0.42264645600000017],[704,3039,231,0.4218603730000002],[703,3035,231,0.4211121650000002],[702,3031,231,0.42032441500000023],[701,3027,231,0.4195802070000002],[700,3023,231,0.4187561660000002],[699,3019,231,0.4180122080000002],[698,3015,231,0.4173009580000002],[697,3011,231,0.4165840830000002],[696,3007,231,0.4158599580000002],[695,3003,231,0.4151204160000002],[694,2999,231,0.4143690410000002],[693,2995,231,0.4136262080000002],[692,2991,231,0.4129356250000002],[691,2987,231,0.4122490000000002],[690,2983,231,0.4115487500000002],[689,2979,231,0.4108664580000002],[688,2975,231,0.4101735420000002],[687,2971,231,0.4094488750000002],[686,2967,231,0.4086212500000002],[685,2963,231,0.4078529580000002],[684,2959,231,0.4070744170000002],[683,2955,231,0.4063401670000002],[682,2951,231,0.4055764170000002],[681,2947,231,0.4048292920000002],[680,2943,231,0.4040598750000002],[679,2939,231,0.4033124160000002],[678,2935,231,0.40242266600000015],[677,2931,231,0.40170508200000016],[676,2927,231,0.40093420700000015],[675,2923,231,0.40020799900000015],[674,2919,231,0.39946749900000017],[673,2915,231,0.3987907070000002],[672,2911,231,0.39802566600000017],[671,2907,231,0.39732741600000016],[670,2903,231,0.39654287400000016],[669,2899,231,0.39582429100000016],[668,2895,231,0.3950756240000002],[667,2891,231,0.3944004990000002],[666,2887,231,0.3936432490000002],[665,2883,231,0.3928785410000002],[664,2879,231,0.3920449570000002],[663,2875,231,0.3912618740000002],[662,2871,231,0.3900674570000002],[661,2867,231,0.38932433200000016],[660,2863,231,0.38840320700000014],[659,2859,231,0.3875807900000001],[658,2855,231,0.3864503320000001],[657,2851,231,0.3856167480000001],[656,2847,231,0.38495045700000013],[655,2843,231,0.3842787070000001],[654,2839,231,0.3835392900000001],[653,2835,231,0.3828243320000001],[652,2831,231,0.3821592900000001],[651,2827,231,0.3814787060000001],[650,2823,231,0.3807623310000001],[649,2819,231,0.3800176220000001],[648,2815,231,0.3793463720000001],[647,2811,231,0.3786485390000001],[646,2807,231,0.3779837470000001],[645,2803,231,0.3772905390000001],[644,2799,231,0.3766246640000001],[643,2795,231,0.3758916220000001],[642,2791,231,0.3751439970000001],[641,2787,231,0.3744032470000001],[640,2783,231,0.37363833000000013],[639,2779,231,0.37277820500000014],[638,2775,231,0.3720250800000001],[637,2771,231,0.37128599700000015],[636,2767,231,0.37055641400000017],[635,2763,231,0.3698325800000002],[634,2759,231,0.3691142470000002],[633,2755,231,0.36836624700000015],[632,2751,231,0.3676675380000001],[631,2747,231,0.36695349700000013],[630,2743,231,0.3662769550000001],[629,2739,231,0.3656076640000001],[628,2735,231,0.3649351220000001],[627,2731,231,0.3642109140000001],[626,2727,231,0.3634824550000001],[625,2723,231,0.3627983710000001],[624,2719,231,0.3621358300000001],[623,2715,231,0.3614406630000001],[622,2711,231,0.3607679130000001],[621,2707,231,0.3601070380000001],[620,2703,231,0.3594404130000001],[619,2699,231,0.3587104540000001],[618,2695,231,0.35801882900000015],[617,2691,231,0.35728549600000015],[616,2687,231,0.35652795400000015],[615,2683,231,0.35579357900000014],[614,2679,231,0.3550545370000001],[613,2675,231,0.3542924120000001],[612,2671,231,0.3535577450000001],[611,2667,231,0.3527969950000001],[610,2663,231,0.35203387000000014],[609,2659,231,0.35130766200000013],[608,2655,231,0.35061957800000015],[607,2651,231,0.34981853700000015],[606,2647,231,0.34911891200000017],[605,2643,231,0.34846757800000017],[604,2639,231,0.34778599400000015],[603,2635,231,0.34706591100000017],[602,2631,231,0.3463962030000002],[601,2627,231,0.3457272860000002],[600,2623,231,0.34507124400000017],[599,2619,231,0.3444224940000002],[598,2615,231,0.34376586900000017],[597,2611,231,0.34309557700000015],[596,2607,231,0.34234891100000014],[595,2603,231,0.34163974400000013],[594,2599,231,0.34089599400000015],[593,2595,231,0.34018291100000014],[592,2591,231,0.33946891100000015],[591,2587,231,0.33874837000000013],[590,2583,231,0.3380136200000001],[589,2579,231,0.33729820300000013],[588,2575,231,0.3365860780000001],[587,2571,231,0.33588132800000015],[586,2567,231,0.33515453600000017],[585,2563,231,0.33445703600000015],[584,2559,231,0.3337804950000002],[583,2555,231,0.3331319530000002],[582,2551,231,0.3324737030000002],[581,2547,231,0.33182620300000015],[580,2543,231,0.33116391100000014],[579,2539,231,0.3304568270000001],[578,2535,231,0.32979495200000014],[577,2531,231,0.32915178600000017],[576,2527,231,0.3284968690000002],[575,2523,231,0.3278349940000002],[574,2519,231,0.3271865350000002],[573,2515,231,0.3265453270000002],[572,2511,231,0.3258424940000002],[571,2507,231,0.3251492440000002],[570,2503,231,0.32437011900000023],[569,2499,231,0.3236630350000002],[568,2495,231,0.3229583270000002],[567,2491,231,0.32226307700000023],[566,2487,231,0.3215541610000002],[565,2483,231,0.32086041100000023],[564,2479,231,0.32014437000000023],[563,2475,231,0.31945628600000026],[562,2471,231,0.31876632800000027],[561,2467,231,0.3180742870000003],[560,2463,231,0.3174230370000003],[559,2459,231,0.3167237450000003],[558,2455,231,0.31607899500000025],[557,2451,231,0.31540520300000024],[556,2447,231,0.31473757800000024],[555,2443,231,0.31410295300000024],[554,2439,231,0.31340874500000027],[553,2435,231,0.31278112000000025],[552,2431,231,0.31213053700000026],[551,2427,231,0.31150149500000024],[550,2423,231,0.3108582030000002],[549,2419,231,0.3102148700000002],[548,2415,231,0.3094991200000002],[547,2411,231,0.3087154120000002],[546,2407,231,0.3078737870000002],[545,2403,231,0.30718999500000016],[544,2399,231,0.3065027040000002],[543,2395,231,0.3058031210000002],[542,2391,231,0.3051146210000002],[541,2387,231,0.3044029550000002],[540,2383,231,0.3037217470000002],[539,2379,231,0.3030356640000002],[538,2375,231,0.3023606220000002],[537,2371,231,0.30162478900000017],[536,2367,231,0.3009872470000002],[535,2363,231,0.3003259970000002],[534,2359,231,0.2996896640000002],[533,2355,231,0.2990519970000002],[532,2351,231,0.29842762200000017],[531,2347,231,0.29779845600000016],[530,2343,231,0.29711499700000016],[529,2339,231,0.29646528900000013],[528,2335,231,0.29584374700000016],[527,2331,231,0.2952037470000002],[526,2327,231,0.2945744140000002],[525,2323,231,0.29392158100000015],[524,2319,231,0.29327508100000016],[523,2315,231,0.29264541400000016],[522,2311,231,0.29202487200000016],[521,2307,231,0.29128183100000016],[520,2303,231,0.2906362060000002],[519,2299,231,0.2899323730000002],[518,2295,231,0.2892373730000002],[517,2291,231,0.2885537060000002],[516,2287,231,0.2878684150000002],[515,2283,231,0.2871762900000002],[514,2279,231,0.2865041650000002],[513,2275,231,0.2857875400000002],[512,2271,231,0.28511904000000016],[511,2267,231,0.28438262300000017],[510,2263,231,0.28366887300000015],[509,2259,231,0.28301549800000014],[508,2255,231,0.28238358100000016],[507,2251,231,0.28175737300000014],[506,2247,231,0.2811307060000001],[505,2243,231,0.2804522900000001],[504,2239,231,0.2798344560000001],[503,2235,231,0.27920745600000013],[502,2231,231,0.27856753900000014],[501,2227,231,0.27793053900000014],[500,2223,231,0.27730149800000015],[499,2219,231,0.27667866400000013],[498,2215,231,0.2760404140000001],[497,2211,231,0.2753515800000001],[496,2207,231,0.27468341400000007],[495,2203,231,0.27398258100000006],[494,2199,231,0.27331008100000004],[493,2195,231,0.272583789],[492,2191,231,0.27192370600000004],[491,2187,231,0.27122353900000007],[490,2183,231,0.2705477890000001],[489,2179,231,0.2698602060000001],[488,2175,231,0.2691992470000001],[487,2171,231,0.2685274550000001],[486,2167,231,0.26785849600000006],[485,2163,231,0.26722645500000003],[484,2159,231,0.26659820500000003],[483,2155,231,0.26591937200000004],[482,2151,231,0.26531045500000006],[481,2147,231,0.26471049700000004],[480,2143,231,0.26410420500000004],[479,2139,231,0.263462538],[478,2135,231,0.26286412200000003],[477,2131,231,0.26225233000000003],[476,2127,231,0.26164558000000004],[475,2123,231,0.26103658],[474,2119,231,0.260427413],[473,2115,231,0.259819913],[472,2111,231,0.259170163],[471,2107,231,0.25841858],[470,2103,231,0.257686163],[469,2099,231,0.25694291300000005],[468,2095,231,0.25628795500000007],[467,2091,231,0.25553499600000007],[466,2087,231,0.25487049600000006],[465,2083,231,0.25412391200000006],[464,2079,231,0.25347407800000005],[463,2075,231,0.25275203600000007],[462,2071,231,0.25210253600000004],[461,2067,231,0.25141599400000003],[460,2063,231,0.250822244],[459,2059,231,0.250132577],[458,2055,231,0.24953732700000003],[457,2051,231,0.24887832700000004],[456,2047,231,0.24828332700000003],[455,2043,231,0.24762395200000004],[454,2039,231,0.24697974400000003],[453,2035,231,0.24632207700000003],[452,2031,231,0.24572982700000004],[451,2027,231,0.24506861900000004],[450,2023,231,0.24446957700000005],[449,2019,231,0.24381203500000004],[448,2015,231,0.24320249300000005],[447,2011,231,0.24252782600000006],[446,2007,231,0.24189361800000006],[445,2003,231,0.24112590900000005],[444,1999,231,0.24045774200000006],[443,1995,231,0.23966707600000006],[442,1991,231,0.23901078400000006],[441,1987,231,0.23824911700000007],[440,1983,231,0.23760270000000006],[439,1979,231,0.23681703400000007],[438,1975,231,0.23618390900000005],[437,1971,231,0.23544353400000007],[436,1967,231,0.23485128400000008],[435,1963,231,0.23418903400000007],[434,1959,231,0.23356136800000007],[433,1955,231,0.23290666000000007],[432,1951,231,0.23232149300000007],[431,1947,231,0.2316684930000001],[430,1943,231,0.23108282700000007],[429,1939,231,0.23033061900000007],[428,1935,231,0.22974170200000008],[427,1931,231,0.22888799400000007],[426,1927,231,0.22830207800000007],[425,1923,231,0.22771587000000007],[424,1919,231,0.22712841100000006],[423,1915,231,0.22653849400000006],[422,1911,231,0.22593824400000007],[421,1907,231,0.22528020200000007],[420,1903,231,0.22451811900000007],[419,1899,231,0.22387136900000007],[418,1895,231,0.22320770300000006],[417,1891,231,0.22257653600000007],[416,1887,231,0.2219513280000001],[415,1883,231,0.22131186900000008],[414,1879,231,0.2206735360000001],[413,1875,231,0.2200286200000001],[412,1871,231,0.2194092860000001],[411,1867,231,0.21878807800000008],[410,1863,231,0.21814670300000008],[409,1859,231,0.21757020300000007],[408,1855,231,0.21697924400000007],[407,1851,231,0.21640474400000007],[406,1847,231,0.21583224400000006],[405,1843,231,0.21524332700000007],[404,1839,231,0.21460299400000007],[403,1835,231,0.21401382700000007],[402,1831,231,0.21340124400000007],[401,1827,231,0.21282916000000007],[400,1823,231,0.21225836900000009],[399,1819,231,0.21168266100000008],[398,1815,231,0.21110336900000007],[397,1811,231,0.21052811900000007],[396,1807,231,0.20995661900000007],[395,1803,231,0.20936691100000007],[394,1799,231,0.20879566100000008],[393,1795,231,0.2082067860000001],[392,1791,231,0.2075584530000001],[391,1787,231,0.2068218280000001],[390,1783,231,0.2061780780000001],[389,1779,231,0.2055391190000001],[388,1775,231,0.2049262440000001],[387,1771,231,0.2043117440000001],[386,1767,231,0.2036907440000001],[385,1763,231,0.20308045200000008],[384,1759,231,0.20246807700000008],[383,1755,231,0.20176645200000007],[382,1751,231,0.20119424300000008],[381,1747,231,0.20060195200000008],[380,1743,231,0.20003403500000008],[379,1739,231,0.19946474400000008],[378,1735,231,0.19889357700000007],[377,1731,231,0.19832503500000007],[376,1727,231,0.19775882700000005],[375,1723,231,0.19712203600000006],[374,1719,231,0.19654282800000006],[373,1715,231,0.19593845300000007],[372,1711,231,0.19534816100000008],[371,1707,231,0.1947517440000001],[370,1703,231,0.1941851190000001],[369,1699,231,0.1936184530000001],[368,1695,231,0.1930546610000001],[367,1691,231,0.1924784110000001],[366,1687,231,0.1918615780000001],[365,1683,231,0.19120787000000009],[364,1679,231,0.19056941200000008],[363,1675,231,0.18994624600000007],[362,1671,231,0.18934374600000006],[361,1667,231,0.18874520400000006],[360,1663,231,0.18813637100000005],[359,1659,231,0.18752903800000006],[358,1655,231,0.18692241300000006],[357,1651,231,0.18632078800000007],[356,1647,231,0.18572516300000008],[355,1643,231,0.18512866300000008],[354,1639,231,0.1845298300000001],[353,1635,231,0.1839242050000001],[352,1631,231,0.1833204550000001],[351,1627,231,0.1827293300000001],[350,1623,231,0.1821659970000001],[349,1619,231,0.18158408100000012],[348,1615,231,0.18102837200000013],[347,1611,231,0.18041666400000014],[346,1607,231,0.17985583100000013],[345,1603,231,0.17926941400000013],[344,1599,231,0.17870603900000012],[343,1595,231,0.17815249700000013],[342,1591,231,0.17758220600000013],[341,1587,231,0.17696970600000014],[340,1583,231,0.17639574800000013],[339,1579,231,0.17581795600000014],[338,1575,231,0.17521299800000015],[337,1571,231,0.17460449800000014],[336,1567,231,0.17399129000000013],[335,1563,231,0.17337983200000012],[334,1559,231,0.17276295700000013],[333,1555,231,0.17211124900000013],[332,1551,231,0.17150895700000013],[331,1547,231,0.17088258200000012],[330,1543,231,0.17029604100000012],[329,1539,231,0.16970270800000012],[328,1535,231,0.1691019580000001],[327,1531,231,0.1685310000000001],[326,1527,231,0.1679858750000001],[325,1523,231,0.16742308400000008],[324,1519,231,0.16684704200000008],[323,1515,231,0.16624975100000008],[322,1511,231,0.1657051260000001],[321,1507,231,0.1651470010000001],[320,1503,231,0.1645970840000001],[319,1499,231,0.16402062600000009],[318,1495,231,0.16344650100000008],[317,1491,231,0.16287920900000008],[316,1487,231,0.1623304180000001],[315,1483,231,0.1617734590000001],[314,1479,231,0.1612252510000001],[313,1475,231,0.1606777930000001],[312,1471,231,0.1601316680000001],[311,1467,231,0.15957241800000008],[310,1463,231,0.15884775100000006],[309,1459,231,0.15827387600000006],[308,1455,231,0.15766629300000007],[307,1451,231,0.15707862600000008],[306,1447,231,0.15648425100000007],[305,1443,231,0.15589820900000007],[304,1439,231,0.15530916800000005],[303,1435,231,0.15470087700000004],[302,1431,231,0.15411783500000004],[301,1427,231,0.15353587700000004],[300,1423,231,0.15292991900000005],[299,1419,231,0.15232779400000004],[298,1415,231,0.15178525300000004],[297,1411,231,0.15124104400000005],[296,1407,231,0.15069333600000004],[295,1403,231,0.15014454400000005],[294,1399,231,0.14958208600000006],[293,1395,231,0.14904496100000006],[292,1391,231,0.14850866900000007],[291,1387,231,0.14797654400000007],[290,1383,231,0.14740183500000006],[289,1379,231,0.14679779300000007],[288,1375,231,0.14626850200000008],[287,1371,231,0.14569087700000008],[286,1367,231,0.14509137700000008],[285,1363,231,0.14456250200000006],[284,1359,231,0.14402671100000006],[283,1355,231,0.14349754400000006],[282,1351,231,0.14296891900000006],[281,1347,231,0.14239212700000006],[280,1343,231,0.14184016900000007],[279,1339,231,0.14126929400000007],[278,1335,231,0.14069779400000007],[277,1331,231,0.14012450300000007],[276,1327,231,0.13954250300000007],[275,1323,231,0.13894133600000005],[274,1319,231,0.13836587700000005],[273,1315,231,0.13779879400000006],[272,1311,231,0.13722904400000005],[271,1307,231,0.13666066900000004],[270,1303,231,0.13609379400000005],[269,1299,231,0.13553116900000003],[268,1295,231,0.13495454400000004],[267,1291,231,0.13442483600000005],[266,1287,231,0.13386412800000005],[265,1283,231,0.13333412800000005],[264,1279,231,0.13279646100000006],[263,1275,231,0.13227387700000007],[262,1271,231,0.13173204400000008],[261,1267,231,0.13117496000000006],[260,1263,231,0.13057296000000007],[259,1259,231,0.13002150200000007],[258,1255,231,0.12940250200000006],[257,1251,231,0.12881333500000006],[256,1247,231,0.12829108500000005],[255,1243,231,0.12776479400000004],[254,1239,231,0.12724021000000005],[253,1235,231,0.12670721000000004],[252,1231,231,0.12613729300000004],[251,1227,231,0.12554041800000004],[250,1223,231,0.12487671000000004],[249,1219,231,0.12418908500000005],[248,1215,231,0.12360137700000004],[247,1211,231,0.12304583600000003],[246,1207,231,0.12246325300000004],[245,1203,231,0.12189962800000004],[244,1199,231,0.12132550300000004],[243,1195,231,0.12075871200000005],[242,1191,231,0.12019892100000004],[241,1187,231,0.11963429600000004],[240,1183,231,0.11902517100000004],[239,1179,231,0.11840542100000004],[238,1175,231,0.11788779600000004],[237,1171,231,0.11735842100000005],[236,1167,231,0.11682350500000005],[235,1163,231,0.11629275500000005],[234,1159,231,0.11577179600000005],[233,1155,231,0.11525817100000005],[232,1151,231,0.11467558800000005],[231,1147,231,0.11412458800000005],[230,1143,231,0.11356462900000006],[229,1139,231,0.11305667100000005],[228,1135,231,0.11249142100000005],[227,1131,231,0.11194271300000005],[226,1127,231,0.11140500400000006],[225,1123,231,0.11087958800000006],[224,1119,231,0.11037275400000006],[223,1115,231,0.10985683700000005],[222,1111,231,0.10930475400000006],[221,1107,231,0.10875587900000006],[220,1103,231,0.10818600400000006],[219,1099,231,0.10761979600000006],[218,1095,231,0.10706008800000005],[217,1091,231,0.10651046300000006],[216,1087,231,0.10596346300000005],[215,1083,231,0.10541371300000005],[214,1079,231,0.10485992100000005],[213,1075,231,0.10430433800000005],[212,1071,231,0.10375212900000005],[211,1067,231,0.10320925400000006],[210,1063,231,0.10266854600000005],[209,1059,231,0.10212096300000005],[208,1055,231,0.10156788000000005],[207,1051,231,0.10104879700000005],[206,1047,231,0.10051479700000004],[205,1043,231,0.09998792200000005],[204,1039,231,0.09948146400000005],[203,1035,231,0.09897596400000004],[202,1031,231,0.09844504700000004],[201,1027,231,0.09791992200000003],[200,1023,231,0.09741788000000004],[199,1019,231,0.09685738000000003],[198,1015,231,0.09633808800000003],[197,1011,231,0.09583000500000002],[196,1007,231,0.09530396300000002],[195,1003,231,0.09473138000000002],[194,999,231,0.09416963000000002],[193,995,231,0.09352425500000001],[192,991,231,0.09295350500000002],[191,987,231,0.09208975500000002],[190,983,231,0.09143829600000003],[189,979,231,0.09087012900000004],[188,975,231,0.09026604500000003],[187,971,231,0.08971629500000003],[186,967,231,0.08916775300000003],[185,963,231,0.08862283700000002],[184,959,231,0.08809025300000002],[183,955,231,0.08755321100000002],[182,951,231,0.08701925300000002],[181,947,231,0.08647775300000002],[180,943,231,0.08590954500000002],[179,939,231,0.08530000400000001],[178,935,231,0.08480967000000002],[177,931,231,0.08428258600000002],[176,927,231,0.08371358600000002],[175,923,231,0.08321058600000002],[174,919,231,0.08268433600000001],[173,915,231,0.08218396100000001],[172,911,231,0.08166450300000001],[171,907,231,0.08116375300000002],[170,903,231,0.08067062800000002],[169,899,231,0.08017754400000002],[168,895,231,0.07969058500000002],[167,891,231,0.07915462700000002],[166,887,231,0.07865200200000001],[165,883,231,0.07815833500000001],[164,879,231,0.07766579400000001],[163,875,231,0.07717575200000001],[162,871,231,0.07668458600000001],[161,867,231,0.076190002],[160,863,231,0.07567862700000001],[159,859,231,0.07516016900000001],[158,855,231,0.07462316900000002],[157,851,231,0.07405691900000001],[156,847,231,0.07340004400000001],[155,843,231,0.07280650200000001],[154,839,231,0.072284335],[153,835,231,0.071757918],[152,831,231,0.07122845900000001],[151,827,231,0.070699626],[150,823,231,0.070171709],[149,819,231,0.069650709],[148,815,231,0.069133209],[147,811,231,0.068613334],[146,807,231,0.068072334],[145,803,231,0.067593209],[144,799,231,0.06711291700000001],[143,795,231,0.066634751],[142,791,231,0.066138001],[141,787,231,0.065658251],[140,783,231,0.065180668],[139,779,231,0.064693668],[138,775,231,0.064214501],[137,771,231,0.06372170999999999],[136,767,231,0.06322000099999998],[135,763,231,0.06270683399999999],[134,759,231,0.06222441799999999],[133,755,231,0.06174037599999999],[132,751,231,0.061251208999999994],[131,747,231,0.060765708999999994],[130,743,231,0.060245708999999995],[129,739,231,0.059753084],[128,735,231,0.059248876],[127,731,231,0.058711584],[126,727,231,0.058132709],[125,723,231,0.057616126],[124,719,231,0.057088834],[123,715,231,0.056581501],[122,711,231,0.056051626],[121,707,231,0.055534376],[120,703,231,0.055011876],[119,699,231,0.054502168000000004],[118,695,231,0.054004209000000004],[117,691,231,0.053532543],[116,687,231,0.053062001000000004],[115,683,231,0.052592126],[114,679,231,0.052121542],[113,675,231,0.051651417],[112,671,231,0.051180334],[111,667,231,0.050708543],[110,663,231,0.050199501],[109,659,231,0.049732959],[108,655,231,0.049265542],[107,651,231,0.048796084],[106,647,231,0.048328917000000006],[105,643,231,0.047862208],[104,639,231,0.047397125000000005],[103,635,231,0.046932209],[102,631,231,0.046465792000000006],[101,627,231,0.045998292],[100,623,231,0.045530459],[99,619,231,0.045066293],[98,615,231,0.044603376],[97,611,231,0.044134959],[96,607,231,0.043671459],[95,603,231,0.043204876],[94,599,231,0.042743043],[93,595,231,0.042277376],[92,591,231,0.04181671],[91,587,231,0.041348168],[90,583,231,0.040882668],[89,579,231,0.040421501],[88,575,231,0.039962792999999996],[87,571,231,0.039502459999999996],[86,567,231,0.039042043],[85,563,231,0.038578417999999996],[84,559,231,0.038118875999999996],[83,555,231,0.037660917999999995],[82,551,231,0.037203667999999995],[81,547,231,0.036745543],[80,543,231,0.036286668],[79,539,231,0.035828585],[78,535,231,0.035369335],[77,531,231,0.034910544],[76,527,231,0.034427628],[75,523,231,0.033947419],[74,519,231,0.033494294],[73,515,231,0.033015960000000004],[72,511,231,0.032531085],[71,507,231,0.032059543],[70,503,231,0.031583501],[69,499,231,0.031103501000000002],[68,495,231,0.030638668],[67,491,231,0.030171793000000002],[66,487,231,0.029691752000000002],[65,483,231,0.029214085],[64,479,231,0.028737918],[63,475,231,0.028257001],[62,471,231,0.027802209],[61,467,231,0.027328168],[60,463,231,0.026869626],[59,459,231,0.026378001],[58,455,231,0.025919376],[57,451,231,0.025446543000000002],[56,447,231,0.024981751000000003],[55,443,231,0.024475668000000003],[54,439,231,0.023993835],[53,435,231,0.02351346],[52,431,231,0.023057002],[51,427,231,0.022606418],[50,423,231,0.02215621],[49,419,231,0.021699918999999998],[48,415,231,0.021227752],[47,411,231,0.020746502],[46,407,231,0.020284002],[45,403,231,0.019837877],[44,399,231,0.019391335],[43,395,231,0.018944835],[42,391,231,0.01849721],[41,387,231,0.018029335],[40,383,231,0.017563835],[39,379,231,0.017097502],[38,375,231,0.016637502000000002],[37,371,231,0.016173043],[36,367,231,0.015708418000000002],[35,363,231,0.015259209000000001],[34,359,231,0.014816626000000001],[33,355,231,0.014370834],[32,351,231,0.013928293000000001],[31,347,231,0.013482918000000002],[30,343,231,0.013027834000000002],[29,339,231,0.012586459000000001],[28,335,231,0.012147668000000002],[27,331,231,0.011709834000000002],[26,327,231,0.011270168000000002],[25,323,231,0.010832626000000001],[24,319,231,0.010394626000000002],[23,315,231,0.009921918000000002],[22,311,231,0.009484043000000001],[21,307,231,0.009041710000000001],[20,303,231,0.008598001000000001],[19,299,231,0.008161126000000001],[18,295,231,0.007709251],[17,291,231,0.007257459],[16,287,231,0.006821709],[15,283,231,0.006372251],[14,279,231,0.005937126],[13,275,231,0.005497501],[12,271,231,0.0050612930000000006],[11,267,231,0.004620543],[10,263,231,0.004179043],[9,259,231,0.0037467090000000004],[8,255,231,0.0033132920000000002],[7,251,231,0.002879958],[6,247,231,0.002445708],[5,243,231,0.001987875],[4,219,231,0.0015418749999999998],[3,164,231,0.001096833],[2,93,231,0.000627208],[1,51,231,0.00033308299999999997],[0,19,291,0.0001385]],"inputs":[["(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d2 d1)","(+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d2 d1))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 (+.f64 d2 d3))","(*.f64 d1 (+.f64 d2 d3))","(+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3))","(+.f64 (*.f64 3 d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 3 d3))","(*.f64 d1 (+.f64 d3 3))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))","(*.f64 d2 d1)","(*.f64 d1 d2)","(+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))","(+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))","(+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))","(*.f64 d2 d1)","(*.f64 d1 d2)","(+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))","(+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))","(+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))","(+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d2 d1))","(+.f64 (*.f64 3 d1) (*.f64 d1 d2))","(*.f64 d1 (+.f64 3 d2))","(*.f64 d1 (+.f64 d2 3))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))","(+.f64 (*.f64 d2 d1) (+.f64 (*.f64 3 (*.f64 (pow.f64 1 1/3) d1)) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 3)))","(*.f64 d1 (+.f64 (+.f64 d2 d3) 3))"]],"stop":[["node limit",1]],"time":2484.872802734375,"type":"simplify"},{"compiler":[[2068,913]],"time":23.32421875,"type":"eval"},{"alts":[["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","done",0.046875],["(fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) 3) (*.f64 d1 (+.f64 d2 d3)))","done",0.2461701172213042],["(fma.f64 d1 3 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3))","next",0.46396264652663033]],"compiler":[[10,7],[17,11],[14,10],[14,10]],"count":[[131,3]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[128,0],"picked":[1,1]}],"min-error":[0],"time":31.251953125,"type":"prune"},{"compiler":[[40,13]],"locations":[["(*.f64 d1 (+.f64 d2 d3))",0.01953125,false],["(fma.f64 d1 3 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3))",0.04296875,true],["(pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3)",0.6593515137479348,true],["(cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))",2.7702171589467115,true]],"time":8.376953125,"type":"localize"},{"count":[[3,31]],"series":[["(fma.f64 d1 3 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3))","d3","-inf",0.287841796875],["(fma.f64 d1 3 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3))","d3","inf",0.31103515625],["(fma.f64 d1 3 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3))","d3","0",0.671142578125],["(fma.f64 d1 3 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3))","d2","-inf",0.319091796875],["(fma.f64 d1 3 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3))","d2","inf",0.27294921875],["(fma.f64 d1 3 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3))","d2","0",0.674072265625],["(fma.f64 d1 3 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3))","d1","-inf",0.296875],["(fma.f64 d1 3 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3))","d1","inf",0.297119140625],["(fma.f64 d1 3 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3))","d1","0",0.263916015625],["(pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3)","d3","-inf",0.421142578125],["(pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3)","d3","inf",0.5078125],["(pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3)","d3","0",3.26708984375],["(pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3)","d2","-inf",0.43603515625],["(pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3)","d2","inf",0.51123046875],["(pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3)","d2","0",1.516845703125],["(pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3)","d1","-inf",0.907958984375],["(pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3)","d1","inf",0.51806640625],["(pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3)","d1","0",0.533935546875],["(cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))","d3","-inf",0.302978515625],["(cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))","d3","inf",0.343994140625],["(cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))","d3","0",0.833984375],["(cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))","d2","-inf",0.336181640625],["(cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))","d2","inf",0.3388671875],["(cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))","d2","0",0.990966796875],["(cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))","d1","-inf",0.258056640625],["(cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))","d1","inf",0.27001953125],["(cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))","d1","0",0.369873046875]],"time":16.81201171875,"type":"series"},{"count":[[3,132]],"egraph":[[2,2757,26,0.028508667],[1,225,26,0.004468167],[0,10,27,0.000331083]],"inputs":[["(cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))","(pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3)","(fma.f64 d1 3 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 d2 d3)) (cbrt.f64 d1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 d1) (cbrt.f64 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))) 2) (cbrt.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 1/6) (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 d1 (+.f64 d2 d3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 2) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 3) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))) 2) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 d1 (+.f64 d2 d3))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 d1 (+.f64 d2 d3))) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d2) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d3) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d1 d2) 1) (*.f64 (*.f64 d1 d3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 d2 d3)) d1)) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 d2 d3)) d1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (+.f64 d2 d3)) d1))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (+.f64 d2 d3)) d1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 d1 (+.f64 d2 d3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 d1 (+.f64 d2 d3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 d2 d3) d1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 d1 (+.f64 d2 d3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 2) (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 d2 d3) 2)) (*.f64 (cbrt.f64 (+.f64 d2 d3)) d1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 d1) (*.f64 (cbrt.f64 (+.f64 d2 d3)) (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 d1)) (*.f64 (cbrt.f64 d1) (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))) (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 d2 d3)) (*.f64 (sqrt.f64 (+.f64 d2 d3)) d1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 d1) (*.f64 (sqrt.f64 d1) (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 d1 (+.f64 d2 d3))) (sqrt.f64 (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 1/6) (*.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 1/6) (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 d1 (cbrt.f64 (pow.f64 (+.f64 d2 d3) 2))) (cbrt.f64 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 d1 (sqrt.f64 (+.f64 d2 d3))) (sqrt.f64 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 d2 d3) (cbrt.f64 (*.f64 d1 d1))) (cbrt.f64 d1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 d2 d3) (sqrt.f64 d1)) (sqrt.f64 d1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 2) 1) (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 2) (cbrt.f64 d1)) (cbrt.f64 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) (cbrt.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 2) (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 1/6)) (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 d1 d2) 3) (pow.f64 (*.f64 d1 d3) 3)) (+.f64 (pow.f64 (*.f64 d1 d2) 2) (-.f64 (pow.f64 (*.f64 d1 d3) 2) (*.f64 (*.f64 d1 d2) (*.f64 d1 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 d1 d2) 2) (pow.f64 (*.f64 d1 d3) 2)) (-.f64 (*.f64 d1 d2) (*.f64 d1 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 d2 3) (pow.f64 d3 3)) d1) (fma.f64 d3 (-.f64 d3 d2) (*.f64 d2 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 d2 d2) (*.f64 d3 d3)) d1) (-.f64 d2 d3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (+.f64 (pow.f64 d2 3) (pow.f64 d3 3))) (fma.f64 d3 (-.f64 d3 d2) (*.f64 d2 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (-.f64 (*.f64 d2 d2) (*.f64 d3 d3))) (-.f64 d2 d3))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (+.f64 d2 d3)) d1))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 d1 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 d1 d3)) (exp.f64 (*.f64 d1 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 d1 (+.f64 d2 d3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 d2 (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 d3 (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d2 d1 (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d3 d1 (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 d2) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 d3) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d1 d1)) (*.f64 (cbrt.f64 d1) d2) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 d1 d1)) (*.f64 (cbrt.f64 d1) d3) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 d2) 2) (*.f64 (cbrt.f64 d2) d1) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 d3) 2) (*.f64 (cbrt.f64 d3) d1) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 d1) (*.f64 (sqrt.f64 d1) d2) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 d1) (*.f64 (sqrt.f64 d1) d3) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 d2) (*.f64 (sqrt.f64 d2) d1) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 d3) (*.f64 (sqrt.f64 d3) d1) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 d2) 1 (*.f64 (*.f64 d1 d3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 d1 d3)) 2) (cbrt.f64 (*.f64 d1 d3)) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 d1 d2)) 2) (cbrt.f64 (*.f64 d1 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 d1 d3)) (sqrt.f64 (*.f64 d1 d3)) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 d1 d2)) (sqrt.f64 (*.f64 d1 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 d2) 2)) (cbrt.f64 d2) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (sqrt.f64 d2)) (sqrt.f64 d2) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d2 (cbrt.f64 (*.f64 d1 d1))) (cbrt.f64 d1) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d2 (sqrt.f64 d1)) (sqrt.f64 d1) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 d3) 2)) (cbrt.f64 d3) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (sqrt.f64 d3)) (sqrt.f64 d3) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d3 (cbrt.f64 (*.f64 d1 d1))) (cbrt.f64 d1) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d3 (sqrt.f64 d1)) (sqrt.f64 d1) (*.f64 d1 d2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 d2 d3)) (*.f64 d1 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 3) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d1 3) 1) (*.f64 d1 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 d1 3 (*.f64 d1 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 d1) (+.f64 3 (+.f64 d2 d3)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 d1) (+.f64 3 (+.f64 d2 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 d1) (+.f64 3 (+.f64 d2 d3))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 d1) (+.f64 3 (+.f64 d2 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 d1 (+.f64 3 (+.f64 d2 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) 2) (cbrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) (sqrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 d1 3) 3) (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 3)) (+.f64 (pow.f64 (*.f64 d1 3) 2) (-.f64 (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 2) (*.f64 (*.f64 d1 3) (*.f64 d1 (+.f64 d2 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 d1 3) 2) (pow.f64 (*.f64 d1 (+.f64 d2 d3)) 2)) (-.f64 (*.f64 d1 3) (*.f64 d1 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 d1) (+.f64 3 (+.f64 d2 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 d2 d3)) d1) (exp.f64 (*.f64 d1 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 d1 (+.f64 d2 d3)))) (exp.f64 (*.f64 d1 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 d1 3)) (+.f64 1 (expm1.f64 (*.f64 d1 (+.f64 d2 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 d1 (+.f64 3 (+.f64 d2 d3)))) 1))))))"]],"rules":[["egg-rr",32],["egg-rr",71],["egg-rr",29]],"stop":[["node limit",1]],"time":58.508056640625,"type":"rewrite"},{"count":[[163,182]],"egraph":[[3,7978,2138,0.033156875],[2,3011,2138,0.018702292000000002],[1,791,2323,0.005737792],[0,213,2567,0.001199875]],"inputs":[["(pow.f64 (*.f64 d1 d3) 1/3)","(+.f64 (*.f64 1/3 (*.f64 d2 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/9))) (pow.f64 (*.f64 d1 d3) 1/3))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 d2 2) (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 11)) (pow.f64 d3 7)) 1/9))) (+.f64 (*.f64 1/3 (*.f64 d2 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/9))) (pow.f64 (*.f64 d1 d3) 1/3)))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 d2 3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d3 2)) 1/3))))) (pow.f64 (/.f64 1 (*.f64 (pow.f64 d1 2) (pow.f64 d3 2))) 1/3))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 d2 2) (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 11)) (pow.f64 d3 7)) 1/9))) (+.f64 (*.f64 1/3 (*.f64 d2 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/9))) (pow.f64 (*.f64 d1 d3) 1/3))))","(pow.f64 (*.f64 d2 d1) 1/3)","(+.f64 (pow.f64 (*.f64 d2 d1) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/9) d3)))","(+.f64 (pow.f64 (*.f64 d2 d1) 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 11)) (pow.f64 d2 7)) 1/9) (pow.f64 d3 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/9) d3))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 d2 2) (pow.f64 d1 2))) 1/3) (*.f64 (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d2 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9)))) (pow.f64 d3 3)))) (+.f64 (pow.f64 (*.f64 d2 d1) 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 11)) (pow.f64 d2 7)) 1/9) (pow.f64 d3 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/9) d3)))))","(*.f64 (pow.f64 1 1/3) (*.f64 d1 d3))","(+.f64 (*.f64 d2 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)))) (*.f64 (pow.f64 1 1/3) (*.f64 d1 d3)))","(+.f64 (*.f64 d2 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)))) (+.f64 (*.f64 (pow.f64 d2 2) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d3) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 d1 d3)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)))) (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d3) 1/9))))) (*.f64 (pow.f64 1 1/3) (*.f64 d1 d3))))","(+.f64 (*.f64 (pow.f64 d2 3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/9) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9))))) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d3 2)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 d1 d3)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 d1 d3)) 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d3 2)) 1/3)))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 d1 2) d3))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d3 2)) 1/3)))))))))) (+.f64 (*.f64 d2 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)))) (+.f64 (*.f64 (pow.f64 d2 2) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d3) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 d1 d3)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)))) (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d3) 1/9))))) (*.f64 (pow.f64 1 1/3) (*.f64 d1 d3)))))","(*.f64 (*.f64 d2 d1) (pow.f64 1 1/3))","(+.f64 (*.f64 (*.f64 d2 d1) (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9))) d3))","(+.f64 (*.f64 (*.f64 d2 d1) (pow.f64 1 1/3)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9))) d3) (*.f64 (pow.f64 d3 2) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d2) 1/9)) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d2) 1/9)) (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9))) (pow.f64 (*.f64 d2 (*.f64 1 d1)) 1/3)))))))","(+.f64 (*.f64 (*.f64 d2 d1) (pow.f64 1 1/3)) (+.f64 (*.f64 (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d2 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (+.f64 (*.f64 (pow.f64 (*.f64 d2 (*.f64 1 d1)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 d2 d1)) 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d2 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9)))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 d1 2) d2))))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/9))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d2 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))))))))) (pow.f64 d3 3)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9))) d3) (*.f64 (pow.f64 d3 2) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d2) 1/9)) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d2) 1/9)) (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9))) (pow.f64 (*.f64 d2 (*.f64 1 d1)) 1/3))))))))","(*.f64 3 d1)","(*.f64 3 d1)","(*.f64 3 d1)","(+.f64 (*.f64 3 d1) (*.f64 (pow.f64 1 1/3) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)))) (*.f64 (pow.f64 1 1/3) (*.f64 d1 d3))))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)))) (+.f64 (*.f64 (pow.f64 d2 2) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d3) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 d1 d3)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)))) (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d3) 1/9))))) (*.f64 (pow.f64 1 1/3) (*.f64 d1 d3)))))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 (pow.f64 d2 3) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 d1 d3)) 1/3) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 d1 2) d3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 d1 d3)) 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d3 2)) 1/3)))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/9) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9))))) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d3 2)) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d3 2)) 1/3)))))))))) (+.f64 (*.f64 d2 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)))) (+.f64 (*.f64 (pow.f64 d2 2) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d3) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 d1 d3)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)))) (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d3) 1/9))))) (*.f64 (pow.f64 1 1/3) (*.f64 d1 d3))))))","(*.f64 3 d1)","(*.f64 3 d1)","(+.f64 (*.f64 3 d1) (*.f64 (*.f64 d2 d1) (pow.f64 1 1/3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 (*.f64 d2 d1) (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9))) d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 (*.f64 d2 d1) (pow.f64 1 1/3)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9))) d3) (*.f64 (pow.f64 d3 2) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d2) 1/9)) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d2) 1/9)) (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9))) (pow.f64 (*.f64 d2 (*.f64 1 d1)) 1/3))))))))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 (*.f64 d2 d1) (pow.f64 1 1/3)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9))) d3) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 d2 (*.f64 1 d1)) 1/3) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 d1 2) d2))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 d2 d1)) 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d2 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9)))))))) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d2 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/9))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d2 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))))))))) (pow.f64 d3 3)) (*.f64 (pow.f64 d3 2) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d2) 1/9)) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d2) 1/9)) (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9))) (pow.f64 (*.f64 d2 (*.f64 1 d1)) 1/3)))))))))","(*.f64 3 d1)","(*.f64 3 d1)"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (*.f64 d1 d3) 1/3)","(cbrt.f64 (*.f64 d1 d3))","(+.f64 (*.f64 1/3 (*.f64 d2 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/9))) (pow.f64 (*.f64 d1 d3) 1/3))","(fma.f64 1/3 (*.f64 d2 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18))) (cbrt.f64 (*.f64 d1 d3)))","(fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18) d2)) (cbrt.f64 (*.f64 d1 d3)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 d2 2) (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 11)) (pow.f64 d3 7)) 1/9))) (+.f64 (*.f64 1/3 (*.f64 d2 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/9))) (pow.f64 (*.f64 d1 d3) 1/3)))","(fma.f64 -1/9 (*.f64 (*.f64 d2 d2) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d3 7)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d3 7)) 1/18))) (fma.f64 1/3 (*.f64 d2 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18))) (cbrt.f64 (*.f64 d1 d3))))","(fma.f64 -1/9 (*.f64 (*.f64 d2 (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d3 7)) 1/18)) (*.f64 d2 (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d3 7)) 1/18))) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18) d2)) (cbrt.f64 (*.f64 d1 d3))))","(+.f64 (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 d2 3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d3 2)) 1/3))))) (pow.f64 (/.f64 1 (*.f64 (pow.f64 d1 2) (pow.f64 d3 2))) 1/3))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 d2 2) (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 11)) (pow.f64 d3 7)) 1/9))) (+.f64 (*.f64 1/3 (*.f64 d2 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/9))) (pow.f64 (*.f64 d1 d3) 1/3))))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 d2 3) (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))) (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)))))) (cbrt.f64 (/.f64 1 (*.f64 (*.f64 d3 d3) (*.f64 d1 d1))))) (fma.f64 -1/9 (*.f64 (*.f64 d2 d2) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d3 7)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d3 7)) 1/18))) (fma.f64 1/3 (*.f64 d2 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18))) (cbrt.f64 (*.f64 d1 d3)))))","(fma.f64 -1/3 (*.f64 (pow.f64 d2 3) (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))) -5/27) (cbrt.f64 (/.f64 1 (*.f64 d1 (*.f64 d1 (*.f64 d3 d3))))))) (fma.f64 -1/9 (*.f64 (*.f64 d2 d2) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d3 7)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d3 7)) 1/18))) (fma.f64 1/3 (*.f64 d2 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18))) (cbrt.f64 (*.f64 d1 d3)))))","(fma.f64 -1/3 (*.f64 (pow.f64 d2 3) (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))) -5/27) (cbrt.f64 (/.f64 1 (*.f64 d1 (*.f64 d1 (*.f64 d3 d3))))))) (fma.f64 -1/9 (*.f64 (*.f64 d2 (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d3 7)) 1/18)) (*.f64 d2 (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d3 7)) 1/18))) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18) d2)) (cbrt.f64 (*.f64 d1 d3)))))","(pow.f64 (*.f64 d2 d1) 1/3)","(cbrt.f64 (*.f64 d1 d2))","(+.f64 (pow.f64 (*.f64 d2 d1) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/9) d3)))","(+.f64 (*.f64 1/3 (*.f64 d3 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18)))) (cbrt.f64 (*.f64 d1 d2)))","(fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18) d3)) (cbrt.f64 (*.f64 d1 d2)))","(+.f64 (pow.f64 (*.f64 d2 d1) 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 11)) (pow.f64 d2 7)) 1/9) (pow.f64 d3 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/9) d3))))","(+.f64 (fma.f64 -1/9 (*.f64 (*.f64 d3 d3) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d2 7)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d2 7)) 1/18))) (*.f64 1/3 (*.f64 d3 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18))))) (cbrt.f64 (*.f64 d1 d2)))","(+.f64 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18) d3)) (cbrt.f64 (*.f64 d1 d2))) (*.f64 (*.f64 d3 d3) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d2 7)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d2 7)) 1/18)))))","(+.f64 (*.f64 d3 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18))) (*.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d2 7)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d2 7)) 1/18))) d3))) (cbrt.f64 (*.f64 d1 d2)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 d2 2) (pow.f64 d1 2))) 1/3) (*.f64 (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d2 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9)))) (pow.f64 d3 3)))) (+.f64 (pow.f64 (*.f64 d2 d1) 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 11)) (pow.f64 d2 7)) 1/9) (pow.f64 d3 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/9) d3)))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (*.f64 d2 d2) (*.f64 d1 d1)))) (*.f64 (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) (*.f64 -2/9 (*.f64 1 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)))))) (pow.f64 d3 3))) (+.f64 (fma.f64 -1/9 (*.f64 (*.f64 d3 d3) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d2 7)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d2 7)) 1/18))) (*.f64 1/3 (*.f64 d3 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18))))) (cbrt.f64 (*.f64 d1 d2))))","(+.f64 (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18) d3)) (*.f64 (*.f64 d3 d3) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d2 7)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d2 7)) 1/18))))) (fma.f64 (*.f64 -1/3 (cbrt.f64 (/.f64 1 (*.f64 d2 (*.f64 d2 (*.f64 d1 d1)))))) (*.f64 (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))))) (pow.f64 d3 3)) (cbrt.f64 (*.f64 d1 d2))))","(+.f64 (*.f64 d3 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18))) (*.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d2 7)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 11) (pow.f64 d2 7)) 1/18))) d3))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (*.f64 d1 d2) (*.f64 d1 d2)))) (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) -5/27) (pow.f64 d3 3))) (cbrt.f64 (*.f64 d1 d2))))","(*.f64 (pow.f64 1 1/3) (*.f64 d1 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 d2 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)))) (*.f64 (pow.f64 1 1/3) (*.f64 d1 d3)))","(fma.f64 d2 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18)) 1) (*.f64 d1 d3))","(fma.f64 d1 d3 (*.f64 d2 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18))))","(fma.f64 d2 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18)) (*.f64 d1 d3))","(+.f64 (*.f64 d2 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)))) (+.f64 (*.f64 (pow.f64 d2 2) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d3) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 d1 d3)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)))) (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d3) 1/9))))) (*.f64 (pow.f64 1 1/3) (*.f64 d1 d3))))","(fma.f64 d2 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18)) 1) (fma.f64 (*.f64 d2 d2) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) (fma.f64 (cbrt.f64 (*.f64 d1 d3)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18)) -1/9) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) 2/9))) (*.f64 d1 d3)))","(fma.f64 d2 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18)) (fma.f64 d1 d3 (*.f64 (*.f64 d2 d2) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) (fma.f64 (cbrt.f64 (*.f64 d1 d3)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18))) (*.f64 (*.f64 2/9 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)))))))","(fma.f64 d2 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18)) (fma.f64 (*.f64 d2 d2) (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 d1 d3)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) 1/9)) (*.f64 d1 d3)))","(+.f64 (*.f64 (pow.f64 d2 3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/9) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9))))) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d3 2)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 d1 d3)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 d1 d3)) 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d3 2)) 1/3)))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 d1 2) d3))))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d3 2)) 1/3)))))))))) (+.f64 (*.f64 d2 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)))) (+.f64 (*.f64 (pow.f64 d2 2) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d3) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 d1 d3)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)))) (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d3) 1/9))))) (*.f64 (pow.f64 1 1/3) (*.f64 d1 d3)))))","(fma.f64 (pow.f64 d2 3) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18)) -1/9)) (+.f64 (*.f64 -2/27 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)))) (fma.f64 (cbrt.f64 (*.f64 d1 d3)) (fma.f64 -2/3 (*.f64 (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))) (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))))) (cbrt.f64 (/.f64 1 (*.f64 d1 d3)))) (*.f64 -2/27 (/.f64 (*.f64 d1 d1) d3))) (*.f64 -1/3 (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))) (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))))))))) (fma.f64 d2 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18)) 1) (fma.f64 (*.f64 d2 d2) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) (fma.f64 (cbrt.f64 (*.f64 d1 d3)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18)) -1/9) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) 2/9))) (*.f64 d1 d3))))","(fma.f64 (pow.f64 d2 3) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18)))) (fma.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))) -2/27 (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))) -5/27) (*.f64 (cbrt.f64 (*.f64 d1 d3)) (fma.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 1 (*.f64 d1 d3)))) (*.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))) -5/27) (*.f64 -2/27 (/.f64 (*.f64 d1 d1) d3))))))) (fma.f64 d2 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18)) (fma.f64 d1 d3 (*.f64 (*.f64 d2 d2) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) (fma.f64 (cbrt.f64 (*.f64 d1 d3)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18))) (*.f64 (*.f64 2/9 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18))))))))","(fma.f64 (pow.f64 d2 3) (fma.f64 1/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18)) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18))) -1/9) (+.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))) -5/27) (+.f64 (*.f64 (cbrt.f64 (*.f64 d1 d3)) (*.f64 -2/3 (cbrt.f64 (/.f64 1 (*.f64 d1 d3))))) -1/3)) (*.f64 -2/27 (+.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))) (*.f64 (cbrt.f64 (*.f64 d1 d3)) (*.f64 (/.f64 d1 d3) d1)))))) (fma.f64 d2 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18)) (fma.f64 (*.f64 d2 d2) (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 d1 d3)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) 1/9)) (*.f64 d1 d3))))","(*.f64 (*.f64 d2 d1) (pow.f64 1 1/3))","(*.f64 d1 d2)","(+.f64 (*.f64 (*.f64 d2 d1) (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9))) d3))","(+.f64 (*.f64 d1 d2) (*.f64 d3 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18)) 1)))","(fma.f64 d1 d2 (*.f64 d3 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18))))","(fma.f64 d3 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18)) (*.f64 d1 d2))","(+.f64 (*.f64 (*.f64 d2 d1) (pow.f64 1 1/3)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9))) d3) (*.f64 (pow.f64 d3 2) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d2) 1/9)) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d2) 1/9)) (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9))) (pow.f64 (*.f64 d2 (*.f64 1 d1)) 1/3)))))))","(+.f64 (*.f64 d1 d2) (fma.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18)) 1) d3 (*.f64 (*.f64 d3 d3) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18)) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18)) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18)) -1/9) (cbrt.f64 (*.f64 d1 d2))))))))","(fma.f64 d1 d2 (fma.f64 d3 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18)) (*.f64 (*.f64 d3 d3) (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) -1/9)) (cbrt.f64 (*.f64 d1 d2))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18)) 1/9)))))","(fma.f64 d1 d2 (*.f64 d3 (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18)) (*.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 d1 d2)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18)) 1/9)) d3))))","(+.f64 (*.f64 (*.f64 d2 d1) (pow.f64 1 1/3)) (+.f64 (*.f64 (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d2 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (+.f64 (*.f64 (pow.f64 (*.f64 d2 (*.f64 1 d1)) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 d2 d1)) 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d2 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9)))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 d1 2) d2))))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/9))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d2 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))))))))) (pow.f64 d3 3)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9))) d3) (*.f64 (pow.f64 d3 2) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d2) 1/9)) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d2) 1/9)) (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9))) (pow.f64 (*.f64 d2 (*.f64 1 d1)) 1/3))))))))","(+.f64 (*.f64 d1 d2) (fma.f64 (fma.f64 -2/27 (*.f64 1 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)))) (fma.f64 (cbrt.f64 (*.f64 d1 d2)) (fma.f64 -2/3 (*.f64 (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) (*.f64 -2/9 (*.f64 1 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)))))) (cbrt.f64 (/.f64 1 (*.f64 d1 d2)))) (*.f64 -2/27 (/.f64 (*.f64 d1 d1) d2))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18)) -1/9)) (*.f64 -1/3 (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) (*.f64 -2/9 (*.f64 1 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)))))))))) (pow.f64 d3 3) (fma.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18)) 1) d3 (*.f64 (*.f64 d3 d3) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18)) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18)) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18)) -1/9) (cbrt.f64 (*.f64 d1 d2)))))))))","(fma.f64 d1 d2 (fma.f64 d3 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18)) (fma.f64 (*.f64 d3 d3) (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) -1/9)) (cbrt.f64 (*.f64 d1 d2))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18)) 1/9)) (*.f64 (pow.f64 d3 3) (fma.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) -2/27 (fma.f64 (cbrt.f64 (*.f64 d1 d2)) (fma.f64 -2/27 (/.f64 d1 (/.f64 d2 d1)) (*.f64 (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))))) (*.f64 -2/3 (cbrt.f64 (/.f64 1 (*.f64 d1 d2)))))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18)) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) -1/9))) (*.f64 -1/3 (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)))))))))))))","(fma.f64 d1 d2 (fma.f64 (pow.f64 d3 3) (fma.f64 (cbrt.f64 (*.f64 d1 d2)) (fma.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) -5/27) (cbrt.f64 (/.f64 1 (*.f64 d1 d2)))) (/.f64 (*.f64 d1 d1) (/.f64 d2 -2/27))) (fma.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) -2/27 (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18)) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) -1/9))) (*.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) -5/27))))) (*.f64 d3 (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18)) (*.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 d1 d2)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18)) 1/9)) d3)))))","(fma.f64 d1 d2 (fma.f64 (pow.f64 d3 3) (fma.f64 (cbrt.f64 (*.f64 d1 d2)) (fma.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) -5/27) (cbrt.f64 (/.f64 1 (*.f64 d1 d2)))) (*.f64 (*.f64 d1 d1) (/.f64 -2/27 d2))) (fma.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) -2/27 (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18)) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) -1/9))) (*.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) -5/27))))) (*.f64 d3 (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18)) (*.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 d1 d2)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18)) 1/9)) d3)))))","(*.f64 3 d1)","(*.f64 d1 3)","(*.f64 3 d1)","(*.f64 d1 3)","(*.f64 3 d1)","(*.f64 d1 3)","(+.f64 (*.f64 3 d1) (*.f64 (pow.f64 1 1/3) (*.f64 d1 d3)))","(fma.f64 3 d1 (*.f64 d1 d3))","(*.f64 d1 (+.f64 d3 3))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)))) (*.f64 (pow.f64 1 1/3) (*.f64 d1 d3))))","(fma.f64 3 d1 (fma.f64 d2 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18)) 1) (*.f64 d1 d3)))","(fma.f64 d1 3 (fma.f64 d1 d3 (*.f64 d2 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18)))))","(fma.f64 d1 3 (fma.f64 d2 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18)) (*.f64 d1 d3)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 d2 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)))) (+.f64 (*.f64 (pow.f64 d2 2) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d3) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 d1 d3)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)))) (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d3) 1/9))))) (*.f64 (pow.f64 1 1/3) (*.f64 d1 d3)))))","(fma.f64 3 d1 (fma.f64 d2 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18)) 1) (fma.f64 (*.f64 d2 d2) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) (fma.f64 (cbrt.f64 (*.f64 d1 d3)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18)) -1/9) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) 2/9))) (*.f64 d1 d3))))","(fma.f64 d1 3 (fma.f64 d2 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18)) (fma.f64 d1 d3 (*.f64 (*.f64 d2 d2) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) (fma.f64 (cbrt.f64 (*.f64 d1 d3)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18))) (*.f64 (*.f64 2/9 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18))))))))","(+.f64 (*.f64 d1 (+.f64 d3 3)) (*.f64 d2 (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18)) (*.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 d1 d3)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) 1/9)) d2))))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 (pow.f64 d2 3) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 d1 d3)) 1/3) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 d1 2) d3))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 d1 d3)) 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d3 2)) 1/3)))))))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/9) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9))))) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d3 2)) 1/3))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d3 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d3 2)) 1/3)))))))))) (+.f64 (*.f64 d2 (+.f64 (*.f64 2/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)) (*.f64 1/3 (pow.f64 (*.f64 1 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4))) 1/9)))) (+.f64 (*.f64 (pow.f64 d2 2) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d3) 1/9)) (+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 d1 d3)) 1/3) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d3 4)) 1/9)))) (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d3) 1/9))))) (*.f64 (pow.f64 1 1/3) (*.f64 d1 d3))))))","(fma.f64 3 d1 (fma.f64 (pow.f64 d2 3) (fma.f64 (cbrt.f64 (*.f64 d1 d3)) (fma.f64 -2/3 (*.f64 (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))) (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))))) (cbrt.f64 (/.f64 1 (*.f64 d1 d3)))) (*.f64 -2/27 (/.f64 (*.f64 d1 d1) d3))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18)) -1/9)) (+.f64 (*.f64 -2/27 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)))) (*.f64 -1/3 (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))) (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))))))))) (fma.f64 d2 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18)) 1) (fma.f64 (*.f64 d2 d2) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) (fma.f64 (cbrt.f64 (*.f64 d1 d3)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18)) -1/9) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) 2/9))) (*.f64 d1 d3)))))","(fma.f64 d1 3 (fma.f64 (pow.f64 d2 3) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18)))) (fma.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))) -2/27 (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))) -5/27) (*.f64 (cbrt.f64 (*.f64 d1 d3)) (fma.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 1 (*.f64 d1 d3)))) (*.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))) -5/27) (*.f64 -2/27 (/.f64 (*.f64 d1 d1) d3))))))) (fma.f64 d2 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18)) (fma.f64 d1 d3 (*.f64 (*.f64 d2 d2) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) (fma.f64 (cbrt.f64 (*.f64 d1 d3)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18))) (*.f64 (*.f64 2/9 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)))))))))","(fma.f64 d1 3 (fma.f64 (pow.f64 d2 3) (fma.f64 1/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18)) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3)) 1/18))) -1/9) (+.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))) -5/27) (+.f64 (*.f64 (cbrt.f64 (*.f64 d1 d3)) (*.f64 -2/3 (cbrt.f64 (/.f64 1 (*.f64 d1 d3))))) -1/3)) (*.f64 -2/27 (+.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d3 d3))) (*.f64 (cbrt.f64 (*.f64 d1 d3)) (*.f64 (/.f64 d1 d3) d1)))))) (fma.f64 d2 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d3 4)) 1/18)) (fma.f64 (*.f64 d2 d2) (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d3 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 d1 d3)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d3) 1/18)) 1/9)) (*.f64 d1 d3)))))","(*.f64 3 d1)","(*.f64 d1 3)","(*.f64 3 d1)","(*.f64 d1 3)","(+.f64 (*.f64 3 d1) (*.f64 (*.f64 d2 d1) (pow.f64 1 1/3)))","(fma.f64 3 d1 (*.f64 d1 d2))","(*.f64 d1 (+.f64 d2 3))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 (*.f64 d2 d1) (pow.f64 1 1/3)) (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9))) d3)))","(+.f64 (fma.f64 3 d1 (*.f64 d1 d2)) (*.f64 d3 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18)) 1)))","(fma.f64 d1 3 (fma.f64 d1 d2 (*.f64 d3 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18)))))","(fma.f64 d1 3 (fma.f64 d3 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18)) (*.f64 d1 d2)))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 (*.f64 d2 d1) (pow.f64 1 1/3)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9))) d3) (*.f64 (pow.f64 d3 2) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d2) 1/9)) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d2) 1/9)) (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9))) (pow.f64 (*.f64 d2 (*.f64 1 d1)) 1/3))))))))","(+.f64 (fma.f64 3 d1 (*.f64 d1 d2)) (fma.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18)) 1) d3 (*.f64 (*.f64 d3 d3) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18)) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18)) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18)) -1/9) (cbrt.f64 (*.f64 d1 d2))))))))","(fma.f64 d1 3 (fma.f64 d1 d2 (fma.f64 d3 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18)) (*.f64 (*.f64 d3 d3) (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) -1/9)) (cbrt.f64 (*.f64 d1 d2))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18)) 1/9))))))","(fma.f64 d1 3 (fma.f64 d1 d2 (*.f64 d3 (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18)) (*.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 d1 d2)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18)) 1/9)) d3)))))","(+.f64 (*.f64 3 d1) (+.f64 (*.f64 (*.f64 d2 d1) (pow.f64 1 1/3)) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9)) (*.f64 2/3 (pow.f64 (*.f64 (pow.f64 d2 4) (*.f64 1 (pow.f64 d1 13))) 1/9))) d3) (+.f64 (*.f64 (+.f64 (*.f64 (pow.f64 (*.f64 d2 (*.f64 1 d1)) 1/3) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 d1 2) d2))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 d2 d1)) 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d2 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9)))))))) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d2 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9))) (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/9))) (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 7)) (pow.f64 d2 2)) 1/3)) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (pow.f64 d2 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9))))))))) (pow.f64 d3 3)) (*.f64 (pow.f64 d3 2) (+.f64 (*.f64 2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d2) 1/9)) (+.f64 (*.f64 -1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 17)) d2) 1/9)) (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 (*.f64 1 (pow.f64 d1 14)) (pow.f64 d2 4)) 1/9))) (pow.f64 (*.f64 d2 (*.f64 1 d1)) 1/3)))))))))","(+.f64 (fma.f64 3 d1 (*.f64 d1 d2)) (fma.f64 (*.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18)) 1) d3 (fma.f64 (fma.f64 (cbrt.f64 (*.f64 d1 d2)) (fma.f64 -2/3 (*.f64 (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) (*.f64 -2/9 (*.f64 1 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)))))) (cbrt.f64 (/.f64 1 (*.f64 d1 d2)))) (*.f64 -2/27 (/.f64 (*.f64 d1 d1) d2))) (fma.f64 -2/27 (*.f64 1 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18)) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18)) -1/9)) (*.f64 -1/3 (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) (*.f64 -2/9 (*.f64 1 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)))))))))) (pow.f64 d3 3) (*.f64 (*.f64 d3 d3) (fma.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18)) (fma.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18)) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18)) -1/9) (cbrt.f64 (*.f64 d1 d2)))))))))","(fma.f64 d1 3 (fma.f64 d1 d2 (fma.f64 d3 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18)) (fma.f64 (*.f64 d3 d3) (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) -1/9)) (cbrt.f64 (*.f64 d1 d2))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18)) 1/9)) (*.f64 (pow.f64 d3 3) (fma.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) -2/27 (fma.f64 (cbrt.f64 (*.f64 d1 d2)) (fma.f64 -2/27 (/.f64 d1 (/.f64 d2 d1)) (*.f64 (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))))) (*.f64 -2/3 (cbrt.f64 (/.f64 1 (*.f64 d1 d2)))))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18)) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) -1/9))) (*.f64 -1/3 (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) (*.f64 -2/9 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))))))))))))))","(fma.f64 d1 3 (fma.f64 d1 d2 (fma.f64 (pow.f64 d3 3) (fma.f64 (cbrt.f64 (*.f64 d1 d2)) (fma.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) -5/27) (cbrt.f64 (/.f64 1 (*.f64 d1 d2)))) (/.f64 (*.f64 d1 d1) (/.f64 d2 -2/27))) (fma.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) -2/27 (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18)) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) -1/9))) (*.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) -5/27))))) (*.f64 d3 (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18)) (*.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 d1 d2)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18)) 1/9)) d3))))))","(fma.f64 d1 3 (fma.f64 d1 d2 (fma.f64 (pow.f64 d3 3) (fma.f64 (cbrt.f64 (*.f64 d1 d2)) (fma.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) -5/27) (cbrt.f64 (/.f64 1 (*.f64 d1 d2)))) (*.f64 (*.f64 d1 d1) (/.f64 -2/27 d2))) (fma.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) -2/27 (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2)) 1/18)) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) -1/9))) (*.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 d1 7) (*.f64 d2 d2))) -5/27))))) (*.f64 d3 (+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18) (pow.f64 (*.f64 (pow.f64 d1 13) (pow.f64 d2 4)) 1/18)) (*.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18) (pow.f64 (/.f64 (pow.f64 d1 14) (pow.f64 d2 4)) 1/18)) (*.f64 -1/9 (cbrt.f64 (*.f64 d1 d2)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18) (pow.f64 (/.f64 (pow.f64 d1 17) d2) 1/18)) 1/9)) d3))))))","(*.f64 3 d1)","(*.f64 d1 3)","(*.f64 3 d1)","(*.f64 d1 3)"]],"stop":[["node limit",1]],"time":69.077880859375,"type":"simplify"},{"compiler":[[5885,3648]],"time":67.260986328125,"type":"eval"},{"alts":[["(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","done",0.046875],["(fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) 3) (*.f64 d1 (+.f64 d2 d3)))","done",0.2461701172213042],["(fma.f64 d1 3 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3))","done",0.46396264652663033]],"compiler":[[10,7],[17,11],[14,10]],"count":[[212,3]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[209,0],"picked":[1,1]}],"min-error":[0],"time":55.3271484375,"type":"prune"},{"accuracy":[0.015625],"baseline":[0.015625],"branch":[["d1",0.015625,1],["d2",0.015625,1],["d3",0.015625,1],["(+.f64 (+.f64 (*.f64 d1 3) (*.f64 d1 d2)) (*.f64 d1 d3))",0.015625,1]],"compiler":[[4,3],[4,3],[4,3],[14,9],[70,34]],"count":[[6,1]],"inputs":[["(fma.f64 d1 3 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d2 d3))) 3))","(fma.f64 (pow.f64 (cbrt.f64 (+.f64 d2 d3)) 2) (*.f64 (cbrt.f64 (+.f64 d2 d3)) d1) (*.f64 d1 3))","(fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) 3) (*.f64 d1 (+.f64 d2 d3)))","(fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 3 (+.f64 d2 d3)))","(+.f64 (+.f64 (*.f64 d1 3) (*.f64 d1 d2)) (*.f64 d1 d3))"]],"link":["."],"name":["FastMath test3"],"oracle":[0.9507817505058712],"outputs":[["(fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))"]],"time":17.6298828125,"times":[["d1",3.887939453125],["d2",4.093994140625],["d3",4.008056640625],["(+.f64 (+.f64 (*.f64 d1 3) (*.f64 d1 d2)) (*.f64 d1 d3))",4.2021484375]],"type":"regimes"},{"compiler":[[11,7]],"egraph":[[1,10,11,3.1083e-5],[0,8,11,1.9125e-5]],"inputs":[["(fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 d1 3 (*.f64 d1 (+.f64 d2 d3)))"]],"stop":[["done",1],["saturated",1]],"time":8.429931640625,"type":"simplify"},{"time":0.01611328125,"type":"soundness"},{"compiler":[[11,7],[11,7],[11,7]],"remove-preprocessing":[["(sort d2 d3)"]],"time":8.7138671875,"type":"end"}]