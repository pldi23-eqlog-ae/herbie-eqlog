[{"compiler":[[37,28]],"method":["search"],"sampling":[[12,2.793967723814632e-12,1.8626451492097546e-13,0.9999999999970197],[11,2.6077032088936566e-12,3.725290298419509e-13,0.9999999999970198],[10,2.6077032088936566e-12,3.725290298419509e-13,0.9999999999970198],[9,2.6077032088936566e-12,3.725290298419509e-13,0.9999999999970198],[8,2.2351741790517056e-12,7.450580596839018e-13,0.9999999999970197],[7,2.2351741790517056e-12,7.450580596839018e-13,0.9999999999970197],[6,2.2351741790517056e-12,7.450580596839018e-13,0.9999999999970197],[5,1.4901161193678038e-12,1.4901161193678038e-12,0.9999999999970197],[4,1.4901161193678038e-12,1.4901161193678038e-12,0.9999999999970197],[3,1.4901161193678038e-12,1.4901161193678038e-12,0.9999999999970197],[2,0.0,2.9802322387356077e-12,0.9999999999970197],[1,0.0,2.9802322387356077e-12,0.9999999999970197],[0,0.0,2.9802322387356077e-12,0.9999999999970197]],"time":40.468994140625,"type":"analyze"},{"outcomes":[["body",256,"valid",661.28515625,8256]],"time":668.5390625,"type":"sample"},{"compiler":[[14,11]],"egraph":[[0,3,3,1.792e-6],[10,246,68,0.004043249],[9,243,68,0.003448541],[8,234,68,0.002849666],[7,190,68,0.002245291],[6,143,68,0.001656916],[5,112,68,0.0011926250000000001],[4,86,68,0.000823041],[3,66,68,0.0005690000000000001],[2,50,68,0.00036250000000000003],[1,40,68,0.00021179100000000002],[0,25,68,0.000102541]],"inputs":[["0","1","2"],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 cosTheta_i (-.f64 1 cosTheta_i))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 cosTheta_i)))","(*.f64 (sqrt.f64 (/.f64 u2 (-.f64 1 u2))) (sin.f64 (*.f64 314159265359/50000000000 u1)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 cosTheta_i (-.f64 1 cosTheta_i))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 cosTheta_i (-.f64 1 cosTheta_i))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 cosTheta_i)))","(*.f64 (sqrt.f64 (/.f64 u2 (-.f64 1 u2))) (sin.f64 (*.f64 314159265359/50000000000 u1)))","(*.f64 (sqrt.f64 (/.f64 u2 (-.f64 1 u2))) (sin.f64 (*.f64 u1 314159265359/50000000000)))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":27.722900390625,"type":"preprocess"},{"count":[[1,1]],"egraph":[[10,93,17,0.001515002],[9,92,17,0.0013159180000000001],[8,89,17,0.0011149180000000001],[7,76,17,0.000919168],[6,58,17,0.0007045840000000001],[5,45,17,0.000523543],[4,35,17,0.00036987600000000005],[3,27,17,0.00026312600000000003],[2,21,17,0.000174959],[1,17,17,0.000107959],[0,11,17,5.6292e-5]],"inputs":[["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))"]],"stop":[["saturated",1]],"time":11.91015625,"type":"simplify"},{"compiler":[[14,11]],"time":0.27587890625,"type":"eval"},{"alts":[["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","next",0.5196076172213042]],"compiler":[[14,11],[14,11]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[0.5196076172213042],"time":0.80615234375,"type":"prune"},{"compiler":[[39,27]],"locations":[["(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))",0.11328125,true],["(/.f64 u1 (-.f64 1 u1))",0.1796875,true],["(sin.f64 (*.f64 314159265359/50000000000 u2))",0.25132753907376804,true],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))",0.33203125,true]],"time":11.048828125,"type":"localize"},{"count":[[4,28]],"series":[["(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))","u1","-inf",0.2919921875],["(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))","u1","inf",0.323974609375],["(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))","u1","0",0.302978515625],["(/.f64 u1 (-.f64 1 u1))","u1","-inf",0.18896484375],["(/.f64 u1 (-.f64 1 u1))","u1","inf",0.281005859375],["(/.f64 u1 (-.f64 1 u1))","u1","0",0.192138671875],["(sin.f64 (*.f64 314159265359/50000000000 u2))","u2","-inf",0.135009765625],["(sin.f64 (*.f64 314159265359/50000000000 u2))","u2","inf",0.13916015625],["(sin.f64 (*.f64 314159265359/50000000000 u2))","u2","0",0.235107421875],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","u2","-inf",0.3330078125],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","u2","inf",0.76416015625],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","u2","0",0.680908203125],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","u1","-inf",0.526123046875],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","u1","inf",0.70703125],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","u1","0",0.93505859375]],"time":6.2451171875,"type":"series"},{"count":[[4,159]],"egraph":[[2,2842,39,0.029342791],[1,228,39,0.005725291],[0,11,39,0.000553416]],"inputs":[["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(sin.f64 (*.f64 314159265359/50000000000 u2))","(/.f64 u1 (-.f64 1 u1))","(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sin.f64 (*.f64 314159265359/50000000000 u2)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sin.f64 (*.f64 314159265359/50000000000 u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sin.f64 (*.f64 314159265359/50000000000 u2))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sin.f64 (*.f64 314159265359/50000000000 u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sqrt.f64 u1) (sin.f64 (*.f64 314159265359/50000000000 u2))) (sqrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 u1)) (sqrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 u1 (-.f64 1 u1)) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2))))) 2)) (cbrt.f64 (log.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))))) (sqrt.f64 (log.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (/.f64 u1 (-.f64 1 u1)) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sin.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sin.f64 (*.f64 314159265359/50000000000 u2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 314159265359/50000000000 u2)))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 314159265359/50000000000 u2)))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 314159265359/50000000000 u2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) 2) (cbrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) (sqrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))) 2)) (cbrt.f64 (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))))) (sqrt.f64 (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 u1 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 u1 (-.f64 1 u1)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 u1 (-.f64 1 u1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 u1 (-.f64 1 u1))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 u1 (-.f64 1 u1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 u1 (-.f64 1 u1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 u1 (/.f64 1 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 u1 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 u1 (-.f64 1 u1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (cbrt.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2)) (cbrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 u1) 2) (*.f64 (cbrt.f64 u1) (/.f64 1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 u1) (*.f64 (sqrt.f64 u1) (/.f64 1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/4) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 u1) (/.f64 1 (neg.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 1 u1)) u1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 u1) -1/2) (/.f64 u1 (sqrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 u1) 2) 1) (/.f64 (cbrt.f64 u1) (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 u1) 1) (/.f64 (sqrt.f64 u1) (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 1 u1)) -2) (/.f64 u1 (cbrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 u1) 2) (pow.f64 (cbrt.f64 (-.f64 1 u1)) 2)) (cbrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 u1) (pow.f64 (cbrt.f64 (-.f64 1 u1)) 2)) (/.f64 (sqrt.f64 u1) (cbrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 u1) 2) (sqrt.f64 (-.f64 1 u1))) (/.f64 (cbrt.f64 u1) (sqrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 u1 (-.f64 1 (pow.f64 u1 3))) (+.f64 1 (fma.f64 u1 u1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 u1 (-.f64 1 (*.f64 u1 u1))) (+.f64 u1 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/4) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 5/6) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 u1 (-.f64 1 u1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/2) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/6) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/4) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (/.f64 1 u1) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 u1 3) (pow.f64 (-.f64 1 u1) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (/.f64 1 u1) 1) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 u1 (-.f64 1 u1)))) 2)) (cbrt.f64 (log.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (/.f64 u1 (-.f64 1 u1))))) (sqrt.f64 (log.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 u1 (neg.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 u1 3) (pow.f64 (-.f64 1 u1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 u1 (-.f64 1 u1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 u1 (-.f64 1 u1)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (/.f64 1 u1) 1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 u1 (-.f64 1 u1))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 u1 (-.f64 1 u1))) 1/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 1) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/6) (cbrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 u1) (pow.f64 (-.f64 1 u1) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/4) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (sqrt.f64 (-.f64 (/.f64 1 u1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (sqrt.f64 (-.f64 1 u1)) (sqrt.f64 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 u1) (sqrt.f64 (-.f64 1 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (neg.f64 u1)) (sqrt.f64 (neg.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sqrt.f64 u1)) (neg.f64 (sqrt.f64 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 u1 (-.f64 1 u1))) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/6) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (/.f64 1 u1) 1) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1/2) (log.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (/.f64 1 u1) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (-.f64 1 u1)) (sqrt.f64 u1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) 2)) (cbrt.f64 (log.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))) (sqrt.f64 (log.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 u1 (-.f64 1 u1))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/2)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/6)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/4)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 u1 (-.f64 1 u1))) 1) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 u1 (-.f64 1 u1))) 1/2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) 1) 1))))))"]],"rules":[["egg-rr",45],["egg-rr",58],["egg-rr",30],["egg-rr",26]],"stop":[["node limit",1]],"time":58.410888671875,"type":"rewrite"},{"count":[[187,190]],"egraph":[[5,5049,421,0.031701415999999996],[4,2792,421,0.018839749],[3,1351,421,0.009311040999999999],[2,480,421,0.004179666],[1,172,452,0.001636541],[0,63,512,0.000516541]],"inputs":[["(*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))","(+.f64 (*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))","(+.f64 (*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))","(+.f64 (*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 314159265359/50000000000 u2)","(+.f64 (*.f64 314159265359/50000000000 u2) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3)))","(+.f64 (*.f64 314159265359/50000000000 u2) (+.f64 (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3)) (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5))))","(+.f64 (*.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)) (+.f64 (*.f64 314159265359/50000000000 u2) (+.f64 (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3)) (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)))))","u1","(+.f64 (pow.f64 u1 2) u1)","(+.f64 (pow.f64 u1 2) (+.f64 (pow.f64 u1 3) u1))","(+.f64 (pow.f64 u1 2) (+.f64 (pow.f64 u1 4) (+.f64 (pow.f64 u1 3) u1)))","-1","(neg.f64 (+.f64 1 (/.f64 1 u1)))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (/.f64 1 u1))))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (+.f64 (/.f64 1 (pow.f64 u1 3)) (/.f64 1 u1)))))","-1","(neg.f64 (+.f64 1 (/.f64 1 u1)))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (/.f64 1 u1))))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (+.f64 (/.f64 1 (pow.f64 u1 3)) (/.f64 1 u1)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (*.f64 314159265359/50000000000 u2))","(+.f64 (*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))","(fma.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (pow.f64 u2 3))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (fma.f64 314159265359/50000000000 u2 (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (*.f64 314159265359/50000000000 u2)))","(+.f64 (*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))))))","(fma.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (fma.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (pow.f64 u2 5)) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (pow.f64 u2 3)))))","(fma.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (fma.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3)))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (fma.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 314159265359/50000000000 u2))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (fma.f64 314159265359/50000000000 u2 (fma.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3)))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (fma.f64 314159265359/50000000000 u2 (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)))))","(+.f64 (*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))","(fma.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (fma.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (pow.f64 u2 7)) (fma.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (pow.f64 u2 5)) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (pow.f64 u2 3))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (fma.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3)))) (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (fma.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (*.f64 314159265359/50000000000 u2))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (fma.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (fma.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 314159265359/50000000000 u2)))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (fma.f64 314159265359/50000000000 u2 (fma.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (fma.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3))))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (fma.f64 314159265359/50000000000 u2 (fma.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5))))))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 314159265359/50000000000 u2)","(+.f64 (*.f64 314159265359/50000000000 u2) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3)))","(fma.f64 314159265359/50000000000 u2 (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3)))","(fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (*.f64 314159265359/50000000000 u2))","(+.f64 (*.f64 314159265359/50000000000 u2) (+.f64 (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3)) (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5))))","(fma.f64 314159265359/50000000000 u2 (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5))))","(fma.f64 314159265359/50000000000 u2 (fma.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3))))","(fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (fma.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 314159265359/50000000000 u2)))","(+.f64 (*.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)) (+.f64 (*.f64 314159265359/50000000000 u2) (+.f64 (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3)) (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)))))","(fma.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (fma.f64 314159265359/50000000000 u2 (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)))))","(fma.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (fma.f64 314159265359/50000000000 u2 (fma.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3)))))","(fma.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (fma.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 314159265359/50000000000 u2))))","(fma.f64 314159265359/50000000000 u2 (fma.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (fma.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3)))))","(fma.f64 314159265359/50000000000 u2 (fma.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)))))","u1","(+.f64 (pow.f64 u1 2) u1)","(+.f64 u1 (*.f64 u1 u1))","(fma.f64 u1 u1 u1)","(+.f64 (pow.f64 u1 2) (+.f64 (pow.f64 u1 3) u1))","(+.f64 (*.f64 u1 u1) (+.f64 u1 (pow.f64 u1 3)))","(+.f64 u1 (*.f64 u1 (fma.f64 u1 u1 u1)))","(fma.f64 u1 (fma.f64 u1 u1 u1) u1)","(+.f64 (pow.f64 u1 2) (+.f64 (pow.f64 u1 4) (+.f64 (pow.f64 u1 3) u1)))","(+.f64 (*.f64 u1 u1) (+.f64 (+.f64 u1 (pow.f64 u1 3)) (pow.f64 u1 4)))","(+.f64 (+.f64 u1 (pow.f64 u1 3)) (fma.f64 u1 u1 (pow.f64 u1 4)))","(*.f64 (fma.f64 u1 u1 1) (fma.f64 u1 u1 u1))","(*.f64 (fma.f64 u1 u1 u1) (fma.f64 u1 u1 1))","-1","(neg.f64 (+.f64 1 (/.f64 1 u1)))","(+.f64 -1 (neg.f64 (/.f64 1 u1)))","(+.f64 -1 (/.f64 -1 u1))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (/.f64 1 u1))))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 u1) (/.f64 1 (*.f64 u1 u1)))))","(-.f64 -1 (+.f64 (/.f64 1 u1) (/.f64 1 (*.f64 u1 u1))))","(+.f64 (+.f64 -1 (/.f64 -1 u1)) (/.f64 -1 (*.f64 u1 u1)))","(+.f64 -1 (+.f64 (/.f64 -1 u1) (/.f64 -1 (*.f64 u1 u1))))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (+.f64 (/.f64 1 (pow.f64 u1 3)) (/.f64 1 u1)))))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (*.f64 u1 u1)) (+.f64 (/.f64 1 u1) (/.f64 1 (pow.f64 u1 3))))))","(-.f64 -1 (+.f64 (/.f64 1 u1) (+.f64 (/.f64 1 (*.f64 u1 u1)) (/.f64 1 (pow.f64 u1 3)))))","(-.f64 (+.f64 (+.f64 -1 (/.f64 -1 u1)) (/.f64 -1 (*.f64 u1 u1))) (/.f64 1 (pow.f64 u1 3)))","(+.f64 -1 (+.f64 (+.f64 (/.f64 -1 u1) (/.f64 -1 (*.f64 u1 u1))) (/.f64 -1 (pow.f64 u1 3))))","-1","(neg.f64 (+.f64 1 (/.f64 1 u1)))","(+.f64 -1 (neg.f64 (/.f64 1 u1)))","(+.f64 -1 (/.f64 -1 u1))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (/.f64 1 u1))))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 u1) (/.f64 1 (*.f64 u1 u1)))))","(-.f64 -1 (+.f64 (/.f64 1 u1) (/.f64 1 (*.f64 u1 u1))))","(+.f64 (+.f64 -1 (/.f64 -1 u1)) (/.f64 -1 (*.f64 u1 u1)))","(+.f64 -1 (+.f64 (/.f64 -1 u1) (/.f64 -1 (*.f64 u1 u1))))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (pow.f64 u1 2)) (+.f64 (/.f64 1 (pow.f64 u1 3)) (/.f64 1 u1)))))","(neg.f64 (+.f64 1 (+.f64 (/.f64 1 (*.f64 u1 u1)) (+.f64 (/.f64 1 u1) (/.f64 1 (pow.f64 u1 3))))))","(-.f64 -1 (+.f64 (/.f64 1 u1) (+.f64 (/.f64 1 (*.f64 u1 u1)) (/.f64 1 (pow.f64 u1 3)))))","(-.f64 (+.f64 (+.f64 -1 (/.f64 -1 u1)) (/.f64 -1 (*.f64 u1 u1))) (/.f64 1 (pow.f64 u1 3)))","(+.f64 -1 (+.f64 (+.f64 (/.f64 -1 u1) (/.f64 -1 (*.f64 u1 u1))) (/.f64 -1 (pow.f64 u1 3))))"]],"stop":[["node limit",1]],"time":53.01904296875,"type":"simplify"},{"compiler":[[3128,2426]],"time":41.998046875,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2) 1/4) (sin.f64 (*.f64 314159265359/50000000000 u2)))","next",0.4846563180802657],["(/.f64 (*.f64 (sqrt.f64 u1) (sin.f64 (*.f64 314159265359/50000000000 u2))) (sqrt.f64 (-.f64 1 u1)))","fresh",0.5120000680802657],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (exp.f64 (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))))","fresh",2.441607902901125],["(+.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sin.f64 (*.f64 314159265359/50000000000 u2))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sin.f64 (*.f64 314159265359/50000000000 u2))))))","fresh",19.60842555129755],["(*.f64 (pow.f64 (exp.f64 1/2) (log.f64 (/.f64 u1 (-.f64 1 u1)))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","fresh",1.4220204416641304],["(pow.f64 (sqrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))) 2)","fresh",1.7189090942107974],["(exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2))))) 3))","fresh",3.30412314809733],["(pow.f64 (E.f64) (log.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))))","fresh",3.2843199323007357],["(+.f64 (*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))","fresh",6.5702320745301375],["(*.f64 (sqrt.f64 (*.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 5/6) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/6))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","fresh",0.9033842841430242],["(sqrt.f64 (*.f64 (/.f64 u1 (-.f64 1 u1)) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 2)))","fresh",1.4002515113592153],["(*.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/2)) 1/3)) (sin.f64 (*.f64 314159265359/50000000000 u2)))","fresh",1.5056544456088277],["(*.f64 (pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/6) 3) (sin.f64 (*.f64 314159265359/50000000000 u2)))","fresh",1.3717388082589965]],"compiler":[[17,15],[15,12],[16,13],[32,26],[17,14],[17,14],[19,16],[17,14],[52,40],[24,19],[16,13],[19,16],[17,14],[17,15],[15,12],[16,13],[32,26],[17,14],[17,14],[19,16],[17,14],[52,40],[24,19],[16,13],[19,16],[17,14]],"count":[[191,13]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[190,13],"picked":[1,0]}],"min-error":[0],"time":48.4970703125,"type":"prune"},{"compiler":[[54,44]],"locations":[["(*.f64 314159265359/50000000000 u2)",0.1015625,true],["(sin.f64 (*.f64 314159265359/50000000000 u2))",0.25132753907376804,false],["(*.f64 (pow.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2) 1/4) (sin.f64 (*.f64 314159265359/50000000000 u2)))",0.33203125,true],["(pow.f64 (-.f64 (/.f64 1 u1) 1) -2)",0.6084938965266303,true]],"time":18.684814453125,"type":"localize"},{"count":[[3,24]],"series":[["(*.f64 314159265359/50000000000 u2)","u2","-inf",0.279052734375],["(*.f64 314159265359/50000000000 u2)","u2","inf",0.305908203125],["(*.f64 314159265359/50000000000 u2)","u2","0",0.263916015625],["(*.f64 (pow.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2) 1/4) (sin.f64 (*.f64 314159265359/50000000000 u2)))","u2","-inf",0.471923828125],["(*.f64 (pow.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2) 1/4) (sin.f64 (*.f64 314159265359/50000000000 u2)))","u2","inf",0.8818359375],["(*.f64 (pow.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2) 1/4) (sin.f64 (*.f64 314159265359/50000000000 u2)))","u2","0",10.219970703125],["(*.f64 (pow.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2) 1/4) (sin.f64 (*.f64 314159265359/50000000000 u2)))","u1","-inf",2.550048828125],["(*.f64 (pow.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2) 1/4) (sin.f64 (*.f64 314159265359/50000000000 u2)))","u1","inf",0.4130859375],["(*.f64 (pow.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2) 1/4) (sin.f64 (*.f64 314159265359/50000000000 u2)))","u1","0",29.511962890625],["(pow.f64 (-.f64 (/.f64 1 u1) 1) -2)","u1","-inf",0.27392578125],["(pow.f64 (-.f64 (/.f64 1 u1) 1) -2)","u1","inf",0.248046875],["(pow.f64 (-.f64 (/.f64 1 u1) 1) -2)","u1","0",0.35986328125]],"time":46.092041015625,"type":"series"},{"count":[[3,52]],"egraph":[[2,3494,32,0.035422959000000004],[1,304,32,0.0071760420000000005],[0,14,32,0.000726334]],"inputs":[["(pow.f64 (-.f64 (/.f64 1 u1) 1) -2)","(*.f64 (pow.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2) 1/4) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 314159265359/50000000000 u2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (+.f64 (/.f64 1 u1) -1) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 u1) -1)) -2) (cbrt.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -4)) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 u1) -1)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1)) (/.f64 1 (+.f64 (/.f64 1 u1) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 u1) -1)) -4) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 u1) -1)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 -2 (log.f64 (+.f64 (/.f64 1 u1) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 -2 (log.f64 (+.f64 (/.f64 1 u1) -1))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2) (sin.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2)) (sin.f64 (*.f64 314159265359/50000000000 u2)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2)) (sin.f64 (*.f64 314159265359/50000000000 u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2)) (sin.f64 (*.f64 314159265359/50000000000 u2))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2)) (sin.f64 (*.f64 314159265359/50000000000 u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2) (sin.f64 (*.f64 314159265359/50000000000 u2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2) (sin.f64 (*.f64 314159265359/50000000000 u2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 2) (/.f64 1 (+.f64 (/.f64 1 u1) -1))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2) (sin.f64 (*.f64 314159265359/50000000000 u2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/4)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 2) (/.f64 1 (+.f64 (/.f64 1 u1) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2)) (sin.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2) (sin.f64 (*.f64 314159265359/50000000000 u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2) (sin.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2) (sin.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 -1/2 (log.f64 (+.f64 (/.f64 1 u1) -1)) (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 -1/2 (log.f64 (+.f64 (/.f64 1 u1) -1)) (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 314159265359/50000000000 u2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 u2) 314159265359/50000000000)) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 u2) 314159265359/50000000000))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 u2) 314159265359/50000000000))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 u2) 314159265359/50000000000))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 314159265359/50000000000 u2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 314159265359/50000000000 u2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 u2 u2) 98696044010906577398881/2500000000000000000000) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 314159265359/50000000000 u2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 314159265359/50000000000 u2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 314159265359/50000000000 u2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (*.f64 u2 u2) 98696044010906577398881/2500000000000000000000))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 u2) 314159265359/50000000000))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 314159265359/50000000000 u2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 314159265359/50000000000 u2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 314159265359/50000000000 u2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 314159265359/50000000000 u2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 314159265359/50000000000 u2)) 1))))))"]],"rules":[["egg-rr",17],["egg-rr",17],["egg-rr",18]],"stop":[["node limit",1]],"time":62.400146484375,"type":"rewrite"},{"count":[[76,77]],"egraph":[[7,7591,430,0.055305459],[6,7077,430,0.042011459],[5,5334,430,0.029511583999999997],[4,3153,430,0.018933541999999998],[3,1185,430,0.009283791999999999],[2,415,434,0.004327333],[1,163,468,0.001685458],[0,60,520,0.0005795]],"inputs":[["(pow.f64 u1 2)","(+.f64 (pow.f64 u1 2) (*.f64 2 (pow.f64 u1 3)))","(+.f64 (pow.f64 u1 2) (+.f64 (*.f64 2 (pow.f64 u1 3)) (*.f64 3 (pow.f64 u1 4))))","(+.f64 (pow.f64 u1 2) (+.f64 (*.f64 2 (pow.f64 u1 3)) (+.f64 (*.f64 4 (pow.f64 u1 5)) (*.f64 3 (pow.f64 u1 4)))))","1","(+.f64 1 (*.f64 2 (/.f64 1 u1)))","(+.f64 (*.f64 3 (/.f64 1 (pow.f64 u1 2))) (+.f64 1 (*.f64 2 (/.f64 1 u1))))","(+.f64 (*.f64 3 (/.f64 1 (pow.f64 u1 2))) (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 u1)) (*.f64 4 (/.f64 1 (pow.f64 u1 3))))))","1","(+.f64 1 (*.f64 2 (/.f64 1 u1)))","(+.f64 (*.f64 3 (/.f64 1 (pow.f64 u1 2))) (+.f64 1 (*.f64 2 (/.f64 1 u1))))","(+.f64 (*.f64 3 (/.f64 1 (pow.f64 u1 2))) (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 u1)) (*.f64 4 (/.f64 1 (pow.f64 u1 3))))))","(*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1)))))","(+.f64 (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))) (*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))))","(+.f64 (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))) (+.f64 (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))) (*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1)))))))","(+.f64 (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))) (+.f64 (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))) (+.f64 (*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))) (*.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))))))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 u1 2)","(*.f64 u1 u1)","(+.f64 (pow.f64 u1 2) (*.f64 2 (pow.f64 u1 3)))","(+.f64 (*.f64 u1 u1) (*.f64 2 (pow.f64 u1 3)))","(fma.f64 2 (pow.f64 u1 3) (*.f64 u1 u1))","(fma.f64 u1 u1 (*.f64 2 (pow.f64 u1 3)))","(*.f64 u1 (*.f64 (fma.f64 u1 2 1) u1))","(*.f64 u1 (*.f64 u1 (fma.f64 u1 2 1)))","(+.f64 (pow.f64 u1 2) (+.f64 (*.f64 2 (pow.f64 u1 3)) (*.f64 3 (pow.f64 u1 4))))","(+.f64 (*.f64 u1 u1) (fma.f64 2 (pow.f64 u1 3) (*.f64 3 (pow.f64 u1 4))))","(fma.f64 u1 u1 (fma.f64 2 (pow.f64 u1 3) (*.f64 3 (pow.f64 u1 4))))","(fma.f64 u1 u1 (*.f64 (pow.f64 u1 3) (+.f64 (*.f64 u1 3) 2)))","(fma.f64 u1 u1 (*.f64 (pow.f64 u1 3) (+.f64 2 (*.f64 u1 3))))","(+.f64 (pow.f64 u1 2) (+.f64 (*.f64 2 (pow.f64 u1 3)) (+.f64 (*.f64 4 (pow.f64 u1 5)) (*.f64 3 (pow.f64 u1 4)))))","(+.f64 (*.f64 u1 u1) (fma.f64 2 (pow.f64 u1 3) (fma.f64 4 (pow.f64 u1 5) (*.f64 3 (pow.f64 u1 4)))))","(fma.f64 u1 u1 (fma.f64 2 (pow.f64 u1 3) (fma.f64 3 (pow.f64 u1 4) (*.f64 4 (pow.f64 u1 5)))))","(fma.f64 u1 u1 (fma.f64 4 (pow.f64 u1 5) (*.f64 (pow.f64 u1 3) (+.f64 (*.f64 u1 3) 2))))","(fma.f64 u1 u1 (fma.f64 4 (pow.f64 u1 5) (*.f64 (pow.f64 u1 3) (+.f64 2 (*.f64 u1 3)))))","1","(+.f64 1 (*.f64 2 (/.f64 1 u1)))","(+.f64 1 (/.f64 2 u1))","(+.f64 (*.f64 3 (/.f64 1 (pow.f64 u1 2))) (+.f64 1 (*.f64 2 (/.f64 1 u1))))","(+.f64 (+.f64 1 (/.f64 2 u1)) (/.f64 3 (*.f64 u1 u1)))","(+.f64 1 (+.f64 (/.f64 2 u1) (/.f64 3 (*.f64 u1 u1))))","(+.f64 (/.f64 2 u1) (+.f64 1 (/.f64 3 (*.f64 u1 u1))))","(+.f64 1 (+.f64 (/.f64 2 u1) (/.f64 (/.f64 3 u1) u1)))","(+.f64 (*.f64 3 (/.f64 1 (pow.f64 u1 2))) (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 u1)) (*.f64 4 (/.f64 1 (pow.f64 u1 3))))))","(+.f64 (/.f64 3 (*.f64 u1 u1)) (+.f64 1 (+.f64 (/.f64 2 u1) (/.f64 4 (pow.f64 u1 3)))))","(+.f64 (+.f64 1 (/.f64 2 u1)) (+.f64 (/.f64 4 (pow.f64 u1 3)) (/.f64 3 (*.f64 u1 u1))))","(+.f64 1 (+.f64 (/.f64 3 (*.f64 u1 u1)) (+.f64 (/.f64 2 u1) (/.f64 4 (pow.f64 u1 3)))))","(+.f64 1 (+.f64 (/.f64 2 u1) (+.f64 (/.f64 3 (*.f64 u1 u1)) (/.f64 4 (pow.f64 u1 3)))))","(+.f64 1 (+.f64 (/.f64 2 u1) (+.f64 (/.f64 (/.f64 3 u1) u1) (/.f64 4 (pow.f64 u1 3)))))","1","(+.f64 1 (*.f64 2 (/.f64 1 u1)))","(+.f64 1 (/.f64 2 u1))","(+.f64 (*.f64 3 (/.f64 1 (pow.f64 u1 2))) (+.f64 1 (*.f64 2 (/.f64 1 u1))))","(+.f64 (+.f64 1 (/.f64 2 u1)) (/.f64 3 (*.f64 u1 u1)))","(+.f64 1 (+.f64 (/.f64 2 u1) (/.f64 3 (*.f64 u1 u1))))","(+.f64 (/.f64 2 u1) (+.f64 1 (/.f64 3 (*.f64 u1 u1))))","(+.f64 1 (+.f64 (/.f64 2 u1) (/.f64 (/.f64 3 u1) u1)))","(+.f64 (*.f64 3 (/.f64 1 (pow.f64 u1 2))) (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 u1)) (*.f64 4 (/.f64 1 (pow.f64 u1 3))))))","(+.f64 (/.f64 3 (*.f64 u1 u1)) (+.f64 1 (+.f64 (/.f64 2 u1) (/.f64 4 (pow.f64 u1 3)))))","(+.f64 (+.f64 1 (/.f64 2 u1)) (+.f64 (/.f64 4 (pow.f64 u1 3)) (/.f64 3 (*.f64 u1 u1))))","(+.f64 1 (+.f64 (/.f64 3 (*.f64 u1 u1)) (+.f64 (/.f64 2 u1) (/.f64 4 (pow.f64 u1 3)))))","(+.f64 1 (+.f64 (/.f64 2 u1) (+.f64 (/.f64 3 (*.f64 u1 u1)) (/.f64 4 (pow.f64 u1 3)))))","(+.f64 1 (+.f64 (/.f64 2 u1) (+.f64 (/.f64 (/.f64 3 u1) u1) (/.f64 4 (pow.f64 u1 3)))))","(*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1)))))","(*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1)))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (*.f64 314159265359/50000000000 u2))","(+.f64 (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))) (*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))))","(fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (pow.f64 u2 3)) (*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (+.f64 (*.f64 314159265359/50000000000 u2) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (fma.f64 314159265359/50000000000 u2 (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (*.f64 u2 (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 u2 u2) 314159265359/50000000000)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))) (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (*.f64 314159265359/50000000000 u2)))","(+.f64 (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))) (+.f64 (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))) (*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1)))))))","(fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (pow.f64 u2 3)) (fma.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (pow.f64 u2 5)) (*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1)))))))","(fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (pow.f64 u2 3)) (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (+.f64 (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)) (*.f64 314159265359/50000000000 u2))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (+.f64 (*.f64 314159265359/50000000000 u2) (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (fma.f64 314159265359/50000000000 u2 (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))) (fma.f64 314159265359/50000000000 u2 (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)))))","(+.f64 (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))) (+.f64 (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))) (+.f64 (*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))) (*.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))))))","(fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (pow.f64 u2 3)) (fma.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (pow.f64 u2 5)) (fma.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1)))) (*.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (pow.f64 u2 7))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (+.f64 (*.f64 314159265359/50000000000 u2) (*.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)))) (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (+.f64 (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3)) (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (+.f64 (fma.f64 314159265359/50000000000 u2 (*.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7))) (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (+.f64 (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)) (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (fma.f64 314159265359/50000000000 u2 (*.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))) (+.f64 (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)) (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (fma.f64 314159265359/50000000000 u2 (*.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7))))))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (/.f64 1 u1) -1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))"]],"stop":[["node limit",1]],"time":76.71484375,"type":"simplify"},{"compiler":[[2194,1886]],"time":38.7919921875,"type":"eval"},{"alts":[["(*.f64 (pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/6) 3) (sin.f64 (*.f64 314159265359/50000000000 u2)))","fresh",1.3717388082589965],["(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))) (fma.f64 314159265359/50000000000 u2 (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)))))","fresh",8.442620242921576],["(pow.f64 (E.f64) (log.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))))","fresh",3.2843199323007357],["(+.f64 (*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))","fresh",6.5702320745301375],["(pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2) (sin.f64 (*.f64 314159265359/50000000000 u2)))) 3)","fresh",0.8821604981905435],["(*.f64 (pow.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 u1) -1)) -4) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 u1) -1)) -2)) 1/4) (sin.f64 (*.f64 314159265359/50000000000 u2)))","fresh",0.6520376657646859],["(/.f64 (*.f64 (sqrt.f64 u1) (sin.f64 (*.f64 314159265359/50000000000 u2))) (sqrt.f64 (-.f64 1 u1)))","fresh",0.5120000680802657],["(+.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sin.f64 (*.f64 314159265359/50000000000 u2))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sin.f64 (*.f64 314159265359/50000000000 u2))))))","fresh",19.60842555129755],["(*.f64 (pow.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2) 1/4) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) 3))","fresh",0.802931652821451],["(*.f64 (pow.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2) 1/4) (pow.f64 (sqrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) 2))","fresh",1.7130178953683357],["(exp.f64 (fma.f64 -1/2 (log.f64 (+.f64 (/.f64 1 u1) -1)) (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))))","fresh",3.12590923952384],["(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))","next",0.4068250192380556]],"compiler":[[17,14],[25,21],[17,14],[52,40],[18,16],[27,24],[15,12],[32,26],[20,18],[20,18],[17,15],[18,16],[17,14],[25,21],[17,14],[52,40],[18,16],[27,24],[15,12],[32,26],[20,18],[20,18],[17,15],[18,16]],"count":[[127,12]],"kept":[{"done":[0,0],"fresh":[12,5],"new":[114,7],"picked":[1,0]}],"min-error":[0],"time":29.494140625,"type":"prune"},{"compiler":[[67,55]],"locations":[["(sin.f64 (*.f64 314159265359/50000000000 u2))",0.25132753907376804,false],["(*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))",0.33984375,true],["(pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)",0.45541000976844204,true],["(pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)",0.6456414551372825,true]],"time":23.81494140625,"type":"localize"},{"count":[[3,20]],"series":[["(*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))","u2","-inf",0.3759765625],["(*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))","u2","inf",1.18994140625],["(*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))","u2","0",0.735107421875],["(*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))","u1","-inf",0.60791015625],["(*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))","u1","inf",0.6240234375],["(*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))","u1","0",0.7939453125],["(pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)","u1","-inf",0.304931640625],["(pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)","u1","inf",0.347900390625],["(pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)","u1","0",0.446044921875],["(pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)","u2","-inf",0.701904296875],["(pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)","u2","inf",0.69091796875],["(pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)","u2","0",0.64990234375]],"time":7.719970703125,"type":"series"},{"count":[[3,58]],"egraph":[[2,3496,40,0.031081458],[1,316,40,0.007092917],[0,15,40,0.000734584]],"inputs":[["(pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)","(pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)","(*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 2) (sin.f64 (*.f64 314159265359/50000000000 u2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) 2) (*.f64 (cbrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) (*.f64 (sqrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 2) 1) (sin.f64 (*.f64 314159265359/50000000000 u2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))) 2) (cbrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 2) (sqrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))) (sqrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 9))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 3 (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2) (cbrt.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3)) (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/4) (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 -3/2) (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 u1) -1)) -3) (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -9/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 -3/2 (log.f64 (+.f64 (/.f64 1 u1) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 -3/2 (log.f64 (+.f64 (/.f64 1 u1) -1))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 6)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2)) 9) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2)) 3/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 6)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2)) 9))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 3 (log.f64 (*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2)))) 1))))))"]],"rules":[["egg-rr",17],["egg-rr",19],["egg-rr",22]],"stop":[["node limit",1]],"time":53.570068359375,"type":"rewrite"},{"count":[[78,83]],"egraph":[[6,6813,474,0.039521333],[5,3994,474,0.026325957999999997],[4,2867,474,0.015708041],[3,1134,474,0.009145707999999999],[2,414,474,0.004126833],[1,169,534,0.001888124],[0,66,600,0.000701833]],"inputs":[["(*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3))","(+.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)) (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3)))","(+.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)) (+.f64 (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)) (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3))))","(+.f64 (*.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 9)) (+.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)) (+.f64 (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)) (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3)))))","(sqrt.f64 (pow.f64 u1 3))","(+.f64 (*.f64 3/2 (sqrt.f64 (pow.f64 u1 5))) (sqrt.f64 (pow.f64 u1 3)))","(+.f64 (*.f64 3/2 (sqrt.f64 (pow.f64 u1 5))) (+.f64 (sqrt.f64 (pow.f64 u1 3)) (*.f64 15/8 (sqrt.f64 (pow.f64 u1 7)))))","(+.f64 (*.f64 3/2 (sqrt.f64 (pow.f64 u1 5))) (+.f64 (sqrt.f64 (pow.f64 u1 3)) (+.f64 (*.f64 35/16 (sqrt.f64 (pow.f64 u1 9))) (*.f64 15/8 (sqrt.f64 (pow.f64 u1 7))))))","(*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3)))))","(+.f64 (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))))","(+.f64 (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (+.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3)))))))","(+.f64 (*.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 9) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (+.f64 (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (+.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))))))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3))","(+.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)) (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3)))","(fma.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3)))","(fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)))","(+.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)) (+.f64 (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)) (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3))))","(fma.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (fma.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3))))","(fma.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7))))","(fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (fma.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5))))","(fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (fma.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7))))","(+.f64 (*.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 9)) (+.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)) (+.f64 (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)) (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3)))))","(fma.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 9) (fma.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (fma.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3)))))","(fma.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 9) (fma.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)))))","(fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (fma.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (fma.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 9) (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)))))","(fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (fma.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (fma.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 9)))))","(sqrt.f64 (pow.f64 u1 3))","(pow.f64 u1 3/2)","(+.f64 (*.f64 3/2 (sqrt.f64 (pow.f64 u1 5))) (sqrt.f64 (pow.f64 u1 3)))","(fma.f64 3/2 (sqrt.f64 (pow.f64 u1 5)) (sqrt.f64 (pow.f64 u1 3)))","(fma.f64 3/2 (pow.f64 u1 5/2) (pow.f64 u1 3/2))","(+.f64 (*.f64 3/2 (sqrt.f64 (pow.f64 u1 5))) (+.f64 (sqrt.f64 (pow.f64 u1 3)) (*.f64 15/8 (sqrt.f64 (pow.f64 u1 7)))))","(+.f64 (fma.f64 3/2 (sqrt.f64 (pow.f64 u1 5)) (sqrt.f64 (pow.f64 u1 3))) (*.f64 15/8 (sqrt.f64 (pow.f64 u1 7))))","(fma.f64 3/2 (sqrt.f64 (pow.f64 u1 5)) (fma.f64 15/8 (sqrt.f64 (pow.f64 u1 7)) (sqrt.f64 (pow.f64 u1 3))))","(fma.f64 3/2 (pow.f64 u1 5/2) (fma.f64 15/8 (pow.f64 u1 7/2) (pow.f64 u1 3/2)))","(+.f64 (*.f64 3/2 (sqrt.f64 (pow.f64 u1 5))) (+.f64 (sqrt.f64 (pow.f64 u1 3)) (+.f64 (*.f64 35/16 (sqrt.f64 (pow.f64 u1 9))) (*.f64 15/8 (sqrt.f64 (pow.f64 u1 7))))))","(+.f64 (fma.f64 3/2 (sqrt.f64 (pow.f64 u1 5)) (sqrt.f64 (pow.f64 u1 3))) (fma.f64 35/16 (sqrt.f64 (pow.f64 u1 9)) (*.f64 15/8 (sqrt.f64 (pow.f64 u1 7)))))","(+.f64 (fma.f64 3/2 (sqrt.f64 (pow.f64 u1 5)) (sqrt.f64 (pow.f64 u1 3))) (fma.f64 15/8 (sqrt.f64 (pow.f64 u1 7)) (*.f64 35/16 (fabs.f64 (pow.f64 u1 9/2)))))","(fma.f64 3/2 (pow.f64 u1 5/2) (fma.f64 15/8 (pow.f64 u1 7/2) (fma.f64 35/16 (pow.f64 u1 9/2) (pow.f64 u1 3/2))))","(fma.f64 15/8 (pow.f64 u1 7/2) (fma.f64 3/2 (pow.f64 u1 5/2) (fma.f64 35/16 (pow.f64 u1 9/2) (pow.f64 u1 3/2))))","(*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3)))))","(*.f64 (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))))","(*.f64 (pow.f64 u2 3) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) 31006276680305942139213528068663279/125000000000000000000000000000000))","(*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3)))))","(+.f64 (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))))","(fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3)))) (*.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3)))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5))))","(*.f64 (fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))))","(+.f64 (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (+.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3)))))))","(fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3)))) (fma.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3)))) (*.f64 (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))))))","(fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3)))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (fma.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (fma.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)))))","(*.f64 (fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (fma.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))))","(*.f64 (fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (fma.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))))","(+.f64 (*.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 9) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (+.f64 (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (+.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))))))","(fma.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 9) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3)))) (fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3)))) (fma.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3)))) (*.f64 (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3)))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (fma.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (+.f64 (*.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 9)) (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3)))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (fma.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 9) (fma.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7))))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (fma.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (fma.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 9) (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5))))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (fma.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (fma.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 9))))))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (pow.f64 (sin.f64 (*.f64 u2 314159265359/50000000000)) 3))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (pow.f64 (sin.f64 (*.f64 u2 314159265359/50000000000)) 3))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (pow.f64 (sin.f64 (*.f64 u2 314159265359/50000000000)) 3))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (pow.f64 (sin.f64 (*.f64 u2 314159265359/50000000000)) 3))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (pow.f64 (sin.f64 (*.f64 u2 314159265359/50000000000)) 3))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (pow.f64 (sin.f64 (*.f64 u2 314159265359/50000000000)) 3))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (pow.f64 (sin.f64 (*.f64 u2 314159265359/50000000000)) 3))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (pow.f64 (sin.f64 (*.f64 u2 314159265359/50000000000)) 3))"]],"stop":[["node limit",1]],"time":64.350830078125,"type":"simplify"},{"compiler":[[2581,2255]],"time":38.967041015625,"type":"eval"},{"alts":[["(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (expm1.f64 (log1p.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))))","next",0.3990125192380556],["(*.f64 (pow.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2) 1/4) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) 3))","fresh",0.802931652821451],["(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (log1p.f64 (expm1.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))) 3)))","fresh",0.4192075387749396],["(exp.f64 (fma.f64 -1/2 (log.f64 (+.f64 (/.f64 1 u1) -1)) (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))))","fresh",3.12590923952384],["(*.f64 (pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/6) 3) (sin.f64 (*.f64 314159265359/50000000000 u2)))","fresh",1.3717388082589965],["(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3/2))))","fresh",1.41767504884221],["(pow.f64 (E.f64) (log.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))))","fresh",3.2843199323007357],["(+.f64 (*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))","fresh",6.5702320745301375],["(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (fma.f64 314159265359/50000000000 u2 (fma.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5))))) 3)))","fresh",6.454180950005268],["(pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2) (sin.f64 (*.f64 314159265359/50000000000 u2)))) 3)","fresh",0.8821604981905435],["(*.f64 (pow.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 u1) -1)) -4) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 u1) -1)) -2)) 1/4) (sin.f64 (*.f64 314159265359/50000000000 u2)))","fresh",0.6520376657646859],["(+.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sin.f64 (*.f64 314159265359/50000000000 u2))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sin.f64 (*.f64 314159265359/50000000000 u2))))))","fresh",19.60842555129755],["(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (*.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 2) (sqrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))) (sqrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))))))","fresh",1.4509163574528623],["(cbrt.f64 (+.f64 (*.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 9) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (+.f64 (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (+.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3)))))))))","fresh",8.185233323849523]],"compiler":[[20,18],[20,18],[20,18],[17,15],[17,14],[25,22],[17,14],[52,40],[32,27],[18,16],[27,24],[32,26],[30,26],[71,63],[20,18],[20,18],[20,18],[17,15],[17,14],[25,22],[17,14],[52,40],[32,27],[18,16],[27,24],[32,26],[30,26],[71,63]],"count":[[132,14]],"kept":[{"done":[0,0],"fresh":[11,8],"new":[120,6],"picked":[1,0]}],"min-error":[0],"time":35.344970703125,"type":"prune"},{"compiler":[[86,72]],"locations":[["(sin.f64 (*.f64 314159265359/50000000000 u2))",0.25132753907376804,false],["(*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (expm1.f64 (log1p.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))))",0.33984375,true],["(pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)",0.45541000976844204,false],["(pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)",0.6456414551372825,false]],"time":35.85009765625,"type":"localize"},{"count":[[1,12]],"series":[["(*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (expm1.f64 (log1p.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))))","u2","-inf",0.213134765625],["(*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (expm1.f64 (log1p.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))))","u2","inf",0.201904296875],["(*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (expm1.f64 (log1p.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))))","u2","0",0.258056640625],["(*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (expm1.f64 (log1p.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))))","u1","-inf",0.243896484375],["(*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (expm1.f64 (log1p.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))))","u1","inf",0.274169921875],["(*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (expm1.f64 (log1p.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))))","u1","0",0.370849609375]],"time":1.678955078125,"type":"series"},{"count":[[1,21]],"egraph":[[2,3701,21,0.030783458],[1,336,21,0.007269458],[0,17,21,0.00077025]],"inputs":[["(*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (expm1.f64 (log1p.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 6) (pow.f64 (+.f64 (/.f64 1 u1) -1) -3)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) (cbrt.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3/2) (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/4)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) 3) (pow.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) 3) (pow.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 6) (pow.f64 (+.f64 (/.f64 1 u1) -1) -3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2)) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) 3) (pow.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) 3) (pow.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 3 (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) (*.f64 -3/2 (log.f64 (+.f64 (/.f64 1 u1) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 3 (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) (*.f64 -3/2 (log.f64 (+.f64 (/.f64 1 u1) -1)))) 1))))))"]],"rules":[["egg-rr",21]],"stop":[["node limit",1]],"time":48.631103515625,"type":"rewrite"},{"count":[[33,31]],"egraph":[[6,5762,348,0.034663832],[5,3239,348,0.021494581999999998],[4,2241,348,0.012025916],[3,816,348,0.006758291],[2,269,350,0.002860207],[1,102,390,0.001318207],[0,38,448,0.000468541]],"inputs":[["(*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3)))))","(+.f64 (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))))","(+.f64 (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (+.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3)))))))","(+.f64 (*.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 9) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (+.f64 (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (+.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))))))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3)))))","(*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3)))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3)))","(*.f64 (pow.f64 u2 3) (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3)))))","(+.f64 (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))))","(fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3)))) (*.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3)))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (+.f64 (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3)) (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5))))","(+.f64 (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (+.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3)))))))","(fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3)))) (fma.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (pow.f64 u2 5)) (*.f64 (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))))))","(fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3)))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (+.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (+.f64 (fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5))) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (fma.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (fma.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)))))","(+.f64 (*.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 9) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (+.f64 (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (+.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))))))","(fma.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (pow.f64 u2 9)) (fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3)))) (fma.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (pow.f64 u2 5)) (*.f64 (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3)))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (+.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (+.f64 (*.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 9)) (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3)))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (+.f64 (fma.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 9) (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3))) (fma.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (+.f64 (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7)) (fma.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 9) (fma.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3) (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5))))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (+.f64 (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (pow.f64 u2 3)) (fma.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 9) (fma.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (pow.f64 u2 5) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7))))))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (pow.f64 (sin.f64 (*.f64 u2 314159265359/50000000000)) 3))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (pow.f64 (sin.f64 (*.f64 u2 314159265359/50000000000)) 3))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (pow.f64 (sin.f64 (*.f64 u2 314159265359/50000000000)) 3))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (pow.f64 (sin.f64 (*.f64 u2 314159265359/50000000000)) 3))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (pow.f64 (sin.f64 (*.f64 u2 314159265359/50000000000)) 3))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (pow.f64 (sin.f64 (*.f64 u2 314159265359/50000000000)) 3))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (pow.f64 (sin.f64 (*.f64 u2 314159265359/50000000000)) 3))","(*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (/.f64 1 u1) -1) 3))) (pow.f64 (sin.f64 (*.f64 u2 314159265359/50000000000)) 3))"]],"stop":[["node limit",1]],"time":52.847900390625,"type":"simplify"},{"compiler":[[2855,2521]],"time":41.656982421875,"type":"eval"},{"alts":[["(exp.f64 (fma.f64 -1/2 (log.f64 (+.f64 (/.f64 1 u1) -1)) (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))))","fresh",3.12590923952384],["(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (expm1.f64 (log1p.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3/2))))))","fresh",1.41376879884221],["(pow.f64 (E.f64) (log.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))))","fresh",3.2843199323007357],["(+.f64 (*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))","fresh",6.5702320745301375],["(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (fma.f64 314159265359/50000000000 u2 (fma.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5))))) 3)))","fresh",6.454180950005268],["(pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2) (sin.f64 (*.f64 314159265359/50000000000 u2)))) 3)","fresh",0.8821604981905435],["(*.f64 (pow.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 u1) -1)) -4) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 u1) -1)) -2)) 1/4) (sin.f64 (*.f64 314159265359/50000000000 u2)))","fresh",0.6520376657646859],["(+.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sin.f64 (*.f64 314159265359/50000000000 u2))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sin.f64 (*.f64 314159265359/50000000000 u2))))))","fresh",19.60842555129755],["(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (expm1.f64 (log1p.f64 (pow.f64 (log1p.f64 (expm1.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))) 3)))))","fresh",0.4113950387749396],["(*.f64 (pow.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2) 1/4) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) 3))","fresh",0.802931652821451],["(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (*.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 2) (sqrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))) (sqrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))))))","fresh",1.4509163574528623],["(cbrt.f64 (+.f64 (*.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 9) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (+.f64 (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (+.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3)))))))))","fresh",8.185233323849523],["(*.f64 (pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/6) 3) (sin.f64 (*.f64 314159265359/50000000000 u2)))","fresh",1.3717388082589965]],"compiler":[[17,15],[27,24],[17,14],[52,40],[32,27],[18,16],[27,24],[32,26],[22,20],[20,18],[30,26],[71,63],[17,14]],"count":[[138,13]],"kept":[{"done":[0,0],"fresh":[13,11],"new":[124,2],"picked":[1,0]}],"min-error":[0],"time":29.80517578125,"type":"prune"},{"accuracy":[0.3990125192380556],"baseline":[0.3990125192380556],"branch":[["cosTheta_i",0.3990125192380556,1],["u1",0.39901251923805564,1],["u2",0.3990125192380556,1],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))",0.3990125192380557,1],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))",0.3990125192380557,1],["(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))",0.39901251923805564,1],["(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))",0.39901251923805564,1],["(/.f64 u1 (-.f64 1 u1))",0.39901251923805564,1],["(/.f64 u1 (-.f64 1 u1))",0.39901251923805564,1],["(sin.f64 (*.f64 314159265359/50000000000 u2))",0.3990125192380556,1],["(*.f64 314159265359/50000000000 u2)",0.3990125192380556,1]],"compiler":[[4,3],[4,3],[4,3],[14,11],[14,11],[9,7],[9,7],[8,6],[8,6],[7,6],[6,5],[600,499]],"count":[[29,1]],"inputs":[["(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (expm1.f64 (log1p.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3/2))))))","(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (expm1.f64 (log1p.f64 (pow.f64 (log1p.f64 (expm1.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))) 3)))))","(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (expm1.f64 (log1p.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))))","(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (log1p.f64 (expm1.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))) 3)))","(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3/2))))","(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (fma.f64 314159265359/50000000000 u2 (fma.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (pow.f64 u2 7) (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5))))) 3)))","(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (*.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 2) (sqrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))) (sqrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))))))","(cbrt.f64 (+.f64 (*.f64 -1222173072672018605869876866523723537468811217154985888808286930155378349843421319946643271006387243132199/5906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 9) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (+.f64 (*.f64 31006276680305942139213528068663279/125000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (+.f64 (*.f64 -3060196847853821555298148281676017575122444629042460390799/625000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3))))) (*.f64 3926381196111638570368189976325357820282927479677289842826169154812205366148846947/93750000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 1 (pow.f64 (-.f64 (/.f64 1 u1) 1) 3)))))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (/.f64 1 u1) 1))) (fma.f64 314159265359/50000000000 u2 (fma.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (pow.f64 u2 3) (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (pow.f64 u2 5)))))","(pow.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -1/2) (sin.f64 (*.f64 314159265359/50000000000 u2)))) 3)","(*.f64 (pow.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 u1) -1)) -4) (pow.f64 (cbrt.f64 (+.f64 (/.f64 1 u1) -1)) -2)) 1/4) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (pow.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2) 1/4) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) 3))","(*.f64 (pow.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2) 1/4) (pow.f64 (sqrt.f64 (sin.f64 (*.f64 314159265359/50000000000 u2))) 2))","(exp.f64 (fma.f64 -1/2 (log.f64 (+.f64 (/.f64 1 u1) -1)) (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))))","(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))","(*.f64 (pow.f64 (pow.f64 (-.f64 (/.f64 1 u1) 1) -2) 1/4) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(/.f64 (*.f64 (sqrt.f64 u1) (sin.f64 (*.f64 314159265359/50000000000 u2))) (sqrt.f64 (-.f64 1 u1)))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (exp.f64 (log.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)))))","(+.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sin.f64 (*.f64 314159265359/50000000000 u2))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1)))) (sin.f64 (*.f64 314159265359/50000000000 u2))))))","(*.f64 (pow.f64 (exp.f64 1/2) (log.f64 (/.f64 u1 (-.f64 1 u1)))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(pow.f64 (sqrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))) 2)","(exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2))))) 3))","(pow.f64 (E.f64) (log.f64 (*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))))","(+.f64 (*.f64 314159265359/50000000000 (*.f64 u2 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 -302029322777818351566783844332719832329455959975176141755859165754785028165295919/3937500000000000000000000000000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 7) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (+.f64 (*.f64 3060196847853821555298148281676017575122444629042460390799/37500000000000000000000000000000000000000000000000000000 (*.f64 (pow.f64 u2 5) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))) (*.f64 -31006276680305942139213528068663279/750000000000000000000000000000000 (*.f64 (pow.f64 u2 3) (sqrt.f64 (/.f64 u1 (-.f64 1 u1))))))))","(*.f64 (sqrt.f64 (*.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 5/6) (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/6))) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(sqrt.f64 (*.f64 (/.f64 u1 (-.f64 1 u1)) (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 2)))","(*.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 3/2)) 1/3)) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (pow.f64 (pow.f64 (/.f64 u1 (-.f64 1 u1)) 1/6) 3) (sin.f64 (*.f64 314159265359/50000000000 u2)))","(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))"]],"link":["."],"name":["Trowbridge-Reitz Sample, near normal, slope_y"],"oracle":[26.254420548868744],"outputs":[["(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (expm1.f64 (log1p.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))))"]],"time":115.69580078125,"times":[["cosTheta_i",9.22412109375],["u1",9.93408203125],["u2",9.361083984375],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))",9.7939453125],["(*.f64 (sqrt.f64 (/.f64 u1 (-.f64 1 u1))) (sin.f64 (*.f64 314159265359/50000000000 u2)))",9.27392578125],["(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))",9.015869140625],["(sqrt.f64 (/.f64 u1 (-.f64 1 u1)))",8.97509765625],["(/.f64 u1 (-.f64 1 u1))",9.0],["(/.f64 u1 (-.f64 1 u1))",9.839111328125],["(sin.f64 (*.f64 314159265359/50000000000 u2))",9.05908203125],["(*.f64 314159265359/50000000000 u2)",8.912109375]],"type":"regimes"},{"compiler":[[20,18]],"egraph":[[1,23,27,6.5416e-5],[0,18,27,3.8125e-5]],"inputs":[["(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (expm1.f64 (log1p.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))))"]],"method":["egg-herbie"],"outputs":[["(cbrt.f64 (*.f64 (pow.f64 (+.f64 (/.f64 1 u1) -1) -3/2) (expm1.f64 (log1p.f64 (pow.f64 (sin.f64 (*.f64 314159265359/50000000000 u2)) 3)))))"]],"stop":[["fuel",1],["saturated",1]],"time":9.609130859375,"type":"simplify"},{"time":0.005859375,"type":"soundness"},{"compiler":[[20,18]],"remove-preprocessing":[[]],"time":14.527099609375,"type":"end"}]