[{"compiler":[[14,9]],"method":["search"],"sampling":[[12,0.30390222172718495,0.4590240620309487,0.23707371624186635],[11,0.28292662696912885,0.4985362289007753,0.21853714413009584],[10,0.2653656639158726,0.5404874184168875,0.1941469176672399],[9,0.22634130157530308,0.6126824887469411,0.16097620967775583],[8,0.19512181170284748,0.6868287771940231,0.11804941110312939],[7,0.046829234808683395,0.8897554613649845,0.06341530382633209],[6,0.031219489872455597,0.9365846961736679,0.032195813953876495],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":99.20703125,"type":"analyze"},{"outcomes":[["body",512,"invalid",31.806640625,246],["body",256,"invalid",47.76171875,901],["body",1024,"invalid",39.04638671875,175],["body",512,"valid",135.32666015625,1035],["body",1024,"valid",435.8447265625,1849],["body",2048,"valid",80.0126953125,176],["body",256,"valid",304.21630859375,5196]],"time":1084.14794921875,"type":"sample"},{"compiler":[[13,8]],"egraph":[[0,2,2,2.125e-6],[7,6302,26,0.024749667],[6,1637,26,0.012893834],[5,602,26,0.004183],[4,242,26,0.001645208],[3,96,26,0.0007025],[2,45,26,0.000318791],[1,29,26,0.00016208299999999999],[0,15,34,7.1125e-5]],"inputs":[["0","1"],["(/.f64 (exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y))))) x)","(/.f64 (exp.f64 (*.f64 y (log.f64 (/.f64 y (+.f64 y x))))) y)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y))))) x)","(/.f64 (pow.f64 (exp.f64 x) (log.f64 (/.f64 x (+.f64 x y)))) x)","(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","(/.f64 (exp.f64 (*.f64 y (log.f64 (/.f64 y (+.f64 y x))))) y)","(/.f64 (pow.f64 (exp.f64 y) (log.f64 (/.f64 y (+.f64 x y)))) y)","(/.f64 (pow.f64 (/.f64 y (+.f64 x y)) y) y)"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":48.3662109375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[8,6606,13,0.02888225],[7,3321,13,0.016555834000000002],[6,878,13,0.0070035],[5,327,13,0.002368375],[4,133,13,0.0009818750000000001],[3,54,13,0.000433125],[2,25,13,0.0002075],[1,16,13,0.000107625],[0,9,17,4.9125e-5]],"inputs":[["(/.f64 (exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y))))) x)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y))))) x)","(/.f64 (pow.f64 (exp.f64 x) (log.f64 (/.f64 x (+.f64 x y)))) x)","(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)"]],"stop":[["node limit",1]],"time":39.998779296875,"type":"simplify"},{"compiler":[[22,10]],"time":0.35302734375,"type":"eval"},{"alts":[["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","next",13.973968462203125]],"compiler":[[11,6],[11,6]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[13.973968462203125],"time":0.799072265625,"type":"prune"},{"compiler":[[28,6]],"locations":[["(/.f64 x (+.f64 x y))",0.00390625,true],["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)",0.01171875,true],["(pow.f64 (/.f64 x (+.f64 x y)) x)",8.102234504390337,true]],"time":5.35400390625,"type":"localize"},{"count":[[3,72]],"series":[["(/.f64 x (+.f64 x y))","y","-inf",0.197998046875],["(/.f64 x (+.f64 x y))","y","inf",0.222900390625],["(/.f64 x (+.f64 x y))","y","0",0.166015625],["(/.f64 x (+.f64 x y))","x","-inf",0.174072265625],["(/.f64 x (+.f64 x y))","x","inf",0.222900390625],["(/.f64 x (+.f64 x y))","x","0",0.68505859375],["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","y","-inf",0.68798828125],["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","y","inf",0.636962890625],["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","y","0",0.35791015625],["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","x","-inf",1.153076171875],["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","x","inf",1.625],["(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","x","0",0.3388671875],["(pow.f64 (/.f64 x (+.f64 x y)) x)","y","-inf",0.951904296875],["(pow.f64 (/.f64 x (+.f64 x y)) x)","y","inf",1.180908203125],["(pow.f64 (/.f64 x (+.f64 x y)) x)","y","0",0.763916015625],["(pow.f64 (/.f64 x (+.f64 x y)) x)","x","-inf",1.025146484375],["(pow.f64 (/.f64 x (+.f64 x y)) x)","x","inf",1.433837890625],["(pow.f64 (/.f64 x (+.f64 x y)) x)","x","0",0.976806640625]],"time":13.217041015625,"type":"series"},{"count":[[3,121]],"egraph":[[2,2529,30,0.023758208000000003],[1,165,30,0.003197041],[0,7,30,0.000174166]],"inputs":[["(pow.f64 (/.f64 x (+.f64 x y)) x)","(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","(/.f64 x (+.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x) (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x x) (pow.f64 (+.f64 x y) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (*.f64 2 x)) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (/.f64 x (+.f64 x y)) (exp.f64 (log1p.f64 x))) (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 x y) x) -3) x))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (+.f64 x y))) (*.f64 2 (*.f64 x 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 x y) x) -3) x)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (/.f64 x (+.f64 x y)))) (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 x (+.f64 x y)) (pow.f64 (cbrt.f64 x) 2))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 x))) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 x (+.f64 x y))) 1) (*.f64 2 (*.f64 x 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 x (+.f64 x y))) (*.f64 x 1/2)) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) (cbrt.f64 (pow.f64 (/.f64 x (pow.f64 (/.f64 x (+.f64 x y)) x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (pow.f64 (/.f64 x (+.f64 x y)) x)) -2)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) (sqrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (/.f64 1 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x) (*.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) -2) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/2) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) 1) (/.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x) 1) (/.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (sqrt.f64 x)) (/.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (pow.f64 (/.f64 x (+.f64 x y)) x)) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (pow.f64 (/.f64 x (+.f64 x y)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 x y) x) -3) x) (pow.f64 x 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 x (pow.f64 (/.f64 x (+.f64 x y)) x)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (pow.f64 (/.f64 x (+.f64 x y)) x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (pow.f64 (/.f64 (+.f64 x y) x) -3) x) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (pow.f64 (/.f64 x (+.f64 x y)) x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 x (+.f64 x y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (+.f64 x y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (+.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2) (cbrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (sqrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) -2) (/.f64 x (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (cbrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) -1/2) (/.f64 x (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (+.f64 x y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (-.f64 y x) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x y) x) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 x y) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (+.f64 x y) x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) x) -3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (+.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 x (+.f64 x y)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 x (+.f64 x y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 x (+.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (+.f64 x y) x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 x (+.f64 x y))) 1) 1))))))"]],"rules":[["egg-rr",46],["egg-rr",44],["egg-rr",31]],"stop":[["node limit",1]],"time":49.263916015625,"type":"rewrite"},{"count":[[193,214]],"egraph":[[2,3934,2296,0.020461833999999998],[1,953,2761,0.006972084],[0,286,3273,0.001434334]],"inputs":[["1","(+.f64 1 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))","(+.f64 1 (+.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x) (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (pow.f64 x 3)) (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) (pow.f64 x 2)))))","(exp.f64 (*.f64 -1 y))","(+.f64 (exp.f64 (*.f64 -1 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y))) (pow.f64 x 3)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x)))))","(exp.f64 (*.f64 -1 y))","(+.f64 (exp.f64 (*.f64 -1 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 x 3))) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x)))))","1","(+.f64 1 (*.f64 -1 y))","(+.f64 (*.f64 (pow.f64 y 2) (+.f64 1/2 (*.f64 1/2 (/.f64 1 x)))) (+.f64 1 (*.f64 -1 y)))","(+.f64 (*.f64 (pow.f64 y 2) (+.f64 1/2 (*.f64 1/2 (/.f64 1 x)))) (+.f64 1 (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 x 2))))))) (*.f64 -1 y))))","(exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)) y)) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)) y)) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)) y)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (pow.f64 y 3)) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))))","(exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))","(+.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)) y)))","(+.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (pow.f64 y 2)) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)) y))))","(+.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x))))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)) y)))))","(/.f64 1 x)","(+.f64 (log.f64 (/.f64 1 y)) (+.f64 (/.f64 1 x) (log.f64 x)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) x) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (/.f64 1 x) (log.f64 x))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) x) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (pow.f64 x 2)) (+.f64 (/.f64 1 x) (log.f64 x)))))","(/.f64 (exp.f64 (*.f64 -1 y)) x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (/.f64 (exp.f64 (*.f64 -1 y)) x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 3))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y))) (pow.f64 x 4)) (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (pow.f64 x 3)))))","(/.f64 (exp.f64 (*.f64 -1 y)) x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (/.f64 (exp.f64 (*.f64 -1 y)) x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 3))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 x 4))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 3)))))","(/.f64 1 x)","(+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)) (+.f64 (/.f64 1 x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 2))) (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))))) x)) (*.f64 -1 (/.f64 y x)))))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 2) x)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 2) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 3) x)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y)))))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)))","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)) (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (pow.f64 y 3) x))) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)) (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 (pow.f64 y 2) x)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))","(+.f64 1 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))","(fma.f64 x (-.f64 (log.f64 x) (log.f64 y)) 1)","(+.f64 1 (+.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x) (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) (pow.f64 x 2))))","(+.f64 1 (fma.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x (*.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (neg.f64 (/.f64 1 y))) (*.f64 x x))))","(+.f64 1 (fma.f64 x (-.f64 (log.f64 x) (log.f64 y)) (*.f64 x (*.f64 x (fma.f64 1/2 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) (/.f64 -1 y))))))","(+.f64 1 (*.f64 x (+.f64 (-.f64 (log.f64 x) (log.f64 y)) (*.f64 x (fma.f64 1/2 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) (/.f64 -1 y))))))","(+.f64 1 (+.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (pow.f64 x 3)) (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) (pow.f64 x 2)))))","(+.f64 1 (fma.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) x (fma.f64 (+.f64 (/.f64 1/2 (*.f64 y y)) (fma.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 3) (neg.f64 (/.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) y)))) (pow.f64 x 3) (*.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (neg.f64 (/.f64 1 y))) (*.f64 x x)))))","(+.f64 1 (fma.f64 x (-.f64 (log.f64 x) (log.f64 y)) (fma.f64 (fma.f64 1/2 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) (/.f64 -1 y)) (*.f64 x x) (*.f64 (+.f64 (/.f64 1/2 (*.f64 y y)) (-.f64 (*.f64 1/6 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 3)) (/.f64 (-.f64 (log.f64 x) (log.f64 y)) y))) (pow.f64 x 3)))))","(+.f64 (fma.f64 x (-.f64 (log.f64 x) (log.f64 y)) 1) (*.f64 (*.f64 x x) (+.f64 (fma.f64 1/2 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) (/.f64 -1 y)) (*.f64 (+.f64 (-.f64 (/.f64 1/2 (*.f64 y y)) (/.f64 (-.f64 (log.f64 x) (log.f64 y)) y)) (*.f64 1/6 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 3))) x))))","(exp.f64 (*.f64 -1 y))","(exp.f64 (neg.f64 y))","(+.f64 (exp.f64 (*.f64 -1 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x)))","(+.f64 (exp.f64 (neg.f64 y)) (*.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 x (*.f64 (*.f64 y y) 1)))))","(fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 x (*.f64 y y))) (exp.f64 (neg.f64 y)))","(fma.f64 1/2 (/.f64 (*.f64 y y) (*.f64 x (exp.f64 y))) (exp.f64 (neg.f64 y)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x))))","(+.f64 (+.f64 (exp.f64 (neg.f64 y)) (*.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 x (*.f64 (*.f64 y y) 1))))) (/.f64 (exp.f64 (neg.f64 y)) (/.f64 (*.f64 x x) (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2))))))","(+.f64 (fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 x (*.f64 y y))) (exp.f64 (neg.f64 y))) (*.f64 (/.f64 (exp.f64 (neg.f64 y)) x) (/.f64 (fma.f64 1/6 (*.f64 (pow.f64 y 3) -2) (*.f64 1/8 (pow.f64 y 4))) x)))","(+.f64 (fma.f64 1/2 (/.f64 (*.f64 y y) (*.f64 x (exp.f64 y))) (exp.f64 (neg.f64 y))) (/.f64 (/.f64 (fma.f64 1/8 (pow.f64 y 4) (*.f64 (pow.f64 y 3) -1/3)) (*.f64 x (exp.f64 y))) x))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y))) (pow.f64 x 3)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x)))))","(+.f64 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 (*.f64 x x) (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (+.f64 (exp.f64 (neg.f64 y)) (+.f64 (*.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 x (*.f64 (*.f64 y y) 1)))) (/.f64 (fma.f64 1/12 (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4))) (fma.f64 1/48 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (*.f64 1/24 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30)))))) (/.f64 (pow.f64 x 3) (exp.f64 (neg.f64 y)))))))","(+.f64 (exp.f64 (neg.f64 y)) (+.f64 (fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 x (*.f64 y y))) (*.f64 (/.f64 (fma.f64 1/12 (*.f64 (*.f64 y y) (*.f64 (pow.f64 y 3) -2)) (fma.f64 1/48 (pow.f64 (*.f64 y y) 3) (*.f64 1/24 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) 18))))) (pow.f64 x 3)) (exp.f64 (neg.f64 y)))) (*.f64 (/.f64 (exp.f64 (neg.f64 y)) x) (/.f64 (fma.f64 1/6 (*.f64 (pow.f64 y 3) -2) (*.f64 1/8 (pow.f64 y 4))) x))))","(+.f64 (*.f64 (+.f64 (/.f64 (fma.f64 1/12 (*.f64 (*.f64 y y) (*.f64 (pow.f64 y 3) -2)) (fma.f64 1/48 (pow.f64 (*.f64 y y) 3) (*.f64 1/24 (*.f64 (pow.f64 y 4) 6)))) (pow.f64 x 3)) 1) (exp.f64 (neg.f64 y))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y y) (*.f64 x (exp.f64 y)))) (/.f64 (/.f64 (fma.f64 1/8 (pow.f64 y 4) (*.f64 (pow.f64 y 3) -1/3)) (*.f64 x (exp.f64 y))) x)))","(exp.f64 (*.f64 -1 y))","(exp.f64 (neg.f64 y))","(+.f64 (exp.f64 (*.f64 -1 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x)))","(+.f64 (exp.f64 (neg.f64 y)) (*.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 x (*.f64 (*.f64 y y) 1)))))","(fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 x (*.f64 y y))) (exp.f64 (neg.f64 y)))","(fma.f64 1/2 (/.f64 (*.f64 y y) (*.f64 x (exp.f64 y))) (exp.f64 (neg.f64 y)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x))))","(+.f64 (+.f64 (exp.f64 (neg.f64 y)) (*.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 x (*.f64 (*.f64 y y) 1))))) (/.f64 (exp.f64 (neg.f64 y)) (/.f64 (*.f64 x x) (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2))))))","(+.f64 (fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 x (*.f64 y y))) (exp.f64 (neg.f64 y))) (*.f64 (/.f64 (exp.f64 (neg.f64 y)) x) (/.f64 (fma.f64 1/6 (*.f64 (pow.f64 y 3) -2) (*.f64 1/8 (pow.f64 y 4))) x)))","(+.f64 (fma.f64 1/2 (/.f64 (*.f64 y y) (*.f64 x (exp.f64 y))) (exp.f64 (neg.f64 y))) (/.f64 (/.f64 (fma.f64 1/8 (pow.f64 y 4) (*.f64 (pow.f64 y 3) -1/3)) (*.f64 x (exp.f64 y))) x))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 x 3))) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x)))))","(+.f64 (+.f64 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 (*.f64 x x) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 -1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)))))) (exp.f64 (neg.f64 y))) (fma.f64 -1 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 (pow.f64 x 3) (fma.f64 -1/24 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30))) (fma.f64 -1/48 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (*.f64 1/12 (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)))))))) (*.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 x (*.f64 (*.f64 y y) 1))))))","(+.f64 (exp.f64 (neg.f64 y)) (+.f64 (-.f64 (*.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 x (*.f64 y y)))) (*.f64 (/.f64 (exp.f64 (neg.f64 y)) (pow.f64 x 3)) (fma.f64 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) 18)) -1/24 (fma.f64 1/12 (*.f64 (*.f64 y y) (*.f64 2 (pow.f64 y 3))) (*.f64 -1/48 (pow.f64 (*.f64 y y) 3)))))) (*.f64 (/.f64 (exp.f64 (neg.f64 y)) (*.f64 x x)) (fma.f64 1/8 (pow.f64 y 4) (*.f64 -1/6 (*.f64 2 (pow.f64 y 3)))))))","(-.f64 (+.f64 (fma.f64 1/2 (/.f64 (*.f64 y y) (*.f64 x (exp.f64 y))) (exp.f64 (neg.f64 y))) (/.f64 (/.f64 (fma.f64 1/8 (pow.f64 y 4) (*.f64 (pow.f64 y 3) -1/3)) (*.f64 x (exp.f64 y))) x)) (*.f64 (/.f64 (exp.f64 (neg.f64 y)) (pow.f64 x 3)) (fma.f64 (*.f64 (pow.f64 y 4) 6) -1/24 (*.f64 (*.f64 y y) (+.f64 (*.f64 -1/48 (pow.f64 y 4)) (*.f64 1/12 (*.f64 2 (pow.f64 y 3))))))))","1","(+.f64 1 (*.f64 -1 y))","(+.f64 1 (neg.f64 y))","(-.f64 1 y)","(+.f64 (*.f64 (pow.f64 y 2) (+.f64 1/2 (*.f64 1/2 (/.f64 1 x)))) (+.f64 1 (*.f64 -1 y)))","(fma.f64 (*.f64 y y) (+.f64 1/2 (/.f64 1/2 x)) (+.f64 1 (neg.f64 y)))","(-.f64 (fma.f64 (*.f64 y y) (+.f64 1/2 (/.f64 1/2 x)) 1) y)","(+.f64 (*.f64 (pow.f64 y 2) (+.f64 1/2 (*.f64 1/2 (/.f64 1 x)))) (+.f64 1 (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 x 2))))))) (*.f64 -1 y))))","(fma.f64 (*.f64 y y) (+.f64 1/2 (/.f64 1/2 x)) (+.f64 1 (fma.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (/.f64 1/2 x) (+.f64 1/6 (/.f64 1/3 (*.f64 x x))))) (neg.f64 y))))","(fma.f64 (*.f64 y y) (+.f64 1/2 (/.f64 1/2 x)) (fma.f64 -1 (fma.f64 (pow.f64 y 3) (+.f64 (/.f64 1/3 (*.f64 x x)) (+.f64 1/6 (/.f64 1/2 x))) y) 1))","(-.f64 (fma.f64 (*.f64 y y) (+.f64 1/2 (/.f64 1/2 x)) 1) (fma.f64 (pow.f64 y 3) (+.f64 1/6 (+.f64 (/.f64 1/3 (*.f64 x x)) (/.f64 1/2 x))) y))","(exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))","(pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x)","(pow.f64 (exp.f64 x) (-.f64 (log.f64 x) (log.f64 y)))","(pow.f64 (*.f64 (/.f64 1 y) x) x)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)) y)) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))","(fma.f64 -1 (/.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) (/.f64 y (*.f64 x x))) (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x))","(-.f64 (pow.f64 (exp.f64 x) (-.f64 (log.f64 x) (log.f64 y))) (/.f64 (*.f64 x x) (/.f64 y (pow.f64 (exp.f64 x) (-.f64 (log.f64 x) (log.f64 y))))))","(-.f64 (pow.f64 (*.f64 (/.f64 1 y) x) x) (*.f64 (/.f64 x (/.f64 y x)) (pow.f64 (*.f64 (/.f64 1 y) x) x)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)) y)) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))))","(+.f64 (fma.f64 -1 (/.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) (/.f64 y (*.f64 x x))) (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x)) (/.f64 (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))) (/.f64 (*.f64 y y) (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x))))","(+.f64 (pow.f64 (exp.f64 x) (-.f64 (log.f64 x) (log.f64 y))) (-.f64 (*.f64 (*.f64 (/.f64 1/2 y) (/.f64 (+.f64 (pow.f64 x 3) (pow.f64 x 4)) y)) (pow.f64 (exp.f64 x) (-.f64 (log.f64 x) (log.f64 y)))) (/.f64 (*.f64 x x) (/.f64 y (pow.f64 (exp.f64 x) (-.f64 (log.f64 x) (log.f64 y)))))))","(+.f64 (pow.f64 (*.f64 (/.f64 1 y) x) x) (*.f64 (/.f64 (pow.f64 (*.f64 (/.f64 1 y) x) x) y) (-.f64 (/.f64 (+.f64 (pow.f64 x 3) (pow.f64 x 4)) (/.f64 y 1/2)) (*.f64 x x))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)) y)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (pow.f64 y 3)) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))))","(+.f64 (/.f64 (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))) (/.f64 (*.f64 y y) (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x))) (fma.f64 -1 (/.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) (/.f64 y (*.f64 x x))) (+.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) (/.f64 (fma.f64 -1/6 (pow.f64 x 6) (fma.f64 -1/2 (*.f64 (pow.f64 x 3) (*.f64 (*.f64 x x) 1)) (*.f64 1/6 (*.f64 x (fma.f64 -2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0)))))) (/.f64 (pow.f64 y 3) (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x))))))","(+.f64 (*.f64 (*.f64 (/.f64 1/2 y) (/.f64 (+.f64 (pow.f64 x 3) (pow.f64 x 4)) y)) (pow.f64 (exp.f64 x) (-.f64 (log.f64 x) (log.f64 y)))) (+.f64 (-.f64 (pow.f64 (exp.f64 x) (-.f64 (log.f64 x) (log.f64 y))) (/.f64 (*.f64 x x) (/.f64 y (pow.f64 (exp.f64 x) (-.f64 (log.f64 x) (log.f64 y)))))) (*.f64 (/.f64 (fma.f64 -1/6 (pow.f64 x 6) (fma.f64 1/6 (*.f64 x (*.f64 (pow.f64 x 3) -2)) (*.f64 -1/2 (*.f64 x (pow.f64 x 4))))) (pow.f64 y 3)) (pow.f64 (exp.f64 x) (-.f64 (log.f64 x) (log.f64 y))))))","(+.f64 (*.f64 (+.f64 (/.f64 (fma.f64 -1/6 (pow.f64 x 6) (fma.f64 1/6 (*.f64 x (*.f64 (pow.f64 x 3) -2)) (*.f64 -1/2 (pow.f64 x 5)))) (pow.f64 y 3)) 1) (pow.f64 (*.f64 (/.f64 1 y) x) x)) (*.f64 (/.f64 (pow.f64 (*.f64 (/.f64 1 y) x) x) y) (-.f64 (/.f64 (+.f64 (pow.f64 x 3) (pow.f64 x 4)) (/.f64 y 1/2)) (*.f64 x x))))","(exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))","(pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x)","(pow.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)) x)","(+.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)) y)))","(+.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (neg.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (/.f64 y (*.f64 x x)))))","(-.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (*.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) y) (*.f64 x x)))","(-.f64 (pow.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)) x) (*.f64 (/.f64 x (/.f64 y x)) (pow.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)) x)))","(+.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (pow.f64 y 2)) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)) y))))","(+.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (+.f64 (neg.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (/.f64 y (*.f64 x x)))) (/.f64 (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))) (/.f64 (*.f64 y y) (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x)))))","(+.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (-.f64 (*.f64 (*.f64 (/.f64 1/2 y) (/.f64 (+.f64 (pow.f64 x 3) (pow.f64 x 4)) y)) (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x)) (*.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) y) (*.f64 x x))))","(+.f64 (pow.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)) x) (*.f64 (/.f64 (pow.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)) x) y) (-.f64 (/.f64 (+.f64 (pow.f64 x 3) (pow.f64 x 4)) (/.f64 y 1/2)) (*.f64 x x))))","(+.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x))))) (pow.f64 y 3))) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)) y)))))","(+.f64 (+.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (/.f64 (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))) (/.f64 (*.f64 y y) (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x)))) (*.f64 -1 (+.f64 (/.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (fma.f64 1/2 (*.f64 (pow.f64 x 3) (*.f64 (*.f64 x x) 1)) (*.f64 1/6 (+.f64 (pow.f64 x 6) (*.f64 x (fma.f64 2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0))))))) (pow.f64 y 3)) (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (/.f64 y (*.f64 x x))))))","(+.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (-.f64 (-.f64 (*.f64 (*.f64 (/.f64 1/2 y) (/.f64 (+.f64 (pow.f64 x 3) (pow.f64 x 4)) y)) (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x)) (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (/.f64 (pow.f64 y 3) (fma.f64 1/2 (*.f64 x (pow.f64 x 4)) (*.f64 1/6 (+.f64 (pow.f64 x 6) (*.f64 x (*.f64 2 (pow.f64 x 3))))))))) (*.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) y) (*.f64 x x))))","(-.f64 (*.f64 (+.f64 (*.f64 (/.f64 1/2 (*.f64 y y)) (+.f64 (pow.f64 x 3) (pow.f64 x 4))) 1) (pow.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)) x)) (*.f64 (/.f64 (pow.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)) x) y) (+.f64 (*.f64 x x) (/.f64 (fma.f64 1/2 (pow.f64 x 5) (*.f64 1/6 (+.f64 (pow.f64 x 6) (*.f64 x (*.f64 2 (pow.f64 x 3)))))) (*.f64 y y)))))","(/.f64 1 x)","(+.f64 (log.f64 (/.f64 1 y)) (+.f64 (/.f64 1 x) (log.f64 x)))","(+.f64 (neg.f64 (log.f64 y)) (+.f64 (log.f64 x) (/.f64 1 x)))","(+.f64 (-.f64 (log.f64 x) (log.f64 y)) (/.f64 1 x))","(+.f64 (log.f64 x) (-.f64 (/.f64 1 x) (log.f64 y)))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) x) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (/.f64 1 x) (log.f64 x))))","(fma.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (neg.f64 (/.f64 1 y))) x (+.f64 (neg.f64 (log.f64 y)) (+.f64 (log.f64 x) (/.f64 1 x))))","(fma.f64 x (fma.f64 1/2 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) (/.f64 -1 y)) (+.f64 (-.f64 (log.f64 x) (log.f64 y)) (/.f64 1 x)))","(fma.f64 x (fma.f64 1/2 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) (/.f64 -1 y)) (+.f64 (log.f64 x) (-.f64 (/.f64 1 x) (log.f64 y))))","(+.f64 (*.f64 (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)) x) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (pow.f64 x 2)) (+.f64 (/.f64 1 x) (log.f64 x)))))","(fma.f64 (fma.f64 1/2 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) (neg.f64 (/.f64 1 y))) x (+.f64 (neg.f64 (log.f64 y)) (fma.f64 (+.f64 (/.f64 1/2 (*.f64 y y)) (fma.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 3) (neg.f64 (/.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) y)))) (*.f64 x x) (+.f64 (log.f64 x) (/.f64 1 x)))))","(fma.f64 x (fma.f64 1/2 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) (/.f64 -1 y)) (-.f64 (fma.f64 (*.f64 x x) (+.f64 (/.f64 1/2 (*.f64 y y)) (-.f64 (*.f64 1/6 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 3)) (/.f64 (-.f64 (log.f64 x) (log.f64 y)) y))) (+.f64 (log.f64 x) (/.f64 1 x))) (log.f64 y)))","(fma.f64 x (fma.f64 1/2 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) (/.f64 -1 y)) (+.f64 (fma.f64 (*.f64 x x) (+.f64 (-.f64 (/.f64 1/2 (*.f64 y y)) (/.f64 (-.f64 (log.f64 x) (log.f64 y)) y)) (*.f64 1/6 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 3))) (/.f64 1 x)) (-.f64 (log.f64 x) (log.f64 y))))","(/.f64 (exp.f64 (*.f64 -1 y)) x)","(/.f64 (exp.f64 (neg.f64 y)) x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (/.f64 (exp.f64 (*.f64 -1 y)) x))","(fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 (*.f64 x x) (*.f64 (*.f64 y y) 1))) (/.f64 (exp.f64 (neg.f64 y)) x))","(fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (*.f64 (/.f64 x y) (/.f64 x y))) (/.f64 (exp.f64 (neg.f64 y)) x))","(fma.f64 1/2 (/.f64 (*.f64 y y) (*.f64 x (*.f64 x (exp.f64 y)))) (/.f64 (exp.f64 (neg.f64 y)) x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 3))))","(+.f64 (fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 (*.f64 x x) (*.f64 (*.f64 y y) 1))) (/.f64 (exp.f64 (neg.f64 y)) x)) (/.f64 (exp.f64 (neg.f64 y)) (/.f64 (pow.f64 x 3) (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2))))))","(+.f64 (fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (*.f64 (/.f64 x y) (/.f64 x y))) (/.f64 (exp.f64 (neg.f64 y)) x)) (*.f64 (/.f64 (exp.f64 (neg.f64 y)) (pow.f64 x 3)) (fma.f64 1/6 (*.f64 (pow.f64 y 3) -2) (*.f64 1/8 (pow.f64 y 4)))))","(fma.f64 1/2 (/.f64 (*.f64 y y) (*.f64 x (*.f64 x (exp.f64 y)))) (*.f64 (+.f64 (/.f64 (fma.f64 1/8 (pow.f64 y 4) (*.f64 (pow.f64 y 3) -1/3)) (*.f64 x x)) 1) (/.f64 (exp.f64 (neg.f64 y)) x)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y))) (pow.f64 x 4)) (/.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -1 y))) (pow.f64 x 3)))))","(+.f64 (fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 (*.f64 x x) (*.f64 (*.f64 y y) 1))) (/.f64 (exp.f64 (neg.f64 y)) x)) (+.f64 (/.f64 (fma.f64 1/12 (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4))) (fma.f64 1/48 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (*.f64 1/24 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30)))))) (/.f64 (pow.f64 x 4) (exp.f64 (neg.f64 y)))) (/.f64 (exp.f64 (neg.f64 y)) (/.f64 (pow.f64 x 3) (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2)))))))","(+.f64 (fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (*.f64 (/.f64 x y) (/.f64 x y))) (/.f64 (exp.f64 (neg.f64 y)) x)) (+.f64 (*.f64 (/.f64 (fma.f64 1/12 (*.f64 (*.f64 y y) (*.f64 (pow.f64 y 3) -2)) (fma.f64 1/48 (pow.f64 (*.f64 y y) 3) (*.f64 1/24 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) 18))))) (pow.f64 x 4)) (exp.f64 (neg.f64 y))) (*.f64 (/.f64 (exp.f64 (neg.f64 y)) (pow.f64 x 3)) (fma.f64 1/6 (*.f64 (pow.f64 y 3) -2) (*.f64 1/8 (pow.f64 y 4))))))","(+.f64 (fma.f64 1/2 (/.f64 (*.f64 y y) (*.f64 x (*.f64 x (exp.f64 y)))) (/.f64 (exp.f64 (neg.f64 y)) x)) (*.f64 (exp.f64 (neg.f64 y)) (+.f64 (/.f64 (fma.f64 1/12 (*.f64 (*.f64 y y) (*.f64 (pow.f64 y 3) -2)) (fma.f64 1/48 (pow.f64 (*.f64 y y) 3) (*.f64 1/24 (*.f64 (pow.f64 y 4) 6)))) (pow.f64 x 4)) (/.f64 (fma.f64 1/8 (pow.f64 y 4) (*.f64 (pow.f64 y 3) -1/3)) (pow.f64 x 3)))))","(/.f64 (exp.f64 (*.f64 -1 y)) x)","(/.f64 (exp.f64 (neg.f64 y)) x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (/.f64 (exp.f64 (*.f64 -1 y)) x))","(fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 (*.f64 x x) (*.f64 (*.f64 y y) 1))) (/.f64 (exp.f64 (neg.f64 y)) x))","(fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (*.f64 (/.f64 x y) (/.f64 x y))) (/.f64 (exp.f64 (neg.f64 y)) x))","(fma.f64 1/2 (/.f64 (*.f64 y y) (*.f64 x (*.f64 x (exp.f64 y)))) (/.f64 (exp.f64 (neg.f64 y)) x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 3))))","(+.f64 (fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 (*.f64 x x) (*.f64 (*.f64 y y) 1))) (/.f64 (exp.f64 (neg.f64 y)) x)) (/.f64 (exp.f64 (neg.f64 y)) (/.f64 (pow.f64 x 3) (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2))))))","(+.f64 (fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (*.f64 (/.f64 x y) (/.f64 x y))) (/.f64 (exp.f64 (neg.f64 y)) x)) (*.f64 (/.f64 (exp.f64 (neg.f64 y)) (pow.f64 x 3)) (fma.f64 1/6 (*.f64 (pow.f64 y 3) -2) (*.f64 1/8 (pow.f64 y 4)))))","(fma.f64 1/2 (/.f64 (*.f64 y y) (*.f64 x (*.f64 x (exp.f64 y)))) (*.f64 (+.f64 (/.f64 (fma.f64 1/8 (pow.f64 y 4) (*.f64 (pow.f64 y 3) -1/3)) (*.f64 x x)) 1) (/.f64 (exp.f64 (neg.f64 y)) x)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) (pow.f64 x 2))) (+.f64 (/.f64 (exp.f64 (*.f64 -1 y)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 x 4))) (/.f64 (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))))) (pow.f64 x 3)))))","(+.f64 (fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 (*.f64 x x) (*.f64 (*.f64 y y) 1))) (/.f64 (exp.f64 (neg.f64 y)) x)) (fma.f64 -1 (/.f64 (exp.f64 (neg.f64 y)) (/.f64 (pow.f64 x 4) (fma.f64 -1/24 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30))) (fma.f64 -1/48 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (*.f64 1/12 (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)))))))) (/.f64 (exp.f64 (neg.f64 y)) (/.f64 (pow.f64 x 3) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 -1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8))))))))","(+.f64 (fma.f64 1/2 (/.f64 (exp.f64 (neg.f64 y)) (*.f64 (/.f64 x y) (/.f64 x y))) (/.f64 (exp.f64 (neg.f64 y)) x)) (-.f64 (*.f64 (/.f64 (exp.f64 (neg.f64 y)) (pow.f64 x 3)) (fma.f64 1/8 (pow.f64 y 4) (*.f64 -1/6 (*.f64 2 (pow.f64 y 3))))) (*.f64 (/.f64 (exp.f64 (neg.f64 y)) (pow.f64 x 4)) (fma.f64 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) 18)) -1/24 (fma.f64 1/12 (*.f64 (*.f64 y y) (*.f64 2 (pow.f64 y 3))) (*.f64 -1/48 (pow.f64 (*.f64 y y) 3)))))))","(+.f64 (fma.f64 1/2 (/.f64 (*.f64 y y) (*.f64 x (*.f64 x (exp.f64 y)))) (/.f64 (exp.f64 (neg.f64 y)) x)) (*.f64 (/.f64 (exp.f64 (neg.f64 y)) (*.f64 x x)) (-.f64 (/.f64 (fma.f64 1/8 (pow.f64 y 4) (*.f64 (pow.f64 y 3) -1/3)) x) (/.f64 (fma.f64 (*.f64 (pow.f64 y 4) 6) -1/24 (*.f64 (*.f64 y y) (+.f64 (*.f64 -1/48 (pow.f64 y 4)) (*.f64 1/12 (*.f64 2 (pow.f64 y 3)))))) (*.f64 x x)))))","(/.f64 1 x)","(+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 1 x) (/.f64 (neg.f64 y) x))","(-.f64 (/.f64 1 x) (/.f64 y x))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x))))","(fma.f64 (+.f64 (/.f64 1/2 x) (/.f64 1/2 (*.f64 x x))) (*.f64 y y) (+.f64 (/.f64 1 x) (/.f64 (neg.f64 y) x)))","(-.f64 (fma.f64 (*.f64 y y) (+.f64 (/.f64 1/2 x) (/.f64 1/2 (*.f64 x x))) (/.f64 1 x)) (/.f64 y x))","(fma.f64 (*.f64 y y) (+.f64 (/.f64 1/2 x) (/.f64 1/2 (*.f64 x x))) (-.f64 (/.f64 1 x) (/.f64 y x)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (*.f64 1/2 (/.f64 1 x))) (pow.f64 y 2)) (+.f64 (/.f64 1 x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 2))) (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))))) x)) (*.f64 -1 (/.f64 y x)))))","(fma.f64 (+.f64 (/.f64 1/2 x) (/.f64 1/2 (*.f64 x x))) (*.f64 y y) (+.f64 (/.f64 1 x) (*.f64 -1 (+.f64 (/.f64 (pow.f64 y 3) (/.f64 x (+.f64 (/.f64 1/2 x) (+.f64 1/6 (/.f64 1/3 (*.f64 x x)))))) (/.f64 y x)))))","(fma.f64 (*.f64 y y) (+.f64 (/.f64 1/2 x) (/.f64 1/2 (*.f64 x x))) (-.f64 (-.f64 (/.f64 1 x) (*.f64 (/.f64 (pow.f64 y 3) x) (+.f64 (/.f64 1/3 (*.f64 x x)) (+.f64 1/6 (/.f64 1/2 x))))) (/.f64 y x)))","(-.f64 (fma.f64 (*.f64 y y) (+.f64 (/.f64 1/2 x) (/.f64 1/2 (*.f64 x x))) (-.f64 (/.f64 1 x) (/.f64 y x))) (*.f64 (/.f64 (pow.f64 y 3) x) (+.f64 1/6 (+.f64 (/.f64 1/3 (*.f64 x x)) (/.f64 1/2 x)))))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x)","(/.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) x)","(/.f64 (pow.f64 (exp.f64 x) (-.f64 (log.f64 x) (log.f64 y))) x)","(/.f64 (pow.f64 (*.f64 (/.f64 1 y) x) x) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y)))","(+.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) x) (neg.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) (/.f64 y x))))","(-.f64 (/.f64 (pow.f64 (exp.f64 x) (-.f64 (log.f64 x) (log.f64 y))) x) (/.f64 x (/.f64 y (pow.f64 (exp.f64 x) (-.f64 (log.f64 x) (log.f64 y))))))","(-.f64 (/.f64 (pow.f64 (*.f64 (/.f64 1 y) x) x) x) (*.f64 (/.f64 x y) (pow.f64 (*.f64 (/.f64 1 y) x) x)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 2) x)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y))))","(+.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) x) (neg.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) (/.f64 y x)))) (*.f64 (/.f64 (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))) (*.f64 y y)) (/.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) x)))","(-.f64 (*.f64 (+.f64 (*.f64 (/.f64 1/2 y) (/.f64 (+.f64 (pow.f64 x 3) (pow.f64 x 4)) y)) 1) (/.f64 (pow.f64 (exp.f64 x) (-.f64 (log.f64 x) (log.f64 y))) x)) (/.f64 x (/.f64 y (pow.f64 (exp.f64 x) (-.f64 (log.f64 x) (log.f64 y))))))","(-.f64 (*.f64 (+.f64 (*.f64 (/.f64 1/2 (*.f64 y y)) (+.f64 (pow.f64 x 3) (pow.f64 x 4))) 1) (/.f64 (pow.f64 (*.f64 (/.f64 1 y) x) x) x)) (*.f64 (/.f64 x y) (pow.f64 (*.f64 (/.f64 1 y) x) x)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 2) x)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (pow.f64 y 3) x)) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) x) y)))))","(+.f64 (*.f64 (/.f64 (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))) (*.f64 y y)) (/.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) x)) (+.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) x) (neg.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) (/.f64 y x)))) (*.f64 (/.f64 (fma.f64 -1/6 (pow.f64 x 6) (fma.f64 -1/2 (*.f64 (pow.f64 x 3) (*.f64 (*.f64 x x) 1)) (*.f64 1/6 (*.f64 x (fma.f64 -2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0)))))) (pow.f64 y 3)) (/.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) x))))","(+.f64 (-.f64 (/.f64 (pow.f64 (exp.f64 x) (-.f64 (log.f64 x) (log.f64 y))) x) (/.f64 x (/.f64 y (pow.f64 (exp.f64 x) (-.f64 (log.f64 x) (log.f64 y)))))) (*.f64 (/.f64 (pow.f64 (exp.f64 x) (-.f64 (log.f64 x) (log.f64 y))) x) (+.f64 (*.f64 (/.f64 1/2 y) (/.f64 (+.f64 (pow.f64 x 3) (pow.f64 x 4)) y)) (/.f64 (fma.f64 -1/6 (pow.f64 x 6) (fma.f64 1/6 (*.f64 x (*.f64 (pow.f64 x 3) -2)) (*.f64 -1/2 (*.f64 x (pow.f64 x 4))))) (pow.f64 y 3)))))","(-.f64 (*.f64 (/.f64 (pow.f64 (*.f64 (/.f64 1 y) x) x) x) (+.f64 (*.f64 (/.f64 1/2 (*.f64 y y)) (+.f64 (pow.f64 x 3) (pow.f64 x 4))) (+.f64 (/.f64 (fma.f64 -1/6 (pow.f64 x 6) (fma.f64 1/6 (*.f64 x (*.f64 (pow.f64 x 3) -2)) (*.f64 -1/2 (pow.f64 x 5)))) (pow.f64 y 3)) 1))) (*.f64 (/.f64 x y) (pow.f64 (*.f64 (/.f64 1 y) x) x)))","(/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x)","(/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) x)","(/.f64 (pow.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)) x) x)","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)))","(+.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) x) (neg.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (/.f64 y x))))","(-.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) x) (*.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) y) x))","(-.f64 (/.f64 (pow.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)) x) x) (*.f64 (/.f64 x y) (pow.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)) x)))","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)) (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 (pow.f64 y 2) x))))","(+.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) x) (fma.f64 -1 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (/.f64 y x)) (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (/.f64 (*.f64 x (*.f64 y y)) (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4)))))))","(+.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) x) (-.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (*.f64 (/.f64 x 1/2) (/.f64 (*.f64 y y) (+.f64 (pow.f64 x 3) (pow.f64 x 4))))) (*.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) y) x)))","(-.f64 (*.f64 (+.f64 (*.f64 (/.f64 1/2 (*.f64 y y)) (+.f64 (pow.f64 x 3) (pow.f64 x 4))) 1) (/.f64 (pow.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)) x) x)) (*.f64 (/.f64 x y) (pow.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)) x)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (pow.f64 y 3) x))) (+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) x) y)) (/.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4)))) (*.f64 (pow.f64 y 2) x)))))","(fma.f64 -1 (*.f64 (/.f64 (fma.f64 1/2 (*.f64 (pow.f64 x 3) (*.f64 (*.f64 x x) 1)) (*.f64 1/6 (+.f64 (pow.f64 x 6) (*.f64 x (fma.f64 2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0)))))) (pow.f64 y 3)) (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) x)) (+.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) x) (fma.f64 -1 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (/.f64 y x)) (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (/.f64 (*.f64 x (*.f64 y y)) (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))))))))","(-.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) x) (-.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (*.f64 (/.f64 x 1/2) (/.f64 (*.f64 y y) (+.f64 (pow.f64 x 3) (pow.f64 x 4))))) (*.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) y) x))) (*.f64 (/.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) x) (/.f64 (fma.f64 1/2 (*.f64 x (pow.f64 x 4)) (*.f64 1/6 (+.f64 (pow.f64 x 6) (*.f64 x (*.f64 2 (pow.f64 x 3)))))) (pow.f64 y 3))))","(+.f64 (-.f64 (/.f64 (pow.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)) x) x) (*.f64 (/.f64 x y) (pow.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)) x))) (*.f64 (/.f64 (pow.f64 (*.f64 (/.f64 -1 y) (neg.f64 x)) x) x) (+.f64 (*.f64 (/.f64 1/2 (*.f64 y y)) (+.f64 (pow.f64 x 3) (pow.f64 x 4))) (neg.f64 (/.f64 (fma.f64 1/2 (pow.f64 x 5) (*.f64 1/6 (+.f64 (pow.f64 x 6) (*.f64 x (*.f64 2 (pow.f64 x 3)))))) (pow.f64 y 3))))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y))","(-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))","(-.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (/.f64 x y) (/.f64 x y)))","(+.f64 (/.f64 x y) (-.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 (/.f64 x y) (/.f64 x y)))","(+.f64 (-.f64 (/.f64 x y) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (-.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (/.f64 x y))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (/.f64 (neg.f64 y) x))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 (+.f64 1 (/.f64 (*.f64 y y) (*.f64 x x))) (/.f64 (neg.f64 y) x))","(+.f64 1 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 y x)))","(+.f64 1 (*.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 (+.f64 1 (/.f64 (*.f64 y y) (*.f64 x x))) (fma.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (neg.f64 y) x)))","(+.f64 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (-.f64 1 (/.f64 y x)))","(-.f64 (+.f64 1 (*.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)))) (pow.f64 (/.f64 y x) 3))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (/.f64 (neg.f64 y) x))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 (+.f64 1 (/.f64 (*.f64 y y) (*.f64 x x))) (/.f64 (neg.f64 y) x))","(+.f64 1 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 y x)))","(+.f64 1 (*.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 (+.f64 1 (/.f64 (*.f64 y y) (*.f64 x x))) (fma.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (neg.f64 y) x)))","(+.f64 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (-.f64 1 (/.f64 y x)))","(-.f64 (+.f64 1 (*.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)))) (pow.f64 (/.f64 y x) 3))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (/.f64 (neg.f64 y) x))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 (+.f64 1 (/.f64 (*.f64 y y) (*.f64 x x))) (/.f64 (neg.f64 y) x))","(+.f64 1 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 y x)))","(+.f64 1 (*.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 (+.f64 1 (/.f64 (*.f64 y y) (*.f64 x x))) (fma.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (neg.f64 y) x)))","(+.f64 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (-.f64 1 (/.f64 y x)))","(-.f64 (+.f64 1 (*.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)))) (pow.f64 (/.f64 y x) 3))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y))","(-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))","(-.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (/.f64 x y) (/.f64 x y)))","(+.f64 (/.f64 x y) (-.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 (/.f64 x y) (/.f64 x y)))","(+.f64 (-.f64 (/.f64 x y) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (-.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (/.f64 x y))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y))","(-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))","(-.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 (/.f64 x y) (/.f64 x y)))","(+.f64 (/.f64 x y) (-.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 (/.f64 x y) (/.f64 x y)))","(+.f64 (-.f64 (/.f64 x y) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (-.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (/.f64 x y) (/.f64 x y))))"]],"stop":[["node limit",1]],"time":55.152099609375,"type":"simplify"},{"compiler":[[5638,3190]],"time":56.46484375,"type":"eval"},{"alts":[["(/.f64 1 x)","next",9.946038350826402],["(/.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)) 2)) x)","fresh",13.972347221971566],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) x)","fresh",13.970062212203125],["(/.f64 (exp.f64 (neg.f64 y)) x)","fresh",17.67583405586077],["(fma.f64 (*.f64 y y) (+.f64 (/.f64 1/2 x) (/.f64 1/2 (*.f64 x x))) (-.f64 (/.f64 1 x) (/.f64 y x)))","fresh",33.89797728096905]],"compiler":[[5,4],[16,11],[23,11],[7,5],[22,14],[5,4],[16,11],[23,11],[7,5],[22,14]],"count":[[215,5]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[214,5],"picked":[1,0]}],"min-error":[0.00390625],"time":57.1640625,"type":"prune"},{"compiler":[[7,5]],"time":1.7451171875,"type":"localize"},{"compiler":[[2,2]],"time":0.10400390625,"type":"eval"},{"alts":[["(/.f64 1 x)","done",9.946038350826402],["(/.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)) 2)) x)","fresh",13.972347221971566],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) x)","next",13.970062212203125],["(/.f64 (exp.f64 (neg.f64 y)) x)","fresh",17.67583405586077],["(fma.f64 (*.f64 y y) (+.f64 (/.f64 1/2 x) (/.f64 1/2 (*.f64 x x))) (-.f64 (/.f64 1 x) (/.f64 y x)))","fresh",33.89797728096905]],"compiler":[[5,4],[16,11],[23,11],[7,5],[22,14],[16,11],[23,11],[7,5],[22,14]],"count":[[5,5]],"kept":[{"done":[0,0],"fresh":[4,4],"new":[0,0],"picked":[1,1]}],"min-error":[0.00390625],"time":2.52685546875,"type":"prune"},{"compiler":[[89,11]],"locations":[["(*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))",0.01171875,true],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) x)",0.01171875,true],["(pow.f64 (/.f64 x (+.f64 x y)) x)",8.102234504390337,false],["(pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))",8.106140754289537,true]],"time":10.942138671875,"type":"localize"},{"count":[[3,72]],"series":[["(*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))","y","-inf",2.621826171875],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))","y","inf",2.35302734375],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))","y","0",0.378173828125],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))","x","-inf",1.77197265625],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))","x","inf",1.676025390625],["(*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))","x","0",0.85009765625],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) x)","y","-inf",7.41796875],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) x)","y","inf",6.328125],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) x)","y","0",2.5830078125],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) x)","x","-inf",6.046142578125],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) x)","x","inf",8.276123046875],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) x)","x","0",2.049072265625],["(pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))","y","-inf",0.786865234375],["(pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))","y","inf",0.77001953125],["(pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))","y","0",0.39697265625],["(pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))","x","-inf",0.794921875],["(pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))","x","inf",1.100830078125],["(pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))","x","0",0.623046875]],"time":48.059814453125,"type":"series"},{"count":[[3,105]],"egraph":[[2,4012,33,0.024360334],[1,277,33,0.005186584],[0,12,39,0.000281625]],"inputs":[["(pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) x)","(*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) (cbrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x (*.f64 x 1/2)) (pow.f64 (/.f64 1 (+.f64 x y)) (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 (*.f64 x 1/2)) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2) (*.f64 x 1/2)) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (*.f64 x 1/2)) (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x x) (pow.f64 (/.f64 1 (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2) x) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x) (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x (+.f64 x x)) (pow.f64 (/.f64 1 (+.f64 x y)) (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 (+.f64 x x)) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2) (+.f64 x x)) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (+.f64 x x)) (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) (/.f64 (*.f64 x 1/2) 2)) (pow.f64 (/.f64 x (+.f64 x y)) (/.f64 (*.f64 x 1/2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (+.f64 x y))) (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y)))) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))) (cbrt.f64 (exp.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) 2) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (sqrt.f64 x)) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (/.f64 1 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 1) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (sqrt.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (pow.f64 (/.f64 x (+.f64 x y)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (pow.f64 x 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 x (pow.f64 (/.f64 x (+.f64 x y)) x)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) (cbrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) (*.f64 x 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) (*.f64 (+.f64 x x) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) (*.f64 x 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) (fma.f64 x 1/2 (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) (fma.f64 x 2 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) (fma.f64 x 2 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) (*.f64 2 (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) (*.f64 2 (+.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) x)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) (+.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2) (*.f64 x 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (+.f64 x y))) (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y)))) 1/3))))))"]],"rules":[["egg-rr",38],["egg-rr",35],["egg-rr",32]],"stop":[["node limit",1]],"time":48.47509765625,"type":"rewrite"},{"count":[[177,216]],"egraph":[[1,2761,12380,0.017520418],[0,725,17198,0.004264709]],"inputs":[["1","(+.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 1)","(+.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 1 (*.f64 (-.f64 (*.f64 2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 2 (/.f64 1 y))) (pow.f64 x 2))))","(+.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 1 (+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 2 (/.f64 1 y))) (pow.f64 x 2)) (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (*.f64 4/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -4 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (pow.f64 x 3)))))","(exp.f64 (*.f64 -2 y))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x) (exp.f64 (*.f64 -2 y)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x) (+.f64 (exp.f64 (*.f64 -2 y)) (/.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -2 y))) (pow.f64 x 2))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (+.f64 (*.f64 1/12 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 x 3)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x) (+.f64 (exp.f64 (*.f64 -2 y)) (/.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -2 y))) (pow.f64 x 2)))))","(exp.f64 (*.f64 -2 y))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x) (exp.f64 (*.f64 -2 y)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x) (+.f64 (exp.f64 (*.f64 -2 y)) (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x) (+.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1/12 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 -1/6 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3))))) (pow.f64 x 3))) (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2)))))","1","(+.f64 (*.f64 -2 y) 1)","(+.f64 (*.f64 -2 y) (+.f64 1 (*.f64 (pow.f64 y 2) (+.f64 2 (/.f64 1 x)))))","(+.f64 (*.f64 -2 y) (+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 4/3 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2/3 (/.f64 1 (pow.f64 x 2))))) (pow.f64 y 3))) (*.f64 (pow.f64 y 2) (+.f64 2 (/.f64 1 x))))))","(exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))","(+.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 -2 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (pow.f64 x 2)) y)))","(+.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (pow.f64 x 2)) y)) (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4)))) (pow.f64 y 2))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 -4/3 (pow.f64 x 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)) (*.f64 -2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3)))))) (pow.f64 y 3)) (+.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (pow.f64 x 2)) y)) (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4)))) (pow.f64 y 2)))))","(exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)))","(+.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 -2 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (pow.f64 x 2)) y)))","(+.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4)))) (pow.f64 y 2)) (*.f64 -2 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (pow.f64 x 2)) y))))","(+.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4)))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)) (+.f64 (*.f64 4/3 (pow.f64 x 6)) (*.f64 2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3)))))) (pow.f64 y 3))) (*.f64 -2 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (pow.f64 x 2)) y)))))","(/.f64 1 x)","(+.f64 (*.f64 1/3 (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) (/.f64 1 x))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (log.f64 x))) 2)) (*.f64 3 (/.f64 1 y)))) x)) (/.f64 1 x)))","(+.f64 (*.f64 1/3 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 2 (/.f64 1 y))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (+.f64 (*.f64 -4 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)) (+.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)))) (+.f64 (*.f64 4/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y))))))))) (+.f64 (*.f64 1/27 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (log.f64 x))) 3)) (*.f64 2/3 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (log.f64 x))) (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) 2)) (*.f64 3 (/.f64 1 y)))))))) (pow.f64 x 2))) (+.f64 (*.f64 1/3 (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (log.f64 x))) 2)) (*.f64 3 (/.f64 1 y)))) x)) (/.f64 1 x))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 1 (exp.f64 (*.f64 -1 y)))) 1/3) (/.f64 1 x))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (pow.f64 x 2)))) (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 1 (exp.f64 (*.f64 -1 y)))) 1/3) (/.f64 1 x)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 1 (exp.f64 (*.f64 -1 y)))) 1/3) (/.f64 1 x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 2)))) (pow.f64 x 3))))))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y)))) (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/12 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 5) (pow.f64 (exp.f64 (*.f64 -1 y)) 5))) 1/9) (*.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) 2))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (pow.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 3))))) (pow.f64 x 4)) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 1 (exp.f64 (*.f64 -1 y)))) 1/3) (/.f64 1 x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 2)))) (pow.f64 x 3)))))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 1 (exp.f64 (*.f64 -1 y)))) 1/3) (/.f64 1 x))","(+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 1 (exp.f64 (*.f64 -1 y)))) 1/3) (/.f64 1 x)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) (pow.f64 x 2)))))","(+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 1 (exp.f64 (*.f64 -1 y)))) 1/3) (/.f64 1 x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) (pow.f64 x 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 2)))) (pow.f64 x 3))))))","(+.f64 (*.f64 -1/3 (*.f64 (/.f64 (-.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (*.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/12 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 -1/6 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3))))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 5) (pow.f64 (exp.f64 (*.f64 -1 y)) 5))) 1/9) (*.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 2)))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 3))))) (pow.f64 x 4)) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 1 (exp.f64 (*.f64 -1 y)))) 1/3) (/.f64 1 x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) (pow.f64 x 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 2)))) (pow.f64 x 3)))))))","(/.f64 1 x)","(+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 3/2 (*.f64 3/2 (/.f64 1 x)))) x)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 3/2 (*.f64 3/2 (/.f64 1 x)))) x)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1 (+.f64 4/3 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2/3 (/.f64 1 (pow.f64 x 2)))))) (+.f64 (*.f64 -2 (+.f64 1/2 (*.f64 1/2 (/.f64 1 x)))) (+.f64 (*.f64 -1 (+.f64 2 (/.f64 1 x))) (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 x 2)))))))))) (*.f64 -2 (+.f64 3/2 (*.f64 3/2 (/.f64 1 x))))) (pow.f64 y 3)) x)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x)))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/3) (/.f64 1 x))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) (*.f64 y x)))) (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/3) (/.f64 1 x)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) (*.f64 y x)))) (+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/3) (/.f64 1 x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 4)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) 2)))) (*.f64 (pow.f64 y 2) x))))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) (*.f64 y x)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 -4/3 (pow.f64 x 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)) (*.f64 -2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))))))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 5))) 1/9) (*.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 4)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) 2)))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/3) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) 3))))) (*.f64 (pow.f64 y 3) x)))) (+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/3) (/.f64 1 x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 4)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) 2)))) (*.f64 (pow.f64 y 2) x)))))))","(*.f64 (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))))) 1/3) (/.f64 1 x))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/9) (/.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 y x)))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))))) 1/3) (/.f64 1 x)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 4)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)))) 1/9) (pow.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) 2)))) (*.f64 (pow.f64 y 2) x)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/9) (/.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 y x)))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))))) 1/3) (/.f64 1 x))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (pow.f64 x 2))))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 (pow.f64 x 2) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4)))))) (+.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)) (+.f64 (*.f64 4/3 (pow.f64 x 6)) (*.f64 2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3)))))))))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2))) 1/3) (pow.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) 3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 5))) 1/9) (*.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 4)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)))) 1/9) (pow.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) 2))))))))) (*.f64 (pow.f64 y 3) x)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 4)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)))) 1/9) (pow.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) 2)))) (*.f64 (pow.f64 y 2) x)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/9) (/.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 y x)))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))))) 1/3) (/.f64 1 x)))))","1","(+.f64 1 (*.f64 1/3 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (log.f64 x))) x)))","(+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (log.f64 x))) x)) (*.f64 1/3 (*.f64 (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) 2)) (*.f64 3 (/.f64 1 y)))) (pow.f64 x 2)))))","(+.f64 (*.f64 1/3 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 2 (/.f64 1 y))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (+.f64 (*.f64 -4 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)) (+.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)))) (+.f64 (*.f64 4/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y))))))))) (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (log.f64 x))) 2)) (*.f64 3 (/.f64 1 y)))))) (*.f64 1/27 (pow.f64 (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) 3)))) (pow.f64 x 3))) (+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (log.f64 x))) x)) (*.f64 1/3 (*.f64 (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) 2)) (*.f64 3 (/.f64 1 y)))) (pow.f64 x 2))))))","(pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y))) 1/3)","(+.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y))) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) x))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) 2)))) (pow.f64 x 2)))) (+.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y))) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) x)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) 2)))) (pow.f64 x 2)))) (+.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y))) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) x))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (+.f64 (*.f64 1/12 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))))) (+.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 5) (pow.f64 (exp.f64 (*.f64 -1 y)) 5))) 1/9) (*.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 2))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (pow.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) 3))))) (pow.f64 x 3)))))))","(pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y))) 1/3)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) x))) (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y))) 1/3))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) x))) (+.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y))) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 2)))) (pow.f64 x 2))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) x))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (-.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (*.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/12 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 -1/6 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3))))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 5) (pow.f64 (exp.f64 (*.f64 -1 y)) 5))) 1/9) (*.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 2)))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 3))))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3))) (+.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y))) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 2)))) (pow.f64 x 2)))))))","1","(+.f64 1 (*.f64 -1 y))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 2) (+.f64 3/2 (*.f64 3/2 (/.f64 1 x))))) (+.f64 1 (*.f64 -1 y)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 2) (+.f64 3/2 (*.f64 3/2 (/.f64 1 x))))) (+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (-.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 2))) (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))))) (+.f64 (*.f64 -2 (+.f64 1/2 (*.f64 1/2 (/.f64 1 x)))) (+.f64 1 (+.f64 (*.f64 -1 (+.f64 4/3 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2/3 (/.f64 1 (pow.f64 x 2)))))) (*.f64 -1 (+.f64 2 (/.f64 1 x))))))) (*.f64 -2 (+.f64 3/2 (*.f64 3/2 (/.f64 1 x))))))) (*.f64 -1 y))))","(pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) y))) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) y))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 4)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) 2)))) (pow.f64 y 2)))) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) y))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 -4/3 (pow.f64 x 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)) (*.f64 -2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))))))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 5))) 1/9) (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 4)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) 2)))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/3) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) 3))))) (pow.f64 y 3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 4)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) 2)))) (pow.f64 y 2)))) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3))))","(pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3)","(+.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/9) (/.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) y))))","(+.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/9) (/.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) y))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 4)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)))) 1/9) (pow.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) 2)))) (pow.f64 y 2))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))) (pow.f64 x 2)))) (+.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))))) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (pow.f64 x 2))))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)) (+.f64 (*.f64 4/3 (pow.f64 x 6)) (*.f64 2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3)))))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 5) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 5))) 1/9) (*.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 4)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)))) 1/9) (pow.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) 2))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2))) 1/3) (pow.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) 3))))) (pow.f64 y 3)))) (+.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/9) (/.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) y))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 4)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)))) 1/9) (pow.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) 2)))) (pow.f64 y 2)))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 1)","(fma.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) 1)","(fma.f64 2 (*.f64 x (-.f64 (log.f64 x) (log.f64 y))) 1)","(+.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 1 (*.f64 (-.f64 (*.f64 2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 2 (/.f64 1 y))) (pow.f64 x 2))))","(+.f64 (fma.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) 1) (*.f64 (-.f64 (*.f64 2 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2)) (/.f64 2 y)) (*.f64 x x)))","(fma.f64 2 (*.f64 x (-.f64 (log.f64 x) (log.f64 y))) (fma.f64 (fma.f64 2 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) (/.f64 -2 y)) (*.f64 x x) 1))","(+.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 1 (+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 2 (/.f64 1 y))) (pow.f64 x 2)) (*.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (*.f64 4/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -4 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)))) (pow.f64 x 3)))))","(+.f64 (fma.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) 1) (fma.f64 (-.f64 (*.f64 2 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2)) (/.f64 2 y)) (*.f64 x x) (*.f64 (+.f64 (/.f64 1 (*.f64 y y)) (fma.f64 4/3 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 3) (*.f64 -4 (/.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) y)))) (pow.f64 x 3))))","(+.f64 (fma.f64 2 (*.f64 x (-.f64 (log.f64 x) (log.f64 y))) 1) (fma.f64 (fma.f64 2 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) (/.f64 -2 y)) (*.f64 x x) (*.f64 (+.f64 (/.f64 1 (*.f64 y y)) (fma.f64 4/3 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 3) (*.f64 -4 (/.f64 (-.f64 (log.f64 x) (log.f64 y)) y)))) (pow.f64 x 3))))","(exp.f64 (*.f64 -2 y))","(pow.f64 (exp.f64 -2) y)","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x) (exp.f64 (*.f64 -2 y)))","(+.f64 (pow.f64 (exp.f64 -2) y) (/.f64 (pow.f64 (exp.f64 -2) y) (/.f64 x (*.f64 (*.f64 y y) 1))))","(+.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (/.f64 (pow.f64 (exp.f64 -2) y) x) (*.f64 y y)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x) (+.f64 (exp.f64 (*.f64 -2 y)) (/.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -2 y))) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 (exp.f64 -2) y) (/.f64 x (*.f64 (*.f64 y y) 1))) (+.f64 (pow.f64 (exp.f64 -2) y) (/.f64 (fma.f64 1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (/.f64 (*.f64 x x) (pow.f64 (exp.f64 -2) y)))))","(+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 -2) y) x) (*.f64 y y)) (+.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (/.f64 (pow.f64 (exp.f64 -2) y) x) (/.f64 (fma.f64 1/3 (*.f64 -2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4))) x))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (+.f64 (*.f64 1/12 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))) (pow.f64 x 3)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x) (+.f64 (exp.f64 (*.f64 -2 y)) (/.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (exp.f64 (*.f64 -2 y))) (pow.f64 x 2)))))","(+.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 -2) y) (/.f64 x (*.f64 (*.f64 y y) 1))) (+.f64 (pow.f64 (exp.f64 -2) y) (/.f64 (fma.f64 1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (/.f64 (*.f64 x x) (pow.f64 (exp.f64 -2) y))))) (/.f64 (pow.f64 (exp.f64 -2) y) (/.f64 (pow.f64 x 3) (fma.f64 1/6 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (fma.f64 1/12 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30))) (*.f64 1/3 (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)))))))))","(+.f64 (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 -2) y) x) (*.f64 y y)) (+.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (/.f64 (pow.f64 (exp.f64 -2) y) x) (/.f64 (fma.f64 1/3 (*.f64 -2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4))) x)))) (*.f64 (/.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 x 3)) (fma.f64 1/6 (pow.f64 (*.f64 y y) 3) (fma.f64 1/3 (*.f64 (*.f64 y y) (*.f64 -2 (pow.f64 y 3))) (*.f64 1/12 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) 18)))))))","(exp.f64 (*.f64 -2 y))","(pow.f64 (exp.f64 -2) y)","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x) (exp.f64 (*.f64 -2 y)))","(+.f64 (pow.f64 (exp.f64 -2) y) (/.f64 (pow.f64 (exp.f64 -2) y) (/.f64 x (*.f64 (*.f64 y y) 1))))","(+.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (/.f64 (pow.f64 (exp.f64 -2) y) x) (*.f64 y y)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x) (+.f64 (exp.f64 (*.f64 -2 y)) (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2))))","(+.f64 (/.f64 (pow.f64 (exp.f64 -2) y) (/.f64 x (*.f64 (*.f64 y y) 1))) (+.f64 (pow.f64 (exp.f64 -2) y) (/.f64 (pow.f64 (exp.f64 -2) y) (/.f64 (*.f64 x x) (fma.f64 -1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2)))))))","(+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 -2) y) x) (*.f64 y y)) (+.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (/.f64 (pow.f64 (exp.f64 -2) y) (*.f64 x x)) (fma.f64 -1/3 (*.f64 2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4))))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))) x) (+.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1/12 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 -1/6 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3))))) (pow.f64 x 3))) (/.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (pow.f64 x 2)))))","(+.f64 (/.f64 (pow.f64 (exp.f64 -2) y) (/.f64 x (*.f64 (*.f64 y y) 1))) (+.f64 (pow.f64 (exp.f64 -2) y) (fma.f64 -1 (/.f64 (pow.f64 (exp.f64 -2) y) (/.f64 (pow.f64 x 3) (fma.f64 -1/12 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30))) (fma.f64 1/3 (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8))) (*.f64 (pow.f64 (*.f64 (*.f64 y y) 1) 3) -1/6))))) (/.f64 (pow.f64 (exp.f64 -2) y) (/.f64 (*.f64 x x) (fma.f64 -1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))))))))","(+.f64 (+.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (/.f64 (pow.f64 (exp.f64 -2) y) x) (*.f64 y y))) (-.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 -2) y) (*.f64 x x)) (fma.f64 -1/3 (*.f64 2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 x 3)) (fma.f64 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) 18)) -1/12 (fma.f64 (*.f64 1/3 (*.f64 2 (pow.f64 y 3))) (*.f64 y y) (*.f64 (pow.f64 (*.f64 y y) 3) -1/6))))))","1","(+.f64 (*.f64 -2 y) 1)","(fma.f64 -2 y 1)","(fma.f64 y -2 1)","(+.f64 (*.f64 -2 y) (+.f64 1 (*.f64 (pow.f64 y 2) (+.f64 2 (/.f64 1 x)))))","(+.f64 (fma.f64 -2 y 1) (*.f64 (*.f64 y y) (+.f64 2 (/.f64 1 x))))","(fma.f64 y -2 (fma.f64 (*.f64 y y) (+.f64 2 (/.f64 1 x)) 1))","(+.f64 (*.f64 -2 y) (+.f64 1 (+.f64 (*.f64 -1 (*.f64 (+.f64 4/3 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2/3 (/.f64 1 (pow.f64 x 2))))) (pow.f64 y 3))) (*.f64 (pow.f64 y 2) (+.f64 2 (/.f64 1 x))))))","(+.f64 (fma.f64 -2 y 1) (fma.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 4/3 (+.f64 (/.f64 2 x) (/.f64 2/3 (*.f64 x x))))) (*.f64 (*.f64 y y) (+.f64 2 (/.f64 1 x)))))","(+.f64 (fma.f64 y -2 1) (-.f64 (*.f64 (*.f64 y y) (+.f64 2 (/.f64 1 x))) (*.f64 (pow.f64 y 3) (+.f64 (+.f64 4/3 (/.f64 2 x)) (/.f64 2/3 (*.f64 x x))))))","(exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))","(pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))","(pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2)","(+.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 -2 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (pow.f64 x 2)) y)))","(+.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 -2 (/.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (/.f64 y (*.f64 x x)))))","(fma.f64 -2 (/.f64 (*.f64 x x) (/.f64 y (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2))) (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2))","(+.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (pow.f64 x 2)) y)) (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4)))) (pow.f64 y 2))))","(+.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (fma.f64 -2 (/.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (/.f64 y (*.f64 x x))) (/.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (/.f64 (*.f64 y y) (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4)))))))","(+.f64 (fma.f64 -2 (/.f64 (*.f64 x x) (/.f64 y (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2))) (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2)) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2) (*.f64 y y)) (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 -4/3 (pow.f64 x 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)) (*.f64 -2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3)))))) (pow.f64 y 3)) (+.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (pow.f64 x 2)) y)) (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4)))) (pow.f64 y 2)))))","(+.f64 (+.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (fma.f64 -2 (/.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (/.f64 y (*.f64 x x))) (/.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (/.f64 (*.f64 y y) (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4))))))) (/.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (/.f64 (pow.f64 y 3) (fma.f64 -4/3 (pow.f64 x 6) (fma.f64 1/3 (*.f64 x (fma.f64 -2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0))) (*.f64 -2 (*.f64 (pow.f64 x 3) (*.f64 (*.f64 x x) 1))))))))","(+.f64 (+.f64 (fma.f64 -2 (/.f64 (*.f64 x x) (/.f64 y (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2))) (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2)) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2) (*.f64 y y)) (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3)))) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2) (pow.f64 y 3)) (fma.f64 -4/3 (pow.f64 x 6) (fma.f64 1/3 (*.f64 x (*.f64 (pow.f64 x 3) -2)) (*.f64 (*.f64 -2 (*.f64 x x)) (pow.f64 x 3))))))","(exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)))","(pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))","(pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 2)","(+.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 -2 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (pow.f64 x 2)) y)))","(+.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 -2 (/.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (/.f64 y (*.f64 x x)))))","(fma.f64 -2 (/.f64 (*.f64 x x) (/.f64 y (pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 2))) (pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 2))","(+.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4)))) (pow.f64 y 2)) (*.f64 -2 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (pow.f64 x 2)) y))))","(+.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (/.f64 y (*.f64 x x)))) (/.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (/.f64 (*.f64 y y) (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4)))))))","(+.f64 (pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 2) (fma.f64 -2 (/.f64 (*.f64 x x) (/.f64 y (pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 2))) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 2) y) (/.f64 (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3)) y))))","(+.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4)))) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)) (+.f64 (*.f64 4/3 (pow.f64 x 6)) (*.f64 2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3)))))) (pow.f64 y 3))) (*.f64 -2 (/.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (pow.f64 x 2)) y)))))","(+.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (+.f64 (/.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (/.f64 (*.f64 y y) (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4))))) (fma.f64 -1 (/.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (/.f64 (pow.f64 y 3) (fma.f64 1/3 (*.f64 x (fma.f64 2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0))) (fma.f64 4/3 (pow.f64 x 6) (*.f64 2 (*.f64 (pow.f64 x 3) (*.f64 (*.f64 x x) 1))))))) (*.f64 -2 (/.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (/.f64 y (*.f64 x x)))))))","(+.f64 (pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 2) (+.f64 (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 2) y) (/.f64 (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3)) y)) (fma.f64 -2 (/.f64 (*.f64 x x) (/.f64 y (pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 2))) (/.f64 (neg.f64 (pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 2)) (/.f64 (pow.f64 y 3) (fma.f64 1/3 (*.f64 x (*.f64 2 (pow.f64 x 3))) (fma.f64 4/3 (pow.f64 x 6) (*.f64 (*.f64 2 (*.f64 x x)) (pow.f64 x 3)))))))))","(/.f64 1 x)","(+.f64 (*.f64 1/3 (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) (/.f64 1 x))","(fma.f64 1/3 (*.f64 3 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) (/.f64 1 x))","(fma.f64 1/3 (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))) (/.f64 1 x))","(+.f64 (*.f64 1/3 (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (log.f64 x))) 2)) (*.f64 3 (/.f64 1 y)))) x)) (/.f64 1 x)))","(fma.f64 1/3 (*.f64 3 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) (fma.f64 1/3 (*.f64 x (-.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) 9/2) (fma.f64 1/3 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (fma.f64 2 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) (log.f64 x))) 2) (/.f64 3 y)))) (/.f64 1 x)))","(fma.f64 1/3 (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))) (fma.f64 1/3 (*.f64 x (-.f64 (*.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) 9/2) (fma.f64 1/3 (pow.f64 (-.f64 (fma.f64 2 (-.f64 (log.f64 x) (log.f64 y)) (log.f64 x)) (log.f64 y)) 2) (/.f64 3 y)))) (/.f64 1 x)))","(+.f64 (*.f64 1/3 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 2 (/.f64 1 y))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (+.f64 (*.f64 -4 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)) (+.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)))) (+.f64 (*.f64 4/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y))))))))) (+.f64 (*.f64 1/27 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (log.f64 x))) 3)) (*.f64 2/3 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (log.f64 x))) (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) 2)) (*.f64 3 (/.f64 1 y)))))))) (pow.f64 x 2))) (+.f64 (*.f64 1/3 (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (log.f64 x))) 2)) (*.f64 3 (/.f64 1 y)))) x)) (/.f64 1 x))))","(fma.f64 1/3 (*.f64 (*.f64 x x) (-.f64 (+.f64 (/.f64 1 (*.f64 y y)) (+.f64 (/.f64 1/2 (*.f64 y y)) (fma.f64 (-.f64 (*.f64 2 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2)) (/.f64 2 y)) (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) (fma.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 3) (fma.f64 -4 (/.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) y) (fma.f64 2 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) (-.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) 1/2) (/.f64 1 y))) (fma.f64 4/3 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 3) (neg.f64 (/.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) y))))))))) (fma.f64 1/27 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (fma.f64 2 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) (log.f64 x))) 3) (*.f64 2/3 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (fma.f64 2 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) (log.f64 x))) (-.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) 9/2) (fma.f64 1/3 (pow.f64 (*.f64 3 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) 2) (/.f64 3 y)))))))) (fma.f64 1/3 (*.f64 3 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) (fma.f64 1/3 (*.f64 x (-.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) 9/2) (fma.f64 1/3 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (fma.f64 2 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) (log.f64 x))) 2) (/.f64 3 y)))) (/.f64 1 x))))","(fma.f64 1/3 (*.f64 (*.f64 x x) (-.f64 (+.f64 (*.f64 3/2 (/.f64 1 (*.f64 y y))) (fma.f64 (-.f64 (log.f64 x) (log.f64 y)) (fma.f64 2 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) (/.f64 -2 y)) (fma.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 3) 1/6 (fma.f64 -4 (/.f64 (-.f64 (log.f64 x) (log.f64 y)) y) (-.f64 (fma.f64 (*.f64 2 (-.f64 (log.f64 x) (log.f64 y))) (fma.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) 1/2 (/.f64 -1 y)) (*.f64 4/3 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 3))) (/.f64 (-.f64 (log.f64 x) (log.f64 y)) y)))))) (fma.f64 2/3 (*.f64 (-.f64 (fma.f64 2 (-.f64 (log.f64 x) (log.f64 y)) (log.f64 x)) (log.f64 y)) (-.f64 (*.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) 9/2) (fma.f64 1/3 (pow.f64 (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))) 2) (/.f64 3 y)))) (*.f64 1/27 (pow.f64 (-.f64 (fma.f64 2 (-.f64 (log.f64 x) (log.f64 y)) (log.f64 x)) (log.f64 y)) 3))))) (fma.f64 1/3 (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))) (fma.f64 1/3 (*.f64 x (-.f64 (*.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) 9/2) (fma.f64 1/3 (pow.f64 (-.f64 (fma.f64 2 (-.f64 (log.f64 x) (log.f64 y)) (log.f64 x)) (log.f64 y)) 2) (/.f64 3 y)))) (/.f64 1 x))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 1 (exp.f64 (*.f64 -1 y)))) 1/3) (/.f64 1 x))","(*.f64 (/.f64 1 x) (cbrt.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))))","(/.f64 (cbrt.f64 (exp.f64 (*.f64 y -3))) x)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (pow.f64 x 2)))) (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 1 (exp.f64 (*.f64 -1 y)))) 1/3) (/.f64 1 x)))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18)) (/.f64 (*.f64 3/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1))) (*.f64 x x))) (*.f64 (/.f64 1 x) (cbrt.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18)) (*.f64 (/.f64 3/2 x) (/.f64 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)) x))) (/.f64 (cbrt.f64 (exp.f64 (*.f64 y -3))) x))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 1 (exp.f64 (*.f64 -1 y)))) 1/3) (/.f64 1 x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 2)))) (pow.f64 x 3))))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18)) (/.f64 (*.f64 3/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1))) (*.f64 x x))) (fma.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) (/.f64 1 x) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2)))) (/.f64 (-.f64 (fma.f64 (fma.f64 1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 1/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (pow.f64 (*.f64 (*.f64 y y) 1) 2)) (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 (pow.f64 (*.f64 (*.f64 y y) 1) 2) 1/8))))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18)) (pow.f64 (*.f64 3/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1))) 2)))) (pow.f64 x 3))))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18)) (*.f64 (/.f64 3/2 x) (/.f64 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)) x))) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (fma.f64 (fma.f64 1/3 (*.f64 -2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y -3)) (fma.f64 1/2 (*.f64 (exp.f64 (*.f64 y -3)) (pow.f64 y 4)) (*.f64 (exp.f64 (*.f64 y -3)) (fma.f64 (*.f64 -2 (pow.f64 y 3)) 1/6 (*.f64 (pow.f64 y 4) 1/8))))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18)) (pow.f64 (*.f64 3/2 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y))) 2)))) (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))))) (pow.f64 x 3)) (/.f64 (cbrt.f64 (exp.f64 (*.f64 y -3))) x)))","(+.f64 (*.f64 1/3 (*.f64 (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (exp.f64 (*.f64 -1 y)))) (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/12 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 5) (pow.f64 (exp.f64 (*.f64 -1 y)) 5))) 1/9) (*.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) 2))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (pow.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 3))))) (pow.f64 x 4)) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (pow.f64 x 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 1 (exp.f64 (*.f64 -1 y)))) 1/3) (/.f64 1 x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 2)))) (pow.f64 x 3)))))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2)))) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 (pow.f64 (*.f64 (*.f64 y y) 1) 2) 1/8)))) (fma.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/12 (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4))) (fma.f64 1/48 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (*.f64 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30))) 1/24)))) (fma.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 1/12 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30))) (fma.f64 1/6 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (*.f64 1/3 (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4))))))) (*.f64 1/2 (*.f64 (fma.f64 1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1))))))) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 5) (pow.f64 (exp.f64 (neg.f64 y)) 5))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 5) (pow.f64 (exp.f64 (neg.f64 y)) 5))) 1/18)) (*.f64 (*.f64 3/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1))) (-.f64 (fma.f64 (fma.f64 1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 1/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (pow.f64 (*.f64 (*.f64 y y) 1) 2)) (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 (pow.f64 (*.f64 (*.f64 y y) 1) 2) 1/8))))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18)) (pow.f64 (*.f64 3/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1))) 2)))))) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2)))) (pow.f64 (*.f64 3/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1))) 3))))) (pow.f64 x 4))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18)) (/.f64 (*.f64 3/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1))) (*.f64 x x))) (fma.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) (/.f64 1 x) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2)))) (/.f64 (-.f64 (fma.f64 (fma.f64 1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 1/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (pow.f64 (*.f64 (*.f64 y y) 1) 2)) (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 (pow.f64 (*.f64 (*.f64 y y) 1) 2) 1/8))))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18)) (pow.f64 (*.f64 3/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1))) 2)))) (pow.f64 x 3)))))))","(fma.f64 1/3 (/.f64 (-.f64 (fma.f64 (exp.f64 (*.f64 y -3)) (*.f64 (*.f64 y y) (fma.f64 (*.f64 -2 (pow.f64 y 3)) 1/6 (*.f64 (pow.f64 y 4) 1/8))) (fma.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (fma.f64 1/12 (*.f64 (*.f64 y y) (*.f64 -2 (pow.f64 y 3))) (fma.f64 (pow.f64 (*.f64 y y) 3) 1/48 (*.f64 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) 18)) 1/24)))) (exp.f64 (neg.f64 y)) (fma.f64 (exp.f64 (*.f64 y -3)) (fma.f64 1/12 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) 18)) (fma.f64 (*.f64 1/3 (*.f64 -2 (pow.f64 y 3))) (*.f64 y y) (*.f64 1/6 (pow.f64 (*.f64 y y) 3)))) (*.f64 1/2 (*.f64 (fma.f64 1/3 (*.f64 -2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4))) (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y))))))) (fma.f64 2/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 5) (pow.f64 (exp.f64 (neg.f64 y)) 5))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 5) (pow.f64 (exp.f64 (neg.f64 y)) 5))) 1/18)) (*.f64 3/2 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)))) (+.f64 (fma.f64 (fma.f64 1/3 (*.f64 -2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y -3)) (fma.f64 1/2 (*.f64 (exp.f64 (*.f64 y -3)) (pow.f64 y 4)) (*.f64 (exp.f64 (*.f64 y -3)) (fma.f64 (*.f64 -2 (pow.f64 y 3)) 1/6 (*.f64 (pow.f64 y 4) 1/8))))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18)) (pow.f64 (*.f64 3/2 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y))) 2))))) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3))))) (pow.f64 (*.f64 3/2 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y))) 3))))) (/.f64 (pow.f64 x 4) (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3))))))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18)) (*.f64 (/.f64 3/2 x) (/.f64 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)) x))) (fma.f64 1/3 (/.f64 (*.f64 (+.f64 (fma.f64 (fma.f64 1/3 (*.f64 -2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y -3)) (fma.f64 1/2 (*.f64 (exp.f64 (*.f64 y -3)) (pow.f64 y 4)) (*.f64 (exp.f64 (*.f64 y -3)) (fma.f64 (*.f64 -2 (pow.f64 y 3)) 1/6 (*.f64 (pow.f64 y 4) 1/8))))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18)) (pow.f64 (*.f64 3/2 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y))) 2)))) (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))))) (pow.f64 x 3)) (/.f64 (cbrt.f64 (exp.f64 (*.f64 y -3))) x))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 1 (exp.f64 (*.f64 -1 y)))) 1/3) (/.f64 1 x))","(*.f64 (/.f64 1 x) (cbrt.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))))","(/.f64 (cbrt.f64 (exp.f64 (*.f64 y -3))) x)","(+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 1 (exp.f64 (*.f64 -1 y)))) 1/3) (/.f64 1 x)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) (pow.f64 x 2)))))","(fma.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) (/.f64 1 x) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18)) (/.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1)) -3/2) (*.f64 x x)))))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18)) (/.f64 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)) (/.f64 (*.f64 x x) -3/2))) (/.f64 (cbrt.f64 (exp.f64 (*.f64 y -3))) x))","(+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 1 (exp.f64 (*.f64 -1 y)))) 1/3) (/.f64 1 x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) (pow.f64 x 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 2)))) (pow.f64 x 3))))))","(fma.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) (/.f64 1 x) (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18)) (/.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1)) -3/2) (*.f64 x x))) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2)))) (/.f64 (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) -1/6))) (-.f64 (fma.f64 1/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (pow.f64 (*.f64 (*.f64 y y) 1) 2)) (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 -1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18)) (pow.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1)) -3/2) 2))))) (pow.f64 x 3))))))","(+.f64 (/.f64 (cbrt.f64 (exp.f64 (*.f64 y -3))) x) (fma.f64 1/3 (/.f64 (*.f64 (-.f64 (fma.f64 (exp.f64 (*.f64 y -3)) (fma.f64 (*.f64 2 (pow.f64 y 3)) -1/6 (*.f64 (pow.f64 y 4) 1/8)) (fma.f64 1/2 (*.f64 (exp.f64 (*.f64 y -3)) (pow.f64 y 4)) (*.f64 (exp.f64 (*.f64 y -3)) (fma.f64 -1/3 (*.f64 2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4)))))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18))) (pow.f64 (*.f64 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)) -3/2) 2))) (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))))) (pow.f64 x 3)) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18)) (/.f64 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)) (/.f64 (*.f64 x x) -3/2))))))","(+.f64 (*.f64 -1/3 (*.f64 (/.f64 (-.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (*.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/12 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 -1/6 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3))))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 5) (pow.f64 (exp.f64 (*.f64 -1 y)) 5))) 1/9) (*.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 2)))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 3))))) (pow.f64 x 4)) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 1 (exp.f64 (*.f64 -1 y)))) 1/3) (/.f64 1 x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) (pow.f64 x 2)))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 2)))) (pow.f64 x 3)))))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2)))) (/.f64 (-.f64 (fma.f64 -1 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) -1/6)))) (fma.f64 -1/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 -1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (*.f64 (pow.f64 (exp.f64 -2) y) (+.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 -1/24 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30))) (fma.f64 -1/48 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (*.f64 1/12 (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8))))))) (*.f64 (fma.f64 -1/12 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30))) (fma.f64 1/3 (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8))) (*.f64 (pow.f64 (*.f64 (*.f64 y y) 1) 3) -1/6))) (exp.f64 (neg.f64 y))))))) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 5) (pow.f64 (exp.f64 (neg.f64 y)) 5))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 5) (pow.f64 (exp.f64 (neg.f64 y)) 5))) 1/18)) (*.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1)) -3/2) (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) -1/6))) (-.f64 (fma.f64 1/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (pow.f64 (*.f64 (*.f64 y y) 1) 2)) (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 -1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18)) (pow.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1)) -3/2) 2))))))) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2)))) (pow.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1)) -3/2) 3))))) (pow.f64 x 4))) (fma.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) (/.f64 1 x) (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18)) (/.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1)) -3/2) (*.f64 x x))) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2)))) (/.f64 (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) -1/6))) (-.f64 (fma.f64 1/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (pow.f64 (*.f64 (*.f64 y y) 1) 2)) (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 -1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18)) (pow.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1)) -3/2) 2))))) (pow.f64 x 3)))))))","(fma.f64 -1/3 (/.f64 (-.f64 (-.f64 (fma.f64 -1/2 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 (*.f64 y y) (fma.f64 -1/3 (*.f64 2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4))))) (*.f64 (exp.f64 (*.f64 y -3)) (+.f64 (fma.f64 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) 18)) -1/12 (fma.f64 (*.f64 1/3 (*.f64 2 (pow.f64 y 3))) (*.f64 y y) (*.f64 (pow.f64 (*.f64 y y) 3) -1/6))) (fma.f64 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) 18)) -1/24 (fma.f64 (pow.f64 (*.f64 y y) 3) -1/48 (*.f64 (*.f64 1/12 (*.f64 2 (pow.f64 y 3))) (*.f64 y y))))))) (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 (*.f64 y y) (fma.f64 (*.f64 2 (pow.f64 y 3)) -1/6 (*.f64 (pow.f64 y 4) 1/8))))) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 5) (pow.f64 (exp.f64 (neg.f64 y)) 5))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 5) (pow.f64 (exp.f64 (neg.f64 y)) 5))) 1/18)) (*.f64 (*.f64 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)) -3/2) (-.f64 (fma.f64 (exp.f64 (*.f64 y -3)) (fma.f64 (*.f64 2 (pow.f64 y 3)) -1/6 (*.f64 (pow.f64 y 4) 1/8)) (fma.f64 1/2 (*.f64 (exp.f64 (*.f64 y -3)) (pow.f64 y 4)) (*.f64 (exp.f64 (*.f64 y -3)) (fma.f64 -1/3 (*.f64 2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4)))))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18))) (pow.f64 (*.f64 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)) -3/2) 2))))) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3))))) (pow.f64 (*.f64 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)) -3/2) 3))))) (/.f64 (pow.f64 x 4) (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3))))))) (+.f64 (/.f64 (cbrt.f64 (exp.f64 (*.f64 y -3))) x) (fma.f64 1/3 (/.f64 (*.f64 (-.f64 (fma.f64 (exp.f64 (*.f64 y -3)) (fma.f64 (*.f64 2 (pow.f64 y 3)) -1/6 (*.f64 (pow.f64 y 4) 1/8)) (fma.f64 1/2 (*.f64 (exp.f64 (*.f64 y -3)) (pow.f64 y 4)) (*.f64 (exp.f64 (*.f64 y -3)) (fma.f64 -1/3 (*.f64 2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4)))))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18))) (pow.f64 (*.f64 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)) -3/2) 2))) (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))))) (pow.f64 x 3)) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18)) (/.f64 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)) (/.f64 (*.f64 x x) -3/2)))))))","(/.f64 1 x)","(+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 1 x) (/.f64 (neg.f64 y) x))","(-.f64 (/.f64 1 x) (/.f64 y x))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 3/2 (*.f64 3/2 (/.f64 1 x)))) x)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x))))","(fma.f64 1/3 (/.f64 (*.f64 (*.f64 y y) (+.f64 3/2 (/.f64 3/2 x))) x) (+.f64 (/.f64 1 x) (/.f64 (neg.f64 y) x)))","(fma.f64 1/3 (*.f64 (/.f64 (*.f64 y y) x) (+.f64 3/2 (/.f64 3/2 x))) (-.f64 (/.f64 1 x) (/.f64 y x)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 3/2 (*.f64 3/2 (/.f64 1 x)))) x)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1 (+.f64 4/3 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2/3 (/.f64 1 (pow.f64 x 2)))))) (+.f64 (*.f64 -2 (+.f64 1/2 (*.f64 1/2 (/.f64 1 x)))) (+.f64 (*.f64 -1 (+.f64 2 (/.f64 1 x))) (*.f64 -1 (+.f64 (*.f64 1/2 (/.f64 1 x)) (+.f64 1/6 (*.f64 1/3 (/.f64 1 (pow.f64 x 2)))))))))) (*.f64 -2 (+.f64 3/2 (*.f64 3/2 (/.f64 1 x))))) (pow.f64 y 3)) x)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x)))))","(fma.f64 1/3 (/.f64 (*.f64 (*.f64 y y) (+.f64 3/2 (/.f64 3/2 x))) x) (fma.f64 1/3 (/.f64 (+.f64 1 (-.f64 (fma.f64 -1 (+.f64 4/3 (+.f64 (/.f64 2 x) (/.f64 2/3 (*.f64 x x)))) (fma.f64 -2 (+.f64 1/2 (/.f64 1/2 x)) (*.f64 -1 (+.f64 (+.f64 2 (/.f64 1 x)) (+.f64 (/.f64 1/2 x) (+.f64 1/6 (/.f64 1/3 (*.f64 x x)))))))) (+.f64 -3 (*.f64 (/.f64 3/2 x) -2)))) (/.f64 x (pow.f64 y 3))) (+.f64 (/.f64 1 x) (/.f64 (neg.f64 y) x))))","(fma.f64 1/3 (*.f64 (/.f64 (*.f64 y y) x) (+.f64 3/2 (/.f64 3/2 x))) (fma.f64 1/3 (/.f64 (-.f64 (+.f64 (-.f64 1 (+.f64 (+.f64 4/3 (/.f64 2 x)) (/.f64 2/3 (*.f64 x x)))) (+.f64 (+.f64 -1 (/.f64 -1 x)) (-.f64 (+.f64 -2 (/.f64 -1 x)) (+.f64 (/.f64 1/2 x) (+.f64 1/6 (/.f64 (/.f64 1/3 x) x)))))) (+.f64 -3 (/.f64 -3 x))) (/.f64 x (pow.f64 y 3))) (-.f64 (/.f64 1 x) (/.f64 y x))))","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/3) (/.f64 1 x))","(*.f64 (/.f64 1 x) (cbrt.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))))))","(/.f64 (cbrt.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))) x)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) (*.f64 y x)))) (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/3) (/.f64 1 x)))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2))) 1/18)) (/.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (*.f64 x x)) -3) (*.f64 y x))) (*.f64 (/.f64 1 x) (cbrt.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))))) 1/18)) (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (*.f64 x x)) y) (/.f64 -3 x))) (/.f64 (cbrt.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))) x))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) (*.f64 y x)))) (+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/3) (/.f64 1 x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 4)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) 2)))) (*.f64 (pow.f64 y 2) x))))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2))) 1/18)) (/.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (*.f64 x x)) -3) (*.f64 y x))) (fma.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))))) (/.f64 1 x) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2)))) (/.f64 (-.f64 (fma.f64 (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))) (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4)))) (*.f64 2 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (pow.f64 x 4))))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))))) 1/18)) (pow.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (*.f64 x x)) -3) 2)))) (*.f64 x (*.f64 y y)))))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))))) 1/18)) (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (*.f64 x x)) y) (/.f64 -3 x))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))))) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (+.f64 (*.f64 1/2 (+.f64 (pow.f64 x 4) (pow.f64 x 3))) (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3)))) (*.f64 2 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (pow.f64 x 4)))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))) 1/18))) (pow.f64 (*.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (*.f64 x x)) -3) 2))) (*.f64 x (*.f64 y y)))) (/.f64 (cbrt.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))) x)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) (*.f64 y x)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 -4/3 (pow.f64 x 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)) (*.f64 -2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))))))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 5))) 1/9) (*.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 4)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) 2)))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/3) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) 3))))) (*.f64 (pow.f64 y 3) x)))) (+.f64 (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 1 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/3) (/.f64 1 x)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 4)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) 2)))) (*.f64 (pow.f64 y 2) x)))))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2))) 1/18)) (/.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (*.f64 x x)) -3) (*.f64 y x))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2)))) (/.f64 (-.f64 (fma.f64 -2 (*.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 (*.f64 (*.f64 x x) (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x)) (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))))) (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (fma.f64 -4/3 (pow.f64 x 6) (fma.f64 1/3 (*.f64 x (fma.f64 -2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0))) (*.f64 -2 (*.f64 (pow.f64 x 3) (*.f64 (*.f64 x x) 1)))))) (fma.f64 -1 (*.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4))) (*.f64 (*.f64 x x) (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x)))) (*.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) (fma.f64 -1/6 (pow.f64 x 6) (fma.f64 -1/2 (*.f64 (pow.f64 x 3) (*.f64 (*.f64 x x) 1)) (*.f64 1/6 (*.f64 x (fma.f64 -2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0))))))))))) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 5) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 5))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 5) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 5))) 1/18)) (*.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (*.f64 x x)) -3) (+.f64 (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4)))) (fma.f64 2 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (pow.f64 x 4)) (*.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))))))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))))) 1/18)) (pow.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (*.f64 x x)) -3) 2)))))) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2)))) (pow.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (*.f64 x x)) -3) 3))))) (*.f64 x (pow.f64 y 3)))) (fma.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))))) (/.f64 1 x) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2)))) (/.f64 (-.f64 (fma.f64 (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))) (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4)))) (*.f64 2 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (pow.f64 x 4))))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))))) 1/18)) (pow.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (*.f64 x x)) -3) 2)))) (*.f64 x (*.f64 y y))))))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))))) 1/18)) (*.f64 (/.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (*.f64 x x)) y) (/.f64 -3 x))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))))) (/.f64 (-.f64 (fma.f64 -2 (*.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2) (*.f64 (*.f64 (*.f64 x x) (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x)) (*.f64 1/2 (+.f64 (pow.f64 x 4) (pow.f64 x 3))))) (fma.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (fma.f64 -4/3 (pow.f64 x 6) (fma.f64 1/3 (*.f64 x (*.f64 (pow.f64 x 3) -2)) (*.f64 (*.f64 -2 (*.f64 x x)) (pow.f64 x 3)))) (fma.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2) (*.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) (fma.f64 -1/6 (pow.f64 x 6) (fma.f64 1/6 (*.f64 x (*.f64 (pow.f64 x 3) -2)) (*.f64 (*.f64 (*.f64 x x) (pow.f64 x 3)) -1/2)))) (*.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2) (neg.f64 (*.f64 (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3)) (*.f64 (*.f64 x x) (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x)))))))) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2) 5) (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 5))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2) 5) (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 5))) 1/18)) (*.f64 (*.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (*.f64 x x)) -3) (-.f64 (fma.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3)) (fma.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2) (*.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) (*.f64 1/2 (+.f64 (pow.f64 x 4) (pow.f64 x 3)))) (*.f64 2 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (pow.f64 x 4))))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))) 1/18))) (pow.f64 (*.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (*.f64 x x)) -3) 2))))) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))))) (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (*.f64 x x)) 3) -27))))) (*.f64 x (pow.f64 y 3)))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))))) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (+.f64 (*.f64 1/2 (+.f64 (pow.f64 x 4) (pow.f64 x 3))) (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3)))) (*.f64 2 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (pow.f64 x 4)))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))) 1/18))) (pow.f64 (*.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (*.f64 x x)) -3) 2))) (*.f64 x (*.f64 y y)))) (/.f64 (cbrt.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))) x))))","(*.f64 (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))))) 1/3) (/.f64 1 x))","(*.f64 (/.f64 1 x) (cbrt.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))))","(/.f64 (cbrt.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) x)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/9) (/.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 y x)))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))))) 1/3) (/.f64 1 x)))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2)) 1/18)) (/.f64 (*.f64 3 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) (*.f64 y x))) (*.f64 (/.f64 1 x) (cbrt.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))) 1/18)) (*.f64 (/.f64 3 y) (/.f64 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x)) x))) (/.f64 (cbrt.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) x))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 4)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)))) 1/9) (pow.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) 2)))) (*.f64 (pow.f64 y 2) x)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/9) (/.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 y x)))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))))) 1/3) (/.f64 1 x))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2))) (/.f64 (-.f64 (+.f64 (*.f64 (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))) (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4)))) (*.f64 2 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (pow.f64 x 4))))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18)) (pow.f64 (*.f64 3 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) 2)))) (*.f64 x (*.f64 y y)))) (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2)) 1/18)) (/.f64 (*.f64 3 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) (*.f64 y x))) (*.f64 (/.f64 1 x) (cbrt.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))))))","(fma.f64 1/3 (*.f64 (/.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))))) x) (/.f64 (+.f64 (+.f64 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (+.f64 (*.f64 1/2 (+.f64 (pow.f64 x 4) (pow.f64 x 3))) (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3)))) (*.f64 2 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (pow.f64 x 4)))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18)) (pow.f64 (*.f64 3 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) 2)))) (*.f64 y y))) (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))) 1/18)) (*.f64 (/.f64 3 y) (/.f64 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x)) x))) (/.f64 (cbrt.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) x)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (pow.f64 x 2))))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 (pow.f64 x 2) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4)))))) (+.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)) (+.f64 (*.f64 4/3 (pow.f64 x 6)) (*.f64 2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3)))))))))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2))) 1/3) (pow.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) 3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 5))) 1/9) (*.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 4)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)))) 1/9) (pow.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) 2))))))))) (*.f64 (pow.f64 y 3) x)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 4)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)))) 1/9) (pow.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) 2)))) (*.f64 (pow.f64 y 2) x)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/9) (/.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 y x)))) (*.f64 (pow.f64 (*.f64 1 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))))) 1/3) (/.f64 1 x)))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2))) (/.f64 (-.f64 (fma.f64 2 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 (*.f64 x x) (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))))) (+.f64 (fma.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (*.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (fma.f64 1/2 (*.f64 (pow.f64 x 3) (*.f64 (*.f64 x x) 1)) (*.f64 1/6 (+.f64 (pow.f64 x 6) (*.f64 x (fma.f64 2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0))))))) (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (fma.f64 1/3 (*.f64 x (fma.f64 2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0))) (fma.f64 4/3 (pow.f64 x 6) (*.f64 2 (*.f64 (pow.f64 x 3) (*.f64 (*.f64 x x) 1))))))) (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 (*.f64 x x) (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4))))))) (fma.f64 1/27 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2))) (pow.f64 (*.f64 3 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) 3)) (*.f64 2/3 (*.f64 (*.f64 (*.f64 3 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4)))) (-.f64 (fma.f64 (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))) (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 2 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (pow.f64 x 4)))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18)) (pow.f64 (*.f64 3 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) 2)))))) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 5) (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 5))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 5) (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 5))) 1/18)))))) (*.f64 x (pow.f64 y 3)))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2))) (/.f64 (-.f64 (+.f64 (*.f64 (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))) (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4)))) (*.f64 2 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (pow.f64 x 4))))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18)) (pow.f64 (*.f64 3 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) 2)))) (*.f64 x (*.f64 y y)))) (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2)) 1/18)) (/.f64 (*.f64 3 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) (*.f64 y x))) (*.f64 (/.f64 1 x) (cbrt.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))))))","(fma.f64 -1/3 (/.f64 (*.f64 (-.f64 (fma.f64 2 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 (*.f64 x x) (*.f64 1/2 (+.f64 (pow.f64 x 4) (pow.f64 x 3))))) (fma.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 (*.f64 x x) (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3))) (*.f64 (pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 2) (+.f64 (*.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) (fma.f64 1/6 (+.f64 (pow.f64 x 6) (*.f64 x (*.f64 2 (pow.f64 x 3)))) (*.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 x 3))))) (*.f64 (fma.f64 1/3 (*.f64 x (*.f64 2 (pow.f64 x 3))) (fma.f64 4/3 (pow.f64 x 6) (*.f64 (*.f64 2 (*.f64 x x)) (pow.f64 x 3)))) (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))))) (fma.f64 2/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 2) 5)) (pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 5)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 2) 5)) (pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 5)) 1/18)) (*.f64 3 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x)))) (+.f64 (+.f64 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (+.f64 (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3)) (*.f64 1/2 (+.f64 (pow.f64 x 4) (pow.f64 x 3))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (pow.f64 x 4)))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18)) (pow.f64 (*.f64 3 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) 2))))) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))))) (*.f64 27 (pow.f64 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x)) 3)))))) (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))))) (*.f64 x (pow.f64 y 3))) (fma.f64 1/3 (*.f64 (/.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))))) x) (/.f64 (+.f64 (+.f64 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (+.f64 (*.f64 1/2 (+.f64 (pow.f64 x 4) (pow.f64 x 3))) (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3)))) (*.f64 2 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (pow.f64 x 4)))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18)) (pow.f64 (*.f64 3 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) 2)))) (*.f64 y y))) (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))) 1/18)) (*.f64 (/.f64 3 y) (/.f64 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x)) x))) (/.f64 (cbrt.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) x))))","1","(+.f64 1 (*.f64 1/3 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (log.f64 x))) x)))","(+.f64 1 (*.f64 1/3 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (fma.f64 2 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) (log.f64 x))))))","(fma.f64 1/3 (*.f64 x (-.f64 (fma.f64 2 (-.f64 (log.f64 x) (log.f64 y)) (log.f64 x)) (log.f64 y))) 1)","(+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (log.f64 x))) x)) (*.f64 1/3 (*.f64 (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) 2)) (*.f64 3 (/.f64 1 y)))) (pow.f64 x 2)))))","(+.f64 1 (*.f64 1/3 (+.f64 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (fma.f64 2 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) (log.f64 x)))) (*.f64 (*.f64 x x) (-.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) 9/2) (fma.f64 1/3 (pow.f64 (*.f64 3 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) 2) (/.f64 3 y)))))))","(fma.f64 1/3 (fma.f64 x (-.f64 (fma.f64 2 (-.f64 (log.f64 x) (log.f64 y)) (log.f64 x)) (log.f64 y)) (*.f64 (*.f64 x x) (-.f64 (*.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) 9/2) (fma.f64 1/3 (pow.f64 (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))) 2) (/.f64 3 y))))) 1)","(+.f64 (*.f64 1/3 (*.f64 (-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (*.f64 (-.f64 (*.f64 2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 2 (/.f64 1 y))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (+.f64 (*.f64 -4 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y)) (+.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) (-.f64 (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (/.f64 1 y)))) (+.f64 (*.f64 4/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 3)) (*.f64 -1 (/.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) y))))))))) (+.f64 (*.f64 2/3 (*.f64 (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (log.f64 x))) 2)) (*.f64 3 (/.f64 1 y)))))) (*.f64 1/27 (pow.f64 (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) 3)))) (pow.f64 x 3))) (+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (log.f64 x))) x)) (*.f64 1/3 (*.f64 (-.f64 (+.f64 (*.f64 4 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2)) (*.f64 1/2 (pow.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) 2))) (+.f64 (*.f64 1/3 (pow.f64 (+.f64 (*.f64 2 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x))) 2)) (*.f64 3 (/.f64 1 y)))) (pow.f64 x 2))))))","(fma.f64 1/3 (*.f64 (pow.f64 x 3) (-.f64 (+.f64 (/.f64 1 (*.f64 y y)) (+.f64 (/.f64 1/2 (*.f64 y y)) (fma.f64 (-.f64 (*.f64 2 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2)) (/.f64 2 y)) (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) (fma.f64 1/6 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 3) (fma.f64 -4 (/.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) y) (fma.f64 2 (*.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) (-.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) 1/2) (/.f64 1 y))) (fma.f64 4/3 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 3) (neg.f64 (/.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) y))))))))) (fma.f64 2/3 (*.f64 (*.f64 3 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) (-.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) 9/2) (fma.f64 1/3 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (fma.f64 2 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) (log.f64 x))) 2) (/.f64 3 y)))) (*.f64 1/27 (pow.f64 (*.f64 3 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) 3))))) (+.f64 1 (*.f64 1/3 (+.f64 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (fma.f64 2 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) (log.f64 x)))) (*.f64 (*.f64 x x) (-.f64 (*.f64 (pow.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)) 2) 9/2) (fma.f64 1/3 (pow.f64 (*.f64 3 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) 2) (/.f64 3 y))))))))","(fma.f64 1/3 (*.f64 (pow.f64 x 3) (-.f64 (+.f64 (*.f64 3/2 (/.f64 1 (*.f64 y y))) (fma.f64 (-.f64 (log.f64 x) (log.f64 y)) (fma.f64 2 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) (/.f64 -2 y)) (fma.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 3) 1/6 (fma.f64 -4 (/.f64 (-.f64 (log.f64 x) (log.f64 y)) y) (-.f64 (fma.f64 (*.f64 2 (-.f64 (log.f64 x) (log.f64 y))) (fma.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) 1/2 (/.f64 -1 y)) (*.f64 4/3 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 3))) (/.f64 (-.f64 (log.f64 x) (log.f64 y)) y)))))) (fma.f64 (*.f64 2/3 (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))) (-.f64 (*.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) 9/2) (fma.f64 1/3 (pow.f64 (-.f64 (fma.f64 2 (-.f64 (log.f64 x) (log.f64 y)) (log.f64 x)) (log.f64 y)) 2) (/.f64 3 y))) (*.f64 1/27 (pow.f64 (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))) 3))))) (fma.f64 1/3 (fma.f64 x (-.f64 (fma.f64 2 (-.f64 (log.f64 x) (log.f64 y)) (log.f64 x)) (log.f64 y)) (*.f64 (*.f64 x x) (-.f64 (*.f64 (pow.f64 (-.f64 (log.f64 x) (log.f64 y)) 2) 9/2) (fma.f64 1/3 (pow.f64 (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))) 2) (/.f64 3 y))))) 1))","(pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y))) 1/3)","(cbrt.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))))","(cbrt.f64 (exp.f64 (*.f64 y -3)))","(+.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y))) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) x))))","(+.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18)) (/.f64 (*.f64 3/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1))) x))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18)) (/.f64 (*.f64 3/2 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y))) x)) (cbrt.f64 (exp.f64 (*.f64 y -3))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) 2)))) (pow.f64 x 2)))) (+.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y))) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) x)))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2)))) (/.f64 (-.f64 (fma.f64 (fma.f64 1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 1/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (pow.f64 (*.f64 (*.f64 y y) 1) 2)) (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 (pow.f64 (*.f64 (*.f64 y y) 1) 2) 1/8))))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18)) (pow.f64 (*.f64 3/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1))) 2)))) (*.f64 x x))) (+.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18)) (/.f64 (*.f64 3/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1))) x)))))","(fma.f64 1/3 (*.f64 (/.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3))))) x) (/.f64 (+.f64 (fma.f64 (fma.f64 1/3 (*.f64 -2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y -3)) (fma.f64 1/2 (*.f64 (exp.f64 (*.f64 y -3)) (pow.f64 y 4)) (*.f64 (exp.f64 (*.f64 y -3)) (fma.f64 (*.f64 -2 (pow.f64 y 3)) 1/6 (*.f64 (pow.f64 y 4) 1/8))))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18)) (pow.f64 (*.f64 3/2 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y))) 2)))) x)) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18)) (/.f64 (*.f64 3/2 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y))) x)) (cbrt.f64 (exp.f64 (*.f64 y -3)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) 2)))) (pow.f64 x 2)))) (+.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y))) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) x))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (+.f64 (*.f64 1/12 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))))) (+.f64 (*.f64 (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))))) (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) (*.f64 1/2 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 5) (pow.f64 (exp.f64 (*.f64 -1 y)) 5))) 1/9) (*.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 2))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (pow.f64 (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) 3))))) (pow.f64 x 3)))))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2)))) (/.f64 (-.f64 (fma.f64 (fma.f64 1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 1/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (pow.f64 (*.f64 (*.f64 y y) 1) 2)) (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 (pow.f64 (*.f64 (*.f64 y y) 1) 2) 1/8))))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18)) (pow.f64 (*.f64 3/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1))) 2)))) (*.f64 x x))) (+.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) (*.f64 1/3 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18)) (/.f64 (*.f64 3/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1))) x)) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2)))) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 (pow.f64 (*.f64 (*.f64 y y) 1) 2) 1/8)))) (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 1/6 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (fma.f64 1/12 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30))) (*.f64 1/3 (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4))))))) (fma.f64 (fma.f64 1/12 (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4))) (fma.f64 1/48 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (*.f64 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30))) 1/24))) (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 1/2 (*.f64 (fma.f64 1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1))))))) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 5) (pow.f64 (exp.f64 (neg.f64 y)) 5))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 5) (pow.f64 (exp.f64 (neg.f64 y)) 5))) 1/18)) (*.f64 (*.f64 3/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1))) (-.f64 (fma.f64 (fma.f64 1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 1/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (pow.f64 (*.f64 (*.f64 y y) 1) 2)) (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 1/6 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 (pow.f64 (*.f64 (*.f64 y y) 1) 2) 1/8))))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18)) (pow.f64 (*.f64 3/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1))) 2)))))) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2)))) (pow.f64 (*.f64 3/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1))) 3))))) (pow.f64 x 3)))))))","(fma.f64 1/3 (*.f64 (/.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3))))) x) (/.f64 (+.f64 (fma.f64 (fma.f64 1/3 (*.f64 -2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y -3)) (fma.f64 1/2 (*.f64 (exp.f64 (*.f64 y -3)) (pow.f64 y 4)) (*.f64 (exp.f64 (*.f64 y -3)) (fma.f64 (*.f64 -2 (pow.f64 y 3)) 1/6 (*.f64 (pow.f64 y 4) 1/8))))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18)) (pow.f64 (*.f64 3/2 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y))) 2)))) x)) (fma.f64 1/3 (fma.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18)) (/.f64 (*.f64 3/2 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y))) x) (/.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3))))) (/.f64 (pow.f64 x 3) (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 y -3)) (+.f64 (*.f64 (*.f64 y y) (fma.f64 (*.f64 -2 (pow.f64 y 3)) 1/6 (*.f64 (pow.f64 y 4) 1/8))) (fma.f64 1/6 (pow.f64 (*.f64 y y) 3) (fma.f64 1/3 (*.f64 (*.f64 y y) (*.f64 -2 (pow.f64 y 3))) (*.f64 1/12 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) 18))))))) (fma.f64 (exp.f64 (*.f64 y -3)) (fma.f64 1/12 (*.f64 (*.f64 y y) (*.f64 -2 (pow.f64 y 3))) (fma.f64 (pow.f64 (*.f64 y y) 3) 1/48 (*.f64 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) 18)) 1/24))) (*.f64 1/2 (*.f64 (fma.f64 1/3 (*.f64 -2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4))) (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)))))) (fma.f64 2/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 5) (pow.f64 (exp.f64 (neg.f64 y)) 5))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 5) (pow.f64 (exp.f64 (neg.f64 y)) 5))) 1/18)) (*.f64 3/2 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)))) (+.f64 (fma.f64 (fma.f64 1/3 (*.f64 -2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4))) (exp.f64 (*.f64 y -3)) (fma.f64 1/2 (*.f64 (exp.f64 (*.f64 y -3)) (pow.f64 y 4)) (*.f64 (exp.f64 (*.f64 y -3)) (fma.f64 (*.f64 -2 (pow.f64 y 3)) 1/6 (*.f64 (pow.f64 y 4) 1/8))))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18)) (pow.f64 (*.f64 3/2 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y))) 2))))) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3))))) (pow.f64 (*.f64 3/2 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y))) 3)))))))) (cbrt.f64 (exp.f64 (*.f64 y -3)))))","(pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y))) 1/3)","(cbrt.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))))","(cbrt.f64 (exp.f64 (*.f64 y -3)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) x))) (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y))) 1/3))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18)) (/.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1)) -3/2) x)) (cbrt.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18)) (/.f64 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)) (/.f64 x -3/2))) (cbrt.f64 (exp.f64 (*.f64 y -3))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) x))) (+.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y))) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 2)))) (pow.f64 x 2))))))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18)) (/.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1)) -3/2) x)) (+.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2)))) (/.f64 (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) -1/6))) (-.f64 (fma.f64 1/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (pow.f64 (*.f64 (*.f64 y y) 1) 2)) (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 -1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18)) (pow.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1)) -3/2) 2))))) (*.f64 x x))))))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18)) (/.f64 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)) (/.f64 x -3/2))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3))))) (/.f64 (-.f64 (fma.f64 (exp.f64 (*.f64 y -3)) (fma.f64 (*.f64 2 (pow.f64 y 3)) -1/6 (*.f64 (pow.f64 y 4) 1/8)) (fma.f64 1/2 (*.f64 (exp.f64 (*.f64 y -3)) (pow.f64 y 4)) (*.f64 (exp.f64 (*.f64 y -3)) (fma.f64 -1/3 (*.f64 2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4)))))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18))) (pow.f64 (*.f64 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)) -3/2) 2))) (*.f64 x x))) (cbrt.f64 (exp.f64 (*.f64 y -3)))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) x))) (+.f64 (*.f64 -1/3 (*.f64 (/.f64 (-.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (*.f64 (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) (+.f64 (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (*.f64 (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/24 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/12 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/12 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 -1/6 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3))))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 5) (pow.f64 (exp.f64 (*.f64 -1 y)) 5))) 1/9) (*.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 2)))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 3))))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3))) (+.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y))) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1 y)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)) (*.f64 -1/6 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3)))))))) (+.f64 (*.f64 1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2)))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (exp.f64 (*.f64 -1 y)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 -1/2 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (exp.f64 (*.f64 -1 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))))) 2)))) (pow.f64 x 2)))))))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2))) 1/18)) (/.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1)) -3/2) x)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2)))) (/.f64 (-.f64 (fma.f64 -1 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) -1/6)))) (fma.f64 -1/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 -1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (*.f64 (pow.f64 (exp.f64 -2) y) (+.f64 (*.f64 (exp.f64 (neg.f64 y)) (fma.f64 -1/24 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30))) (fma.f64 -1/48 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (*.f64 1/12 (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8))))))) (*.f64 (fma.f64 -1/12 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30))) (fma.f64 1/3 (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8))) (*.f64 (pow.f64 (*.f64 (*.f64 y y) 1) 3) -1/6))) (exp.f64 (neg.f64 y))))))) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 5) (pow.f64 (exp.f64 (neg.f64 y)) 5))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 5) (pow.f64 (exp.f64 (neg.f64 y)) 5))) 1/18)) (*.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1)) -3/2) (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) -1/6))) (-.f64 (fma.f64 1/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (pow.f64 (*.f64 (*.f64 y y) 1) 2)) (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 -1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18)) (pow.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1)) -3/2) 2))))))) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2)))) (pow.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1)) -3/2) 3))))) (pow.f64 x 3))) (+.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (exp.f64 (neg.f64 y)) 2)))) (/.f64 (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 1/8 (pow.f64 (*.f64 (*.f64 y y) 1) 2) (*.f64 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) -1/6))) (-.f64 (fma.f64 1/2 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (pow.f64 (*.f64 (*.f64 y y) 1) 2)) (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (fma.f64 -1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 8)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y)))) 1/18)) (pow.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 y -2) (neg.f64 y))) (*.f64 (*.f64 y y) 1)) -3/2) 2))))) (*.f64 x x)))))))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3)))) 1/18)) (/.f64 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)) (/.f64 x -3/2))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3))))) (/.f64 (-.f64 (-.f64 (fma.f64 -1/2 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 (*.f64 y y) (fma.f64 -1/3 (*.f64 2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4))))) (*.f64 (exp.f64 (*.f64 y -3)) (+.f64 (fma.f64 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) 18)) -1/12 (fma.f64 (*.f64 1/3 (*.f64 2 (pow.f64 y 3))) (*.f64 y y) (*.f64 (pow.f64 (*.f64 y y) 3) -1/6))) (fma.f64 (fma.f64 -12 (pow.f64 y 4) (*.f64 (pow.f64 y 4) 18)) -1/24 (fma.f64 (pow.f64 (*.f64 y y) 3) -1/48 (*.f64 (*.f64 1/12 (*.f64 2 (pow.f64 y 3))) (*.f64 y y))))))) (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 (*.f64 y y) (fma.f64 (*.f64 2 (pow.f64 y 3)) -1/6 (*.f64 (pow.f64 y 4) 1/8))))) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 5) (pow.f64 (exp.f64 (neg.f64 y)) 5))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 5) (pow.f64 (exp.f64 (neg.f64 y)) 5))) 1/18)) (*.f64 (*.f64 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)) -3/2) (-.f64 (fma.f64 (exp.f64 (*.f64 y -3)) (fma.f64 (*.f64 2 (pow.f64 y 3)) -1/6 (*.f64 (pow.f64 y 4) 1/8)) (fma.f64 1/2 (*.f64 (exp.f64 (*.f64 y -3)) (pow.f64 y 4)) (*.f64 (exp.f64 (*.f64 y -3)) (fma.f64 -1/3 (*.f64 2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4)))))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18))) (pow.f64 (*.f64 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)) -3/2) 2))))) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3))))) (pow.f64 (*.f64 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)) -3/2) 3))))) (pow.f64 x 3))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 y -3)) (exp.f64 (*.f64 y -3))))) (/.f64 (-.f64 (fma.f64 (exp.f64 (*.f64 y -3)) (fma.f64 (*.f64 2 (pow.f64 y 3)) -1/6 (*.f64 (pow.f64 y 4) 1/8)) (fma.f64 1/2 (*.f64 (exp.f64 (*.f64 y -3)) (pow.f64 y 4)) (*.f64 (exp.f64 (*.f64 y -3)) (fma.f64 -1/3 (*.f64 2 (pow.f64 y 3)) (*.f64 1/2 (pow.f64 y 4)))))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 y -3))) 1/18))) (pow.f64 (*.f64 (*.f64 (exp.f64 (*.f64 y -3)) (*.f64 y y)) -3/2) 2))) (*.f64 x x))) (cbrt.f64 (exp.f64 (*.f64 y -3))))))","1","(+.f64 1 (*.f64 -1 y))","(+.f64 1 (neg.f64 y))","(-.f64 1 y)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 2) (+.f64 3/2 (*.f64 3/2 (/.f64 1 x))))) (+.f64 1 (*.f64 -1 y)))","(fma.f64 1/3 (*.f64 (*.f64 y y) (+.f64 3/2 (/.f64 3/2 x))) (+.f64 1 (neg.f64 y)))","(fma.f64 (*.f64 1/3 (*.f64 y y)) (+.f64 3/2 (/.f64 3/2 x)) (-.f64 1 y))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 2) (+.f64 3/2 (*.f64 3/2 (/.f64 1 x))))) (+.f64 1 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 3) (-.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 2))) (+.f64 1/6 (*.f64 1/2 (/.f64 1 x))))) (+.f64 (*.f64 -2 (+.f64 1/2 (*.f64 1/2 (/.f64 1 x)))) (+.f64 1 (+.f64 (*.f64 -1 (+.f64 4/3 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2/3 (/.f64 1 (pow.f64 x 2)))))) (*.f64 -1 (+.f64 2 (/.f64 1 x))))))) (*.f64 -2 (+.f64 3/2 (*.f64 3/2 (/.f64 1 x))))))) (*.f64 -1 y))))","(fma.f64 1/3 (*.f64 (*.f64 y y) (+.f64 3/2 (/.f64 3/2 x))) (+.f64 1 (fma.f64 1/3 (*.f64 (pow.f64 y 3) (+.f64 (fma.f64 -1 (+.f64 (/.f64 1/2 x) (+.f64 1/6 (/.f64 1/3 (*.f64 x x)))) (fma.f64 -2 (+.f64 1/2 (/.f64 1/2 x)) (+.f64 1 (*.f64 -1 (+.f64 (+.f64 4/3 (+.f64 (/.f64 2 x) (/.f64 2/3 (*.f64 x x)))) (+.f64 2 (/.f64 1 x))))))) (*.f64 2 (+.f64 3/2 (/.f64 3/2 x))))) (neg.f64 y))))","(+.f64 (fma.f64 1/3 (*.f64 (*.f64 y y) (+.f64 3/2 (/.f64 3/2 x))) 1) (-.f64 (*.f64 (*.f64 1/3 (pow.f64 y 3)) (-.f64 (-.f64 (+.f64 (+.f64 (+.f64 -1 (/.f64 -1 x)) 1) (-.f64 (+.f64 -2 (/.f64 -1 x)) (+.f64 (+.f64 4/3 (/.f64 2 x)) (/.f64 2/3 (*.f64 x x))))) (+.f64 (/.f64 1/2 x) (+.f64 1/6 (/.f64 (/.f64 1/3 x) x)))) (+.f64 -3 (/.f64 -3 x)))) y))","(pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3)","(cbrt.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))))","(cbrt.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) y))) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2))) 1/18)) (/.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (*.f64 x x)) -3) y)) (cbrt.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))))) 1/18)) (/.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (*.f64 x x)) (/.f64 y -3))) (cbrt.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) y))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 4)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) 2)))) (pow.f64 y 2)))) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3)))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2))) 1/18)) (/.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (*.f64 x x)) -3) y)) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2)))) (/.f64 (+.f64 (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4)))) (fma.f64 2 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (pow.f64 x 4)) (*.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))))))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))))) 1/18)) (pow.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (*.f64 x x)) -3) 2)))) (*.f64 y y))) (cbrt.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))))) 1/18)) (/.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (*.f64 x x)) (/.f64 y -3))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))))) (/.f64 (-.f64 (fma.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3)) (fma.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2) (*.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) (*.f64 1/2 (+.f64 (pow.f64 x 4) (pow.f64 x 3)))) (*.f64 2 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (pow.f64 x 4))))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))) 1/18))) (pow.f64 (*.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (*.f64 x x)) -3) 2))) (*.f64 y y))) (cbrt.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/9) (/.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) y))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 -4/3 (pow.f64 x 6)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)) (*.f64 -2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))))))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 x 6)) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 -6 (pow.f64 x 3)) (*.f64 6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 5) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 5))) 1/9) (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 4)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) 2)))) (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/3) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) 3))))) (pow.f64 y 3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 4)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)))) 1/9) (pow.f64 (+.f64 (*.f64 -1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2)))) (*.f64 -2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x)) (pow.f64 x 2))))) 2)))) (pow.f64 y 2)))) (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 x)) x))) 1/3))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2))) 1/18)) (/.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (*.f64 x x)) -3) y)) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2)))) (/.f64 (-.f64 (fma.f64 -2 (*.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 (*.f64 (*.f64 x x) (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x)) (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))))) (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (fma.f64 -4/3 (pow.f64 x 6) (fma.f64 1/3 (*.f64 x (fma.f64 -2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0))) (*.f64 -2 (*.f64 (pow.f64 x 3) (*.f64 (*.f64 x x) 1)))))) (fma.f64 -1 (*.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4))) (*.f64 (*.f64 x x) (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x)))) (*.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) (fma.f64 -1/6 (pow.f64 x 6) (fma.f64 -1/2 (*.f64 (pow.f64 x 3) (*.f64 (*.f64 x x) 1)) (*.f64 1/6 (*.f64 x (fma.f64 -2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0))))))))))) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 5) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 5))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 5) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 5))) 1/18)) (*.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (*.f64 x x)) -3) (-.f64 (fma.f64 (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))) (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4)))) (*.f64 2 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (pow.f64 x 4))))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))))) 1/18)) (pow.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (*.f64 x x)) -3) 2)))))) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2)))) (pow.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (*.f64 x x)) -3) 3))))) (pow.f64 y 3))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) 2) (pow.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) 2)))) (/.f64 (+.f64 (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4)))) (fma.f64 2 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (pow.f64 x 4)) (*.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 (pow.f64 (exp.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))) x) (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))))))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))))) 1/18)) (pow.f64 (*.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x))))) (*.f64 x x)) -3) 2)))) (*.f64 y y))) (cbrt.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))) (*.f64 x (+.f64 (neg.f64 (log.f64 y)) (log.f64 x)))))))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))))) 1/18)) (/.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (*.f64 x x)) (/.f64 y -3))) (+.f64 (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))))))) (+.f64 (/.f64 (-.f64 (fma.f64 -2 (*.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2) (*.f64 (*.f64 (*.f64 x x) (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x)) (*.f64 1/2 (+.f64 (pow.f64 x 4) (pow.f64 x 3))))) (fma.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (fma.f64 -4/3 (pow.f64 x 6) (fma.f64 1/3 (*.f64 x (*.f64 (pow.f64 x 3) -2)) (*.f64 (*.f64 -2 (*.f64 x x)) (pow.f64 x 3)))) (fma.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2) (*.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) (fma.f64 -1/6 (pow.f64 x 6) (fma.f64 1/6 (*.f64 x (*.f64 (pow.f64 x 3) -2)) (*.f64 (*.f64 (*.f64 x x) (pow.f64 x 3)) -1/2)))) (*.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2) (neg.f64 (*.f64 (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3)) (*.f64 (*.f64 x x) (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x)))))))) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2) 5) (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 5))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2) 5) (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 5))) 1/18)) (*.f64 (*.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (*.f64 x x)) -3) (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (+.f64 (*.f64 1/2 (+.f64 (pow.f64 x 4) (pow.f64 x 3))) (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3)))) (*.f64 2 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (pow.f64 x 4)))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))) 1/18))) (pow.f64 (*.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (*.f64 x x)) -3) 2))))) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))))) (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (*.f64 x x)) 3) -27))))) (pow.f64 y 3)) (/.f64 (-.f64 (fma.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3)) (fma.f64 (pow.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) 2) (*.f64 (pow.f64 (exp.f64 (-.f64 (log.f64 x) (log.f64 y))) x) (*.f64 1/2 (+.f64 (pow.f64 x 4) (pow.f64 x 3)))) (*.f64 2 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (pow.f64 x 4))))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y)))))) 1/18))) (pow.f64 (*.f64 (*.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))) (*.f64 x x)) -3) 2))) (*.f64 y y)))) (cbrt.f64 (exp.f64 (*.f64 x (*.f64 3 (-.f64 (log.f64 x) (log.f64 y))))))))","(pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3)","(cbrt.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))","(cbrt.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))","(+.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/9) (/.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) y))))","(+.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2)) 1/18)) (/.f64 (*.f64 3 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) y))))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))) 1/18)) (/.f64 3 (/.f64 y (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))))) (cbrt.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))))","(+.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/9) (/.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) y))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 4)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)))) 1/9) (pow.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) 2)))) (pow.f64 y 2))))))","(+.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2)) 1/18)) (/.f64 (*.f64 3 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) y)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2))) (/.f64 (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4)))) (-.f64 (fma.f64 (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))) (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 2 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (pow.f64 x 4)))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18)) (pow.f64 (*.f64 3 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) 2))))) (*.f64 y y))))))","(+.f64 (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))) 1/18)) (/.f64 3 (/.f64 y (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))))) (cbrt.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))))) (/.f64 (+.f64 (+.f64 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (+.f64 (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3)) (*.f64 1/2 (+.f64 (pow.f64 x 4) (pow.f64 x 3))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (pow.f64 x 4)))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18)) (pow.f64 (*.f64 3 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) 2)))) (*.f64 y y))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))) (pow.f64 x 2)))) (+.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3))) (+.f64 (*.f64 1/6 (pow.f64 x 6)) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)))) (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))))) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (pow.f64 x 2))))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 1/3 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (+.f64 (*.f64 6 (pow.f64 x 3)) (*.f64 -6 (pow.f64 x 3)))) x)) (+.f64 (*.f64 4/3 (pow.f64 x 6)) (*.f64 2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) (pow.f64 x 3)))))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 5) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 5))) 1/9) (*.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x)) (*.f64 1/2 (pow.f64 x 4))))) (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 4)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)))) 1/9) (pow.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) 2))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2) (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2))) 1/3) (pow.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) 3))))) (pow.f64 y 3)))) (+.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/9) (/.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) y))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) 2) (pow.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) 2))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (+.f64 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x) (*.f64 2 (pow.f64 x 4))))) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 x 4)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 (pow.f64 x 2)) (*.f64 -1 (pow.f64 x 2))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 4)))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)))) 1/9) (pow.f64 (+.f64 (*.f64 2 (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) (*.f64 (exp.f64 (*.f64 2 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x))) (*.f64 (exp.f64 (*.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (*.f64 -1 x))) x)) (pow.f64 x 2)))) 2)))) (pow.f64 y 2)))))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2))) (/.f64 (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 (*.f64 x x) (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4))))) (-.f64 (fma.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) (*.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (fma.f64 1/2 (*.f64 (pow.f64 x 3) (*.f64 (*.f64 x x) 1)) (*.f64 1/6 (+.f64 (pow.f64 x 6) (*.f64 x (fma.f64 2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0))))))) (fma.f64 2 (*.f64 (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))) (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (fma.f64 1/3 (*.f64 x (fma.f64 2 (pow.f64 x 3) (*.f64 (pow.f64 x 3) 0))) (fma.f64 4/3 (pow.f64 x 6) (*.f64 2 (*.f64 (pow.f64 x 3) (*.f64 (*.f64 x x) 1)))))))) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 5) (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 5))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 5) (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 5))) 1/18)) (*.f64 (*.f64 3 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) (-.f64 (+.f64 (*.f64 (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))) (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4)))) (*.f64 2 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (pow.f64 x 4))))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18)) (pow.f64 (*.f64 3 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) 2)))))) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2))) (pow.f64 (*.f64 3 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) 3)))))) (pow.f64 y 3))) (+.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2)) 1/18)) (/.f64 (*.f64 3 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) y)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) x) 2)) (pow.f64 (pow.f64 (exp.f64 2) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) 2))) (/.f64 (+.f64 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (fma.f64 (*.f64 (*.f64 x x) 1) x (*.f64 2 (pow.f64 x 4)))) (-.f64 (fma.f64 (*.f64 1/2 (+.f64 (*.f64 x (*.f64 (*.f64 x x) 1)) (pow.f64 x 4))) (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 2 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (pow.f64 x 4)))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18) (pow.f64 (/.f64 1 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18)) (pow.f64 (*.f64 3 (*.f64 (exp.f64 (+.f64 (*.f64 2 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))) (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) 2))))) (*.f64 y y)))))))","(+.f64 (fma.f64 -1/3 (/.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))))) (/.f64 (pow.f64 y 3) (-.f64 (fma.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 (*.f64 x x) (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3))) (fma.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) (*.f64 (pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 2) (fma.f64 1/6 (+.f64 (pow.f64 x 6) (*.f64 x (*.f64 2 (pow.f64 x 3)))) (*.f64 1/2 (*.f64 (*.f64 x x) (pow.f64 x 3))))) (fma.f64 (*.f64 2 (*.f64 1/2 (+.f64 (pow.f64 x 4) (pow.f64 x 3)))) (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x)) (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (fma.f64 1/3 (*.f64 x (*.f64 2 (pow.f64 x 3))) (fma.f64 4/3 (pow.f64 x 6) (*.f64 (*.f64 2 (*.f64 x x)) (pow.f64 x 3)))))))) (fma.f64 2/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 2) 5)) (pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 5)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 2) 5)) (pow.f64 (pow.f64 (exp.f64 x) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))) 5)) 1/18)) (*.f64 3 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x)))) (+.f64 (+.f64 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (+.f64 (*.f64 1/2 (+.f64 (pow.f64 x 4) (pow.f64 x 3))) (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3)))) (*.f64 2 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (pow.f64 x 4)))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18)) (pow.f64 (*.f64 3 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) 2))))) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))))) (*.f64 27 (pow.f64 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x)) 3)))))))) (cbrt.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))))) (/.f64 (+.f64 (+.f64 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (+.f64 (fma.f64 2 (pow.f64 x 4) (pow.f64 x 3)) (*.f64 1/2 (+.f64 (pow.f64 x 4) (pow.f64 x 3))))) (*.f64 2 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (pow.f64 x 4)))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (exp.f64 (neg.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18) (pow.f64 (exp.f64 (neg.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x))))))) 1/18)) (pow.f64 (*.f64 3 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))) 2)))) (*.f64 y y))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))) 1/18) (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))))) 1/18)) (/.f64 3 (/.f64 y (*.f64 (exp.f64 (*.f64 3 (*.f64 x (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (neg.f64 x)))))) (*.f64 x x))))))))"]],"stop":[["node limit",1]],"time":116.97412109375,"type":"simplify"},{"compiler":[[27256,18402]],"time":260.744873046875,"type":"eval"},{"alts":[["(/.f64 (cbrt.f64 (exp.f64 (*.f64 y -3))) x)","fresh",17.67192780586077],["(/.f64 1 x)","done",9.946038350826402],["(fma.f64 1/3 (*.f64 (/.f64 (*.f64 y y) x) (+.f64 3/2 (/.f64 3/2 x))) (-.f64 (/.f64 1 x) (/.f64 y x)))","fresh",30.09904301033868],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x) (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)))) x)","next",13.966155962203125]],"compiler":[[9,7],[5,4],[22,15],[33,13],[9,7],[22,15],[33,13]],"count":[[292,4]],"kept":[{"done":[1,1],"fresh":[3,0],"new":[287,3],"picked":[1,0]}],"min-error":[0.00390625],"time":97.365966796875,"type":"prune"},{"compiler":[[143,13]],"locations":[["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x) (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)))) x)",0.01171875,true],["(pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)",1.3171443280693327,true],["(sqrt.f64 (/.f64 x (+.f64 x y)))",6.849444199790959,true],["(pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))",8.106140754289537,false]],"time":14.176025390625,"type":"localize"},{"count":[[3,26]],"series":[["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x) (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)))) x)","y","-inf",9.449951171875],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x) (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)))) x)","y","inf",8.494873046875],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x) (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)))) x)","y","0",1.619873046875],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x) (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)))) x)","x","-inf",7.5419921875],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x) (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)))) x)","x","inf",15.556884765625],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x) (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)))) x)","x","0",3.98486328125],["(pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)","y","-inf",1.8359375],["(pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)","y","inf",2.2548828125],["(pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)","y","0",4.783935546875],["(pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)","x","-inf",0.365966796875],["(pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)","x","inf",2.134033203125],["(pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)","x","0",1.338134765625],["(sqrt.f64 (/.f64 x (+.f64 x y)))","y","-inf",0.56396484375],["(sqrt.f64 (/.f64 x (+.f64 x y)))","y","inf",0.654052734375],["(sqrt.f64 (/.f64 x (+.f64 x y)))","y","0",0.3759765625],["(sqrt.f64 (/.f64 x (+.f64 x y)))","x","-inf",0.574951171875],["(sqrt.f64 (/.f64 x (+.f64 x y)))","x","inf",0.40185546875],["(sqrt.f64 (/.f64 x (+.f64 x y)))","x","0",0.84814453125]],"time":63.30712890625,"type":"series"},{"count":[[3,106]],"egraph":[[2,4541,32,0.026642084],[1,326,32,0.006076293],[0,14,34,0.000323084]],"inputs":[["(sqrt.f64 (/.f64 x (+.f64 x y)))","(pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x) (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)))) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (/.f64 x (+.f64 x y))))) (cbrt.f64 (exp.f64 (sqrt.f64 (/.f64 x (+.f64 x y))))))) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (/.f64 x (+.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (/.f64 x (+.f64 x y)))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (/.f64 x (+.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (/.f64 x (+.f64 x y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (cbrt.f64 (sqrt.f64 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (/.f64 x (+.f64 x y)))) (cbrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (sqrt.f64 (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (pow.f64 (/.f64 1 (+.f64 x y)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (/.f64 1 (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) 1/4) (pow.f64 (/.f64 x (+.f64 x y)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2)) (sqrt.f64 (cbrt.f64 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2) 1/2) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (sqrt.f64 (/.f64 (+.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (sqrt.f64 (+.f64 x y)) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 x) (sqrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (neg.f64 x)) (sqrt.f64 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sqrt.f64 x)) (neg.f64 (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 x (+.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (/.f64 x (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (+.f64 x y))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 x (+.f64 x y)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) (cbrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x (/.f64 0 0)) (pow.f64 (/.f64 1 (+.f64 x y)) (/.f64 0 0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 (/.f64 0 0)) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2) (/.f64 0 0)) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (/.f64 0 0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (/.f64 0 0)) (pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 x (+.f64 x y)))) (/.f64 0 0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 (/.f64 x 2)) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 1/4) (/.f64 x 2)) (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 1/4) (/.f64 x 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x x) (pow.f64 (/.f64 1 (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2) x) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) x) (pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 x (+.f64 x y)))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 1/4) (/.f64 0 0)) (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 1/4) (/.f64 0 0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x (/.f64 x 2)) (pow.f64 (/.f64 1 (+.f64 x y)) (/.f64 x 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2) (/.f64 x 2)) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (/.f64 x 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (/.f64 x 2)) (pow.f64 (cbrt.f64 (sqrt.f64 (/.f64 x (+.f64 x y)))) (/.f64 x 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 1/4) x) (pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 1/4) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (/.f64 (/.f64 x 2) 2)) (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (/.f64 (/.f64 x 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 x (+.f64 x y)))) (/.f64 x 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (+.f64 x y))) x))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 x (+.f64 x y)))) (/.f64 0 0)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (+.f64 x y))) (/.f64 x 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))) (cbrt.f64 (exp.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) 2) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (sqrt.f64 x)) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (/.f64 x (+.f64 x y)) x)) (/.f64 1 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (pow.f64 (/.f64 x (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) 1) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (cbrt.f64 x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (sqrt.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (pow.f64 (/.f64 x (+.f64 x y)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)) 1))))))"]],"rules":[["egg-rr",33],["egg-rr",39],["egg-rr",34]],"stop":[["node limit",1]],"time":51.114990234375,"type":"rewrite"},{"count":[[132,146]],"egraph":[[2,5687,3218,0.026528791],[1,1272,3596,0.010481375000000001],[0,329,3960,0.001950167]],"inputs":[["1","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1)","(+.f64 (*.f64 -1/2 (/.f64 y x)) (+.f64 1 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) (pow.f64 x 2)))))","(+.f64 (*.f64 -1/2 (/.f64 y x)) (+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 y 3) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))) (pow.f64 x 3))))))","1","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1)","(+.f64 (*.f64 -1/2 (/.f64 y x)) (+.f64 1 (*.f64 1/2 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 (pow.f64 x 2)) (pow.f64 (/.f64 -1/2 x) 2))))))","(+.f64 (*.f64 -1/2 (/.f64 y x)) (+.f64 1 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 (pow.f64 x 2)) (pow.f64 (/.f64 -1/2 x) 2)))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (pow.f64 x 2)) (pow.f64 (/.f64 -1/2 x) 2)) x)) (/.f64 1 (pow.f64 x 3))))))))","1","(exp.f64 (*.f64 -1/2 y))","(+.f64 (exp.f64 (*.f64 -1/2 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 y)) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))) x)))","(+.f64 (exp.f64 (*.f64 -1/2 y)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 y)) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))) x)) (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 y)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -1/4 (pow.f64 y 3)) (+.f64 (*.f64 -3 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)) (pow.f64 y 3))) (*.f64 -3/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2)))) (pow.f64 x 2))))","(+.f64 (exp.f64 (*.f64 -1/2 y)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 y)) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))) x)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 y)) (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) (+.f64 (*.f64 -1/4 (pow.f64 y 3)) (+.f64 (*.f64 -3 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)) (pow.f64 y 3))) (*.f64 -3/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 3)) (*.f64 1/24 (+.f64 (*.f64 -6 (*.f64 y (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)) (pow.f64 y 3)))) (+.f64 (*.f64 -3/8 (pow.f64 y 4)) (+.f64 (*.f64 -3 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) 2)) (+.f64 (*.f64 -12 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (pow.f64 y 3) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))))) (+.f64 (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))) 2) (*.f64 -1 (pow.f64 y 4))))) (*.f64 -3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) (pow.f64 y 2))))))))))) (pow.f64 x 3)) (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 y)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -1/4 (pow.f64 y 3)) (+.f64 (*.f64 -3 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)) (pow.f64 y 3))) (*.f64 -3/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2)))) (pow.f64 x 2)))))","1","(+.f64 (*.f64 -1/2 y) 1)","(+.f64 (*.f64 -1/2 y) (+.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1/8 (*.f64 1/2 (*.f64 (-.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 2))) (pow.f64 (/.f64 -1/2 x) 2)) x))))))","(+.f64 (*.f64 -1/2 y) (+.f64 1 (+.f64 (*.f64 (pow.f64 y 2) (+.f64 1/8 (*.f64 1/2 (*.f64 (-.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 2))) (pow.f64 (/.f64 -1/2 x) 2)) x)))) (*.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (-.f64 (+.f64 (*.f64 -3 (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (pow.f64 x 2)) (pow.f64 (/.f64 -1/2 x) 2)) x)) (/.f64 1 (pow.f64 x 3)))) (*.f64 3/2 (/.f64 (-.f64 (/.f64 1 (pow.f64 x 2)) (pow.f64 (/.f64 -1/2 x) 2)) x))) (*.f64 1/4 (/.f64 1 (pow.f64 x 3)))) x)) (*.f64 -1/4 (*.f64 (-.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 2))) (pow.f64 (/.f64 -1/2 x) 2)) x))) 1/48) (pow.f64 y 3)))))","(/.f64 1 x)","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) 1)) 1/3) (/.f64 1 x))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 4))) 1/9) (/.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))))) (pow.f64 x 2)))) (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) 1)) 1/3) (/.f64 1 x)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 4))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (exp.f64 (*.f64 -2 y)))) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -1/4 (pow.f64 y 3)) (+.f64 (*.f64 -3 (+.f64 (pow.f64 y 3) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)))) (*.f64 -3/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2))))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2))) 1/9) (pow.f64 (+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))))) 2)))) (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 4))) 1/9) (/.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))))) (pow.f64 x 2)))) (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) 1)) 1/3) (/.f64 1 x))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 4))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (exp.f64 (*.f64 -2 y)))) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -1/4 (pow.f64 y 3)) (+.f64 (*.f64 -3 (+.f64 (pow.f64 y 3) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)))) (*.f64 -3/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2))))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2))) 1/9) (pow.f64 (+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))))) 2)))) (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 4))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -1/4 (pow.f64 y 3)) (+.f64 (*.f64 -3 (+.f64 (pow.f64 y 3) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)))) (*.f64 -3/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) (+.f64 (*.f64 -1/4 (pow.f64 y 3)) (+.f64 (*.f64 -3 (+.f64 (pow.f64 y 3) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)))) (*.f64 -3/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 3)) (*.f64 1/24 (+.f64 (*.f64 -3/8 (pow.f64 y 4)) (+.f64 (*.f64 -3 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) 2)) (+.f64 (*.f64 -12 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)) (pow.f64 y 3)))) (+.f64 (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))) 2) (*.f64 -1 (pow.f64 y 4))))) (+.f64 (*.f64 -6 (*.f64 y (+.f64 (pow.f64 y 3) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))))) (*.f64 -3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) (pow.f64 y 2)))))))))))))) (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -1/4 (pow.f64 y 3)) (+.f64 (*.f64 -3 (+.f64 (pow.f64 y 3) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)))) (*.f64 -3/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2)))))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 1/12 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 5) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 10))) 1/9) (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (exp.f64 (*.f64 -2 y)))) (+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -1/4 (pow.f64 y 3)) (+.f64 (*.f64 -3 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)) (pow.f64 y 3))) (*.f64 -3/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2))))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2))) 1/9) (pow.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))))) 2)))) (+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 4) (pow.f64 (exp.f64 (*.f64 -2 y)) 2))) 1/3) (pow.f64 (+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))))) 3))))) (pow.f64 x 4)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 4))) 1/9) (/.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))))) (pow.f64 x 2)))) (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) 1)) 1/3) (/.f64 1 x)))))","(/.f64 1 x)","(+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 3/2 (+.f64 (*.f64 (-.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 2))) (pow.f64 (/.f64 -1/2 x) 2)) x) (/.f64 1 x))) (pow.f64 y 2)) x)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 3/2 (+.f64 (*.f64 (-.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 2))) (pow.f64 (/.f64 -1/2 x) 2)) x) (/.f64 1 x))) (pow.f64 y 2)) x)) (+.f64 (/.f64 1 x) (+.f64 (*.f64 -1 (/.f64 y x)) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 (+.f64 23/24 (+.f64 (*.f64 -1 (+.f64 4/3 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2/3 (/.f64 1 (pow.f64 x 2)))))) (+.f64 (*.f64 -1 (+.f64 2 (/.f64 1 x))) (+.f64 (*.f64 -1/2 (*.f64 (-.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 2))) (pow.f64 (/.f64 -1/2 x) 2)) x)) (+.f64 (*.f64 -2 (+.f64 1/2 (*.f64 (-.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 2))) (pow.f64 (/.f64 -1/2 x) 2)) x))) (+.f64 (*.f64 -1 (+.f64 1/8 (*.f64 1/2 (*.f64 (-.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 2))) (pow.f64 (/.f64 -1/2 x) 2)) x)))) (*.f64 1/3 (*.f64 (-.f64 (+.f64 (*.f64 -3 (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (pow.f64 x 2)) (pow.f64 (/.f64 -1/2 x) 2)) x)) (/.f64 1 (pow.f64 x 3)))) (*.f64 3/2 (/.f64 (-.f64 (/.f64 1 (pow.f64 x 2)) (pow.f64 (/.f64 -1/2 x) 2)) x))) (*.f64 1/4 (/.f64 1 (pow.f64 x 3)))) x)))))))) (*.f64 -2 (+.f64 3/2 (+.f64 (*.f64 (-.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 2))) (pow.f64 (/.f64 -1/2 x) 2)) x) (/.f64 1 x)))))) x)))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1)","(fma.f64 -1/2 (/.f64 y x) 1)","(+.f64 (*.f64 -1/2 (/.f64 y x)) (+.f64 1 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) (pow.f64 x 2)))))","(+.f64 (fma.f64 -1/2 (/.f64 y x) 1) (*.f64 -1/2 (/.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)) (*.f64 x x))))","(fma.f64 -1/2 (/.f64 y x) (fma.f64 -1/2 (/.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 x x)) 1))","(+.f64 (*.f64 -1/2 (/.f64 y x)) (+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) (pow.f64 x 2))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 y 3) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))) (pow.f64 x 3))))))","(+.f64 (fma.f64 -1/2 (/.f64 y x) 1) (*.f64 -1/2 (+.f64 (/.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)) (*.f64 x x)) (/.f64 (fma.f64 1/2 (*.f64 y (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) (pow.f64 y 3)) (pow.f64 x 3)))))","(fma.f64 -1/2 (/.f64 y x) (fma.f64 -1/2 (+.f64 (/.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 x x)) (/.f64 (fma.f64 1/2 (*.f64 y (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) (pow.f64 y 3)) (pow.f64 x 3))) 1))","1","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1)","(fma.f64 -1/2 (/.f64 y x) 1)","(+.f64 (*.f64 -1/2 (/.f64 y x)) (+.f64 1 (*.f64 1/2 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 (pow.f64 x 2)) (pow.f64 (/.f64 -1/2 x) 2))))))","(+.f64 (fma.f64 -1/2 (/.f64 y x) 1) (*.f64 (*.f64 1/2 (*.f64 y y)) (-.f64 (/.f64 1 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2))))","(fma.f64 -1/2 (/.f64 y x) (fma.f64 1/2 (*.f64 y (*.f64 y (-.f64 (/.f64 1 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)))) 1))","(+.f64 (*.f64 -1/2 (/.f64 y x)) (+.f64 1 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) (-.f64 (/.f64 1 (pow.f64 x 2)) (pow.f64 (/.f64 -1/2 x) 2)))) (*.f64 -1/2 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (pow.f64 x 2)) (pow.f64 (/.f64 -1/2 x) 2)) x)) (/.f64 1 (pow.f64 x 3))))))))","(+.f64 (fma.f64 -1/2 (/.f64 y x) 1) (fma.f64 1/2 (*.f64 (*.f64 y y) (-.f64 (/.f64 1 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2))) (*.f64 (*.f64 -1/2 (pow.f64 y 3)) (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)) x) (/.f64 1 (pow.f64 x 3))))))","(+.f64 (fma.f64 -1/2 (/.f64 y x) 1) (fma.f64 -1/2 (*.f64 (pow.f64 y 3) (fma.f64 -1/2 (-.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 (pow.f64 (/.f64 -1/2 x) 2) x)) (/.f64 1 (pow.f64 x 3)))) (*.f64 (*.f64 y y) (*.f64 (-.f64 (/.f64 1 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)) 1/2))))","1","(exp.f64 (*.f64 -1/2 y))","(pow.f64 (exp.f64 -1/2) y)","(+.f64 (exp.f64 (*.f64 -1/2 y)) (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 y)) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))) x)))","(+.f64 (pow.f64 (exp.f64 -1/2) y) (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 -1/2) y) (/.f64 x (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))))))))","(fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) y) x) (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)))) (pow.f64 (exp.f64 -1/2) y))","(fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) y) x) (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4)))) (pow.f64 (exp.f64 -1/2) y))","(+.f64 (exp.f64 (*.f64 -1/2 y)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 y)) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))) x)) (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 y)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -1/4 (pow.f64 y 3)) (+.f64 (*.f64 -3 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)) (pow.f64 y 3))) (*.f64 -3/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2)))) (pow.f64 x 2))))","(+.f64 (pow.f64 (exp.f64 -1/2) y) (fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 -1/2) y) (/.f64 x (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))))) (/.f64 (pow.f64 (exp.f64 -1/2) y) (/.f64 (*.f64 x x) (fma.f64 1/6 (fma.f64 -1/4 (pow.f64 y 3) (fma.f64 -3 (fma.f64 1/2 (*.f64 y (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) (pow.f64 y 3)) (*.f64 (*.f64 -3/2 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) y))) (*.f64 1/8 (pow.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) 2)))))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) y) x) (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)))) (pow.f64 (exp.f64 -1/2) y)) (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) y) (*.f64 x x)) (fma.f64 1/6 (fma.f64 (pow.f64 y 3) -1/4 (fma.f64 (*.f64 y (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) -3/2 (fma.f64 (pow.f64 y 3) -3 (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 y -3/2))))) (*.f64 1/8 (pow.f64 (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) 2)))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) y) x) (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4)))) (pow.f64 (exp.f64 -1/2) y)) (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) y) (*.f64 x x)) (fma.f64 1/6 (fma.f64 (pow.f64 y 3) -1/4 (fma.f64 (*.f64 y (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) -3/2 (fma.f64 (pow.f64 y 3) -3 (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 y -3/2))))) (*.f64 1/8 (pow.f64 (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))) 2)))))","(+.f64 (exp.f64 (*.f64 -1/2 y)) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 y)) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))) x)) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 y)) (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) (+.f64 (*.f64 -1/4 (pow.f64 y 3)) (+.f64 (*.f64 -3 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)) (pow.f64 y 3))) (*.f64 -3/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 3)) (*.f64 1/24 (+.f64 (*.f64 -6 (*.f64 y (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)) (pow.f64 y 3)))) (+.f64 (*.f64 -3/8 (pow.f64 y 4)) (+.f64 (*.f64 -3 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) 2)) (+.f64 (*.f64 -12 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (pow.f64 y 3) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))))) (+.f64 (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))) 2) (*.f64 -1 (pow.f64 y 4))))) (*.f64 -3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) (pow.f64 y 2))))))))))) (pow.f64 x 3)) (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 y)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -1/4 (pow.f64 y 3)) (+.f64 (*.f64 -3 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)) (pow.f64 y 3))) (*.f64 -3/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2)))) (pow.f64 x 2)))))","(+.f64 (pow.f64 (exp.f64 -1/2) y) (fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 -1/2) y) (/.f64 x (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))))) (+.f64 (/.f64 (pow.f64 (exp.f64 -1/2) y) (/.f64 (*.f64 x x) (fma.f64 1/6 (fma.f64 -1/4 (pow.f64 y 3) (fma.f64 -3 (fma.f64 1/2 (*.f64 y (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) (pow.f64 y 3)) (*.f64 (*.f64 -3/2 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) y))) (*.f64 1/8 (pow.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) 2))))) (/.f64 (pow.f64 (exp.f64 -1/2) y) (/.f64 (pow.f64 x 3) (fma.f64 1/12 (*.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) (fma.f64 -1/4 (pow.f64 y 3) (fma.f64 -3 (fma.f64 1/2 (*.f64 y (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) (pow.f64 y 3)) (*.f64 (*.f64 -3/2 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) y)))) (fma.f64 1/48 (pow.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) 3) (*.f64 1/24 (fma.f64 -6 (*.f64 y (fma.f64 1/2 (*.f64 y (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) (pow.f64 y 3))) (fma.f64 -3/8 (pow.f64 y 4) (fma.f64 -3 (pow.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)) 2) (fma.f64 -12 (fma.f64 1/2 (*.f64 y (fma.f64 1/2 (*.f64 y (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) (pow.f64 y 3))) (+.f64 (pow.f64 (*.f64 -1/2 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) 2) (neg.f64 (pow.f64 y 4)))) (*.f64 -3 (*.f64 (*.f64 y y) (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))))))))))))))))","(+.f64 (pow.f64 (exp.f64 -1/2) y) (+.f64 (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) y) x) (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)))) (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) y) (*.f64 x x)) (fma.f64 1/6 (fma.f64 (pow.f64 y 3) -1/4 (fma.f64 (*.f64 y (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) -3/2 (fma.f64 (pow.f64 y 3) -3 (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 y -3/2))))) (*.f64 1/8 (pow.f64 (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) 2))))) (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) y) (pow.f64 x 3)) (fma.f64 1/12 (*.f64 (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) (fma.f64 (pow.f64 y 3) -1/4 (fma.f64 (*.f64 y (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) -3/2 (fma.f64 (pow.f64 y 3) -3 (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 y -3/2)))))) (fma.f64 1/24 (fma.f64 -6 (fma.f64 y (*.f64 y (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) 1/2)) (pow.f64 y 4)) (fma.f64 -3/8 (pow.f64 y 4) (fma.f64 -3 (pow.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) 2) (fma.f64 -12 (-.f64 (fma.f64 1/2 (fma.f64 y (*.f64 y (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) 1/2)) (pow.f64 y 4)) (*.f64 (pow.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) 2) 1/4)) (pow.f64 y 4)) (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 (*.f64 y y) -3)))))) (*.f64 1/48 (pow.f64 (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) 3)))))))","(+.f64 (pow.f64 (exp.f64 -1/2) y) (+.f64 (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) y) x) (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4)))) (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) y) (*.f64 x x)) (fma.f64 1/6 (fma.f64 (pow.f64 y 3) -1/4 (fma.f64 (*.f64 y (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) -3/2 (fma.f64 (pow.f64 y 3) -3 (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 y -3/2))))) (*.f64 1/8 (pow.f64 (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))) 2))))) (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) y) (pow.f64 x 3)) (fma.f64 1/12 (*.f64 (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))) (fma.f64 (pow.f64 y 3) -1/4 (fma.f64 (*.f64 y (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) -3/2 (fma.f64 (pow.f64 y 3) -3 (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 y -3/2)))))) (fma.f64 1/24 (fma.f64 -6 (fma.f64 y (*.f64 y (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) 1/2)) (pow.f64 y 4)) (fma.f64 -3/8 (pow.f64 y 4) (fma.f64 -3 (pow.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) 2) (fma.f64 -12 (-.f64 (fma.f64 1/2 (fma.f64 y (*.f64 y (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) 1/2)) (pow.f64 y 4)) (*.f64 (pow.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) 2) 1/4)) (pow.f64 y 4)) (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 (*.f64 y y) -3)))))) (*.f64 1/48 (pow.f64 (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))) 3)))))))","1","(+.f64 (*.f64 -1/2 y) 1)","(fma.f64 -1/2 y 1)","(+.f64 (*.f64 -1/2 y) (+.f64 1 (*.f64 (pow.f64 y 2) (+.f64 1/8 (*.f64 1/2 (*.f64 (-.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 2))) (pow.f64 (/.f64 -1/2 x) 2)) x))))))","(+.f64 (fma.f64 -1/2 y 1) (*.f64 (*.f64 y y) (+.f64 1/8 (*.f64 1/2 (*.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)))))))","(fma.f64 -1/2 y (fma.f64 (*.f64 y y) (fma.f64 1/2 (*.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2))) 1/8) 1))","(+.f64 (*.f64 -1/2 y) (+.f64 1 (+.f64 (*.f64 (pow.f64 y 2) (+.f64 1/8 (*.f64 1/2 (*.f64 (-.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 2))) (pow.f64 (/.f64 -1/2 x) 2)) x)))) (*.f64 (-.f64 (+.f64 (*.f64 1/6 (*.f64 (-.f64 (+.f64 (*.f64 -3 (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (pow.f64 x 2)) (pow.f64 (/.f64 -1/2 x) 2)) x)) (/.f64 1 (pow.f64 x 3)))) (*.f64 3/2 (/.f64 (-.f64 (/.f64 1 (pow.f64 x 2)) (pow.f64 (/.f64 -1/2 x) 2)) x))) (*.f64 1/4 (/.f64 1 (pow.f64 x 3)))) x)) (*.f64 -1/4 (*.f64 (-.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 2))) (pow.f64 (/.f64 -1/2 x) 2)) x))) 1/48) (pow.f64 y 3)))))","(+.f64 (fma.f64 -1/2 y 1) (fma.f64 (*.f64 y y) (+.f64 1/8 (*.f64 1/2 (*.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2))))) (*.f64 (pow.f64 y 3) (+.f64 (fma.f64 1/6 (*.f64 x (-.f64 (fma.f64 -3 (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)) x) (/.f64 1 (pow.f64 x 3))) (*.f64 (/.f64 (-.f64 (/.f64 1 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)) x) 3/2)) (/.f64 1/4 (pow.f64 x 3)))) (*.f64 -1/4 (*.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2))))) -1/48))))","(+.f64 (fma.f64 -1/2 y 1) (fma.f64 (pow.f64 y 3) (fma.f64 1/6 (*.f64 x (fma.f64 (fma.f64 -1/2 (-.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 (pow.f64 (/.f64 -1/2 x) 2) x)) (/.f64 1 (pow.f64 x 3))) -3 (fma.f64 (-.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 (pow.f64 (/.f64 -1/2 x) 2) x)) 3/2 (/.f64 -1/4 (pow.f64 x 3))))) (fma.f64 (*.f64 -1/4 (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2))) x -1/48)) (*.f64 y (*.f64 y (fma.f64 1/2 (*.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2))) 1/8)))))","(+.f64 (fma.f64 -1/2 y 1) (fma.f64 (pow.f64 y 3) (fma.f64 x (+.f64 (*.f64 1/6 (fma.f64 (fma.f64 -1/2 (-.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 (pow.f64 (/.f64 -1/2 x) 2) x)) (/.f64 1 (pow.f64 x 3))) -3 (fma.f64 (-.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 (pow.f64 (/.f64 -1/2 x) 2) x)) 3/2 (/.f64 -1/4 (pow.f64 x 3))))) (*.f64 -1/4 (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)))) -1/48) (*.f64 y (*.f64 y (fma.f64 1/2 (*.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2))) 1/8)))))","(/.f64 1 x)","(*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) 1)) 1/3) (/.f64 1 x))","(*.f64 (/.f64 1 x) (cbrt.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2))))","(/.f64 (cbrt.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2))) x)","(/.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 y) -1) 3)) x)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 4))) 1/9) (/.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))))) (pow.f64 x 2)))) (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) 1)) 1/3) (/.f64 1 x)))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 4))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 4))) 1/18)) (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) (+.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (*.f64 y y) 1)) (*.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) (pow.f64 (exp.f64 -2) y)))) (*.f64 x x))) (*.f64 (/.f64 1 x) (cbrt.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 -2) (*.f64 2 y)) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 4))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 -2) (*.f64 2 y)) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 4))) 1/18)) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) x) (/.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (+.f64 (*.f64 y y) (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))))) x))) (/.f64 (cbrt.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2))) x))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 -2) y) 3)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 -2) y) 3)) 1/18)) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 y) -1) 3) x) (/.f64 (+.f64 (*.f64 y y) (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4)))) x))) (/.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 y) -1) 3)) x))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 4))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (exp.f64 (*.f64 -2 y)))) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -1/4 (pow.f64 y 3)) (+.f64 (*.f64 -3 (+.f64 (pow.f64 y 3) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)))) (*.f64 -3/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2))))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2))) 1/9) (pow.f64 (+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))))) 2)))) (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 4))) 1/9) (/.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))))) (pow.f64 x 2)))) (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) 1)) 1/3) (/.f64 1 x))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 4)))) (/.f64 (+.f64 (fma.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) (*.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) (*.f64 (*.f64 y y) 1))) (fma.f64 (fma.f64 1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (*.f64 (pow.f64 (exp.f64 -2) y) (fma.f64 1/4 (*.f64 (pow.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) 2) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (*.f64 (*.f64 2 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (fma.f64 1/6 (fma.f64 -1/4 (pow.f64 y 3) (fma.f64 -3 (fma.f64 1/2 (*.f64 y (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) (pow.f64 y 3)) (*.f64 (*.f64 -3/2 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) y))) (*.f64 1/8 (pow.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) 2)))))))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2))) 1/18)) (pow.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) (+.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (*.f64 y y) 1)) (*.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) (pow.f64 (exp.f64 -2) y)))) 2)))) (pow.f64 x 3))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 4))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 4))) 1/18)) (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) (+.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (*.f64 y y) 1)) (*.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) (pow.f64 (exp.f64 -2) y)))) (*.f64 x x))) (*.f64 (/.f64 1 x) (cbrt.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2))))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 -2) (*.f64 2 y)) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 4)))) (/.f64 (+.f64 (+.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (fma.f64 2 (*.f64 (fma.f64 1/6 (fma.f64 (pow.f64 y 3) -1/4 (fma.f64 (*.f64 y (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) -3/2 (fma.f64 (pow.f64 y 3) -3 (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 y -3/2))))) (*.f64 1/8 (pow.f64 (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) 2))) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (*.f64 (pow.f64 (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) 2) (*.f64 1/4 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2))))) (*.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (+.f64 (*.f64 (*.f64 y y) (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)))) (fma.f64 1/3 (*.f64 (pow.f64 y 3) -2) (*.f64 1/2 (pow.f64 y 4)))))) (*.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 y -2))) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) 1/18) (pow.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 y -2))) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) 1/18))) (pow.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) (+.f64 (*.f64 y y) (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)))))) 2))) (pow.f64 x 3))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 -2) (*.f64 2 y)) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 4))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 -2) (*.f64 2 y)) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 4))) 1/18)) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) x) (/.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (+.f64 (*.f64 y y) (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))))) x))) (/.f64 (cbrt.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2))) x)))","(fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 -2) y) 3))) (/.f64 (+.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 y) -1) 3) (+.f64 (*.f64 (*.f64 y y) (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4)))) (fma.f64 1/3 (*.f64 (pow.f64 y 3) -2) (*.f64 1/2 (pow.f64 y 4))))) (fma.f64 (pow.f64 (exp.f64 -2) y) (fma.f64 2 (*.f64 (fma.f64 1/6 (fma.f64 (pow.f64 y 3) -1/4 (fma.f64 (*.f64 y (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) -3/2 (fma.f64 (pow.f64 y 3) -3 (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 y -3/2))))) (*.f64 1/8 (pow.f64 (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))) 2))) (pow.f64 (exp.f64 y) -1)) (*.f64 (pow.f64 (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))) 2) (*.f64 1/4 (pow.f64 (exp.f64 y) -1)))) (*.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 y) -1) 3)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 y) -1) 3)) 1/18))) (pow.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 y) -1) 3) (+.f64 (*.f64 y y) (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))))) 2)))) (pow.f64 x 3))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 -2) y) 3)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 -2) y) 3)) 1/18)) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 y) -1) 3) x) (/.f64 (+.f64 (*.f64 y y) (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4)))) x))) (/.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 y) -1) 3)) x)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 4))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (exp.f64 (*.f64 -2 y)))) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -1/4 (pow.f64 y 3)) (+.f64 (*.f64 -3 (+.f64 (pow.f64 y 3) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)))) (*.f64 -3/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2))))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2))) 1/9) (pow.f64 (+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))))) 2)))) (pow.f64 x 3)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 4))) 1/3) (/.f64 (-.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 -1/4 (pow.f64 y 3)) (+.f64 (*.f64 -3 (+.f64 (pow.f64 y 3) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)))) (*.f64 -3/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 1/12 (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) (+.f64 (*.f64 -1/4 (pow.f64 y 3)) (+.f64 (*.f64 -3 (+.f64 (pow.f64 y 3) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)))) (*.f64 -3/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)))))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 3)) (*.f64 1/24 (+.f64 (*.f64 -3/8 (pow.f64 y 4)) (+.f64 (*.f64 -3 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) 2)) (+.f64 (*.f64 -12 (+.f64 (*.f64 1/2 (*.f64 y (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)) (pow.f64 y 3)))) (+.f64 (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))) 2) (*.f64 -1 (pow.f64 y 4))))) (+.f64 (*.f64 -6 (*.f64 y (+.f64 (pow.f64 y 3) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))))) (*.f64 -3 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) (pow.f64 y 2)))))))))))))) (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -1/4 (pow.f64 y 3)) (+.f64 (*.f64 -3 (+.f64 (pow.f64 y 3) (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)))) (*.f64 -3/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2)))))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 1/12 (+.f64 (*.f64 -12 (pow.f64 y 4)) (+.f64 (*.f64 48 (pow.f64 y 4)) (+.f64 (*.f64 -24 (pow.f64 y 4)) (*.f64 -6 (pow.f64 y 4)))))) (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 3)) (*.f64 1/3 (*.f64 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))))))))) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 5) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 10))) 1/9) (*.f64 (-.f64 (+.f64 (*.f64 (+.f64 (*.f64 1/3 (+.f64 (*.f64 -6 (pow.f64 y 3)) (+.f64 (*.f64 6 (pow.f64 y 3)) (*.f64 -2 (pow.f64 y 3))))) (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))) 2))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (exp.f64 (*.f64 -2 y)))) (+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2)))))) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 1/4 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2))) (*.f64 2 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -1/4 (pow.f64 y 3)) (+.f64 (*.f64 -3 (+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y)) (pow.f64 y 3))) (*.f64 -3/2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)) y))))) (*.f64 1/8 (pow.f64 (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))) 2))))))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (exp.f64 (*.f64 -2 y)) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2))) 1/9) (pow.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))))) 2)))) (+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2)))))))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 4) (pow.f64 (exp.f64 (*.f64 -2 y)) 2))) 1/3) (pow.f64 (+.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (*.f64 (exp.f64 (*.f64 -2 y)) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))))) 3))))) (pow.f64 x 4)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 (*.f64 -2 y)) 2) (pow.f64 (exp.f64 (*.f64 -1/2 y)) 4))) 1/9) (/.f64 (+.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 -1 (pow.f64 y 2)) (*.f64 2 (pow.f64 y 2))))) (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) (+.f64 (*.f64 -1/4 (pow.f64 y 2)) (*.f64 -1 (+.f64 (*.f64 -1 (pow.f64 y 2)) (pow.f64 (*.f64 -1/2 y) 2))))))) (pow.f64 x 2)))) (*.f64 (pow.f64 (*.f64 (exp.f64 (*.f64 -2 y)) (*.f64 (pow.f64 (exp.f64 (*.f64 -1/2 y)) 2) 1)) 1/3) (/.f64 1 x)))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 4)))) (/.f64 (+.f64 (fma.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) (*.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) (*.f64 (*.f64 y y) 1))) (fma.f64 (fma.f64 1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (*.f64 (pow.f64 (exp.f64 -2) y) (fma.f64 1/4 (*.f64 (pow.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) 2) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (*.f64 (*.f64 2 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (fma.f64 1/6 (fma.f64 -1/4 (pow.f64 y 3) (fma.f64 -3 (fma.f64 1/2 (*.f64 y (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) (pow.f64 y 3)) (*.f64 (*.f64 -3/2 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) y))) (*.f64 1/8 (pow.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) 2)))))))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2))) 1/18)) (pow.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) (+.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (*.f64 y y) 1)) (*.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) (pow.f64 (exp.f64 -2) y)))) 2)))) (pow.f64 x 3))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 4)))) (/.f64 (-.f64 (fma.f64 (pow.f64 (exp.f64 -2) y) (fma.f64 (fma.f64 1/6 (fma.f64 -1/4 (pow.f64 y 3) (fma.f64 -3 (fma.f64 1/2 (*.f64 y (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) (pow.f64 y 3)) (*.f64 (*.f64 -3/2 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) y))) (*.f64 1/8 (pow.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) 2))) (*.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (*.f64 (*.f64 2 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (fma.f64 1/12 (*.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) (fma.f64 -1/4 (pow.f64 y 3) (fma.f64 -3 (fma.f64 1/2 (*.f64 y (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) (pow.f64 y 3)) (*.f64 (*.f64 -3/2 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) y)))) (fma.f64 1/48 (pow.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) 3) (*.f64 1/24 (fma.f64 -3/8 (pow.f64 y 4) (fma.f64 -3 (pow.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)) 2) (fma.f64 -12 (fma.f64 1/2 (*.f64 y (fma.f64 1/2 (*.f64 y (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) (pow.f64 y 3))) (+.f64 (pow.f64 (*.f64 -1/2 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) 2) (neg.f64 (pow.f64 y 4)))) (fma.f64 -6 (*.f64 y (fma.f64 1/2 (*.f64 y (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) (pow.f64 y 3))) (*.f64 -3 (*.f64 (*.f64 y y) (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))))))))))))) (fma.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 1/4 (*.f64 (pow.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) 2) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (*.f64 (*.f64 2 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (fma.f64 1/6 (fma.f64 -1/4 (pow.f64 y 3) (fma.f64 -3 (fma.f64 1/2 (*.f64 y (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) (pow.f64 y 3)) (*.f64 (*.f64 -3/2 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) y))) (*.f64 1/8 (pow.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) 2)))))) (fma.f64 (fma.f64 1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (*.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2))) (*.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (fma.f64 1/12 (fma.f64 -12 (pow.f64 y 4) (fma.f64 48 (pow.f64 y 4) (*.f64 (pow.f64 y 4) -30))) (fma.f64 1/6 (pow.f64 (*.f64 (*.f64 y y) 1) 3) (*.f64 1/3 (*.f64 (*.f64 (*.f64 y y) 1) (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)))))))))) (fma.f64 2/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 -2) y) 5)) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 10)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 -2) y) 5)) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 10)) 1/18)) (+.f64 (fma.f64 (fma.f64 1/3 (fma.f64 -6 (pow.f64 y 3) (*.f64 (pow.f64 y 3) 4)) (*.f64 1/2 (pow.f64 (*.f64 (*.f64 y y) 1) 2))) (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (fma.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) (*.f64 (*.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) (pow.f64 (exp.f64 -2) y)) (*.f64 (*.f64 y y) 1)) (*.f64 (pow.f64 (exp.f64 -2) y) (fma.f64 1/4 (*.f64 (pow.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) 2) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (*.f64 (*.f64 2 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (fma.f64 1/6 (fma.f64 -1/4 (pow.f64 y 3) (fma.f64 -3 (fma.f64 1/2 (*.f64 y (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) (pow.f64 y 3)) (*.f64 (*.f64 -3/2 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2))) y))) (*.f64 1/8 (pow.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) 2)))))))) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2))) 1/18)) (pow.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) (+.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (*.f64 y y) 1)) (*.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) (pow.f64 (exp.f64 -2) y)))) 2))))) (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) (+.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (*.f64 y y) 1)) (*.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) (pow.f64 (exp.f64 -2) y))))) (*.f64 (*.f64 1/27 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 4))))) (pow.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) (+.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (*.f64 y y) 1)) (*.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) (pow.f64 (exp.f64 -2) y)))) 3)))) (pow.f64 x 4))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 4))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (pow.f64 (exp.f64 -2) y) 2) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 4))) 1/18)) (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) (+.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (*.f64 y y) 1)) (*.f64 (fma.f64 -1/4 (*.f64 y y) (neg.f64 (fma.f64 -1 (*.f64 y y) (pow.f64 (*.f64 -1/2 y) 2)))) (pow.f64 (exp.f64 -2) y)))) (*.f64 x x))) (*.f64 (/.f64 1 x) (cbrt.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)))))))","(+.f64 (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 -2) (*.f64 2 y)) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 4))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 -2) (*.f64 2 y)) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 4))) 1/18)) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) x) (/.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (+.f64 (*.f64 y y) (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))))) x))) (/.f64 (cbrt.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2))) x)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 -2) (*.f64 2 y)) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 4))))) (+.f64 (/.f64 (+.f64 (+.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (fma.f64 2 (*.f64 (fma.f64 1/6 (fma.f64 (pow.f64 y 3) -1/4 (fma.f64 (*.f64 y (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) -3/2 (fma.f64 (pow.f64 y 3) -3 (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 y -3/2))))) (*.f64 1/8 (pow.f64 (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) 2))) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (*.f64 (pow.f64 (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) 2) (*.f64 1/4 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2))))) (*.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (+.f64 (*.f64 (*.f64 y y) (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)))) (fma.f64 1/3 (*.f64 (pow.f64 y 3) -2) (*.f64 1/2 (pow.f64 y 4)))))) (*.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 y -2))) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) 1/18) (pow.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 y -2))) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) 1/18))) (pow.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) (+.f64 (*.f64 y y) (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)))))) 2))) (pow.f64 x 3)) (/.f64 (+.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (+.f64 (fma.f64 2 (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) (fma.f64 1/12 (*.f64 (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) (fma.f64 (pow.f64 y 3) -1/4 (fma.f64 (*.f64 y (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) -3/2 (fma.f64 (pow.f64 y 3) -3 (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 y -3/2)))))) (fma.f64 1/24 (fma.f64 -6 (fma.f64 y (*.f64 y (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) 1/2)) (pow.f64 y 4)) (fma.f64 -3/8 (pow.f64 y 4) (fma.f64 -3 (pow.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) 2) (fma.f64 -12 (-.f64 (fma.f64 1/2 (fma.f64 y (*.f64 y (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) 1/2)) (pow.f64 y 4)) (*.f64 (pow.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) 2) 1/4)) (pow.f64 y 4)) (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 (*.f64 y y) -3)))))) (*.f64 1/48 (pow.f64 (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) 3))))) (*.f64 (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) (*.f64 (fma.f64 1/6 (fma.f64 (pow.f64 y 3) -1/4 (fma.f64 (*.f64 y (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) -3/2 (fma.f64 (pow.f64 y 3) -3 (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 y -3/2))))) (*.f64 1/8 (pow.f64 (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) 2))) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)))) (*.f64 (*.f64 y y) (fma.f64 2 (*.f64 (fma.f64 1/6 (fma.f64 (pow.f64 y 3) -1/4 (fma.f64 (*.f64 y (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) -3/2 (fma.f64 (pow.f64 y 3) -3 (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 y -3/2))))) (*.f64 1/8 (pow.f64 (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) 2))) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (*.f64 (pow.f64 (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) 2) (*.f64 1/4 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2))))))) (-.f64 (fma.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) (fma.f64 1/12 (fma.f64 (pow.f64 y 4) -12 (*.f64 (pow.f64 y 4) 18)) (fma.f64 1/6 (pow.f64 (*.f64 y y) 3) (*.f64 (*.f64 (pow.f64 y 3) -2) (*.f64 1/3 (*.f64 y y)))))) (*.f64 (*.f64 (fma.f64 1/3 (*.f64 (pow.f64 y 3) -2) (*.f64 1/2 (pow.f64 y 4))) (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2))) (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))))) (fma.f64 2/3 (*.f64 (+.f64 (+.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (fma.f64 2 (*.f64 (fma.f64 1/6 (fma.f64 (pow.f64 y 3) -1/4 (fma.f64 (*.f64 y (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) -3/2 (fma.f64 (pow.f64 y 3) -3 (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 y -3/2))))) (*.f64 1/8 (pow.f64 (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) 2))) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (*.f64 (pow.f64 (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) 2) (*.f64 1/4 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2))))) (*.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) (+.f64 (*.f64 (*.f64 y y) (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)))) (fma.f64 1/3 (*.f64 (pow.f64 y 3) -2) (*.f64 1/2 (pow.f64 y 4)))))) (*.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 y -2))) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) 1/18) (pow.f64 (/.f64 (exp.f64 (neg.f64 (*.f64 y -2))) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2)) 1/18))) (pow.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) (+.f64 (*.f64 y y) (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)))))) 2))) (*.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) (+.f64 (*.f64 y y) (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)))))) (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 -2) y) 5)) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 10)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 -2) y) 5)) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 10)) 1/18)))) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (exp.f64 -2) (*.f64 2 y)) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 4)))) (*.f64 (pow.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (*.f64 (pow.f64 (pow.f64 (exp.f64 -1/2) y) 2) (+.f64 (*.f64 y y) (-.f64 (*.f64 y (*.f64 y -1/4)) (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)))))) 3) 1/27))))) (pow.f64 x 4)))))","(+.f64 (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 -2) y) 3)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 -2) y) 3)) 1/18)) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 y) -1) 3) x) (/.f64 (+.f64 (*.f64 y y) (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4)))) x))) (/.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 y) -1) 3)) x)) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 -2) y) 3)))) (+.f64 (/.f64 (+.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 y) -1) 3) (+.f64 (*.f64 (*.f64 y y) (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4)))) (fma.f64 1/3 (*.f64 (pow.f64 y 3) -2) (*.f64 1/2 (pow.f64 y 4))))) (fma.f64 (pow.f64 (exp.f64 -2) y) (fma.f64 2 (*.f64 (fma.f64 1/6 (fma.f64 (pow.f64 y 3) -1/4 (fma.f64 (*.f64 y (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) -3/2 (fma.f64 (pow.f64 y 3) -3 (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 y -3/2))))) (*.f64 1/8 (pow.f64 (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))) 2))) (pow.f64 (exp.f64 y) -1)) (*.f64 (pow.f64 (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))) 2) (*.f64 1/4 (pow.f64 (exp.f64 y) -1)))) (*.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 y) -1) 3)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 y) -1) 3)) 1/18))) (pow.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 y) -1) 3) (+.f64 (*.f64 y y) (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))))) 2)))) (pow.f64 x 3)) (/.f64 (+.f64 (*.f64 (pow.f64 (exp.f64 -2) y) (+.f64 (fma.f64 2 (*.f64 (pow.f64 (exp.f64 y) -1) (fma.f64 1/12 (*.f64 (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))) (fma.f64 (pow.f64 y 3) -1/4 (fma.f64 (*.f64 y (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) -3/2 (fma.f64 (pow.f64 y 3) -3 (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 y -3/2)))))) (fma.f64 1/24 (fma.f64 -6 (fma.f64 y (*.f64 y (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) 1/2)) (pow.f64 y 4)) (fma.f64 -3/8 (pow.f64 y 4) (fma.f64 -3 (pow.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) 2) (fma.f64 -12 (-.f64 (fma.f64 1/2 (fma.f64 y (*.f64 y (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) 1/2)) (pow.f64 y 4)) (*.f64 (pow.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) 2) 1/4)) (pow.f64 y 4)) (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 (*.f64 y y) -3)))))) (*.f64 1/48 (pow.f64 (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))) 3))))) (*.f64 (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))) (*.f64 (fma.f64 1/6 (fma.f64 (pow.f64 y 3) -1/4 (fma.f64 (*.f64 y (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) -3/2 (fma.f64 (pow.f64 y 3) -3 (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 y -3/2))))) (*.f64 1/8 (pow.f64 (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))) 2))) (pow.f64 (exp.f64 y) -1)))) (*.f64 (*.f64 y y) (fma.f64 2 (*.f64 (fma.f64 1/6 (fma.f64 (pow.f64 y 3) -1/4 (fma.f64 (*.f64 y (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) -3/2 (fma.f64 (pow.f64 y 3) -3 (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 y -3/2))))) (*.f64 1/8 (pow.f64 (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))) 2))) (pow.f64 (exp.f64 y) -1)) (*.f64 (pow.f64 (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))) 2) (*.f64 1/4 (pow.f64 (exp.f64 y) -1))))))) (-.f64 (fma.f64 (fma.f64 1/3 (*.f64 (pow.f64 y 3) -2) (*.f64 1/2 (pow.f64 y 4))) (*.f64 (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))) (pow.f64 (pow.f64 (exp.f64 y) -1) 3)) (*.f64 (pow.f64 (pow.f64 (exp.f64 y) -1) 3) (fma.f64 1/12 (fma.f64 (pow.f64 y 4) -12 (*.f64 (pow.f64 y 4) 18)) (fma.f64 1/6 (pow.f64 (*.f64 y y) 3) (*.f64 (*.f64 (pow.f64 y 3) -2) (*.f64 1/3 (*.f64 y y))))))) (fma.f64 2/3 (*.f64 (+.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 y) -1) 3) (+.f64 (*.f64 (*.f64 y y) (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4)))) (fma.f64 1/3 (*.f64 (pow.f64 y 3) -2) (*.f64 1/2 (pow.f64 y 4))))) (fma.f64 (pow.f64 (exp.f64 -2) y) (fma.f64 2 (*.f64 (fma.f64 1/6 (fma.f64 (pow.f64 y 3) -1/4 (fma.f64 (*.f64 y (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y))) -3/2 (fma.f64 (pow.f64 y 3) -3 (*.f64 (-.f64 (*.f64 (*.f64 y y) 1/4) (*.f64 y y)) (*.f64 y -3/2))))) (*.f64 1/8 (pow.f64 (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))) 2))) (pow.f64 (exp.f64 y) -1)) (*.f64 (pow.f64 (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))) 2) (*.f64 1/4 (pow.f64 (exp.f64 y) -1)))) (*.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 y) -1) 3)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 y) -1) 3)) 1/18))) (pow.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 y) -1) 3) (+.f64 (*.f64 y y) (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))))) 2)))) (*.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 y) -1) 3) (+.f64 (*.f64 y y) (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))))) (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 -2) y) 5)) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 10)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 -2) y) 5)) (pow.f64 (pow.f64 (exp.f64 -1/2) y) 10)) 1/18)))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (pow.f64 (exp.f64 -2) y) 3))) (*.f64 (pow.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 y) -1) 3) (+.f64 (*.f64 y y) (fma.f64 y (*.f64 y -1/4) (-.f64 (*.f64 y y) (*.f64 (*.f64 y y) 1/4))))) 3) 1/27))))) (pow.f64 x 4)))))","(/.f64 1 x)","(+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 1 x) (neg.f64 (/.f64 y x)))","(-.f64 (/.f64 1 x) (/.f64 y x))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 3/2 (+.f64 (*.f64 (-.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 2))) (pow.f64 (/.f64 -1/2 x) 2)) x) (/.f64 1 x))) (pow.f64 y 2)) x)) (+.f64 (/.f64 1 x) (*.f64 -1 (/.f64 y x))))","(fma.f64 1/3 (/.f64 (+.f64 3/2 (fma.f64 (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)) x (/.f64 1 x))) (/.f64 x (*.f64 y y))) (+.f64 (/.f64 1 x) (neg.f64 (/.f64 y x))))","(fma.f64 1/3 (*.f64 (/.f64 (+.f64 3/2 (fma.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)) (/.f64 1 x))) x) (*.f64 y y)) (-.f64 (/.f64 1 x) (/.f64 y x)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 3/2 (+.f64 (*.f64 (-.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 2))) (pow.f64 (/.f64 -1/2 x) 2)) x) (/.f64 1 x))) (pow.f64 y 2)) x)) (+.f64 (/.f64 1 x) (+.f64 (*.f64 -1 (/.f64 y x)) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 (+.f64 23/24 (+.f64 (*.f64 -1 (+.f64 4/3 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2/3 (/.f64 1 (pow.f64 x 2)))))) (+.f64 (*.f64 -1 (+.f64 2 (/.f64 1 x))) (+.f64 (*.f64 -1/2 (*.f64 (-.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 2))) (pow.f64 (/.f64 -1/2 x) 2)) x)) (+.f64 (*.f64 -2 (+.f64 1/2 (*.f64 (-.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 2))) (pow.f64 (/.f64 -1/2 x) 2)) x))) (+.f64 (*.f64 -1 (+.f64 1/8 (*.f64 1/2 (*.f64 (-.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 2))) (pow.f64 (/.f64 -1/2 x) 2)) x)))) (*.f64 1/3 (*.f64 (-.f64 (+.f64 (*.f64 -3 (+.f64 (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (pow.f64 x 2)) (pow.f64 (/.f64 -1/2 x) 2)) x)) (/.f64 1 (pow.f64 x 3)))) (*.f64 3/2 (/.f64 (-.f64 (/.f64 1 (pow.f64 x 2)) (pow.f64 (/.f64 -1/2 x) 2)) x))) (*.f64 1/4 (/.f64 1 (pow.f64 x 3)))) x)))))))) (*.f64 -2 (+.f64 3/2 (+.f64 (*.f64 (-.f64 (*.f64 3/4 (/.f64 1 (pow.f64 x 2))) (pow.f64 (/.f64 -1/2 x) 2)) x) (/.f64 1 x)))))) x)))))","(fma.f64 1/3 (/.f64 (+.f64 3/2 (fma.f64 (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)) x (/.f64 1 x))) (/.f64 x (*.f64 y y))) (+.f64 (/.f64 1 x) (fma.f64 -1 (/.f64 y x) (*.f64 1/3 (/.f64 (pow.f64 y 3) (/.f64 x (+.f64 23/24 (-.f64 (fma.f64 -1 (+.f64 4/3 (+.f64 (/.f64 2 x) (/.f64 2/3 (*.f64 x x)))) (fma.f64 -1 (+.f64 2 (/.f64 1 x)) (fma.f64 -1/2 (*.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2))) (fma.f64 -2 (+.f64 1/2 (*.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)))) (fma.f64 -1 (+.f64 1/8 (*.f64 1/2 (*.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2))))) (*.f64 (*.f64 x (-.f64 (fma.f64 -3 (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)) x) (/.f64 1 (pow.f64 x 3))) (*.f64 (/.f64 (-.f64 (/.f64 1 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)) x) 3/2)) (/.f64 1/4 (pow.f64 x 3)))) 1/3)))))) (+.f64 -3 (*.f64 (fma.f64 (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)) x (/.f64 1 x)) -2))))))))))","(+.f64 (fma.f64 1/3 (*.f64 (/.f64 (pow.f64 y 3) x) (+.f64 (+.f64 (+.f64 (+.f64 -2 (/.f64 -1 x)) (fma.f64 -1/2 (*.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2))) (fma.f64 -2 (fma.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)) 1/2) (-.f64 (*.f64 (fma.f64 (fma.f64 -1/2 (-.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 (pow.f64 (/.f64 -1/2 x) 2) x)) (/.f64 1 (pow.f64 x 3))) -3 (fma.f64 (-.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 (pow.f64 (/.f64 -1/2 x) 2) x)) 3/2 (/.f64 -1/4 (pow.f64 x 3)))) (*.f64 x 1/3)) (fma.f64 1/2 (*.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2))) 1/8))))) (+.f64 -3/8 (neg.f64 (+.f64 (/.f64 2 x) (/.f64 2/3 (*.f64 x x)))))) (+.f64 3 (*.f64 (fma.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)) (/.f64 1 x)) 2)))) (/.f64 (neg.f64 y) x)) (fma.f64 1/3 (*.f64 (/.f64 (+.f64 3/2 (fma.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)) (/.f64 1 x))) x) (*.f64 y y)) (/.f64 1 x)))","(+.f64 (fma.f64 1/3 (*.f64 (/.f64 (pow.f64 y 3) x) (+.f64 (+.f64 (+.f64 (+.f64 -2 (/.f64 -1 x)) (fma.f64 -1/2 (*.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2))) (fma.f64 -2 (fma.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)) 1/2) (-.f64 (*.f64 (fma.f64 (fma.f64 -1/2 (-.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 (pow.f64 (/.f64 -1/2 x) 2) x)) (/.f64 1 (pow.f64 x 3))) -3 (fma.f64 (-.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 (pow.f64 (/.f64 -1/2 x) 2) x)) 3/2 (/.f64 -1/4 (pow.f64 x 3)))) (*.f64 x 1/3)) (fma.f64 1/2 (*.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2))) 1/8))))) (-.f64 -3/8 (+.f64 (/.f64 2 x) (/.f64 2/3 (*.f64 x x))))) (+.f64 3 (*.f64 (fma.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)) (/.f64 1 x)) 2)))) (/.f64 (neg.f64 y) x)) (fma.f64 1/3 (*.f64 (/.f64 (+.f64 3/2 (fma.f64 x (-.f64 (/.f64 3/4 (*.f64 x x)) (pow.f64 (/.f64 -1/2 x) 2)) (/.f64 1 x))) x) (*.f64 y y)) (/.f64 1 x)))"]],"stop":[["node limit",1]],"time":65.656982421875,"type":"simplify"},{"compiler":[[17621,8085]],"time":130.953857421875,"type":"eval"},{"alts":[["(/.f64 (cbrt.f64 (exp.f64 (*.f64 y -3))) x)","fresh",17.67192780586077],["(/.f64 1 x)","done",9.946038350826402],["(fma.f64 1/3 (*.f64 (/.f64 (*.f64 y y) x) (+.f64 3/2 (/.f64 3/2 x))) (-.f64 (/.f64 1 x) (/.f64 y x)))","fresh",30.09904301033868],["(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x) (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)))) x)","done",13.966155962203125]],"compiler":[[9,7],[5,4],[22,15],[33,13]],"count":[[321,4]],"kept":[{"done":[1,1],"fresh":[2,2],"new":[317,0],"picked":[1,1]}],"min-error":[0.00390625],"time":123.4091796875,"type":"prune"},{"accuracy":[0.7775713586814842],"baseline":[9.946038350826402],"branch":[["x",0.7775713586814842,3],["y",6.839551662481022,3],["(/.f64 (exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y))))) x)",3.293006892617715,3]],"compiler":[[3,2],[3,2],[13,8],[143,60]],"count":[[10,3]],"inputs":[["(/.f64 (cbrt.f64 (exp.f64 (*.f64 y -3))) x)","(fma.f64 1/3 (*.f64 (/.f64 (*.f64 y y) x) (+.f64 3/2 (/.f64 3/2 x))) (-.f64 (/.f64 1 x) (/.f64 y x)))","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (*.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x) (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)))) x)","(/.f64 1 x)","(/.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) x)) 2)) x)","(/.f64 (*.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) (+.f64 x x))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) x))) x)","(/.f64 (exp.f64 (neg.f64 y)) x)","(fma.f64 (*.f64 y y) (+.f64 (/.f64 1/2 x) (/.f64 1/2 (*.f64 x x))) (-.f64 (/.f64 1 x) (/.f64 y x)))","(/.f64 (pow.f64 (/.f64 x (+.f64 x y)) x) x)","(/.f64 (exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y))))) x)"]],"link":["."],"name":["Numeric.SpecFunctions:invIncompleteBetaWorker from math-functions-0.1.5.2, F"],"oracle":[34.45911623050188],"outputs":[["(/.f64 (cbrt.f64 (exp.f64 (*.f64 y -3))) x)","(/.f64 1 x)","(/.f64 (cbrt.f64 (exp.f64 (*.f64 y -3))) x)"]],"time":42.036865234375,"times":[["x",12.64794921875],["y",15.958984375],["(/.f64 (exp.f64 (*.f64 x (log.f64 (/.f64 x (+.f64 x y))))) x)",11.220947265625]],"type":"regimes"},{"bstep":[[0.0018633500321703442,4.597887370896635,29.7841796875],[-7000044814060.983,-0.01645818641669821,36.662109375]],"compiler":[[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[6,5],[10,8],[15,10],[3,2]],"method":["binary-search","binary-search"],"time":66.56103515625,"type":"bsearch"},{"compiler":[[27,20]],"egraph":[[1,20,38,6.2125e-5],[0,17,38,3.6e-5]],"inputs":[["(if (<=.f64 x -1224979098644775/72057594037927936) (/.f64 (cbrt.f64 (exp.f64 (*.f64 y -3))) x) (if (<=.f64 x 9/2) (/.f64 1 x) (/.f64 (cbrt.f64 (exp.f64 (*.f64 y -3))) x)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 x -1224979098644775/72057594037927936) (/.f64 (cbrt.f64 (exp.f64 (*.f64 y -3))) x) (if (<=.f64 x 9/2) (/.f64 1 x) (/.f64 (cbrt.f64 (exp.f64 (*.f64 y -3))) x)))"]],"stop":[["fuel",1],["saturated",1]],"time":8.7119140625,"type":"simplify"},{"time":0.024169921875,"type":"soundness"},{"compiler":[[27,20]],"remove-preprocessing":[[]],"time":12.470947265625,"type":"end"}]