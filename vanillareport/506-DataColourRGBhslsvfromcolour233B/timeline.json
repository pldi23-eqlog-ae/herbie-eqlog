[{"compiler":[[19,14]],"method":["search"],"sampling":[[12,0.11690167696545961,0.8806592998064624,0.0024390232280779856],[11,0.07793445131030641,0.9196265254616156,0.0024390232280779856],[10,0.0,0.997560976771922,0.0024390232280779856],[9,0.0,0.997560976771922,0.0024390232280779856],[8,0.0,0.997560976771922,0.0024390232280779856],[7,0.0,0.997560976771922,0.0024390232280779856],[6,0.0,0.997560976771922,0.0024390232280779856],[5,0.0,0.997560976771922,0.0024390232280779856],[4,0.0,0.997560976771922,0.0024390232280779856],[3,0.0,0.997560976771922,0.0024390232280779856],[2,0.0,0.997560976771922,0.0024390232280779856],[1,0.0,0.997560976771922,0.0024390232280779856],[0,0.0,0.997560976771922,0.0024390232280779856]],"time":175.662109375,"type":"analyze"},{"outcomes":[["body",256,"invalid",36.62939453125,681],["body",4096,"valid",0.675048828125,3],["body",1024,"valid",6.222900390625,46],["body",512,"valid",2.96923828125,30],["body",2048,"valid",7.1552734375,39],["body",256,"valid",443.445068359375,8138]],"time":506.678955078125,"type":"sample"},{"compiler":[[18,13]],"egraph":[[0,5,5,2.75e-6],[6,7440,187,0.036729376],[5,3619,187,0.023231709],[4,1427,187,0.009473918],[3,589,187,0.003616543],[2,272,187,0.001438876],[1,122,187,0.000535501],[0,57,209,0.000179584]],"inputs":[["0","1","2","3","4"],["(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 z t)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 z y)) (-.f64 x t)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 t y)) (-.f64 z x)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 a y)) (-.f64 z t)) (*.f64 x 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 x z)) (-.f64 y t)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 x t)) (-.f64 z y)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 x a)) (-.f64 z t)) (*.f64 y 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 t z)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 a t)) (*.f64 z 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z a)) (*.f64 t 120))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4"],["(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) (*.f64 a 120))","(+.f64 (/.f64 60 (/.f64 (-.f64 z t) (-.f64 x y))) (*.f64 a 120))","(fma.f64 a 120 (*.f64 (/.f64 60 (-.f64 z t)) (-.f64 x y)))","(fma.f64 a 120 (*.f64 (/.f64 (-.f64 x y) (-.f64 z t)) 60))","(fma.f64 (-.f64 x y) (/.f64 60 (-.f64 z t)) (*.f64 a 120))","(fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 z t)) (*.f64 a 120))","(+.f64 (*.f64 a 120) (/.f64 60 (/.f64 (-.f64 z t) (-.f64 y x))))","(fma.f64 a 120 (*.f64 (/.f64 60 (-.f64 z t)) (-.f64 y x)))","(fma.f64 a 120 (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 z t)))","(fma.f64 (-.f64 y x) (/.f64 60 (-.f64 z t)) (*.f64 a 120))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 z t)) (*.f64 a 120))","(fma.f64 (-.f64 x y) (/.f64 -60 (-.f64 z t)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 z y)) (-.f64 x t)) (*.f64 a 120))","(+.f64 (*.f64 a 120) (/.f64 60 (/.f64 (-.f64 x t) (-.f64 z y))))","(fma.f64 a 120 (*.f64 (/.f64 60 (-.f64 x t)) (-.f64 z y)))","(fma.f64 a 120 (*.f64 (-.f64 z y) (/.f64 60 (-.f64 x t))))","(fma.f64 (-.f64 z y) (/.f64 60 (-.f64 x t)) (*.f64 a 120))","(fma.f64 60 (/.f64 (-.f64 z y) (-.f64 x t)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 t y)) (-.f64 z x)) (*.f64 a 120))","(+.f64 (*.f64 a 120) (/.f64 (*.f64 60 (-.f64 t y)) (-.f64 z x)))","(fma.f64 a 120 (*.f64 (/.f64 60 (-.f64 z x)) (-.f64 t y)))","(fma.f64 (/.f64 60 (-.f64 z x)) (-.f64 t y) (*.f64 a 120))","(fma.f64 (-.f64 t y) (/.f64 60 (-.f64 z x)) (*.f64 a 120))","(fma.f64 60 (/.f64 (-.f64 t y) (-.f64 z x)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 a y)) (-.f64 z t)) (*.f64 x 120))","(+.f64 (/.f64 60 (/.f64 (-.f64 z t) (-.f64 a y))) (*.f64 x 120))","(fma.f64 x 120 (*.f64 (/.f64 60 (-.f64 z t)) (-.f64 a y)))","(fma.f64 x 120 (*.f64 (/.f64 (-.f64 a y) (-.f64 z t)) 60))","(fma.f64 x 120 (/.f64 60 (/.f64 (-.f64 z t) (-.f64 a y))))","(fma.f64 60 (/.f64 (-.f64 a y) (-.f64 z t)) (*.f64 x 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 x z)) (-.f64 y t)) (*.f64 a 120))","(+.f64 (*.f64 a 120) (/.f64 60 (/.f64 (-.f64 y t) (-.f64 x z))))","(fma.f64 a 120 (/.f64 60 (/.f64 (-.f64 y t) (-.f64 x z))))","(fma.f64 a 120 (*.f64 (-.f64 x z) (/.f64 60 (-.f64 y t))))","(fma.f64 (/.f64 (-.f64 x z) (-.f64 y t)) 60 (*.f64 a 120))","(fma.f64 60 (/.f64 (-.f64 x z) (-.f64 y t)) (*.f64 a 120))","(fma.f64 60 (/.f64 (-.f64 z x) (-.f64 t y)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 x t)) (-.f64 z y)) (*.f64 a 120))","(+.f64 (*.f64 a 120) (/.f64 60 (/.f64 (-.f64 z y) (-.f64 x t))))","(fma.f64 a 120 (/.f64 60 (/.f64 (-.f64 z y) (-.f64 x t))))","(fma.f64 (-.f64 x t) (/.f64 60 (-.f64 z y)) (*.f64 a 120))","(fma.f64 60 (/.f64 (-.f64 x t) (-.f64 z y)) (*.f64 a 120))","(fma.f64 a 120 (*.f64 -60 (/.f64 (-.f64 x t) (-.f64 y z))))","(+.f64 (/.f64 (*.f64 60 (-.f64 x a)) (-.f64 z t)) (*.f64 y 120))","(fma.f64 y 120 (*.f64 (/.f64 60 (-.f64 z t)) (-.f64 x a)))","(fma.f64 y 120 (*.f64 (/.f64 (-.f64 x a) (-.f64 z t)) 60))","(fma.f64 y 120 (*.f64 60 (/.f64 (-.f64 x a) (-.f64 z t))))","(fma.f64 60 (/.f64 (-.f64 x a) (-.f64 z t)) (*.f64 y 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 t z)) (*.f64 a 120))","(+.f64 (*.f64 a 120) (/.f64 60 (/.f64 (-.f64 z t) (-.f64 y x))))","(fma.f64 a 120 (*.f64 (/.f64 60 (-.f64 z t)) (-.f64 y x)))","(fma.f64 a 120 (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 z t)))","(fma.f64 (-.f64 y x) (/.f64 60 (-.f64 z t)) (*.f64 a 120))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 z t)) (*.f64 a 120))","(fma.f64 (-.f64 x y) (/.f64 -60 (-.f64 z t)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 a t)) (*.f64 z 120))","(fma.f64 z 120 (/.f64 (-.f64 x y) (/.f64 (-.f64 a t) 60)))","(fma.f64 z 120 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 a t)))","(fma.f64 (-.f64 x y) (/.f64 60 (-.f64 a t)) (*.f64 z 120))","(fma.f64 60 (/.f64 (-.f64 x y) (-.f64 a t)) (*.f64 z 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z a)) (*.f64 t 120))","(+.f64 (/.f64 60 (/.f64 (-.f64 z a) (-.f64 x y))) (*.f64 t 120))","(fma.f64 t 120 (/.f64 (-.f64 x y) (/.f64 (-.f64 z a) 60)))","(fma.f64 t 120 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z a)))","(fma.f64 (-.f64 x y) (/.f64 60 (-.f64 z a)) (*.f64 t 120))","(fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z a)) (*.f64 t 120))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":63.555908203125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[10,7981,17,0.054113748999999996],[9,7662,17,0.047170249],[8,6514,17,0.035229999],[7,2325,17,0.020514958],[6,873,17,0.006770833],[5,410,17,0.002825541],[4,200,17,0.001334041],[3,93,17,0.000649291],[2,46,17,0.000298333],[1,23,17,0.000125958],[0,14,19,4.9208e-5]],"inputs":[["(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) (*.f64 a 120))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) (*.f64 a 120))","(+.f64 (/.f64 60 (/.f64 (-.f64 z t) (-.f64 x y))) (*.f64 a 120))","(fma.f64 a 120 (*.f64 (/.f64 60 (-.f64 z t)) (-.f64 x y)))","(fma.f64 a 120 (*.f64 (-.f64 x y) (/.f64 60 (-.f64 z t))))","(fma.f64 (-.f64 x y) (/.f64 60 (-.f64 z t)) (*.f64 a 120))","(fma.f64 60 (/.f64 (-.f64 x y) (-.f64 z t)) (*.f64 a 120))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))"]],"stop":[["node limit",1]],"time":65.940185546875,"type":"simplify"},{"compiler":[[30,20]],"time":0.453857421875,"type":"eval"},{"alts":[["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","next",0.1328125],["(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) (*.f64 a 120))","fresh",0.4140625]],"compiler":[[17,12],[18,13],[17,12],[18,13]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.0625],"time":1.503173828125,"type":"prune"},{"compiler":[[40,16]],"locations":[["(/.f64 (-.f64 y x) (-.f64 t z))",0.015625,true],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))",0.12109375,true]],"time":8.06396484375,"type":"localize"},{"count":[[2,108]],"series":[["(/.f64 (-.f64 y x) (-.f64 t z))","z","-inf",0.243896484375],["(/.f64 (-.f64 y x) (-.f64 t z))","z","inf",0.905029296875],["(/.f64 (-.f64 y x) (-.f64 t z))","z","0",0.26416015625],["(/.f64 (-.f64 y x) (-.f64 t z))","t","-inf",0.281982421875],["(/.f64 (-.f64 y x) (-.f64 t z))","t","inf",0.323974609375],["(/.f64 (-.f64 y x) (-.f64 t z))","t","0",0.299072265625],["(/.f64 (-.f64 y x) (-.f64 t z))","x","-inf",0.162109375],["(/.f64 (-.f64 y x) (-.f64 t z))","x","inf",0.166015625],["(/.f64 (-.f64 y x) (-.f64 t z))","x","0",0.163818359375],["(/.f64 (-.f64 y x) (-.f64 t z))","y","-inf",0.162109375],["(/.f64 (-.f64 y x) (-.f64 t z))","y","inf",0.17919921875],["(/.f64 (-.f64 y x) (-.f64 t z))","y","0",0.174072265625],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","a","-inf",0.281005859375],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","a","inf",0.260986328125],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","a","0",0.468017578125],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","z","-inf",0.28515625],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","z","inf",0.3759765625],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","z","0",0.572021484375],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","t","-inf",0.385009765625],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","t","inf",0.4111328125],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","t","0",0.98193359375],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","x","-inf",0.406982421875],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","x","inf",0.467041015625],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","x","0",0.489990234375],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","y","-inf",0.6640625],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","y","inf",0.56982421875],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","y","0",0.65087890625]],"time":11.0498046875,"type":"series"},{"count":[[2,85]],"egraph":[[2,4069,27,0.0303725],[1,290,27,0.0053872090000000004],[0,13,27,0.000349959]],"inputs":[["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","(/.f64 (-.f64 y x) (-.f64 t z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a 120) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) 1) (*.f64 a 120))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120)))) (cbrt.f64 (exp.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120)))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))) (pow.f64 (cbrt.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))) 2) (cbrt.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))) (sqrt.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) 3) (pow.f64 (*.f64 a 120) 3)) (fma.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (-.f64 (*.f64 14400 (*.f64 a a)) (*.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 a 120)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)))) (*.f64 14400 (*.f64 a a))) (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (neg.f64 (*.f64 a 120))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 120) a) (exp.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 a 120))) (exp.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)))) (+.f64 1 (expm1.f64 (*.f64 a 120)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 y x) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 y x) (-.f64 t z)))) (cbrt.f64 (exp.f64 (/.f64 (-.f64 y x) (-.f64 t z)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 y x) (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 y x) (-.f64 t z))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 y x) (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 y x) (-.f64 t z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (/.f64 1 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (-.f64 t z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 y x) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 y x)) 2) (*.f64 (cbrt.f64 (-.f64 y x)) (/.f64 1 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 t z))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 t z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 t z))) 2) (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 y x)) (*.f64 (sqrt.f64 (-.f64 y x)) (/.f64 1 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 y x) (-.f64 t z))) (sqrt.f64 (/.f64 (-.f64 y x) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 y x)) (/.f64 1 (neg.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t z)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 y x)) 2) 1) (/.f64 (cbrt.f64 (-.f64 y x)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 y x)) 1) (/.f64 (sqrt.f64 (-.f64 y x)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (-.f64 y x) (cbrt.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 y x)) 2) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 y x)) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (sqrt.f64 (-.f64 y x)) (cbrt.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 t z))) (/.f64 (-.f64 y x) (sqrt.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 y x)) 2) (sqrt.f64 (-.f64 t z))) (/.f64 (cbrt.f64 (-.f64 y x)) (sqrt.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (fma.f64 t t (*.f64 z (+.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (-.f64 (*.f64 t t) (*.f64 z z))) (+.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y x) (-.f64 t z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 t z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 y x) (-.f64 t z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 y x) (-.f64 t z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 t z) (-.f64 y x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (-.f64 y x) 3) (pow.f64 (-.f64 t z) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 t z) (-.f64 y x)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 y x) (neg.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 t z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 y x) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 y x) (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 y x) (-.f64 t z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 y x) 3) (pow.f64 (-.f64 t z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 y x) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 y x) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 y x) (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 y x) (-.f64 t z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 1 (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (/.f64 y (-.f64 t z)))) (cbrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (/.f64 x (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 y (-.f64 t z))) (sqrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (/.f64 x (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 y (cbrt.f64 (-.f64 t z))) (neg.f64 (/.f64 x (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (-.f64 t z))) (/.f64 y (sqrt.f64 (-.f64 t z))) (neg.f64 (/.f64 x (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (/.f64 x (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 t z))) (neg.f64 (/.f64 x (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 t z))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (/.f64 x (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (/.f64 (sqrt.f64 y) (sqrt.f64 (-.f64 t z))) (neg.f64 (/.f64 x (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (fma.f64 t t (*.f64 z (+.f64 t z))) (neg.f64 (/.f64 x (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 (*.f64 t t) (*.f64 z z))) (+.f64 t z) (neg.f64 (/.f64 x (-.f64 t z))))))))"]],"rules":[["egg-rr",56],["egg-rr",29]],"stop":[["node limit",1]],"time":53.647216796875,"type":"rewrite"},{"count":[[193,155]],"egraph":[[3,6338,2105,0.026271624],[2,1424,2145,0.011586457],[1,498,2466,0.003003749],[0,148,2640,0.000743958]],"inputs":[["(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(*.f64 -1 (/.f64 x (-.f64 t z)))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(*.f64 -1 (/.f64 x (-.f64 t z)))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(*.f64 -1 (/.f64 x (-.f64 t z)))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(*.f64 -1 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (*.f64 -1 (/.f64 (-.f64 y x) z)))","(+.f64 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))","(+.f64 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2)) (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))","(/.f64 (-.f64 y x) t)","(-.f64 (+.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)) (/.f64 y t)) (/.f64 x t))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3)) (+.f64 (/.f64 y t) (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))) (/.f64 x t))","(-.f64 (+.f64 (/.f64 y t) (+.f64 (/.f64 (*.f64 (pow.f64 z 3) (-.f64 y x)) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))))) (/.f64 x t))","(/.f64 (-.f64 y x) t)","(-.f64 (+.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)) (/.f64 y t)) (/.f64 x t))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3)) (+.f64 (/.f64 y t) (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))) (/.f64 x t))","(-.f64 (+.f64 (/.f64 y t) (+.f64 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))))) (/.f64 x t))","(/.f64 (-.f64 y x) t)","(-.f64 (+.f64 (/.f64 y t) (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))) (/.f64 x t))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)) (/.f64 y t))) (/.f64 x t))","(-.f64 (+.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)) (+.f64 (/.f64 y t) (+.f64 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4)) (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))))) (/.f64 x t))","(*.f64 -1 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))))))","(*.f64 -1 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3)))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 120 a (/.f64 -60 (/.f64 (-.f64 t z) x)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 60 y) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 (/.f64 60 (-.f64 t z)) y)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 60 y) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 (/.f64 60 (-.f64 t z)) y)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 60 y) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 (/.f64 60 (-.f64 t z)) y)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(*.f64 (/.f64 60 (-.f64 t z)) y)","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 60 y) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 (/.f64 60 (-.f64 t z)) y)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 60 y) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 (/.f64 60 (-.f64 t z)) y)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 60 y) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 (/.f64 60 (-.f64 t z)) y)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(*.f64 (/.f64 60 (-.f64 t z)) y)","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 60 y) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 (/.f64 60 (-.f64 t z)) y)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 60 y) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 (/.f64 60 (-.f64 t z)) y)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 60 y) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 (/.f64 60 (-.f64 t z)) y)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 120 a (/.f64 (*.f64 60 y) (-.f64 t z)))","(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) y))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 60 y) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 (/.f64 60 (-.f64 t z)) y)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 60 y) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 (/.f64 60 (-.f64 t z)) y)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 60 y) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 (/.f64 60 (-.f64 t z)) y)))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(/.f64 -60 (/.f64 (-.f64 t z) x))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 60 y) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 (/.f64 60 (-.f64 t z)) y)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 60 y) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 (/.f64 60 (-.f64 t z)) y)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 60 y) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 (/.f64 60 (-.f64 t z)) y)))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(/.f64 -60 (/.f64 (-.f64 t z) x))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 60 y) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 (/.f64 60 (-.f64 t z)) y)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 60 y) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 (/.f64 60 (-.f64 t z)) y)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 60 y) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 (/.f64 60 (-.f64 t z)) y)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 -60 (-.f64 y x)) z))","(fma.f64 120 a (*.f64 (/.f64 -60 z) (-.f64 y x)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))))))","(fma.f64 120 a (fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))))))","(fma.f64 120 a (fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 (-.f64 (/.f64 (/.f64 x z) z) (/.f64 y (*.f64 z z))) (*.f64 t 60))))","(fma.f64 t (*.f64 60 (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z)))) (fma.f64 120 a (*.f64 (/.f64 -60 z) (-.f64 y x))))","(fma.f64 120 a (fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 t (*.f64 60 (/.f64 (/.f64 (-.f64 x y) z) z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 60 (+.f64 (*.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))) (/.f64 (*.f64 t t) (/.f64 z (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))))))))","(fma.f64 120 a (fma.f64 60 (fma.f64 t (-.f64 (/.f64 (/.f64 x z) z) (/.f64 y (*.f64 z z))) (*.f64 (/.f64 t (/.f64 z t)) (-.f64 (/.f64 (/.f64 x z) z) (/.f64 y (*.f64 z z))))) (/.f64 (*.f64 -60 (-.f64 y x)) z)))","(fma.f64 60 (*.f64 (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 t (*.f64 (/.f64 t z) t))) (fma.f64 120 a (*.f64 (/.f64 -60 z) (-.f64 y x))))","(fma.f64 60 (*.f64 (/.f64 (/.f64 (-.f64 x y) z) z) (+.f64 t (*.f64 (/.f64 t z) t))) (fma.f64 120 a (*.f64 (/.f64 -60 z) (-.f64 y x))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))))","(fma.f64 120 a (fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 60 (*.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))) (*.f64 60 (+.f64 (/.f64 (*.f64 t t) (/.f64 z (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))))) (/.f64 (*.f64 (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))) (pow.f64 t 3)) (*.f64 z z)))))))","(fma.f64 120 a (fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 60 (+.f64 (*.f64 t (-.f64 (/.f64 (/.f64 x z) z) (/.f64 y (*.f64 z z)))) (+.f64 (*.f64 (/.f64 t (/.f64 z t)) (-.f64 (/.f64 (/.f64 x z) z) (/.f64 y (*.f64 z z)))) (*.f64 (/.f64 (pow.f64 t 3) (*.f64 z z)) (-.f64 (/.f64 (/.f64 x z) z) (/.f64 y (*.f64 z z)))))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 60 (fma.f64 t (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (*.f64 (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 (*.f64 (/.f64 t z) t) (/.f64 (pow.f64 t 3) (*.f64 z z))))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 x y)) (pow.f64 z 4)) (*.f64 (/.f64 (/.f64 (-.f64 x y) z) z) (+.f64 t (*.f64 (/.f64 t z) t)))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)))))","(fma.f64 120 a (*.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(fma.f64 120 a (fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z)))))))","(fma.f64 120 a (*.f64 60 (+.f64 (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z)) (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t))))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 z (/.f64 z (/.f64 t z)))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)))))","(fma.f64 120 a (*.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))))","(fma.f64 120 a (fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z)))))))","(fma.f64 120 a (*.f64 60 (+.f64 (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z)) (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t))))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 z (/.f64 z (/.f64 t z)))))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 120 a))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)))))","(fma.f64 120 a (*.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(fma.f64 120 a (fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z)))))))","(fma.f64 120 a (*.f64 60 (+.f64 (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z)) (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t))))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 z (/.f64 z (/.f64 t z)))))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))))","(fma.f64 120 a (fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 60 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))) (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 4) (pow.f64 z 3))) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)))))))","(fma.f64 120 a (fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)) (+.f64 (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z)) (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 t 4) (-.f64 y x))))))))","(fma.f64 120 a (*.f64 60 (+.f64 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t)) (*.f64 (-.f64 y x) (+.f64 (/.f64 z (/.f64 (pow.f64 t 3) z)) (/.f64 (pow.f64 z 3) (pow.f64 t 4)))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 -60 (-.f64 y x)) z))","(fma.f64 120 a (*.f64 (/.f64 -60 z) (-.f64 y x)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 (/.f64 -60 z) (/.f64 (*.f64 t (-.f64 y x)) z))))","(fma.f64 120 a (*.f64 -60 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 (-.f64 y x) z))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 -60 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x))) (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 -60 (+.f64 (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) (-.f64 y x))) (*.f64 120 a)))","(fma.f64 120 a (*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (*.f64 (/.f64 (-.f64 y x) z) (+.f64 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 t z)))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a))","(fma.f64 120 a (/.f64 (*.f64 -60 (-.f64 y x)) z))","(fma.f64 120 a (*.f64 (/.f64 -60 z) (-.f64 y x)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 (/.f64 -60 z) (/.f64 (*.f64 t (-.f64 y x)) z))))","(fma.f64 120 a (*.f64 -60 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 (-.f64 y x) z))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 -60 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x))) (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 -60 (+.f64 (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) (-.f64 y x))) (*.f64 120 a)))","(fma.f64 120 a (*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (*.f64 (/.f64 (-.f64 y x) z) (+.f64 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 t z)))))))","(*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)))","(*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 120 a (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 120 a (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 120 a (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 120 a (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 120 a (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 120 a (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","(*.f64 -1 (/.f64 x (-.f64 t z)))","(neg.f64 (/.f64 x (-.f64 t z)))","(/.f64 (neg.f64 x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(/.f64 y (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(*.f64 -1 (/.f64 x (-.f64 t z)))","(neg.f64 (/.f64 x (-.f64 t z)))","(/.f64 (neg.f64 x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(*.f64 -1 (/.f64 x (-.f64 t z)))","(neg.f64 (/.f64 x (-.f64 t z)))","(/.f64 (neg.f64 x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(+.f64 (/.f64 y (-.f64 t z)) (*.f64 -1 (/.f64 x (-.f64 t z))))","(+.f64 (/.f64 y (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z))))","(/.f64 (-.f64 y x) (-.f64 t z))","(*.f64 -1 (/.f64 (-.f64 y x) z))","(neg.f64 (/.f64 (-.f64 y x) z))","(/.f64 (neg.f64 (-.f64 y x)) z)","(/.f64 (-.f64 x y) z)","(+.f64 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (*.f64 -1 (/.f64 (-.f64 y x) z)))","(fma.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))) (neg.f64 (/.f64 (-.f64 y x) z)))","(fma.f64 t (-.f64 (/.f64 (/.f64 x z) z) (/.f64 y (*.f64 z z))) (/.f64 (neg.f64 (-.f64 y x)) z))","(-.f64 (*.f64 t (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z)))) (/.f64 (-.f64 y x) z))","(fma.f64 t (/.f64 (/.f64 (-.f64 x y) z) z) (/.f64 (-.f64 x y) z))","(+.f64 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))","(fma.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))) (fma.f64 -1 (/.f64 (-.f64 y x) z) (/.f64 (*.f64 t t) (/.f64 z (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))))))","(fma.f64 t (-.f64 (/.f64 (/.f64 x z) z) (/.f64 y (*.f64 z z))) (-.f64 (*.f64 (/.f64 t (/.f64 z t)) (-.f64 (/.f64 (/.f64 x z) z) (/.f64 y (*.f64 z z)))) (/.f64 (-.f64 y x) z)))","(-.f64 (*.f64 (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 t (*.f64 (/.f64 t z) t))) (/.f64 (-.f64 y x) z))","(+.f64 (/.f64 (-.f64 x y) z) (*.f64 (/.f64 (/.f64 (-.f64 x y) z) z) (+.f64 t (*.f64 (/.f64 t z) t))))","(+.f64 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2)) (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))","(fma.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))) (fma.f64 -1 (/.f64 (-.f64 y x) z) (+.f64 (/.f64 (*.f64 t t) (/.f64 z (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))))) (/.f64 (*.f64 (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))) (pow.f64 t 3)) (*.f64 z z)))))","(+.f64 (fma.f64 t (-.f64 (/.f64 (/.f64 x z) z) (/.f64 y (*.f64 z z))) (-.f64 (*.f64 (/.f64 t (/.f64 z t)) (-.f64 (/.f64 (/.f64 x z) z) (/.f64 y (*.f64 z z)))) (/.f64 (-.f64 y x) z))) (*.f64 (/.f64 (pow.f64 t 3) (*.f64 z z)) (-.f64 (/.f64 (/.f64 x z) z) (/.f64 y (*.f64 z z)))))","(-.f64 (fma.f64 t (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (*.f64 (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 (*.f64 (/.f64 t z) t) (/.f64 (pow.f64 t 3) (*.f64 z z))))) (/.f64 (-.f64 y x) z))","(+.f64 (/.f64 (-.f64 x y) z) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 x y)) (pow.f64 z 4)) (*.f64 (/.f64 (/.f64 (-.f64 x y) z) z) (+.f64 t (*.f64 (/.f64 t z) t)))))","(/.f64 (-.f64 y x) t)","(-.f64 (+.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)) (/.f64 y t)) (/.f64 x t))","(+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (/.f64 (-.f64 y x) t))","(+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)))","(*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3)) (+.f64 (/.f64 y t) (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))) (/.f64 x t))","(+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))) (+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (/.f64 (-.f64 y x) t)))","(+.f64 (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z)) (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t))))","(+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 z (/.f64 z (/.f64 t z)))))","(-.f64 (+.f64 (/.f64 y t) (+.f64 (/.f64 (*.f64 (pow.f64 z 3) (-.f64 y x)) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))))) (/.f64 x t))","(+.f64 (/.f64 y t) (-.f64 (+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 4) (pow.f64 z 3))) (+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))))) (/.f64 x t)))","(+.f64 (+.f64 (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)) (+.f64 (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z)) (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 t 4) (-.f64 y x))))) (/.f64 (-.f64 y x) t))","(+.f64 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t)) (*.f64 (-.f64 y x) (+.f64 (/.f64 z (/.f64 (pow.f64 t 3) z)) (/.f64 (pow.f64 z 3) (pow.f64 t 4)))))","(/.f64 (-.f64 y x) t)","(-.f64 (+.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)) (/.f64 y t)) (/.f64 x t))","(+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (/.f64 (-.f64 y x) t))","(+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)))","(*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3)) (+.f64 (/.f64 y t) (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))) (/.f64 x t))","(+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))) (+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (/.f64 (-.f64 y x) t)))","(+.f64 (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z)) (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t))))","(+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 z (/.f64 z (/.f64 t z)))))","(-.f64 (+.f64 (/.f64 y t) (+.f64 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4)) (+.f64 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)) (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))))) (/.f64 x t))","(+.f64 (/.f64 y t) (-.f64 (+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 4) (pow.f64 z 3))) (+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))))) (/.f64 x t)))","(+.f64 (+.f64 (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)) (+.f64 (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z)) (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 t 4) (-.f64 y x))))) (/.f64 (-.f64 y x) t))","(+.f64 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t)) (*.f64 (-.f64 y x) (+.f64 (/.f64 z (/.f64 (pow.f64 t 3) z)) (/.f64 (pow.f64 z 3) (pow.f64 t 4)))))","(/.f64 (-.f64 y x) t)","(-.f64 (+.f64 (/.f64 y t) (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))) (/.f64 x t))","(+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (/.f64 (-.f64 y x) t))","(+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)))","(*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3)) (+.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)) (/.f64 y t))) (/.f64 x t))","(+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))) (+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (/.f64 (-.f64 y x) t)))","(+.f64 (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z)) (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t))))","(+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 z (/.f64 z (/.f64 t z)))))","(-.f64 (+.f64 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)) (+.f64 (/.f64 y t) (+.f64 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4)) (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))))) (/.f64 x t))","(+.f64 (/.f64 y t) (-.f64 (+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 4) (pow.f64 z 3))) (+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))))) (/.f64 x t)))","(+.f64 (+.f64 (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)) (+.f64 (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z)) (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 t 4) (-.f64 y x))))) (/.f64 (-.f64 y x) t))","(+.f64 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t)) (*.f64 (-.f64 y x) (+.f64 (/.f64 z (/.f64 (pow.f64 t 3) z)) (/.f64 (pow.f64 z 3) (pow.f64 t 4)))))","(*.f64 -1 (/.f64 (-.f64 y x) z))","(neg.f64 (/.f64 (-.f64 y x) z))","(/.f64 (neg.f64 (-.f64 y x)) z)","(/.f64 (-.f64 x y) z)","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(*.f64 -1 (+.f64 (/.f64 (-.f64 y x) z) (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z))))","(-.f64 (/.f64 (neg.f64 (-.f64 y x)) z) (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)))","(*.f64 (/.f64 (-.f64 y x) z) (-.f64 -1 (/.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3)))))","(fma.f64 -1 (/.f64 (-.f64 y x) z) (*.f64 -1 (+.f64 (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z)) (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x))))))","(-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 (-.f64 y x)) (*.f64 t t)) (pow.f64 z 3)) (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z))) (/.f64 (-.f64 y x) z))","(-.f64 (*.f64 (/.f64 (-.f64 y x) z) (-.f64 -1 (/.f64 t z))) (*.f64 (-.f64 y x) (/.f64 (*.f64 t t) (pow.f64 z 3))))","(-.f64 (/.f64 (-.f64 x y) z) (*.f64 (/.f64 (-.f64 y x) z) (+.f64 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))))))","(fma.f64 -1 (/.f64 (-.f64 y x) z) (fma.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z)) (*.f64 -1 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x))) (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 z 4) (-.f64 y x)))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 (-.f64 y x)) (*.f64 t t)) (pow.f64 z 3)) (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z))) (/.f64 (-.f64 y x) (/.f64 (pow.f64 z 4) (pow.f64 t 3)))) (/.f64 (-.f64 y x) z))","(-.f64 (*.f64 (/.f64 (-.f64 y x) z) (-.f64 -1 (/.f64 t z))) (*.f64 (-.f64 y x) (+.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))))","(*.f64 -1 (/.f64 (-.f64 y x) z))","(neg.f64 (/.f64 (-.f64 y x) z))","(/.f64 (neg.f64 (-.f64 y x)) z)","(/.f64 (-.f64 x y) z)","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(*.f64 -1 (+.f64 (/.f64 (-.f64 y x) z) (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z))))","(-.f64 (/.f64 (neg.f64 (-.f64 y x)) z) (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)))","(*.f64 (/.f64 (-.f64 y x) z) (-.f64 -1 (/.f64 t z)))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3)))))","(fma.f64 -1 (/.f64 (-.f64 y x) z) (*.f64 -1 (+.f64 (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z)) (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x))))))","(-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 (-.f64 y x)) (*.f64 t t)) (pow.f64 z 3)) (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z))) (/.f64 (-.f64 y x) z))","(-.f64 (*.f64 (/.f64 (-.f64 y x) z) (-.f64 -1 (/.f64 t z))) (*.f64 (-.f64 y x) (/.f64 (*.f64 t t) (pow.f64 z 3))))","(-.f64 (/.f64 (-.f64 x y) z) (*.f64 (/.f64 (-.f64 y x) z) (+.f64 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 t z)))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))))))","(fma.f64 -1 (/.f64 (-.f64 y x) z) (fma.f64 -1 (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z)) (*.f64 -1 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x))) (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 z 4) (-.f64 y x)))))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (neg.f64 (-.f64 y x)) (*.f64 t t)) (pow.f64 z 3)) (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z))) (/.f64 (-.f64 y x) (/.f64 (pow.f64 z 4) (pow.f64 t 3)))) (/.f64 (-.f64 y x) z))","(-.f64 (*.f64 (/.f64 (-.f64 y x) z) (-.f64 -1 (/.f64 t z))) (*.f64 (-.f64 y x) (+.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))))"]],"stop":[["node limit",1]],"time":59.005859375,"type":"simplify"},{"compiler":[[3401,1522]],"time":30.574951171875,"type":"eval"},{"alts":[["(fma.f64 60 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (/.f64 y (-.f64 t z)))) (cbrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (/.f64 x (-.f64 t z)))) (*.f64 a 120))","fresh",0.23931508791597814],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","done",0.1328125],["(pow.f64 (sqrt.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))) 2)","fresh",31.058300048842213],["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","next",0.140625],["(fma.f64 60 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z)))) (*.f64 a 120))","fresh",34.84603500976844],["(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) (*.f64 a 120))","fresh",0.4140625],["(fma.f64 120 a (/.f64 -60 (/.f64 (-.f64 t z) x)))","fresh",13.127938120750203]],"compiler":[[36,16],[17,12],[20,15],[17,12],[27,17],[18,13],[15,11],[36,16],[20,15],[17,12],[27,17],[18,13],[15,11]],"count":[[157,7]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[155,5],"picked":[1,1]}],"min-error":[0.00390625],"time":41.51416015625,"type":"prune"},{"compiler":[[44,19]],"locations":[["(/.f64 60 (-.f64 t z))",0.0078125,true],["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))",0.0234375,true],["(*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))",0.23828125,true]],"time":8.5859375,"type":"localize"},{"count":[[3,132]],"series":[["(/.f64 60 (-.f64 t z))","z","-inf",0.218017578125],["(/.f64 60 (-.f64 t z))","z","inf",0.2490234375],["(/.f64 60 (-.f64 t z))","z","0",0.278076171875],["(/.f64 60 (-.f64 t z))","t","-inf",0.2158203125],["(/.f64 60 (-.f64 t z))","t","inf",0.30908203125],["(/.f64 60 (-.f64 t z))","t","0",0.31396484375],["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","x","-inf",0.203125],["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","x","inf",0.18017578125],["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","x","0",0.212158203125],["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","y","-inf",0.18310546875],["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","y","inf",0.2080078125],["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","y","0",0.18115234375],["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","z","-inf",0.443115234375],["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","z","inf",0.19189453125],["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","z","0",0.27490234375],["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","t","-inf",0.201904296875],["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","t","inf",0.22509765625],["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","t","0",0.27880859375],["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","a","-inf",0.363037109375],["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","a","inf",0.302978515625],["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","a","0",0.177978515625],["(*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))","x","-inf",0.170166015625],["(*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))","x","inf",0.18701171875],["(*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))","x","0",0.16796875],["(*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))","y","-inf",0.26708984375],["(*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))","y","inf",0.331787109375],["(*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))","y","0",0.172119140625],["(*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))","z","-inf",0.22705078125],["(*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))","z","inf",0.278076171875],["(*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))","z","0",0.2490234375],["(*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))","t","-inf",0.2900390625],["(*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))","t","inf",0.301025390625],["(*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))","t","0",0.31103515625]],"time":8.64404296875,"type":"series"},{"count":[[3,104]],"egraph":[[2,3969,37,0.030795584],[1,290,37,0.0052012510000000005],[0,13,37,0.000360334]],"inputs":[["(*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))","(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","(/.f64 60 (-.f64 t z))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 60 (-.f64 t z)) y) (*.f64 (/.f64 60 (-.f64 t z)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 y x)) (/.f64 60 (-.f64 t z)))) (cbrt.f64 (pow.f64 (exp.f64 (-.f64 y x)) (/.f64 60 (-.f64 t z)))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 y x)) (/.f64 60 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 y x)) (/.f64 60 (-.f64 t z))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 y x)) (/.f64 60 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 60 (/.f64 (-.f64 t z) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 t z) (*.f64 60 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 y 3) (pow.f64 x 3)) (*.f64 (*.f64 (-.f64 t z) 1/60) (fma.f64 y y (*.f64 x (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 y y) (*.f64 x x)) (*.f64 (*.f64 (-.f64 t z) 1/60) (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 60 (-.f64 y x))) (neg.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 60 (-.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 (-.f64 t z) (fma.f64 y y (*.f64 x (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -60 (-.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 (neg.f64 (-.f64 t z)) (fma.f64 y y (*.f64 x (+.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 60 (-.f64 (*.f64 y y) (*.f64 x x))) (*.f64 (-.f64 t z) (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -60 (-.f64 (*.f64 y y) (*.f64 x x))) (*.f64 (neg.f64 (-.f64 t z)) (+.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 y 3) (pow.f64 x 3)) 60) (*.f64 (fma.f64 y y (*.f64 x (+.f64 y x))) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 y y) (*.f64 x x)) 60) (*.f64 (+.f64 y x) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 y 3) (pow.f64 x 3)) 1) (*.f64 (fma.f64 y y (*.f64 x (+.f64 y x))) (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 y y) (*.f64 x x)) 1) (*.f64 (+.f64 y x) (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 y 3) (pow.f64 x 3)) -60) (*.f64 (fma.f64 y y (*.f64 x (+.f64 y x))) (neg.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 y y) (*.f64 x x)) -60) (*.f64 (+.f64 y x) (neg.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 60 (-.f64 y x)) 1) (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 60 (-.f64 y x)) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 60 (-.f64 y x)) (sqrt.f64 (-.f64 t z))) (sqrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -60 (-.f64 y x)) (neg.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 60 (-.f64 t z))) (fma.f64 y y (*.f64 x (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 y y) (*.f64 x x)) (/.f64 60 (-.f64 t z))) (+.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 (pow.f64 y 3) (pow.f64 x 3))) (fma.f64 y y (*.f64 x (+.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 (*.f64 y y) (*.f64 x x))) (+.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 y x) -60) (neg.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (-.f64 y x)) (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 60 (-.f64 t z)) 3) (pow.f64 (-.f64 y x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 y x) 3) (pow.f64 (/.f64 60 (-.f64 t z)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 60 (-.f64 t z)) y (*.f64 (/.f64 60 (-.f64 t z)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) (/.f64 60 (-.f64 t z))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)) (*.f64 120 a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 120 a) (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 120 a) 1) (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a)))) (cbrt.f64 (exp.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a)))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a))) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a))) 2) (cbrt.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a))) (sqrt.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 120 a) 3) (pow.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)) 3)) (fma.f64 (*.f64 120 a) (*.f64 120 a) (-.f64 (pow.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)) 2) (*.f64 (*.f64 120 a) (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 120 a) (*.f64 120 a)) (pow.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)) 2)) (-.f64 (*.f64 120 a) (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (-.f64 y x)) (/.f64 60 (-.f64 t z))) (exp.f64 (*.f64 120 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))) (exp.f64 (*.f64 120 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 120 a)) (+.f64 1 (expm1.f64 (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x) (*.f64 120 a))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 60 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 60 (-.f64 t z)))) (cbrt.f64 (exp.f64 (/.f64 60 (-.f64 t z)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 60 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 60 (-.f64 t z))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 60 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 60 (-.f64 t z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 60 (/.f64 1 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 60 (-.f64 t z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 60 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2) (cbrt.f64 (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -60 (/.f64 1 (neg.f64 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t z)) 60)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 60 (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (fma.f64 z (+.f64 t z) (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 60 (-.f64 (*.f64 t t) (*.f64 z z))) (+.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 60 (-.f64 t z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 60 (-.f64 t z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 t z) 1/60) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 60 (-.f64 t z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 60 (-.f64 t z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 60 (-.f64 t z))) 1))))))"]],"rules":[["egg-rr",27],["egg-rr",29],["egg-rr",48]],"stop":[["node limit",1]],"time":58.887939453125,"type":"rewrite"},{"count":[[236,186]],"egraph":[[3,6055,2857,0.025216332],[2,1465,2865,0.011523291],[1,506,3232,0.003183166],[0,153,3267,0.000823041]],"inputs":[["(*.f64 -60 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (-.f64 y x) z)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) t)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(/.f64 -60 z)","(-.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 60 (/.f64 1 z)))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3)))) (*.f64 60 (/.f64 1 z)))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -60 (/.f64 (pow.f64 t 3) (pow.f64 z 4))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3))))) (*.f64 60 (/.f64 1 z)))","(/.f64 60 t)","(+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t))))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))))","(/.f64 60 t)","(+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t))))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))))","(/.f64 60 t)","(+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t))))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))))","(/.f64 -60 z)","(-.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 60 (/.f64 1 z)))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3)))) (*.f64 60 (/.f64 1 z)))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -60 (/.f64 (pow.f64 t 3) (pow.f64 z 4))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3))))) (*.f64 60 (/.f64 1 z)))","(/.f64 -60 z)","(-.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 60 (/.f64 1 z)))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3)))) (*.f64 60 (/.f64 1 z)))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -60 (/.f64 (pow.f64 t 3) (pow.f64 z 4))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3))))) (*.f64 60 (/.f64 1 z)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -60 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))) (*.f64 60 t)))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (*.f64 60 t)))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 (neg.f64 (/.f64 (-.f64 y x) (*.f64 z z))) (*.f64 60 t)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 60 (+.f64 (*.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))) (/.f64 (*.f64 t t) (/.f64 z (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))))))))","(fma.f64 60 (fma.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))) (*.f64 (/.f64 t (/.f64 z t)) (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))))) (*.f64 -60 (/.f64 (-.f64 y x) z)))","(fma.f64 60 (*.f64 (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 t (/.f64 t (/.f64 z t)))) (*.f64 -60 (/.f64 (-.f64 y x) z)))","(fma.f64 60 (*.f64 (neg.f64 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 t (/.f64 t (/.f64 z t)))) (*.f64 -60 (/.f64 (-.f64 y x) z)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 60 (*.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))) (*.f64 60 (+.f64 (/.f64 (pow.f64 t 3) (/.f64 (*.f64 z z) (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))))) (/.f64 (*.f64 t t) (/.f64 z (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 60 (+.f64 (*.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))) (+.f64 (*.f64 (/.f64 t (/.f64 z t)) (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))) (*.f64 (/.f64 (pow.f64 t 3) (*.f64 z z)) (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))))))))","(fma.f64 60 (fma.f64 t (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (*.f64 (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 (/.f64 t (/.f64 z t)) (/.f64 (pow.f64 t 3) (*.f64 z z))))) (*.f64 -60 (/.f64 (-.f64 y x) z)))","(fma.f64 60 (fma.f64 t (neg.f64 (/.f64 (-.f64 y x) (*.f64 z z))) (*.f64 (neg.f64 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 (/.f64 t (/.f64 z t)) (/.f64 (pow.f64 t 3) (*.f64 z z))))) (*.f64 -60 (/.f64 (-.f64 y x) z)))","(*.f64 60 (/.f64 (-.f64 y x) t))","(/.f64 (-.f64 y x) (/.f64 t 60))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t))))","(*.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)))))","(*.f64 60 (+.f64 (+.f64 (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)) (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z)))) (/.f64 (-.f64 y x) t)))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (-.f64 y x) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (*.f64 t t))))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 60 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))) (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 4) (pow.f64 z 3)))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))) (+.f64 (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 4)) (pow.f64 z 3)) (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t))))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (+.f64 (*.f64 (pow.f64 z 3) (/.f64 (-.f64 y x) (pow.f64 t 4))) (*.f64 (-.f64 y x) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (*.f64 t t)))))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(/.f64 (-.f64 y x) (/.f64 t 60))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t))))","(*.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)))))","(*.f64 60 (+.f64 (+.f64 (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)) (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z)))) (/.f64 (-.f64 y x) t)))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (-.f64 y x) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (*.f64 t t))))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 60 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))) (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 4) (pow.f64 z 3)))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))) (+.f64 (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 4)) (pow.f64 z 3)) (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t))))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (+.f64 (*.f64 (pow.f64 z 3) (/.f64 (-.f64 y x) (pow.f64 t 4))) (*.f64 (-.f64 y x) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (*.f64 t t)))))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(/.f64 (-.f64 y x) (/.f64 t 60))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t))))","(*.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)))))","(*.f64 60 (+.f64 (+.f64 (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)) (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z)))) (/.f64 (-.f64 y x) t)))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (-.f64 y x) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (*.f64 t t))))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 60 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))) (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 4) (pow.f64 z 3)))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))) (+.f64 (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 4)) (pow.f64 z 3)) (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t))))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (+.f64 (*.f64 (pow.f64 z 3) (/.f64 (-.f64 y x) (pow.f64 t 4))) (*.f64 (-.f64 y x) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (*.f64 t t)))))))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (/.f64 t (/.f64 (*.f64 z z) (-.f64 y x)))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z))))","(*.f64 -60 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 (-.f64 y x) z)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 -60 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x))) (/.f64 t (/.f64 (*.f64 z z) (-.f64 y x))))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (+.f64 (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)) (*.f64 (/.f64 t (/.f64 (pow.f64 z 3) t)) (-.f64 y x)))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (*.f64 (-.f64 y x) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t (*.f64 z z))))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 -60 (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 z 4) (-.f64 y x))) (*.f64 -60 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x))) (/.f64 t (/.f64 (*.f64 z z) (-.f64 y x)))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 -60 (+.f64 (+.f64 (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)) (*.f64 (/.f64 t (/.f64 (pow.f64 z 3) t)) (-.f64 y x))) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (-.f64 y x)))))","(*.f64 -60 (+.f64 (*.f64 (-.f64 y x) (+.f64 (/.f64 t (/.f64 (pow.f64 z 3) t)) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 (-.f64 y x) z))))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (/.f64 t (/.f64 (*.f64 z z) (-.f64 y x)))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z))))","(*.f64 -60 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 (-.f64 y x) z)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 -60 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x))) (/.f64 t (/.f64 (*.f64 z z) (-.f64 y x))))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (+.f64 (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)) (*.f64 (/.f64 t (/.f64 (pow.f64 z 3) t)) (-.f64 y x)))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (*.f64 (-.f64 y x) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t (*.f64 z z))))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 -60 (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 z 4) (-.f64 y x))) (*.f64 -60 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x))) (/.f64 t (/.f64 (*.f64 z z) (-.f64 y x)))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 -60 (+.f64 (+.f64 (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)) (*.f64 (/.f64 t (/.f64 (pow.f64 z 3) t)) (-.f64 y x))) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (-.f64 y x)))))","(*.f64 -60 (+.f64 (*.f64 (-.f64 y x) (+.f64 (/.f64 t (/.f64 (pow.f64 z 3) t)) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 (-.f64 y x) z))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(/.f64 -60 (/.f64 (-.f64 t z) x))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 y (/.f64 (-.f64 t z) 60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 y (/.f64 (-.f64 t z) 60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 y (/.f64 (-.f64 t z) 60)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 y 60) (-.f64 t z))","(/.f64 y (/.f64 (-.f64 t z) 60))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 y (/.f64 (-.f64 t z) 60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 y (/.f64 (-.f64 t z) 60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 y (/.f64 (-.f64 t z) 60)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 y 60) (-.f64 t z))","(/.f64 y (/.f64 (-.f64 t z) 60))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 y (/.f64 (-.f64 t z) 60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 y (/.f64 (-.f64 t z) 60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 y (/.f64 (-.f64 t z) 60)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 y 60) (-.f64 t z))","(/.f64 y (/.f64 (-.f64 t z) 60))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 y (/.f64 (-.f64 t z) 60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 y (/.f64 (-.f64 t z) 60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 y (/.f64 (-.f64 t z) 60)))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(/.f64 -60 (/.f64 (-.f64 t z) x))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 y (/.f64 (-.f64 t z) 60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 y (/.f64 (-.f64 t z) 60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 y (/.f64 (-.f64 t z) 60)))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(/.f64 -60 (/.f64 (-.f64 t z) x))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 y (/.f64 (-.f64 t z) 60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 y (/.f64 (-.f64 t z) 60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 y (/.f64 (-.f64 t z) 60)))","(*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)))","(/.f64 (*.f64 (-.f64 y x) 60) (-.f64 t z))","(/.f64 60 (/.f64 (-.f64 t z) (-.f64 y x)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (-.f64 y x) z)))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 60 (*.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))) (*.f64 60 t))))","(fma.f64 (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (*.f64 60 t) (fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a)))","(fma.f64 (neg.f64 (/.f64 (-.f64 y x) (*.f64 z z))) (*.f64 60 t) (fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 60 (+.f64 (*.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))) (/.f64 (*.f64 t t) (/.f64 z (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 60 (fma.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))) (*.f64 (/.f64 t (/.f64 z t)) (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))))) (*.f64 120 a)))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 60 (*.f64 (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 t (/.f64 t (/.f64 z t)))) (*.f64 120 a)))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 60 (*.f64 (neg.f64 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 t (/.f64 t (/.f64 z t)))) (*.f64 120 a)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (fma.f64 60 (*.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))) (*.f64 60 (+.f64 (/.f64 (pow.f64 t 3) (/.f64 (*.f64 z z) (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))))) (/.f64 (*.f64 t t) (/.f64 z (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))))))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 60 (+.f64 (*.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))) (+.f64 (*.f64 (/.f64 t (/.f64 z t)) (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))) (*.f64 (/.f64 (pow.f64 t 3) (*.f64 z z)) (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))))))))","(fma.f64 60 (fma.f64 t (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (*.f64 (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 (/.f64 t (/.f64 z t)) (/.f64 (pow.f64 t 3) (*.f64 z z))))) (fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a)))","(fma.f64 60 (fma.f64 t (neg.f64 (/.f64 (-.f64 y x) (*.f64 z z))) (*.f64 (neg.f64 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 (/.f64 t (/.f64 z t)) (/.f64 (pow.f64 t 3) (*.f64 z z))))) (fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a)))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 120 a))","(fma.f64 120 a (/.f64 (-.f64 y x) (/.f64 t 60)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 120 a (*.f64 60 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 60 (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)) (*.f64 120 a)))","(fma.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 60 (+.f64 (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)) (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z)))) (*.f64 120 a)))","(fma.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (-.f64 y x) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (*.f64 t t))))) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 120 a))","(fma.f64 120 a (/.f64 (-.f64 y x) (/.f64 t 60)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 120 a (*.f64 60 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 60 (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)) (*.f64 120 a)))","(fma.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 60 (+.f64 (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)) (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z)))) (*.f64 120 a)))","(fma.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (-.f64 y x) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (*.f64 t t))))) (*.f64 120 a))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) t)))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 120 a))","(fma.f64 120 a (/.f64 (-.f64 y x) (/.f64 t 60)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 120 a (*.f64 60 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 60 (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)) (*.f64 120 a)))","(fma.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 60 (+.f64 (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)) (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z)))) (*.f64 120 a)))","(fma.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (-.f64 y x) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (*.f64 t t))))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 120 a (fma.f64 60 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))) (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 4) (pow.f64 z 3))))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 3) (*.f64 z z))) (+.f64 (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 4)) (pow.f64 z 3)) (*.f64 (/.f64 (-.f64 y x) t) (/.f64 z t)))))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (+.f64 (*.f64 (pow.f64 z 3) (/.f64 (-.f64 y x) (pow.f64 t 4))) (*.f64 (-.f64 y x) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (*.f64 t t))))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 -60 (/.f64 t (/.f64 (*.f64 z z) (-.f64 y x))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 -60 (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)) (*.f64 120 a)))","(fma.f64 -60 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 -60 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x))) (/.f64 t (/.f64 (*.f64 z z) (-.f64 y x)))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 -60 (+.f64 (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)) (*.f64 (/.f64 t (/.f64 (pow.f64 z 3) t)) (-.f64 y x))) (*.f64 120 a)))","(fma.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (*.f64 (-.f64 y x) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t (*.f64 z z))))) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 -60 (/.f64 t (/.f64 (*.f64 z z) (-.f64 y x))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 -60 (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)) (*.f64 120 a)))","(fma.f64 -60 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 -60 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x))) (/.f64 t (/.f64 (*.f64 z z) (-.f64 y x)))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 -60 (+.f64 (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)) (*.f64 (/.f64 t (/.f64 (pow.f64 z 3) t)) (-.f64 y x))) (*.f64 120 a)))","(fma.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (*.f64 (-.f64 y x) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t (*.f64 z z))))) (*.f64 120 a))","(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 y 60) (-.f64 t z))","(/.f64 y (/.f64 (-.f64 t z) 60))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 y 60) (-.f64 t z))","(/.f64 y (/.f64 (-.f64 t z) 60))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(/.f64 -60 (/.f64 (-.f64 t z) x))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(/.f64 -60 (/.f64 (-.f64 t z) x))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (/.f64 (*.f64 y 60) (-.f64 t z))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(/.f64 -60 z)","(-.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 60 (/.f64 1 z)))","(-.f64 (*.f64 -60 (/.f64 t (*.f64 z z))) (/.f64 60 z))","(fma.f64 -60 (/.f64 t (*.f64 z z)) (/.f64 -60 z))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3)))) (*.f64 60 (/.f64 1 z)))","(-.f64 (*.f64 -60 (+.f64 (/.f64 t (*.f64 z z)) (/.f64 (*.f64 t t) (pow.f64 z 3)))) (/.f64 60 z))","(fma.f64 -60 (+.f64 (/.f64 t (*.f64 z z)) (/.f64 t (/.f64 (pow.f64 z 3) t))) (/.f64 -60 z))","(fma.f64 -60 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t (*.f64 z z))) (/.f64 -60 z))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -60 (/.f64 (pow.f64 t 3) (pow.f64 z 4))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3))))) (*.f64 60 (/.f64 1 z)))","(-.f64 (fma.f64 -60 (/.f64 t (*.f64 z z)) (*.f64 -60 (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (/.f64 (*.f64 t t) (pow.f64 z 3))))) (/.f64 60 z))","(fma.f64 -60 (/.f64 t (*.f64 z z)) (fma.f64 -60 (+.f64 (/.f64 t (/.f64 (pow.f64 z 3) t)) (/.f64 (pow.f64 t 3) (pow.f64 z 4))) (/.f64 -60 z)))","(fma.f64 -60 (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t (*.f64 z z)))) (/.f64 -60 z))","(/.f64 60 t)","(+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))","(fma.f64 60 (/.f64 z (*.f64 t t)) (/.f64 60 t))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t))))","(fma.f64 60 (/.f64 (*.f64 z z) (pow.f64 t 3)) (fma.f64 60 (/.f64 z (*.f64 t t)) (/.f64 60 t)))","(fma.f64 60 (/.f64 z (/.f64 (pow.f64 t 3) z)) (fma.f64 60 (/.f64 z (*.f64 t t)) (/.f64 60 t)))","(fma.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (*.f64 t t))) (/.f64 60 t))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))))","(fma.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4)) (fma.f64 60 (/.f64 (*.f64 z z) (pow.f64 t 3)) (fma.f64 60 (/.f64 z (*.f64 t t)) (/.f64 60 t))))","(fma.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4)) (fma.f64 60 (/.f64 z (/.f64 (pow.f64 t 3) z)) (fma.f64 60 (/.f64 z (*.f64 t t)) (/.f64 60 t))))","(fma.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4)) (fma.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (*.f64 t t))) (/.f64 60 t)))","(/.f64 60 t)","(+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))","(fma.f64 60 (/.f64 z (*.f64 t t)) (/.f64 60 t))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t))))","(fma.f64 60 (/.f64 (*.f64 z z) (pow.f64 t 3)) (fma.f64 60 (/.f64 z (*.f64 t t)) (/.f64 60 t)))","(fma.f64 60 (/.f64 z (/.f64 (pow.f64 t 3) z)) (fma.f64 60 (/.f64 z (*.f64 t t)) (/.f64 60 t)))","(fma.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (*.f64 t t))) (/.f64 60 t))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))))","(fma.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4)) (fma.f64 60 (/.f64 (*.f64 z z) (pow.f64 t 3)) (fma.f64 60 (/.f64 z (*.f64 t t)) (/.f64 60 t))))","(fma.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4)) (fma.f64 60 (/.f64 z (/.f64 (pow.f64 t 3) z)) (fma.f64 60 (/.f64 z (*.f64 t t)) (/.f64 60 t))))","(fma.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4)) (fma.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (*.f64 t t))) (/.f64 60 t)))","(/.f64 60 t)","(+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))","(fma.f64 60 (/.f64 z (*.f64 t t)) (/.f64 60 t))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t))))","(fma.f64 60 (/.f64 (*.f64 z z) (pow.f64 t 3)) (fma.f64 60 (/.f64 z (*.f64 t t)) (/.f64 60 t)))","(fma.f64 60 (/.f64 z (/.f64 (pow.f64 t 3) z)) (fma.f64 60 (/.f64 z (*.f64 t t)) (/.f64 60 t)))","(fma.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (*.f64 t t))) (/.f64 60 t))","(+.f64 (*.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 z (pow.f64 t 2))) (*.f64 60 (/.f64 1 t)))))","(fma.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4)) (fma.f64 60 (/.f64 (*.f64 z z) (pow.f64 t 3)) (fma.f64 60 (/.f64 z (*.f64 t t)) (/.f64 60 t))))","(fma.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4)) (fma.f64 60 (/.f64 z (/.f64 (pow.f64 t 3) z)) (fma.f64 60 (/.f64 z (*.f64 t t)) (/.f64 60 t))))","(fma.f64 60 (/.f64 (pow.f64 z 3) (pow.f64 t 4)) (fma.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (*.f64 t t))) (/.f64 60 t)))","(/.f64 -60 z)","(-.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 60 (/.f64 1 z)))","(-.f64 (*.f64 -60 (/.f64 t (*.f64 z z))) (/.f64 60 z))","(fma.f64 -60 (/.f64 t (*.f64 z z)) (/.f64 -60 z))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3)))) (*.f64 60 (/.f64 1 z)))","(-.f64 (*.f64 -60 (+.f64 (/.f64 t (*.f64 z z)) (/.f64 (*.f64 t t) (pow.f64 z 3)))) (/.f64 60 z))","(fma.f64 -60 (+.f64 (/.f64 t (*.f64 z z)) (/.f64 t (/.f64 (pow.f64 z 3) t))) (/.f64 -60 z))","(fma.f64 -60 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t (*.f64 z z))) (/.f64 -60 z))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -60 (/.f64 (pow.f64 t 3) (pow.f64 z 4))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3))))) (*.f64 60 (/.f64 1 z)))","(-.f64 (fma.f64 -60 (/.f64 t (*.f64 z z)) (*.f64 -60 (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (/.f64 (*.f64 t t) (pow.f64 z 3))))) (/.f64 60 z))","(fma.f64 -60 (/.f64 t (*.f64 z z)) (fma.f64 -60 (+.f64 (/.f64 t (/.f64 (pow.f64 z 3) t)) (/.f64 (pow.f64 t 3) (pow.f64 z 4))) (/.f64 -60 z)))","(fma.f64 -60 (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t (*.f64 z z)))) (/.f64 -60 z))","(/.f64 -60 z)","(-.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 60 (/.f64 1 z)))","(-.f64 (*.f64 -60 (/.f64 t (*.f64 z z))) (/.f64 60 z))","(fma.f64 -60 (/.f64 t (*.f64 z z)) (/.f64 -60 z))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3)))) (*.f64 60 (/.f64 1 z)))","(-.f64 (*.f64 -60 (+.f64 (/.f64 t (*.f64 z z)) (/.f64 (*.f64 t t) (pow.f64 z 3)))) (/.f64 60 z))","(fma.f64 -60 (+.f64 (/.f64 t (*.f64 z z)) (/.f64 t (/.f64 (pow.f64 z 3) t))) (/.f64 -60 z))","(fma.f64 -60 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t (*.f64 z z))) (/.f64 -60 z))","(-.f64 (+.f64 (*.f64 -60 (/.f64 t (pow.f64 z 2))) (+.f64 (*.f64 -60 (/.f64 (pow.f64 t 3) (pow.f64 z 4))) (*.f64 -60 (/.f64 (pow.f64 t 2) (pow.f64 z 3))))) (*.f64 60 (/.f64 1 z)))","(-.f64 (fma.f64 -60 (/.f64 t (*.f64 z z)) (*.f64 -60 (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (/.f64 (*.f64 t t) (pow.f64 z 3))))) (/.f64 60 z))","(fma.f64 -60 (/.f64 t (*.f64 z z)) (fma.f64 -60 (+.f64 (/.f64 t (/.f64 (pow.f64 z 3) t)) (/.f64 (pow.f64 t 3) (pow.f64 z 4))) (/.f64 -60 z)))","(fma.f64 -60 (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t (*.f64 z z)))) (/.f64 -60 z))"]],"stop":[["node limit",1]],"time":63.9150390625,"type":"simplify"},{"compiler":[[3997,2005]],"time":37.81787109375,"type":"eval"},{"alts":[["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","done",0.140625],["(fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))","next",0.1640625],["(fma.f64 60 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (/.f64 y (-.f64 t z)))) (cbrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (/.f64 x (-.f64 t z)))) (*.f64 a 120))","fresh",0.23931508791597814],["(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 (*.f64 y y) (*.f64 x x))) (*.f64 (-.f64 t z) (+.f64 y x))))","fresh",29.501250348314947],["(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","fresh",0.3984375],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","done",0.1328125]],"compiler":[[17,12],[17,12],[36,16],[25,16],[17,12],[17,12],[17,12],[36,16],[25,16],[17,12]],"count":[[193,6]],"kept":[{"done":[1,1],"fresh":[5,1],"new":[186,3],"picked":[1,1]}],"min-error":[0.00390625],"time":53.7421875,"type":"prune"},{"compiler":[[44,19]],"locations":[["(fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))",0.0234375,true],["(*.f64 (-.f64 t z) 1/60)",0.1015625,true],["(/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))",0.265625,true]],"time":8.764892578125,"type":"localize"},{"count":[[3,132]],"series":[["(fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))","z","-inf",0.196044921875],["(fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))","z","inf",0.18505859375],["(fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))","z","0",0.22705078125],["(fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))","t","-inf",0.18017578125],["(fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))","t","inf",0.184814453125],["(fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))","t","0",0.273193359375],["(fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))","x","-inf",0.465087890625],["(fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))","x","inf",0.194091796875],["(fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))","x","0",0.1689453125],["(fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))","y","-inf",0.197998046875],["(fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))","y","inf",0.168212890625],["(fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))","y","0",0.197021484375],["(fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))","a","-inf",0.156982421875],["(fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))","a","inf",0.156982421875],["(fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))","a","0",0.18896484375],["(*.f64 (-.f64 t z) 1/60)","z","-inf",0.215087890625],["(*.f64 (-.f64 t z) 1/60)","z","inf",0.279052734375],["(*.f64 (-.f64 t z) 1/60)","z","0",0.2138671875],["(*.f64 (-.f64 t z) 1/60)","t","-inf",0.2470703125],["(*.f64 (-.f64 t z) 1/60)","t","inf",0.294189453125],["(*.f64 (-.f64 t z) 1/60)","t","0",0.232177734375],["(/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))","z","-inf",0.236083984375],["(/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))","z","inf",0.2080078125],["(/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))","z","0",0.22900390625],["(/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))","t","-inf",0.20703125],["(/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))","t","inf",0.239013671875],["(/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))","t","0",0.22607421875],["(/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))","x","-inf",0.171142578125],["(/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))","x","inf",0.19189453125],["(/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))","x","0",0.1689453125],["(/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))","y","-inf",0.197998046875],["(/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))","y","inf",0.177001953125],["(/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))","y","0",0.242919921875]],"time":7.56005859375,"type":"series"},{"count":[[3,118]],"egraph":[[2,4217,37,0.031171876],[1,292,37,0.0055871259999999996],[0,13,37,0.000372709]],"inputs":[["(/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60))","(*.f64 (-.f64 t z) 1/60)","(fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 y x)) (/.f64 60 (-.f64 t z)))) (cbrt.f64 (pow.f64 (exp.f64 (-.f64 y x)) (/.f64 60 (-.f64 t z)))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 y x)) (/.f64 60 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 y x)) (/.f64 60 (-.f64 t z))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 y x)) (/.f64 60 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (*.f64 x (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))) (pow.f64 (cbrt.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))) 2) (cbrt.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 y x)) 2) (*.f64 (cbrt.f64 (-.f64 y x)) (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))) (sqrt.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 y x)) (*.f64 (sqrt.f64 (-.f64 y x)) (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 y x)) (/.f64 1 (*.f64 (-.f64 t z) -1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 y x) (-.f64 t z)) 60)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 y x)) 2) 1) (/.f64 (cbrt.f64 (-.f64 y x)) (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 y x)) 1) (/.f64 (sqrt.f64 (-.f64 y x)) (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 y x)) (-.f64 t z)) (/.f64 (sqrt.f64 (-.f64 y x)) 1/60))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 t z)) (/.f64 (-.f64 y x) 1/60))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 (-.f64 t z) 1/60)) 2)) (/.f64 (-.f64 y x) (cbrt.f64 (*.f64 (-.f64 t z) 1/60))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (*.f64 (-.f64 t z) 1/60))) (/.f64 (-.f64 y x) (sqrt.f64 (*.f64 (-.f64 t z) 1/60))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 y x)) 2) (-.f64 t z)) (/.f64 (cbrt.f64 (-.f64 y x)) 1/60))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 y x)) 1/60) (/.f64 (sqrt.f64 (-.f64 y x)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 y x)) 2) 1/60) (/.f64 (cbrt.f64 (-.f64 y x)) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 y x)) 2) (pow.f64 (cbrt.f64 (*.f64 (-.f64 t z) 1/60)) 2)) (cbrt.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 y x)) (pow.f64 (cbrt.f64 (*.f64 (-.f64 t z) 1/60)) 2)) (/.f64 (sqrt.f64 (-.f64 y x)) (cbrt.f64 (*.f64 (-.f64 t z) 1/60))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 y x)) 2) (sqrt.f64 (*.f64 (-.f64 t z) 1/60))) (/.f64 (cbrt.f64 (-.f64 y x)) (sqrt.f64 (*.f64 (-.f64 t z) 1/60))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/60 (/.f64 (-.f64 t z) (-.f64 y x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 1/60 (/.f64 (-.f64 t z) (-.f64 y x))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) -1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (-.f64 y x)) (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 y x) 3) (pow.f64 (*.f64 (-.f64 t z) 1/60) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 60 (-.f64 t z)) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (-.f64 t z)) (/.f64 (cbrt.f64 y) 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 y) (-.f64 t z)) (/.f64 (sqrt.f64 y) 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 y) 1/60) (/.f64 (sqrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 60 (/.f64 y (-.f64 t z)) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1/60) (/.f64 (cbrt.f64 y) (-.f64 t z)) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (/.f64 (cbrt.f64 y) (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 (-.f64 t z) 1/60)) 2)) (/.f64 y (cbrt.f64 (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (*.f64 (-.f64 t z) 1/60)) 2)) (/.f64 (cbrt.f64 y) (cbrt.f64 (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (*.f64 (-.f64 t z) 1/60)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (*.f64 (-.f64 t z) 1/60))) (/.f64 y (sqrt.f64 (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (*.f64 (-.f64 t z) 1/60))) (/.f64 (cbrt.f64 y) (sqrt.f64 (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 (-.f64 t z) 1/60))) (/.f64 (sqrt.f64 y) (sqrt.f64 (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (-.f64 t z) 1/60))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t 1/60) (*.f64 (neg.f64 z) 1/60))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/60 t) (*.f64 1/60 (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 1/60) (-.f64 t z))) (cbrt.f64 (pow.f64 (exp.f64 1/60) (-.f64 t z))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 1/60) (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 1/60) (-.f64 t z)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 1/60) (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (-.f64 t z) 1/60))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 t 3) (pow.f64 z 3)) 1/60) (fma.f64 t t (*.f64 z (+.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (+.f64 t z) (-.f64 t z)) 1/60) (+.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/60 (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (fma.f64 t t (*.f64 z (+.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/60 (*.f64 (+.f64 t z) (-.f64 t z))) (+.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 t z) 1/60) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 t z) 1/60) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 t z) 1/60)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (-.f64 t z) 1/60)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 1/3600 (pow.f64 (-.f64 t z) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 1/60) (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 t z) 1/60))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 t z) 1/60) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (-.f64 t z) 1/60)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t 1/60 (*.f64 (neg.f64 z) 1/60))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/60 t (*.f64 1/60 (neg.f64 z)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))) (*.f64 120 a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 120 a) (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 120 a) 1) (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a)))) (cbrt.f64 (exp.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a)))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 120 a (/.f64 y (*.f64 (-.f64 t z) 1/60))) (*.f64 x (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a))) (pow.f64 (cbrt.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a))) 2) (cbrt.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a))) (sqrt.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 120 a) 3) (pow.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))) 3)) (fma.f64 (*.f64 120 a) (*.f64 120 a) (-.f64 (pow.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))) 2) (*.f64 (*.f64 120 a) (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 120 a) (*.f64 120 a)) (pow.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))) 2)) (-.f64 (*.f64 120 a) (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (-.f64 y x)) (/.f64 60 (-.f64 t z))) (exp.f64 (*.f64 120 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z))))) (exp.f64 (*.f64 120 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 120 a)) (+.f64 1 (expm1.f64 (*.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (-.f64 y x) (/.f64 60 (-.f64 t z)) (*.f64 120 a))) 1))))))"]],"rules":[["egg-rr",30],["egg-rr",24],["egg-rr",64]],"stop":[["node limit",1]],"time":57.44091796875,"type":"rewrite"},{"count":[[250,193]],"egraph":[[3,5052,2458,0.022785833999999998],[2,1195,2586,0.009402708999999999],[1,427,2896,0.002619084],[0,131,2913,0.000708334]],"inputs":[["(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(*.f64 -1/60 z)","(+.f64 (*.f64 1/60 t) (*.f64 -1/60 z))","(+.f64 (*.f64 1/60 t) (*.f64 -1/60 z))","(+.f64 (*.f64 1/60 t) (*.f64 -1/60 z))","(*.f64 1/60 t)","(+.f64 (*.f64 -1/60 z) (*.f64 1/60 t))","(+.f64 (*.f64 -1/60 z) (*.f64 1/60 t))","(+.f64 (*.f64 -1/60 z) (*.f64 1/60 t))","(*.f64 1/60 t)","(+.f64 (*.f64 -1/60 z) (*.f64 1/60 t))","(+.f64 (*.f64 -1/60 z) (*.f64 1/60 t))","(+.f64 (*.f64 -1/60 z) (*.f64 1/60 t))","(*.f64 1/60 t)","(+.f64 (*.f64 -1/60 z) (*.f64 1/60 t))","(+.f64 (*.f64 -1/60 z) (*.f64 1/60 t))","(+.f64 (*.f64 -1/60 z) (*.f64 1/60 t))","(*.f64 -1/60 z)","(+.f64 (*.f64 1/60 t) (*.f64 -1/60 z))","(+.f64 (*.f64 1/60 t) (*.f64 -1/60 z))","(+.f64 (*.f64 1/60 t) (*.f64 -1/60 z))","(*.f64 -1/60 z)","(+.f64 (*.f64 1/60 t) (*.f64 -1/60 z))","(+.f64 (*.f64 1/60 t) (*.f64 -1/60 z))","(+.f64 (*.f64 1/60 t) (*.f64 -1/60 z))","(*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (-.f64 y x) z)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) t)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(/.f64 x (/.f64 (-.f64 t z) -60))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) -60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) -60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) -60)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) -60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) -60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) -60)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) -60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) -60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) -60)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) -60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) -60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) -60)))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(/.f64 x (/.f64 (-.f64 t z) -60))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) -60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) -60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) -60)))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(/.f64 x (/.f64 (-.f64 t z) -60))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) -60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) -60)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 x (/.f64 (-.f64 t z) -60)))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(/.f64 (*.f64 -60 (-.f64 y x)) z)","(*.f64 (/.f64 -60 z) (-.f64 y x))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 (*.f64 60 t) (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 t (*.f64 60 (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))))))","(fma.f64 60 (*.f64 (-.f64 y x) (/.f64 (/.f64 (neg.f64 t) z) z)) (*.f64 (/.f64 -60 z) (-.f64 y x)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 60 (+.f64 (*.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))) (/.f64 (*.f64 t t) (/.f64 z (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))))))))","(fma.f64 60 (fma.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))) (*.f64 (/.f64 (*.f64 t t) z) (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))))) (*.f64 -60 (/.f64 (-.f64 y x) z)))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 60 (*.f64 (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 t (*.f64 (/.f64 t z) t)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 60 (*.f64 (neg.f64 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 t (*.f64 (/.f64 t z) t)))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 60 (*.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))) (*.f64 60 (+.f64 (/.f64 (pow.f64 t 3) (/.f64 (*.f64 z z) (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))))) (/.f64 (*.f64 t t) (/.f64 z (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 60 (+.f64 (*.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))) (+.f64 (*.f64 (/.f64 (*.f64 t t) z) (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))) (*.f64 (/.f64 (pow.f64 t 3) (*.f64 z z)) (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))))))))","(fma.f64 60 (fma.f64 t (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (*.f64 (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 (*.f64 (/.f64 t z) t) (/.f64 (pow.f64 t 3) (*.f64 z z))))) (*.f64 -60 (/.f64 (-.f64 y x) z)))","(fma.f64 60 (*.f64 (neg.f64 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 t (*.f64 t (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t z))))) (*.f64 (/.f64 -60 z) (-.f64 y x)))","(*.f64 60 (/.f64 (-.f64 y x) t))","(*.f64 (/.f64 60 t) (-.f64 y x))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 z (/.f64 (*.f64 t t) (-.f64 y x)))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z))))","(*.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t)))","(*.f64 (/.f64 (-.f64 y x) t) (+.f64 60 (/.f64 (*.f64 z 60) t)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (/.f64 (*.f64 (-.f64 y x) (*.f64 z z)) (pow.f64 t 3)) (/.f64 z (/.f64 (*.f64 t t) (-.f64 y x))))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z)))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 z (/.f64 (*.f64 z z) t)))))","(*.f64 60 (*.f64 (/.f64 (-.f64 y x) t) (+.f64 (/.f64 z t) (+.f64 (*.f64 (/.f64 z t) (/.f64 z t)) 1))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 60 (/.f64 (*.f64 (-.f64 y x) (*.f64 z z)) (pow.f64 t 3)) (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 4) (pow.f64 z 3))) (/.f64 z (/.f64 (*.f64 t t) (-.f64 y x)))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (+.f64 (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 t 4) (-.f64 y x))) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z))) (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z)))))","(*.f64 60 (+.f64 (*.f64 (+.f64 (/.f64 (/.f64 (*.f64 z z) t) t) 1) (/.f64 (-.f64 y x) t)) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 (/.f64 (/.f64 (pow.f64 z 3) t) t) z))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 z (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (/.f64 t z)))))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(*.f64 (/.f64 60 t) (-.f64 y x))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 z (/.f64 (*.f64 t t) (-.f64 y x)))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z))))","(*.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t)))","(*.f64 (/.f64 (-.f64 y x) t) (+.f64 60 (/.f64 (*.f64 z 60) t)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (/.f64 (*.f64 (-.f64 y x) (*.f64 z z)) (pow.f64 t 3)) (/.f64 z (/.f64 (*.f64 t t) (-.f64 y x))))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z)))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 z (/.f64 (*.f64 z z) t)))))","(*.f64 60 (*.f64 (/.f64 (-.f64 y x) t) (+.f64 (/.f64 z t) (+.f64 (*.f64 (/.f64 z t) (/.f64 z t)) 1))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 60 (/.f64 (*.f64 (-.f64 y x) (*.f64 z z)) (pow.f64 t 3)) (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 4) (pow.f64 z 3))) (/.f64 z (/.f64 (*.f64 t t) (-.f64 y x)))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (+.f64 (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 t 4) (-.f64 y x))) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z))) (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z)))))","(*.f64 60 (+.f64 (*.f64 (+.f64 (/.f64 (/.f64 (*.f64 z z) t) t) 1) (/.f64 (-.f64 y x) t)) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 (/.f64 (/.f64 (pow.f64 z 3) t) t) z))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 z (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (/.f64 t z)))))))","(*.f64 60 (/.f64 (-.f64 y x) t))","(*.f64 (/.f64 60 t) (-.f64 y x))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 z (/.f64 (*.f64 t t) (-.f64 y x)))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z))))","(*.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t)))","(*.f64 (/.f64 (-.f64 y x) t) (+.f64 60 (/.f64 (*.f64 z 60) t)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (/.f64 (*.f64 (-.f64 y x) (*.f64 z z)) (pow.f64 t 3)) (/.f64 z (/.f64 (*.f64 t t) (-.f64 y x))))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z)))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 z (/.f64 (*.f64 z z) t)))))","(*.f64 60 (*.f64 (/.f64 (-.f64 y x) t) (+.f64 (/.f64 z t) (+.f64 (*.f64 (/.f64 z t) (/.f64 z t)) 1))))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 60 (/.f64 (*.f64 (-.f64 y x) (*.f64 z z)) (pow.f64 t 3)) (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 4) (pow.f64 z 3))) (/.f64 z (/.f64 (*.f64 t t) (-.f64 y x)))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 60 (+.f64 (+.f64 (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 t 4) (-.f64 y x))) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z))) (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z)))))","(*.f64 60 (+.f64 (*.f64 (+.f64 (/.f64 (/.f64 (*.f64 z z) t) t) 1) (/.f64 (-.f64 y x) t)) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 (/.f64 (/.f64 (pow.f64 z 3) t) t) z))))","(*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 z (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (/.f64 t z)))))))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(/.f64 (*.f64 -60 (-.f64 y x)) z)","(*.f64 (/.f64 -60 z) (-.f64 y x))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z))))","(*.f64 -60 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 (-.f64 y x) z)))","(*.f64 (+.f64 (/.f64 t z) 1) (*.f64 (/.f64 -60 z) (-.f64 y x)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 -60 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x))) (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z)))))","(*.f64 -60 (+.f64 (+.f64 (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)) (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x)))) (/.f64 (-.f64 y x) z)))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (*.f64 (/.f64 (-.f64 y x) z) (+.f64 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 t z))))))","(*.f64 -60 (*.f64 (/.f64 (-.f64 y x) z) (+.f64 (/.f64 t z) (+.f64 (*.f64 (/.f64 t z) (/.f64 t z)) 1))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 -60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 t 3)) (pow.f64 z 4)) (*.f64 -60 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x))) (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 -60 (+.f64 (+.f64 (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)) (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x)))) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (-.f64 y x)))))","(*.f64 -60 (+.f64 (*.f64 (-.f64 y x) (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (/.f64 t (/.f64 (pow.f64 z 3) t)))) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 (-.f64 y x) z))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (*.f64 (/.f64 (-.f64 y x) (*.f64 z z)) (+.f64 t (*.f64 t (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t z)))))))","(*.f64 -60 (/.f64 (-.f64 y x) z))","(/.f64 (*.f64 -60 (-.f64 y x)) z)","(*.f64 (/.f64 -60 z) (-.f64 y x))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z))))","(*.f64 -60 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 (-.f64 y x) z)))","(*.f64 (+.f64 (/.f64 t z) 1) (*.f64 (/.f64 -60 z) (-.f64 y x)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 -60 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x))) (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z)))))","(*.f64 -60 (+.f64 (+.f64 (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)) (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x)))) (/.f64 (-.f64 y x) z)))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (*.f64 (/.f64 (-.f64 y x) z) (+.f64 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 t z))))))","(*.f64 -60 (*.f64 (/.f64 (-.f64 y x) z) (+.f64 (/.f64 t z) (+.f64 (*.f64 (/.f64 t z) (/.f64 t z)) 1))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 y x)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 -60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 t 3)) (pow.f64 z 4)) (*.f64 -60 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x))) (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 -60 (+.f64 (+.f64 (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)) (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x)))) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (-.f64 y x)))))","(*.f64 -60 (+.f64 (*.f64 (-.f64 y x) (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (/.f64 t (/.f64 (pow.f64 z 3) t)))) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 (-.f64 y x) z))))","(*.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (*.f64 (/.f64 (-.f64 y x) (*.f64 z z)) (+.f64 t (*.f64 t (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t z)))))))","(*.f64 -1/60 z)","(*.f64 z -1/60)","(+.f64 (*.f64 1/60 t) (*.f64 -1/60 z))","(fma.f64 -1/60 z (*.f64 t 1/60))","(fma.f64 t 1/60 (*.f64 z -1/60))","(+.f64 (*.f64 1/60 t) (*.f64 -1/60 z))","(fma.f64 -1/60 z (*.f64 t 1/60))","(fma.f64 t 1/60 (*.f64 z -1/60))","(+.f64 (*.f64 1/60 t) (*.f64 -1/60 z))","(fma.f64 -1/60 z (*.f64 t 1/60))","(fma.f64 t 1/60 (*.f64 z -1/60))","(*.f64 1/60 t)","(*.f64 t 1/60)","(+.f64 (*.f64 -1/60 z) (*.f64 1/60 t))","(fma.f64 -1/60 z (*.f64 t 1/60))","(fma.f64 t 1/60 (*.f64 z -1/60))","(+.f64 (*.f64 -1/60 z) (*.f64 1/60 t))","(fma.f64 -1/60 z (*.f64 t 1/60))","(fma.f64 t 1/60 (*.f64 z -1/60))","(+.f64 (*.f64 -1/60 z) (*.f64 1/60 t))","(fma.f64 -1/60 z (*.f64 t 1/60))","(fma.f64 t 1/60 (*.f64 z -1/60))","(*.f64 1/60 t)","(*.f64 t 1/60)","(+.f64 (*.f64 -1/60 z) (*.f64 1/60 t))","(fma.f64 -1/60 z (*.f64 t 1/60))","(fma.f64 t 1/60 (*.f64 z -1/60))","(+.f64 (*.f64 -1/60 z) (*.f64 1/60 t))","(fma.f64 -1/60 z (*.f64 t 1/60))","(fma.f64 t 1/60 (*.f64 z -1/60))","(+.f64 (*.f64 -1/60 z) (*.f64 1/60 t))","(fma.f64 -1/60 z (*.f64 t 1/60))","(fma.f64 t 1/60 (*.f64 z -1/60))","(*.f64 1/60 t)","(*.f64 t 1/60)","(+.f64 (*.f64 -1/60 z) (*.f64 1/60 t))","(fma.f64 -1/60 z (*.f64 t 1/60))","(fma.f64 t 1/60 (*.f64 z -1/60))","(+.f64 (*.f64 -1/60 z) (*.f64 1/60 t))","(fma.f64 -1/60 z (*.f64 t 1/60))","(fma.f64 t 1/60 (*.f64 z -1/60))","(+.f64 (*.f64 -1/60 z) (*.f64 1/60 t))","(fma.f64 -1/60 z (*.f64 t 1/60))","(fma.f64 t 1/60 (*.f64 z -1/60))","(*.f64 -1/60 z)","(*.f64 z -1/60)","(+.f64 (*.f64 1/60 t) (*.f64 -1/60 z))","(fma.f64 -1/60 z (*.f64 t 1/60))","(fma.f64 t 1/60 (*.f64 z -1/60))","(+.f64 (*.f64 1/60 t) (*.f64 -1/60 z))","(fma.f64 -1/60 z (*.f64 t 1/60))","(fma.f64 t 1/60 (*.f64 z -1/60))","(+.f64 (*.f64 1/60 t) (*.f64 -1/60 z))","(fma.f64 -1/60 z (*.f64 t 1/60))","(fma.f64 t 1/60 (*.f64 z -1/60))","(*.f64 -1/60 z)","(*.f64 z -1/60)","(+.f64 (*.f64 1/60 t) (*.f64 -1/60 z))","(fma.f64 -1/60 z (*.f64 t 1/60))","(fma.f64 t 1/60 (*.f64 z -1/60))","(+.f64 (*.f64 1/60 t) (*.f64 -1/60 z))","(fma.f64 -1/60 z (*.f64 t 1/60))","(fma.f64 t 1/60 (*.f64 z -1/60))","(+.f64 (*.f64 1/60 t) (*.f64 -1/60 z))","(fma.f64 -1/60 z (*.f64 t 1/60))","(fma.f64 t 1/60 (*.f64 z -1/60))","(*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) (-.f64 t z))) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (/.f64 (*.f64 -60 x) (-.f64 t z)))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z)))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z)))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z)))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z)))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z)))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z)))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 60 y) (-.f64 t z))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z)))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z)))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z)))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 120 a (/.f64 (*.f64 60 y) (-.f64 t z)))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z)))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z)))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z)))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(/.f64 x (/.f64 (-.f64 t z) -60))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z)))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z)))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z)))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(/.f64 (*.f64 -60 x) (-.f64 t z))","(/.f64 x (/.f64 (-.f64 t z) -60))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z)))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z)))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (fma.f64 60 (/.f64 y (-.f64 t z)) (/.f64 (*.f64 -60 x) (-.f64 t z))))","(fma.f64 120 a (fma.f64 -60 (/.f64 x (-.f64 t z)) (*.f64 60 (/.f64 y (-.f64 t z)))))","(fma.f64 -60 (/.f64 x (-.f64 t z)) (fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a)))","(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (-.f64 y x) z)))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 (*.f64 60 t) (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 (*.f64 t 60) (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))) (*.f64 120 a)))","(fma.f64 (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (*.f64 t 60) (fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a)))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 60 (*.f64 (-.f64 y x) (/.f64 (/.f64 (neg.f64 t) z) z)) (*.f64 120 a)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 60 (+.f64 (*.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))) (/.f64 (*.f64 t t) (/.f64 z (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 60 (fma.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))) (*.f64 (/.f64 (*.f64 t t) z) (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))))) (*.f64 120 a)))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 60 (*.f64 (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 t (*.f64 (/.f64 t z) t))) (*.f64 120 a)))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 60 (*.f64 (neg.f64 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 t (*.f64 (/.f64 t z) t))) (*.f64 120 a)))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (*.f64 t (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) (pow.f64 z 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 (/.f64 x (pow.f64 z 2)) (/.f64 y (pow.f64 z 2)))) z))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (fma.f64 60 (*.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))) (*.f64 60 (+.f64 (/.f64 (pow.f64 t 3) (/.f64 (*.f64 z z) (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))))) (/.f64 (*.f64 t t) (/.f64 z (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z))))))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 60 (+.f64 (*.f64 t (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))) (+.f64 (*.f64 (/.f64 (*.f64 t t) z) (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))) (*.f64 (/.f64 (pow.f64 t 3) (*.f64 z z)) (-.f64 (/.f64 x (*.f64 z z)) (/.f64 y (*.f64 z z)))))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 60 (fma.f64 t (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (*.f64 (-.f64 0 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 (*.f64 (/.f64 t z) t) (/.f64 (pow.f64 t 3) (*.f64 z z))))) (*.f64 120 a)))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 60 (*.f64 (neg.f64 (/.f64 (-.f64 y x) (*.f64 z z))) (+.f64 t (*.f64 t (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t z))))) (*.f64 120 a)))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 120 a))","(fma.f64 120 a (*.f64 (/.f64 60 t) (-.f64 y x)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 120 a (*.f64 60 (/.f64 z (/.f64 (*.f64 t t) (-.f64 y x))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 60 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (*.f64 120 a)))","(fma.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) (-.f64 y x)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (*.f64 (-.f64 y x) (*.f64 z z)) (pow.f64 t 3)) (/.f64 z (/.f64 (*.f64 t t) (-.f64 y x)))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z))) (*.f64 120 a)))","(fma.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 z (/.f64 (*.f64 z z) t)))) (*.f64 120 a))","(fma.f64 60 (*.f64 (/.f64 (-.f64 y x) t) (+.f64 (/.f64 z t) (+.f64 (*.f64 (/.f64 z t) (/.f64 z t)) 1))) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 120 a))","(fma.f64 120 a (*.f64 (/.f64 60 t) (-.f64 y x)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2)))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 120 a (*.f64 60 (/.f64 z (/.f64 (*.f64 t t) (-.f64 y x))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 60 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (*.f64 120 a)))","(fma.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 z (-.f64 y x)) (pow.f64 t 2))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (*.f64 (-.f64 y x) (*.f64 z z)) (pow.f64 t 3)) (/.f64 z (/.f64 (*.f64 t t) (-.f64 y x)))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z))) (*.f64 120 a)))","(fma.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 z (/.f64 (*.f64 z z) t)))) (*.f64 120 a))","(fma.f64 60 (*.f64 (/.f64 (-.f64 y x) t) (+.f64 (/.f64 z t) (+.f64 (*.f64 (/.f64 z t) (/.f64 z t)) 1))) (*.f64 120 a))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (-.f64 y x) t)))","(fma.f64 60 (/.f64 (-.f64 y x) t) (*.f64 120 a))","(fma.f64 120 a (*.f64 (/.f64 60 t) (-.f64 y x)))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 120 a (*.f64 60 (/.f64 z (/.f64 (*.f64 t t) (-.f64 y x))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 60 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (*.f64 120 a)))","(fma.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (-.f64 y x) t)) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (*.f64 (-.f64 y x) (*.f64 z z)) (pow.f64 t 3)) (/.f64 z (/.f64 (*.f64 t t) (-.f64 y x)))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z)) (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z))) (*.f64 120 a)))","(fma.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 z (/.f64 (*.f64 z z) t)))) (*.f64 120 a))","(fma.f64 60 (*.f64 (/.f64 (-.f64 y x) t) (+.f64 (/.f64 z t) (+.f64 (*.f64 (/.f64 z t) (/.f64 z t)) 1))) (*.f64 120 a))","(+.f64 (*.f64 60 (/.f64 (-.f64 y x) t)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 2)) (pow.f64 t 3))) (+.f64 (*.f64 60 (/.f64 (*.f64 (-.f64 y x) (pow.f64 z 3)) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 (-.f64 y x) z) (pow.f64 t 2)))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 120 a (fma.f64 60 (/.f64 (*.f64 (-.f64 y x) (*.f64 z z)) (pow.f64 t 3)) (*.f64 60 (+.f64 (/.f64 (-.f64 y x) (/.f64 (pow.f64 t 4) (pow.f64 z 3))) (/.f64 z (/.f64 (*.f64 t t) (-.f64 y x))))))))","(fma.f64 60 (/.f64 (-.f64 y x) t) (fma.f64 120 a (*.f64 60 (+.f64 (+.f64 (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 t 4) (-.f64 y x))) (/.f64 (-.f64 y x) (/.f64 (*.f64 t t) z))) (*.f64 (/.f64 (-.f64 y x) (pow.f64 t 3)) (*.f64 z z))))))","(fma.f64 120 a (*.f64 60 (+.f64 (*.f64 (+.f64 (/.f64 (/.f64 (*.f64 z z) t) t) 1) (/.f64 (-.f64 y x) t)) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 (/.f64 (/.f64 (pow.f64 z 3) t) t) z)))))","(fma.f64 120 a (*.f64 60 (+.f64 (/.f64 (-.f64 y x) t) (*.f64 (/.f64 (-.f64 y x) (*.f64 t t)) (+.f64 z (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 z (/.f64 t z))))))))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 -60 (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)) (*.f64 120 a)))","(fma.f64 -60 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(fma.f64 120 a (*.f64 (+.f64 (/.f64 t z) 1) (*.f64 (/.f64 -60 z) (-.f64 y x))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 -60 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x))) (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 -60 (+.f64 (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)) (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x)))) (*.f64 120 a)))","(fma.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (*.f64 (/.f64 (-.f64 y x) z) (+.f64 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 t z))))) (*.f64 120 a))","(fma.f64 -60 (*.f64 (/.f64 (-.f64 y x) z) (+.f64 (/.f64 t z) (+.f64 (*.f64 (/.f64 t z) (/.f64 t z)) 1))) (*.f64 120 a))","(*.f64 120 a)","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (*.f64 120 a))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z)))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 -60 (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)) (*.f64 120 a)))","(fma.f64 -60 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 (-.f64 y x) z)) (*.f64 120 a))","(fma.f64 120 a (*.f64 (+.f64 (/.f64 t z) 1) (*.f64 (/.f64 -60 z) (-.f64 y x))))","(+.f64 (*.f64 -60 (/.f64 (-.f64 y x) z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) (-.f64 y x)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t (-.f64 y x)) (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 120 a (*.f64 -60 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x))) (/.f64 (*.f64 t (-.f64 y x)) (*.f64 z z))))))","(fma.f64 -60 (/.f64 (-.f64 y x) z) (fma.f64 -60 (+.f64 (*.f64 (/.f64 (-.f64 y x) z) (/.f64 t z)) (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) (-.f64 y x)))) (*.f64 120 a)))","(fma.f64 -60 (+.f64 (/.f64 (-.f64 y x) z) (*.f64 (/.f64 (-.f64 y x) z) (+.f64 (/.f64 t z) (*.f64 (/.f64 t z) (/.f64 t z))))) (*.f64 120 a))","(fma.f64 -60 (*.f64 (/.f64 (-.f64 y x) z) (+.f64 (/.f64 t z) (+.f64 (*.f64 (/.f64 t z) (/.f64 t z)) 1))) (*.f64 120 a))"]],"stop":[["node limit",1]],"time":58.359130859375,"type":"simplify"},{"compiler":[[4080,2061]],"time":38.90185546875,"type":"eval"},{"alts":[["(fma.f64 120 a (/.f64 (-.f64 y x) (pow.f64 (cbrt.f64 (*.f64 (-.f64 t z) 1/60)) 3)))","fresh",0.37839521490572453],["(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","done",0.1328125],["(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","next",0.1484375],["(fma.f64 120 a (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","fresh",0.21425634768442015],["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","done",0.140625],["(fma.f64 120 a (/.f64 (-.f64 y x) (fma.f64 t 1/60 (*.f64 z -1/60))))","fresh",0.15625]],"compiler":[[20,15],[17,12],[25,17],[42,26],[17,12],[18,13],[20,15],[25,17],[42,26],[18,13]],"count":[[199,6]],"kept":[{"done":[2,2],"fresh":[3,0],"new":[193,4],"picked":[1,0]}],"min-error":[0.00390625],"time":60.298095703125,"type":"prune"},{"compiler":[[82,43]],"locations":[["(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))",0.0234375,true],["(/.f64 y 1/60)",0.12109375,true],["(*.f64 x (/.f64 60 (-.f64 t z)))",0.140625,true],["(fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))",0.150722509768442,true]],"time":16.597900390625,"type":"localize"},{"count":[[4,156]],"series":[["(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","x","-inf",0.18310546875],["(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","x","inf",0.201904296875],["(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","x","0",0.180908203125],["(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","y","-inf",0.203125],["(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","y","inf",0.18896484375],["(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","y","0",0.2138671875],["(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","z","-inf",0.234130859375],["(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","z","inf",0.260009765625],["(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","z","0",0.298095703125],["(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","t","-inf",0.2548828125],["(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","t","inf",0.24609375],["(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","t","0",0.318115234375],["(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","a","-inf",0.2109375],["(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","a","inf",0.19091796875],["(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","a","0",0.43701171875],["(/.f64 y 1/60)","y","-inf",0.2080078125],["(/.f64 y 1/60)","y","inf",0.18798828125],["(/.f64 y 1/60)","y","0",0.198974609375],["(*.f64 x (/.f64 60 (-.f64 t z)))","z","-inf",0.198974609375],["(*.f64 x (/.f64 60 (-.f64 t z)))","z","inf",0.216064453125],["(*.f64 x (/.f64 60 (-.f64 t z)))","z","0",0.198974609375],["(*.f64 x (/.f64 60 (-.f64 t z)))","t","-inf",0.201904296875],["(*.f64 x (/.f64 60 (-.f64 t z)))","t","inf",0.27001953125],["(*.f64 x (/.f64 60 (-.f64 t z)))","t","0",0.27099609375],["(*.f64 x (/.f64 60 (-.f64 t z)))","x","-inf",0.342041015625],["(*.f64 x (/.f64 60 (-.f64 t z)))","x","inf",0.432861328125],["(*.f64 x (/.f64 60 (-.f64 t z)))","x","0",0.322998046875],["(fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))","x","-inf",0.204833984375],["(fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))","x","inf",0.35595703125],["(fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))","x","0",0.509033203125],["(fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))","y","-inf",0.329833984375],["(fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))","y","inf",0.325927734375],["(fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))","y","0",0.608154296875],["(fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))","z","-inf",1.4990234375],["(fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))","z","inf",0.597900390625],["(fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))","z","0",0.837890625],["(fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))","t","-inf",0.526123046875],["(fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))","t","inf",0.658935546875],["(fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))","t","0",0.70703125]],"time":14.509033203125,"type":"series"},{"count":[[4,399]],"egraph":[[2,4938,58,0.034470834],[1,390,62,0.006959834000000001],[0,18,68,0.000528917]],"inputs":[["(fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))","(*.f64 x (/.f64 60 (-.f64 t z)))","(/.f64 y 1/60)","(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (/.f64 60 (-.f64 t z))) (/.f64 y (*.f64 (-.f64 t z) 1/60)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) (fma.f64 (*.f64 x (/.f64 60 (-.f64 t z))) 1 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) (fma.f64 (/.f64 -60 (-.f64 t z)) x (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) (fma.f64 (neg.f64 (/.f64 -60 (-.f64 t z))) x (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) (fma.f64 (neg.f64 x) (/.f64 60 (-.f64 t z)) (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) (fma.f64 (neg.f64 (neg.f64 x)) (/.f64 60 (-.f64 t z)) (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) (fma.f64 -1 (*.f64 x (/.f64 60 (-.f64 t z))) (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) (fma.f64 1 (*.f64 x (/.f64 60 (-.f64 t z))) (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2) (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))) (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) (fma.f64 (*.f64 x (/.f64 60 (-.f64 t z))) -1 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) (fma.f64 (neg.f64 x) (/.f64 -60 (-.f64 t z)) (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) (fma.f64 (/.f64 -60 (-.f64 t z)) (neg.f64 x) (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (neg.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (*.f64 x (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)) 1) (*.f64 x (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) x)) 60 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) x)) 60 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) x)) 60 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) x)) 60 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) x)) 60 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) x)) 60 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) x)) 60 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) x)) 60 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) x)) 60 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) x)) 60 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) x)) 60 (*.f64 (*.f64 (/.f64 1 (-.f64 t z)) x) 60)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x)) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x)) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x)) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x)) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x)) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x)) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x)) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x)) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x)) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x)) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x)) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2) (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2) (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2) (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2) (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2) (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2) (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2) (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2) (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2) (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2) (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2) (*.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 -60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z)))) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 60 (-.f64 t z))) (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x)) (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x)) (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x)) (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x)) (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x)) (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x)) (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x)) (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x)) (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x)) (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x)) (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x)) (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 -60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 60 (-.f64 t z))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 x 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 x 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 x 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 x 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 x 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 x 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 x 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 x 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 x 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 x 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 x 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 x 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (/.f64 x 1) (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (/.f64 x 1) (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (/.f64 x 1) (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (/.f64 x 1) (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (/.f64 x 1) (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (/.f64 x 1) (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (/.f64 x 1) (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (/.f64 x 1) (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (/.f64 x 1) (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (/.f64 x 1) (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (/.f64 x 1) (*.f64 (/.f64 60 (-.f64 t z)) (/.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 60 (cbrt.f64 (-.f64 t z)))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 60 (cbrt.f64 (-.f64 t z)))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 60 (cbrt.f64 (-.f64 t z)))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 60 (cbrt.f64 (-.f64 t z)))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 60 (cbrt.f64 (-.f64 t z)))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 60 (cbrt.f64 (-.f64 t z)))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 60 (cbrt.f64 (-.f64 t z)))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 60 (cbrt.f64 (-.f64 t z)))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 60 (cbrt.f64 (-.f64 t z)))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 60 (cbrt.f64 (-.f64 t z)))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 60 (cbrt.f64 (-.f64 t z)))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 60 (sqrt.f64 (-.f64 t z)))) (/.f64 x (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 60 (sqrt.f64 (-.f64 t z)))) (/.f64 x (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 60 (sqrt.f64 (-.f64 t z)))) (/.f64 x (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 60 (sqrt.f64 (-.f64 t z)))) (/.f64 x (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 60 (sqrt.f64 (-.f64 t z)))) (/.f64 x (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 60 (sqrt.f64 (-.f64 t z)))) (/.f64 x (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 60 (sqrt.f64 (-.f64 t z)))) (/.f64 x (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 60 (sqrt.f64 (-.f64 t z)))) (/.f64 x (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 60 (sqrt.f64 (-.f64 t z)))) (/.f64 x (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 60 (sqrt.f64 (-.f64 t z)))) (/.f64 x (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z)))))) (fma.f64 (neg.f64 (/.f64 60 (sqrt.f64 (-.f64 t z)))) (/.f64 x (sqrt.f64 (-.f64 t z))) (*.f64 (/.f64 60 (sqrt.f64 (-.f64 t z))) (/.f64 x (sqrt.f64 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 t z) (*.f64 t t))) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 t z) (*.f64 t t))) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 t z) (*.f64 t t))) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 t z) (*.f64 t t))) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 t z) (*.f64 t t))) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 t z) (*.f64 t t))) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 t z) (*.f64 t t))) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 t z) (*.f64 t t))) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 t z) (*.f64 t t))) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 t z) (*.f64 t t))) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3)))))) (fma.f64 (neg.f64 (fma.f64 z (+.f64 t z) (*.f64 t t))) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))) (*.f64 (fma.f64 z (+.f64 t z) (*.f64 t t)) (/.f64 (*.f64 x 60) (-.f64 (pow.f64 t 3) (pow.f64 z 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 t z)) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 t z)) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 t z)) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 t z)) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 t z)) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 t z)) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 t z)) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 t z)) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 t z)) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 t z)) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z)))))) (fma.f64 (neg.f64 (+.f64 t z)) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))) (*.f64 (+.f64 t z) (/.f64 (*.f64 x 60) (-.f64 (*.f64 t t) (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (*.f64 (neg.f64 x) 1) (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (*.f64 (neg.f64 x) 1) (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (*.f64 (neg.f64 x) 1) (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (*.f64 (neg.f64 x) 1) (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (*.f64 (neg.f64 x) 1) (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (*.f64 (neg.f64 x) 1) (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (*.f64 (neg.f64 x) 1) (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (*.f64 (neg.f64 x) 1) (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (*.f64 (neg.f64 x) 1) (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (*.f64 (neg.f64 x) 1) (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1)))) (fma.f64 (/.f64 -60 (-.f64 t z)) (*.f64 (neg.f64 x) 1) (*.f64 (/.f64 60 (-.f64 t z)) (*.f64 (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 (neg.f64 x) 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 (neg.f64 x) 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 (neg.f64 x) 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 (neg.f64 x) 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 (neg.f64 x) 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 (neg.f64 x) 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 (neg.f64 x) 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 (neg.f64 x) 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 (neg.f64 x) 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 (neg.f64 x) 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 t z))) (*.f64 (neg.f64 x) 60) (*.f64 (/.f64 1 (-.f64 t z)) (*.f64 (neg.f64 x) 60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)) (*.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) (*.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) (*.f64 -1 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 (neg.f64 x) (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)) (*.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (pow.f64 (cbrt.f64 (/.f64 60 (-.f64 t z))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))) (*.f64 (sqrt.f64 (/.f64 60 (-.f64 t z))) (*.f64 x (sqrt.f64 (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (cbrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (cbrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (cbrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (cbrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (cbrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (cbrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (cbrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (cbrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (cbrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (cbrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (cbrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (cbrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (neg.f64 (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (sqrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)) (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (-.f64 t z)) (*.f64 y 60) (neg.f64 (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (sqrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)) (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 y 60) (/.f64 1 (-.f64 t z)) (neg.f64 (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (sqrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)) (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (-.f64 t z) -2)) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 t z))) (*.f64 y 60)) (neg.f64 (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (sqrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)) (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 (pow.f64 (-.f64 t z) -1/2) (*.f64 y 60)) (neg.f64 (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (sqrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)) (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (sqrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)) (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (sqrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (sqrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)) (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (*.f64 (pow.f64 (-.f64 t z) -1/2) (sqrt.f64 (*.f64 y 60))) (neg.f64 (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (sqrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)) (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (sqrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)) (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2)) (cbrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (sqrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)) (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) (sqrt.f64 (*.f64 y 60))) (sqrt.f64 (*.f64 y 60)) (neg.f64 (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x))))) (fma.f64 (neg.f64 (sqrt.f64 x)) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)) (*.f64 (sqrt.f64 x) (*.f64 (/.f64 60 (-.f64 t z)) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (*.f64 x (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)) 0) (*.f64 x (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))) 2) (cbrt.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (sqrt.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)) 3) (pow.f64 (*.f64 x (/.f64 60 (-.f64 t z))) 3)) (fma.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (/.f64 y (*.f64 (-.f64 t z) 1/60)) (-.f64 (pow.f64 (*.f64 x (/.f64 60 (-.f64 t z))) 2) (*.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (*.f64 x (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)) (/.f64 y (*.f64 (-.f64 t z) 1/60)) (pow.f64 (*.f64 x (/.f64 60 (-.f64 t z))) 2)) (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 x (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 x (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 x (/.f64 60 (-.f64 t z))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 t z) (*.f64 x 60)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 (-.f64 t z) 1/60))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (*.f64 (-.f64 t z) 1/60))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x 60) (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x 60)) (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 x 60)) (neg.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (pow.f64 (*.f64 x (/.f64 60 (-.f64 t z))) 3)) (+.f64 0 (+.f64 (pow.f64 (*.f64 x (/.f64 60 (-.f64 t z))) 2) (*.f64 0 (*.f64 x (/.f64 60 (-.f64 t z)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 0 (pow.f64 (*.f64 x (/.f64 60 (-.f64 t z))) 2)) (*.f64 x (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x 60) 1) (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x 60) (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (cbrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 x 60) (sqrt.f64 (-.f64 t z))) (sqrt.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -60 x) (neg.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (*.f64 x 60)) (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) 1) (*.f64 (-.f64 t z) 1/60))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) 60) (-.f64 t z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) -60) (neg.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x -60) (neg.f64 (-.f64 t z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (/.f64 60 (-.f64 t z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (/.f64 60 (-.f64 t z))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (/.f64 60 (-.f64 t z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 60 (-.f64 t z))) x))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (/.f64 60 (-.f64 t z))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (/.f64 60 (-.f64 t z)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 60 (-.f64 t z)) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (/.f64 60 (-.f64 t z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (/.f64 60 (-.f64 t z)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 y 60))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 y 60))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y 60)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y 60) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 60 y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y 60)) (pow.f64 (cbrt.f64 (*.f64 y 60)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 y 60)) 2) (cbrt.f64 (*.f64 y 60)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) 60))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 y 60)) (sqrt.f64 (*.f64 y 60)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) 60))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) -60)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y 60) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 y 60) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y 60)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 y 60)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1/60 y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y -1/60))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (*.f64 y y) 3600))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 y) 60))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 y 60))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 y 60) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 y 60)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 y 60)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 y 60)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 y 60)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) (*.f64 120 a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 120 a) (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 120 a) 1) (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 120 a (/.f64 y (*.f64 (-.f64 t z) 1/60))) (*.f64 x (/.f64 60 (-.f64 t z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))))) (pow.f64 (cbrt.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))))) 2) (cbrt.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))))) (sqrt.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 120 a) 3) (pow.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) 3)) (fma.f64 (*.f64 120 a) (*.f64 120 a) (-.f64 (pow.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) 2) (*.f64 (*.f64 120 a) (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 120 a) (*.f64 120 a)) (pow.f64 (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))) 2)) (-.f64 (*.f64 120 a) (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 120 a (fma.f64 x (/.f64 60 (-.f64 t z)) (/.f64 y (*.f64 (-.f64 t z) 1/60))))) 1))))))"]],"rules":[["egg-rr",24],["egg-rr",25],["egg-rr",35],["egg-rr",315]],"stop":[["node limit",1]],"time":119.31591796875,"type":"rewrite"},{"count":[[555,505]],"egraph":[[2,3327,3809,0.019978584],[1,874,4064,0.006588541999999999],[0,233,4244,0.001252333]],"inputs":[["(-.f64 (*.f64 -60 (/.f64 y z)) (*.f64 -60 (/.f64 x z)))","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (*.f64 t (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 2))) (*.f64 -60 (/.f64 x (pow.f64 z 2)))))) (*.f64 -60 (/.f64 x z)))","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (+.f64 (*.f64 (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 3))) (*.f64 -60 (/.f64 x (pow.f64 z 3)))) (pow.f64 t 2)) (*.f64 t (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 2))) (*.f64 -60 (/.f64 x (pow.f64 z 2))))))) (*.f64 -60 (/.f64 x z)))","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (+.f64 (*.f64 (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 3))) (*.f64 -60 (/.f64 x (pow.f64 z 3)))) (pow.f64 t 2)) (+.f64 (*.f64 (pow.f64 t 3) (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 4))) (*.f64 -60 (/.f64 x (pow.f64 z 4))))) (*.f64 t (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 2))) (*.f64 -60 (/.f64 x (pow.f64 z 2)))))))) (*.f64 -60 (/.f64 x z)))","(/.f64 (-.f64 (*.f64 60 y) (*.f64 60 x)) t)","(-.f64 (+.f64 (*.f64 60 (/.f64 y t)) (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2)))) (+.f64 (*.f64 60 (/.f64 x t)) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2)))))","(-.f64 (+.f64 (*.f64 60 (/.f64 y t)) (+.f64 (*.f64 60 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2))))) (+.f64 (*.f64 60 (/.f64 x t)) (+.f64 (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3))))))","(-.f64 (+.f64 (*.f64 60 (/.f64 y t)) (+.f64 (*.f64 60 (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2)))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 x t)) (+.f64 (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)))))))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -60 y) (*.f64 -60 x)) t))","(-.f64 (+.f64 (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -60 y) (*.f64 -60 x)) t))) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))))","(-.f64 (+.f64 (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -60 y) (*.f64 -60 x)) t)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -60 (*.f64 y (pow.f64 z 2))) (*.f64 -60 (*.f64 (pow.f64 z 2) x))) (pow.f64 t 3))))) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))))","(-.f64 (+.f64 (*.f64 60 (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -60 y) (*.f64 -60 x)) t)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -60 (*.f64 y (pow.f64 z 2))) (*.f64 -60 (*.f64 (pow.f64 z 2) x))) (pow.f64 t 3)))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2)))))","(-.f64 (*.f64 60 (/.f64 y t)) (*.f64 60 (/.f64 x t)))","(-.f64 (+.f64 (*.f64 60 (/.f64 y t)) (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 2))) (*.f64 60 (/.f64 x (pow.f64 t 2)))) z)) (*.f64 60 (/.f64 x t)))","(-.f64 (+.f64 (*.f64 60 (/.f64 y t)) (+.f64 (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 3))) (*.f64 60 (/.f64 x (pow.f64 t 3)))) (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 2))) (*.f64 60 (/.f64 x (pow.f64 t 2)))) z))) (*.f64 60 (/.f64 x t)))","(-.f64 (+.f64 (*.f64 60 (/.f64 y t)) (+.f64 (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 3))) (*.f64 60 (/.f64 x (pow.f64 t 3)))) (pow.f64 z 2)) (+.f64 (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 2))) (*.f64 60 (/.f64 x (pow.f64 t 2)))) z) (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 4))) (*.f64 60 (/.f64 x (pow.f64 t 4)))) (pow.f64 z 3))))) (*.f64 60 (/.f64 x t)))","(/.f64 (-.f64 (*.f64 -60 y) (*.f64 -60 x)) z)","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2)))) (+.f64 (*.f64 -60 (/.f64 x z)) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2)))))","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2))))) (+.f64 (*.f64 -60 (/.f64 x z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))))","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2)))))) (+.f64 (*.f64 -60 (/.f64 x z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2)))))))","(*.f64 -1 (/.f64 (-.f64 (*.f64 60 y) (*.f64 60 x)) z))","(-.f64 (+.f64 (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 60 y) (*.f64 60 x)) z))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))","(-.f64 (+.f64 (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 60 (*.f64 y (pow.f64 t 2))) (*.f64 60 (*.f64 (pow.f64 t 2) x))) (pow.f64 z 3))) (*.f64 -1 (/.f64 (-.f64 (*.f64 60 y) (*.f64 60 x)) z)))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))","(-.f64 (+.f64 (*.f64 -60 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 60 (*.f64 y (pow.f64 t 2))) (*.f64 60 (*.f64 (pow.f64 t 2) x))) (pow.f64 z 3))) (*.f64 -1 (/.f64 (-.f64 (*.f64 60 y) (*.f64 60 x)) z))))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2)))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 -60 (/.f64 x z))","(+.f64 (*.f64 -60 (/.f64 x z)) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))","(+.f64 (*.f64 -60 (/.f64 x z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 x z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))))","(*.f64 60 (/.f64 x t))","(+.f64 (*.f64 60 (/.f64 x t)) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))))","(+.f64 (*.f64 60 (/.f64 x t)) (+.f64 (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)))))","(+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 x t)) (+.f64 (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3))))))","(*.f64 60 (/.f64 x t))","(+.f64 (*.f64 60 (/.f64 x t)) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))))","(+.f64 (*.f64 60 (/.f64 x t)) (+.f64 (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)))))","(+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 x t)) (+.f64 (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3))))))","(*.f64 60 (/.f64 x t))","(+.f64 (*.f64 60 (/.f64 x t)) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))))","(+.f64 (*.f64 60 (/.f64 x t)) (+.f64 (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)))))","(+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 x t)) (+.f64 (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3))))))","(*.f64 -60 (/.f64 x z))","(+.f64 (*.f64 -60 (/.f64 x z)) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))","(+.f64 (*.f64 -60 (/.f64 x z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 x z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))))","(*.f64 -60 (/.f64 x z))","(+.f64 (*.f64 -60 (/.f64 x z)) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))","(+.f64 (*.f64 -60 (/.f64 x z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2)))))","(+.f64 (*.f64 -60 (/.f64 x z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))))","(*.f64 60 y)","(*.f64 60 y)","(*.f64 60 y)","(*.f64 60 y)","(*.f64 60 y)","(*.f64 60 y)","(*.f64 60 y)","(*.f64 60 y)","(*.f64 60 y)","(*.f64 60 y)","(*.f64 60 y)","(*.f64 60 y)","(-.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 60 (/.f64 x (-.f64 t z))))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(*.f64 120 a)","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(*.f64 120 a)","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (*.f64 120 a)) (*.f64 -60 (/.f64 x z)))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 y z)) (*.f64 t (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 2))) (*.f64 -60 (/.f64 x (pow.f64 z 2))))))) (*.f64 -60 (/.f64 x z)))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 y z)) (+.f64 (*.f64 (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 3))) (*.f64 -60 (/.f64 x (pow.f64 z 3)))) (pow.f64 t 2)) (*.f64 t (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 2))) (*.f64 -60 (/.f64 x (pow.f64 z 2)))))))) (*.f64 -60 (/.f64 x z)))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 y z)) (+.f64 (*.f64 (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 3))) (*.f64 -60 (/.f64 x (pow.f64 z 3)))) (pow.f64 t 2)) (+.f64 (*.f64 (pow.f64 t 3) (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 4))) (*.f64 -60 (/.f64 x (pow.f64 z 4))))) (*.f64 t (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 2))) (*.f64 -60 (/.f64 x (pow.f64 z 2))))))))) (*.f64 -60 (/.f64 x z)))","(*.f64 120 a)","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y t))) (*.f64 60 (/.f64 x t)))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y t)) (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2))))) (+.f64 (*.f64 60 (/.f64 x t)) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2)))))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y t)) (+.f64 (*.f64 60 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2)))))) (+.f64 (*.f64 60 (/.f64 x t)) (+.f64 (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3))))))","(*.f64 120 a)","(+.f64 (*.f64 120 a) (*.f64 -1 (/.f64 (-.f64 (*.f64 -60 y) (*.f64 -60 x)) t)))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -60 y) (*.f64 -60 x)) t)))) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -60 y) (*.f64 -60 x)) t)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -60 (*.f64 y (pow.f64 z 2))) (*.f64 -60 (*.f64 (pow.f64 z 2) x))) (pow.f64 t 3)))))) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y t))) (*.f64 60 (/.f64 x t)))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y t)) (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 2))) (*.f64 60 (/.f64 x (pow.f64 t 2)))) z))) (*.f64 60 (/.f64 x t)))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y t)) (+.f64 (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 3))) (*.f64 60 (/.f64 x (pow.f64 t 3)))) (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 2))) (*.f64 60 (/.f64 x (pow.f64 t 2)))) z)))) (*.f64 60 (/.f64 x t)))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y t)) (+.f64 (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 3))) (*.f64 60 (/.f64 x (pow.f64 t 3)))) (pow.f64 z 2)) (+.f64 (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 2))) (*.f64 60 (/.f64 x (pow.f64 t 2)))) z) (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 4))) (*.f64 60 (/.f64 x (pow.f64 t 4)))) (pow.f64 z 3)))))) (*.f64 60 (/.f64 x t)))","(*.f64 120 a)","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (*.f64 120 a)) (*.f64 -60 (/.f64 x z)))","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2))))) (+.f64 (*.f64 -60 (/.f64 x z)) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2)))))","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2)))))) (+.f64 (*.f64 -60 (/.f64 x z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))))","(*.f64 120 a)","(+.f64 (*.f64 120 a) (*.f64 -1 (/.f64 (-.f64 (*.f64 60 y) (*.f64 60 x)) z)))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 60 y) (*.f64 60 x)) z)))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 60 y) (*.f64 60 x)) z)) (*.f64 -1 (/.f64 (-.f64 (*.f64 60 (*.f64 y (pow.f64 t 2))) (*.f64 60 (*.f64 (pow.f64 t 2) x))) (pow.f64 z 3)))))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))","(-.f64 (*.f64 120 a) (*.f64 60 (/.f64 x (-.f64 t z))))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (*.f64 -60 (/.f64 y z)) (*.f64 -60 (/.f64 x z)))","(/.f64 (*.f64 -60 (-.f64 y x)) z)","(/.f64 -60 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 -60 z) (-.f64 y x))","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (*.f64 t (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 2))) (*.f64 -60 (/.f64 x (pow.f64 z 2)))))) (*.f64 -60 (/.f64 x z)))","(+.f64 (fma.f64 -60 (/.f64 y z) (*.f64 t (*.f64 -60 (-.f64 (/.f64 y (*.f64 z z)) (/.f64 x (*.f64 z z)))))) (*.f64 60 (/.f64 x z)))","(+.f64 (*.f64 -60 (*.f64 (-.f64 (/.f64 y (*.f64 z z)) (/.f64 (/.f64 x z) z)) t)) (/.f64 -60 (/.f64 z (-.f64 y x))))","(+.f64 (*.f64 t (*.f64 (/.f64 -60 z) (-.f64 (/.f64 y z) (/.f64 x z)))) (*.f64 (/.f64 -60 z) (-.f64 y x)))","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (+.f64 (*.f64 (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 3))) (*.f64 -60 (/.f64 x (pow.f64 z 3)))) (pow.f64 t 2)) (*.f64 t (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 2))) (*.f64 -60 (/.f64 x (pow.f64 z 2))))))) (*.f64 -60 (/.f64 x z)))","(+.f64 (fma.f64 -60 (/.f64 y z) (fma.f64 (*.f64 -60 (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 x (pow.f64 z 3)))) (*.f64 t t) (*.f64 t (*.f64 -60 (-.f64 (/.f64 y (*.f64 z z)) (/.f64 x (*.f64 z z))))))) (*.f64 60 (/.f64 x z)))","(+.f64 (fma.f64 t (*.f64 -60 (-.f64 (/.f64 y (*.f64 z z)) (/.f64 (/.f64 x z) z))) (*.f64 -60 (*.f64 (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 x (pow.f64 z 3))) (*.f64 t t)))) (/.f64 -60 (/.f64 z (-.f64 y x))))","(+.f64 (*.f64 t (+.f64 (*.f64 (/.f64 -60 z) (-.f64 (/.f64 y z) (/.f64 x z))) (*.f64 (*.f64 (/.f64 (/.f64 -60 z) z) (-.f64 (/.f64 y z) (/.f64 x z))) t))) (*.f64 (/.f64 -60 z) (-.f64 y x)))","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (+.f64 (*.f64 (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 3))) (*.f64 -60 (/.f64 x (pow.f64 z 3)))) (pow.f64 t 2)) (+.f64 (*.f64 (pow.f64 t 3) (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 4))) (*.f64 -60 (/.f64 x (pow.f64 z 4))))) (*.f64 t (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 2))) (*.f64 -60 (/.f64 x (pow.f64 z 2)))))))) (*.f64 -60 (/.f64 x z)))","(+.f64 (fma.f64 -60 (/.f64 y z) (fma.f64 (*.f64 -60 (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 x (pow.f64 z 3)))) (*.f64 t t) (fma.f64 (pow.f64 t 3) (*.f64 -60 (-.f64 (/.f64 y (pow.f64 z 4)) (/.f64 x (pow.f64 z 4)))) (*.f64 t (*.f64 -60 (-.f64 (/.f64 y (*.f64 z z)) (/.f64 x (*.f64 z z)))))))) (*.f64 60 (/.f64 x z)))","(+.f64 (fma.f64 (*.f64 -60 (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 x (pow.f64 z 3)))) (*.f64 t t) (fma.f64 t (*.f64 -60 (-.f64 (/.f64 y (*.f64 z z)) (/.f64 (/.f64 x z) z))) (*.f64 (*.f64 (pow.f64 t 3) -60) (-.f64 (/.f64 y (pow.f64 z 4)) (/.f64 x (pow.f64 z 4)))))) (/.f64 -60 (/.f64 z (-.f64 y x))))","(+.f64 (fma.f64 (*.f64 (/.f64 (/.f64 -60 z) z) (-.f64 (/.f64 y z) (/.f64 x z))) (*.f64 t t) (fma.f64 t (*.f64 (/.f64 -60 z) (-.f64 (/.f64 y z) (/.f64 x z))) (*.f64 (*.f64 (pow.f64 t 3) -60) (-.f64 (/.f64 y (pow.f64 z 4)) (/.f64 x (pow.f64 z 4)))))) (*.f64 (/.f64 -60 z) (-.f64 y x)))","(/.f64 (-.f64 (*.f64 60 y) (*.f64 60 x)) t)","(/.f64 (*.f64 60 (-.f64 y x)) t)","(/.f64 60 (/.f64 t (-.f64 y x)))","(*.f64 (/.f64 60 t) (-.f64 y x))","(-.f64 (+.f64 (*.f64 60 (/.f64 y t)) (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2)))) (+.f64 (*.f64 60 (/.f64 x t)) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2)))))","(-.f64 (*.f64 60 (+.f64 (/.f64 y t) (/.f64 y (/.f64 (*.f64 t t) z)))) (*.f64 60 (+.f64 (/.f64 x t) (/.f64 (*.f64 z x) (*.f64 t t)))))","(*.f64 60 (-.f64 (+.f64 (/.f64 y t) (*.f64 (/.f64 y (*.f64 t t)) z)) (+.f64 (/.f64 x t) (/.f64 z (/.f64 (*.f64 t t) x)))))","(*.f64 60 (-.f64 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 y t)) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 x t))))","(-.f64 (+.f64 (*.f64 60 (/.f64 y t)) (+.f64 (*.f64 60 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2))))) (+.f64 (*.f64 60 (/.f64 x t)) (+.f64 (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3))))))","(-.f64 (fma.f64 60 (/.f64 y t) (*.f64 60 (+.f64 (/.f64 (*.f64 y (*.f64 z z)) (pow.f64 t 3)) (/.f64 y (/.f64 (*.f64 t t) z))))) (fma.f64 60 (/.f64 x t) (*.f64 60 (+.f64 (/.f64 (*.f64 z x) (*.f64 t t)) (/.f64 (*.f64 z z) (/.f64 (pow.f64 t 3) x))))))","(+.f64 (+.f64 (*.f64 60 (+.f64 (*.f64 (/.f64 y (*.f64 t t)) z) (*.f64 (/.f64 y (pow.f64 t 3)) (*.f64 z z)))) (/.f64 60 (/.f64 t (-.f64 y x)))) (*.f64 -60 (+.f64 (/.f64 z (/.f64 (*.f64 t t) x)) (/.f64 x (/.f64 (pow.f64 t 3) (*.f64 z z))))))","(*.f64 60 (-.f64 (+.f64 (*.f64 (/.f64 (/.f64 y t) t) (+.f64 z (*.f64 (/.f64 z t) z))) (/.f64 y t)) (+.f64 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 x t)) (/.f64 z (/.f64 (pow.f64 t 3) (*.f64 z x))))))","(-.f64 (+.f64 (*.f64 60 (/.f64 y t)) (+.f64 (*.f64 60 (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2)))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 x t)) (+.f64 (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)))))))","(-.f64 (fma.f64 60 (/.f64 y t) (fma.f64 60 (/.f64 y (/.f64 (pow.f64 t 4) (pow.f64 z 3))) (*.f64 60 (+.f64 (/.f64 (*.f64 y (*.f64 z z)) (pow.f64 t 3)) (/.f64 y (/.f64 (*.f64 t t) z)))))) (fma.f64 60 (/.f64 (*.f64 x (pow.f64 z 3)) (pow.f64 t 4)) (fma.f64 60 (/.f64 x t) (*.f64 60 (+.f64 (/.f64 (*.f64 z x) (*.f64 t t)) (/.f64 (*.f64 z z) (/.f64 (pow.f64 t 3) x)))))))","(-.f64 (fma.f64 60 (/.f64 y t) (*.f64 60 (+.f64 (+.f64 (*.f64 (/.f64 y (*.f64 t t)) z) (*.f64 (/.f64 y (pow.f64 t 3)) (*.f64 z z))) (*.f64 (/.f64 y (pow.f64 t 4)) (pow.f64 z 3))))) (fma.f64 60 (/.f64 x (/.f64 (pow.f64 t 4) (pow.f64 z 3))) (*.f64 60 (+.f64 (+.f64 (/.f64 x t) (/.f64 z (/.f64 (*.f64 t t) x))) (/.f64 x (/.f64 (pow.f64 t 3) (*.f64 z z)))))))","(-.f64 (*.f64 60 (+.f64 (*.f64 (/.f64 (/.f64 y t) t) (+.f64 z (*.f64 (/.f64 z t) z))) (+.f64 (/.f64 y t) (*.f64 (/.f64 y (pow.f64 t 4)) (pow.f64 z 3))))) (*.f64 60 (+.f64 (*.f64 (/.f64 x t) (+.f64 (/.f64 z t) (/.f64 z (/.f64 t (/.f64 z t))))) (+.f64 (*.f64 (/.f64 x (pow.f64 t 4)) (pow.f64 z 3)) (/.f64 x t)))))","(*.f64 -1 (/.f64 (-.f64 (*.f64 -60 y) (*.f64 -60 x)) t))","(/.f64 (*.f64 60 (-.f64 y x)) t)","(/.f64 60 (/.f64 t (-.f64 y x)))","(*.f64 (/.f64 60 t) (-.f64 y x))","(-.f64 (+.f64 (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -60 y) (*.f64 -60 x)) t))) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))))","(-.f64 (*.f64 60 (+.f64 (/.f64 y t) (/.f64 y (/.f64 (*.f64 t t) z)))) (*.f64 60 (+.f64 (/.f64 x t) (/.f64 (*.f64 z x) (*.f64 t t)))))","(*.f64 60 (-.f64 (+.f64 (/.f64 y t) (*.f64 (/.f64 y (*.f64 t t)) z)) (+.f64 (/.f64 x t) (/.f64 z (/.f64 (*.f64 t t) x)))))","(*.f64 60 (-.f64 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 y t)) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 x t))))","(-.f64 (+.f64 (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -60 y) (*.f64 -60 x)) t)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -60 (*.f64 y (pow.f64 z 2))) (*.f64 -60 (*.f64 (pow.f64 z 2) x))) (pow.f64 t 3))))) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))))","(+.f64 (fma.f64 60 (/.f64 y (/.f64 (*.f64 t t) z)) (fma.f64 -1 (/.f64 (*.f64 -60 (-.f64 y x)) t) (neg.f64 (/.f64 (*.f64 -60 (-.f64 (*.f64 y (*.f64 z z)) (*.f64 x (*.f64 z z)))) (pow.f64 t 3))))) (*.f64 -60 (/.f64 (*.f64 z x) (*.f64 t t))))","(+.f64 (fma.f64 60 (*.f64 (/.f64 y (*.f64 t t)) z) (/.f64 60 (/.f64 t (-.f64 y x)))) (-.f64 (/.f64 (*.f64 60 (*.f64 (*.f64 z z) (-.f64 y x))) (pow.f64 t 3)) (*.f64 60 (/.f64 z (/.f64 (*.f64 t t) x)))))","(+.f64 (-.f64 (*.f64 (/.f64 60 t) (-.f64 y x)) (*.f64 (/.f64 -60 (pow.f64 t 3)) (*.f64 (*.f64 z z) (-.f64 y x)))) (*.f64 (/.f64 60 t) (-.f64 (/.f64 (*.f64 y z) t) (/.f64 z (/.f64 t x)))))","(-.f64 (+.f64 (*.f64 60 (/.f64 (*.f64 y (pow.f64 z 3)) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -60 y) (*.f64 -60 x)) t)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -60 (*.f64 y (pow.f64 z 2))) (*.f64 -60 (*.f64 (pow.f64 z 2) x))) (pow.f64 t 3)))))) (+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4))) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2)))))","(-.f64 (fma.f64 60 (/.f64 y (/.f64 (pow.f64 t 4) (pow.f64 z 3))) (fma.f64 60 (/.f64 y (/.f64 (*.f64 t t) z)) (fma.f64 -1 (/.f64 (*.f64 -60 (-.f64 y x)) t) (neg.f64 (/.f64 (*.f64 -60 (-.f64 (*.f64 y (*.f64 z z)) (*.f64 x (*.f64 z z)))) (pow.f64 t 3)))))) (*.f64 60 (+.f64 (/.f64 (*.f64 x (pow.f64 z 3)) (pow.f64 t 4)) (/.f64 (*.f64 z x) (*.f64 t t)))))","(+.f64 (fma.f64 60 (*.f64 (/.f64 y (pow.f64 t 4)) (pow.f64 z 3)) (+.f64 (fma.f64 60 (*.f64 (/.f64 y (*.f64 t t)) z) (/.f64 60 (/.f64 t (-.f64 y x)))) (/.f64 (*.f64 60 (*.f64 (*.f64 z z) (-.f64 y x))) (pow.f64 t 3)))) (*.f64 -60 (+.f64 (/.f64 z (/.f64 (*.f64 t t) x)) (/.f64 x (/.f64 (pow.f64 t 4) (pow.f64 z 3))))))","(+.f64 (fma.f64 60 (-.f64 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 y t)) (/.f64 x t)) (/.f64 60 (/.f64 (pow.f64 t 3) (*.f64 (*.f64 z z) (-.f64 y x))))) (*.f64 60 (-.f64 (*.f64 (/.f64 y (pow.f64 t 4)) (pow.f64 z 3)) (*.f64 x (+.f64 (/.f64 z (*.f64 t t)) (/.f64 (pow.f64 z 3) (pow.f64 t 4)))))))","(-.f64 (*.f64 60 (/.f64 y t)) (*.f64 60 (/.f64 x t)))","(/.f64 (*.f64 60 (-.f64 y x)) t)","(/.f64 60 (/.f64 t (-.f64 y x)))","(*.f64 (/.f64 60 t) (-.f64 y x))","(-.f64 (+.f64 (*.f64 60 (/.f64 y t)) (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 2))) (*.f64 60 (/.f64 x (pow.f64 t 2)))) z)) (*.f64 60 (/.f64 x t)))","(+.f64 (fma.f64 60 (/.f64 y t) (*.f64 z (*.f64 60 (-.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 t t)))))) (*.f64 -60 (/.f64 x t)))","(+.f64 (*.f64 (*.f64 z 60) (-.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 t t)))) (/.f64 60 (/.f64 t (-.f64 y x))))","(+.f64 (*.f64 z (*.f64 (/.f64 60 t) (-.f64 (/.f64 y t) (/.f64 x t)))) (*.f64 (/.f64 60 t) (-.f64 y x)))","(-.f64 (+.f64 (*.f64 60 (/.f64 y t)) (+.f64 (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 3))) (*.f64 60 (/.f64 x (pow.f64 t 3)))) (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 2))) (*.f64 60 (/.f64 x (pow.f64 t 2)))) z))) (*.f64 60 (/.f64 x t)))","(+.f64 (fma.f64 60 (/.f64 y t) (fma.f64 (*.f64 60 (-.f64 (/.f64 y (pow.f64 t 3)) (/.f64 x (pow.f64 t 3)))) (*.f64 z z) (*.f64 z (*.f64 60 (-.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 t t))))))) (*.f64 -60 (/.f64 x t)))","(+.f64 (fma.f64 z (*.f64 60 (-.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 t t)))) (*.f64 (*.f64 z z) (*.f64 60 (-.f64 (/.f64 y (pow.f64 t 3)) (/.f64 x (pow.f64 t 3)))))) (/.f64 60 (/.f64 t (-.f64 y x))))","(+.f64 (*.f64 z (+.f64 (*.f64 (/.f64 60 t) (-.f64 (/.f64 y t) (/.f64 x t))) (*.f64 (*.f64 60 (-.f64 (/.f64 y (pow.f64 t 3)) (/.f64 x (pow.f64 t 3)))) z))) (*.f64 (/.f64 60 t) (-.f64 y x)))","(-.f64 (+.f64 (*.f64 60 (/.f64 y t)) (+.f64 (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 3))) (*.f64 60 (/.f64 x (pow.f64 t 3)))) (pow.f64 z 2)) (+.f64 (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 2))) (*.f64 60 (/.f64 x (pow.f64 t 2)))) z) (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 4))) (*.f64 60 (/.f64 x (pow.f64 t 4)))) (pow.f64 z 3))))) (*.f64 60 (/.f64 x t)))","(+.f64 (fma.f64 60 (/.f64 y t) (fma.f64 (*.f64 60 (-.f64 (/.f64 y (pow.f64 t 3)) (/.f64 x (pow.f64 t 3)))) (*.f64 z z) (fma.f64 (*.f64 60 (-.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 t t)))) z (*.f64 (pow.f64 z 3) (*.f64 60 (-.f64 (/.f64 y (pow.f64 t 4)) (/.f64 x (pow.f64 t 4)))))))) (*.f64 -60 (/.f64 x t)))","(+.f64 (fma.f64 (*.f64 z z) (*.f64 60 (-.f64 (/.f64 y (pow.f64 t 3)) (/.f64 x (pow.f64 t 3)))) (fma.f64 z (*.f64 60 (-.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 t t)))) (*.f64 (pow.f64 z 3) (*.f64 60 (-.f64 (/.f64 y (pow.f64 t 4)) (/.f64 x (pow.f64 t 4))))))) (/.f64 60 (/.f64 t (-.f64 y x))))","(+.f64 (fma.f64 (*.f64 z z) (*.f64 60 (-.f64 (/.f64 y (pow.f64 t 3)) (/.f64 x (pow.f64 t 3)))) (fma.f64 z (*.f64 (/.f64 60 t) (-.f64 (/.f64 y t) (/.f64 x t))) (*.f64 (pow.f64 z 3) (*.f64 60 (-.f64 (/.f64 y (pow.f64 t 4)) (/.f64 x (pow.f64 t 4))))))) (*.f64 (/.f64 60 t) (-.f64 y x)))","(/.f64 (-.f64 (*.f64 -60 y) (*.f64 -60 x)) z)","(/.f64 (*.f64 -60 (-.f64 y x)) z)","(/.f64 -60 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 -60 z) (-.f64 y x))","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2)))) (+.f64 (*.f64 -60 (/.f64 x z)) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2)))))","(-.f64 (*.f64 -60 (+.f64 (/.f64 y z) (/.f64 (*.f64 y t) (*.f64 z z)))) (*.f64 -60 (+.f64 (/.f64 x z) (/.f64 t (/.f64 (*.f64 z z) x)))))","(*.f64 -60 (-.f64 (+.f64 (/.f64 y z) (*.f64 (/.f64 y z) (/.f64 t z))) (+.f64 (/.f64 x z) (*.f64 (/.f64 x z) (/.f64 t z)))))","(*.f64 -60 (-.f64 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 y z)) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 x z))))","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2))))) (+.f64 (*.f64 -60 (/.f64 x z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))))","(-.f64 (fma.f64 -60 (/.f64 y z) (*.f64 -60 (+.f64 (/.f64 (*.f64 y (*.f64 t t)) (pow.f64 z 3)) (/.f64 (*.f64 y t) (*.f64 z z))))) (fma.f64 -60 (/.f64 x z) (*.f64 -60 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) x)) (/.f64 t (/.f64 (*.f64 z z) x))))))","(+.f64 (+.f64 (*.f64 -60 (+.f64 (*.f64 (/.f64 y z) (/.f64 t z)) (*.f64 (/.f64 y (pow.f64 z 3)) (*.f64 t t)))) (/.f64 -60 (/.f64 z (-.f64 y x)))) (*.f64 60 (+.f64 (*.f64 (/.f64 x z) (/.f64 t z)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) x))))","(*.f64 -60 (-.f64 (+.f64 (*.f64 (/.f64 y (*.f64 z z)) (+.f64 t (/.f64 t (/.f64 z t)))) (/.f64 y z)) (+.f64 (/.f64 x z) (*.f64 (/.f64 x z) (+.f64 (/.f64 t z) (/.f64 t (*.f64 (/.f64 z t) z)))))))","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2)))))) (+.f64 (*.f64 -60 (/.f64 x z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2)))))))","(-.f64 (fma.f64 -60 (/.f64 y z) (fma.f64 -60 (/.f64 y (/.f64 (pow.f64 z 4) (pow.f64 t 3))) (*.f64 -60 (+.f64 (/.f64 (*.f64 y (*.f64 t t)) (pow.f64 z 3)) (/.f64 (*.f64 y t) (*.f64 z z)))))) (fma.f64 -60 (/.f64 x z) (fma.f64 -60 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) x)) (*.f64 -60 (+.f64 (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 z 4) x)) (/.f64 t (/.f64 (*.f64 z z) x)))))))","(-.f64 (+.f64 (*.f64 -60 (+.f64 (+.f64 (*.f64 (/.f64 y z) (/.f64 t z)) (*.f64 (/.f64 y (pow.f64 z 3)) (*.f64 t t))) (*.f64 (/.f64 y (pow.f64 z 4)) (pow.f64 t 3)))) (/.f64 -60 (/.f64 z (-.f64 y x)))) (*.f64 -60 (+.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) x) (+.f64 (*.f64 (/.f64 x z) (/.f64 t z)) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) x)))))","(-.f64 (*.f64 -60 (+.f64 (/.f64 y z) (+.f64 (*.f64 (/.f64 y (*.f64 z z)) (+.f64 t (/.f64 t (/.f64 z t)))) (*.f64 (/.f64 y (pow.f64 z 4)) (pow.f64 t 3))))) (*.f64 -60 (+.f64 (*.f64 x (+.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 x z)))))","(*.f64 -1 (/.f64 (-.f64 (*.f64 60 y) (*.f64 60 x)) z))","(/.f64 (*.f64 -60 (-.f64 y x)) z)","(/.f64 -60 (/.f64 z (-.f64 y x)))","(*.f64 (/.f64 -60 z) (-.f64 y x))","(-.f64 (+.f64 (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 60 y) (*.f64 60 x)) z))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))","(-.f64 (*.f64 -60 (+.f64 (/.f64 y z) (/.f64 (*.f64 y t) (*.f64 z z)))) (*.f64 -60 (+.f64 (/.f64 x z) (/.f64 t (/.f64 (*.f64 z z) x)))))","(*.f64 -60 (-.f64 (+.f64 (/.f64 y z) (*.f64 (/.f64 y z) (/.f64 t z))) (+.f64 (/.f64 x z) (*.f64 (/.f64 x z) (/.f64 t z)))))","(*.f64 -60 (-.f64 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 y z)) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 x z))))","(-.f64 (+.f64 (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 60 (*.f64 y (pow.f64 t 2))) (*.f64 60 (*.f64 (pow.f64 t 2) x))) (pow.f64 z 3))) (*.f64 -1 (/.f64 (-.f64 (*.f64 60 y) (*.f64 60 x)) z)))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))","(+.f64 (fma.f64 -60 (/.f64 (*.f64 y t) (*.f64 z z)) (*.f64 -1 (+.f64 (/.f64 (*.f64 60 (-.f64 y x)) z) (/.f64 (*.f64 60 (-.f64 (*.f64 y (*.f64 t t)) (*.f64 x (*.f64 t t)))) (pow.f64 z 3))))) (*.f64 60 (/.f64 t (/.f64 (*.f64 z z) x))))","(+.f64 (fma.f64 -60 (*.f64 (/.f64 y z) (/.f64 t z)) (/.f64 -60 (/.f64 z (-.f64 y x)))) (+.f64 (/.f64 (*.f64 -60 (*.f64 (*.f64 t t) (-.f64 y x))) (pow.f64 z 3)) (*.f64 60 (*.f64 (/.f64 x z) (/.f64 t z)))))","(+.f64 (-.f64 (*.f64 (/.f64 -60 z) (-.f64 y x)) (*.f64 (/.f64 60 (pow.f64 z 3)) (*.f64 (*.f64 t t) (-.f64 y x)))) (*.f64 (/.f64 -60 z) (-.f64 (/.f64 y (/.f64 z t)) (/.f64 x (/.f64 z t)))))","(-.f64 (+.f64 (*.f64 -60 (/.f64 (*.f64 y (pow.f64 t 3)) (pow.f64 z 4))) (+.f64 (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 60 (*.f64 y (pow.f64 t 2))) (*.f64 60 (*.f64 (pow.f64 t 2) x))) (pow.f64 z 3))) (*.f64 -1 (/.f64 (-.f64 (*.f64 60 y) (*.f64 60 x)) z))))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2)))))","(-.f64 (fma.f64 -60 (/.f64 y (/.f64 (pow.f64 z 4) (pow.f64 t 3))) (fma.f64 -60 (/.f64 (*.f64 y t) (*.f64 z z)) (*.f64 -1 (+.f64 (/.f64 (*.f64 60 (-.f64 y x)) z) (/.f64 (*.f64 60 (-.f64 (*.f64 y (*.f64 t t)) (*.f64 x (*.f64 t t)))) (pow.f64 z 3)))))) (*.f64 -60 (+.f64 (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 z 4) x)) (/.f64 t (/.f64 (*.f64 z z) x)))))","(fma.f64 -60 (*.f64 (/.f64 y (pow.f64 z 4)) (pow.f64 t 3)) (+.f64 (fma.f64 -60 (*.f64 (/.f64 y z) (/.f64 t z)) (/.f64 -60 (/.f64 z (-.f64 y x)))) (-.f64 (/.f64 (*.f64 -60 (*.f64 (*.f64 t t) (-.f64 y x))) (pow.f64 z 3)) (*.f64 -60 (+.f64 (*.f64 (/.f64 x z) (/.f64 t z)) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) x))))))","(+.f64 (fma.f64 -60 (-.f64 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 y z)) (/.f64 x z)) (/.f64 -60 (/.f64 (pow.f64 z 3) (*.f64 (*.f64 t t) (-.f64 y x))))) (*.f64 -60 (-.f64 (*.f64 (/.f64 y (pow.f64 z 4)) (pow.f64 t 3)) (*.f64 x (+.f64 (/.f64 t (*.f64 z z)) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(*.f64 (/.f64 -60 (-.f64 t z)) x)","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 y 60) (-.f64 t z))","(*.f64 (/.f64 60 (-.f64 t z)) y)","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 y 60) (-.f64 t z))","(*.f64 (/.f64 60 (-.f64 t z)) y)","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 y 60) (-.f64 t z))","(*.f64 (/.f64 60 (-.f64 t z)) y)","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(*.f64 (/.f64 -60 (-.f64 t z)) x)","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(*.f64 (/.f64 -60 (-.f64 t z)) x)","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 60 (/.f64 x (-.f64 t z)))","(*.f64 -60 (/.f64 x z))","(*.f64 (/.f64 -60 z) x)","(+.f64 (*.f64 -60 (/.f64 x z)) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))","(*.f64 -60 (+.f64 (/.f64 x z) (/.f64 t (/.f64 (*.f64 z z) x))))","(*.f64 -60 (+.f64 (/.f64 x z) (*.f64 (/.f64 x z) (/.f64 t z))))","(*.f64 -60 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 x z)))","(+.f64 (*.f64 -60 (/.f64 x z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2)))))","(fma.f64 -60 (/.f64 x z) (*.f64 -60 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) x)) (/.f64 t (/.f64 (*.f64 z z) x)))))","(*.f64 -60 (+.f64 (/.f64 x z) (+.f64 (*.f64 (/.f64 x z) (/.f64 t z)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) x))))","(*.f64 -60 (+.f64 (/.f64 x z) (*.f64 (/.f64 x z) (+.f64 (/.f64 t z) (/.f64 t (*.f64 (/.f64 z t) z))))))","(+.f64 (*.f64 -60 (/.f64 x z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 x z) (fma.f64 -60 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) x)) (*.f64 -60 (+.f64 (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 z 4) x)) (/.f64 t (/.f64 (*.f64 z z) x))))))","(fma.f64 -60 (/.f64 x z) (*.f64 -60 (+.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) x) (+.f64 (*.f64 (/.f64 x z) (/.f64 t z)) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) x)))))","(*.f64 -60 (+.f64 (*.f64 x (+.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 x z))))","(*.f64 60 (/.f64 x t))","(/.f64 x (/.f64 t 60))","(+.f64 (*.f64 60 (/.f64 x t)) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))))","(*.f64 60 (+.f64 (/.f64 x t) (/.f64 (*.f64 z x) (*.f64 t t))))","(*.f64 60 (+.f64 (/.f64 x t) (/.f64 z (/.f64 (*.f64 t t) x))))","(*.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 x t)))","(+.f64 (*.f64 60 (/.f64 x t)) (+.f64 (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)))))","(fma.f64 60 (/.f64 x t) (*.f64 60 (+.f64 (/.f64 (*.f64 z x) (*.f64 t t)) (/.f64 (*.f64 z z) (/.f64 (pow.f64 t 3) x)))))","(*.f64 60 (+.f64 (+.f64 (/.f64 x t) (/.f64 z (/.f64 (*.f64 t t) x))) (/.f64 x (/.f64 (pow.f64 t 3) (*.f64 z z)))))","(*.f64 60 (+.f64 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 x t)) (/.f64 z (/.f64 (pow.f64 t 3) (*.f64 z x)))))","(+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 x t)) (+.f64 (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3))))))","(fma.f64 60 (/.f64 (*.f64 x (pow.f64 z 3)) (pow.f64 t 4)) (fma.f64 60 (/.f64 x t) (*.f64 60 (+.f64 (/.f64 (*.f64 z x) (*.f64 t t)) (/.f64 (*.f64 z z) (/.f64 (pow.f64 t 3) x))))))","(fma.f64 60 (/.f64 x (/.f64 (pow.f64 t 4) (pow.f64 z 3))) (*.f64 60 (+.f64 (+.f64 (/.f64 x t) (/.f64 z (/.f64 (*.f64 t t) x))) (/.f64 x (/.f64 (pow.f64 t 3) (*.f64 z z))))))","(*.f64 60 (+.f64 (*.f64 (/.f64 x t) (+.f64 (/.f64 z t) (/.f64 z (/.f64 t (/.f64 z t))))) (+.f64 (*.f64 (/.f64 x (pow.f64 t 4)) (pow.f64 z 3)) (/.f64 x t))))","(*.f64 60 (/.f64 x t))","(/.f64 x (/.f64 t 60))","(+.f64 (*.f64 60 (/.f64 x t)) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))))","(*.f64 60 (+.f64 (/.f64 x t) (/.f64 (*.f64 z x) (*.f64 t t))))","(*.f64 60 (+.f64 (/.f64 x t) (/.f64 z (/.f64 (*.f64 t t) x))))","(*.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 x t)))","(+.f64 (*.f64 60 (/.f64 x t)) (+.f64 (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)))))","(fma.f64 60 (/.f64 x t) (*.f64 60 (+.f64 (/.f64 (*.f64 z x) (*.f64 t t)) (/.f64 (*.f64 z z) (/.f64 (pow.f64 t 3) x)))))","(*.f64 60 (+.f64 (+.f64 (/.f64 x t) (/.f64 z (/.f64 (*.f64 t t) x))) (/.f64 x (/.f64 (pow.f64 t 3) (*.f64 z z)))))","(*.f64 60 (+.f64 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 x t)) (/.f64 z (/.f64 (pow.f64 t 3) (*.f64 z x)))))","(+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 x t)) (+.f64 (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3))))))","(fma.f64 60 (/.f64 (*.f64 x (pow.f64 z 3)) (pow.f64 t 4)) (fma.f64 60 (/.f64 x t) (*.f64 60 (+.f64 (/.f64 (*.f64 z x) (*.f64 t t)) (/.f64 (*.f64 z z) (/.f64 (pow.f64 t 3) x))))))","(fma.f64 60 (/.f64 x (/.f64 (pow.f64 t 4) (pow.f64 z 3))) (*.f64 60 (+.f64 (+.f64 (/.f64 x t) (/.f64 z (/.f64 (*.f64 t t) x))) (/.f64 x (/.f64 (pow.f64 t 3) (*.f64 z z))))))","(*.f64 60 (+.f64 (*.f64 (/.f64 x t) (+.f64 (/.f64 z t) (/.f64 z (/.f64 t (/.f64 z t))))) (+.f64 (*.f64 (/.f64 x (pow.f64 t 4)) (pow.f64 z 3)) (/.f64 x t))))","(*.f64 60 (/.f64 x t))","(/.f64 x (/.f64 t 60))","(+.f64 (*.f64 60 (/.f64 x t)) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))))","(*.f64 60 (+.f64 (/.f64 x t) (/.f64 (*.f64 z x) (*.f64 t t))))","(*.f64 60 (+.f64 (/.f64 x t) (/.f64 z (/.f64 (*.f64 t t) x))))","(*.f64 60 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 x t)))","(+.f64 (*.f64 60 (/.f64 x t)) (+.f64 (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3)))))","(fma.f64 60 (/.f64 x t) (*.f64 60 (+.f64 (/.f64 (*.f64 z x) (*.f64 t t)) (/.f64 (*.f64 z z) (/.f64 (pow.f64 t 3) x)))))","(*.f64 60 (+.f64 (+.f64 (/.f64 x t) (/.f64 z (/.f64 (*.f64 t t) x))) (/.f64 x (/.f64 (pow.f64 t 3) (*.f64 z z)))))","(*.f64 60 (+.f64 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 x t)) (/.f64 z (/.f64 (pow.f64 t 3) (*.f64 z x)))))","(+.f64 (*.f64 60 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 t 4))) (+.f64 (*.f64 60 (/.f64 x t)) (+.f64 (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3))))))","(fma.f64 60 (/.f64 (*.f64 x (pow.f64 z 3)) (pow.f64 t 4)) (fma.f64 60 (/.f64 x t) (*.f64 60 (+.f64 (/.f64 (*.f64 z x) (*.f64 t t)) (/.f64 (*.f64 z z) (/.f64 (pow.f64 t 3) x))))))","(fma.f64 60 (/.f64 x (/.f64 (pow.f64 t 4) (pow.f64 z 3))) (*.f64 60 (+.f64 (+.f64 (/.f64 x t) (/.f64 z (/.f64 (*.f64 t t) x))) (/.f64 x (/.f64 (pow.f64 t 3) (*.f64 z z))))))","(*.f64 60 (+.f64 (*.f64 (/.f64 x t) (+.f64 (/.f64 z t) (/.f64 z (/.f64 t (/.f64 z t))))) (+.f64 (*.f64 (/.f64 x (pow.f64 t 4)) (pow.f64 z 3)) (/.f64 x t))))","(*.f64 -60 (/.f64 x z))","(*.f64 (/.f64 -60 z) x)","(+.f64 (*.f64 -60 (/.f64 x z)) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))","(*.f64 -60 (+.f64 (/.f64 x z) (/.f64 t (/.f64 (*.f64 z z) x))))","(*.f64 -60 (+.f64 (/.f64 x z) (*.f64 (/.f64 x z) (/.f64 t z))))","(*.f64 -60 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 x z)))","(+.f64 (*.f64 -60 (/.f64 x z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2)))))","(fma.f64 -60 (/.f64 x z) (*.f64 -60 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) x)) (/.f64 t (/.f64 (*.f64 z z) x)))))","(*.f64 -60 (+.f64 (/.f64 x z) (+.f64 (*.f64 (/.f64 x z) (/.f64 t z)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) x))))","(*.f64 -60 (+.f64 (/.f64 x z) (*.f64 (/.f64 x z) (+.f64 (/.f64 t z) (/.f64 t (*.f64 (/.f64 z t) z))))))","(+.f64 (*.f64 -60 (/.f64 x z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 x z) (fma.f64 -60 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) x)) (*.f64 -60 (+.f64 (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 z 4) x)) (/.f64 t (/.f64 (*.f64 z z) x))))))","(fma.f64 -60 (/.f64 x z) (*.f64 -60 (+.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) x) (+.f64 (*.f64 (/.f64 x z) (/.f64 t z)) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) x)))))","(*.f64 -60 (+.f64 (*.f64 x (+.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 x z))))","(*.f64 -60 (/.f64 x z))","(*.f64 (/.f64 -60 z) x)","(+.f64 (*.f64 -60 (/.f64 x z)) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))","(*.f64 -60 (+.f64 (/.f64 x z) (/.f64 t (/.f64 (*.f64 z z) x))))","(*.f64 -60 (+.f64 (/.f64 x z) (*.f64 (/.f64 x z) (/.f64 t z))))","(*.f64 -60 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 x z)))","(+.f64 (*.f64 -60 (/.f64 x z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2)))))","(fma.f64 -60 (/.f64 x z) (*.f64 -60 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) x)) (/.f64 t (/.f64 (*.f64 z z) x)))))","(*.f64 -60 (+.f64 (/.f64 x z) (+.f64 (*.f64 (/.f64 x z) (/.f64 t z)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) x))))","(*.f64 -60 (+.f64 (/.f64 x z) (*.f64 (/.f64 x z) (+.f64 (/.f64 t z) (/.f64 t (*.f64 (/.f64 z t) z))))))","(+.f64 (*.f64 -60 (/.f64 x z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 3) x) (pow.f64 z 4))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))))","(fma.f64 -60 (/.f64 x z) (fma.f64 -60 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) x)) (*.f64 -60 (+.f64 (/.f64 (pow.f64 t 3) (/.f64 (pow.f64 z 4) x)) (/.f64 t (/.f64 (*.f64 z z) x))))))","(fma.f64 -60 (/.f64 x z) (*.f64 -60 (+.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) x) (+.f64 (*.f64 (/.f64 x z) (/.f64 t z)) (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) x)))))","(*.f64 -60 (+.f64 (*.f64 x (+.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 x z))))","(*.f64 60 y)","(*.f64 y 60)","(*.f64 60 y)","(*.f64 y 60)","(*.f64 60 y)","(*.f64 y 60)","(*.f64 60 y)","(*.f64 y 60)","(*.f64 60 y)","(*.f64 y 60)","(*.f64 60 y)","(*.f64 y 60)","(*.f64 60 y)","(*.f64 y 60)","(*.f64 60 y)","(*.f64 y 60)","(*.f64 60 y)","(*.f64 y 60)","(*.f64 60 y)","(*.f64 y 60)","(*.f64 60 y)","(*.f64 y 60)","(*.f64 60 y)","(*.f64 y 60)","(-.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 60 (/.f64 x (-.f64 t z))))","(*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(*.f64 120 a)","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(*.f64 120 a)","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (*.f64 120 a)) (*.f64 -60 (/.f64 x z)))","(+.f64 (fma.f64 -60 (/.f64 y z) (*.f64 120 a)) (*.f64 60 (/.f64 x z)))","(fma.f64 120 a (/.f64 -60 (/.f64 z (-.f64 y x))))","(fma.f64 120 a (*.f64 (/.f64 -60 z) (-.f64 y x)))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 y z)) (*.f64 t (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 2))) (*.f64 -60 (/.f64 x (pow.f64 z 2))))))) (*.f64 -60 (/.f64 x z)))","(+.f64 (fma.f64 120 a (fma.f64 -60 (/.f64 y z) (*.f64 t (*.f64 -60 (-.f64 (/.f64 y (*.f64 z z)) (/.f64 x (*.f64 z z))))))) (*.f64 60 (/.f64 x z)))","(fma.f64 120 a (+.f64 (*.f64 -60 (*.f64 (-.f64 (/.f64 y (*.f64 z z)) (/.f64 (/.f64 x z) z)) t)) (/.f64 -60 (/.f64 z (-.f64 y x)))))","(fma.f64 120 a (+.f64 (*.f64 t (*.f64 (/.f64 -60 z) (-.f64 (/.f64 y z) (/.f64 x z)))) (*.f64 (/.f64 -60 z) (-.f64 y x))))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 y z)) (+.f64 (*.f64 (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 3))) (*.f64 -60 (/.f64 x (pow.f64 z 3)))) (pow.f64 t 2)) (*.f64 t (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 2))) (*.f64 -60 (/.f64 x (pow.f64 z 2)))))))) (*.f64 -60 (/.f64 x z)))","(+.f64 (fma.f64 120 a (fma.f64 -60 (/.f64 y z) (fma.f64 (*.f64 -60 (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 x (pow.f64 z 3)))) (*.f64 t t) (*.f64 t (*.f64 -60 (-.f64 (/.f64 y (*.f64 z z)) (/.f64 x (*.f64 z z)))))))) (*.f64 60 (/.f64 x z)))","(fma.f64 120 a (+.f64 (fma.f64 t (*.f64 -60 (-.f64 (/.f64 y (*.f64 z z)) (/.f64 (/.f64 x z) z))) (*.f64 -60 (*.f64 (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 x (pow.f64 z 3))) (*.f64 t t)))) (/.f64 -60 (/.f64 z (-.f64 y x)))))","(fma.f64 120 a (+.f64 (*.f64 t (+.f64 (*.f64 (/.f64 -60 z) (-.f64 (/.f64 y z) (/.f64 x z))) (*.f64 (*.f64 (/.f64 (/.f64 -60 z) z) (-.f64 (/.f64 y z) (/.f64 x z))) t))) (*.f64 (/.f64 -60 z) (-.f64 y x))))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 y z)) (+.f64 (*.f64 (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 3))) (*.f64 -60 (/.f64 x (pow.f64 z 3)))) (pow.f64 t 2)) (+.f64 (*.f64 (pow.f64 t 3) (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 4))) (*.f64 -60 (/.f64 x (pow.f64 z 4))))) (*.f64 t (-.f64 (*.f64 -60 (/.f64 y (pow.f64 z 2))) (*.f64 -60 (/.f64 x (pow.f64 z 2))))))))) (*.f64 -60 (/.f64 x z)))","(+.f64 (fma.f64 120 a (fma.f64 -60 (/.f64 y z) (fma.f64 (*.f64 -60 (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 x (pow.f64 z 3)))) (*.f64 t t) (fma.f64 (pow.f64 t 3) (*.f64 -60 (-.f64 (/.f64 y (pow.f64 z 4)) (/.f64 x (pow.f64 z 4)))) (*.f64 t (*.f64 -60 (-.f64 (/.f64 y (*.f64 z z)) (/.f64 x (*.f64 z z))))))))) (*.f64 60 (/.f64 x z)))","(fma.f64 120 a (+.f64 (fma.f64 (*.f64 -60 (-.f64 (/.f64 y (pow.f64 z 3)) (/.f64 x (pow.f64 z 3)))) (*.f64 t t) (fma.f64 t (*.f64 -60 (-.f64 (/.f64 y (*.f64 z z)) (/.f64 (/.f64 x z) z))) (*.f64 (*.f64 (pow.f64 t 3) -60) (-.f64 (/.f64 y (pow.f64 z 4)) (/.f64 x (pow.f64 z 4)))))) (/.f64 -60 (/.f64 z (-.f64 y x)))))","(fma.f64 120 a (+.f64 (fma.f64 (*.f64 (/.f64 (/.f64 -60 z) z) (-.f64 (/.f64 y z) (/.f64 x z))) (*.f64 t t) (fma.f64 t (*.f64 (/.f64 -60 z) (-.f64 (/.f64 y z) (/.f64 x z))) (*.f64 (*.f64 (pow.f64 t 3) -60) (-.f64 (/.f64 y (pow.f64 z 4)) (/.f64 x (pow.f64 z 4)))))) (*.f64 (/.f64 -60 z) (-.f64 y x))))","(*.f64 120 a)","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y t))) (*.f64 60 (/.f64 x t)))","(+.f64 (*.f64 120 a) (/.f64 (*.f64 60 (-.f64 y x)) t))","(fma.f64 120 a (/.f64 60 (/.f64 t (-.f64 y x))))","(fma.f64 120 a (*.f64 (/.f64 60 t) (-.f64 y x)))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y t)) (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2))))) (+.f64 (*.f64 60 (/.f64 x t)) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2)))))","(-.f64 (fma.f64 120 a (*.f64 60 (+.f64 (/.f64 y t) (/.f64 y (/.f64 (*.f64 t t) z))))) (*.f64 60 (+.f64 (/.f64 x t) (/.f64 (*.f64 z x) (*.f64 t t)))))","(fma.f64 120 a (*.f64 60 (-.f64 (+.f64 (/.f64 y t) (*.f64 (/.f64 y (*.f64 t t)) z)) (+.f64 (/.f64 x t) (/.f64 z (/.f64 (*.f64 t t) x))))))","(fma.f64 120 a (*.f64 60 (-.f64 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 y t)) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 x t)))))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y t)) (+.f64 (*.f64 60 (/.f64 (*.f64 y (pow.f64 z 2)) (pow.f64 t 3))) (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2)))))) (+.f64 (*.f64 60 (/.f64 x t)) (+.f64 (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))) (*.f64 60 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 t 3))))))","(-.f64 (fma.f64 120 a (fma.f64 60 (/.f64 y t) (*.f64 60 (+.f64 (/.f64 (*.f64 y (*.f64 z z)) (pow.f64 t 3)) (/.f64 y (/.f64 (*.f64 t t) z)))))) (fma.f64 60 (/.f64 x t) (*.f64 60 (+.f64 (/.f64 (*.f64 z x) (*.f64 t t)) (/.f64 (*.f64 z z) (/.f64 (pow.f64 t 3) x))))))","(-.f64 (fma.f64 120 a (*.f64 60 (+.f64 (/.f64 y t) (+.f64 (*.f64 (/.f64 y (*.f64 t t)) z) (*.f64 (/.f64 y (pow.f64 t 3)) (*.f64 z z)))))) (*.f64 60 (+.f64 (+.f64 (/.f64 x t) (/.f64 z (/.f64 (*.f64 t t) x))) (/.f64 x (/.f64 (pow.f64 t 3) (*.f64 z z))))))","(fma.f64 120 a (*.f64 60 (-.f64 (+.f64 (*.f64 (/.f64 (/.f64 y t) t) (+.f64 z (*.f64 (/.f64 z t) z))) (/.f64 y t)) (+.f64 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 x t)) (/.f64 z (/.f64 (pow.f64 t 3) (*.f64 z x)))))))","(*.f64 120 a)","(+.f64 (*.f64 120 a) (*.f64 -1 (/.f64 (-.f64 (*.f64 -60 y) (*.f64 -60 x)) t)))","(+.f64 (*.f64 120 a) (/.f64 (*.f64 60 (-.f64 y x)) t))","(fma.f64 120 a (/.f64 60 (/.f64 t (-.f64 y x))))","(fma.f64 120 a (*.f64 (/.f64 60 t) (-.f64 y x)))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 -60 y) (*.f64 -60 x)) t)))) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))))","(-.f64 (fma.f64 120 a (*.f64 60 (+.f64 (/.f64 y t) (/.f64 y (/.f64 (*.f64 t t) z))))) (*.f64 60 (+.f64 (/.f64 x t) (/.f64 (*.f64 z x) (*.f64 t t)))))","(fma.f64 120 a (*.f64 60 (-.f64 (+.f64 (/.f64 y t) (*.f64 (/.f64 y (*.f64 t t)) z)) (+.f64 (/.f64 x t) (/.f64 z (/.f64 (*.f64 t t) x))))))","(fma.f64 120 a (*.f64 60 (-.f64 (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 y t)) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 x t)))))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 (*.f64 y z) (pow.f64 t 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -60 y) (*.f64 -60 x)) t)) (*.f64 -1 (/.f64 (-.f64 (*.f64 -60 (*.f64 y (pow.f64 z 2))) (*.f64 -60 (*.f64 (pow.f64 z 2) x))) (pow.f64 t 3)))))) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2))))","(+.f64 (fma.f64 120 a (fma.f64 60 (/.f64 y (/.f64 (*.f64 t t) z)) (fma.f64 -1 (/.f64 (*.f64 -60 (-.f64 y x)) t) (neg.f64 (/.f64 (*.f64 -60 (-.f64 (*.f64 y (*.f64 z z)) (*.f64 x (*.f64 z z)))) (pow.f64 t 3)))))) (*.f64 -60 (/.f64 (*.f64 z x) (*.f64 t t))))","(+.f64 (+.f64 (fma.f64 120 a (fma.f64 60 (*.f64 (/.f64 y (*.f64 t t)) z) (/.f64 60 (/.f64 t (-.f64 y x))))) (/.f64 (*.f64 60 (*.f64 (*.f64 z z) (-.f64 y x))) (pow.f64 t 3))) (*.f64 -60 (/.f64 z (/.f64 (*.f64 t t) x))))","(fma.f64 120 a (+.f64 (-.f64 (*.f64 (/.f64 60 t) (-.f64 y x)) (*.f64 (/.f64 -60 (pow.f64 t 3)) (*.f64 (*.f64 z z) (-.f64 y x)))) (*.f64 (/.f64 60 t) (-.f64 (/.f64 (*.f64 y z) t) (/.f64 z (/.f64 t x))))))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y t))) (*.f64 60 (/.f64 x t)))","(+.f64 (*.f64 120 a) (/.f64 (*.f64 60 (-.f64 y x)) t))","(fma.f64 120 a (/.f64 60 (/.f64 t (-.f64 y x))))","(fma.f64 120 a (*.f64 (/.f64 60 t) (-.f64 y x)))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y t)) (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 2))) (*.f64 60 (/.f64 x (pow.f64 t 2)))) z))) (*.f64 60 (/.f64 x t)))","(+.f64 (fma.f64 120 a (fma.f64 60 (/.f64 y t) (*.f64 z (*.f64 60 (-.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 t t))))))) (*.f64 -60 (/.f64 x t)))","(fma.f64 120 a (+.f64 (*.f64 (*.f64 z 60) (-.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 t t)))) (/.f64 60 (/.f64 t (-.f64 y x)))))","(fma.f64 120 a (+.f64 (*.f64 z (*.f64 (/.f64 60 t) (-.f64 (/.f64 y t) (/.f64 x t)))) (*.f64 (/.f64 60 t) (-.f64 y x))))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y t)) (+.f64 (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 3))) (*.f64 60 (/.f64 x (pow.f64 t 3)))) (pow.f64 z 2)) (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 2))) (*.f64 60 (/.f64 x (pow.f64 t 2)))) z)))) (*.f64 60 (/.f64 x t)))","(+.f64 (fma.f64 120 a (fma.f64 60 (/.f64 y t) (fma.f64 (*.f64 60 (-.f64 (/.f64 y (pow.f64 t 3)) (/.f64 x (pow.f64 t 3)))) (*.f64 z z) (*.f64 z (*.f64 60 (-.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 t t)))))))) (*.f64 -60 (/.f64 x t)))","(fma.f64 120 a (+.f64 (fma.f64 z (*.f64 60 (-.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 t t)))) (*.f64 (*.f64 z z) (*.f64 60 (-.f64 (/.f64 y (pow.f64 t 3)) (/.f64 x (pow.f64 t 3)))))) (/.f64 60 (/.f64 t (-.f64 y x)))))","(fma.f64 120 a (+.f64 (*.f64 z (+.f64 (*.f64 (/.f64 60 t) (-.f64 (/.f64 y t) (/.f64 x t))) (*.f64 (*.f64 60 (-.f64 (/.f64 y (pow.f64 t 3)) (/.f64 x (pow.f64 t 3)))) z))) (*.f64 (/.f64 60 t) (-.f64 y x))))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y t)) (+.f64 (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 3))) (*.f64 60 (/.f64 x (pow.f64 t 3)))) (pow.f64 z 2)) (+.f64 (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 2))) (*.f64 60 (/.f64 x (pow.f64 t 2)))) z) (*.f64 (-.f64 (*.f64 60 (/.f64 y (pow.f64 t 4))) (*.f64 60 (/.f64 x (pow.f64 t 4)))) (pow.f64 z 3)))))) (*.f64 60 (/.f64 x t)))","(+.f64 (fma.f64 120 a (fma.f64 60 (/.f64 y t) (fma.f64 (*.f64 60 (-.f64 (/.f64 y (pow.f64 t 3)) (/.f64 x (pow.f64 t 3)))) (*.f64 z z) (fma.f64 (*.f64 60 (-.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 t t)))) z (*.f64 (pow.f64 z 3) (*.f64 60 (-.f64 (/.f64 y (pow.f64 t 4)) (/.f64 x (pow.f64 t 4))))))))) (*.f64 -60 (/.f64 x t)))","(fma.f64 120 a (+.f64 (fma.f64 (*.f64 z z) (*.f64 60 (-.f64 (/.f64 y (pow.f64 t 3)) (/.f64 x (pow.f64 t 3)))) (fma.f64 z (*.f64 60 (-.f64 (/.f64 y (*.f64 t t)) (/.f64 x (*.f64 t t)))) (*.f64 (pow.f64 z 3) (*.f64 60 (-.f64 (/.f64 y (pow.f64 t 4)) (/.f64 x (pow.f64 t 4))))))) (/.f64 60 (/.f64 t (-.f64 y x)))))","(fma.f64 120 a (+.f64 (fma.f64 (*.f64 z z) (*.f64 60 (-.f64 (/.f64 y (pow.f64 t 3)) (/.f64 x (pow.f64 t 3)))) (fma.f64 z (*.f64 (/.f64 60 t) (-.f64 (/.f64 y t) (/.f64 x t))) (*.f64 (pow.f64 z 3) (*.f64 60 (-.f64 (/.f64 y (pow.f64 t 4)) (/.f64 x (pow.f64 t 4))))))) (*.f64 (/.f64 60 t) (-.f64 y x))))","(*.f64 120 a)","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (*.f64 120 a)) (*.f64 -60 (/.f64 x z)))","(+.f64 (fma.f64 -60 (/.f64 y z) (*.f64 120 a)) (*.f64 60 (/.f64 x z)))","(fma.f64 120 a (/.f64 -60 (/.f64 z (-.f64 y x))))","(fma.f64 120 a (*.f64 (/.f64 -60 z) (-.f64 y x)))","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2))))) (+.f64 (*.f64 -60 (/.f64 x z)) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2)))))","(-.f64 (fma.f64 -60 (/.f64 y z) (fma.f64 120 a (/.f64 (*.f64 -60 (*.f64 y t)) (*.f64 z z)))) (*.f64 -60 (+.f64 (/.f64 x z) (/.f64 t (/.f64 (*.f64 z z) x)))))","(fma.f64 120 a (*.f64 -60 (-.f64 (+.f64 (/.f64 y z) (*.f64 (/.f64 y z) (/.f64 t z))) (+.f64 (/.f64 x z) (*.f64 (/.f64 x z) (/.f64 t z))))))","(fma.f64 120 a (*.f64 -60 (-.f64 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 y z)) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 x z)))))","(-.f64 (+.f64 (*.f64 -60 (/.f64 y z)) (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 y (pow.f64 t 2)) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2)))))) (+.f64 (*.f64 -60 (/.f64 x z)) (+.f64 (*.f64 -60 (/.f64 (*.f64 (pow.f64 t 2) x) (pow.f64 z 3))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))))","(-.f64 (fma.f64 -60 (/.f64 y z) (fma.f64 120 a (*.f64 -60 (+.f64 (/.f64 (*.f64 y (*.f64 t t)) (pow.f64 z 3)) (/.f64 (*.f64 y t) (*.f64 z z)))))) (fma.f64 -60 (/.f64 x z) (*.f64 -60 (+.f64 (/.f64 (*.f64 t t) (/.f64 (pow.f64 z 3) x)) (/.f64 t (/.f64 (*.f64 z z) x))))))","(+.f64 (+.f64 (fma.f64 -60 (+.f64 (*.f64 (/.f64 y z) (/.f64 t z)) (*.f64 (/.f64 y (pow.f64 z 3)) (*.f64 t t))) (*.f64 120 a)) (/.f64 -60 (/.f64 z (-.f64 y x)))) (*.f64 60 (+.f64 (*.f64 (/.f64 x z) (/.f64 t z)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) x))))","(+.f64 (fma.f64 -60 (/.f64 y z) (*.f64 120 a)) (*.f64 -60 (-.f64 (*.f64 (/.f64 y (*.f64 z z)) (+.f64 t (/.f64 t (/.f64 z t)))) (+.f64 (/.f64 x z) (*.f64 (/.f64 x z) (+.f64 (/.f64 t z) (/.f64 t (*.f64 (/.f64 z t) z))))))))","(*.f64 120 a)","(+.f64 (*.f64 120 a) (*.f64 -1 (/.f64 (-.f64 (*.f64 60 y) (*.f64 60 x)) z)))","(+.f64 (fma.f64 -60 (/.f64 y z) (*.f64 120 a)) (*.f64 60 (/.f64 x z)))","(fma.f64 120 a (/.f64 -60 (/.f64 z (-.f64 y x))))","(fma.f64 120 a (*.f64 (/.f64 -60 z) (-.f64 y x)))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2))) (*.f64 -1 (/.f64 (-.f64 (*.f64 60 y) (*.f64 60 x)) z)))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))","(-.f64 (fma.f64 -60 (/.f64 y z) (fma.f64 120 a (/.f64 (*.f64 -60 (*.f64 y t)) (*.f64 z z)))) (*.f64 -60 (+.f64 (/.f64 x z) (/.f64 t (/.f64 (*.f64 z z) x)))))","(fma.f64 120 a (*.f64 -60 (-.f64 (+.f64 (/.f64 y z) (*.f64 (/.f64 y z) (/.f64 t z))) (+.f64 (/.f64 x z) (*.f64 (/.f64 x z) (/.f64 t z))))))","(fma.f64 120 a (*.f64 -60 (-.f64 (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 y z)) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 x z)))))","(-.f64 (+.f64 (*.f64 120 a) (+.f64 (*.f64 -60 (/.f64 (*.f64 y t) (pow.f64 z 2))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 60 y) (*.f64 60 x)) z)) (*.f64 -1 (/.f64 (-.f64 (*.f64 60 (*.f64 y (pow.f64 t 2))) (*.f64 60 (*.f64 (pow.f64 t 2) x))) (pow.f64 z 3)))))) (*.f64 -60 (/.f64 (*.f64 t x) (pow.f64 z 2))))","(+.f64 (fma.f64 120 a (fma.f64 -60 (/.f64 (*.f64 y t) (*.f64 z z)) (*.f64 -1 (+.f64 (/.f64 (*.f64 60 (-.f64 y x)) z) (/.f64 (*.f64 60 (-.f64 (*.f64 y (*.f64 t t)) (*.f64 x (*.f64 t t)))) (pow.f64 z 3)))))) (*.f64 60 (/.f64 t (/.f64 (*.f64 z z) x))))","(+.f64 (+.f64 (fma.f64 120 a (fma.f64 -60 (*.f64 (/.f64 y z) (/.f64 t z)) (/.f64 -60 (/.f64 z (-.f64 y x))))) (/.f64 (*.f64 -60 (*.f64 (*.f64 t t) (-.f64 y x))) (pow.f64 z 3))) (*.f64 60 (*.f64 (/.f64 x z) (/.f64 t z))))","(fma.f64 120 a (+.f64 (-.f64 (*.f64 (/.f64 -60 z) (-.f64 y x)) (*.f64 (/.f64 60 (pow.f64 z 3)) (*.f64 (*.f64 t t) (-.f64 y x)))) (*.f64 (/.f64 -60 z) (-.f64 (/.f64 y (/.f64 z t)) (/.f64 x (/.f64 z t))))))","(-.f64 (*.f64 120 a) (*.f64 60 (/.f64 x (-.f64 t z))))","(+.f64 (*.f64 120 a) (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 -60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 (/.f64 -60 (-.f64 t z)) x))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 y 60) (-.f64 t z))","(*.f64 (/.f64 60 (-.f64 t z)) y)","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(*.f64 60 (/.f64 y (-.f64 t z)))","(/.f64 (*.f64 y 60) (-.f64 t z))","(*.f64 (/.f64 60 (-.f64 t z)) y)","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(-.f64 (+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z)))) (*.f64 60 (/.f64 x (-.f64 t z))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 120 a) (*.f64 60 (/.f64 y (-.f64 t z))))","(fma.f64 120 a (/.f64 (*.f64 y 60) (-.f64 t z)))","(fma.f64 60 (/.f64 y (-.f64 t z)) (*.f64 120 a))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(*.f64 (/.f64 -60 (-.f64 t z)) x)","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(*.f64 -60 (/.f64 x (-.f64 t z)))","(*.f64 (/.f64 -60 (-.f64 t z)) x)","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(+.f64 (*.f64 120 a) (+.f64 (*.f64 60 (/.f64 y (-.f64 t z))) (*.f64 -60 (/.f64 x (-.f64 t z)))))","(fma.f64 120 a (*.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z)))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))"]],"stop":[["node limit",1]],"time":72.774169921875,"type":"simplify"},{"compiler":[[24515,13493]],"time":207.625,"type":"eval"},{"alts":[["(fma.f64 120 a (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","fresh",0.21425634768442015],["(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (+.f64 (*.f64 60 (/.f64 x t)) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2)))))))","fresh",25.948896031383473],["(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","done",0.140625],["(fma.f64 120 a (/.f64 (-.f64 y x) (fma.f64 t 1/60 (*.f64 z -1/60))))","fresh",0.15625],["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","fresh",0.12890625],["(fma.f64 120 a (+.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 60 (cbrt.f64 (-.f64 t z)))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))))","fresh",0.2920876465266303]],"compiler":[[42,26],[33,24],[17,12],[18,13],[21,13],[65,35]],"count":[[511,6]],"kept":[{"done":[2,1],"fresh":[3,2],"new":[505,3],"picked":[1,0]}],"min-error":[0],"time":260.593017578125,"type":"prune"},{"accuracy":[0.12890625],"baseline":[0.12890625],"branch":[["x",0.12890625,1],["y",0.12890625,1],["z",0.12890625,1],["t",0.12890625,1],["a",0.12890625,1],["(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) (*.f64 a 120))",0.12890625,1],["(/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t))",0.12890625,1],["(*.f64 60 (-.f64 x y))",0.12890625,1],["(-.f64 x y)",0.12890625,1],["(-.f64 z t)",0.12890625,1],["(*.f64 a 120)",0.12890625,1],["(*.f64 a 120)",0.12890625,1]],"compiler":[[6,5],[6,5],[6,5],[6,5],[6,5],[18,13],[14,10],[10,8],[8,6],[8,6],[8,7],[8,7],[353,174]],"count":[[17,1]],"inputs":[["(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (+.f64 (*.f64 60 (/.f64 x t)) (*.f64 60 (/.f64 (*.f64 z x) (pow.f64 t 2)))))))","(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))","(fma.f64 120 a (+.f64 (fma.f64 (*.f64 (/.f64 1 (-.f64 t z)) y) 60 (neg.f64 (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))) (fma.f64 (neg.f64 (/.f64 60 (cbrt.f64 (-.f64 t z)))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2)) (*.f64 (/.f64 60 (cbrt.f64 (-.f64 t z))) (/.f64 x (pow.f64 (cbrt.f64 (-.f64 t z)) 2))))))","(fma.f64 120 a (/.f64 (-.f64 y x) (pow.f64 (cbrt.f64 (*.f64 (-.f64 t z) 1/60)) 3)))","(fma.f64 120 a (fma.f64 (/.f64 1 (-.f64 t z)) (/.f64 y 1/60) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","(fma.f64 120 a (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60)))) (cbrt.f64 (/.f64 y (*.f64 (-.f64 t z) 1/60))) (neg.f64 (*.f64 x (/.f64 60 (-.f64 t z))))))","(fma.f64 120 a (/.f64 (-.f64 y x) (fma.f64 t 1/60 (*.f64 z -1/60))))","(fma.f64 120 a (/.f64 (-.f64 y x) (*.f64 (-.f64 t z) 1/60)))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 (*.f64 y y) (*.f64 x x))) (*.f64 (-.f64 t z) (+.f64 y x))))","(fma.f64 120 a (/.f64 (*.f64 60 (-.f64 y x)) (-.f64 t z)))","(fma.f64 60 (fma.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 t z))) (cbrt.f64 (/.f64 y (-.f64 t z)))) (cbrt.f64 (/.f64 y (-.f64 t z))) (neg.f64 (/.f64 x (-.f64 t z)))) (*.f64 a 120))","(pow.f64 (sqrt.f64 (fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))) 2)","(fma.f64 120 a (*.f64 (/.f64 60 (-.f64 t z)) (-.f64 y x)))","(fma.f64 60 (fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 t z)) (neg.f64 (/.f64 x (-.f64 t z)))) (*.f64 a 120))","(fma.f64 120 a (/.f64 -60 (/.f64 (-.f64 t z) x)))","(fma.f64 60 (/.f64 (-.f64 y x) (-.f64 t z)) (*.f64 a 120))","(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) (*.f64 a 120))"]],"link":["."],"name":["Data.Colour.RGB:hslsv from colour-2.3.3, B"],"oracle":[60.05552453483902],"outputs":[["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))"]],"time":83.296875,"times":[["x",6.27392578125],["y",6.347900390625],["z",6.204833984375],["t",6.41015625],["a",6.4580078125],["(+.f64 (/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t)) (*.f64 a 120))",6.49609375],["(/.f64 (*.f64 60 (-.f64 x y)) (-.f64 z t))",6.14794921875],["(*.f64 60 (-.f64 x y))",6.408203125],["(-.f64 x y)",6.3740234375],["(-.f64 z t)",6.388916015625],["(*.f64 a 120)",6.57177734375],["(*.f64 a 120)",6.455810546875]],"type":"regimes"},{"compiler":[[21,13]],"egraph":[[5,40,23,0.0002255],[4,39,23,0.000182709],[3,35,23,0.000138917],[2,29,23,9.7e-5],[1,19,23,5.9084e-5],[0,14,23,2.5375e-5]],"inputs":[["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 60 (-.f64 (/.f64 y (-.f64 t z)) (/.f64 x (-.f64 t z))) (*.f64 120 a))"]],"stop":[["fuel",1],["saturated",1]],"time":8.9970703125,"type":"simplify"},{"time":0.02392578125,"type":"soundness"},{"compiler":[[21,13]],"remove-preprocessing":[[]],"time":9.34814453125,"type":"end"}]