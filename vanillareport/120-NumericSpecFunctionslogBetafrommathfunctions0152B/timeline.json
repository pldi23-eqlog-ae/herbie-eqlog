[{"compiler":[[30,21]],"method":["search"],"sampling":[[12,0.0,0.7247019651442149,0.2752980348557851],[11,0.0,0.7276202280911044,0.2723797719088956],[10,0.0,0.9766453328923379,0.023354667107662097],[9,0.0,0.9961004192049343,0.0038995807950656936],[8,0.0,0.9961004192049343,0.0038995807950656936],[7,0.0,0.9961004192049343,0.0038995807950656936],[6,0.0,0.9961004192049343,0.0038995807950656936],[5,0.0,0.9961004192049343,0.0038995807950656936],[4,0.0,0.9961004192049343,0.0038995807950656936],[3,0.0,0.9961004192049343,0.0038995807950656936],[2,0.0,0.9961004192049343,0.0038995807950656936],[1,0.0,0.9961004192049343,0.0038995807950656936],[0,0.0,0.9961004192049343,0.0038995807950656936]],"time":236.44091796875,"type":"analyze"},{"outcomes":[["body",256,"invalid",1596.118896484375,19278],["body",1024,"valid",0.56982421875,2],["body",256,"valid",774.563232421875,8254]],"time":2395.364990234375,"type":"sample"},{"compiler":[[29,20]],"egraph":[[1,8,8,1.4084e-5],[0,8,8,1.175e-5],[9,3814,754,0.052251001000000005],[8,3814,754,0.040518918],[7,3814,754,0.033797709],[6,3694,754,0.028291667],[5,2900,754,0.022849876],[4,2900,754,0.016733084000000002],[3,2872,754,0.011990126],[2,2232,754,0.007189126],[1,565,754,0.0031918759999999997],[0,194,870,0.000668584]],"inputs":[["0","1","2","3","4","5","6","7"],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 y (log.f64 x)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 x i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 z (log.f64 y)) x) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 t (log.f64 y)) z) x) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 a (log.f64 y)) z) t) x) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 b (log.f64 y)) z) t) a) (*.f64 (-.f64 x 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 c (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 x))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 i (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y x))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 z)) y) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 z i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 t)) z) y) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 t i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 a)) z) t) y) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 a i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 b)) z) t) a) (*.f64 (-.f64 y 1/2) (log.f64 c))) (*.f64 b i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 c)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 y))) (*.f64 c i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 i)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 i y))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) t) z) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) a) t) z) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) b) t) a) (*.f64 (-.f64 z 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) c) t) a) (*.f64 (-.f64 b 1/2) (log.f64 z))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) i) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y z))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) a) t) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) b) a) (*.f64 (-.f64 t 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) c) a) (*.f64 (-.f64 b 1/2) (log.f64 t))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) i) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y t))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) b) (*.f64 (-.f64 a 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) c) (*.f64 (-.f64 b 1/2) (log.f64 a))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) i) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y a))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 c 1/2) (log.f64 b))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 i 1/2) (log.f64 c))) (*.f64 y b))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 i))) (*.f64 y c))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","2","4","2","5","6","7"],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) (+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (*.f64 y i)))","(fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 z (+.f64 t (fma.f64 x (log.f64 y) a)))))","(+.f64 (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 y) t))) (fma.f64 (+.f64 b -1/2) (log.f64 c) a))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 y) t))))","(+.f64 (+.f64 z (fma.f64 x (log.f64 y) t)) (fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) a)))","(+.f64 (fma.f64 x (log.f64 y) (+.f64 z t)) (fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) a)))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 y (log.f64 x)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 x i))","(+.f64 (+.f64 a (+.f64 t (fma.f64 y (log.f64 x) z))) (+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (*.f64 x i)))","(fma.f64 x i (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 t (+.f64 (fma.f64 y (log.f64 x) z) a))))","(+.f64 (fma.f64 x i (+.f64 z (fma.f64 y (log.f64 x) t))) (fma.f64 (+.f64 b -1/2) (log.f64 c) a))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 x i (+.f64 z (fma.f64 y (log.f64 x) t))))","(+.f64 (+.f64 z (fma.f64 y (log.f64 x) t)) (fma.f64 x i (fma.f64 (+.f64 b -1/2) (log.f64 c) a)))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 z (log.f64 y)) x) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (*.f64 y i) (+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 t (fma.f64 z (log.f64 y) x)))))","(fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 a (fma.f64 (log.f64 y) z (+.f64 x t)))))","(+.f64 (fma.f64 y i (fma.f64 (log.f64 y) z (+.f64 x t))) (fma.f64 (+.f64 b -1/2) (log.f64 c) a))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 y i (fma.f64 (log.f64 y) z (+.f64 x t))))","(+.f64 (+.f64 x (fma.f64 (log.f64 y) z t)) (fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) a)))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 t (log.f64 y)) z) x) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (*.f64 y i) (+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 x (fma.f64 t (log.f64 y) z)))))","(fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 a (+.f64 x (fma.f64 (log.f64 y) t z)))))","(+.f64 (fma.f64 y i (+.f64 x (fma.f64 (log.f64 y) t z))) (fma.f64 (+.f64 b -1/2) (log.f64 c) a))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 y i (+.f64 x (fma.f64 (log.f64 y) t z))))","(+.f64 (+.f64 x (fma.f64 (log.f64 y) t z)) (fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) a)))","(+.f64 x (+.f64 (fma.f64 (log.f64 y) t z) (fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) a))))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 a (log.f64 y)) z) t) x) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (*.f64 y i) (+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 x (+.f64 t (fma.f64 a (log.f64 y) z)))))","(fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 x (+.f64 t (fma.f64 (log.f64 y) a z)))))","(fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) (fma.f64 (log.f64 y) a (+.f64 z (+.f64 x t)))))","(+.f64 (fma.f64 (log.f64 y) a (+.f64 z t)) (fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) x)))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 b (log.f64 y)) z) t) a) (*.f64 (-.f64 x 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (*.f64 y i) (+.f64 (+.f64 t (fma.f64 b (log.f64 y) z)) (+.f64 a (*.f64 (log.f64 c) (-.f64 x 1/2)))))","(fma.f64 y i (fma.f64 (log.f64 c) (+.f64 x -1/2) (+.f64 a (+.f64 t (fma.f64 (log.f64 y) b z)))))","(fma.f64 y i (+.f64 (+.f64 t (fma.f64 (log.f64 y) b z)) (fma.f64 (log.f64 c) (+.f64 x -1/2) a)))","(fma.f64 y i (+.f64 (+.f64 z (fma.f64 (log.f64 y) b t)) (fma.f64 (log.f64 c) (+.f64 x -1/2) a)))","(+.f64 z (+.f64 (fma.f64 (log.f64 y) b t) (fma.f64 y i (fma.f64 (log.f64 c) (+.f64 x -1/2) a))))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 c (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 x))) (*.f64 y i))","(+.f64 (*.f64 y i) (+.f64 (+.f64 t (fma.f64 c (log.f64 y) z)) (+.f64 a (*.f64 (-.f64 b 1/2) (log.f64 x)))))","(fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 x) (+.f64 t (+.f64 (fma.f64 (log.f64 y) c z) a))))","(+.f64 (fma.f64 y i (+.f64 z (fma.f64 (log.f64 y) c t))) (fma.f64 (+.f64 b -1/2) (log.f64 x) a))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 x) a) (fma.f64 y i (+.f64 z (fma.f64 (log.f64 y) c t))))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 i (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y x))","(+.f64 (+.f64 a (+.f64 t (fma.f64 i (log.f64 y) z))) (+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (*.f64 x y)))","(fma.f64 x y (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 t (+.f64 (fma.f64 (log.f64 y) i z) a))))","(+.f64 (fma.f64 x y (+.f64 z (fma.f64 (log.f64 y) i t))) (fma.f64 (+.f64 b -1/2) (log.f64 c) a))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 x y (+.f64 z (fma.f64 (log.f64 y) i t))))","(+.f64 (+.f64 z (fma.f64 (log.f64 y) i t)) (fma.f64 x y (fma.f64 (+.f64 b -1/2) (log.f64 c) a)))","(+.f64 z (+.f64 (fma.f64 (log.f64 y) i t) (fma.f64 x y (fma.f64 (+.f64 b -1/2) (log.f64 c) a))))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 z)) y) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 z i))","(+.f64 (+.f64 a (+.f64 t (fma.f64 x (log.f64 z) y))) (+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (*.f64 z i)))","(fma.f64 z i (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 t (+.f64 (fma.f64 x (log.f64 z) y) a))))","(+.f64 (fma.f64 z i (+.f64 y (fma.f64 x (log.f64 z) t))) (fma.f64 (+.f64 b -1/2) (log.f64 c) a))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 z i (+.f64 y (fma.f64 x (log.f64 z) t))))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 t)) z) y) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 t i))","(+.f64 (+.f64 a (+.f64 y (fma.f64 x (log.f64 t) z))) (+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (*.f64 t i)))","(fma.f64 t i (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 y (+.f64 (fma.f64 x (log.f64 t) z) a))))","(+.f64 (fma.f64 t i (+.f64 y (fma.f64 x (log.f64 t) z))) (fma.f64 (+.f64 b -1/2) (log.f64 c) a))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 t i (+.f64 y (fma.f64 x (log.f64 t) z))))","(+.f64 (+.f64 y (fma.f64 x (log.f64 t) z)) (fma.f64 t i (fma.f64 (+.f64 b -1/2) (log.f64 c) a)))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 a)) z) t) y) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 a i))","(+.f64 (+.f64 y (+.f64 t (fma.f64 x (log.f64 a) z))) (+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (*.f64 a i)))","(fma.f64 a i (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 y (+.f64 t (fma.f64 x (log.f64 a) z)))))","(+.f64 (fma.f64 a i (+.f64 t (fma.f64 x (log.f64 a) z))) (fma.f64 (+.f64 b -1/2) (log.f64 c) y))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) y) (fma.f64 a i (+.f64 z (fma.f64 x (log.f64 a) t))))","(+.f64 (+.f64 z (fma.f64 x (log.f64 a) t)) (fma.f64 a i (fma.f64 (+.f64 b -1/2) (log.f64 c) y)))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 b)) z) t) a) (*.f64 (-.f64 y 1/2) (log.f64 c))) (*.f64 b i))","(+.f64 (+.f64 a (+.f64 t (fma.f64 x (log.f64 b) z))) (+.f64 (*.f64 (log.f64 c) (+.f64 y -1/2)) (*.f64 b i)))","(fma.f64 b i (fma.f64 (log.f64 c) (+.f64 y -1/2) (+.f64 t (+.f64 (fma.f64 x (log.f64 b) z) a))))","(+.f64 (fma.f64 b i (+.f64 z (fma.f64 x (log.f64 b) t))) (fma.f64 (log.f64 c) (+.f64 y -1/2) a))","(+.f64 (fma.f64 (log.f64 c) (+.f64 y -1/2) a) (fma.f64 b i (+.f64 z (fma.f64 x (log.f64 b) t))))","(+.f64 (+.f64 z (fma.f64 x (log.f64 b) t)) (fma.f64 b i (fma.f64 (log.f64 c) (+.f64 y -1/2) a)))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 c)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 y))) (*.f64 c i))","(+.f64 (+.f64 a (+.f64 t (fma.f64 x (log.f64 c) z))) (+.f64 (*.f64 (log.f64 y) (-.f64 b 1/2)) (*.f64 c i)))","(fma.f64 c i (fma.f64 (log.f64 y) (+.f64 b -1/2) (+.f64 t (+.f64 (fma.f64 x (log.f64 c) z) a))))","(+.f64 (fma.f64 c i (+.f64 z (fma.f64 x (log.f64 c) t))) (fma.f64 (log.f64 y) (+.f64 b -1/2) a))","(+.f64 (fma.f64 (log.f64 y) (+.f64 b -1/2) a) (fma.f64 c i (+.f64 z (fma.f64 x (log.f64 c) t))))","(+.f64 (+.f64 z (fma.f64 x (log.f64 c) t)) (fma.f64 c i (fma.f64 (log.f64 y) (+.f64 b -1/2) a)))","(+.f64 (fma.f64 (log.f64 y) (+.f64 b -1/2) a) (fma.f64 c i (fma.f64 x (log.f64 c) (+.f64 z t))))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 i)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 i y))","(+.f64 (*.f64 y i) (+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 t (fma.f64 x (log.f64 i) z)))))","(fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 t (+.f64 (fma.f64 x (log.f64 i) z) a))))","(+.f64 (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 i) t))) (fma.f64 (+.f64 b -1/2) (log.f64 c) a))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 i) t))))","(+.f64 (+.f64 z (fma.f64 x (log.f64 i) t)) (fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) a)))","(+.f64 z (+.f64 (fma.f64 x (log.f64 i) t) (fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) a))))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) t) z) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) (+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (*.f64 y i)))","(fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 z (+.f64 t (fma.f64 x (log.f64 y) a)))))","(+.f64 (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 y) t))) (fma.f64 (+.f64 b -1/2) (log.f64 c) a))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 y) t))))","(+.f64 (+.f64 z (fma.f64 x (log.f64 y) t)) (fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) a)))","(+.f64 (fma.f64 x (log.f64 y) (+.f64 z t)) (fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) a)))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) a) t) z) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) (+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (*.f64 y i)))","(fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 z (+.f64 t (fma.f64 x (log.f64 y) a)))))","(+.f64 (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 y) t))) (fma.f64 (+.f64 b -1/2) (log.f64 c) a))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 y) t))))","(+.f64 (+.f64 z (fma.f64 x (log.f64 y) t)) (fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) a)))","(+.f64 (fma.f64 x (log.f64 y) (+.f64 z t)) (fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) a)))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) b) t) a) (*.f64 (-.f64 z 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (*.f64 y i) (+.f64 (+.f64 t (fma.f64 x (log.f64 y) b)) (+.f64 a (*.f64 (log.f64 c) (+.f64 z -1/2)))))","(fma.f64 y i (fma.f64 (log.f64 c) (+.f64 z -1/2) (+.f64 t (+.f64 (fma.f64 x (log.f64 y) b) a))))","(+.f64 (fma.f64 y i (+.f64 t (fma.f64 x (log.f64 y) b))) (fma.f64 (log.f64 c) (+.f64 z -1/2) a))","(+.f64 (fma.f64 (log.f64 c) (+.f64 z -1/2) a) (fma.f64 y i (+.f64 t (fma.f64 x (log.f64 y) b))))","(fma.f64 (log.f64 c) (+.f64 z -1/2) (fma.f64 y i (+.f64 t (+.f64 b (fma.f64 x (log.f64 y) a)))))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) c) t) a) (*.f64 (-.f64 b 1/2) (log.f64 z))) (*.f64 y i))","(+.f64 (*.f64 y i) (+.f64 (+.f64 t (fma.f64 x (log.f64 y) c)) (+.f64 a (*.f64 (-.f64 b 1/2) (log.f64 z)))))","(fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 z) (+.f64 a (fma.f64 x (log.f64 y) (+.f64 t c)))))","(+.f64 (fma.f64 y i (fma.f64 x (log.f64 y) (+.f64 t c))) (fma.f64 (+.f64 b -1/2) (log.f64 z) a))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 z) a) (fma.f64 y i (fma.f64 x (log.f64 y) (+.f64 t c))))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) i) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y z))","(+.f64 (+.f64 a (+.f64 t (fma.f64 x (log.f64 y) i))) (+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (*.f64 y z)))","(fma.f64 y z (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 i (+.f64 t (fma.f64 x (log.f64 y) a)))))","(+.f64 (fma.f64 y z (+.f64 t (fma.f64 x (log.f64 y) i))) (fma.f64 (+.f64 b -1/2) (log.f64 c) a))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 y z (+.f64 t (fma.f64 x (log.f64 y) i))))","(+.f64 (+.f64 t (fma.f64 x (log.f64 y) i)) (fma.f64 y z (fma.f64 (+.f64 b -1/2) (log.f64 c) a)))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 y z (fma.f64 x (log.f64 y) (+.f64 t i))))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) a) t) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) (+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (*.f64 y i)))","(fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 z (+.f64 t (fma.f64 x (log.f64 y) a)))))","(+.f64 (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 y) t))) (fma.f64 (+.f64 b -1/2) (log.f64 c) a))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 y) t))))","(+.f64 (+.f64 z (fma.f64 x (log.f64 y) t)) (fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) a)))","(+.f64 (fma.f64 x (log.f64 y) (+.f64 z t)) (fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) a)))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) b) a) (*.f64 (-.f64 t 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (*.f64 y i) (+.f64 (+.f64 (fma.f64 x (log.f64 y) z) b) (+.f64 a (*.f64 (log.f64 c) (-.f64 t 1/2)))))","(fma.f64 y i (fma.f64 (log.f64 c) (+.f64 t -1/2) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 a b))))","(+.f64 (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 y) b))) (fma.f64 (log.f64 c) (+.f64 t -1/2) a))","(+.f64 (fma.f64 (log.f64 c) (+.f64 t -1/2) a) (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 y) b))))","(+.f64 (+.f64 z (fma.f64 x (log.f64 y) b)) (fma.f64 y i (fma.f64 (log.f64 c) (+.f64 t -1/2) a)))","(+.f64 b (+.f64 (fma.f64 x (log.f64 y) z) (fma.f64 y i (fma.f64 (log.f64 c) (+.f64 t -1/2) a))))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) c) a) (*.f64 (-.f64 b 1/2) (log.f64 t))) (*.f64 y i))","(+.f64 (*.f64 y i) (+.f64 (+.f64 (fma.f64 x (log.f64 y) z) c) (+.f64 a (*.f64 (-.f64 b 1/2) (log.f64 t)))))","(fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 t) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 a c))))","(+.f64 (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 y) c))) (fma.f64 (+.f64 b -1/2) (log.f64 t) a))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 t) a) (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 y) c))))","(+.f64 (+.f64 z (fma.f64 x (log.f64 y) c)) (fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 t) a)))","(fma.f64 (+.f64 b -1/2) (log.f64 t) (+.f64 a (fma.f64 y i (fma.f64 x (log.f64 y) (+.f64 z c)))))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) i) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y t))","(+.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 i a)) (+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (*.f64 y t)))","(fma.f64 y t (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 a (fma.f64 x (log.f64 y) (+.f64 z i)))))","(+.f64 (fma.f64 y t (fma.f64 x (log.f64 y) (+.f64 z i))) (fma.f64 (+.f64 b -1/2) (log.f64 c) a))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 y t (fma.f64 x (log.f64 y) (+.f64 z i))))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) b) (*.f64 (-.f64 a 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (*.f64 y i) (+.f64 (+.f64 (fma.f64 x (log.f64 y) z) t) (+.f64 b (*.f64 (log.f64 c) (+.f64 a -1/2)))))","(fma.f64 y i (fma.f64 (log.f64 c) (+.f64 a -1/2) (+.f64 z (+.f64 t (fma.f64 x (log.f64 y) b)))))","(+.f64 (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 y) t))) (fma.f64 (log.f64 c) (+.f64 a -1/2) b))","(+.f64 (fma.f64 (log.f64 c) (+.f64 a -1/2) b) (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 y) t))))","(+.f64 (fma.f64 (log.f64 c) (+.f64 a -1/2) b) (fma.f64 y i (fma.f64 x (log.f64 y) (+.f64 z t))))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) c) (*.f64 (-.f64 b 1/2) (log.f64 a))) (*.f64 y i))","(+.f64 (*.f64 y i) (+.f64 (+.f64 (fma.f64 x (log.f64 y) z) t) (+.f64 c (*.f64 (-.f64 b 1/2) (log.f64 a)))))","(fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 a) (+.f64 z (fma.f64 x (log.f64 y) (+.f64 t c)))))","(+.f64 (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 y) t))) (fma.f64 (+.f64 b -1/2) (log.f64 a) c))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 a) c) (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 y) t))))","(+.f64 (+.f64 z (fma.f64 x (log.f64 y) t)) (fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 a) c)))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 a) c) (fma.f64 y i (fma.f64 x (log.f64 y) (+.f64 z t))))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) i) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y a))","(+.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t i)) (+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (*.f64 y a)))","(fma.f64 y a (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t i))))","(+.f64 (fma.f64 y a (+.f64 z (fma.f64 x (log.f64 y) t))) (fma.f64 (+.f64 b -1/2) (log.f64 c) i))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) i) (fma.f64 y a (+.f64 z (fma.f64 x (log.f64 y) t))))","(+.f64 (+.f64 z (fma.f64 x (log.f64 y) t)) (fma.f64 y a (fma.f64 (+.f64 b -1/2) (log.f64 c) i)))","(fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 i (fma.f64 y a (fma.f64 x (log.f64 y) (+.f64 z t)))))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 c 1/2) (log.f64 b))) (*.f64 y i))","(+.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) (+.f64 (*.f64 (log.f64 b) (-.f64 c 1/2)) (*.f64 y i)))","(fma.f64 y i (fma.f64 (log.f64 b) (+.f64 c -1/2) (+.f64 z (+.f64 t (fma.f64 x (log.f64 y) a)))))","(+.f64 (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 y) t))) (fma.f64 (log.f64 b) (+.f64 c -1/2) a))","(+.f64 (fma.f64 (log.f64 b) (+.f64 c -1/2) a) (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 y) t))))","(+.f64 t (+.f64 (fma.f64 x (log.f64 y) z) (fma.f64 y i (fma.f64 (log.f64 b) (+.f64 c -1/2) a))))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 i 1/2) (log.f64 c))) (*.f64 y b))","(+.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) (+.f64 (*.f64 (log.f64 c) (-.f64 i 1/2)) (*.f64 y b)))","(fma.f64 y b (fma.f64 (log.f64 c) (+.f64 i -1/2) (+.f64 z (+.f64 t (fma.f64 x (log.f64 y) a)))))","(+.f64 (fma.f64 y b (+.f64 z (fma.f64 x (log.f64 y) t))) (fma.f64 (log.f64 c) (+.f64 i -1/2) a))","(+.f64 (fma.f64 (log.f64 c) (+.f64 i -1/2) a) (fma.f64 y b (+.f64 z (fma.f64 x (log.f64 y) t))))","(+.f64 (+.f64 z (fma.f64 x (log.f64 y) t)) (fma.f64 y b (fma.f64 (log.f64 c) (+.f64 i -1/2) a)))","(fma.f64 y b (+.f64 a (fma.f64 (log.f64 c) (+.f64 i -1/2) (fma.f64 x (log.f64 y) (+.f64 z t)))))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 i))) (*.f64 y c))","(+.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) (+.f64 (*.f64 (-.f64 b 1/2) (log.f64 i)) (*.f64 y c)))","(fma.f64 y c (fma.f64 (+.f64 b -1/2) (log.f64 i) (+.f64 z (+.f64 t (fma.f64 x (log.f64 y) a)))))","(+.f64 (fma.f64 y c (+.f64 z (fma.f64 x (log.f64 y) t))) (fma.f64 (+.f64 b -1/2) (log.f64 i) a))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 i) a) (fma.f64 y c (+.f64 z (fma.f64 x (log.f64 y) t))))","(+.f64 (+.f64 z (fma.f64 x (log.f64 y) t)) (fma.f64 y c (fma.f64 (+.f64 b -1/2) (log.f64 i) a)))","(+.f64 (fma.f64 x (log.f64 y) (+.f64 z t)) (fma.f64 y c (fma.f64 (+.f64 b -1/2) (log.f64 i) a)))"]],"stop":[["unsound",1],["node limit",1]],"symmetry":[["(sort z t a)"]],"time":90.884033203125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[15,4734,26,0.066440873],[14,4605,26,0.054988582],[13,4605,26,0.041220207],[12,4351,26,0.036946457],[11,4351,26,0.032409832],[10,4099,26,0.028699124],[9,2266,26,0.024375248999999998],[8,2266,26,0.015751749],[7,2266,26,0.012710249],[6,2266,26,0.009813458],[5,2160,26,0.007410041],[4,1594,26,0.004968958],[3,473,26,0.0026552909999999997],[2,113,26,0.000732208],[1,41,26,0.000218083],[0,21,30,7.4416e-5]],"inputs":[["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) (+.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) (*.f64 y i)))","(fma.f64 y i (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))))","(+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 y i (+.f64 z (fma.f64 x (log.f64 y) t))))","(+.f64 (fma.f64 x (log.f64 y) t) (+.f64 (fma.f64 y i z) (fma.f64 (+.f64 b -1/2) (log.f64 c) a)))","(+.f64 t (+.f64 z (fma.f64 (+.f64 b -1/2) (log.f64 c) (fma.f64 x (log.f64 y) (fma.f64 y i a)))))","(+.f64 z (fma.f64 (+.f64 b -1/2) (log.f64 c) (fma.f64 y i (fma.f64 x (log.f64 y) (+.f64 t a)))))","(+.f64 a (fma.f64 x (log.f64 y) (+.f64 t (fma.f64 (+.f64 b -1/2) (log.f64 c) (fma.f64 y i z)))))","(+.f64 t (+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 x (log.f64 y) (fma.f64 y i z))))"]],"stop":[["saturated",1]],"time":77.944091796875,"type":"simplify"},{"compiler":[[47,27]],"time":0.56103515625,"type":"eval"},{"alts":[["(+.f64 t (+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 x (log.f64 y) (fma.f64 y i z))))","fresh",0.09765625],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","next",0.09765625]],"compiler":[[26,17],[29,20],[26,17],[29,20]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.09375],"time":1.725830078125,"type":"prune"},{"compiler":[[99,30]],"locations":[["(+.f64 (*.f64 x (log.f64 y)) z)",0.0078125,true],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))",0.0078125,true],["(*.f64 (-.f64 b 1/2) (log.f64 c))",0.15625,true],["(*.f64 x (log.f64 y))",0.25390625,true]],"time":17.843017578125,"type":"localize"},{"count":[[4,164]],"series":[["(+.f64 (*.f64 x (log.f64 y)) z)","z","-inf",0.156005859375],["(+.f64 (*.f64 x (log.f64 y)) z)","z","inf",0.162841796875],["(+.f64 (*.f64 x (log.f64 y)) z)","z","0",0.151123046875],["(+.f64 (*.f64 x (log.f64 y)) z)","y","-inf",0.194091796875],["(+.f64 (*.f64 x (log.f64 y)) z)","y","inf",0.1689453125],["(+.f64 (*.f64 x (log.f64 y)) z)","y","0",0.154052734375],["(+.f64 (*.f64 x (log.f64 y)) z)","x","-inf",0.159912109375],["(+.f64 (*.f64 x (log.f64 y)) z)","x","inf",0.14599609375],["(+.f64 (*.f64 x (log.f64 y)) z)","x","0",0.175048828125],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","c","-inf",0.31884765625],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","c","inf",0.2490234375],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","c","0",4.18701171875],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","b","-inf",0.193115234375],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","b","inf",0.23388671875],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","b","0",1.075927734375],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","a","-inf",0.232177734375],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","a","inf",0.283935546875],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","a","0",1.89111328125],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","t","-inf",0.2568359375],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","t","inf",0.277099609375],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","t","0",2.95703125],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","z","-inf",0.242919921875],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","z","inf",0.293212890625],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","z","0",1.998046875],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","y","-inf",0.293212890625],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","y","inf",0.286865234375],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","y","0",13.339111328125],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","x","-inf",0.218017578125],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","x","inf",0.248046875],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","x","0",1.135986328125],["(*.f64 (-.f64 b 1/2) (log.f64 c))","c","-inf",7.912109375],["(*.f64 (-.f64 b 1/2) (log.f64 c))","c","inf",4.4091796875],["(*.f64 (-.f64 b 1/2) (log.f64 c))","c","0",4.176025390625],["(*.f64 (-.f64 b 1/2) (log.f64 c))","b","-inf",0.36083984375],["(*.f64 (-.f64 b 1/2) (log.f64 c))","b","inf",0.320068359375],["(*.f64 (-.f64 b 1/2) (log.f64 c))","b","0",1.846923828125],["(*.f64 x (log.f64 y))","y","-inf",8.257080078125],["(*.f64 x (log.f64 y))","y","inf",4.118896484375],["(*.f64 x (log.f64 y))","y","0",8.9140625],["(*.f64 x (log.f64 y))","x","-inf",0.281982421875],["(*.f64 x (log.f64 y))","x","inf",0.328857421875],["(*.f64 x (log.f64 y))","x","0",18.451171875]],"time":91.694091796875,"type":"series"},{"count":[[4,111]],"egraph":[[2,6037,44,0.039824251],[1,408,44,0.007830417000000001],[0,18,46,0.000420792]],"inputs":[["(*.f64 x (log.f64 y))","(*.f64 (-.f64 b 1/2) (log.f64 c))","(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c)))","(+.f64 (*.f64 x (log.f64 y)) z)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 x (log.f64 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (log.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (log.f64 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (log.f64 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (log.f64 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (log.f64 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 y x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (log.f64 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 y x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (log.f64 y))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (log.f64 c)) (*.f64 -1/2 (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 c) b) (*.f64 (log.f64 c) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 b 3) -1/8) (log.f64 c)) (fma.f64 b b (+.f64 1/4 (*.f64 b 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 b b -1/4) (log.f64 c)) (-.f64 b -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log.f64 c) (+.f64 (pow.f64 b 3) -1/8)) (fma.f64 b b (+.f64 1/4 (*.f64 b 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log.f64 c) (fma.f64 b b -1/4)) (-.f64 b -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 c (+.f64 b -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 c (+.f64 b -1/2)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 c (+.f64 b -1/2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) 2) (+.f64 (fma.f64 x (log.f64 y) z) (-.f64 (+.f64 t a) (*.f64 (+.f64 b -1/2) (log.f64 c))))) (/.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2) (+.f64 (fma.f64 x (log.f64 y) z) (-.f64 (+.f64 t a) (*.f64 (+.f64 b -1/2) (log.f64 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)))) (pow.f64 (cbrt.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)))) 2) (cbrt.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)))) (sqrt.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) 3) (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 3)) (/.f64 1 (+.f64 (pow.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) 2) (*.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) (-.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) 2) (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2)) (/.f64 1 (+.f64 (fma.f64 x (log.f64 y) z) (-.f64 (+.f64 t a) (*.f64 (+.f64 b -1/2) (log.f64 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) 2) (*.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) (-.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))))) (+.f64 (pow.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) 3) (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (fma.f64 x (log.f64 y) z) (-.f64 (+.f64 t a) (*.f64 (+.f64 b -1/2) (log.f64 c)))) (-.f64 (pow.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) 2) (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) 3) (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 3)) (+.f64 (pow.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) 2) (*.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) (-.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) 3) (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 3)) (+.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2) (-.f64 (pow.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) 2) (*.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) 2) (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2)) (+.f64 (fma.f64 x (log.f64 y) z) (-.f64 (+.f64 t a) (*.f64 (+.f64 b -1/2) (log.f64 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) 3) (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 3))) (neg.f64 (+.f64 (pow.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) 2) (*.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) (-.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) 2) (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2))) (neg.f64 (+.f64 (fma.f64 x (log.f64 y) z) (-.f64 (+.f64 t a) (*.f64 (+.f64 b -1/2) (log.f64 c))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 x (log.f64 y) (+.f64 z t)) 3) (pow.f64 (+.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) a) 3)) (+.f64 (pow.f64 (fma.f64 x (log.f64 y) (+.f64 z t)) 2) (-.f64 (*.f64 (+.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) a) (+.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) a)) (*.f64 (fma.f64 x (log.f64 y) (+.f64 z t)) (+.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2) (pow.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) 2)) (-.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (fma.f64 x (log.f64 y) (+.f64 z t)) 2) (*.f64 (+.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) a) (+.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) a))) (-.f64 (fma.f64 x (log.f64 y) (+.f64 z t)) (+.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))) (pow.f64 c (+.f64 b -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 c) (+.f64 b -1/2) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (+.f64 b -1/2) (log.f64 c)) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 x (log.f64 y) (+.f64 z t)) (+.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)) (*.f64 (+.f64 b -1/2) (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 x (log.f64 y) (+.f64 z t))) 2) (cbrt.f64 (fma.f64 x (log.f64 y) (+.f64 z t))) (+.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))) 2) (cbrt.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))) (*.f64 (+.f64 b -1/2) (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 x (log.f64 y) (+.f64 z t))) (sqrt.f64 (fma.f64 x (log.f64 y) (+.f64 z t))) (+.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) a))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))) (sqrt.f64 (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))) (*.f64 (+.f64 b -1/2) (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) (sqrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 x (log.f64 y) z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (-.f64 (*.f64 x (log.f64 y)) z)) (/.f64 (*.f64 z z) (-.f64 (*.f64 x (log.f64 y)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (log.f64 y) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x (log.f64 y) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (log.f64 y) z)) (pow.f64 (cbrt.f64 (fma.f64 x (log.f64 y) z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x (log.f64 y) z)) 2) (cbrt.f64 (fma.f64 x (log.f64 y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x (log.f64 y) z)) (sqrt.f64 (fma.f64 x (log.f64 y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 x (log.f64 y)) 3) (pow.f64 z 3)) (/.f64 1 (+.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 z (-.f64 z (*.f64 x (log.f64 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 z z)) (/.f64 1 (-.f64 (*.f64 x (log.f64 y)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 z (-.f64 z (*.f64 x (log.f64 y))))) (+.f64 (pow.f64 (*.f64 x (log.f64 y)) 3) (pow.f64 z 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (*.f64 x (log.f64 y)) z) (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (log.f64 y)) 3) (pow.f64 z 3)) (+.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 z (-.f64 z (*.f64 x (log.f64 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (log.f64 y)) 3) (pow.f64 z 3)) (+.f64 (*.f64 z z) (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 (log.f64 y) (*.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 z z)) (-.f64 (*.f64 x (log.f64 y)) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 x (log.f64 y)) 3) (pow.f64 z 3))) (neg.f64 (+.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 z (-.f64 z (*.f64 x (log.f64 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 x (log.f64 y)) 2) (*.f64 z z))) (neg.f64 (-.f64 (*.f64 x (log.f64 y)) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 z z) (pow.f64 (*.f64 x (log.f64 y)) 2)) (-.f64 z (*.f64 x (log.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (log.f64 y) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (log.f64 y) z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x (log.f64 y) z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (log.f64 y) z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x (log.f64 y) z) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 z) (pow.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 x (log.f64 y) z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (log.f64 y) z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x (log.f64 y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x (log.f64 y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 x (log.f64 y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 x (log.f64 y) z)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (log.f64 y) z)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 y) x z)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (log.f64 y)) z)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 z (*.f64 x (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 z) 2) (cbrt.f64 z) (*.f64 x (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 x (log.f64 y)) 2)) (cbrt.f64 (*.f64 x (log.f64 y))) z)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 z) (sqrt.f64 z) (*.f64 x (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x (log.f64 y))) (sqrt.f64 (*.f64 x (log.f64 y))) z)))))"]],"rules":[["egg-rr",37],["egg-rr",42],["egg-rr",19],["egg-rr",13]],"stop":[["node limit",1]],"time":67.931884765625,"type":"rewrite"},{"count":[[275,146]],"egraph":[[6,7134,2186,0.042030583],[5,6271,2186,0.030448208],[4,4844,2186,0.020263083],[3,2132,2186,0.011674750000000001],[2,664,2186,0.004823875],[1,224,2186,0.001578208],[0,79,2239,0.000487]],"inputs":[["(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)","(*.f64 -1/2 (log.f64 c))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) b)","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) b)","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 t z)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 a (+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 t (+.f64 z (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))))))","(+.f64 a (+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 t (+.f64 z (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))))))","(+.f64 a (+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 t (+.f64 z (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))))))","(+.f64 a (+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 t (+.f64 z (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) (+.f64 a (+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 t z))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) (+.f64 a (+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 t z))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) (+.f64 a (+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 t z))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) (+.f64 a (+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","z","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","z","(+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) z)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","t","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","t","(+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","a","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","a","(+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t (+.f64 z (*.f64 -1/2 (log.f64 c))))))","(+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t (+.f64 (*.f64 (log.f64 c) b) (+.f64 z (*.f64 -1/2 (log.f64 c)))))))","(+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t (+.f64 (*.f64 (log.f64 c) b) (+.f64 z (*.f64 -1/2 (log.f64 c)))))))","(+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t (+.f64 (*.f64 (log.f64 c) b) (+.f64 z (*.f64 -1/2 (log.f64 c)))))))","(*.f64 (log.f64 c) b)","(+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t (+.f64 (*.f64 (log.f64 c) b) (+.f64 z (*.f64 -1/2 (log.f64 c)))))))","(+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t (+.f64 (*.f64 (log.f64 c) b) (+.f64 z (*.f64 -1/2 (log.f64 c)))))))","(+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t (+.f64 (*.f64 (log.f64 c) b) (+.f64 z (*.f64 -1/2 (log.f64 c)))))))","(*.f64 (log.f64 c) b)","(+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t (+.f64 (*.f64 (log.f64 c) b) (+.f64 z (*.f64 -1/2 (log.f64 c)))))))","(+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t (+.f64 (*.f64 (log.f64 c) b) (+.f64 z (*.f64 -1/2 (log.f64 c)))))))","(+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t (+.f64 (*.f64 (log.f64 c) b) (+.f64 z (*.f64 -1/2 (log.f64 c)))))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c)))) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c)))) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c)))) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c)))) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t (+.f64 z (*.f64 (-.f64 b 1/2) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))))))))","(+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t (+.f64 z (*.f64 (-.f64 b 1/2) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))))))))","(+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t (+.f64 z (*.f64 (-.f64 b 1/2) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))))))))","(+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t (+.f64 z (*.f64 (-.f64 b 1/2) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))))))))","z","(+.f64 (*.f64 (log.f64 y) x) z)","(+.f64 (*.f64 (log.f64 y) x) z)","(+.f64 (*.f64 (log.f64 y) x) z)","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 (log.f64 y) x) z)","(+.f64 (*.f64 (log.f64 y) x) z)","(+.f64 (*.f64 (log.f64 y) x) z)","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 (log.f64 y) x) z)","(+.f64 (*.f64 (log.f64 y) x) z)","(+.f64 (*.f64 (log.f64 y) x) z)","(+.f64 (*.f64 (log.f64 y) x) z)","(+.f64 (*.f64 (log.f64 y) x) z)","(+.f64 (*.f64 (log.f64 y) x) z)","(+.f64 (*.f64 (log.f64 y) x) z)","(+.f64 z (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)))","(+.f64 z (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)))","(+.f64 z (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)))","(+.f64 z (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) z)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) z)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) z)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) z)","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 (log.f64 y) x) z)","(+.f64 (*.f64 (log.f64 y) x) z)","(+.f64 (*.f64 (log.f64 y) x) z)","z","(+.f64 (*.f64 (log.f64 y) x) z)","(+.f64 (*.f64 (log.f64 y) x) z)","(+.f64 (*.f64 (log.f64 y) x) z)","z","(+.f64 (*.f64 (log.f64 y) x) z)","(+.f64 (*.f64 (log.f64 y) x) z)","(+.f64 (*.f64 (log.f64 y) x) z)"]],"method":["egg-herbie"],"outputs":[["(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 (log.f64 y) x)","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))","(*.f64 (log.f64 y) x)","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))","(*.f64 (log.f64 y) x)","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))","(*.f64 (log.f64 y) x)","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))","(*.f64 (log.f64 y) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)","(*.f64 (log.f64 y) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)","(*.f64 (log.f64 y) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)","(*.f64 (log.f64 y) x)","(*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x)","(*.f64 (log.f64 y) x)","(*.f64 -1/2 (log.f64 c))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (log.f64 c) b)","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (log.f64 c) b)","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 t z)))","(fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 a (+.f64 t z)))","(+.f64 a (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 a (+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 t (+.f64 z (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 a (+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 t (+.f64 z (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 a (+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 t (+.f64 z (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 a (+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 t (+.f64 z (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x))))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) (+.f64 a (+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) (+.f64 a (+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) (+.f64 a (+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) (+.f64 a (+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) t)))","(fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 a (fma.f64 (log.f64 y) x t)))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 a (fma.f64 (log.f64 y) x t)))","(+.f64 a (fma.f64 (log.f64 c) (+.f64 -1/2 b) (fma.f64 (log.f64 y) x t)))","(fma.f64 (log.f64 y) x (fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 a t)))","(+.f64 a (fma.f64 (log.f64 y) x (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","z","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","z","(+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) z)))","(fma.f64 (+.f64 b -1/2) (log.f64 c) (+.f64 a (fma.f64 (log.f64 y) x z)))","(+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) a))","(+.f64 a (fma.f64 (log.f64 y) x (fma.f64 (log.f64 c) (+.f64 -1/2 b) z)))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (fma.f64 (log.f64 y) x (+.f64 a z)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","t","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","t","(+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z)))","(fma.f64 (+.f64 b -1/2) (log.f64 c) (fma.f64 (log.f64 y) x (+.f64 t z)))","(fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","a","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","a","(+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) (+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t (+.f64 z (*.f64 -1/2 (log.f64 c))))))","(fma.f64 (log.f64 y) x (+.f64 a (+.f64 (+.f64 t z) (*.f64 -1/2 (log.f64 c)))))","(+.f64 (+.f64 a (fma.f64 (log.f64 y) x t)) (fma.f64 -1/2 (log.f64 c) z))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 -1/2 (log.f64 c) t)))","(+.f64 a (+.f64 t (fma.f64 (log.f64 y) x (fma.f64 -1/2 (log.f64 c) z))))","(+.f64 a (+.f64 t (fma.f64 -1/2 (log.f64 c) (fma.f64 (log.f64 y) x z))))","(+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t (+.f64 (*.f64 (log.f64 c) b) (+.f64 z (*.f64 -1/2 (log.f64 c)))))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t (+.f64 (*.f64 (log.f64 c) b) (+.f64 z (*.f64 -1/2 (log.f64 c)))))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t (+.f64 (*.f64 (log.f64 c) b) (+.f64 z (*.f64 -1/2 (log.f64 c)))))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(*.f64 (log.f64 c) b)","(+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t (+.f64 (*.f64 (log.f64 c) b) (+.f64 z (*.f64 -1/2 (log.f64 c)))))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t (+.f64 (*.f64 (log.f64 c) b) (+.f64 z (*.f64 -1/2 (log.f64 c)))))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t (+.f64 (*.f64 (log.f64 c) b) (+.f64 z (*.f64 -1/2 (log.f64 c)))))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(*.f64 (log.f64 c) b)","(+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t (+.f64 (*.f64 (log.f64 c) b) (+.f64 z (*.f64 -1/2 (log.f64 c)))))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t (+.f64 (*.f64 (log.f64 c) b) (+.f64 z (*.f64 -1/2 (log.f64 c)))))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t (+.f64 (*.f64 (log.f64 c) b) (+.f64 z (*.f64 -1/2 (log.f64 c)))))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c)))) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c)))) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c)))) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c)))) (+.f64 a (+.f64 (*.f64 (log.f64 y) x) (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t (+.f64 z (*.f64 (-.f64 b 1/2) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))))))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t (+.f64 z (*.f64 (-.f64 b 1/2) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))))))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t (+.f64 z (*.f64 (-.f64 b 1/2) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))))))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","(+.f64 (*.f64 (log.f64 y) x) (+.f64 a (+.f64 t (+.f64 z (*.f64 (-.f64 b 1/2) (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))))))))","(fma.f64 (log.f64 c) (+.f64 b -1/2) (fma.f64 (log.f64 y) x (+.f64 a (+.f64 t z))))","(fma.f64 (log.f64 c) (+.f64 -1/2 b) (+.f64 (fma.f64 (log.f64 y) x t) (+.f64 z a)))","(+.f64 a (fma.f64 (log.f64 y) x (+.f64 z (fma.f64 (log.f64 c) (+.f64 -1/2 b) t))))","(+.f64 a (+.f64 (fma.f64 (log.f64 y) x z) (fma.f64 (log.f64 c) (+.f64 -1/2 b) t)))","z","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 z (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)))","(fma.f64 (log.f64 y) x z)","(+.f64 z (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)))","(fma.f64 (log.f64 y) x z)","(+.f64 z (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)))","(fma.f64 (log.f64 y) x z)","(+.f64 z (*.f64 -1 (*.f64 (log.f64 (/.f64 1 y)) x)))","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 y))) (log.f64 -1)) x) z)","(fma.f64 (log.f64 y) x z)","(*.f64 (log.f64 y) x)","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","z","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","z","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)","(+.f64 (*.f64 (log.f64 y) x) z)","(fma.f64 (log.f64 y) x z)"]],"stop":[["node limit",1]],"time":88.0791015625,"type":"simplify"},{"compiler":[[3954,1480]],"time":26.25,"type":"eval"},{"alts":[["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (pow.f64 (sqrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)) (*.f64 y i))","fresh",33.07326127930533],["(+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))) (*.f64 y i))","fresh",0.16664757069442182],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (/.f64 (*.f64 (fma.f64 b b -1/4) (log.f64 c)) (-.f64 b -1/2))) (*.f64 y i))","fresh",15.045253759768443],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 (cbrt.f64 (fma.f64 x (log.f64 y) z)) (pow.f64 (cbrt.f64 (fma.f64 x (log.f64 y) z)) 2)) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","fresh",0.42003642583195644],["(+.f64 (+.f64 (+.f64 (+.f64 (pow.f64 (cbrt.f64 (fma.f64 x (log.f64 y) z)) 3) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","fresh",0.4314614746741666],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 3)) (*.f64 y i))","next",0.15757753907376806],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (pow.f64 (sqrt.f64 (*.f64 x (log.f64 y))) 2) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","fresh",30.098320019536885]],"compiler":[[32,23],[38,26],[34,23],[38,23],[31,22],[32,23],[32,23],[32,23],[38,26],[34,23],[38,23],[31,22],[32,23],[32,23]],"count":[[148,7]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[146,7],"picked":[1,0]}],"min-error":[0.0390625],"time":43.29296875,"type":"prune"},{"compiler":[[122,47]],"locations":[["(cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))",0.0859375,true],["(*.f64 (+.f64 b -1/2) (log.f64 c))",0.15625,true],["(*.f64 x (log.f64 y))",0.25390625,false],["(pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 3)",0.6973801758319566,true]],"time":24.4140625,"type":"localize"},{"count":[[3,56]],"series":[["(cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))","c","-inf",0.197021484375],["(cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))","c","inf",0.218017578125],["(cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))","c","0",0.158935546875],["(cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))","b","-inf",0.30908203125],["(cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))","b","inf",0.2451171875],["(cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))","b","0",0.515869140625],["(*.f64 (+.f64 b -1/2) (log.f64 c))","c","-inf",0.174072265625],["(*.f64 (+.f64 b -1/2) (log.f64 c))","c","inf",0.14892578125],["(*.f64 (+.f64 b -1/2) (log.f64 c))","c","0",0.144775390625],["(*.f64 (+.f64 b -1/2) (log.f64 c))","b","-inf",0.172119140625],["(*.f64 (+.f64 b -1/2) (log.f64 c))","b","inf",0.154052734375],["(*.f64 (+.f64 b -1/2) (log.f64 c))","b","0",0.160888671875],["(pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 3)","c","-inf",2.0849609375],["(pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 3)","c","inf",1.48095703125],["(pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 3)","c","0",1.68896484375],["(pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 3)","b","-inf",0.962890625],["(pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 3)","b","inf",0.818115234375],["(pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 3)","b","0",2.927001953125]],"time":12.8779296875,"type":"series"},{"count":[[3,84]],"egraph":[[2,2318,29,0.021410542],[1,215,29,0.003550958],[0,10,29,0.000319667]],"inputs":[["(pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 3)","(*.f64 (+.f64 b -1/2) (log.f64 c))","(cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (log.f64 c)) (*.f64 -1/2 (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (log.f64 c)) (*.f64 b (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 c) b) (*.f64 (log.f64 c) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 c) -1/2) (*.f64 (log.f64 c) b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (+.f64 b -1/2) (log.f64 c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b -1/2) (log.f64 c))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 c) (+.f64 b -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 b -1/2) (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 c)) 2) (*.f64 (cbrt.f64 (log.f64 c)) (+.f64 b -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 b -1/2)) 2) (*.f64 (cbrt.f64 (+.f64 b -1/2)) (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1/6) (*.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1/6) (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 c)) (*.f64 (sqrt.f64 (log.f64 c)) (+.f64 b -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) (sqrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 b -1/2)) (*.f64 (sqrt.f64 (+.f64 b -1/2)) (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 2) 3) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1/6) 3) (pow.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1/6) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 b -1/2) (pow.f64 (cbrt.f64 (log.f64 c)) 2)) (cbrt.f64 (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 b -1/2) (sqrt.f64 (log.f64 c))) (sqrt.f64 (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 c) (pow.f64 (cbrt.f64 (+.f64 b -1/2)) 2)) (cbrt.f64 (+.f64 b -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (log.f64 c) (sqrt.f64 (+.f64 b -1/2))) (sqrt.f64 (+.f64 b -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) 1) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 2)) (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1/6)) (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1/8 (pow.f64 b 3)) (log.f64 c)) (fma.f64 b b (-.f64 1/4 (*.f64 b -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 b b -1/4) (log.f64 c)) (+.f64 b 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log.f64 c) (+.f64 -1/8 (pow.f64 b 3))) (fma.f64 b b (-.f64 1/4 (*.f64 b -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log.f64 c) (fma.f64 b b -1/4)) (+.f64 b 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 c (+.f64 b -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 b -1/2) 3) (pow.f64 (log.f64 c) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 3) (pow.f64 (+.f64 b -1/2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 c (+.f64 b -1/2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (log.f64 c)) (*.f64 -1/2 (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (log.f64 c)) (*.f64 b (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 c) b) (*.f64 (log.f64 c) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 c) -1/2) (*.f64 (log.f64 c) b))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 (+.f64 b -1/2) (log.f64 c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1/8 (pow.f64 b 3)) (log.f64 c)) (fma.f64 b b (-.f64 1/4 (*.f64 b -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 b b -1/4) (log.f64 c)) (+.f64 b 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log.f64 c) (+.f64 -1/8 (pow.f64 b 3))) (fma.f64 b b (-.f64 1/4 (*.f64 b -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log.f64 c) (fma.f64 b b -1/4)) (+.f64 b 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 c (+.f64 b -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (+.f64 b -1/2) 3) (pow.f64 (log.f64 c) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 3) (pow.f64 (+.f64 b -1/2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 c (+.f64 b -1/2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) (pow.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 2) (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (+.f64 b -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b -1/2)) (cbrt.f64 (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1/6) (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) 1/3) (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 1/3) (pow.f64 (sqrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))))))))"]],"rules":[["egg-rr",21],["egg-rr",22],["egg-rr",41]],"stop":[["node limit",1]],"time":45.969970703125,"type":"rewrite"},{"count":[[140,97]],"egraph":[[3,5648,1204,0.025114],[2,1714,1226,0.011940542],[1,518,1307,0.0036546670000000003],[0,161,1399,0.000857167]],"inputs":[["(*.f64 -1/2 (*.f64 (log.f64 c) (pow.f64 1 1/3)))","(+.f64 (*.f64 -1/2 (*.f64 (log.f64 c) (pow.f64 1 1/3))) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 13) (pow.f64 1 4)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1/2) 4) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 13) (pow.f64 1 4)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1/2) 4) 1/3)))) b))","(+.f64 (*.f64 -1/2 (*.f64 (log.f64 c) (pow.f64 1 1/3))) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 13) (pow.f64 1 4)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1/2) 4) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 13) (pow.f64 1 4)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1/2) 4) 1/3)))) b) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 17) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1/2)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 (log.f64 c) 1) 1/3) (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3)))))) (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 17) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1/2)) 1/3))))) (pow.f64 b 2))))","(+.f64 (*.f64 -1/2 (*.f64 (log.f64 c) (pow.f64 1 1/3))) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 13) (pow.f64 1 4)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1/2) 4) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 13) (pow.f64 1 4)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1/2) 4) 1/3)))) b) (+.f64 (*.f64 (pow.f64 b 3) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/3) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) (pow.f64 (pow.f64 1 4) 1/9)))) (+.f64 (*.f64 (pow.f64 (*.f64 (log.f64 c) 1) 1/3) (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 4/27 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 1 1/9))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (log.f64 c)) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/3) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) (pow.f64 (pow.f64 1 4) 1/9)))) (*.f64 1/27 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 7) 1) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))) (cbrt.f64 -1/2))))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/3) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) (pow.f64 (pow.f64 1 4) 1/9)))) (*.f64 1/27 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 7) 1) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 7) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3))))))))))) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 17) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1/2)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 (log.f64 c) 1) 1/3) (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3)))))) (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 17) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1/2)) 1/3))))) (pow.f64 b 2)))))","(*.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (pow.f64 1 1/3))","(*.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (pow.f64 1 1/3))","(*.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (pow.f64 1 1/3))","(*.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (pow.f64 1 1/3))","(*.f64 -1 (*.f64 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))) (pow.f64 1 1/3)))","(*.f64 -1 (*.f64 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))) (pow.f64 1 1/3)))","(*.f64 -1 (*.f64 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))) (pow.f64 1 1/3)))","(*.f64 -1 (*.f64 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))) (pow.f64 1 1/3)))","(*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2)) (pow.f64 1 1/3))","(*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2)) (pow.f64 1 1/3))","(*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2)) (pow.f64 1 1/3))","(*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2)) (pow.f64 1 1/3))","(*.f64 -1/2 (log.f64 c))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) b)","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) b)","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (-.f64 b 1/2) (log.f64 c))","(*.f64 (-.f64 b 1/2) (log.f64 c))","(*.f64 (-.f64 b 1/2) (log.f64 c))","(*.f64 (-.f64 b 1/2) (log.f64 c))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(*.f64 (pow.f64 (*.f64 (log.f64 c) 1) 1/3) (cbrt.f64 -1/2))","(+.f64 (*.f64 (pow.f64 (*.f64 (log.f64 c) 1) 1/3) (cbrt.f64 -1/2)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 7) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) 1/3) b))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 11) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7)) 1/3) (pow.f64 b 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 (log.f64 c) 1) 1/3) (cbrt.f64 -1/2)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 7) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) 1/3) b)))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 11) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7)) 1/3) (pow.f64 b 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 (log.f64 c) 1) 1/3) (cbrt.f64 -1/2)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 c) 2)) 1/3) (/.f64 (*.f64 (pow.f64 b 3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/3) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) (pow.f64 (pow.f64 1 4) 1/9)))) (*.f64 1/27 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 7) 1) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)))))) (pow.f64 (cbrt.f64 -1/2) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 7) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) 1/3) b))))))","(pow.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) 1/3)","(pow.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) 1/3)","(pow.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) 1/3)","(pow.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) 1/3)","(*.f64 (pow.f64 (*.f64 (-.f64 b 1/2) (*.f64 1 (log.f64 (/.f64 1 c)))) 1/3) (cbrt.f64 -1))","(*.f64 (pow.f64 (*.f64 (-.f64 b 1/2) (*.f64 1 (log.f64 (/.f64 1 c)))) 1/3) (cbrt.f64 -1))","(*.f64 (pow.f64 (*.f64 (-.f64 b 1/2) (*.f64 1 (log.f64 (/.f64 1 c)))) 1/3) (cbrt.f64 -1))","(*.f64 (pow.f64 (*.f64 (-.f64 b 1/2) (*.f64 1 (log.f64 (/.f64 1 c)))) 1/3) (cbrt.f64 -1))","(pow.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2)) 1/3)","(pow.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2)) 1/3)","(pow.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2)) 1/3)","(pow.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2)) 1/3)"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1/2 (*.f64 (log.f64 c) (pow.f64 1 1/3)))","(*.f64 -1/2 (log.f64 c))","(+.f64 (*.f64 -1/2 (*.f64 (log.f64 c) (pow.f64 1 1/3))) (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 13) (pow.f64 1 4)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1/2) 4) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 13) (pow.f64 1 4)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1/2) 4) 1/3)))) b))","(fma.f64 -1/2 (log.f64 c) (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 13) 1/18) (pow.f64 (pow.f64 (log.f64 c) 13) 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1/2) 4))) 1) b))","(fma.f64 -1/2 (log.f64 c) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 13) 1/18) (pow.f64 (pow.f64 (log.f64 c) 13) 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1/2) 4))) b))","(fma.f64 -1/2 (log.f64 c) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 13) 1/18) (pow.f64 (pow.f64 (log.f64 c) 13) 1/18)) (cbrt.f64 (*.f64 -1/2 (cbrt.f64 -1/2)))) b))","(fma.f64 -1/2 (log.f64 c) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 13) 1/18) (*.f64 (cbrt.f64 (*.f64 -1/2 (cbrt.f64 -1/2))) (pow.f64 (pow.f64 (log.f64 c) 13) 1/18))) b))","(+.f64 (*.f64 -1/2 (*.f64 (log.f64 c) (pow.f64 1 1/3))) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 13) (pow.f64 1 4)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1/2) 4) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 13) (pow.f64 1 4)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1/2) 4) 1/3)))) b) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 17) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1/2)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 (log.f64 c) 1) 1/3) (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3)))))) (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 17) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1/2)) 1/3))))) (pow.f64 b 2))))","(fma.f64 -1/2 (log.f64 c) (fma.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 13) 1/18) (pow.f64 (pow.f64 (log.f64 c) 13) 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1/2) 4))) 1) b (*.f64 (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 17) 1/18) (pow.f64 (pow.f64 (log.f64 c) 17) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1/2)))) (fma.f64 (cbrt.f64 (log.f64 c)) (*.f64 (cbrt.f64 -1/2) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)))) -1/9)) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 17) 1/18) (pow.f64 (pow.f64 (log.f64 c) 17) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1/2)))) -1/9))) (*.f64 b b))))","(fma.f64 -1/2 (log.f64 c) (fma.f64 (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 17) 1/18) (pow.f64 (pow.f64 (log.f64 c) 17) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1/2)))) (fma.f64 (cbrt.f64 (log.f64 c)) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4))))) (*.f64 -1/9 (cbrt.f64 -1/2))) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1/2))) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 17) 1/18) (pow.f64 (pow.f64 (log.f64 c) 17) 1/18)) -1/9)))) (*.f64 b b) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 13) 1/18) (pow.f64 (pow.f64 (log.f64 c) 13) 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1/2) 4))) b)))","(fma.f64 -1/2 (log.f64 c) (*.f64 b (+.f64 (*.f64 b (fma.f64 (cbrt.f64 (log.f64 c)) (*.f64 (*.f64 (cbrt.f64 -1/2) (cbrt.f64 (/.f64 -2 (cbrt.f64 -1/2)))) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) -1/9)) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 17) 1/18) (pow.f64 (pow.f64 (log.f64 c) 17) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1/2)))) 1/9))) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 13) 1/18) (pow.f64 (pow.f64 (log.f64 c) 13) 1/18)) (cbrt.f64 (*.f64 -1/2 (cbrt.f64 -1/2)))))))","(fma.f64 -1/2 (log.f64 c) (*.f64 b (+.f64 (*.f64 b (fma.f64 (cbrt.f64 -1/2) (*.f64 (cbrt.f64 (log.f64 c)) (*.f64 (cbrt.f64 (/.f64 -2 (cbrt.f64 -1/2))) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) -1/9)))) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 17) 1/18) (pow.f64 (pow.f64 (log.f64 c) 17) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1/2))) 1/9)))) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 13) 1/18) (*.f64 (cbrt.f64 (*.f64 -1/2 (cbrt.f64 -1/2))) (pow.f64 (pow.f64 (log.f64 c) 13) 1/18))))))","(+.f64 (*.f64 -1/2 (*.f64 (log.f64 c) (pow.f64 1 1/3))) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 13) (pow.f64 1 4)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1/2) 4) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 13) (pow.f64 1 4)) 1/9) (pow.f64 (pow.f64 (cbrt.f64 -1/2) 4) 1/3)))) b) (+.f64 (*.f64 (pow.f64 b 3) (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/3) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) (pow.f64 (pow.f64 1 4) 1/9)))) (+.f64 (*.f64 (pow.f64 (*.f64 (log.f64 c) 1) 1/3) (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 4/27 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 1 1/9))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (log.f64 c)) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/3) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) (pow.f64 (pow.f64 1 4) 1/9)))) (*.f64 1/27 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 7) 1) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))) (cbrt.f64 -1/2))))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/3) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) (pow.f64 (pow.f64 1 4) 1/9)))) (*.f64 1/27 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 7) 1) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 7) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3))))))))))) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 17) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1/2)) 1/3))) (+.f64 (*.f64 (pow.f64 (*.f64 (log.f64 c) 1) 1/3) (*.f64 (cbrt.f64 -1/2) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3)))))) (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 17) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 -1/2)) 1/3))))) (pow.f64 b 2)))))","(fma.f64 -1/2 (log.f64 c) (fma.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 13) 1/18) (pow.f64 (pow.f64 (log.f64 c) 13) 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1/2) 4))) 1) b (fma.f64 (pow.f64 b 3) (fma.f64 -2/27 (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))) (fma.f64 (cbrt.f64 (log.f64 c)) (*.f64 (cbrt.f64 -1/2) (fma.f64 4/27 (*.f64 1 (pow.f64 (log.f64 c) 2)) (*.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 (log.f64 c))) (/.f64 (fma.f64 -2/9 (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))) 1/27)) (cbrt.f64 -1/2)))))) (+.f64 (*.f64 -1/3 (fma.f64 -2/9 (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))) 1/27))) (*.f64 1/3 (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18) (pow.f64 (pow.f64 (log.f64 c) 7) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)))) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)))) -1/9)))))) (*.f64 (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 17) 1/18) (pow.f64 (pow.f64 (log.f64 c) 17) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1/2)))) (fma.f64 (cbrt.f64 (log.f64 c)) (*.f64 (cbrt.f64 -1/2) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)))) -1/9)) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 17) 1/18) (pow.f64 (pow.f64 (log.f64 c) 17) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1/2)))) -1/9))) (*.f64 b b)))))","(fma.f64 -1/2 (log.f64 c) (fma.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 13) 1/18) (pow.f64 (pow.f64 (log.f64 c) 13) 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1/2) 4))) b (fma.f64 (pow.f64 b 3) (fma.f64 -2/27 (/.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (pow.f64 (cbrt.f64 -1/2) 2)) (fma.f64 (cbrt.f64 (log.f64 c)) (*.f64 (cbrt.f64 -1/2) (fma.f64 4/27 (pow.f64 (log.f64 c) 2) (*.f64 (/.f64 (*.f64 (/.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (pow.f64 (cbrt.f64 -1/2) 2)) -5/27) (cbrt.f64 -1/2)) (*.f64 -2/3 (cbrt.f64 (/.f64 1 (log.f64 c))))))) (fma.f64 1/3 (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4))) -1/9)) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18) (pow.f64 (pow.f64 (log.f64 c) 7) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))) (*.f64 (*.f64 (/.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (pow.f64 (cbrt.f64 -1/2) 2)) -5/27) -1/3)))) (*.f64 b (*.f64 b (fma.f64 2/9 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 17) 1/18) (pow.f64 (pow.f64 (log.f64 c) 17) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1/2)))) (fma.f64 (cbrt.f64 (log.f64 c)) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4))))) (*.f64 -1/9 (cbrt.f64 -1/2))) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1/2))) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 17) 1/18) (pow.f64 (pow.f64 (log.f64 c) 17) 1/18)) -1/9)))))))))","(fma.f64 -1/2 (log.f64 c) (fma.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 13) 1/18) (pow.f64 (pow.f64 (log.f64 c) 13) 1/18)) (cbrt.f64 (*.f64 -1/2 (cbrt.f64 -1/2)))) b (*.f64 (*.f64 b b) (+.f64 (fma.f64 (cbrt.f64 (log.f64 c)) (*.f64 (*.f64 (cbrt.f64 -1/2) (cbrt.f64 (/.f64 -2 (cbrt.f64 -1/2)))) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) -1/9)) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 17) 1/18) (pow.f64 (pow.f64 (log.f64 c) 17) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 -1/2)))) 1/9)) (*.f64 b (fma.f64 -2/27 (/.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (pow.f64 (cbrt.f64 -1/2) 2)) (fma.f64 (*.f64 (/.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (pow.f64 (cbrt.f64 -1/2) 2)) -5/27) -1/3 (fma.f64 (fma.f64 4/27 (pow.f64 (log.f64 c) 2) (*.f64 (cbrt.f64 (/.f64 1 (log.f64 c))) (*.f64 -2/3 (/.f64 (/.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (pow.f64 (cbrt.f64 -1/2) 2)) (/.f64 (cbrt.f64 -1/2) -5/27))))) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 (log.f64 c))) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (*.f64 (cbrt.f64 (/.f64 -2 (cbrt.f64 -1/2))) -1/9)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18) (*.f64 1/3 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18)))))))))))))","(fma.f64 -1/2 (log.f64 c) (fma.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 13) 1/18) (*.f64 (cbrt.f64 (*.f64 -1/2 (cbrt.f64 -1/2))) (pow.f64 (pow.f64 (log.f64 c) 13) 1/18))) b (*.f64 (*.f64 b b) (+.f64 (fma.f64 (cbrt.f64 -1/2) (*.f64 (cbrt.f64 (log.f64 c)) (*.f64 (cbrt.f64 (/.f64 -2 (cbrt.f64 -1/2))) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) -1/9)))) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 17) 1/18) (pow.f64 (pow.f64 (log.f64 c) 17) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1/2))) 1/9))) (*.f64 b (fma.f64 -2/27 (/.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (pow.f64 (cbrt.f64 -1/2) 2)) (fma.f64 (*.f64 (/.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (pow.f64 (cbrt.f64 -1/2) 2)) -5/27) -1/3 (fma.f64 (fma.f64 4/27 (pow.f64 (log.f64 c) 2) (*.f64 (cbrt.f64 (/.f64 1 (log.f64 c))) (*.f64 -2/3 (*.f64 -2 (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) -5/27))))) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 (log.f64 c))) (*.f64 (*.f64 (cbrt.f64 (/.f64 -2 (cbrt.f64 -1/2))) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) -1/9))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18) (*.f64 1/3 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18)))))))))))))","(*.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (pow.f64 1 1/3))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (pow.f64 1 1/3))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (pow.f64 1 1/3))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (*.f64 (-.f64 b 1/2) (log.f64 c)) (pow.f64 1 1/3))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))) (pow.f64 1 1/3)))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))) (pow.f64 1 1/3)))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))) (pow.f64 1 1/3)))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))) (pow.f64 1 1/3)))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2)) (pow.f64 1 1/3))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2)) (pow.f64 1 1/3))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2)) (pow.f64 1 1/3))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2)) (pow.f64 1 1/3))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1/2 (log.f64 c))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (log.f64 c) b)","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (log.f64 c) b)","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (log.f64 c))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (log.f64 c))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (log.f64 c))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (log.f64 c))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(*.f64 (log.f64 c) (+.f64 b -1/2))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (pow.f64 (*.f64 (log.f64 c) 1) 1/3) (cbrt.f64 -1/2))","(*.f64 (cbrt.f64 -1/2) (cbrt.f64 (log.f64 c)))","(+.f64 (*.f64 (pow.f64 (*.f64 (log.f64 c) 1) 1/3) (cbrt.f64 -1/2)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 7) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) 1/3) b))))","(fma.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 -1/2) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18) (pow.f64 (pow.f64 (log.f64 c) 7) 1/18)) (*.f64 b (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)))))))","(fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18) (*.f64 b (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)))))) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 (log.f64 c))))","(fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18) (*.f64 1/3 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18)))) b (*.f64 (cbrt.f64 -1/2) (cbrt.f64 (log.f64 c))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 11) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7)) 1/3) (pow.f64 b 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 (log.f64 c) 1) 1/3) (cbrt.f64 -1/2)) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 7) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) 1/3) b)))))","(fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 11) 1/18) (pow.f64 (pow.f64 (log.f64 c) 11) 1/18)) (*.f64 (*.f64 b b) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7))))) (fma.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 -1/2) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18) (pow.f64 (pow.f64 (log.f64 c) 7) 1/18)) (*.f64 b (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))))))","(fma.f64 -1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7))) (*.f64 (*.f64 b b) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 11) 1/18) (pow.f64 (pow.f64 (log.f64 c) 11) 1/18)))) (fma.f64 1/3 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18) (*.f64 b (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)))))) (*.f64 (cbrt.f64 -1/2) (cbrt.f64 (log.f64 c)))))","(fma.f64 -1/9 (*.f64 (*.f64 b b) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 11) 1/18) (pow.f64 (pow.f64 (log.f64 c) 11) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7))))) (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18) (*.f64 1/3 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18)))) b (*.f64 (cbrt.f64 -1/2) (cbrt.f64 (log.f64 c)))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 11) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7)) 1/3) (pow.f64 b 2)))) (+.f64 (*.f64 (pow.f64 (*.f64 (log.f64 c) 1) 1/3) (cbrt.f64 -1/2)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 c) 2)) 1/3) (/.f64 (*.f64 (pow.f64 b 3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/3) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) (pow.f64 (pow.f64 1 4) 1/9)))) (*.f64 1/27 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 7) 1) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)))))) (pow.f64 (cbrt.f64 -1/2) 2)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 7) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) 1/3) b))))))","(fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 11) 1/18) (pow.f64 (pow.f64 (log.f64 c) 11) 1/18)) (*.f64 (*.f64 b b) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7))))) (fma.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 -1/2) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (log.f64 c) 2))) (/.f64 (*.f64 (pow.f64 b 3) (fma.f64 -2/9 (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))) 1/27))) (pow.f64 (cbrt.f64 -1/2) 2))) (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18) (pow.f64 (pow.f64 (log.f64 c) 7) 1/18)) (*.f64 b (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)))))))))","(fma.f64 -1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7))) (*.f64 (*.f64 b b) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 11) 1/18) (pow.f64 (pow.f64 (log.f64 c) 11) 1/18)))) (fma.f64 (cbrt.f64 -1/2) (cbrt.f64 (log.f64 c)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (log.f64 c) 2))) (*.f64 (/.f64 (pow.f64 b 3) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 (/.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (pow.f64 (cbrt.f64 -1/2) 2)) -5/27))) (*.f64 1/3 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18) (*.f64 b (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))))))))","(fma.f64 (cbrt.f64 -1/2) (cbrt.f64 (log.f64 c)) (fma.f64 -1/9 (*.f64 (*.f64 b b) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 11) 1/18) (pow.f64 (pow.f64 (log.f64 c) 11) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7))))) (fma.f64 1/3 (*.f64 b (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18) (pow.f64 (pow.f64 (log.f64 c) 7) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (log.f64 c) 2))) (/.f64 (*.f64 (pow.f64 b 3) -1/3) (/.f64 (/.f64 (pow.f64 (cbrt.f64 -1/2) 2) (/.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (pow.f64 (cbrt.f64 -1/2) 2))) -5/27))))))","(fma.f64 (cbrt.f64 -1/2) (cbrt.f64 (log.f64 c)) (fma.f64 -1/9 (*.f64 (*.f64 b b) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 11) 1/18) (pow.f64 (pow.f64 (log.f64 c) 11) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7))))) (fma.f64 1/3 (*.f64 b (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/18) (pow.f64 (pow.f64 (log.f64 c) 7) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (log.f64 c) 2))) (*.f64 (/.f64 (*.f64 (pow.f64 b 3) -1/3) (*.f64 -1/2 (cbrt.f64 -1/2))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) -5/27))))))","(pow.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) 1/3)","(cbrt.f64 (*.f64 (log.f64 c) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (log.f64 c) (+.f64 -1/2 b)))","(pow.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) 1/3)","(cbrt.f64 (*.f64 (log.f64 c) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (log.f64 c) (+.f64 -1/2 b)))","(pow.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) 1/3)","(cbrt.f64 (*.f64 (log.f64 c) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (log.f64 c) (+.f64 -1/2 b)))","(pow.f64 (*.f64 (log.f64 c) (-.f64 b 1/2)) 1/3)","(cbrt.f64 (*.f64 (log.f64 c) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (log.f64 c) (+.f64 -1/2 b)))","(*.f64 (pow.f64 (*.f64 (-.f64 b 1/2) (*.f64 1 (log.f64 (/.f64 1 c)))) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (neg.f64 (log.f64 c)))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (+.f64 -1/2 b) (neg.f64 (log.f64 c)))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (log.f64 c) (fma.f64 b -1 1/2))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (log.f64 c) (-.f64 1/2 b))) (cbrt.f64 -1))","(*.f64 (pow.f64 (*.f64 (-.f64 b 1/2) (*.f64 1 (log.f64 (/.f64 1 c)))) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (neg.f64 (log.f64 c)))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (+.f64 -1/2 b) (neg.f64 (log.f64 c)))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (log.f64 c) (fma.f64 b -1 1/2))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (log.f64 c) (-.f64 1/2 b))) (cbrt.f64 -1))","(*.f64 (pow.f64 (*.f64 (-.f64 b 1/2) (*.f64 1 (log.f64 (/.f64 1 c)))) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (neg.f64 (log.f64 c)))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (+.f64 -1/2 b) (neg.f64 (log.f64 c)))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (log.f64 c) (fma.f64 b -1 1/2))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (log.f64 c) (-.f64 1/2 b))) (cbrt.f64 -1))","(*.f64 (pow.f64 (*.f64 (-.f64 b 1/2) (*.f64 1 (log.f64 (/.f64 1 c)))) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (neg.f64 (log.f64 c)))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (+.f64 -1/2 b) (neg.f64 (log.f64 c)))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (log.f64 c) (fma.f64 b -1 1/2))) (cbrt.f64 -1))","(*.f64 (cbrt.f64 (*.f64 (log.f64 c) (-.f64 1/2 b))) (cbrt.f64 -1))","(pow.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2)) 1/3)","(cbrt.f64 (*.f64 (log.f64 c) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (log.f64 c) (+.f64 -1/2 b)))","(pow.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2)) 1/3)","(cbrt.f64 (*.f64 (log.f64 c) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (log.f64 c) (+.f64 -1/2 b)))","(pow.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2)) 1/3)","(cbrt.f64 (*.f64 (log.f64 c) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (log.f64 c) (+.f64 -1/2 b)))","(pow.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2)) 1/3)","(cbrt.f64 (*.f64 (log.f64 c) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (log.f64 c) (+.f64 -1/2 b)))"]],"stop":[["node limit",1]],"time":50.8759765625,"type":"simplify"},{"compiler":[[4245,2229]],"time":36.510009765625,"type":"eval"},{"alts":[["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 3)) (*.f64 y i))","done",0.15757753907376806],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))) (*.f64 y i))","next",0.1286125488422101],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (log.f64 c) (sqrt.f64 (+.f64 b -1/2))) (sqrt.f64 (+.f64 b -1/2)))) (*.f64 y i))","fresh",48.793632519536885],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (+.f64 b -1/2) (pow.f64 (cbrt.f64 (log.f64 c)) 2)) (cbrt.f64 (log.f64 c)))) (*.f64 y i))","fresh",0.1614837890737681],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 (cbrt.f64 (fma.f64 x (log.f64 y) z)) (pow.f64 (cbrt.f64 (fma.f64 x (log.f64 y) z)) 2)) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","fresh",0.42003642583195644],["(+.f64 (+.f64 (+.f64 (+.f64 (pow.f64 (cbrt.f64 (fma.f64 x (log.f64 y) z)) 3) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","fresh",0.4314614746741666],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (sqrt.f64 (log.f64 c)) (*.f64 (sqrt.f64 (log.f64 c)) (+.f64 b -1/2)))) (*.f64 y i))","fresh",32.29916000976844],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (pow.f64 (sqrt.f64 (*.f64 x (log.f64 y))) 2) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","fresh",30.098320019536885]],"compiler":[[32,23],[41,29],[35,25],[36,24],[38,23],[31,22],[34,22],[32,23],[41,29],[35,25],[36,24],[38,23],[31,22],[34,22],[32,23]],"count":[[120,8]],"kept":[{"done":[0,0],"fresh":[6,3],"new":[113,4],"picked":[1,1]}],"min-error":[0.01953125],"time":40.13720703125,"type":"prune"},{"compiler":[[179,82]],"locations":[["(*.f64 x (log.f64 y))",0.25390625,false],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))",0.32259750976844204,true],["(pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)",0.42091752930532605,true],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2)))",0.43587875976844204,true]],"time":37.4599609375,"type":"localize"},{"count":[[3,64]],"series":[["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))","c","-inf",0.304931640625],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))","c","inf",0.282958984375],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))","c","0",1.0],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))","b","-inf",0.380126953125],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))","b","inf",0.241943359375],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))","b","0",1.1669921875],["(pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)","c","-inf",0.323974609375],["(pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)","c","inf",0.35595703125],["(pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)","c","0",0.31494140625],["(pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)","b","-inf",0.39111328125],["(pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)","b","inf",0.30517578125],["(pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)","b","0",0.532958984375],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2)))","c","-inf",1.85498046875],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2)))","c","inf",1.1728515625],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2)))","c","0",1.22802734375],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2)))","b","-inf",0.921142578125],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2)))","b","inf",0.364990234375],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2)))","b","0",1.010009765625]],"time":12.4609375,"type":"series"},{"count":[[3,89]],"egraph":[[2,3076,41,0.02675475],[1,286,43,0.0046270420000000005],[0,14,45,0.000380959]],"inputs":[["(*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2)))","(pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)","(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 b -1/2) (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) (pow.f64 (+.f64 b -1/2) 1/6)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (+.f64 b -1/2) (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (+.f64 b -1/2) (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) (pow.f64 (+.f64 b -1/2) 1/6))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 b -1/2)) 2) (pow.f64 (cbrt.f64 (log.f64 c)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 4) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1/6) (sqrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 5) (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (*.f64 2/3 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 1/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2/3 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (+.f64 b -1/2) (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (log.f64 c)) (*.f64 -1/2 (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (log.f64 c)) (*.f64 b (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 c) b) (*.f64 (log.f64 c) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 c) -1/2) (*.f64 (log.f64 c) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 c (+.f64 b -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 c (+.f64 b -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 c (+.f64 b -1/2)))) (log.f64 (sqrt.f64 (pow.f64 c (+.f64 b -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1/8 (pow.f64 b 3)) (log.f64 c)) (-.f64 (fma.f64 b b 1/4) (*.f64 b -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 b b -1/4) (log.f64 c)) (+.f64 b 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log.f64 c) (+.f64 -1/8 (pow.f64 b 3))) (-.f64 (fma.f64 b b 1/4) (*.f64 b -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log.f64 c) (fma.f64 b b -1/4)) (+.f64 b 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1/6) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 c (+.f64 b -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 c (+.f64 b -1/2)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 c (+.f64 b -1/2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 1/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (log.f64 c) (*.f64 -1/2 (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (log.f64 c) (*.f64 b (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 c) b (*.f64 (log.f64 c) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 c) -1/2 (*.f64 (log.f64 c) b))))))"]],"rules":[["egg-rr",38],["egg-rr",30],["egg-rr",21]],"stop":[["node limit",1]],"time":51.574951171875,"type":"rewrite"},{"count":[[153,119]],"egraph":[[3,4634,1060,0.022623709],[2,977,1061,0.008530501],[1,333,1069,0.002278126],[0,113,1333,0.000612417]],"inputs":[["(*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3))","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b) (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)))","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b) (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)))","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b) (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b)","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b)","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3))","(*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) 1) 1/3) (-.f64 b 1/2))","(*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) 1) 1/3) (-.f64 b 1/2))","(*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) 1) 1/3) (-.f64 b 1/2))","(*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) 1) 1/3) (-.f64 b 1/2))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (pow.f64 (cbrt.f64 -1/2) 2))","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 10) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1/2) 1/3) b))))","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (pow.f64 (cbrt.f64 -1/2) 2)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 10) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1/2) 1/3) b))) (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3)))))))","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (pow.f64 (cbrt.f64 -1/2) 2)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 10) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1/2) 1/3) b))) (+.f64 (*.f64 (pow.f64 b 3) (+.f64 (*.f64 4/27 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 1 1/9))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (log.f64 c)) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/3) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) (pow.f64 (pow.f64 1 4) 1/9)))) (*.f64 1/27 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 7) 1) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))) (cbrt.f64 -1/2)))))) (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3))))))))","(pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2))) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2))) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2))) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2))) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(*.f64 -1/2 (log.f64 c))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) b)","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) b)","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (-.f64 b 1/2))","(*.f64 (log.f64 c) (-.f64 b 1/2))","(*.f64 (log.f64 c) (-.f64 b 1/2))","(*.f64 (log.f64 c) (-.f64 b 1/2))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3))","(*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b) (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b) (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b) (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b)","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b)","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) 1) 1/3) (-.f64 b 1/2))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) 1) 1/3) (-.f64 b 1/2))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) 1) 1/3) (-.f64 b 1/2))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) 1) 1/3) (-.f64 b 1/2))","(fma.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (pow.f64 (cbrt.f64 -1/2) 2))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (pow.f64 (cbrt.f64 -1/2) 2))","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 10) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1/2) 1/3) b))))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 10) 1/18) (pow.f64 (pow.f64 (log.f64 c) 10) 1/18)) (*.f64 b (cbrt.f64 (cbrt.f64 -1/2))))))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 10) 1/18) (pow.f64 (pow.f64 (log.f64 c) 10) 1/18)) (*.f64 (*.f64 b (cbrt.f64 (cbrt.f64 -1/2))) 2/3)))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 10) 1/18) (pow.f64 (pow.f64 (log.f64 c) 10) 1/18)) (*.f64 b (*.f64 (cbrt.f64 (cbrt.f64 -1/2)) 2/3))))","(fma.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 10) 1/18) (pow.f64 (pow.f64 (log.f64 c) 10) 1/18)) (*.f64 (cbrt.f64 (cbrt.f64 -1/2)) (*.f64 b 2/3)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (pow.f64 (cbrt.f64 -1/2) 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (pow.f64 (cbrt.f64 -1/2) 2)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 10) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1/2) 1/3) b))) (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3)))))))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (pow.f64 (cbrt.f64 -1/2) 2) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 10) 1/18) (pow.f64 (pow.f64 (log.f64 c) 10) 1/18)) (*.f64 b (cbrt.f64 (cbrt.f64 -1/2)))) (*.f64 (*.f64 b b) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)))) -1/9))))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (pow.f64 (cbrt.f64 -1/2) 2) (fma.f64 2/3 (*.f64 b (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 10) 1/18) (pow.f64 (pow.f64 (log.f64 c) 10) 1/18)) (cbrt.f64 (cbrt.f64 -1/2)))) (*.f64 (*.f64 b b) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4))) -1/9)))))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 b (+.f64 (*.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 10) 1/18) (pow.f64 (pow.f64 (log.f64 c) 10) 1/18)) (cbrt.f64 (cbrt.f64 -1/2)))) (*.f64 b (*.f64 (cbrt.f64 (/.f64 -2 (cbrt.f64 -1/2))) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) -1/9))))))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 b (+.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 10) 1/18) (pow.f64 (pow.f64 (log.f64 c) 10) 1/18)) (*.f64 2/3 (cbrt.f64 (cbrt.f64 -1/2)))) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (*.f64 (*.f64 (cbrt.f64 (/.f64 -2 (cbrt.f64 -1/2))) -1/9) b)))))","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (pow.f64 (cbrt.f64 -1/2) 2)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 10) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1/2) 1/3) b))) (+.f64 (*.f64 (pow.f64 b 3) (+.f64 (*.f64 4/27 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 1 1/9))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (log.f64 c)) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 7) 1/3) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) (pow.f64 (pow.f64 1 4) 1/9)))) (*.f64 1/27 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 7) 1) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))) (cbrt.f64 -1/2)))))) (*.f64 (pow.f64 b 2) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)) 1/3))))))))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (pow.f64 (cbrt.f64 -1/2) 2) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 10) 1/18) (pow.f64 (pow.f64 (log.f64 c) 10) 1/18)) (*.f64 b (cbrt.f64 (cbrt.f64 -1/2)))) (fma.f64 (pow.f64 b 3) (fma.f64 4/27 (pow.f64 (log.f64 c) 2) (*.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 1 (log.f64 c)))) (/.f64 (fma.f64 -2/9 (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))) (*.f64 1/27 (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))) (cbrt.f64 -1/2)))) (*.f64 (*.f64 b b) (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4)))) -1/9)))))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (pow.f64 (cbrt.f64 -1/2) 2) (fma.f64 2/3 (*.f64 b (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 10) 1/18) (pow.f64 (pow.f64 (log.f64 c) 10) 1/18)) (cbrt.f64 (cbrt.f64 -1/2)))) (fma.f64 (*.f64 b b) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 4))) -1/9)) (*.f64 (pow.f64 b 3) (fma.f64 (pow.f64 (log.f64 c) 2) 4/27 (*.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 (log.f64 c))) (/.f64 (*.f64 (/.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (pow.f64 (cbrt.f64 -1/2) 2)) -5/27) (cbrt.f64 -1/2)))))))))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (pow.f64 (cbrt.f64 -1/2) 2) (fma.f64 (pow.f64 b 3) (fma.f64 (pow.f64 (log.f64 c) 2) 4/27 (/.f64 (*.f64 (/.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 -5/27 (cbrt.f64 (/.f64 1 (log.f64 c))))) (/.f64 (cbrt.f64 -1/2) -2/3))) (*.f64 b (+.f64 (*.f64 2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 10) 1/18) (pow.f64 (pow.f64 (log.f64 c) 10) 1/18)) (cbrt.f64 (cbrt.f64 -1/2)))) (*.f64 b (*.f64 (cbrt.f64 (/.f64 -2 (cbrt.f64 -1/2))) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) -1/9)))))))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (pow.f64 (cbrt.f64 -1/2) 2) (*.f64 b (+.f64 (*.f64 b (+.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (*.f64 (cbrt.f64 (/.f64 -2 (cbrt.f64 -1/2))) -1/9)) (*.f64 b (fma.f64 (pow.f64 (log.f64 c) 2) 4/27 (/.f64 (*.f64 (/.f64 (cbrt.f64 (pow.f64 (log.f64 c) 7)) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 -5/27 (cbrt.f64 (/.f64 1 (log.f64 c))))) (/.f64 (cbrt.f64 -1/2) -2/3)))))) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 10) 1/18) (pow.f64 (pow.f64 (log.f64 c) 10) 1/18)) (*.f64 2/3 (cbrt.f64 (cbrt.f64 -1/2)))))))","(pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2))) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (*.f64 (pow.f64 (neg.f64 (log.f64 c)) 2) (pow.f64 (+.f64 b -1/2) 2))) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2))) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2))) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (*.f64 (pow.f64 (neg.f64 (log.f64 c)) 2) (pow.f64 (+.f64 b -1/2) 2))) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2))) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2))) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (*.f64 (pow.f64 (neg.f64 (log.f64 c)) 2) (pow.f64 (+.f64 b -1/2) 2))) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2))) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2))) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (*.f64 (pow.f64 (neg.f64 (log.f64 c)) 2) (pow.f64 (+.f64 b -1/2) 2))) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2))) (pow.f64 (cbrt.f64 -1) 2))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(*.f64 -1/2 (log.f64 c))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (log.f64 c) b)","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (log.f64 c) b)","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (log.f64 c) (-.f64 b 1/2))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (log.f64 c) (-.f64 b 1/2))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (log.f64 c) (-.f64 b 1/2))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (log.f64 c) (-.f64 b 1/2))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))"]],"stop":[["node limit",1]],"time":45.990966796875,"type":"simplify"},{"compiler":[[4736,2168]],"time":36.6669921875,"type":"eval"},{"alts":[["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 4)) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))) (*.f64 y i))","fresh",0.22796769456288066],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))) (*.f64 y i))","done",0.1286125488422101],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 3)) (*.f64 y i))","done",0.15757753907376806],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))) (*.f64 y i))","next",0.14195253907376806],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (cbrt.f64 (log.f64 c)))) (*.f64 y i))","fresh",0.22310268560039825],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (+.f64 b -1/2) (pow.f64 (cbrt.f64 (log.f64 c)) 2)) (cbrt.f64 (log.f64 c)))) (*.f64 y i))","fresh",0.1614837890737681],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 (cbrt.f64 (fma.f64 x (log.f64 y) z)) (pow.f64 (cbrt.f64 (fma.f64 x (log.f64 y) z)) 2)) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","fresh",0.42003642583195644],["(+.f64 (+.f64 (+.f64 (+.f64 (pow.f64 (cbrt.f64 (fma.f64 x (log.f64 y) z)) 3) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","fresh",0.4314614746741666],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (pow.f64 (sqrt.f64 (*.f64 x (log.f64 y))) 2) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","fresh",30.098320019536885]],"compiler":[[53,38],[41,29],[32,23],[48,32],[39,28],[36,24],[38,23],[31,22],[32,23],[53,38],[48,32],[39,28],[36,24],[38,23],[31,22],[32,23]],"count":[[143,9]],"kept":[{"done":[1,1],"fresh":[6,4],"new":[135,3],"picked":[1,1]}],"min-error":[0.01953125],"time":41.734130859375,"type":"prune"},{"compiler":[[224,101]],"locations":[["(*.f64 (*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))",0.32259750976844204,true],["(*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))))",0.391288769536884,true],["(*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))",0.4030075195368841,true],["(*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) (cbrt.f64 (+.f64 b -1/2)))",0.43587875976844204,true]],"time":42.808837890625,"type":"localize"},{"count":[[4,80]],"series":[["(*.f64 (*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))","c","-inf",0.18115234375],["(*.f64 (*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))","c","inf",0.171142578125],["(*.f64 (*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))","c","0",0.27490234375],["(*.f64 (*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))","b","-inf",0.173095703125],["(*.f64 (*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))","b","inf",0.172119140625],["(*.f64 (*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))","b","0",0.23291015625],["(*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))))","c","-inf",1.2119140625],["(*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))))","c","inf",1.162109375],["(*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))))","c","0",1.43603515625],["(*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))))","b","-inf",0.43505859375],["(*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))))","b","inf",0.263916015625],["(*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))))","b","0",1.365966796875],["(*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))","b","-inf",0.266845703125],["(*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))","b","inf",0.22509765625],["(*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))","b","0",1.035888671875],["(*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))","c","-inf",1.625],["(*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))","c","inf",0.88720703125],["(*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))","c","0",1.18896484375],["(*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) (cbrt.f64 (+.f64 b -1/2)))","c","-inf",1.088134765625],["(*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) (cbrt.f64 (+.f64 b -1/2)))","c","inf",1.0400390625],["(*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) (cbrt.f64 (+.f64 b -1/2)))","c","0",0.971923828125],["(*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) (cbrt.f64 (+.f64 b -1/2)))","b","-inf",0.27099609375],["(*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) (cbrt.f64 (+.f64 b -1/2)))","b","inf",0.2529296875],["(*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) (cbrt.f64 (+.f64 b -1/2)))","b","0",0.7490234375]],"time":17.1240234375,"type":"series"},{"count":[[4,94]],"egraph":[[2,3222,55,0.027282999],[1,286,57,0.004712832],[0,14,81,0.000351416]],"inputs":[["(*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) (cbrt.f64 (+.f64 b -1/2)))","(*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))","(*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))))","(*.f64 (*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 b -1/2) (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) (pow.f64 (+.f64 b -1/2) 1/6)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)) 1/6) (cbrt.f64 (+.f64 b -1/2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)) 1/6)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)) (pow.f64 (+.f64 b -1/2) 2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 b -1/2) 2) (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (+.f64 b -1/2) (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log.f64 (pow.f64 (exp.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (log.f64 c)) 2)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (+.f64 b -1/2) 1/6) (cbrt.f64 (log.f64 c))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 b -1/2) (pow.f64 (log.f64 c) 2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 4) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 3) 2/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 2) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 4/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1/6) 4)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (+.f64 b -1/2) (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b (log.f64 c)) (*.f64 -1/2 (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (log.f64 c)) (*.f64 b (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 c) b) (*.f64 (log.f64 c) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 c) -1/2) (*.f64 (log.f64 c) b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 c (+.f64 b -1/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 c (+.f64 b -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 c (+.f64 b -1/2)))) (log.f64 (sqrt.f64 (pow.f64 c (+.f64 b -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1/8 (pow.f64 b 3)) (log.f64 c)) (-.f64 (fma.f64 b b 1/4) (*.f64 b -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 b b -1/4) (log.f64 c)) (+.f64 b 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log.f64 c) (+.f64 -1/8 (pow.f64 b 3))) (-.f64 (fma.f64 b b 1/4) (*.f64 b -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log.f64 c) (fma.f64 b b -1/4)) (+.f64 b 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 1/6) 6)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 c (+.f64 b -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 c (+.f64 b -1/2)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 c (+.f64 b -1/2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b (log.f64 c) (*.f64 -1/2 (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (log.f64 c) (*.f64 b (log.f64 c)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 c) b (*.f64 (log.f64 c) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 c) -1/2 (*.f64 (log.f64 c) b))))))"]],"rules":[["egg-rr",32],["egg-rr",22],["egg-rr",19],["egg-rr",21]],"stop":[["node limit",1]],"time":53.635986328125,"type":"rewrite"},{"count":[[174,135]],"egraph":[[3,4798,1629,0.023353124],[2,1389,1630,0.010317666],[1,450,1647,0.003195583],[0,155,1906,0.000831666]],"inputs":[["(*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3))","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b) (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)))","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b) (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)))","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b) (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b)","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b)","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (-.f64 b 1/2))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (-.f64 b 1/2))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (-.f64 b 1/2))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (-.f64 b 1/2))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3))","(*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) 1) 1/3) (-.f64 b 1/2))","(*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) 1) 1/3) (-.f64 b 1/2))","(*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) 1) 1/3) (-.f64 b 1/2))","(*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) 1) 1/3) (-.f64 b 1/2))","(pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (-.f64 b 1/2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (-.f64 b 1/2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (-.f64 b 1/2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (-.f64 b 1/2)) 1/3)","(pow.f64 (*.f64 (-.f64 b 1/2) (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3)","(pow.f64 (*.f64 (-.f64 b 1/2) (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3)","(pow.f64 (*.f64 (-.f64 b 1/2) (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3)","(pow.f64 (*.f64 (-.f64 b 1/2) (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (-.f64 b 1/2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (-.f64 b 1/2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (-.f64 b 1/2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (-.f64 b 1/2)) 1/3)","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (cbrt.f64 -1/2))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) 1/3) b))) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (cbrt.f64 -1/2)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) 1/3) b))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 22) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7)) 1/3) (pow.f64 b 2)))) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (cbrt.f64 -1/2))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) 1/3) b))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 c) 4)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) 1) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/3) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) (pow.f64 (pow.f64 1 4) 1/9))))) (pow.f64 b 3)) (pow.f64 (cbrt.f64 -1/2) 2)))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 22) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7)) 1/3) (pow.f64 b 2)))) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (cbrt.f64 -1/2)))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (cbrt.f64 1/4))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3) b))) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (cbrt.f64 1/4)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3) b))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 c) 4)) 1/3) (/.f64 (*.f64 (pow.f64 b 2) (-.f64 (pow.f64 (log.f64 c) 2) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 34) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3))))) (pow.f64 (cbrt.f64 1/4) 2)))) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (cbrt.f64 1/4))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3) b))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 c) 4)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) 1) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 8) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 5)) 1/3) (-.f64 (pow.f64 (log.f64 c) 2) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 34) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3)))))))) (pow.f64 b 3)) (pow.f64 (cbrt.f64 1/4) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 c) 4)) 1/3) (/.f64 (*.f64 (pow.f64 b 2) (-.f64 (pow.f64 (log.f64 c) 2) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 34) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3))))) (pow.f64 (cbrt.f64 1/4) 2)))) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (cbrt.f64 1/4)))))","(pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (pow.f64 (log.f64 c) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (pow.f64 (log.f64 c) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (pow.f64 (log.f64 c) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (pow.f64 (log.f64 c) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(*.f64 -1/2 (log.f64 c))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) b)","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) b)","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(*.f64 (-.f64 b 1/2) (log.f64 c))","(*.f64 (-.f64 b 1/2) (log.f64 c))","(*.f64 (-.f64 b 1/2) (log.f64 c))","(*.f64 (-.f64 b 1/2) (log.f64 c))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3))","(*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2)))","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b) (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b) (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(+.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b) (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b)","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b)","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b)","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(+.f64 (*.f64 -1/2 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) b))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (-.f64 b 1/2))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (-.f64 b 1/2))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (-.f64 b 1/2))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (-.f64 b 1/2))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 1 (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) 1) 1/3) (-.f64 b 1/2))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) 1) 1/3) (-.f64 b 1/2))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) 1) 1/3) (-.f64 b 1/2))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(*.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) 1) 1/3) (-.f64 b 1/2))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) b (*.f64 -1/2 (cbrt.f64 (pow.f64 (log.f64 c) 2))))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (+.f64 -1/2 b))","(pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (-.f64 b 1/2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 -1/2 b)))","(pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (-.f64 b 1/2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 -1/2 b)))","(pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (-.f64 b 1/2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 -1/2 b)))","(pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) (-.f64 b 1/2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 -1/2 b)))","(pow.f64 (*.f64 (-.f64 b 1/2) (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 -1/2 b)))","(pow.f64 (*.f64 (-.f64 b 1/2) (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 -1/2 b)))","(pow.f64 (*.f64 (-.f64 b 1/2) (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 -1/2 b)))","(pow.f64 (*.f64 (-.f64 b 1/2) (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 -1/2 b)))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (-.f64 b 1/2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 -1/2 b)))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (-.f64 b 1/2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 -1/2 b)))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (-.f64 b 1/2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 -1/2 b)))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (-.f64 b 1/2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 -1/2 b)))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (cbrt.f64 -1/2))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 -1/2))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) 1/3) b))) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (cbrt.f64 -1/2)))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (*.f64 b (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 -1/2)))","(fma.f64 1/3 (*.f64 b (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 -1/2)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) 1/3) b))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 22) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7)) 1/3) (pow.f64 b 2)))) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (cbrt.f64 -1/2))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (*.f64 b (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))) (fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 22) 1/18) (pow.f64 (pow.f64 (log.f64 c) 22) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7))) (*.f64 b b))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 -1/2))))","(fma.f64 (*.f64 (*.f64 1/3 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (*.f64 b (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)))) (fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 -1/2) (*.f64 (*.f64 b (*.f64 b (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7))))) (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 22) 1/18) (pow.f64 (pow.f64 (log.f64 c) 22) 1/18))))))","(fma.f64 1/3 (*.f64 b (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))) (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7))) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 22) 1/18) (*.f64 -1/9 (pow.f64 (pow.f64 (log.f64 c) 22) 1/18)))) (*.f64 b b) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 -1/2))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) 1/3) b))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 c) 4)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) 1) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/3) (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) (pow.f64 (pow.f64 1 4) 1/9))))) (pow.f64 b 3)) (pow.f64 (cbrt.f64 -1/2) 2)))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 22) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7)) 1/3) (pow.f64 b 2)))) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (cbrt.f64 -1/2)))))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (*.f64 b (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (log.f64 c) 4))) (/.f64 (fma.f64 1/27 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) (cbrt.f64 (pow.f64 (log.f64 c) 14))) (*.f64 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2)) (cbrt.f64 (pow.f64 (log.f64 c) 14))) -2/9)) (/.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 b 3)))) (fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 22) 1/18) (pow.f64 (pow.f64 (log.f64 c) 22) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7))) (*.f64 b b))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 -1/2)))))","(fma.f64 1/3 (*.f64 b (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (log.f64 c) 4))) (/.f64 (*.f64 (/.f64 (cbrt.f64 (pow.f64 (log.f64 c) 14)) (pow.f64 (cbrt.f64 -1/2) 2)) -5/27) (/.f64 (pow.f64 (cbrt.f64 -1/2) 2) (pow.f64 b 3)))) (fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 -1/2) (*.f64 (*.f64 b (*.f64 b (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7))))) (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 22) 1/18) (pow.f64 (pow.f64 (log.f64 c) 22) 1/18)))))))","(fma.f64 1/3 (*.f64 b (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))) (fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 -1/2) (fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 22) 1/18) (pow.f64 (pow.f64 (log.f64 c) 22) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7))) (*.f64 b b))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (log.f64 c) 4))) (*.f64 -1/3 (*.f64 (/.f64 (pow.f64 b 3) (pow.f64 (cbrt.f64 -1/2) 2)) (*.f64 (/.f64 (cbrt.f64 (pow.f64 (log.f64 c) 14)) (pow.f64 (cbrt.f64 -1/2) 2)) -5/27)))))))","(fma.f64 1/3 (*.f64 b (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 2))))) (fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 -1/2) (*.f64 (*.f64 b b) (+.f64 (/.f64 (*.f64 (*.f64 (/.f64 (cbrt.f64 (pow.f64 (log.f64 c) 14)) (pow.f64 (cbrt.f64 -1/2) 2)) -5/27) (*.f64 -1/3 (cbrt.f64 (/.f64 1 (pow.f64 (log.f64 c) 4))))) (/.f64 (pow.f64 (cbrt.f64 -1/2) 2) b)) (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 22) 1/18) (pow.f64 (pow.f64 (log.f64 c) 22) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1/2) 7)))))))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (cbrt.f64 1/4))","(*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 1/4))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3) b))) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (cbrt.f64 1/4)))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (*.f64 b (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2))))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 1/4)))","(fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 1/4) (*.f64 (*.f64 b (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)))) (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) -1/3)))","(fma.f64 -1/3 (*.f64 b (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2))))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 1/4)))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3) b))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 c) 4)) 1/3) (/.f64 (*.f64 (pow.f64 b 2) (-.f64 (pow.f64 (log.f64 c) 2) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 34) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3))))) (pow.f64 (cbrt.f64 1/4) 2)))) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (cbrt.f64 1/4))))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (*.f64 b (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2))))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (log.f64 c) 4))) (/.f64 (*.f64 b b) (/.f64 (pow.f64 (cbrt.f64 1/4) 2) (+.f64 (pow.f64 (log.f64 c) 2) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 34) 1/18) (pow.f64 (pow.f64 (log.f64 c) 34) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 1/4))))))))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 1/4))))","(fma.f64 -1/3 (*.f64 b (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2))))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (log.f64 c) 4))) (*.f64 (/.f64 (*.f64 b b) (pow.f64 (cbrt.f64 1/4) 2)) (+.f64 (pow.f64 (log.f64 c) 2) (*.f64 (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 34) 1/18) (pow.f64 (pow.f64 (log.f64 c) 34) 1/18))) (cbrt.f64 (/.f64 1 (cbrt.f64 1/4))))))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 1/4))))","(fma.f64 (*.f64 (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 34) 1/18) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/4))) (pow.f64 (pow.f64 (log.f64 c) 34) 1/18))) (pow.f64 (log.f64 c) 2)) (/.f64 (*.f64 b b) (pow.f64 (cbrt.f64 1/4) 2))) (*.f64 1/3 (cbrt.f64 (/.f64 1 (pow.f64 (log.f64 c) 4)))) (fma.f64 -1/3 (*.f64 b (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2))))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 1/4))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)) 1/3) b))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 c) 4)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 14) 1) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2)))) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 8) (pow.f64 1 4)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 5)) 1/3) (-.f64 (pow.f64 (log.f64 c) 2) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 34) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3)))))))) (pow.f64 b 3)) (pow.f64 (cbrt.f64 1/4) 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (log.f64 c) 4)) 1/3) (/.f64 (*.f64 (pow.f64 b 2) (-.f64 (pow.f64 (log.f64 c) 2) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 34) (pow.f64 1 4)) 1/9) (pow.f64 (/.f64 1 (cbrt.f64 1/4)) 1/3))))) (pow.f64 (cbrt.f64 1/4) 2)))) (*.f64 (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3) (cbrt.f64 1/4)))))","(fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (*.f64 b (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2))))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (log.f64 c) 4))) (/.f64 (fma.f64 -1/27 (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 14)) (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2))) (*.f64 -2/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 8) 1/18) (pow.f64 (pow.f64 (log.f64 c) 8) 1/18)) (*.f64 (+.f64 (pow.f64 (log.f64 c) 2) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 34) 1/18) (pow.f64 (pow.f64 (log.f64 c) 34) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 1/4)))))) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 5))))))) (/.f64 (pow.f64 (cbrt.f64 1/4) 2) (pow.f64 b 3)))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (log.f64 c) 4))) (/.f64 (*.f64 b b) (/.f64 (pow.f64 (cbrt.f64 1/4) 2) (+.f64 (pow.f64 (log.f64 c) 2) (*.f64 -1/3 (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 34) 1/18) (pow.f64 (pow.f64 (log.f64 c) 34) 1/18)) (cbrt.f64 (/.f64 1 (cbrt.f64 1/4))))))))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 1/4)))))","(fma.f64 -1/3 (*.f64 b (*.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2))))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (log.f64 c) 4))) (/.f64 (fma.f64 -1/27 (/.f64 (cbrt.f64 (pow.f64 (log.f64 c) 14)) (pow.f64 (cbrt.f64 1/4) 2)) (*.f64 (*.f64 (+.f64 (pow.f64 (log.f64 c) 2) (*.f64 (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 34) 1/18) (pow.f64 (pow.f64 (log.f64 c) 34) 1/18))) (cbrt.f64 (/.f64 1 (cbrt.f64 1/4))))) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 5)))) (*.f64 -2/3 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 8) 1/18) (pow.f64 (pow.f64 (log.f64 c) 8) 1/18))))) (/.f64 (pow.f64 (cbrt.f64 1/4) 2) (pow.f64 b 3)))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (log.f64 c) 4))) (*.f64 (/.f64 (*.f64 b b) (pow.f64 (cbrt.f64 1/4) 2)) (+.f64 (pow.f64 (log.f64 c) 2) (*.f64 (*.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 34) 1/18) (pow.f64 (pow.f64 (log.f64 c) 34) 1/18))) (cbrt.f64 (/.f64 1 (cbrt.f64 1/4))))))) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 1/4)))))","(fma.f64 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 14) 1/18) (pow.f64 (pow.f64 (log.f64 c) 14) 1/18)) (*.f64 -1/3 (*.f64 b (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 2))))) (fma.f64 (cbrt.f64 (pow.f64 (log.f64 c) 2)) (cbrt.f64 1/4) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (log.f64 c) 4))) (+.f64 (*.f64 1/3 (*.f64 (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 34) 1/18) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/4))) (pow.f64 (pow.f64 (log.f64 c) 34) 1/18))) (pow.f64 (log.f64 c) 2)) (/.f64 (*.f64 b b) (pow.f64 (cbrt.f64 1/4) 2)))) (*.f64 -1/3 (*.f64 (/.f64 (pow.f64 b 3) (pow.f64 (cbrt.f64 1/4) 2)) (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1/4) 5))) (*.f64 (pow.f64 (pow.f64 (log.f64 c) 8) 1/18) (*.f64 -2/3 (pow.f64 (pow.f64 (log.f64 c) 8) 1/18)))) (fma.f64 -1/3 (*.f64 (pow.f64 (pow.f64 (log.f64 c) 34) 1/18) (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1/4))) (pow.f64 (pow.f64 (log.f64 c) 34) 1/18))) (pow.f64 (log.f64 c) 2)) (*.f64 (cbrt.f64 (pow.f64 (log.f64 c) 14)) (/.f64 -1/27 (pow.f64 (cbrt.f64 1/4) 2))))))))))","(pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (pow.f64 (log.f64 c) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (pow.f64 (log.f64 c) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (pow.f64 (log.f64 c) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (pow.f64 (log.f64 c) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(pow.f64 (*.f64 (pow.f64 (-.f64 b 1/2) 2) (pow.f64 (log.f64 (/.f64 1 c)) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(pow.f64 (*.f64 (pow.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) 2) (pow.f64 (-.f64 b 1/2) 2)) 1/3)","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 b -1/2) 2)))","(cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (pow.f64 (+.f64 -1/2 b) 2)))","(*.f64 -1/2 (log.f64 c))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (log.f64 c) b)","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (log.f64 c) b)","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(+.f64 (*.f64 (log.f64 c) b) (*.f64 -1/2 (log.f64 c)))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (log.f64 c))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (log.f64 c))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (log.f64 c))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (-.f64 b 1/2) (log.f64 c))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 -1 (*.f64 (-.f64 b 1/2) (log.f64 (/.f64 1 c))))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 c)))) (-.f64 b 1/2))","(fma.f64 (log.f64 c) b (*.f64 -1/2 (log.f64 c)))","(*.f64 (log.f64 c) (+.f64 -1/2 b))"]],"stop":[["node limit",1]],"time":51.9150390625,"type":"simplify"},{"compiler":[[5313,2586]],"time":43.552978515625,"type":"eval"},{"alts":[["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))) (*.f64 y i))","done",0.14195253907376806],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))) 3)) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))) (*.f64 y i))","fresh",0.18949130861065208],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 3)) (*.f64 y i))","done",0.15757753907376806],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))) (*.f64 y i))","done",0.1286125488422101],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (+.f64 b -1/2) (pow.f64 (cbrt.f64 (log.f64 c)) 2)) (cbrt.f64 (log.f64 c)))) (*.f64 y i))","fresh",0.1614837890737681],["(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 (cbrt.f64 (fma.f64 x (log.f64 y) z)) (pow.f64 (cbrt.f64 (fma.f64 x (log.f64 y) z)) 2)) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","fresh",0.42003642583195644],["(+.f64 (+.f64 (+.f64 (+.f64 (pow.f64 (cbrt.f64 (fma.f64 x (log.f64 y) z)) 3) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","fresh",0.4314614746741666],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 6) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))) (*.f64 y i))","fresh",0.2213414304626117],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (pow.f64 (sqrt.f64 (*.f64 x (log.f64 y))) 2) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","fresh",30.098320019536885]],"compiler":[[48,32],[49,36],[32,23],[41,29],[36,24],[38,23],[31,22],[42,30],[32,23]],"count":[[144,9]],"kept":[{"done":[2,2],"fresh":[6,4],"new":[135,2],"picked":[1,1]}],"min-error":[0.01953125],"time":38.9951171875,"type":"prune"},{"accuracy":[0.09765625],"baseline":[0.09765625],"branch":[["x",0.09765625,1],["y",0.09765625,1],["z",0.09765625,1],["t",0.09765625,1],["a",0.09765625,1],["b",0.09765625,1],["c",0.09765625,1],["i",0.09765625,1],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))",0.09765625,1],["(*.f64 (-.f64 b 1/2) (log.f64 c))",0.09765625,1],["(*.f64 (-.f64 b 1/2) (log.f64 c))",0.09765625,1],["(-.f64 b 1/2)",0.09765625,1],["(-.f64 b 1/2)",0.09765625,1],["(log.f64 c)",0.09765625,1]],"compiler":[[9,8],[9,8],[9,8],[9,8],[9,8],[9,8],[9,8],[9,8],[29,20],[14,12],[14,12],[11,10],[11,10],[10,9],[533,220]],"count":[[18,1]],"inputs":[["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (pow.f64 (log.f64 c) 2) (+.f64 b -1/2)))) 3)) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 6) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c)))) 4)) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (*.f64 (cbrt.f64 (+.f64 b -1/2)) (*.f64 (cbrt.f64 (log.f64 c)) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))))) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (-.f64 b 1/2) (pow.f64 (*.f64 (pow.f64 (log.f64 c) 2) 1) 1/3)) (cbrt.f64 (log.f64 c)))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (+.f64 b -1/2))) (cbrt.f64 (log.f64 c)))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (log.f64 c) (sqrt.f64 (+.f64 b -1/2))) (sqrt.f64 (+.f64 b -1/2)))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (*.f64 (+.f64 b -1/2) (pow.f64 (cbrt.f64 (log.f64 c)) 2)) (cbrt.f64 (log.f64 c)))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (sqrt.f64 (log.f64 c)) (*.f64 (sqrt.f64 (log.f64 c)) (+.f64 b -1/2)))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (pow.f64 (sqrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2)) (*.f64 y i))","(+.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 2) (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) (+.f64 (fma.f64 x (log.f64 y) z) (+.f64 t a))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (/.f64 (*.f64 (fma.f64 b b -1/4) (log.f64 c)) (-.f64 b -1/2))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (*.f64 (cbrt.f64 (fma.f64 x (log.f64 y) z)) (pow.f64 (cbrt.f64 (fma.f64 x (log.f64 y) z)) 2)) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (pow.f64 (cbrt.f64 (fma.f64 x (log.f64 y) z)) 3) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (pow.f64 (cbrt.f64 (*.f64 (+.f64 b -1/2) (log.f64 c))) 3)) (*.f64 y i))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (pow.f64 (sqrt.f64 (*.f64 x (log.f64 y))) 2) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))","(+.f64 t (+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 x (log.f64 y) (fma.f64 y i z))))","(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))"]],"link":["."],"name":["Numeric.SpecFunctions:logBeta from math-functions-0.1.5.2, B"],"oracle":[62.52078878162065],"outputs":[["(+.f64 t (+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 x (log.f64 y) (fma.f64 y i z))))"]],"time":97.556884765625,"times":[["x",6.43701171875],["y",6.427978515625],["z",6.489990234375],["t",6.4619140625],["a",6.572998046875],["b",6.492919921875],["c",6.486083984375],["i",6.578125],["(+.f64 (+.f64 (+.f64 (+.f64 (+.f64 (*.f64 x (log.f64 y)) z) t) a) (*.f64 (-.f64 b 1/2) (log.f64 c))) (*.f64 y i))",6.7890625],["(*.f64 (-.f64 b 1/2) (log.f64 c))",6.4638671875],["(*.f64 (-.f64 b 1/2) (log.f64 c))",6.652099609375],["(-.f64 b 1/2)",4.423828125],["(-.f64 b 1/2)",4.316162109375],["(log.f64 c)",6.691162109375]],"type":"regimes"},{"compiler":[[26,17]],"egraph":[[1,21,26,4.3542e-5],[0,18,26,2.5042e-5]],"inputs":[["(+.f64 t (+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 x (log.f64 y) (fma.f64 y i z))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 t (+.f64 (fma.f64 (+.f64 b -1/2) (log.f64 c) a) (fma.f64 x (log.f64 y) (fma.f64 y i z))))"]],"stop":[["fuel",1],["saturated",1]],"time":8.427001953125,"type":"simplify"},{"time":0.01318359375,"type":"soundness"},{"compiler":[[26,17],[26,17],[26,17]],"remove-preprocessing":[[]],"time":25.5029296875,"type":"end"}]