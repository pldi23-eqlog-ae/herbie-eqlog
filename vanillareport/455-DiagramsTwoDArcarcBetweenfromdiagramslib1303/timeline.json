[{"compiler":[[22,13]],"method":["search"],"sampling":[[12,0.9068286198889837,0.09219505602959543,0.0009763240814208984],[11,0.8770725436042994,0.12195113231427968,0.0009763240814208984],[10,0.8175603910349309,0.18146328488364816,0.0009763240814208984],[9,0.7609750656411052,0.23804861027747393,0.0009763240814208984],[8,0.6243897974491119,0.37463387846946716,0.0009763240814208984],[7,0.49951183795928955,0.49951183795928955,0.0009763240814208984],[6,0.12487795948982239,0.8741457164287567,0.0009763240814208984],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":34.863037109375,"type":"analyze"},{"outcomes":[["body",256,"valid",401.657958984375,8256]],"time":409.2978515625,"type":"sample"},{"compiler":[[21,12]],"egraph":[[0,2,2,3.75e-6],[10,7590,48,0.063214916],[9,5951,48,0.051877415999999996],[8,4395,48,0.036507458],[7,2508,48,0.022671708],[6,1508,48,0.012031625],[5,890,48,0.006727416999999999],[4,462,48,0.003180459],[3,217,48,0.0014334590000000002],[2,102,48,0.00065875],[1,44,48,0.000287834],[0,16,52,8.9209e-5]],"inputs":[["0","1"],["(/.f64 (-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)) (+.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)))","(/.f64 (-.f64 (*.f64 y y) (*.f64 (*.f64 x 4) x)) (+.f64 (*.f64 y y) (*.f64 (*.f64 x 4) x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)) (+.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)))","(/.f64 (-.f64 (*.f64 x x) (*.f64 y (*.f64 y 4))) (fma.f64 x x (*.f64 y (*.f64 y 4))))","(/.f64 (fma.f64 x x (*.f64 y (*.f64 y -4))) (fma.f64 x x (*.f64 y (*.f64 y 4))))","(/.f64 (fma.f64 (*.f64 y y) -4 (*.f64 x x)) (fma.f64 4 (*.f64 y y) (*.f64 x x)))","(/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4))))","(/.f64 (-.f64 (*.f64 y y) (*.f64 (*.f64 x 4) x)) (+.f64 (*.f64 y y) (*.f64 (*.f64 x 4) x)))","(/.f64 (fma.f64 y y (neg.f64 (*.f64 x (*.f64 x 4)))) (fma.f64 y y (*.f64 x (*.f64 x 4))))","(/.f64 (fma.f64 y y (*.f64 x (*.f64 x -4))) (fma.f64 x (*.f64 x 4) (*.f64 y y)))","(/.f64 (fma.f64 x (*.f64 x -4) (*.f64 y y)) (fma.f64 x (*.f64 x 4) (*.f64 y y)))","(/.f64 (fma.f64 x (*.f64 x -4) (*.f64 y y)) (fma.f64 (*.f64 x x) 4 (*.f64 y y)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":91.2470703125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[10,7808,24,0.041577251],[9,3752,24,0.031547959],[8,1603,24,0.016486042],[7,987,24,0.009692792],[6,724,24,0.005802417],[5,458,24,0.0034866669999999997],[4,240,24,0.001811584],[3,114,24,0.000908042],[2,56,24,0.000421542],[1,24,24,0.00018266700000000002],[0,10,26,5.9875e-5]],"inputs":[["(/.f64 (-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)) (+.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)) (+.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)))","(/.f64 (-.f64 (*.f64 x x) (*.f64 y (*.f64 y 4))) (fma.f64 x x (*.f64 y (*.f64 y 4))))","(/.f64 (fma.f64 x x (*.f64 y (*.f64 y -4))) (fma.f64 x x (*.f64 y (*.f64 y 4))))","(/.f64 (fma.f64 x x (*.f64 y (*.f64 y -4))) (fma.f64 4 (*.f64 y y) (*.f64 x x)))","(/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4))))"]],"stop":[["node limit",1]],"time":54.053955078125,"type":"simplify"},{"compiler":[[38,20]],"time":0.469970703125,"type":"eval"},{"alts":[["(/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4))))","next",32.7578125]],"compiler":[[19,11],[19,11]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[32.7578125],"time":0.97607421875,"type":"prune"},{"compiler":[[53,27]],"locations":[["(fma.f64 y (*.f64 y -4) (*.f64 x x))",1.7499807332389217,true],["(/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4))))",32.105880768775066,true]],"time":13.381103515625,"type":"localize"},{"count":[[2,48]],"series":[["(fma.f64 y (*.f64 y -4) (*.f64 x x))","x","-inf",0.19189453125],["(fma.f64 y (*.f64 y -4) (*.f64 x x))","x","inf",0.233154296875],["(fma.f64 y (*.f64 y -4) (*.f64 x x))","x","0",0.3271484375],["(fma.f64 y (*.f64 y -4) (*.f64 x x))","y","-inf",0.3818359375],["(fma.f64 y (*.f64 y -4) (*.f64 x x))","y","inf",0.380126953125],["(fma.f64 y (*.f64 y -4) (*.f64 x x))","y","0",0.51904296875],["(/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4))))","x","-inf",0.364990234375],["(/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4))))","x","inf",0.550048828125],["(/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4))))","x","0",0.536865234375],["(/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4))))","y","-inf",0.401123046875],["(/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4))))","y","inf",0.723876953125],["(/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4))))","y","0",0.738037109375]],"time":5.552978515625,"type":"series"},{"count":[[2,55]],"egraph":[[2,3121,29,0.022127584],[1,247,29,0.004189834],[0,12,35,0.000347959]],"inputs":[["(/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4))))","(fma.f64 y (*.f64 y -4) (*.f64 x x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2) (/.f64 1 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2)) (pow.f64 (cbrt.f64 (pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2)) 2) (cbrt.f64 (pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)) 2) (*.f64 (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)) (/.f64 1 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 x (*.f64 y 2)) (*.f64 (hypot.f64 x (*.f64 y 2)) (/.f64 1 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)) (/.f64 1 (neg.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)) (pow.f64 (hypot.f64 x (*.f64 y 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)) 2) (hypot.f64 x (*.f64 y 2))) (/.f64 (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)) (hypot.f64 x (*.f64 y 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)) 2) 1) (/.f64 (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)) (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) 1) (/.f64 (hypot.f64 x (*.f64 y 2)) (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)) 2)) (/.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2) (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)) 2) (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)) 2)) (cbrt.f64 (pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)) 2)) (/.f64 (hypot.f64 x (*.f64 y 2)) (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (hypot.f64 x (*.f64 y 2))) (/.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2) (hypot.f64 x (*.f64 y 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2) (neg.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2) 3) (pow.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (pow.f64 (/.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2))) 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x x) (*.f64 y (*.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)) (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)) 2) (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 x (*.f64 y 2)) (hypot.f64 x (*.f64 y 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 y (*.f64 y 4)) 3) (pow.f64 (*.f64 x x) 3)) (+.f64 (pow.f64 (*.f64 y (*.f64 y 4)) 2) (-.f64 (pow.f64 x 4) (*.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x x) 3) (pow.f64 (*.f64 y (*.f64 y 4)) 3)) (+.f64 (pow.f64 x 4) (-.f64 (pow.f64 (*.f64 y (*.f64 y 4)) 2) (*.f64 (*.f64 x x) (*.f64 y (*.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 y (*.f64 y 4)) 2) (pow.f64 x 4)) (-.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x 4) (pow.f64 (*.f64 y (*.f64 y 4)) 2)) (-.f64 (*.f64 x x) (*.f64 y (*.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 x (*.f64 y 2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (pow.f64 (hypot.f64 x (*.f64 y 2)) 2)))))))"]],"rules":[["egg-rr",23],["egg-rr",32]],"stop":[["node limit",1]],"time":45.15185546875,"type":"rewrite"},{"count":[[103,81]],"egraph":[[3,4974,723,0.020861459],[2,828,723,0.008163667],[1,253,774,0.001784209],[0,87,951,0.000438875]],"inputs":[["1","(+.f64 (*.f64 -8 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) 1)","(+.f64 (*.f64 -8 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (*.f64 -8 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -128 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))","-1","(-.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (+.f64 (*.f64 1/16 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 4)) (pow.f64 y 6))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","-1","(-.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (+.f64 (*.f64 1/16 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 4)) (pow.f64 y 6))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","-1","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(-.f64 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(-.f64 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 1/32 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))) 1)","1","(-.f64 (+.f64 1 (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (+.f64 (*.f64 16 (/.f64 (*.f64 (pow.f64 y 4) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 6))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","1","(-.f64 (+.f64 1 (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (+.f64 (*.f64 16 (/.f64 (*.f64 (pow.f64 y 4) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 6))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(pow.f64 x 2)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(*.f64 -4 (pow.f64 y 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(*.f64 -4 (pow.f64 y 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(*.f64 -4 (pow.f64 y 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(pow.f64 x 2)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 -8 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) 1)","(fma.f64 -8 (/.f64 (*.f64 y y) (*.f64 x x)) 1)","(fma.f64 -8 (*.f64 (/.f64 y x) (/.f64 y x)) 1)","(+.f64 (*.f64 -8 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (fma.f64 -8 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (*.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(fma.f64 -8 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1))","(fma.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 -8 (*.f64 (/.f64 y x) (/.f64 y x)) 1))","(+.f64 (*.f64 -8 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -128 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))","(+.f64 (fma.f64 -8 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (fma.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 -128 (/.f64 (pow.f64 y 6) (pow.f64 x 6)))))","(+.f64 (fma.f64 -8 (*.f64 (/.f64 y x) (/.f64 y x)) 1) (fma.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 -128 (/.f64 (pow.f64 y 6) (pow.f64 x 6)))))","(fma.f64 -8 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 -128 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (fma.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1)))","-1","(-.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (*.f64 1/4 (/.f64 (*.f64 x x) (*.f64 y y))) (fma.f64 -1/4 (/.f64 (*.f64 x x) (*.f64 y y)) 1))","(fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 1/2 -1)","(fma.f64 (*.f64 (/.f64 x (*.f64 y y)) x) 1/2 -1)","(-.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (fma.f64 -1/4 (/.f64 (*.f64 (*.f64 x x) 1/2) (/.f64 (pow.f64 y 4) (*.f64 x x))) (*.f64 1/4 (/.f64 (*.f64 x x) (*.f64 y y)))) (fma.f64 -1/4 (/.f64 (*.f64 x x) (*.f64 y y)) 1))","(fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 x 4) 1/2) (pow.f64 y 4)) (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 1/2 -1))","(fma.f64 (*.f64 (/.f64 x (*.f64 y y)) x) 1/2 (fma.f64 -1/8 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) -1))","(-.f64 (+.f64 (*.f64 1/16 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 4)) (pow.f64 y 6))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (fma.f64 1/16 (/.f64 (*.f64 (*.f64 x x) 1/2) (/.f64 (pow.f64 y 6) (pow.f64 x 4))) (fma.f64 -1/4 (/.f64 (*.f64 (*.f64 x x) 1/2) (/.f64 (pow.f64 y 4) (*.f64 x x))) (*.f64 1/4 (/.f64 (*.f64 x x) (*.f64 y y))))) (fma.f64 -1/4 (/.f64 (*.f64 x x) (*.f64 y y)) 1))","(fma.f64 1/16 (*.f64 (/.f64 (*.f64 (*.f64 x x) 1/2) (pow.f64 y 6)) (pow.f64 x 4)) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 x 4) 1/2) (pow.f64 y 4)) (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 1/2 -1)))","(fma.f64 -1/8 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 (*.f64 (/.f64 x (*.f64 y y)) x) 1/2 (fma.f64 1/32 (/.f64 (pow.f64 x 6) (pow.f64 y 6)) -1)))","-1","(-.f64 (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (*.f64 1/4 (/.f64 (*.f64 x x) (*.f64 y y))) (fma.f64 -1/4 (/.f64 (*.f64 x x) (*.f64 y y)) 1))","(fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 1/2 -1)","(fma.f64 (*.f64 (/.f64 x (*.f64 y y)) x) 1/2 -1)","(-.f64 (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (fma.f64 -1/4 (/.f64 (*.f64 (*.f64 x x) 1/2) (/.f64 (pow.f64 y 4) (*.f64 x x))) (*.f64 1/4 (/.f64 (*.f64 x x) (*.f64 y y)))) (fma.f64 -1/4 (/.f64 (*.f64 x x) (*.f64 y y)) 1))","(fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 x 4) 1/2) (pow.f64 y 4)) (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 1/2 -1))","(fma.f64 (*.f64 (/.f64 x (*.f64 y y)) x) 1/2 (fma.f64 -1/8 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) -1))","(-.f64 (+.f64 (*.f64 1/16 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 4)) (pow.f64 y 6))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 1/4 (pow.f64 x 2)) (*.f64 -1/4 (pow.f64 x 2))) (pow.f64 x 2)) (pow.f64 y 4))) (*.f64 1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1))","(-.f64 (fma.f64 1/16 (/.f64 (*.f64 (*.f64 x x) 1/2) (/.f64 (pow.f64 y 6) (pow.f64 x 4))) (fma.f64 -1/4 (/.f64 (*.f64 (*.f64 x x) 1/2) (/.f64 (pow.f64 y 4) (*.f64 x x))) (*.f64 1/4 (/.f64 (*.f64 x x) (*.f64 y y))))) (fma.f64 -1/4 (/.f64 (*.f64 x x) (*.f64 y y)) 1))","(fma.f64 1/16 (*.f64 (/.f64 (*.f64 (*.f64 x x) 1/2) (pow.f64 y 6)) (pow.f64 x 4)) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 x 4) 1/2) (pow.f64 y 4)) (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 1/2 -1)))","(fma.f64 -1/8 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 (*.f64 (/.f64 x (*.f64 y y)) x) 1/2 (fma.f64 1/32 (/.f64 (pow.f64 x 6) (pow.f64 y 6)) -1)))","-1","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) 1)","(-.f64 (*.f64 1/4 (/.f64 (*.f64 x x) (*.f64 y y))) (fma.f64 -1/4 (/.f64 (*.f64 x x) (*.f64 y y)) 1))","(fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 1/2 -1)","(fma.f64 (*.f64 (/.f64 x (*.f64 y y)) x) 1/2 -1)","(-.f64 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(-.f64 (fma.f64 -1/4 (/.f64 (*.f64 (*.f64 x x) 1/2) (/.f64 (pow.f64 y 4) (*.f64 x x))) (*.f64 1/4 (/.f64 (*.f64 x x) (*.f64 y y)))) (fma.f64 -1/4 (/.f64 (*.f64 x x) (*.f64 y y)) 1))","(fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 x 4) 1/2) (pow.f64 y 4)) (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 1/2 -1))","(fma.f64 (*.f64 (/.f64 x (*.f64 y y)) x) 1/2 (fma.f64 -1/8 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) -1))","(-.f64 (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 1/32 (/.f64 (pow.f64 x 6) (pow.f64 y 6))))) 1)","(-.f64 (fma.f64 1/16 (/.f64 (*.f64 (*.f64 x x) 1/2) (/.f64 (pow.f64 y 6) (pow.f64 x 4))) (fma.f64 -1/4 (/.f64 (*.f64 (*.f64 x x) 1/2) (/.f64 (pow.f64 y 4) (*.f64 x x))) (*.f64 1/4 (/.f64 (*.f64 x x) (*.f64 y y))))) (fma.f64 -1/4 (/.f64 (*.f64 x x) (*.f64 y y)) 1))","(fma.f64 1/16 (*.f64 (/.f64 (*.f64 (*.f64 x x) 1/2) (pow.f64 y 6)) (pow.f64 x 4)) (fma.f64 -1/4 (/.f64 (*.f64 (pow.f64 x 4) 1/2) (pow.f64 y 4)) (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 1/2 -1)))","(fma.f64 -1/8 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (fma.f64 (*.f64 (/.f64 x (*.f64 y y)) x) 1/2 (fma.f64 1/32 (/.f64 (pow.f64 x 6) (pow.f64 y 6)) -1)))","1","(-.f64 (+.f64 1 (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(fma.f64 -8 (/.f64 (*.f64 y y) (*.f64 x x)) 1)","(fma.f64 -8 (*.f64 (/.f64 y x) (/.f64 y x)) 1)","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (fma.f64 -8 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (*.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(fma.f64 -8 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1))","(fma.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 -8 (*.f64 (/.f64 y x) (/.f64 y x)) 1))","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (+.f64 (*.f64 16 (/.f64 (*.f64 (pow.f64 y 4) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 6))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (fma.f64 -8 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (fma.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 -128 (/.f64 (pow.f64 y 6) (pow.f64 x 6)))))","(+.f64 (fma.f64 -8 (*.f64 (/.f64 y x) (/.f64 y x)) 1) (fma.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 -128 (/.f64 (pow.f64 y 6) (pow.f64 x 6)))))","(fma.f64 -8 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 -128 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (fma.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1)))","1","(-.f64 (+.f64 1 (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(fma.f64 -8 (/.f64 (*.f64 y y) (*.f64 x x)) 1)","(fma.f64 -8 (*.f64 (/.f64 y x) (/.f64 y x)) 1)","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (fma.f64 -8 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (*.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(fma.f64 -8 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1))","(fma.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 -8 (*.f64 (/.f64 y x) (/.f64 y x)) 1))","(-.f64 (+.f64 1 (+.f64 (*.f64 -4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 4))) (+.f64 (*.f64 16 (/.f64 (*.f64 (pow.f64 y 4) (-.f64 (*.f64 -4 (pow.f64 y 2)) (*.f64 4 (pow.f64 y 2)))) (pow.f64 x 6))) (*.f64 -4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (fma.f64 -8 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (fma.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 -128 (/.f64 (pow.f64 y 6) (pow.f64 x 6)))))","(+.f64 (fma.f64 -8 (*.f64 (/.f64 y x) (/.f64 y x)) 1) (fma.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 -128 (/.f64 (pow.f64 y 6) (pow.f64 x 6)))))","(fma.f64 -8 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 -128 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (fma.f64 32 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1)))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(fma.f64 (*.f64 y y) -4 (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(fma.f64 (*.f64 y y) -4 (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(fma.f64 (*.f64 y y) -4 (*.f64 x x))","(*.f64 -4 (pow.f64 y 2))","(*.f64 (*.f64 y y) -4)","(*.f64 y (*.f64 y -4))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(fma.f64 (*.f64 y y) -4 (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(fma.f64 (*.f64 y y) -4 (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(fma.f64 (*.f64 y y) -4 (*.f64 x x))","(*.f64 -4 (pow.f64 y 2))","(*.f64 (*.f64 y y) -4)","(*.f64 y (*.f64 y -4))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(fma.f64 (*.f64 y y) -4 (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(fma.f64 (*.f64 y y) -4 (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(fma.f64 (*.f64 y y) -4 (*.f64 x x))","(*.f64 -4 (pow.f64 y 2))","(*.f64 (*.f64 y y) -4)","(*.f64 y (*.f64 y -4))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(fma.f64 (*.f64 y y) -4 (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(fma.f64 (*.f64 y y) -4 (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(fma.f64 (*.f64 y y) -4 (*.f64 x x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(fma.f64 (*.f64 y y) -4 (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(fma.f64 (*.f64 y y) -4 (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(fma.f64 (*.f64 y y) -4 (*.f64 x x))","(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(fma.f64 (*.f64 y y) -4 (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(fma.f64 (*.f64 y y) -4 (*.f64 x x))","(+.f64 (*.f64 -4 (pow.f64 y 2)) (pow.f64 x 2))","(fma.f64 -4 (*.f64 y y) (*.f64 x x))","(fma.f64 (*.f64 y y) -4 (*.f64 x x))"]],"stop":[["node limit",1]],"time":40.18798828125,"type":"simplify"},{"compiler":[[1763,1256]],"time":22.18505859375,"type":"eval"},{"alts":[["(fma.f64 -8 (*.f64 (/.f64 y x) (/.f64 y x)) 1)","next",27.846213841125394],["-1","fresh",35.538296261390315],["(/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4))))","done",32.7578125]],"compiler":[[12,7],[3,3],[19,11],[12,7],[3,3]],"count":[[82,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[81,2],"picked":[1,1]}],"min-error":[0.1778677730883062],"time":11.551025390625,"type":"prune"},{"compiler":[[26,9]],"locations":[["(*.f64 (/.f64 y x) (/.f64 y x))",0.22560502930532605,true]],"time":4.50390625,"type":"localize"},{"count":[[1,24]],"series":[["(*.f64 (/.f64 y x) (/.f64 y x))","x","-inf",0.159912109375],["(*.f64 (/.f64 y x) (/.f64 y x))","x","inf",0.343994140625],["(*.f64 (/.f64 y x) (/.f64 y x))","x","0",0.48681640625],["(*.f64 (/.f64 y x) (/.f64 y x))","y","-inf",0.18603515625],["(*.f64 (/.f64 y x) (/.f64 y x))","y","inf",0.489013671875],["(*.f64 (/.f64 y x) (/.f64 y x))","y","0",0.571044921875]],"time":2.315185546875,"type":"series"},{"count":[[1,33]],"egraph":[[2,1538,7,0.015646167],[1,109,7,0.0020093339999999998],[0,5,7,0.000132792]],"inputs":[["(*.f64 (/.f64 y x) (/.f64 y x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (*.f64 x (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (*.f64 (/.f64 x y) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (/.f64 (*.f64 x x) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (/.f64 x (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y x) (/.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 x y) (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 x x) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 x (*.f64 y (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y y) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (*.f64 (/.f64 x y) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 y x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (neg.f64 y)) (*.f64 (neg.f64 x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y y)) (neg.f64 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y (/.f64 y x))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) y) (*.f64 (neg.f64 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) 1) (*.f64 (neg.f64 x) (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (neg.f64 y)) (*.f64 x (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (/.f64 y x)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (/.f64 y x)) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (/.f64 y x)) (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (/.f64 y x)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y x) (neg.f64 y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y x) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (/.f64 y x) 2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 y x) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (/.f64 y x) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 y x)) 2))))))"]],"rules":[["egg-rr",33]],"stop":[["node limit",1]],"time":33.346923828125,"type":"rewrite"},{"count":[[57,35]],"egraph":[[13,7991,240,0.07577137499999999],[12,7312,240,0.06539804099999999],[11,6658,240,0.053143540999999996],[10,4762,240,0.040260331999999996],[9,4429,240,0.028880666],[8,4185,240,0.022832416],[7,3967,240,0.017442666000000003],[6,3783,240,0.012690249],[5,2528,240,0.008052458],[4,305,240,0.003483958],[3,73,240,0.00070125],[2,30,240,0.000283916],[1,15,240,0.000150208],[0,7,240,6.05e-5]],"inputs":[["(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))"]],"stop":[["node limit",1]],"time":93.93603515625,"type":"simplify"},{"compiler":[[395,223]],"time":6.212890625,"type":"eval"},{"alts":[["(fma.f64 -8 (-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 1) 1)","next",27.84621526920982],["(/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4))))","done",32.7578125],["-1","fresh",35.538296261390315]],"compiler":[[14,12],[19,11],[3,3],[14,12],[3,3]],"count":[[38,3]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[35,1],"picked":[1,0]}],"min-error":[0.17786777283422894],"time":6.236083984375,"type":"prune"},{"compiler":[[43,27]],"locations":[["(pow.f64 (/.f64 y x) 2)",0.22560502930532605,true],["(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 1)",1.6559804277448726,true]],"time":10.926025390625,"type":"localize"},{"count":[[2,48]],"series":[["(pow.f64 (/.f64 y x) 2)","x","-inf",0.169921875],["(pow.f64 (/.f64 y x) 2)","x","inf",0.14501953125],["(pow.f64 (/.f64 y x) 2)","x","0",0.14013671875],["(pow.f64 (/.f64 y x) 2)","y","-inf",0.16796875],["(pow.f64 (/.f64 y x) 2)","y","inf",0.14306640625],["(pow.f64 (/.f64 y x) 2)","y","0",0.15087890625],["(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 1)","x","-inf",0.482177734375],["(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 1)","x","inf",0.69482421875],["(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 1)","x","0",0.405029296875],["(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 1)","y","-inf",0.4970703125],["(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 1)","y","inf",1.237060546875],["(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 1)","y","0",0.64501953125]],"time":5.073974609375,"type":"series"},{"count":[[2,119]],"egraph":[[2,2747,14,0.022779791],[1,204,14,0.003762833],[0,9,26,0.00030025]],"inputs":[["(-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 1)","(pow.f64 (/.f64 y x) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 (pow.f64 (/.f64 y x) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (+.f64 (pow.f64 (/.f64 y x) 2) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 y x) 2) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (+.f64 1 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (/.f64 y x) 2) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 y x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 (/.f64 1 x) (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y x) (/.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y y) (*.f64 (/.f64 1 x) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y y) (pow.f64 (/.f64 1 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (cbrt.f64 (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (*.f64 (cbrt.f64 (/.f64 y x)) (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 4)) (pow.f64 (cbrt.f64 (/.f64 y x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 y x)) (*.f64 (sqrt.f64 (/.f64 y x)) (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 3) -1) (/.f64 1 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) (+.f64 (pow.f64 (/.f64 y x) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) -1) (/.f64 1 (+.f64 (pow.f64 (/.f64 y x) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y x) (sqrt.f64 (/.f64 y x))) (sqrt.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (hypot.f64 1 (/.f64 y x)) 1) (-.f64 (hypot.f64 1 (/.f64 y x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y x) y) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y x) (pow.f64 (cbrt.f64 (/.f64 y x)) 2)) (cbrt.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 x y) (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) (+.f64 (pow.f64 (/.f64 y x) 2) 2)) (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 3) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (/.f64 y x) 2) 2) (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (*.f64 x (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (*.f64 (/.f64 x y) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y x) (/.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y y) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (*.f64 (/.f64 x y) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 3) -1) (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) (+.f64 (pow.f64 (/.f64 y x) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 3) -1) (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) (-.f64 1 (*.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) -1) (+.f64 (pow.f64 (/.f64 y x) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) -1) (-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (neg.f64 y)) (*.f64 (neg.f64 x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 3) -1)) (neg.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) (+.f64 (pow.f64 (/.f64 y x) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) -1)) (neg.f64 (+.f64 (pow.f64 (/.f64 y x) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) 1) (*.f64 (neg.f64 x) (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) y) (*.f64 (neg.f64 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (neg.f64 y)) (*.f64 x (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (+.f64 (pow.f64 (/.f64 y x) 2) -1) 3)) (+.f64 1 (-.f64 (*.f64 (+.f64 (pow.f64 (/.f64 y x) 2) -1) (+.f64 (pow.f64 (/.f64 y x) 2) -1)) (+.f64 (pow.f64 (/.f64 y x) 2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (*.f64 (+.f64 (pow.f64 (/.f64 y x) 2) -1) (+.f64 (pow.f64 (/.f64 y x) 2) -1))) (-.f64 1 (+.f64 (pow.f64 (/.f64 y x) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 y x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (/.f64 y x)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y x) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y x) (neg.f64 y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y x) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y x) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 y x) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (/.f64 y x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y x) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 1 (pow.f64 (/.f64 y x) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 1 (/.f64 y x)) (hypot.f64 1 (/.f64 y x)) -1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 (pow.f64 (/.f64 y x) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (+.f64 (pow.f64 (/.f64 y x) 2) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 y x) 2) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (+.f64 1 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (pow.f64 (/.f64 y x) 2) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 3) (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) (+.f64 (pow.f64 (/.f64 y x) 2) 2))) (/.f64 1 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) (+.f64 (pow.f64 (/.f64 y x) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) (+.f64 (pow.f64 (/.f64 y x) 2) 2)) (/.f64 1 (+.f64 (pow.f64 (/.f64 y x) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 y x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 (/.f64 1 x) (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y x) (/.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y y) (*.f64 (/.f64 1 x) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y y) (pow.f64 (/.f64 1 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (cbrt.f64 (pow.f64 (/.f64 y x) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (*.f64 (cbrt.f64 (/.f64 y x)) (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y x) 4)) (pow.f64 (cbrt.f64 (/.f64 y x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 y x)) (*.f64 (sqrt.f64 (/.f64 y x)) (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 3) -1) (/.f64 1 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) (+.f64 (pow.f64 (/.f64 y x) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) -1) (/.f64 1 (+.f64 (pow.f64 (/.f64 y x) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y x) (sqrt.f64 (/.f64 y x))) (sqrt.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (hypot.f64 1 (/.f64 y x)) 1) (-.f64 (hypot.f64 1 (/.f64 y x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y x) y) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y x) (pow.f64 (cbrt.f64 (/.f64 y x)) 2)) (cbrt.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 x y) (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) (+.f64 (pow.f64 (/.f64 y x) 2) 2)) (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 3) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (/.f64 y x) 2) 2) (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (*.f64 x (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (*.f64 (/.f64 x y) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y x) (/.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y y) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (*.f64 (/.f64 x y) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 3) -1) (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) (+.f64 (pow.f64 (/.f64 y x) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 3) -1) (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) (-.f64 1 (*.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) -1) (+.f64 (pow.f64 (/.f64 y x) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) -1) (-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (neg.f64 y)) (*.f64 (neg.f64 x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 3) -1)) (neg.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) (+.f64 (pow.f64 (/.f64 y x) 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 2) -1)) (neg.f64 (+.f64 (pow.f64 (/.f64 y x) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) 1) (*.f64 (neg.f64 x) (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) y) (*.f64 (neg.f64 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (neg.f64 y)) (*.f64 x (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (+.f64 (pow.f64 (/.f64 y x) 2) -1) 3)) (+.f64 1 (-.f64 (*.f64 (+.f64 (pow.f64 (/.f64 y x) 2) -1) (+.f64 (pow.f64 (/.f64 y x) 2) -1)) (+.f64 (pow.f64 (/.f64 y x) 2) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (*.f64 (+.f64 (pow.f64 (/.f64 y x) 2) -1) (+.f64 (pow.f64 (/.f64 y x) 2) -1))) (-.f64 1 (+.f64 (pow.f64 (/.f64 y x) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 y x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (/.f64 y x)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y x) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y x) (neg.f64 y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 y x) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (/.f64 y x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y x) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 1 (pow.f64 (/.f64 y x) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 1 (/.f64 y x)) (hypot.f64 1 (/.f64 y x)) -1)))))"]],"rules":[["egg-rr",59],["egg-rr",60]],"stop":[["node limit",1]],"time":49.99609375,"type":"rewrite"},{"count":[[167,65]],"egraph":[[13,7991,480,0.070697291],[12,7312,480,0.061514415999999995],[11,6658,480,0.050387457],[10,4762,480,0.039185957],[9,4429,480,0.029300081999999998],[8,4185,480,0.023069499],[7,3967,480,0.017637708000000002],[6,3783,480,0.012739291],[5,2528,480,0.0079075],[4,305,480,0.0034137079999999997],[3,73,480,0.000763416],[2,30,480,0.00033187500000000003],[1,15,480,0.000183541],[0,7,480,7.9625e-5]],"inputs":[["(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(*.f64 y (/.f64 y (*.f64 x x)))"]],"stop":[["node limit",1]],"time":95.69189453125,"type":"simplify"},{"compiler":[[1074,703]],"time":12.987060546875,"type":"eval"},{"alts":[["(fma.f64 -8 (fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1) 1)","next",27.846213822386257],["-1","fresh",35.538296261390315],["(/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4))))","done",32.7578125]],"compiler":[[25,20],[3,3],[19,11],[25,20],[3,3]],"count":[[68,3]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[65,1],"picked":[1,0]}],"min-error":[0.17786777227525902],"time":11.933837890625,"type":"prune"},{"compiler":[[84,56]],"locations":[["(pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2)",0.12957001953688405,true],["(pow.f64 (/.f64 y x) 2)",0.22560502930532605,false],["(fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1)",1.696258680502807,true],["(cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)))",14.171296338478443,true]],"time":19.6240234375,"type":"localize"},{"count":[[3,39]],"series":[["(pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2)","x","-inf",0.205078125],["(pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2)","x","inf",0.2890625],["(pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2)","x","0",0.2470703125],["(pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2)","y","-inf",0.285888671875],["(pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2)","y","inf",0.283935546875],["(pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2)","y","0",0.251953125],["(fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1)","x","-inf",0.641845703125],["(fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1)","x","inf",2.4541015625],["(fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1)","x","0",0.304931640625],["(fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1)","y","-inf",0.322021484375],["(fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1)","y","inf",1.870849609375],["(fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1)","y","0",3.18505859375],["(cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)))","x","-inf",0.27001953125],["(cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)))","x","inf",0.472900390625],["(cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)))","x","0",0.242919921875],["(cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)))","y","-inf",0.30810546875],["(cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)))","y","inf",0.388916015625],["(cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)))","y","0",0.615966796875]],"time":12.97705078125,"type":"series"},{"count":[[3,124]],"egraph":[[2,2863,31,0.025367001],[1,247,37,0.004189459],[0,12,40,0.000364542]],"inputs":[["(cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)))","(fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1)","(pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2)) (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4)) (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) (cbrt.f64 (hypot.f64 1 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 8))) (sqrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 y x) 4))) (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 y x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 6))) (cbrt.f64 (+.f64 1 (-.f64 (pow.f64 (/.f64 y x) 4) (pow.f64 (/.f64 y x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 1 (/.f64 y x)) 4) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (hypot.f64 1 (/.f64 y x)) 6) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4)) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 1 (/.f64 y x)) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 1/3 (log1p.f64 (pow.f64 (/.f64 y x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (pow.f64 (/.f64 y x) 2)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (log1p.f64 (pow.f64 (/.f64 y x) 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log1p.f64 (pow.f64 (/.f64 y x) 2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (*.f64 1/3 (log1p.f64 (pow.f64 (/.f64 y x) 2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 (pow.f64 (/.f64 y x) 2)) 1) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 (pow.f64 (/.f64 y x) 2)) 1/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 1/3 (log1p.f64 (pow.f64 (/.f64 y x) 2))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2/3 (log1p.f64 (pow.f64 (/.f64 y x) 2))) 1) 1/2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 (pow.f64 (/.f64 y x) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (/.f64 y x) 2) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (+.f64 1 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (/.f64 y x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (/.f64 y x) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (/.f64 y x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (/.f64 y x) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (/.f64 y x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 y x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 (/.f64 1 x) (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y x) (/.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y y) (pow.f64 x -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) (pow.f64 (cbrt.f64 (/.f64 y x)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 4) (pow.f64 (cbrt.f64 (/.f64 y x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 y x)) (pow.f64 (/.f64 y x) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 y x) 3/2) (sqrt.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (hypot.f64 1 (/.f64 y x)) 1) (-.f64 (hypot.f64 1 (/.f64 y x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y x) y) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 5) (cbrt.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (pow.f64 (/.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (*.f64 x (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (*.f64 (/.f64 x y) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 y x) (/.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y y) (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 y) (*.f64 (/.f64 x y) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (neg.f64 y) 2) (pow.f64 (neg.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) 1) (*.f64 (neg.f64 x) (/.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) y) (*.f64 (neg.f64 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (neg.f64 y)) (*.f64 x (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (hypot.f64 1 (/.f64 y x)) 6) -1) (+.f64 (pow.f64 (hypot.f64 1 (/.f64 y x)) 4) (-.f64 1 (*.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (hypot.f64 1 (/.f64 y x)) 4) 1) (-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (/.f64 y x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (/.f64 y x)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y x) y) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y x) (neg.f64 y)) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y x) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y x) 3) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y x) 4) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y x)) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 y x)) 4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y x) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x y) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x y) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 y x) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (/.f64 y x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y x) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (*.f64 (log1p.f64 (pow.f64 (/.f64 y x) 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (/.f64 y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (/.f64 y x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 6 (log.f64 (/.f64 y x))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (cbrt.f64 (/.f64 y x)) 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 y x)) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2 (log.f64 (/.f64 y x))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2 (log.f64 (/.f64 y x))) 3) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2) (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4)) (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 8)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 8)) (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 1 (/.f64 y x)) (cbrt.f64 (hypot.f64 1 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) (hypot.f64 1 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4) 5/6) (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 8))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (hypot.f64 1 (/.f64 y x)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log1p.f64 (pow.f64 (/.f64 y x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log1p.f64 (pow.f64 (/.f64 y x) 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (pow.f64 (/.f64 y x) 2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log1p.f64 (pow.f64 (/.f64 y x) 2))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (*.f64 2/3 (log1p.f64 (pow.f64 (/.f64 y x) 2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 (pow.f64 (/.f64 y x) 2)) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 (pow.f64 (/.f64 y x) 2)) 1/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 1/3 (log1p.f64 (pow.f64 (/.f64 y x) 2))) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2/3 (log1p.f64 (pow.f64 (/.f64 y x) 2))) 1) 1))))))"]],"rules":[["egg-rr",27],["egg-rr",60],["egg-rr",37]],"stop":[["node limit",1]],"time":50.511962890625,"type":"rewrite"},{"count":[[163,152]],"egraph":[[3,7281,1298,0.029110917],[2,1765,1350,0.014029792],[1,464,1561,0.0038385010000000002],[0,150,1699,0.000825084]],"inputs":[["1","(+.f64 1 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (*.f64 5/81 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","1","(+.f64 1 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","1","(+.f64 1 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 14/2187 (/.f64 1 (pow.f64 x 12))) (+.f64 (*.f64 80/6561 (/.f64 1 (pow.f64 x 12))) (*.f64 340/6561 (/.f64 1 (pow.f64 x 12))))) (*.f64 154/2187 (/.f64 1 (pow.f64 x 12)))) (pow.f64 y 12)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","-1","-1","-1","(/.f64 (+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 2/3 (pow.f64 y 2))) (pow.f64 x 2))","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 -4/27 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 y 4)) (*.f64 -2/9 (pow.f64 y 4))) (pow.f64 y 2)) (pow.f64 x 6))) (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))))))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6)))) (*.f64 -2/27 (pow.f64 y 6))) (pow.f64 y 2)) (pow.f64 x 8))) (+.f64 (*.f64 1/81 (/.f64 (pow.f64 y 8) (pow.f64 x 8))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1/27 (pow.f64 y 8)) (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 y 2))) (*.f64 1/27 (pow.f64 y 8)))) (pow.f64 x 8))) (+.f64 (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 -4/27 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/27 (pow.f64 y 8)) (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 y 2))) (*.f64 1/27 (pow.f64 y 8)))) (pow.f64 x 8))) (+.f64 (*.f64 -4/9 (/.f64 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 y 2)) (pow.f64 x 8))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 y 4)) (*.f64 -2/9 (pow.f64 y 4))) (pow.f64 y 2)) (pow.f64 x 6))) (+.f64 (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 y 4)) (*.f64 -2/9 (pow.f64 y 4))) (pow.f64 y 4)) (pow.f64 x 8))))))))))))))))))","(/.f64 (+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 2/3 (pow.f64 y 2))) (pow.f64 x 2))","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 -4/27 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 y 4)) (*.f64 -2/9 (pow.f64 y 4))) (pow.f64 y 2)) (pow.f64 x 6))) (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))))))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6)))) (*.f64 -2/27 (pow.f64 y 6))) (pow.f64 y 2)) (pow.f64 x 8))) (+.f64 (*.f64 1/81 (/.f64 (pow.f64 y 8) (pow.f64 x 8))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1/27 (pow.f64 y 8)) (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 y 2))) (*.f64 1/27 (pow.f64 y 8)))) (pow.f64 x 8))) (+.f64 (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 -4/27 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/27 (pow.f64 y 8)) (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 y 2))) (*.f64 1/27 (pow.f64 y 8)))) (pow.f64 x 8))) (+.f64 (*.f64 -4/9 (/.f64 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 y 2)) (pow.f64 x 8))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 y 4)) (*.f64 -2/9 (pow.f64 y 4))) (pow.f64 y 2)) (pow.f64 x 6))) (+.f64 (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 y 4)) (*.f64 -2/9 (pow.f64 y 4))) (pow.f64 y 4)) (pow.f64 x 8))))))))))))))))))","1","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) 1)","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 4/81 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))","1","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) 1)","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 -2/27 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))))))))","1","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) 1)","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 -2/27 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (*.f64 1/3 (/.f64 (*.f64 y y) (*.f64 x x))))","(fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) 1)","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 1/3 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) 1) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(+.f64 1 (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 (/.f64 y (/.f64 x y)) (/.f64 1/3 x))))","(+.f64 (*.f64 5/81 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(fma.f64 5/81 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (+.f64 1 (fma.f64 1/3 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 (fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))) (fma.f64 5/81 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) 1))","(+.f64 (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 (/.f64 y (/.f64 x y)) (/.f64 1/3 x))) (fma.f64 5/81 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) 1))","1","(+.f64 1 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (*.f64 1/3 (/.f64 (*.f64 y y) (*.f64 x x))))","(fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) 1)","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 1/3 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) 1) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(+.f64 1 (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 (/.f64 y (/.f64 x y)) (/.f64 1/3 x))))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(fma.f64 5/81 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (+.f64 1 (fma.f64 1/3 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 (fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))) (fma.f64 5/81 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) 1))","(+.f64 (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 (/.f64 y (/.f64 x y)) (/.f64 1/3 x))) (fma.f64 5/81 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) 1))","1","(+.f64 1 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 1 (*.f64 1/3 (/.f64 (*.f64 y y) (*.f64 x x))))","(fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) 1)","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 1 (fma.f64 1/3 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) 1) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(+.f64 1 (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 (/.f64 y (/.f64 x y)) (/.f64 1/3 x))))","(+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(fma.f64 5/81 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (+.f64 1 (fma.f64 1/3 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 (fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))) (fma.f64 5/81 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) 1))","(+.f64 (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 (/.f64 y (/.f64 x y)) (/.f64 1/3 x))) (fma.f64 5/81 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) 1))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(/.f64 (pow.f64 y 2) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 14/2187 (/.f64 1 (pow.f64 x 12))) (+.f64 (*.f64 80/6561 (/.f64 1 (pow.f64 x 12))) (*.f64 340/6561 (/.f64 1 (pow.f64 x 12))))) (*.f64 154/2187 (/.f64 1 (pow.f64 x 12)))) (pow.f64 y 12)) (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(fma.f64 (+.f64 (/.f64 14/2187 (pow.f64 x 12)) (-.f64 (*.f64 (/.f64 1 (pow.f64 x 12)) 140/2187) (/.f64 154/2187 (pow.f64 x 12)))) (pow.f64 y 12) (/.f64 (*.f64 y y) (*.f64 x x)))","(fma.f64 (+.f64 (/.f64 154/2187 (pow.f64 x 12)) (/.f64 -154/2187 (pow.f64 x 12))) (pow.f64 y 12) (*.f64 (/.f64 y x) (/.f64 y x)))","(fma.f64 0 (pow.f64 y 12) (*.f64 (/.f64 y x) (/.f64 y x)))","(+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 0)","-1","-1","-1","(/.f64 (+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 2/3 (pow.f64 y 2))) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))))","(fma.f64 2/3 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 1/3 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) -1/3)))))","(fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 (fma.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 2/9 (fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) -2/9))))","(fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 (+.f64 (*.f64 (/.f64 y (/.f64 x y)) (/.f64 1/3 x)) (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 0)))","(fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 (+.f64 (*.f64 (/.f64 y (/.f64 x y)) (/.f64 1/3 x)) 0))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 -4/27 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 y 4)) (*.f64 -2/9 (pow.f64 y 4))) (pow.f64 y 2)) (pow.f64 x 6))) (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))))))))","(fma.f64 1/3 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 -2/3 (/.f64 (*.f64 (pow.f64 y 6) -5/27) (pow.f64 x 6)) (fma.f64 -4/27 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (fma.f64 2/3 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 6) -5/27) (pow.f64 x 6)) (fma.f64 2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 1/3 (/.f64 (*.f64 (pow.f64 y 4) -1/9) (/.f64 (pow.f64 x 6) (*.f64 y y))) (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) -2/9))))))))))","(fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (fma.f64 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) -4/27 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 (fma.f64 -1/3 (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 x 6) -5/27)) (+.f64 (fma.f64 1/3 (*.f64 (/.f64 (*.f64 -1/9 (pow.f64 y 4)) (pow.f64 x 6)) (*.f64 y y)) (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) -2/9)) (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1/3))))) (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (*.f64 (pow.f64 y 6) 10/81) (pow.f64 x 6)))))","(fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (fma.f64 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) -4/27 (+.f64 (fma.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1/9 (/.f64 (*.f64 (pow.f64 y 6) -1/27) (pow.f64 x 6))) (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 (*.f64 5/81 (/.f64 (pow.f64 y 6) (pow.f64 x 6)))))) (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 x 6) 10/81)))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6)))) (*.f64 -2/27 (pow.f64 y 6))) (pow.f64 y 2)) (pow.f64 x 8))) (+.f64 (*.f64 1/81 (/.f64 (pow.f64 y 8) (pow.f64 x 8))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1/27 (pow.f64 y 8)) (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 y 2))) (*.f64 1/27 (pow.f64 y 8)))) (pow.f64 x 8))) (+.f64 (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 -4/27 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/27 (pow.f64 y 8)) (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 y 2))) (*.f64 1/27 (pow.f64 y 8)))) (pow.f64 x 8))) (+.f64 (*.f64 -4/9 (/.f64 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 y 2)) (pow.f64 x 8))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 y 4)) (*.f64 -2/9 (pow.f64 y 4))) (pow.f64 y 2)) (pow.f64 x 6))) (+.f64 (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 y 4)) (*.f64 -2/9 (pow.f64 y 4))) (pow.f64 y 4)) (pow.f64 x 8))))))))))))))))))","(fma.f64 1/3 (/.f64 (fma.f64 -2/3 (*.f64 (pow.f64 y 6) -5/27) (*.f64 (pow.f64 y 6) -2/27)) (/.f64 (pow.f64 x 8) (*.f64 y y))) (fma.f64 1/81 (/.f64 (pow.f64 y 8) (pow.f64 x 8)) (fma.f64 1/3 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -2/3 (/.f64 (fma.f64 -1/27 (pow.f64 y 8) (fma.f64 -2/3 (*.f64 (*.f64 y y) (*.f64 (pow.f64 y 6) -5/27)) (*.f64 1/27 (pow.f64 y 8)))) (pow.f64 x 8)) (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 -2/3 (/.f64 (*.f64 (pow.f64 y 6) -5/27) (pow.f64 x 6)) (fma.f64 -4/27 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (fma.f64 2/3 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 6) -5/27) (pow.f64 x 6)) (fma.f64 -1/3 (/.f64 (fma.f64 -1/27 (pow.f64 y 8) (fma.f64 -2/3 (*.f64 (*.f64 y y) (*.f64 (pow.f64 y 6) -5/27)) (*.f64 1/27 (pow.f64 y 8)))) (pow.f64 x 8)) (fma.f64 -4/9 (/.f64 (*.f64 (pow.f64 y 6) -5/27) (/.f64 (pow.f64 x 8) (*.f64 y y))) (fma.f64 2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 1/3 (/.f64 (*.f64 (pow.f64 y 4) -1/9) (/.f64 (pow.f64 x 6) (*.f64 y y))) (fma.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 -1/9 (/.f64 (*.f64 (pow.f64 y 4) -1/9) (/.f64 (pow.f64 x 8) (pow.f64 y 4)))))))))))))))))))","(fma.f64 1/3 (*.f64 (/.f64 (fma.f64 (pow.f64 y 6) -2/27 (*.f64 (pow.f64 y 6) 10/81)) (pow.f64 x 8)) (*.f64 y y)) (fma.f64 1/81 (/.f64 (pow.f64 y 8) (pow.f64 x 8)) (fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 -2/3 (/.f64 (fma.f64 (pow.f64 y 8) -1/27 (fma.f64 1/27 (pow.f64 y 8) (*.f64 (*.f64 y y) (*.f64 (pow.f64 y 6) 10/81)))) (pow.f64 x 8)) (+.f64 (fma.f64 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) -4/27 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 (fma.f64 -1/3 (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 x 6) -5/27)) (fma.f64 -1/3 (/.f64 (fma.f64 (pow.f64 y 8) -1/27 (fma.f64 1/27 (pow.f64 y 8) (*.f64 (*.f64 y y) (*.f64 (pow.f64 y 6) 10/81)))) (pow.f64 x 8)) (fma.f64 -4/9 (*.f64 (/.f64 (*.f64 (pow.f64 y 6) -5/27) (pow.f64 x 8)) (*.f64 y y)) (+.f64 (fma.f64 1/3 (*.f64 (/.f64 (*.f64 -1/9 (pow.f64 y 4)) (pow.f64 x 6)) (*.f64 y y)) (fma.f64 -1/9 (/.f64 (*.f64 (pow.f64 y 8) -1/9) (pow.f64 x 8)) (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) -2/9))) (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1/3))))))) (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (*.f64 (pow.f64 y 6) 10/81) (pow.f64 x 6))))))))","(fma.f64 1/3 (*.f64 (*.f64 y y) (/.f64 (*.f64 (pow.f64 y 6) 4/81) (pow.f64 x 8))) (fma.f64 1/81 (/.f64 (pow.f64 y 8) (pow.f64 x 8)) (fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 -2/3 (/.f64 (+.f64 (*.f64 (pow.f64 y 8) 10/81) (*.f64 (pow.f64 y 8) 0)) (pow.f64 x 8)) (+.f64 (fma.f64 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) -4/27 (+.f64 (+.f64 (fma.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1/9 (/.f64 (*.f64 (pow.f64 y 6) -1/27) (pow.f64 x 6))) (*.f64 1/81 (/.f64 (pow.f64 y 8) (pow.f64 x 8)))) (+.f64 (fma.f64 -1/3 (/.f64 (+.f64 (*.f64 (pow.f64 y 8) 10/81) (*.f64 (pow.f64 y 8) 0)) (pow.f64 x 8)) (/.f64 (*.f64 (pow.f64 y 8) 20/243) (pow.f64 x 8))) (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 (*.f64 5/81 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))) (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 x 6) 10/81))))))))","(fma.f64 1/3 (*.f64 (*.f64 y y) (/.f64 (*.f64 (pow.f64 y 6) 4/81) (pow.f64 x 8))) (fma.f64 1/81 (/.f64 (pow.f64 y 8) (pow.f64 x 8)) (fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 -2/3 (/.f64 (+.f64 0 (*.f64 (pow.f64 y 8) 10/81)) (pow.f64 x 8)) (+.f64 (fma.f64 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) -4/27 (+.f64 (+.f64 (fma.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1/9 (/.f64 (*.f64 (pow.f64 y 6) -1/27) (pow.f64 x 6))) (*.f64 1/81 (/.f64 (pow.f64 y 8) (pow.f64 x 8)))) (+.f64 (fma.f64 -1/3 (/.f64 (+.f64 0 (*.f64 (pow.f64 y 8) 10/81)) (pow.f64 x 8)) (/.f64 (*.f64 (pow.f64 y 8) 20/243) (pow.f64 x 8))) (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 (*.f64 5/81 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))) (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 x 6) 10/81))))))))","(/.f64 (+.f64 (*.f64 1/3 (pow.f64 y 2)) (*.f64 2/3 (pow.f64 y 2))) (pow.f64 x 2))","(/.f64 (*.f64 y y) (*.f64 x x))","(*.f64 (/.f64 y x) (/.f64 y x))","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))))","(fma.f64 2/3 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 1/3 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) -1/3)))))","(fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 (fma.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 2/9 (fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) -2/9))))","(fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 (+.f64 (*.f64 (/.f64 y (/.f64 x y)) (/.f64 1/3 x)) (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 0)))","(fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 (+.f64 (*.f64 (/.f64 y (/.f64 x y)) (/.f64 1/3 x)) 0))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 -4/27 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 y 4)) (*.f64 -2/9 (pow.f64 y 4))) (pow.f64 y 2)) (pow.f64 x 6))) (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))))))))","(fma.f64 1/3 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 -2/3 (/.f64 (*.f64 (pow.f64 y 6) -5/27) (pow.f64 x 6)) (fma.f64 -4/27 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (fma.f64 2/3 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 6) -5/27) (pow.f64 x 6)) (fma.f64 2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 1/3 (/.f64 (*.f64 (pow.f64 y 4) -1/9) (/.f64 (pow.f64 x 6) (*.f64 y y))) (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) -2/9))))))))))","(fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (fma.f64 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) -4/27 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 (fma.f64 -1/3 (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 x 6) -5/27)) (+.f64 (fma.f64 1/3 (*.f64 (/.f64 (*.f64 -1/9 (pow.f64 y 4)) (pow.f64 x 6)) (*.f64 y y)) (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) -2/9)) (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1/3))))) (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (*.f64 (pow.f64 y 6) 10/81) (pow.f64 x 6)))))","(fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) (+.f64 (fma.f64 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) -4/27 (+.f64 (fma.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1/9 (/.f64 (*.f64 (pow.f64 y 6) -1/27) (pow.f64 x 6))) (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 (*.f64 5/81 (/.f64 (pow.f64 y 6) (pow.f64 x 6)))))) (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 x 6) 10/81)))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2/3 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6)))) (*.f64 -2/27 (pow.f64 y 6))) (pow.f64 y 2)) (pow.f64 x 8))) (+.f64 (*.f64 1/81 (/.f64 (pow.f64 y 8) (pow.f64 x 8))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -1/27 (pow.f64 y 8)) (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 y 2))) (*.f64 1/27 (pow.f64 y 8)))) (pow.f64 x 8))) (+.f64 (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 -4/27 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1/27 (pow.f64 y 8)) (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 y 2))) (*.f64 1/27 (pow.f64 y 8)))) (pow.f64 x 8))) (+.f64 (*.f64 -4/9 (/.f64 (*.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 y 2)) (pow.f64 x 8))) (+.f64 (*.f64 2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 y 4)) (*.f64 -2/9 (pow.f64 y 4))) (pow.f64 y 2)) (pow.f64 x 6))) (+.f64 (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -1/9 (/.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 y 4)) (*.f64 -2/9 (pow.f64 y 4))) (pow.f64 y 4)) (pow.f64 x 8))))))))))))))))))","(fma.f64 1/3 (/.f64 (fma.f64 -2/3 (*.f64 (pow.f64 y 6) -5/27) (*.f64 (pow.f64 y 6) -2/27)) (/.f64 (pow.f64 x 8) (*.f64 y y))) (fma.f64 1/81 (/.f64 (pow.f64 y 8) (pow.f64 x 8)) (fma.f64 1/3 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -2/3 (/.f64 (fma.f64 -1/27 (pow.f64 y 8) (fma.f64 -2/3 (*.f64 (*.f64 y y) (*.f64 (pow.f64 y 6) -5/27)) (*.f64 1/27 (pow.f64 y 8)))) (pow.f64 x 8)) (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 -2/3 (/.f64 (*.f64 (pow.f64 y 6) -5/27) (pow.f64 x 6)) (fma.f64 -4/27 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (fma.f64 2/3 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1/3 (/.f64 (*.f64 (pow.f64 y 6) -5/27) (pow.f64 x 6)) (fma.f64 -1/3 (/.f64 (fma.f64 -1/27 (pow.f64 y 8) (fma.f64 -2/3 (*.f64 (*.f64 y y) (*.f64 (pow.f64 y 6) -5/27)) (*.f64 1/27 (pow.f64 y 8)))) (pow.f64 x 8)) (fma.f64 -4/9 (/.f64 (*.f64 (pow.f64 y 6) -5/27) (/.f64 (pow.f64 x 8) (*.f64 y y))) (fma.f64 2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 1/3 (/.f64 (*.f64 (pow.f64 y 4) -1/9) (/.f64 (pow.f64 x 6) (*.f64 y y))) (fma.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 -1/9 (/.f64 (*.f64 (pow.f64 y 4) -1/9) (/.f64 (pow.f64 x 8) (pow.f64 y 4)))))))))))))))))))","(fma.f64 1/3 (*.f64 (/.f64 (fma.f64 (pow.f64 y 6) -2/27 (*.f64 (pow.f64 y 6) 10/81)) (pow.f64 x 8)) (*.f64 y y)) (fma.f64 1/81 (/.f64 (pow.f64 y 8) (pow.f64 x 8)) (fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 -2/3 (/.f64 (fma.f64 (pow.f64 y 8) -1/27 (fma.f64 1/27 (pow.f64 y 8) (*.f64 (*.f64 y y) (*.f64 (pow.f64 y 6) 10/81)))) (pow.f64 x 8)) (+.f64 (fma.f64 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) -4/27 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 (fma.f64 -1/3 (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 x 6) -5/27)) (fma.f64 -1/3 (/.f64 (fma.f64 (pow.f64 y 8) -1/27 (fma.f64 1/27 (pow.f64 y 8) (*.f64 (*.f64 y y) (*.f64 (pow.f64 y 6) 10/81)))) (pow.f64 x 8)) (fma.f64 -4/9 (*.f64 (/.f64 (*.f64 (pow.f64 y 6) -5/27) (pow.f64 x 8)) (*.f64 y y)) (+.f64 (fma.f64 1/3 (*.f64 (/.f64 (*.f64 -1/9 (pow.f64 y 4)) (pow.f64 x 6)) (*.f64 y y)) (fma.f64 -1/9 (/.f64 (*.f64 (pow.f64 y 8) -1/9) (pow.f64 x 8)) (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) -2/9))) (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1/3))))))) (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (*.f64 (pow.f64 y 6) 10/81) (pow.f64 x 6))))))))","(fma.f64 1/3 (*.f64 (*.f64 y y) (/.f64 (*.f64 (pow.f64 y 6) 4/81) (pow.f64 x 8))) (fma.f64 1/81 (/.f64 (pow.f64 y 8) (pow.f64 x 8)) (fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 -2/3 (/.f64 (+.f64 (*.f64 (pow.f64 y 8) 10/81) (*.f64 (pow.f64 y 8) 0)) (pow.f64 x 8)) (+.f64 (fma.f64 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) -4/27 (+.f64 (+.f64 (fma.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1/9 (/.f64 (*.f64 (pow.f64 y 6) -1/27) (pow.f64 x 6))) (*.f64 1/81 (/.f64 (pow.f64 y 8) (pow.f64 x 8)))) (+.f64 (fma.f64 -1/3 (/.f64 (+.f64 (*.f64 (pow.f64 y 8) 10/81) (*.f64 (pow.f64 y 8) 0)) (pow.f64 x 8)) (/.f64 (*.f64 (pow.f64 y 8) 20/243) (pow.f64 x 8))) (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 (*.f64 5/81 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))) (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 x 6) 10/81))))))))","(fma.f64 1/3 (*.f64 (*.f64 y y) (/.f64 (*.f64 (pow.f64 y 6) 4/81) (pow.f64 x 8))) (fma.f64 1/81 (/.f64 (pow.f64 y 8) (pow.f64 x 8)) (fma.f64 1/3 (*.f64 (/.f64 y x) (/.f64 y x)) (fma.f64 -2/3 (/.f64 (+.f64 0 (*.f64 (pow.f64 y 8) 10/81)) (pow.f64 x 8)) (+.f64 (fma.f64 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) -4/27 (+.f64 (+.f64 (fma.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1/9 (/.f64 (*.f64 (pow.f64 y 6) -1/27) (pow.f64 x 6))) (*.f64 1/81 (/.f64 (pow.f64 y 8) (pow.f64 x 8)))) (+.f64 (fma.f64 -1/3 (/.f64 (+.f64 0 (*.f64 (pow.f64 y 8) 10/81)) (pow.f64 x 8)) (/.f64 (*.f64 (pow.f64 y 8) 20/243) (pow.f64 x 8))) (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 (*.f64 5/81 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))) (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 x 6) 10/81))))))))","1","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) 1)","(fma.f64 2/3 (/.f64 (*.f64 y y) (*.f64 x x)) 1)","(fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 1)","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))))","(+.f64 (fma.f64 2/3 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1))","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 4/81 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))","(+.f64 (fma.f64 2/3 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) 4/81)))","(+.f64 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 1) (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) 4/81)))","1","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) 1)","(fma.f64 2/3 (/.f64 (*.f64 y y) (*.f64 x x)) 1)","(fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 1)","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 (fma.f64 2/3 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1))","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 -2/27 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))))))))","(+.f64 (fma.f64 2/3 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (fma.f64 -2/27 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (+.f64 (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 (/.f64 (*.f64 (pow.f64 y 6) -5/27) (pow.f64 x 6)) -2/3))))","(+.f64 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 1) (fma.f64 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) -2/27 (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (*.f64 (pow.f64 y 6) 10/81) (pow.f64 x 6)))))","(+.f64 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 1) (fma.f64 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) -2/27 (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 x 6) 10/81)))))","1","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) 1)","(fma.f64 2/3 (/.f64 (*.f64 y y) (*.f64 x x)) 1)","(fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 1)","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(+.f64 (fma.f64 2/3 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))","(fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 1))","(+.f64 (*.f64 2/3 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 -2/27 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (+.f64 (*.f64 1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 -2/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 y 6)) (*.f64 -2/9 (pow.f64 y 6))) (pow.f64 x 6))))))))","(+.f64 (fma.f64 2/3 (/.f64 (*.f64 y y) (*.f64 x x)) 1) (fma.f64 -2/27 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (+.f64 (*.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 (/.f64 (*.f64 (pow.f64 y 6) -5/27) (pow.f64 x 6)) -2/3))))","(+.f64 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 1) (fma.f64 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) -2/27 (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (*.f64 (pow.f64 y 6) 10/81) (pow.f64 x 6)))))","(+.f64 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 2/3 1) (fma.f64 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) -2/27 (fma.f64 -1/9 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 6) (/.f64 (pow.f64 x 6) 10/81)))))"]],"stop":[["node limit",1]],"time":54.81103515625,"type":"simplify"},{"compiler":[[5473,4032]],"time":71.4208984375,"type":"eval"},{"alts":[["(fma.f64 -8 (fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2)) 3) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1) 1)","fresh",27.846220257516425],["-1","fresh",35.538296261390315],["(/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4))))","done",32.7578125]],"compiler":[[28,23],[3,3],[19,11]],"count":[[206,3]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[203,1],"picked":[1,0]}],"min-error":[0.17786776902306906],"time":60.109130859375,"type":"prune"},{"accuracy":[10.643792968625176],"baseline":[27.846213822386257],"branch":[["x",11.413648385601535,4],["y",11.283489921164646,4],["(/.f64 (-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)) (+.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)))",14.849553360354907,2],["(/.f64 (-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)) (+.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)))",14.849553360354907,2],["(*.f64 x x)",10.72820371552377,3],["(*.f64 x x)",10.72820371552377,3],["(*.f64 (*.f64 y 4) y)",10.643792968625176,4],["(*.f64 (*.f64 y 4) y)",10.643792968625176,4]],"compiler":[[3,2],[3,2],[21,12],[21,12],[5,3],[5,3],[7,5],[7,5],[110,72]],"count":[[7,4]],"inputs":[["(fma.f64 -8 (fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (hypot.f64 1 (/.f64 y x))) 2)) 3) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1) 1)","(fma.f64 -8 (fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1) 1)","(fma.f64 -8 (-.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2)) 1) 1)","(fma.f64 -8 (*.f64 (/.f64 y x) (/.f64 y x)) 1)","-1","(/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4))))","(/.f64 (-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)) (+.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)))"]],"link":["."],"name":["Diagrams.TwoD.Arc:arcBetween from diagrams-lib-1.3.0.3"],"oracle":[63.329367451781216],"outputs":[["(fma.f64 -8 (fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1) 1)","(/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4))))","(fma.f64 -8 (fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1) 1)","-1"]],"time":76.162109375,"times":[["x",14.93896484375],["y",14.583984375],["(/.f64 (-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)) (+.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)))",3.346923828125],["(/.f64 (-.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)) (+.f64 (*.f64 x x) (*.f64 (*.f64 y 4) y)))",3.48486328125],["(*.f64 x x)",7.8662109375],["(*.f64 x x)",7.991943359375],["(*.f64 (*.f64 y 4) y)",10.716064453125],["(*.f64 (*.f64 y 4) y)",10.85986328125]],"type":"regimes"},{"bstep":[[1.1702125510864191e+235,4.0972214478399175e+238,0.02783203125],[1.1328892878391548e+96,1.881617418571508e+101,0.031982421875],[6.384358150701406e-107,4.731816591071036e-106,0.078125]],"compiler":[[15,8],[7,5]],"method":["left-value","left-value","left-value"],"time":0.2509765625,"type":"bsearch"},{"compiler":[[90,65]],"egraph":[[1,40,129,0.000111917],[0,34,129,6.1042e-5]],"inputs":[["(if (<=.f64 (*.f64 (*.f64 y 4) y) 8263199609878107/82631996098781074868989413504096379978550585370535152410581099409300723904538918228148651304964410605948901503127919788032) (fma.f64 -8 (fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1) 1) (if (<=.f64 (*.f64 (*.f64 y 4) y) 2000000000000000099723307943817786034020536970876924303149785861223976798198611630768918030712832) (/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4)))) (if (<=.f64 (*.f64 (*.f64 y 4) y) 20000000000000001063320393253192980712067789150490201946713945974087783044584331189190008582698609818051443363625024187925900890276107307746338432618040807753398340794668447026899501367525666462470927567058296134422473861140718276313088) (fma.f64 -8 (fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1) 1) -1)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (*.f64 (*.f64 y 4) y) 8263199609878107/82631996098781074868989413504096379978550585370535152410581099409300723904538918228148651304964410605948901503127919788032) (fma.f64 -8 (fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1) 1) (if (<=.f64 (*.f64 (*.f64 y 4) y) 2000000000000000099723307943817786034020536970876924303149785861223976798198611630768918030712832) (/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4)))) (if (<=.f64 (*.f64 (*.f64 y 4) y) 20000000000000001063320393253192980712067789150490201946713945974087783044584331189190008582698609818051443363625024187925900890276107307746338432618040807753398340794668447026899501367525666462470927567058296134422473861140718276313088) (fma.f64 -8 (fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1) 1) -1)))","(if (<=.f64 (*.f64 y (*.f64 y 4)) 8263199609878107/82631996098781074868989413504096379978550585370535152410581099409300723904538918228148651304964410605948901503127919788032) (fma.f64 -8 (fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1) 1) (if (<=.f64 (*.f64 y (*.f64 y 4)) 2000000000000000099723307943817786034020536970876924303149785861223976798198611630768918030712832) (/.f64 (fma.f64 y (*.f64 y -4) (*.f64 x x)) (fma.f64 x x (*.f64 y (*.f64 y 4)))) (if (<=.f64 (*.f64 y (*.f64 y 4)) 20000000000000001063320393253192980712067789150490201946713945974087783044584331189190008582698609818051443363625024187925900890276107307746338432618040807753398340794668447026899501367525666462470927567058296134422473861140718276313088) (fma.f64 -8 (fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 y x) 2))) -1) 1) -1)))"]],"stop":[["fuel",1],["saturated",1]],"time":10.260986328125,"type":"simplify"},{"time":0.02490234375,"type":"soundness"},{"compiler":[[90,65]],"remove-preprocessing":[[]],"time":31.81591796875,"type":"end"}]