[{"compiler":[[10,7]],"method":["search"],"sampling":[[12,0.6731702503748238,0.09170725150033832,0.23512249812483788],[11,0.6595117235556245,0.12097552325576544,0.21951275318861008],[10,0.6009751800447702,0.17951206676661968,0.21951275318861008],[9,0.5775605626404285,0.23414617404341698,0.18829326331615448],[8,0.46829234808683395,0.34341438859701157,0.18829326331615448],[7,0.43707285821437836,0.43707285821437836,0.1258542835712433],[6,0.24975591897964478,0.6243897974491119,0.1258542835712433],[5,0.24975591897964478,0.7492677569389343,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":22.8671875,"type":"analyze"},{"outcomes":[["body",256,"invalid",5.786865234375,179],["body",256,"valid",271.359130859375,8256]],"time":285.02099609375,"type":"sample"},{"compiler":[[9,6]],"egraph":[[0,2,2,1.5e-6],[10,1270,20,0.016175832],[9,1220,20,0.013534540000000001],[8,1195,20,0.010714582],[7,682,20,0.008028582],[6,496,20,0.0046150819999999995],[5,362,20,0.003098249],[4,248,20,0.001956916],[3,108,20,0.000837582],[2,48,20,0.000333374],[1,26,20,0.000145791],[0,10,20,6.0666e-5]],"inputs":[["0","1"],["(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 y (-.f64 1 (*.f64 y x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 x (-.f64 1 (*.f64 x y)))","(fma.f64 y (neg.f64 (*.f64 x x)) x)","(fma.f64 x (*.f64 x (neg.f64 y)) x)","(*.f64 (neg.f64 x) (fma.f64 x y -1))","(*.f64 y (-.f64 1 (*.f64 y x)))","(*.f64 y (-.f64 1 (*.f64 x y)))","(-.f64 y (*.f64 y (*.f64 x y)))","(fma.f64 y (*.f64 x (neg.f64 y)) y)","(*.f64 (neg.f64 y) (fma.f64 x y -1))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":38.375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[10,749,10,0.010195793],[9,717,10,0.008514585],[8,672,10,0.006692793],[7,431,10,0.004974126],[6,327,10,0.0030862089999999995],[5,239,10,0.0021207509999999997],[4,162,10,0.001316959],[3,71,10,0.0005851669999999999],[2,33,10,0.000245667],[1,16,10,0.00011116700000000001],[0,7,10,4.6125e-5]],"inputs":[["(*.f64 x (-.f64 1 (*.f64 x y)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 x (fma.f64 y (neg.f64 x) 1))"]],"stop":[["saturated",1]],"time":21.308837890625,"type":"simplify"},{"compiler":[[16,10]],"time":0.335205078125,"type":"eval"},{"alts":[["(*.f64 x (-.f64 1 (*.f64 x y)))","next",0.109375]],"compiler":[[9,6],[9,6]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,1],"picked":[0,0]}],"min-error":[0.109375],"time":0.785888671875,"type":"prune"},{"compiler":[[20,9]],"locations":[["(-.f64 1 (*.f64 x y))",0.0078125,true],["(*.f64 x (-.f64 1 (*.f64 x y)))",0.109375,true]],"time":4.157958984375,"type":"localize"},{"count":[[2,48]],"series":[["(-.f64 1 (*.f64 x y))","y","-inf",0.14404296875],["(-.f64 1 (*.f64 x y))","y","inf",0.14013671875],["(-.f64 1 (*.f64 x y))","y","0",0.157958984375],["(-.f64 1 (*.f64 x y))","x","-inf",0.14501953125],["(-.f64 1 (*.f64 x y))","x","inf",0.147216796875],["(-.f64 1 (*.f64 x y))","x","0",0.15185546875],["(*.f64 x (-.f64 1 (*.f64 x y)))","y","-inf",0.31201171875],["(*.f64 x (-.f64 1 (*.f64 x y)))","y","inf",0.30908203125],["(*.f64 x (-.f64 1 (*.f64 x y)))","y","0",0.43701171875],["(*.f64 x (-.f64 1 (*.f64 x y)))","x","-inf",0.43896484375],["(*.f64 x (-.f64 1 (*.f64 x y)))","x","inf",0.447998046875],["(*.f64 x (-.f64 1 (*.f64 x y)))","x","0",0.4609375]],"time":3.447998046875,"type":"series"},{"count":[[2,47]],"egraph":[[2,1841,17,0.018234708],[1,145,17,0.002531],[0,7,17,0.000189083]],"inputs":[["(*.f64 x (-.f64 1 (*.f64 x y)))","(-.f64 1 (*.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (*.f64 x (neg.f64 y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 x (*.f64 x (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (-.f64 1 (*.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (*.f64 x y) 3)) x) (+.f64 1 (*.f64 (*.f64 x y) (+.f64 1 (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (*.f64 x y) 2)) x) (+.f64 1 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (-.f64 1 (pow.f64 (*.f64 x y) 3))) (+.f64 1 (*.f64 (*.f64 x y) (+.f64 1 (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (-.f64 1 (pow.f64 (*.f64 x y) 2))) (+.f64 1 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (-.f64 1 (*.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (-.f64 1 (*.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (-.f64 1 (*.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (-.f64 1 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (-.f64 1 (*.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (-.f64 1 (*.f64 x y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 1 (*.f64 x y)) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (-.f64 1 (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (-.f64 1 (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (-.f64 1 (*.f64 x y)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 x (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (*.f64 x (neg.f64 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (neg.f64 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 1 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (*.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2) (cbrt.f64 (-.f64 1 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 1 (*.f64 x y))) (sqrt.f64 (-.f64 1 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (*.f64 x y) 3)) (/.f64 1 (+.f64 1 (*.f64 (*.f64 x y) (+.f64 1 (*.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (*.f64 x y) 2)) (/.f64 1 (+.f64 1 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (*.f64 (*.f64 x y) (+.f64 1 (*.f64 x y)))) (-.f64 1 (pow.f64 (*.f64 x y) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (*.f64 x y)) (-.f64 1 (pow.f64 (*.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (*.f64 x y) 3)) (+.f64 1 (*.f64 (*.f64 x y) (+.f64 1 (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (*.f64 x y) 2)) (+.f64 1 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (*.f64 x y) 3))) (neg.f64 (+.f64 1 (*.f64 (*.f64 x y) (+.f64 1 (*.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (*.f64 x y) 2))) (neg.f64 (+.f64 1 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (*.f64 x (neg.f64 y)) 3)) (+.f64 1 (-.f64 (*.f64 (*.f64 x (neg.f64 y)) (*.f64 x (neg.f64 y))) (*.f64 x (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (*.f64 (*.f64 x (neg.f64 y)) (*.f64 x (neg.f64 y)))) (-.f64 1 (*.f64 x (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (*.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (*.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 1 (*.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 1 (*.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 1 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 (*.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 1 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 1 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (*.f64 x (neg.f64 y))))))))"]],"rules":[["egg-rr",28],["egg-rr",19]],"stop":[["node limit",1]],"time":38.10009765625,"type":"rewrite"},{"count":[[95,57]],"egraph":[[10,7579,282,0.058056417],[9,6807,282,0.050084959],[8,5983,370,0.038005959],[7,4316,370,0.027117041999999997],[6,2544,370,0.016384166999999998],[5,1314,370,0.008382042],[4,382,370,0.0033337920000000004],[3,138,370,0.001228376],[2,68,370,0.000593667],[1,31,370,0.000269042],[0,13,424,0.000104709]],"inputs":[["x","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","x","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","1","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(*.f64 -1 (*.f64 y x))","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(*.f64 -1 (*.f64 y x))","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (*.f64 -1 (*.f64 y x)))","1","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(*.f64 -1 (*.f64 y x))","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(*.f64 -1 (*.f64 y x))","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (*.f64 -1 (*.f64 y x)))"]],"method":["egg-herbie"],"outputs":[["x","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 x (*.f64 x y)))","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 x (fma.f64 x y -1))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 x (*.f64 x y)))","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 x (fma.f64 x y -1))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 x (*.f64 x y)))","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 x (fma.f64 x y -1))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 x (*.f64 x y))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 x (*.f64 x y)))","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 x (fma.f64 x y -1))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 x (*.f64 x y)))","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 x (fma.f64 x y -1))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 x (*.f64 x y)))","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 x (fma.f64 x y -1))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 x (*.f64 x y))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 x (*.f64 x y)))","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 x (fma.f64 x y -1))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 x (*.f64 x y)))","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 x (fma.f64 x y -1))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 x (*.f64 x y)))","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 x (fma.f64 x y -1))","x","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 x (*.f64 x y)))","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 x (fma.f64 x y -1))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 x (*.f64 x y)))","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 x (fma.f64 x y -1))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 x (*.f64 x y)))","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 x (fma.f64 x y -1))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 x (*.f64 x y))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 x (*.f64 x y)))","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 x (fma.f64 x y -1))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 x (*.f64 x y)))","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 x (fma.f64 x y -1))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 x (*.f64 x y)))","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 x (fma.f64 x y -1))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 x (*.f64 x y))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 x (*.f64 x y)))","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 x (fma.f64 x y -1))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 x (*.f64 x y)))","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 x (fma.f64 x y -1))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 x (*.f64 x y)))","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 x (-.f64 1 (*.f64 x y)))","(*.f64 x (fma.f64 x y -1))","1","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (neg.f64 (*.f64 x y)))","(-.f64 1 (*.f64 x y))","(fma.f64 x y 1)","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (neg.f64 (*.f64 x y)))","(-.f64 1 (*.f64 x y))","(fma.f64 x y 1)","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (neg.f64 (*.f64 x y)))","(-.f64 1 (*.f64 x y))","(fma.f64 x y 1)","(*.f64 -1 (*.f64 y x))","(neg.f64 (*.f64 x y))","(*.f64 y (neg.f64 x))","(*.f64 x (neg.f64 y))","(*.f64 x y)","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (neg.f64 (*.f64 x y)))","(-.f64 1 (*.f64 x y))","(fma.f64 x y 1)","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (neg.f64 (*.f64 x y)))","(-.f64 1 (*.f64 x y))","(fma.f64 x y 1)","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (neg.f64 (*.f64 x y)))","(-.f64 1 (*.f64 x y))","(fma.f64 x y 1)","(*.f64 -1 (*.f64 y x))","(neg.f64 (*.f64 x y))","(*.f64 y (neg.f64 x))","(*.f64 x (neg.f64 y))","(*.f64 x y)","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (neg.f64 (*.f64 x y)))","(-.f64 1 (*.f64 x y))","(fma.f64 x y 1)","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (neg.f64 (*.f64 x y)))","(-.f64 1 (*.f64 x y))","(fma.f64 x y 1)","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (neg.f64 (*.f64 x y)))","(-.f64 1 (*.f64 x y))","(fma.f64 x y 1)","1","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (neg.f64 (*.f64 x y)))","(-.f64 1 (*.f64 x y))","(fma.f64 x y 1)","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (neg.f64 (*.f64 x y)))","(-.f64 1 (*.f64 x y))","(fma.f64 x y 1)","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (neg.f64 (*.f64 x y)))","(-.f64 1 (*.f64 x y))","(fma.f64 x y 1)","(*.f64 -1 (*.f64 y x))","(neg.f64 (*.f64 x y))","(*.f64 y (neg.f64 x))","(*.f64 x (neg.f64 y))","(*.f64 x y)","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (neg.f64 (*.f64 x y)))","(-.f64 1 (*.f64 x y))","(fma.f64 x y 1)","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (neg.f64 (*.f64 x y)))","(-.f64 1 (*.f64 x y))","(fma.f64 x y 1)","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (neg.f64 (*.f64 x y)))","(-.f64 1 (*.f64 x y))","(fma.f64 x y 1)","(*.f64 -1 (*.f64 y x))","(neg.f64 (*.f64 x y))","(*.f64 y (neg.f64 x))","(*.f64 x (neg.f64 y))","(*.f64 x y)","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (neg.f64 (*.f64 x y)))","(-.f64 1 (*.f64 x y))","(fma.f64 x y 1)","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (neg.f64 (*.f64 x y)))","(-.f64 1 (*.f64 x y))","(fma.f64 x y 1)","(+.f64 1 (*.f64 -1 (*.f64 y x)))","(+.f64 1 (neg.f64 (*.f64 x y)))","(-.f64 1 (*.f64 x y))","(fma.f64 x y 1)"]],"stop":[["node limit",1]],"time":77.60791015625,"type":"simplify"},{"compiler":[[670,362]],"time":8.01904296875,"type":"eval"},{"alts":[["(pow.f64 (sqrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 2)","fresh",33.99056625976844],["(pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 3)","fresh",0.7270853028217029],["(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","fresh",6.778734399139254],["(/.f64 (*.f64 (-.f64 1 (pow.f64 (*.f64 x y) 2)) x) (+.f64 1 (*.f64 x y)))","fresh",8.34765625],["(/.f64 (*.f64 (-.f64 1 (pow.f64 (*.f64 x y) 3)) x) (+.f64 1 (*.f64 (*.f64 x y) (+.f64 1 (*.f64 x y)))))","fresh",12.83203125],["(+.f64 x (*.f64 x (*.f64 x (neg.f64 y))))","next",0.09765625]],"compiler":[[12,9],[12,9],[11,8],[17,11],[23,14],[10,6],[12,9],[12,9],[11,8],[17,11],[23,14],[10,6]],"count":[[58,6]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[57,6],"picked":[1,0]}],"min-error":[0.01953125],"time":11.531982421875,"type":"prune"},{"compiler":[[24,6]],"locations":[["(+.f64 x (*.f64 x (*.f64 x (neg.f64 y))))",0.01171875,true],["(*.f64 x (*.f64 x (neg.f64 y)))",0.1796875,true]],"time":4.367919921875,"type":"localize"},{"count":[[2,48]],"series":[["(+.f64 x (*.f64 x (*.f64 x (neg.f64 y))))","y","-inf",0.18408203125],["(+.f64 x (*.f64 x (*.f64 x (neg.f64 y))))","y","inf",0.1572265625],["(+.f64 x (*.f64 x (*.f64 x (neg.f64 y))))","y","0",0.151123046875],["(+.f64 x (*.f64 x (*.f64 x (neg.f64 y))))","x","-inf",0.18115234375],["(+.f64 x (*.f64 x (*.f64 x (neg.f64 y))))","x","inf",0.223876953125],["(+.f64 x (*.f64 x (*.f64 x (neg.f64 y))))","x","0",0.1748046875],["(*.f64 x (*.f64 x (neg.f64 y)))","y","-inf",0.158935546875],["(*.f64 x (*.f64 x (neg.f64 y)))","y","inf",0.407958984375],["(*.f64 x (*.f64 x (neg.f64 y)))","y","0",0.85205078125],["(*.f64 x (*.f64 x (neg.f64 y)))","x","-inf",0.156982421875],["(*.f64 x (*.f64 x (neg.f64 y)))","x","inf",0.360107421875],["(*.f64 x (*.f64 x (neg.f64 y)))","x","0",0.509033203125]],"time":3.66015625,"type":"series"},{"count":[[2,55]],"egraph":[[2,2318,15,0.018777374],[1,155,15,0.0028937489999999997],[0,7,21,0.000168041]],"inputs":[["(*.f64 x (*.f64 x (neg.f64 y)))","(+.f64 x (*.f64 x (*.f64 x (neg.f64 y))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (*.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (sqrt.f64 y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (*.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 x (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (*.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 x) y) x))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (*.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (*.f64 x y))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 x (*.f64 x (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 x (*.f64 x y) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x x) (fma.f64 x (*.f64 x y) x)) (/.f64 (pow.f64 (*.f64 x (*.f64 x y)) 2) (fma.f64 x (*.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 1 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 (*.f64 x y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (-.f64 1 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x (*.f64 x y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x (*.f64 x y) x) 2) (/.f64 1 (fma.f64 x (*.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (*.f64 x y) x)) (pow.f64 (cbrt.f64 (fma.f64 x (*.f64 x y) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x (*.f64 x y) x)) 2) (cbrt.f64 (fma.f64 x (*.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x (*.f64 x y) x)) (sqrt.f64 (fma.f64 x (*.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 x 3) (pow.f64 (*.f64 x (*.f64 x y)) 3)) (/.f64 1 (-.f64 (pow.f64 (fma.f64 x (*.f64 x y) x) 2) (*.f64 (pow.f64 x 3) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (*.f64 x y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 x) (*.f64 x (sqrt.f64 y))) (-.f64 (sqrt.f64 x) (*.f64 x (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 x y) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (pow.f64 (fma.f64 x (*.f64 x y) x) 2) (*.f64 (pow.f64 x 3) y)) (+.f64 (pow.f64 x 3) (pow.f64 (*.f64 x (*.f64 x y)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 x (*.f64 x y) x) (pow.f64 (fma.f64 x (*.f64 x y) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 x (*.f64 x y) x) 2) (fma.f64 x (*.f64 x y) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (*.f64 x (*.f64 x y)) 3)) (-.f64 (pow.f64 (fma.f64 x (*.f64 x y) x) 2) (*.f64 (pow.f64 x 3) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (*.f64 x (*.f64 x y)) 3)) (+.f64 (pow.f64 (*.f64 x (*.f64 x y)) 2) (-.f64 (*.f64 x x) (*.f64 (pow.f64 x 3) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 x 3) (pow.f64 (*.f64 x (*.f64 x y)) 3))) (neg.f64 (-.f64 (pow.f64 (fma.f64 x (*.f64 x y) x) 2) (*.f64 (pow.f64 x 3) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 x (*.f64 x y) x) 2)) (neg.f64 (fma.f64 x (*.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x 3) (pow.f64 (*.f64 x (*.f64 x y)) 3)) (+.f64 (*.f64 x x) (+.f64 (pow.f64 (*.f64 x (*.f64 x y)) 2) (*.f64 (pow.f64 x 3) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (*.f64 x y)) 2) (*.f64 x x)) (-.f64 (*.f64 x (*.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (*.f64 x y) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (*.f64 x y) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x (*.f64 x y) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (*.f64 x y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x (*.f64 x y) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 x (*.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (*.f64 x y) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x (*.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x (*.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 x (*.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 x y) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x y) x x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 x (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (*.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) y x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 x y))) 2) (cbrt.f64 (*.f64 x (*.f64 x y))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 x (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sqrt.f64 y)) (*.f64 x (sqrt.f64 y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 x (*.f64 x y)))))))"]],"rules":[["egg-rr",43],["egg-rr",12]],"stop":[["node limit",1]],"time":39.683837890625,"type":"rewrite"},{"count":[[103,60]],"egraph":[[9,7910,434,0.04915020700000001],[8,7102,434,0.040217916000000006],[7,4901,434,0.028736833000000003],[6,3301,434,0.016592833],[5,1199,434,0.008150875],[4,338,434,0.002802875],[3,120,434,0.001021625],[2,49,434,0.00047316700000000003],[1,21,434,0.00022583300000000002],[0,9,452,8.6625e-5]],"inputs":[["(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","x","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","x","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","x","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(fma.f64 (neg.f64 (*.f64 y x)) x x)","(fma.f64 (*.f64 x x) (neg.f64 y) x)","(fma.f64 x (*.f64 x (neg.f64 y)) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(fma.f64 (neg.f64 (*.f64 y x)) x x)","(fma.f64 (*.f64 x x) (neg.f64 y) x)","(fma.f64 x (*.f64 x (neg.f64 y)) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(fma.f64 (neg.f64 (*.f64 y x)) x x)","(fma.f64 (*.f64 x x) (neg.f64 y) x)","(fma.f64 x (*.f64 x (neg.f64 y)) x)","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(fma.f64 (neg.f64 (*.f64 y x)) x x)","(fma.f64 (*.f64 x x) (neg.f64 y) x)","(fma.f64 x (*.f64 x (neg.f64 y)) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(fma.f64 (neg.f64 (*.f64 y x)) x x)","(fma.f64 (*.f64 x x) (neg.f64 y) x)","(fma.f64 x (*.f64 x (neg.f64 y)) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(fma.f64 (neg.f64 (*.f64 y x)) x x)","(fma.f64 (*.f64 x x) (neg.f64 y) x)","(fma.f64 x (*.f64 x (neg.f64 y)) x)","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(fma.f64 (neg.f64 (*.f64 y x)) x x)","(fma.f64 (*.f64 x x) (neg.f64 y) x)","(fma.f64 x (*.f64 x (neg.f64 y)) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(fma.f64 (neg.f64 (*.f64 y x)) x x)","(fma.f64 (*.f64 x x) (neg.f64 y) x)","(fma.f64 x (*.f64 x (neg.f64 y)) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(fma.f64 (neg.f64 (*.f64 y x)) x x)","(fma.f64 (*.f64 x x) (neg.f64 y) x)","(fma.f64 x (*.f64 x (neg.f64 y)) x)","x","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(fma.f64 (neg.f64 (*.f64 y x)) x x)","(fma.f64 (*.f64 x x) (neg.f64 y) x)","(fma.f64 x (*.f64 x (neg.f64 y)) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(fma.f64 (neg.f64 (*.f64 y x)) x x)","(fma.f64 (*.f64 x x) (neg.f64 y) x)","(fma.f64 x (*.f64 x (neg.f64 y)) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(fma.f64 (neg.f64 (*.f64 y x)) x x)","(fma.f64 (*.f64 x x) (neg.f64 y) x)","(fma.f64 x (*.f64 x (neg.f64 y)) x)","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(fma.f64 (neg.f64 (*.f64 y x)) x x)","(fma.f64 (*.f64 x x) (neg.f64 y) x)","(fma.f64 x (*.f64 x (neg.f64 y)) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(fma.f64 (neg.f64 (*.f64 y x)) x x)","(fma.f64 (*.f64 x x) (neg.f64 y) x)","(fma.f64 x (*.f64 x (neg.f64 y)) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(fma.f64 (neg.f64 (*.f64 y x)) x x)","(fma.f64 (*.f64 x x) (neg.f64 y) x)","(fma.f64 x (*.f64 x (neg.f64 y)) x)","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(*.f64 x (neg.f64 (*.f64 y x)))","(*.f64 (*.f64 x x) (neg.f64 y))","(*.f64 x (*.f64 x (neg.f64 y)))","(*.f64 y (*.f64 x (neg.f64 x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(fma.f64 (neg.f64 (*.f64 y x)) x x)","(fma.f64 (*.f64 x x) (neg.f64 y) x)","(fma.f64 x (*.f64 x (neg.f64 y)) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(fma.f64 (neg.f64 (*.f64 y x)) x x)","(fma.f64 (*.f64 x x) (neg.f64 y) x)","(fma.f64 x (*.f64 x (neg.f64 y)) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(fma.f64 (neg.f64 (*.f64 y x)) x x)","(fma.f64 (*.f64 x x) (neg.f64 y) x)","(fma.f64 x (*.f64 x (neg.f64 y)) x)"]],"stop":[["node limit",1]],"time":69.6259765625,"type":"simplify"},{"compiler":[[720,252]],"time":6.863037109375,"type":"eval"},{"alts":[["(+.f64 x (*.f64 y (*.f64 x (neg.f64 x))))","fresh",6.778734399139254],["(pow.f64 (sqrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 2)","fresh",33.99056625976844],["(pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 3)","next",0.7270853028217029],["(/.f64 (*.f64 (-.f64 1 (pow.f64 (*.f64 x y) 2)) x) (+.f64 1 (*.f64 x y)))","fresh",8.34765625],["(/.f64 (*.f64 (-.f64 1 (pow.f64 (*.f64 x y) 3)) x) (+.f64 1 (*.f64 (*.f64 x y) (+.f64 1 (*.f64 x y)))))","fresh",12.83203125],["(+.f64 x (*.f64 x (*.f64 x (neg.f64 y))))","done",0.09765625]],"compiler":[[10,6],[12,9],[12,9],[17,11],[23,14],[10,6],[10,6],[12,9],[12,9],[17,11],[23,14]],"count":[[66,6]],"kept":[{"done":[0,0],"fresh":[5,4],"new":[60,1],"picked":[1,1]}],"min-error":[0.01953125],"time":11.565185546875,"type":"prune"},{"compiler":[[39,20]],"locations":[["(-.f64 1 (*.f64 x y))",0.0078125,false],["(cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))",0.05078125,true],["(*.f64 x (-.f64 1 (*.f64 x y)))",0.109375,false],["(pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 3)",0.6798402344426088,true]],"time":8.73779296875,"type":"localize"},{"count":[[2,8]],"series":[["(cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))","y","-inf",0.251953125],["(cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))","y","inf",0.23486328125],["(cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))","y","0",0.345947265625],["(cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))","x","-inf",0.30615234375],["(cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))","x","inf",0.236083984375],["(cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))","x","0",0.22705078125],["(pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 3)","y","-inf",0.64404296875],["(pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 3)","y","inf",0.56005859375],["(pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 3)","y","0",2.126953125],["(pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 3)","x","-inf",1.008056640625],["(pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 3)","x","inf",0.546875],["(pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 3)","x","0",0.76220703125]],"time":7.420166015625,"type":"series"},{"count":[[2,60]],"egraph":[[2,2340,22,0.021267167],[1,213,22,0.003322583],[0,10,22,0.000299958]],"inputs":[["(pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 3)","(cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (*.f64 y (neg.f64 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 x (*.f64 y (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 x (-.f64 1 (*.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (-.f64 1 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (-.f64 1 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (*.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (-.f64 1 (*.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) (pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 2) (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))) (pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) (pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (-.f64 1 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2) (*.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (-.f64 1 (*.f64 x y))) 1/6) (*.f64 (pow.f64 (*.f64 x (-.f64 1 (*.f64 x y))) 1/6) (pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (-.f64 1 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 1 (*.f64 x y))) (*.f64 (sqrt.f64 (-.f64 1 (*.f64 x y))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) (sqrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))) 2) 3) (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 x (-.f64 1 (*.f64 x y))) 1/6) 3) (pow.f64 (pow.f64 (*.f64 x (-.f64 1 (*.f64 x y))) 1/6) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)) (cbrt.f64 (-.f64 1 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (sqrt.f64 (-.f64 1 (*.f64 x y)))) (sqrt.f64 (-.f64 1 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 (*.f64 x y)) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 (*.f64 x y)) (sqrt.f64 x)) (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 2) 1) (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))) 2)) (cbrt.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 2) (cbrt.f64 x)) (cbrt.f64 (-.f64 1 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 2) (pow.f64 (*.f64 x (-.f64 1 (*.f64 x y))) 1/6)) (pow.f64 (*.f64 x (-.f64 1 (*.f64 x y))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (*.f64 x y) 3)) x) (+.f64 1 (+.f64 (*.f64 x y) (pow.f64 (*.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (*.f64 x y) 2)) x) (+.f64 1 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (-.f64 1 (pow.f64 (*.f64 x y) 3))) (+.f64 1 (+.f64 (*.f64 x y) (pow.f64 (*.f64 x y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (-.f64 1 (pow.f64 (*.f64 x y) 2))) (+.f64 1 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (-.f64 1 (*.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (-.f64 1 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (-.f64 1 (*.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (-.f64 1 (*.f64 x y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 1 (*.f64 x y)) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (-.f64 1 (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (-.f64 1 (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (-.f64 1 (*.f64 x y)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))) (pow.f64 (pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 2) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))) 2) (cbrt.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 1 (*.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 x (-.f64 1 (*.f64 x y))) 1/6) (pow.f64 (*.f64 x (-.f64 1 (*.f64 x y))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 2) 1/3) (cbrt.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 1/3) (pow.f64 (sqrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (-.f64 1 (*.f64 x y))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (-.f64 1 (*.f64 x y))) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))))))))"]],"rules":[["egg-rr",21],["egg-rr",39]],"stop":[["node limit",1]],"time":43.115966796875,"type":"rewrite"},{"count":[[68,76]],"egraph":[[4,7882,397,0.038609416],[3,5859,398,0.023731415999999998],[2,1148,409,0.009729958],[1,362,431,0.002444875],[0,106,504,0.0006055]],"inputs":[["(*.f64 (pow.f64 1 1/3) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 x 22)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 x 22)) 1/9))) y) (*.f64 (pow.f64 1 1/3) x))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 x 22)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 x 22)) 1/9))) y) (+.f64 (*.f64 (pow.f64 1 1/3) x) (*.f64 (+.f64 (*.f64 2/9 (pow.f64 (*.f64 1 (pow.f64 x 35)) 1/9)) (+.f64 (*.f64 -1/9 (pow.f64 (*.f64 1 (pow.f64 x 35)) 1/9)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (+.f64 (*.f64 -2/9 (pow.f64 (*.f64 1 (pow.f64 x 32)) 1/9)) (*.f64 1/9 (pow.f64 (*.f64 1 (pow.f64 x 32)) 1/9)))))) (pow.f64 y 2))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 x 22)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 x 22)) 1/9))) y) (+.f64 (*.f64 (pow.f64 1 1/3) x) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 16)) 1/9) (+.f64 (*.f64 -2/9 (pow.f64 (*.f64 1 (pow.f64 x 32)) 1/9)) (*.f64 1/9 (pow.f64 (*.f64 1 (pow.f64 x 32)) 1/9))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1/27 (pow.f64 (*.f64 1 (pow.f64 x 16)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (pow.f64 x 16) 1/3)))))) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (pow.f64 x 16) 1/3))) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (pow.f64 x 5))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (pow.f64 x 16) 1/3))) (*.f64 -1/27 (pow.f64 (*.f64 1 (pow.f64 x 16)) 1/3)))))))))) (pow.f64 y 3)) (*.f64 (+.f64 (*.f64 2/9 (pow.f64 (*.f64 1 (pow.f64 x 35)) 1/9)) (+.f64 (*.f64 -1/9 (pow.f64 (*.f64 1 (pow.f64 x 35)) 1/9)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (+.f64 (*.f64 -2/9 (pow.f64 (*.f64 1 (pow.f64 x 32)) 1/9)) (*.f64 1/9 (pow.f64 (*.f64 1 (pow.f64 x 32)) 1/9)))))) (pow.f64 y 2)))))","(pow.f64 x 1/3)","(+.f64 (pow.f64 x 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 16)) 1/9) y)))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 29)) 1/9) (pow.f64 y 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 16)) 1/9) y))))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 29)) 1/9) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 16)) 1/9) y)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (pow.f64 x 16) 1/3))) (*.f64 -1/27 (pow.f64 (*.f64 1 (pow.f64 x 16)) 1/3)))))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 1 1/3) x)","x","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 x 22)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 x 22)) 1/9))) y) (*.f64 (pow.f64 1 1/3) x))","(fma.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 x 22) 1/18) (pow.f64 (pow.f64 x 22) 1/18)) -1) y x)","(fma.f64 (*.f64 (pow.f64 (pow.f64 x 22) 1/18) (pow.f64 (pow.f64 x 22) 1/18)) (neg.f64 y) x)","(-.f64 x (*.f64 (*.f64 (pow.f64 (pow.f64 x 22) 1/18) (pow.f64 (pow.f64 x 22) 1/18)) y))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 x 22)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 x 22)) 1/9))) y) (+.f64 (*.f64 (pow.f64 1 1/3) x) (*.f64 (+.f64 (*.f64 2/9 (pow.f64 (*.f64 1 (pow.f64 x 35)) 1/9)) (+.f64 (*.f64 -1/9 (pow.f64 (*.f64 1 (pow.f64 x 35)) 1/9)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (+.f64 (*.f64 -2/9 (pow.f64 (*.f64 1 (pow.f64 x 32)) 1/9)) (*.f64 1/9 (pow.f64 (*.f64 1 (pow.f64 x 32)) 1/9)))))) (pow.f64 y 2))))","(+.f64 (fma.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 x 22) 1/18) (pow.f64 (pow.f64 x 22) 1/18)) -1) y x) (*.f64 (fma.f64 2/9 (*.f64 (pow.f64 (pow.f64 x 35) 1/18) (pow.f64 (pow.f64 x 35) 1/18)) (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 x 35) 1/18) (pow.f64 (pow.f64 x 35) 1/18)) (*.f64 (cbrt.f64 x) (*.f64 (*.f64 (pow.f64 (pow.f64 x 32) 1/18) (pow.f64 (pow.f64 x 32) 1/18)) -1/9)))) (*.f64 y y)))","(fma.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 x 22) 1/18) (pow.f64 (pow.f64 x 22) 1/18)) -1) y (fma.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 x 32) 1/18) (pow.f64 (pow.f64 x 32) 1/18)) (*.f64 -1/9 (cbrt.f64 x))) (*.f64 (*.f64 (pow.f64 (pow.f64 x 35) 1/18) (pow.f64 (pow.f64 x 35) 1/18)) 1/9)) (*.f64 y y) x))","(fma.f64 (fma.f64 (*.f64 (pow.f64 (pow.f64 x 35) 1/18) (pow.f64 (pow.f64 x 35) 1/18)) 1/9 (*.f64 -1/9 (*.f64 (cbrt.f64 x) (*.f64 (pow.f64 (pow.f64 x 32) 1/18) (pow.f64 (pow.f64 x 32) 1/18))))) (*.f64 y y) (fma.f64 (*.f64 (pow.f64 (pow.f64 x 22) 1/18) (pow.f64 (pow.f64 x 22) 1/18)) (neg.f64 y) x))","(+.f64 x (*.f64 y (-.f64 (*.f64 y (fma.f64 (*.f64 (pow.f64 (pow.f64 x 35) 1/18) (pow.f64 (pow.f64 x 35) 1/18)) 1/9 (*.f64 -1/9 (*.f64 (cbrt.f64 x) (*.f64 (pow.f64 (pow.f64 x 32) 1/18) (pow.f64 (pow.f64 x 32) 1/18)))))) (*.f64 (pow.f64 (pow.f64 x 22) 1/18) (pow.f64 (pow.f64 x 22) 1/18)))))","(+.f64 x (*.f64 y (fma.f64 y (fma.f64 (*.f64 (pow.f64 (pow.f64 x 35) 1/18) (pow.f64 (pow.f64 x 35) 1/18)) 1/9 (*.f64 -1/9 (*.f64 (cbrt.f64 x) (*.f64 (pow.f64 (pow.f64 x 32) 1/18) (pow.f64 (pow.f64 x 32) 1/18))))) (*.f64 (pow.f64 (pow.f64 x 22) 1/18) (neg.f64 (pow.f64 (pow.f64 x 22) 1/18))))))","(+.f64 (*.f64 (+.f64 (*.f64 -1/3 (pow.f64 (*.f64 1 (pow.f64 x 22)) 1/9)) (*.f64 -2/3 (pow.f64 (*.f64 1 (pow.f64 x 22)) 1/9))) y) (+.f64 (*.f64 (pow.f64 1 1/3) x) (+.f64 (*.f64 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 16)) 1/9) (+.f64 (*.f64 -2/9 (pow.f64 (*.f64 1 (pow.f64 x 32)) 1/9)) (*.f64 1/9 (pow.f64 (*.f64 1 (pow.f64 x 32)) 1/9))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 1 1/3) (+.f64 (*.f64 -1/27 (pow.f64 (*.f64 1 (pow.f64 x 16)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (pow.f64 x 16) 1/3)))))) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (pow.f64 x 16) 1/3))) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (pow.f64 x 5))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (pow.f64 x 16) 1/3))) (*.f64 -1/27 (pow.f64 (*.f64 1 (pow.f64 x 16)) 1/3)))))))))) (pow.f64 y 3)) (*.f64 (+.f64 (*.f64 2/9 (pow.f64 (*.f64 1 (pow.f64 x 35)) 1/9)) (+.f64 (*.f64 -1/9 (pow.f64 (*.f64 1 (pow.f64 x 35)) 1/9)) (*.f64 (pow.f64 (*.f64 1 x) 1/3) (+.f64 (*.f64 -2/9 (pow.f64 (*.f64 1 (pow.f64 x 32)) 1/9)) (*.f64 1/9 (pow.f64 (*.f64 1 (pow.f64 x 32)) 1/9)))))) (pow.f64 y 2)))))","(+.f64 (fma.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 x 22) 1/18) (pow.f64 (pow.f64 x 22) 1/18)) -1) y x) (fma.f64 (fma.f64 -1/3 (*.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 x 32) 1/18) (pow.f64 (pow.f64 x 32) 1/18)) -1/9) (*.f64 (pow.f64 (pow.f64 x 16) 1/18) (pow.f64 (pow.f64 x 16) 1/18))) (+.f64 (+.f64 (*.f64 -1/3 (fma.f64 -1/27 (cbrt.f64 (pow.f64 x 16)) (*.f64 2/9 (cbrt.f64 (pow.f64 x 16))))) (*.f64 2/27 (cbrt.f64 (pow.f64 x 16)))) (*.f64 (cbrt.f64 x) (+.f64 (*.f64 2/27 (pow.f64 x 5)) (*.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 1 x))) (fma.f64 -1/27 (cbrt.f64 (pow.f64 x 16)) (*.f64 2/9 (cbrt.f64 (pow.f64 x 16))))))))) (pow.f64 y 3) (*.f64 (fma.f64 2/9 (*.f64 (pow.f64 (pow.f64 x 35) 1/18) (pow.f64 (pow.f64 x 35) 1/18)) (fma.f64 -1/9 (*.f64 (pow.f64 (pow.f64 x 35) 1/18) (pow.f64 (pow.f64 x 35) 1/18)) (*.f64 (cbrt.f64 x) (*.f64 (*.f64 (pow.f64 (pow.f64 x 32) 1/18) (pow.f64 (pow.f64 x 32) 1/18)) -1/9)))) (*.f64 y y))))","(+.f64 (fma.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 x 22) 1/18) (pow.f64 (pow.f64 x 22) 1/18)) -1) y x) (fma.f64 (fma.f64 -1/3 (*.f64 (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 x 32) 1/18) (pow.f64 (pow.f64 x 32) 1/18))) (*.f64 (pow.f64 (pow.f64 x 16) 1/18) (pow.f64 (pow.f64 x 16) 1/18))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (pow.f64 x 16)) 5/27) (fma.f64 (cbrt.f64 x) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 x)) (*.f64 (cbrt.f64 (pow.f64 x 16)) 5/27)) (*.f64 2/27 (pow.f64 x 5))) (*.f64 (cbrt.f64 (pow.f64 x 16)) 2/27)))) (pow.f64 y 3) (*.f64 y (*.f64 y (+.f64 (*.f64 (*.f64 (pow.f64 (pow.f64 x 32) 1/18) (pow.f64 (pow.f64 x 32) 1/18)) (*.f64 -1/9 (cbrt.f64 x))) (*.f64 (*.f64 (pow.f64 (pow.f64 x 35) 1/18) (pow.f64 (pow.f64 x 35) 1/18)) 1/9))))))","(fma.f64 (*.f64 (pow.f64 (pow.f64 x 22) 1/18) (pow.f64 (pow.f64 x 22) 1/18)) (neg.f64 y) (fma.f64 y (*.f64 y (fma.f64 (*.f64 (pow.f64 (pow.f64 x 35) 1/18) (pow.f64 (pow.f64 x 35) 1/18)) 1/9 (*.f64 -1/9 (*.f64 (cbrt.f64 x) (*.f64 (pow.f64 (pow.f64 x 32) 1/18) (pow.f64 (pow.f64 x 32) 1/18)))))) (fma.f64 (fma.f64 (*.f64 (pow.f64 (pow.f64 x 16) 1/18) (pow.f64 (pow.f64 x 16) 1/18)) (*.f64 (*.f64 (pow.f64 (pow.f64 x 32) 1/18) (pow.f64 (pow.f64 x 32) 1/18)) 1/27) (fma.f64 (cbrt.f64 x) (fma.f64 (cbrt.f64 (/.f64 1 x)) (*.f64 (cbrt.f64 (pow.f64 x 16)) -10/81) (*.f64 2/27 (pow.f64 x 5))) (fma.f64 (cbrt.f64 (pow.f64 x 16)) 2/27 (*.f64 (cbrt.f64 (pow.f64 x 16)) -5/81)))) (pow.f64 y 3) x)))","(+.f64 (fma.f64 (fma.f64 (*.f64 (pow.f64 (pow.f64 x 16) 1/18) (pow.f64 (pow.f64 x 16) 1/18)) (*.f64 (*.f64 (pow.f64 (pow.f64 x 32) 1/18) (pow.f64 (pow.f64 x 32) 1/18)) 1/27) (fma.f64 (cbrt.f64 x) (fma.f64 (cbrt.f64 (/.f64 1 x)) (*.f64 (cbrt.f64 (pow.f64 x 16)) -10/81) (*.f64 2/27 (pow.f64 x 5))) (*.f64 (cbrt.f64 (pow.f64 x 16)) 1/81))) (pow.f64 y 3) x) (*.f64 y (-.f64 (*.f64 y (fma.f64 (*.f64 (pow.f64 (pow.f64 x 35) 1/18) (pow.f64 (pow.f64 x 35) 1/18)) 1/9 (*.f64 -1/9 (*.f64 (cbrt.f64 x) (*.f64 (pow.f64 (pow.f64 x 32) 1/18) (pow.f64 (pow.f64 x 32) 1/18)))))) (*.f64 (pow.f64 (pow.f64 x 22) 1/18) (pow.f64 (pow.f64 x 22) 1/18)))))","(+.f64 x (*.f64 y (-.f64 (*.f64 y (+.f64 (fma.f64 (*.f64 (pow.f64 (pow.f64 x 35) 1/18) (pow.f64 (pow.f64 x 35) 1/18)) 1/9 (*.f64 -1/9 (*.f64 (cbrt.f64 x) (*.f64 (pow.f64 (pow.f64 x 32) 1/18) (pow.f64 (pow.f64 x 32) 1/18))))) (*.f64 y (fma.f64 (*.f64 (pow.f64 (pow.f64 x 16) 1/18) (pow.f64 (pow.f64 x 16) 1/18)) (*.f64 (*.f64 (pow.f64 (pow.f64 x 32) 1/18) (pow.f64 (pow.f64 x 32) 1/18)) 1/27) (fma.f64 (cbrt.f64 x) (fma.f64 (cbrt.f64 (/.f64 1 x)) (*.f64 (cbrt.f64 (pow.f64 x 16)) -10/81) (*.f64 2/27 (pow.f64 x 5))) (*.f64 (cbrt.f64 (pow.f64 x 16)) 1/81)))))) (*.f64 (pow.f64 (pow.f64 x 22) 1/18) (pow.f64 (pow.f64 x 22) 1/18)))))","(pow.f64 x 1/3)","(cbrt.f64 x)","(+.f64 (pow.f64 x 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 16)) 1/9) y)))","(+.f64 (cbrt.f64 x) (*.f64 -1/3 (*.f64 y (*.f64 (pow.f64 (pow.f64 x 16) 1/18) (pow.f64 (pow.f64 x 16) 1/18)))))","(fma.f64 -1/3 (*.f64 y (*.f64 (pow.f64 (pow.f64 x 16) 1/18) (pow.f64 (pow.f64 x 16) 1/18))) (cbrt.f64 x))","(fma.f64 (*.f64 (pow.f64 (pow.f64 x 16) 1/18) (pow.f64 (pow.f64 x 16) 1/18)) (*.f64 -1/3 y) (cbrt.f64 x))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 29)) 1/9) (pow.f64 y 2))) (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 16)) 1/9) y))))","(+.f64 (cbrt.f64 x) (fma.f64 -1/9 (*.f64 (*.f64 y y) (*.f64 (pow.f64 (pow.f64 x 29) 1/18) (pow.f64 (pow.f64 x 29) 1/18))) (*.f64 -1/3 (*.f64 y (*.f64 (pow.f64 (pow.f64 x 16) 1/18) (pow.f64 (pow.f64 x 16) 1/18))))))","(+.f64 (fma.f64 -1/3 (*.f64 y (*.f64 (pow.f64 (pow.f64 x 16) 1/18) (pow.f64 (pow.f64 x 16) 1/18))) (cbrt.f64 x)) (*.f64 (*.f64 y y) (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 x 29) 1/18) (pow.f64 (pow.f64 x 29) 1/18)))))","(fma.f64 (*.f64 y y) (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 x 29) 1/18) (pow.f64 (pow.f64 x 29) 1/18))) (fma.f64 (*.f64 (pow.f64 (pow.f64 x 16) 1/18) (pow.f64 (pow.f64 x 16) 1/18)) (*.f64 -1/3 y) (cbrt.f64 x)))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 29)) 1/9) (pow.f64 y 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 x 16)) 1/9) y)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (pow.f64 x 16) 1/3))) (*.f64 -1/27 (pow.f64 (*.f64 1 (pow.f64 x 16)) 1/3)))))))))","(+.f64 (cbrt.f64 x) (fma.f64 -1/9 (*.f64 (*.f64 y y) (*.f64 (pow.f64 (pow.f64 x 29) 1/18) (pow.f64 (pow.f64 x 29) 1/18))) (*.f64 -1/3 (+.f64 (*.f64 y (*.f64 (pow.f64 (pow.f64 x 16) 1/18) (pow.f64 (pow.f64 x 16) 1/18))) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x x))) (*.f64 (fma.f64 -1/27 (cbrt.f64 (pow.f64 x 16)) (*.f64 2/9 (cbrt.f64 (pow.f64 x 16)))) (pow.f64 y 3)))))))","(+.f64 (cbrt.f64 x) (fma.f64 -1/3 (fma.f64 y (*.f64 (pow.f64 (pow.f64 x 16) 1/18) (pow.f64 (pow.f64 x 16) 1/18)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 x 16)) 5/27) (*.f64 (pow.f64 y 3) (cbrt.f64 (/.f64 1 (*.f64 x x)))))) (*.f64 (*.f64 y y) (*.f64 -1/9 (*.f64 (pow.f64 (pow.f64 x 29) 1/18) (pow.f64 (pow.f64 x 29) 1/18))))))","(fma.f64 -1/3 (fma.f64 y (*.f64 (pow.f64 (pow.f64 x 16) 1/18) (pow.f64 (pow.f64 x 16) 1/18)) (*.f64 (cbrt.f64 (pow.f64 x 16)) (*.f64 5/27 (*.f64 (pow.f64 y 3) (cbrt.f64 (/.f64 1 (*.f64 x x))))))) (fma.f64 (*.f64 (pow.f64 (pow.f64 x 29) 1/18) (pow.f64 (pow.f64 x 29) 1/18)) (*.f64 -1/9 (*.f64 y y)) (cbrt.f64 x)))","(fma.f64 -1/3 (fma.f64 y (*.f64 (pow.f64 (pow.f64 x 16) 1/18) (pow.f64 (pow.f64 x 16) 1/18)) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x x))) (cbrt.f64 (pow.f64 x 16))) (*.f64 (pow.f64 y 3) 5/27))) (fma.f64 (*.f64 (pow.f64 (pow.f64 x 29) 1/18) (pow.f64 (pow.f64 x 29) 1/18)) (*.f64 -1/9 (*.f64 y y)) (cbrt.f64 x)))"]],"stop":[["node limit",1]],"time":54.619873046875,"type":"simplify"},{"compiler":[[2480,1672]],"time":30.4541015625,"type":"eval"},{"alts":[["(+.f64 x (*.f64 y (*.f64 x (neg.f64 x))))","fresh",6.778734399139254],["(*.f64 (*.f64 (-.f64 1 (*.f64 x y)) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))","fresh",0.7427103028217029],["(*.f64 (*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)) (cbrt.f64 (-.f64 1 (*.f64 x y))))","next",0.2950364258319563],["(/.f64 (*.f64 x (-.f64 1 (pow.f64 (*.f64 x y) 2))) (+.f64 1 (*.f64 x y)))","fresh",8.34765625],["(+.f64 x (*.f64 x (*.f64 x (neg.f64 y))))","done",0.09765625],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))) 2)) (cbrt.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))))","fresh",0.9157919062938125]],"compiler":[[10,6],[15,10],[19,13],[17,11],[10,6],[34,23],[10,6],[15,10],[19,13],[17,11],[34,23]],"count":[[139,6]],"kept":[{"done":[1,1],"fresh":[4,1],"new":[133,4],"picked":[1,0]}],"min-error":[0.00390625],"time":25.076904296875,"type":"prune"},{"compiler":[[55,31]],"locations":[["(cbrt.f64 (-.f64 1 (*.f64 x y)))",0.05078125,true],["(*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2))",0.0859375,true],["(*.f64 (*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)) (cbrt.f64 (-.f64 1 (*.f64 x y))))",0.14681625976844204,true],["(pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)",0.2265625,true]],"time":11.81103515625,"type":"localize"},{"count":[[4,48]],"series":[["(cbrt.f64 (-.f64 1 (*.f64 x y)))","y","-inf",0.185791015625],["(cbrt.f64 (-.f64 1 (*.f64 x y)))","y","inf",0.1640625],["(cbrt.f64 (-.f64 1 (*.f64 x y)))","y","0",0.20703125],["(cbrt.f64 (-.f64 1 (*.f64 x y)))","x","-inf",0.240966796875],["(cbrt.f64 (-.f64 1 (*.f64 x y)))","x","inf",0.166015625],["(cbrt.f64 (-.f64 1 (*.f64 x y)))","x","0",0.244140625],["(*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2))","y","-inf",1.79296875],["(*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2))","y","inf",0.35302734375],["(*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2))","y","0",0.507080078125],["(*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2))","x","-inf",0.336181640625],["(*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2))","x","inf",0.27978515625],["(*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2))","x","0",0.758056640625],["(*.f64 (*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)) (cbrt.f64 (-.f64 1 (*.f64 x y))))","y","-inf",0.255126953125],["(*.f64 (*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)) (cbrt.f64 (-.f64 1 (*.f64 x y))))","y","inf",0.29296875],["(*.f64 (*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)) (cbrt.f64 (-.f64 1 (*.f64 x y))))","y","0",0.555908203125],["(*.f64 (*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)) (cbrt.f64 (-.f64 1 (*.f64 x y))))","x","-inf",0.264892578125],["(*.f64 (*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)) (cbrt.f64 (-.f64 1 (*.f64 x y))))","x","inf",0.255126953125],["(*.f64 (*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)) (cbrt.f64 (-.f64 1 (*.f64 x y))))","x","0",0.988037109375],["(pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)","y","-inf",0.30517578125],["(pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)","y","inf",0.3388671875],["(pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)","y","0",0.448974609375],["(pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)","x","-inf",0.330078125],["(pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)","x","inf",0.341064453125],["(pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)","x","0",0.548095703125]],"time":10.45703125,"type":"series"},{"count":[[4,133]],"egraph":[[2,2703,46,0.026245542],[1,229,46,0.0038555839999999996],[0,11,46,0.000318542]],"inputs":[["(pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)","(*.f64 (*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)) (cbrt.f64 (-.f64 1 (*.f64 x y))))","(*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2))","(cbrt.f64 (-.f64 1 (*.f64 x y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) (cbrt.f64 (fma.f64 y (neg.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))) 4) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 y (neg.f64 x) 1)) (pow.f64 (fma.f64 y (neg.f64 x) 1) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 y (neg.f64 x) 1) 1/6) (sqrt.f64 (fma.f64 y (neg.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))) 5) (cbrt.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 y (neg.f64 x) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log1p.f64 (*.f64 y (neg.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log1p.f64 (*.f64 y (neg.f64 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (*.f64 y (neg.f64 x))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log1p.f64 (*.f64 y (neg.f64 x)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (*.f64 2/3 (log1p.f64 (*.f64 y (neg.f64 x))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 (*.f64 y (neg.f64 x))) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 (*.f64 y (neg.f64 x))) 1/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 1/3 (log1p.f64 (*.f64 y (neg.f64 x)))) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2/3 (log1p.f64 (*.f64 y (neg.f64 x)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (*.f64 y (neg.f64 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 x (*.f64 y (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 x (fma.f64 y (neg.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (fma.f64 y (neg.f64 x) 1)) x)) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (fma.f64 y (neg.f64 x) 1)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (fma.f64 y (neg.f64 x) 1)) x))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (fma.f64 y (neg.f64 x) 1)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (-.f64 1 (pow.f64 (*.f64 x y) 3))) (fma.f64 (*.f64 x y) (fma.f64 x y 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (-.f64 1 (pow.f64 (*.f64 x y) 2))) (fma.f64 x y 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) (cbrt.f64 x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (fma.f64 y (neg.f64 x) 1) 3) (pow.f64 x 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (fma.f64 y (neg.f64 x) 1)) (sqrt.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1)))) 2)) (cbrt.f64 (log.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1))))) (sqrt.f64 (log.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (fma.f64 y (neg.f64 x) 1)) x))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (*.f64 y (neg.f64 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 x (*.f64 y (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (*.f64 y (neg.f64 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 x (*.f64 y (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 (*.f64 y (neg.f64 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 x (*.f64 y (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 (*.f64 y (neg.f64 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 x (*.f64 y (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (*.f64 y (neg.f64 x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 x (*.f64 y (neg.f64 x))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (+.f64 (log.f64 x) (*.f64 2/3 (log1p.f64 (*.f64 y (neg.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) (sqrt.f64 x)) 4) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1)) 2) x) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) (sqrt.f64 x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (+.f64 (log.f64 x) (*.f64 2/3 (log1p.f64 (*.f64 y (neg.f64 x)))))) 2)) (cbrt.f64 (+.f64 (log.f64 x) (*.f64 2/3 (log1p.f64 (*.f64 y (neg.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (+.f64 (log.f64 x) (*.f64 2/3 (log1p.f64 (*.f64 y (neg.f64 x))))))) (sqrt.f64 (+.f64 (log.f64 x) (*.f64 2/3 (log1p.f64 (*.f64 y (neg.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) (sqrt.f64 x)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1)) 2) x))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log.f64 x) (*.f64 2/3 (log1p.f64 (*.f64 y (neg.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (+.f64 (log.f64 x) (*.f64 2/3 (log1p.f64 (*.f64 y (neg.f64 x))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (pow.f64 (*.f64 x (fma.f64 y (neg.f64 x) 1)) 2) x)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (+.f64 (log.f64 x) (*.f64 2/3 (log1p.f64 (*.f64 y (neg.f64 x)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) (sqrt.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (+.f64 (log.f64 x) (*.f64 2/3 (log1p.f64 (*.f64 y (neg.f64 x))))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))) 2) (cbrt.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 y (neg.f64 x) 1) 1/6) (pow.f64 (fma.f64 y (neg.f64 x) 1) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))) 4)) (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 1 (pow.f64 (*.f64 x y) 3))) (cbrt.f64 (fma.f64 (*.f64 x y) (fma.f64 x y 1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 1 (pow.f64 (*.f64 x y) 2))) (cbrt.f64 (fma.f64 x y 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 y (neg.f64 x) 1) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (*.f64 1/3 (log1p.f64 (*.f64 y (neg.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 y (neg.f64 x) 1) 2) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 y (neg.f64 x) 1) 3) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))) 2) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 y (neg.f64 x) 1)) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 y (neg.f64 x) 1) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1/3) (log1p.f64 (*.f64 y (neg.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 1/3 (log1p.f64 (*.f64 y (neg.f64 x))))) 2)) (cbrt.f64 (*.f64 1/3 (log1p.f64 (*.f64 y (neg.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (*.f64 1/3 (log1p.f64 (*.f64 y (neg.f64 x)))))) (sqrt.f64 (*.f64 1/3 (log1p.f64 (*.f64 y (neg.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 1/3 (log1p.f64 (*.f64 y (neg.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (*.f64 y (neg.f64 x))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (log1p.f64 (*.f64 y (neg.f64 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log1p.f64 (*.f64 y (neg.f64 x)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (cbrt.f64 (fma.f64 y (neg.f64 x) 1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/6 (log1p.f64 (*.f64 y (neg.f64 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 (*.f64 y (neg.f64 x))) 1) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 (*.f64 y (neg.f64 x))) 1/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 1/3 (log1p.f64 (*.f64 y (neg.f64 x)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2/3 (log1p.f64 (*.f64 y (neg.f64 x)))) 1) 1/2))))))"]],"rules":[["egg-rr",41],["egg-rr",24],["egg-rr",41],["egg-rr",27]],"stop":[["node limit",1]],"time":57.799072265625,"type":"rewrite"},{"count":[[181,163]],"egraph":[[3,5303,646,0.022636666],[2,1236,646,0.009966666],[1,323,681,0.0025986240000000003],[0,104,772,0.000568166]],"inputs":[["1","(+.f64 1 (*.f64 -2/3 (*.f64 y x)))","(+.f64 (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 y 2)) (*.f64 1/9 (pow.f64 y 2))) (pow.f64 x 2)) (+.f64 1 (*.f64 -2/3 (*.f64 y x))))","(+.f64 (*.f64 (+.f64 (*.f64 -2/3 (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (*.f64 2/9 (pow.f64 y 3)))) (*.f64 2/27 (pow.f64 y 3))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 y 2)) (*.f64 1/9 (pow.f64 y 2))) (pow.f64 x 2)) (+.f64 1 (*.f64 -2/3 (*.f64 y x)))))","1","(+.f64 1 (*.f64 -2/3 (*.f64 y x)))","(+.f64 (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 x 2)) (*.f64 1/9 (pow.f64 x 2))) (pow.f64 y 2)) (+.f64 1 (*.f64 -2/3 (*.f64 y x))))","(+.f64 (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 x 2)) (*.f64 1/9 (pow.f64 x 2))) (pow.f64 y 2)) (+.f64 (*.f64 (+.f64 (*.f64 2/27 (pow.f64 x 3)) (*.f64 -2/3 (+.f64 (*.f64 2/9 (pow.f64 x 3)) (*.f64 -1/27 (pow.f64 x 3))))) (pow.f64 y 3)) (+.f64 1 (*.f64 -2/3 (*.f64 y x)))))","x","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","x","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","x","(+.f64 (*.f64 -2/3 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -2/3 (*.f64 y (pow.f64 x 2))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2))) (pow.f64 x 3))) x))","(+.f64 (*.f64 -2/3 (*.f64 y (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -8/27 (pow.f64 y 3)) (*.f64 -4/3 (*.f64 y (-.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2))) (pow.f64 x 3))) x)))","x","(+.f64 (*.f64 -2/3 (*.f64 y (pow.f64 x 2))) x)","(+.f64 (*.f64 -2/3 (*.f64 y (pow.f64 x 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (pow.f64 x 2) (*.f64 4/3 (pow.f64 x 2))) x))) x))","(+.f64 (*.f64 -2/3 (*.f64 y (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 y 3) (*.f64 (+.f64 (*.f64 -8/27 (pow.f64 x 3)) (*.f64 -4/3 (*.f64 (-.f64 (pow.f64 x 2) (*.f64 4/3 (pow.f64 x 2))) x))) x))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (pow.f64 x 2) (*.f64 4/3 (pow.f64 x 2))) x))) x)))","1","(+.f64 1 (*.f64 -1/3 (*.f64 y x)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 -1/3 (*.f64 y x))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 -1/3 (*.f64 y x)) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (*.f64 2/9 (pow.f64 y 3))) (pow.f64 x 3))))))","1","(+.f64 1 (*.f64 -1/3 (*.f64 y x)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 -1/3 (*.f64 y x))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 -1/3 (*.f64 y x)) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 2/9 (pow.f64 x 3)) (*.f64 -1/27 (pow.f64 x 3))) (pow.f64 y 3))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -2/3 (*.f64 y x)))","(fma.f64 -2/3 (*.f64 y x) 1)","(fma.f64 y (*.f64 -2/3 x) 1)","(+.f64 (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 y 2)) (*.f64 1/9 (pow.f64 y 2))) (pow.f64 x 2)) (+.f64 1 (*.f64 -2/3 (*.f64 y x))))","(fma.f64 (*.f64 (*.f64 y y) -1/9) (*.f64 x x) (+.f64 1 (*.f64 -2/3 (*.f64 y x))))","(fma.f64 (*.f64 y y) (*.f64 (*.f64 x x) -1/9) (fma.f64 -2/3 (*.f64 y x) 1))","(fma.f64 y (*.f64 y (*.f64 (*.f64 x x) -1/9)) (fma.f64 y (*.f64 -2/3 x) 1))","(fma.f64 -2/3 (*.f64 y x) (fma.f64 -1/9 (*.f64 y (*.f64 y (*.f64 x x))) 1))","(+.f64 (*.f64 (+.f64 (*.f64 -2/3 (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (*.f64 2/9 (pow.f64 y 3)))) (*.f64 2/27 (pow.f64 y 3))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 y 2)) (*.f64 1/9 (pow.f64 y 2))) (pow.f64 x 2)) (+.f64 1 (*.f64 -2/3 (*.f64 y x)))))","(fma.f64 (fma.f64 -2/3 (*.f64 (pow.f64 y 3) 5/27) (*.f64 (pow.f64 y 3) 2/27)) (pow.f64 x 3) (fma.f64 (*.f64 (*.f64 y y) -1/9) (*.f64 x x) (+.f64 1 (*.f64 -2/3 (*.f64 y x)))))","(fma.f64 (fma.f64 (pow.f64 y 3) 2/27 (*.f64 (pow.f64 y 3) -10/81)) (pow.f64 x 3) (fma.f64 (*.f64 y y) (*.f64 (*.f64 x x) -1/9) (fma.f64 -2/3 (*.f64 y x) 1)))","(fma.f64 (pow.f64 y 3) (*.f64 (pow.f64 x 3) -4/81) (fma.f64 y (*.f64 y (*.f64 (*.f64 x x) -1/9)) (fma.f64 y (*.f64 -2/3 x) 1)))","(fma.f64 y (*.f64 y (*.f64 x (*.f64 x -1/9))) (fma.f64 (pow.f64 y 3) (*.f64 (pow.f64 x 3) -4/81) (fma.f64 -2/3 (*.f64 y x) 1)))","1","(+.f64 1 (*.f64 -2/3 (*.f64 y x)))","(fma.f64 -2/3 (*.f64 y x) 1)","(fma.f64 y (*.f64 -2/3 x) 1)","(+.f64 (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 x 2)) (*.f64 1/9 (pow.f64 x 2))) (pow.f64 y 2)) (+.f64 1 (*.f64 -2/3 (*.f64 y x))))","(fma.f64 (*.f64 (*.f64 y y) -1/9) (*.f64 x x) (+.f64 1 (*.f64 -2/3 (*.f64 y x))))","(fma.f64 (*.f64 y y) (*.f64 (*.f64 x x) -1/9) (fma.f64 -2/3 (*.f64 y x) 1))","(fma.f64 y (*.f64 y (*.f64 (*.f64 x x) -1/9)) (fma.f64 y (*.f64 -2/3 x) 1))","(fma.f64 -2/3 (*.f64 y x) (fma.f64 -1/9 (*.f64 y (*.f64 y (*.f64 x x))) 1))","(+.f64 (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 x 2)) (*.f64 1/9 (pow.f64 x 2))) (pow.f64 y 2)) (+.f64 (*.f64 (+.f64 (*.f64 2/27 (pow.f64 x 3)) (*.f64 -2/3 (+.f64 (*.f64 2/9 (pow.f64 x 3)) (*.f64 -1/27 (pow.f64 x 3))))) (pow.f64 y 3)) (+.f64 1 (*.f64 -2/3 (*.f64 y x)))))","(fma.f64 (fma.f64 -2/3 (*.f64 (pow.f64 y 3) 5/27) (*.f64 (pow.f64 y 3) 2/27)) (pow.f64 x 3) (fma.f64 (*.f64 (*.f64 y y) -1/9) (*.f64 x x) (+.f64 1 (*.f64 -2/3 (*.f64 y x)))))","(fma.f64 (fma.f64 (pow.f64 y 3) 2/27 (*.f64 (pow.f64 y 3) -10/81)) (pow.f64 x 3) (fma.f64 (*.f64 y y) (*.f64 (*.f64 x x) -1/9) (fma.f64 -2/3 (*.f64 y x) 1)))","(fma.f64 (pow.f64 y 3) (*.f64 (pow.f64 x 3) -4/81) (fma.f64 y (*.f64 y (*.f64 (*.f64 x x) -1/9)) (fma.f64 y (*.f64 -2/3 x) 1)))","(fma.f64 y (*.f64 y (*.f64 x (*.f64 x -1/9))) (fma.f64 (pow.f64 y 3) (*.f64 (pow.f64 x 3) -4/81) (fma.f64 -2/3 (*.f64 y x) 1)))","x","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","x","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(*.f64 -1 (*.f64 y (pow.f64 x 2)))","(neg.f64 (*.f64 y (*.f64 x x)))","(*.f64 y (neg.f64 (*.f64 x x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -1 (*.f64 y (*.f64 x x)) x)","(-.f64 x (*.f64 y (*.f64 x x)))","x","(+.f64 (*.f64 -2/3 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -2/3 (*.f64 y (*.f64 x x)) x)","(*.f64 (fma.f64 y (*.f64 -2/3 x) 1) x)","(*.f64 (fma.f64 -2/3 (*.f64 y x) 1) x)","(+.f64 (*.f64 -2/3 (*.f64 y (pow.f64 x 2))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2))) (pow.f64 x 3))) x))","(fma.f64 -2/3 (*.f64 y (*.f64 x x)) (fma.f64 1/3 (*.f64 (pow.f64 x 3) (+.f64 (*.f64 y y) (*.f64 -4/3 (*.f64 y y)))) x))","(fma.f64 -2/3 (*.f64 y (*.f64 x x)) (fma.f64 1/3 (*.f64 (pow.f64 x 3) (*.f64 -1/3 (*.f64 y y))) x))","(fma.f64 -2/3 (*.f64 y (*.f64 x x)) (fma.f64 (*.f64 (*.f64 y y) -1/9) (pow.f64 x 3) x))","(fma.f64 -2/3 (*.f64 y (*.f64 x x)) (fma.f64 (*.f64 y (*.f64 y -1/9)) (pow.f64 x 3) x))","(+.f64 (*.f64 -2/3 (*.f64 y (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -8/27 (pow.f64 y 3)) (*.f64 -4/3 (*.f64 y (-.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2)))))) (pow.f64 x 4))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (pow.f64 y 2) (*.f64 4/3 (pow.f64 y 2))) (pow.f64 x 3))) x)))","(fma.f64 -2/3 (*.f64 y (*.f64 x x)) (fma.f64 -1/3 (*.f64 (fma.f64 -8/27 (pow.f64 y 3) (*.f64 -4/3 (*.f64 y (+.f64 (*.f64 y y) (*.f64 -4/3 (*.f64 y y)))))) (pow.f64 x 4)) (fma.f64 1/3 (*.f64 (pow.f64 x 3) (+.f64 (*.f64 y y) (*.f64 -4/3 (*.f64 y y)))) x)))","(fma.f64 -2/3 (*.f64 y (*.f64 x x)) (fma.f64 (*.f64 -1/3 (fma.f64 -4/3 (*.f64 (pow.f64 y 3) -1/3) (*.f64 (pow.f64 y 3) -8/27))) (pow.f64 x 4) (fma.f64 1/3 (*.f64 (pow.f64 x 3) (*.f64 -1/3 (*.f64 y y))) x)))","(fma.f64 -2/3 (*.f64 y (*.f64 x x)) (fma.f64 (fma.f64 (pow.f64 y 3) -8/27 (*.f64 4/9 (pow.f64 y 3))) (*.f64 -1/3 (pow.f64 x 4)) (fma.f64 (*.f64 (*.f64 y y) -1/9) (pow.f64 x 3) x)))","(fma.f64 -2/3 (*.f64 y (*.f64 x x)) (fma.f64 (fma.f64 (pow.f64 y 3) -8/27 (*.f64 4/9 (pow.f64 y 3))) (*.f64 -1/3 (pow.f64 x 4)) (fma.f64 (*.f64 y (*.f64 y -1/9)) (pow.f64 x 3) x)))","x","(+.f64 (*.f64 -2/3 (*.f64 y (pow.f64 x 2))) x)","(fma.f64 -2/3 (*.f64 y (*.f64 x x)) x)","(*.f64 (fma.f64 y (*.f64 -2/3 x) 1) x)","(*.f64 (fma.f64 -2/3 (*.f64 y x) 1) x)","(+.f64 (*.f64 -2/3 (*.f64 y (pow.f64 x 2))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (pow.f64 x 2) (*.f64 4/3 (pow.f64 x 2))) x))) x))","(fma.f64 -2/3 (*.f64 y (*.f64 x x)) (fma.f64 1/3 (*.f64 (pow.f64 x 3) (+.f64 (*.f64 y y) (*.f64 -4/3 (*.f64 y y)))) x))","(fma.f64 -2/3 (*.f64 y (*.f64 x x)) (fma.f64 1/3 (*.f64 (pow.f64 x 3) (*.f64 -1/3 (*.f64 y y))) x))","(fma.f64 -2/3 (*.f64 y (*.f64 x x)) (fma.f64 (*.f64 (*.f64 y y) -1/9) (pow.f64 x 3) x))","(fma.f64 -2/3 (*.f64 y (*.f64 x x)) (fma.f64 (*.f64 y (*.f64 y -1/9)) (pow.f64 x 3) x))","(+.f64 (*.f64 -2/3 (*.f64 y (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 y 3) (*.f64 (+.f64 (*.f64 -8/27 (pow.f64 x 3)) (*.f64 -4/3 (*.f64 (-.f64 (pow.f64 x 2) (*.f64 4/3 (pow.f64 x 2))) x))) x))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (pow.f64 x 2) (*.f64 4/3 (pow.f64 x 2))) x))) x)))","(fma.f64 -2/3 (*.f64 y (*.f64 x x)) (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 y 3) (fma.f64 -8/27 (pow.f64 x 3) (*.f64 -4/3 (*.f64 x (+.f64 (*.f64 x x) (*.f64 -4/3 (*.f64 x x))))))) x) (fma.f64 1/3 (*.f64 (*.f64 y y) (*.f64 x (+.f64 (*.f64 x x) (*.f64 -4/3 (*.f64 x x))))) x)))","(fma.f64 -2/3 (*.f64 y (*.f64 x x)) (fma.f64 -1/3 (*.f64 x (*.f64 (pow.f64 y 3) (fma.f64 (pow.f64 x 3) -8/27 (*.f64 (*.f64 -4/3 x) (*.f64 -1/3 (*.f64 x x)))))) (fma.f64 1/3 (*.f64 y (*.f64 y (*.f64 x (*.f64 -1/3 (*.f64 x x))))) x)))","(fma.f64 -2/3 (*.f64 y (*.f64 x x)) (fma.f64 (pow.f64 y 3) (*.f64 -1/3 (*.f64 x (fma.f64 x (*.f64 4/9 (*.f64 x x)) (*.f64 (pow.f64 x 3) -8/27)))) (fma.f64 (*.f64 (*.f64 y y) -1/9) (pow.f64 x 3) x)))","(+.f64 x (*.f64 x (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 y 3) (fma.f64 x (*.f64 4/9 (*.f64 x x)) (*.f64 (pow.f64 x 3) -8/27)))) (*.f64 y (+.f64 (*.f64 y (*.f64 x (*.f64 x -1/9))) (*.f64 -2/3 x))))))","1","(+.f64 1 (*.f64 -1/3 (*.f64 y x)))","(+.f64 1 (*.f64 (*.f64 y x) -1/3))","(fma.f64 (*.f64 y x) -1/3 1)","(fma.f64 y (*.f64 x -1/3) 1)","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 -1/3 (*.f64 y x))))","(fma.f64 -1/9 (*.f64 (*.f64 y y) (*.f64 x x)) (+.f64 1 (*.f64 (*.f64 y x) -1/3)))","(fma.f64 -1/9 (*.f64 y (*.f64 y (*.f64 x x))) (fma.f64 (*.f64 y x) -1/3 1))","(fma.f64 y (*.f64 y (*.f64 (*.f64 x x) -1/9)) (fma.f64 y (*.f64 x -1/3) 1))","(fma.f64 y (*.f64 x -1/3) (fma.f64 -1/9 (*.f64 y (*.f64 y (*.f64 x x))) 1))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 -1/3 (*.f64 y x)) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1/27 (pow.f64 y 3)) (*.f64 2/9 (pow.f64 y 3))) (pow.f64 x 3))))))","(fma.f64 -1/9 (*.f64 (*.f64 y y) (*.f64 x x)) (+.f64 1 (*.f64 -1/3 (+.f64 (*.f64 y x) (*.f64 (*.f64 (pow.f64 y 3) 5/27) (pow.f64 x 3))))))","(fma.f64 (*.f64 y (*.f64 y -1/9)) (*.f64 x x) (fma.f64 -1/3 (fma.f64 y x (*.f64 (pow.f64 y 3) (*.f64 (pow.f64 x 3) 5/27))) 1))","(fma.f64 y (*.f64 y (*.f64 (*.f64 x x) -1/9)) (fma.f64 y (*.f64 x -1/3) (fma.f64 (pow.f64 y 3) (*.f64 -5/81 (pow.f64 x 3)) 1)))","(fma.f64 y (*.f64 y (*.f64 x (*.f64 x -1/9))) (fma.f64 y (*.f64 x -1/3) (fma.f64 (pow.f64 y 3) (*.f64 -5/81 (pow.f64 x 3)) 1)))","1","(+.f64 1 (*.f64 -1/3 (*.f64 y x)))","(+.f64 1 (*.f64 (*.f64 y x) -1/3))","(fma.f64 (*.f64 y x) -1/3 1)","(fma.f64 y (*.f64 x -1/3) 1)","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (*.f64 -1/3 (*.f64 y x))))","(fma.f64 -1/9 (*.f64 (*.f64 y y) (*.f64 x x)) (+.f64 1 (*.f64 (*.f64 y x) -1/3)))","(fma.f64 -1/9 (*.f64 y (*.f64 y (*.f64 x x))) (fma.f64 (*.f64 y x) -1/3 1))","(fma.f64 y (*.f64 y (*.f64 (*.f64 x x) -1/9)) (fma.f64 y (*.f64 x -1/3) 1))","(fma.f64 y (*.f64 x -1/3) (fma.f64 -1/9 (*.f64 y (*.f64 y (*.f64 x x))) 1))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 1 (+.f64 (*.f64 -1/3 (*.f64 y x)) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 2/9 (pow.f64 x 3)) (*.f64 -1/27 (pow.f64 x 3))) (pow.f64 y 3))))))","(fma.f64 -1/9 (*.f64 (*.f64 y y) (*.f64 x x)) (+.f64 1 (*.f64 -1/3 (+.f64 (*.f64 y x) (*.f64 (*.f64 (pow.f64 y 3) 5/27) (pow.f64 x 3))))))","(fma.f64 (*.f64 y (*.f64 y -1/9)) (*.f64 x x) (fma.f64 -1/3 (fma.f64 y x (*.f64 (pow.f64 y 3) (*.f64 (pow.f64 x 3) 5/27))) 1))","(fma.f64 y (*.f64 y (*.f64 (*.f64 x x) -1/9)) (fma.f64 y (*.f64 x -1/3) (fma.f64 (pow.f64 y 3) (*.f64 -5/81 (pow.f64 x 3)) 1)))","(fma.f64 y (*.f64 y (*.f64 x (*.f64 x -1/9))) (fma.f64 y (*.f64 x -1/3) (fma.f64 (pow.f64 y 3) (*.f64 -5/81 (pow.f64 x 3)) 1)))"]],"stop":[["node limit",1]],"time":42.166015625,"type":"simplify"},{"compiler":[[4489,2752]],"time":53.385009765625,"type":"eval"},{"alts":[["(*.f64 (*.f64 (-.f64 1 (*.f64 x y)) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))","fresh",0.7427103028217029],["(*.f64 (*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)) (cbrt.f64 (-.f64 1 (*.f64 x y))))","done",0.2950364258319563],["(-.f64 x (*.f64 y (*.f64 x x)))","fresh",6.778734399139254],["(+.f64 x (*.f64 x (*.f64 x (neg.f64 y))))","done",0.09765625],["(/.f64 (*.f64 x (-.f64 1 (pow.f64 (*.f64 x y) 2))) (fma.f64 x y 1))","fresh",8.34765625],["(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))) 2)) (cbrt.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))))","fresh",0.9157919062938125]],"compiler":[[15,10],[19,13],[9,5],[10,6],[16,11],[34,23]],"count":[[217,6]],"kept":[{"done":[1,1],"fresh":[4,2],"new":[211,2],"picked":[1,1]}],"min-error":[0.00390625],"time":58.141845703125,"type":"prune"},{"accuracy":[0.09765625],"baseline":[0.09765625],"branch":[["x",0.09765625,1],["y",0.09765625,1],["(*.f64 x (-.f64 1 (*.f64 x y)))",0.09765625,1],["(*.f64 x (-.f64 1 (*.f64 x y)))",0.09765625,1]],"compiler":[[3,2],[3,2],[9,6],[9,6],[188,107]],"count":[[14,1]],"inputs":[["(-.f64 x (*.f64 y (*.f64 x x)))","(/.f64 (*.f64 x (-.f64 1 (pow.f64 (*.f64 x y) 2))) (fma.f64 x y 1))","(*.f64 (*.f64 (-.f64 1 (*.f64 x y)) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 x))","(*.f64 (*.f64 x (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x y))) 2)) (cbrt.f64 (-.f64 1 (*.f64 x y))))","(/.f64 (*.f64 x (-.f64 1 (pow.f64 (*.f64 x y) 2))) (+.f64 1 (*.f64 x y)))","(*.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))) 2)) (cbrt.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y))))))","(+.f64 x (*.f64 y (*.f64 x (neg.f64 x))))","(pow.f64 (sqrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 2)","(pow.f64 (cbrt.f64 (*.f64 x (-.f64 1 (*.f64 x y)))) 3)","(+.f64 (*.f64 -1 (*.f64 y (pow.f64 x 2))) x)","(/.f64 (*.f64 (-.f64 1 (pow.f64 (*.f64 x y) 2)) x) (+.f64 1 (*.f64 x y)))","(/.f64 (*.f64 (-.f64 1 (pow.f64 (*.f64 x y) 3)) x) (+.f64 1 (*.f64 (*.f64 x y) (+.f64 1 (*.f64 x y)))))","(+.f64 x (*.f64 x (*.f64 x (neg.f64 y))))","(*.f64 x (-.f64 1 (*.f64 x y)))"]],"link":["."],"name":["Numeric.SpecFunctions:log1p from math-functions-0.1.5.2, A"],"oracle":[42.00309669998657],"outputs":[["(+.f64 x (*.f64 x (*.f64 x (neg.f64 y))))"]],"time":26.14306640625,"times":[["x",5.69189453125],["y",5.751220703125],["(*.f64 x (-.f64 1 (*.f64 x y)))",5.6748046875],["(*.f64 x (-.f64 1 (*.f64 x y)))",5.942138671875]],"type":"regimes"},{"compiler":[[9,5]],"egraph":[[5,49,10,0.000298749],[4,47,10,0.000239208],[3,42,10,0.000179166],[2,28,10,0.000118374],[1,16,12,6.4916e-5],[0,7,12,3.0458e-5]],"inputs":[["(+.f64 x (*.f64 x (*.f64 x (neg.f64 y))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 x (*.f64 x (*.f64 x (neg.f64 y))))","(-.f64 x (*.f64 x (*.f64 x y)))"]],"stop":[["fuel",1],["saturated",1]],"time":8.56689453125,"type":"simplify"},{"time":0.005126953125,"type":"soundness"},{"compiler":[[9,5]],"remove-preprocessing":[[]],"time":7.41796875,"type":"end"}]