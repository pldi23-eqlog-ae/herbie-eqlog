[{"compiler":[[12,8]],"method":["search"],"sampling":[[12,0.8697554756654426,0.12926820025313646,0.0009763240814208984],[11,0.8321945269126445,0.1668291490059346,0.0009763240814208984],[10,0.7473165388219059,0.25170713709667325,0.0009763240814208984],[9,0.6751214684918523,0.3239022074267268,0.0009763240814208984],[8,0.5229264553636312,0.47609722055494785,0.0009763240814208984],[7,0.39024362340569496,0.6087800525128841,0.0009763240814208984],[6,0.2809754088521004,0.7180482670664787,0.0009763240814208984],[5,0.18731693923473358,0.8117067366838455,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":34.56689453125,"type":"analyze"},{"outcomes":[["body",256,"valid",315.008056640625,8256]],"time":323.096923828125,"type":"sample"},{"compiler":[[11,7]],"egraph":[[0,2,2,2.334e-6],[12,7717,26,0.07559183400000001],[11,7613,26,0.06587137600000001],[10,7411,26,0.056731001],[9,6876,26,0.047389501],[8,5990,26,0.037936543],[7,3548,26,0.026254585000000004],[6,1260,26,0.012307251000000002],[5,466,26,0.0045191680000000005],[4,228,26,0.002242376],[3,106,26,0.000873626],[2,54,26,0.000385584],[1,33,26,0.000182459],[0,12,26,8.3667e-5]],"inputs":[["0","1"],["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))","(/.f64 (-.f64 y x) (-.f64 2 (+.f64 y x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))","(/.f64 (-.f64 y x) (-.f64 2 (+.f64 y x)))","(/.f64 (-.f64 y x) (-.f64 2 (+.f64 x y)))","(/.f64 (-.f64 x y) (+.f64 x (+.f64 y -2)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":103.694091796875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[13,7631,13,0.085194167],[12,7611,13,0.076780667],[11,7543,13,0.06641591699999999],[10,7159,13,0.055979208999999995],[9,6597,13,0.043501292],[8,4785,13,0.031211708999999997],[7,2453,13,0.018784501],[6,887,13,0.007990958999999999],[5,357,13,0.0030473339999999996],[4,188,13,0.001313501],[3,77,13,0.0005917089999999999],[2,35,13,0.000249167],[1,18,13,0.000114583],[0,8,13,4.7375e-5]],"inputs":[["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))","(/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))"]],"stop":[["node limit",1]],"time":96.989990234375,"type":"simplify"},{"compiler":[[20,11]],"time":0.41015625,"type":"eval"},{"alts":[["(/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))","next",0.03125]],"compiler":[[11,7],[11,7]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.03125],"time":0.831787109375,"type":"prune"},{"compiler":[[25,13]],"locations":[["(/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))",0.03125,true]],"time":5.7421875,"type":"localize"},{"count":[[1,24]],"series":[["(/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))","y","-inf",0.473876953125],["(/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))","y","inf",0.463134765625],["(/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))","y","0",0.597900390625],["(/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))","x","-inf",0.385986328125],["(/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))","x","inf",0.469970703125],["(/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))","x","0",0.637939453125]],"time":3.14501953125,"type":"series"},{"count":[[1,61]],"egraph":[[2,3178,13,0.026499333],[1,200,13,0.003782917],[0,8,13,0.00024575]],"inputs":[["(/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 2 (+.f64 x y))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 2 (+.f64 x y))) (/.f64 y (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 1 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 2 (+.f64 x y)) (-.f64 x y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 2 (+.f64 x y)) (-.f64 x y)) -2)) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (*.f64 (cbrt.f64 (-.f64 x y)) (/.f64 1 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x y)) (*.f64 (sqrt.f64 (-.f64 x y)) (/.f64 1 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 x y)) (/.f64 1 (neg.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 2 (+.f64 x y))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2) (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 2 (+.f64 x y)) -1/2) (/.f64 (-.f64 x y) (sqrt.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) 1) (/.f64 (cbrt.f64 (-.f64 x y)) (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 x y)) 1) (/.f64 (sqrt.f64 (-.f64 x y)) (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 x y)) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)) (/.f64 (sqrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (sqrt.f64 (-.f64 2 (+.f64 x y)))) (/.f64 (cbrt.f64 (-.f64 x y)) (sqrt.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 (pow.f64 (-.f64 2 x) 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y (-.f64 2 x)) (pow.f64 (-.f64 2 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 y y))) (+.f64 y (-.f64 2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 2 (+.f64 x y)) (-.f64 x y)) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 2 (+.f64 x y)) (-.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (-.f64 x y) 3) (pow.f64 (-.f64 2 (+.f64 x y)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 2 (+.f64 x y)) (-.f64 x y)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 x y) (neg.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 2 (+.f64 x y)) (-.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 x y) 3) (pow.f64 (-.f64 2 (+.f64 x y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 2 (+.f64 x y)) (-.f64 x y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (-.f64 2 (+.f64 x y))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (-.f64 2 (+.f64 x y))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2) (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) (sqrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2) (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 2 (+.f64 x y)) -1/2) (/.f64 x (sqrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 2 (+.f64 x y))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 2 (+.f64 x y))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 2 (+.f64 x y)))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 2 (+.f64 x y)))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 (pow.f64 (-.f64 2 x) 3) (pow.f64 y 3))) (fma.f64 y (+.f64 y (-.f64 2 x)) (pow.f64 (-.f64 2 x) 2)) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 y y))) (+.f64 y (-.f64 2 x)) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))))))"]],"rules":[["egg-rr",61]],"stop":[["node limit",1]],"time":46.285888671875,"type":"rewrite"},{"count":[[85,96]],"egraph":[[3,7180,693,0.029233374],[2,1252,693,0.011806124000000001],[1,343,807,0.002327916],[0,109,865,0.000500833]],"inputs":[["(*.f64 -1 (/.f64 y (-.f64 2 y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 2 y))) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 2 y))) (+.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x) (/.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 x 2)) (-.f64 2 y))))","(+.f64 (/.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 x 3)) (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -1 (/.f64 y (-.f64 2 y))) (+.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x) (/.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 x 2)) (-.f64 2 y)))))","-1","(-.f64 (*.f64 2 (/.f64 y x)) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)) (pow.f64 x 2)) (*.f64 2 (/.f64 y x))) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 y x)) (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2)) (pow.f64 x 3)))) (+.f64 1 (*.f64 2 (/.f64 1 x))))","-1","(-.f64 (*.f64 2 (/.f64 y x)) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)) (pow.f64 x 2)) (*.f64 2 (/.f64 y x))) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 y x)) (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2)) (pow.f64 x 3)))) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(/.f64 x (-.f64 2 x))","(+.f64 (/.f64 x (-.f64 2 x)) (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))) (pow.f64 y 2))) (+.f64 (/.f64 x (-.f64 2 x)) (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))) (pow.f64 y 2))) (+.f64 (/.f64 x (-.f64 2 x)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (/.f64 1 (pow.f64 (-.f64 2 x) 3))))) (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y)))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x y))) (*.f64 -1 (/.f64 (-.f64 2 x) y)))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (-.f64 2 x)) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y)))) (*.f64 -1 (/.f64 (-.f64 2 x) y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x)))) (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 x y)) (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)) (pow.f64 y 3))))) (*.f64 -1 (/.f64 (-.f64 2 x) y)))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 x) 2) y)))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 x) 2) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x)) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 2 x) 2) (pow.f64 (-.f64 2 x) 2)) (pow.f64 y 3))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 x) 2) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x)) (pow.f64 y 2))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (/.f64 y (-.f64 2 y)))","(neg.f64 (/.f64 y (-.f64 2 y)))","(/.f64 (neg.f64 y) (-.f64 2 y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 2 y))) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x))","(fma.f64 -1 (/.f64 y (-.f64 2 y)) (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x))","(-.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x) (/.f64 y (-.f64 2 y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 2 y))) (+.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x) (/.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 x 2)) (-.f64 2 y))))","(fma.f64 -1 (/.f64 y (-.f64 2 y)) (fma.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (/.f64 (-.f64 2 y) (*.f64 x x)))))","(-.f64 (fma.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x (*.f64 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)) (*.f64 x x))) (/.f64 y (-.f64 2 y)))","(fma.f64 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)) (*.f64 x x) (-.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x) (/.f64 y (-.f64 2 y))))","(+.f64 (/.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 x 3)) (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -1 (/.f64 y (-.f64 2 y))) (+.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x) (/.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (pow.f64 x 2)) (-.f64 2 y)))))","(+.f64 (fma.f64 -1 (/.f64 y (-.f64 2 y)) (fma.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (/.f64 (-.f64 2 y) (*.f64 x x))))) (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (/.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 x 3))))","(+.f64 (fma.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x (*.f64 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)) (*.f64 x x))) (-.f64 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (/.f64 (pow.f64 (-.f64 2 y) 2) (pow.f64 x 3))) (/.f64 y (-.f64 2 y))))","(+.f64 (-.f64 (*.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) x) (/.f64 y (-.f64 2 y))) (*.f64 (/.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (-.f64 2 y)) (+.f64 (*.f64 x x) (/.f64 (pow.f64 x 3) (-.f64 2 y)))))","-1","(-.f64 (*.f64 2 (/.f64 y x)) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(-.f64 (/.f64 (*.f64 y 2) x) (+.f64 1 (/.f64 2 x)))","(-.f64 (fma.f64 2 (/.f64 y x) -1) (/.f64 2 x))","(+.f64 (/.f64 (fma.f64 y 2 -2) x) -1)","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)) (pow.f64 x 2)) (*.f64 2 (/.f64 y x))) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 (/.f64 (fma.f64 2 y -2) (/.f64 (*.f64 x x) (-.f64 2 y))) (-.f64 (/.f64 (*.f64 y 2) x) (+.f64 1 (/.f64 2 x))))","(+.f64 (-.f64 (fma.f64 2 (/.f64 y x) -1) (/.f64 2 x)) (*.f64 (/.f64 (-.f64 2 y) x) (/.f64 (fma.f64 y 2 -2) x)))","(fma.f64 (/.f64 (-.f64 2 y) x) (/.f64 (fma.f64 y 2 -2) x) (+.f64 (/.f64 (fma.f64 y 2 -2) x) -1))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 y x)) (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2)) (pow.f64 x 3)))) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 (/.f64 (fma.f64 2 y -2) (/.f64 (*.f64 x x) (-.f64 2 y))) (-.f64 (fma.f64 2 (/.f64 y x) (/.f64 (fma.f64 2 y -2) (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 2 y) 2)))) (+.f64 1 (/.f64 2 x))))","(+.f64 (*.f64 (/.f64 (-.f64 2 y) x) (/.f64 (fma.f64 y 2 -2) x)) (+.f64 (*.f64 (/.f64 (fma.f64 y 2 -2) (pow.f64 x 3)) (pow.f64 (-.f64 2 y) 2)) (-.f64 (fma.f64 2 (/.f64 y x) -1) (/.f64 2 x))))","(+.f64 (+.f64 (/.f64 (fma.f64 y 2 -2) x) -1) (*.f64 (/.f64 (fma.f64 y 2 -2) (*.f64 x x)) (+.f64 (-.f64 2 y) (/.f64 (pow.f64 (-.f64 2 y) 2) x))))","-1","(-.f64 (*.f64 2 (/.f64 y x)) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(-.f64 (/.f64 (*.f64 y 2) x) (+.f64 1 (/.f64 2 x)))","(-.f64 (fma.f64 2 (/.f64 y x) -1) (/.f64 2 x))","(+.f64 (/.f64 (fma.f64 y 2 -2) x) -1)","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)) (pow.f64 x 2)) (*.f64 2 (/.f64 y x))) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 (/.f64 (fma.f64 2 y -2) (/.f64 (*.f64 x x) (-.f64 2 y))) (-.f64 (/.f64 (*.f64 y 2) x) (+.f64 1 (/.f64 2 x))))","(+.f64 (-.f64 (fma.f64 2 (/.f64 y x) -1) (/.f64 2 x)) (*.f64 (/.f64 (-.f64 2 y) x) (/.f64 (fma.f64 y 2 -2) x)))","(fma.f64 (/.f64 (-.f64 2 y) x) (/.f64 (fma.f64 y 2 -2) x) (+.f64 (/.f64 (fma.f64 y 2 -2) x) -1))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (-.f64 2 y)) (pow.f64 x 2)) (+.f64 (*.f64 2 (/.f64 y x)) (/.f64 (*.f64 (-.f64 (*.f64 2 y) 2) (pow.f64 (-.f64 2 y) 2)) (pow.f64 x 3)))) (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 (/.f64 (fma.f64 2 y -2) (/.f64 (*.f64 x x) (-.f64 2 y))) (-.f64 (fma.f64 2 (/.f64 y x) (/.f64 (fma.f64 2 y -2) (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 2 y) 2)))) (+.f64 1 (/.f64 2 x))))","(+.f64 (*.f64 (/.f64 (-.f64 2 y) x) (/.f64 (fma.f64 y 2 -2) x)) (+.f64 (*.f64 (/.f64 (fma.f64 y 2 -2) (pow.f64 x 3)) (pow.f64 (-.f64 2 y) 2)) (-.f64 (fma.f64 2 (/.f64 y x) -1) (/.f64 2 x))))","(+.f64 (+.f64 (/.f64 (fma.f64 y 2 -2) x) -1) (*.f64 (/.f64 (fma.f64 y 2 -2) (*.f64 x x)) (+.f64 (-.f64 2 y) (/.f64 (pow.f64 (-.f64 2 y) 2) x))))","(/.f64 x (-.f64 2 x))","(+.f64 (/.f64 x (-.f64 2 x)) (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y)))","(+.f64 (/.f64 x (-.f64 2 x)) (neg.f64 (*.f64 y (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))))))","(-.f64 (/.f64 x (-.f64 2 x)) (*.f64 y (-.f64 (/.f64 1 (-.f64 2 x)) (/.f64 x (pow.f64 (-.f64 2 x) 2)))))","(fma.f64 y (+.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 -1 (-.f64 2 x))) (/.f64 x (-.f64 2 x)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))) (pow.f64 y 2))) (+.f64 (/.f64 x (-.f64 2 x)) (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y))))","(fma.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 3))) (*.f64 y y)) (+.f64 (/.f64 x (-.f64 2 x)) (neg.f64 (*.f64 y (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2)))))))","(-.f64 (fma.f64 (neg.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (/.f64 x (pow.f64 (-.f64 2 x) 3)))) (*.f64 y y) (/.f64 x (-.f64 2 x))) (*.f64 y (-.f64 (/.f64 1 (-.f64 2 x)) (/.f64 x (pow.f64 (-.f64 2 x) 2)))))","(fma.f64 y (+.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 -1 (-.f64 2 x))) (fma.f64 (*.f64 y y) (+.f64 (/.f64 x (pow.f64 (-.f64 2 x) 3)) (/.f64 -1 (pow.f64 (-.f64 2 x) 2))) (/.f64 x (-.f64 2 x))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)))) (pow.f64 y 2))) (+.f64 (/.f64 x (-.f64 2 x)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (/.f64 1 (pow.f64 (-.f64 2 x) 3))))) (*.f64 -1 (*.f64 (+.f64 (/.f64 1 (-.f64 2 x)) (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 2)))) y)))))","(fma.f64 -1 (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 3))) (*.f64 y y)) (+.f64 (/.f64 x (-.f64 2 x)) (*.f64 -1 (+.f64 (*.f64 (pow.f64 y 3) (fma.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4)) (/.f64 1 (pow.f64 (-.f64 2 x) 3)))) (*.f64 y (+.f64 (/.f64 1 (-.f64 2 x)) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 2))))))))","(-.f64 (fma.f64 -1 (fma.f64 (pow.f64 y 3) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (/.f64 x (pow.f64 (-.f64 2 x) 4))) (*.f64 y (-.f64 (/.f64 1 (-.f64 2 x)) (/.f64 x (pow.f64 (-.f64 2 x) 2))))) (/.f64 x (-.f64 2 x))) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (/.f64 x (pow.f64 (-.f64 2 x) 3))) (*.f64 y y)))","(-.f64 (fma.f64 y (+.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 -1 (-.f64 2 x))) (fma.f64 (*.f64 y y) (+.f64 (/.f64 x (pow.f64 (-.f64 2 x) 3)) (/.f64 -1 (pow.f64 (-.f64 2 x) 2))) (/.f64 x (-.f64 2 x)))) (*.f64 (pow.f64 y 3) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (/.f64 x (pow.f64 (-.f64 2 x) 4)))))","1","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x y))) (*.f64 -1 (/.f64 (-.f64 2 x) y)))","(+.f64 1 (-.f64 (/.f64 (neg.f64 x) y) (/.f64 (neg.f64 (-.f64 2 x)) y)))","(+.f64 (-.f64 1 (/.f64 x y)) (/.f64 (-.f64 2 x) y))","(+.f64 1 (/.f64 (-.f64 (-.f64 2 x) x) y))","(-.f64 (+.f64 1 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (-.f64 2 x)) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y)))) (*.f64 -1 (/.f64 (-.f64 2 x) y)))","(+.f64 1 (-.f64 (+.f64 (/.f64 (neg.f64 x) y) (/.f64 (*.f64 -1 (-.f64 x (-.f64 2 x))) (/.f64 (*.f64 y y) (-.f64 2 x)))) (/.f64 (neg.f64 (-.f64 2 x)) y)))","(+.f64 (/.f64 (-.f64 2 x) y) (+.f64 (-.f64 1 (/.f64 x y)) (*.f64 (/.f64 (-.f64 2 x) (*.f64 y y)) (fma.f64 -1 x (-.f64 2 x)))))","(+.f64 (-.f64 1 (/.f64 x y)) (*.f64 (/.f64 (-.f64 2 x) y) (-.f64 (/.f64 (-.f64 (-.f64 2 x) x) y) -1)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 2 x) (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x)))) (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 x y)) (/.f64 (*.f64 (-.f64 (*.f64 -1 x) (*.f64 -1 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)) (pow.f64 y 3))))) (*.f64 -1 (/.f64 (-.f64 2 x) y)))","(-.f64 (+.f64 (+.f64 (/.f64 (*.f64 -1 (-.f64 x (-.f64 2 x))) (/.f64 (*.f64 y y) (-.f64 2 x))) 1) (fma.f64 -1 (/.f64 x y) (/.f64 (*.f64 -1 (-.f64 x (-.f64 2 x))) (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 2 x) 2))))) (/.f64 (neg.f64 (-.f64 2 x)) y))","(+.f64 (+.f64 (-.f64 1 (/.f64 x y)) (*.f64 (/.f64 (fma.f64 -1 x (-.f64 2 x)) (pow.f64 y 3)) (pow.f64 (-.f64 2 x) 2))) (+.f64 (*.f64 (/.f64 (-.f64 2 x) (*.f64 y y)) (fma.f64 -1 x (-.f64 2 x))) (/.f64 (-.f64 2 x) y)))","(+.f64 (+.f64 1 (/.f64 (-.f64 (-.f64 2 x) x) y)) (*.f64 (/.f64 (-.f64 (-.f64 2 x) x) (*.f64 y y)) (+.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) y) (-.f64 2 x))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 x) 2) y)))","(+.f64 1 (neg.f64 (/.f64 (fma.f64 2 x -2) y)))","(-.f64 1 (/.f64 (fma.f64 2 x -2) y))","(+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 x) 2) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x)) (pow.f64 y 2)))))","(+.f64 1 (*.f64 -1 (+.f64 (/.f64 (fma.f64 2 x -2) y) (/.f64 (fma.f64 2 x -2) (/.f64 (*.f64 y y) (-.f64 2 x))))))","(-.f64 (-.f64 1 (/.f64 (fma.f64 2 x -2) y)) (*.f64 (/.f64 (fma.f64 2 x -2) (*.f64 y y)) (-.f64 2 x)))","(-.f64 1 (*.f64 (+.f64 1 (/.f64 (-.f64 2 x) y)) (/.f64 (fma.f64 2 x -2) y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 2 x) 2) (pow.f64 (-.f64 2 x) 2)) (pow.f64 y 3))) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 2 x) 2) y)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 2 x) 2) (-.f64 2 x)) (pow.f64 y 2))))))","(fma.f64 -1 (/.f64 (fma.f64 2 x -2) (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 2 x) 2))) (+.f64 1 (*.f64 -1 (+.f64 (/.f64 (fma.f64 2 x -2) y) (/.f64 (fma.f64 2 x -2) (/.f64 (*.f64 y y) (-.f64 2 x)))))))","(-.f64 (-.f64 (-.f64 1 (/.f64 (fma.f64 2 x -2) y)) (*.f64 (/.f64 (fma.f64 2 x -2) (*.f64 y y)) (-.f64 2 x))) (*.f64 (/.f64 (fma.f64 2 x -2) (pow.f64 y 3)) (pow.f64 (-.f64 2 x) 2)))","(+.f64 1 (-.f64 (*.f64 (/.f64 (fma.f64 2 x -2) y) (-.f64 -1 (/.f64 (-.f64 2 x) y))) (*.f64 (pow.f64 (-.f64 2 x) 2) (/.f64 (fma.f64 2 x -2) (pow.f64 y 3)))))"]],"stop":[["node limit",1]],"time":48.700927734375,"type":"simplify"},{"compiler":[[2066,1291]],"time":24.885986328125,"type":"eval"},{"alts":[["(fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))","next",0.12758507069442182],["(/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))","done",0.03125],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))","fresh",0.1676750488422101],["(fma.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2) (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))","fresh",0.29599389652663033],["(+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))))","fresh",13.017178317921472]],"compiler":[[33,21],[11,7],[28,18],[27,17],[29,19],[33,21],[28,18],[27,17],[29,19]],"count":[[97,5]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[96,4],"picked":[1,1]}],"min-error":[0.00390625],"time":25.089111328125,"type":"prune"},{"compiler":[[101,53]],"locations":[["(/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 2 (+.f64 x y))))",0.197597509768442,true],["(/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))",0.27962875976844204,true],["(pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)",0.38119125976844204,true],["(pow.f64 (cbrt.f64 x) 2)",0.49837875976844204,true]],"time":23.971923828125,"type":"localize"},{"count":[[4,32]],"series":[["(/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 2 (+.f64 x y))))","y","-inf",0.655029296875],["(/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 2 (+.f64 x y))))","y","inf",0.97119140625],["(/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 2 (+.f64 x y))))","y","0",1.3349609375],["(/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 2 (+.f64 x y))))","x","-inf",0.992919921875],["(/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 2 (+.f64 x y))))","x","inf",1.453857421875],["(/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 2 (+.f64 x y))))","x","0",0.595947265625],["(/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))","y","-inf",2.328125],["(/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))","y","inf",2.14599609375],["(/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))","y","0",2.025146484375],["(/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))","x","-inf",1.614990234375],["(/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))","x","inf",0.826904296875],["(/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))","x","0",0.93701171875],["(pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)","y","-inf",0.3359375],["(pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)","y","inf",0.428955078125],["(pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)","y","0",1.27001953125],["(pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)","x","-inf",0.362060546875],["(pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)","x","inf",0.31396484375],["(pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)","x","0",1.376953125],["(pow.f64 (cbrt.f64 x) 2)","x","-inf",0.69287109375],["(pow.f64 (cbrt.f64 x) 2)","x","inf",0.4111328125],["(pow.f64 (cbrt.f64 x) 2)","x","0",0.760986328125]],"time":22.56494140625,"type":"series"},{"count":[[4,123]],"egraph":[[2,3816,45,0.031458665999999996],[1,277,45,0.0059950409999999996],[0,12,50,0.0004275]],"inputs":[["(pow.f64 (cbrt.f64 x) 2)","(pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)","(/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))","(/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 2 (+.f64 x y))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 x) 2))) (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 x) 2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 x) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 x) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2) (cbrt.f64 (*.f64 x (cbrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2) (*.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (cbrt.f64 x))) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (pow.f64 x 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 1/6) (*.f64 (pow.f64 x 1/6) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2)) (cbrt.f64 (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 x (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 x x))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 x)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))) (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) (cbrt.f64 (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y)))) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y)))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y)))) (cbrt.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 4)) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 2 (+.f64 x y))) (pow.f64 (-.f64 2 (+.f64 x y)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 1/6) (*.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 1/6) (cbrt.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y)))) 2)) (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 2 (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (-.f64 2 (+.f64 x y)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2))) (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 2 (+.f64 x y)))) (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 2 (+.f64 x y)))) (/.f64 1 (cbrt.f64 (-.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) 2) (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) 2) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (cbrt.f64 x))) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) (*.f64 (sqrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 x) 2)) (/.f64 1 (neg.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2) (pow.f64 (cbrt.f64 x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (-.f64 2 (+.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) (sqrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))))) (sqrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x (cbrt.f64 x))) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (/.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2) (cbrt.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) 1) (/.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x (cbrt.f64 x))) 1) (/.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 x) (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 4))) (/.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 4))) (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x (cbrt.f64 x))) (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 4))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) (cbrt.f64 x)) (/.f64 1 (cbrt.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) 2)) (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) 2) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (neg.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 (+.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))))) (cbrt.f64 (exp.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))))))) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (/.f64 1 (cbrt.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 x) (sqrt.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) 2) (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2) (*.f64 (cbrt.f64 (cbrt.f64 x)) (/.f64 1 (cbrt.f64 (-.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) (sqrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x 1/6) (*.f64 (pow.f64 x 1/6) (/.f64 1 (cbrt.f64 (-.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (cbrt.f64 x)) (/.f64 1 (neg.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (-.f64 2 (+.f64 x y)))) (cbrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) 2) 2)) (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2) 1) (/.f64 (cbrt.f64 (cbrt.f64 x)) (cbrt.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 1/6) 1) (/.f64 (pow.f64 x 1/6) (cbrt.f64 (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y)))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 x 1/6) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y)))) 2)) (/.f64 (pow.f64 x 1/6) (cbrt.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (-.f64 2 (+.f64 x y)) 1/6)) (/.f64 (cbrt.f64 x) (pow.f64 (-.f64 2 (+.f64 x y)) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (cbrt.f64 x)) 2) (pow.f64 (-.f64 2 (+.f64 x y)) 1/6)) (/.f64 (cbrt.f64 (cbrt.f64 x)) (pow.f64 (-.f64 2 (+.f64 x y)) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 2 (+.f64 x y))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 2 (+.f64 x y)) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (cbrt.f64 x) (neg.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 x (-.f64 2 (+.f64 x y))))) 1))))))"]],"rules":[["egg-rr",38],["egg-rr",43],["egg-rr",21],["egg-rr",21]],"stop":[["node limit",1]],"time":64.30419921875,"type":"rewrite"},{"count":[[155,182]],"egraph":[[2,4417,2207,0.029821125],[1,1092,2341,0.0112465],[0,328,2508,0.002160625]],"inputs":[["(pow.f64 (pow.f64 (-.f64 2 y) 2) 1/3)","(+.f64 (pow.f64 (pow.f64 (-.f64 2 y) 2) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 (-.f64 2 y) 1) 1/9) x)))","(+.f64 (pow.f64 (pow.f64 (-.f64 2 y) 2) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 (-.f64 2 y) 1) 1/9) x)) (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/9))) (pow.f64 x 2))))","(+.f64 (*.f64 (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (-.f64 2 y)))) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9)))) (pow.f64 (/.f64 1 (-.f64 2 y)) 1/3)))) (pow.f64 x 3)) (+.f64 (pow.f64 (pow.f64 (-.f64 2 y) 2) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 (-.f64 2 y) 1) 1/9) x)) (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/9))) (pow.f64 x 2)))))","(pow.f64 (pow.f64 (-.f64 2 x) 2) 1/3)","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (-.f64 2 x)) 1/9) y)) (pow.f64 (pow.f64 (-.f64 2 x) 2) 1/3))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (-.f64 2 x)) 1/9) y)) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/9)))) (pow.f64 (pow.f64 (-.f64 2 x) 2) 1/3)))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (-.f64 2 x)) 1/9) y)) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/9)))) (+.f64 (pow.f64 (pow.f64 (-.f64 2 x) 2) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (-.f64 2 x)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3))))))))))","1","(+.f64 (*.f64 2/3 (/.f64 (-.f64 2 y) x)) 1)","(+.f64 (*.f64 2/3 (/.f64 (-.f64 2 y) x)) (+.f64 1 (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 (-.f64 2 y) 2) (+.f64 (*.f64 4/3 (pow.f64 (-.f64 2 y) 2)) (*.f64 -4 (pow.f64 (-.f64 2 y) 2)))) (pow.f64 x 2)))))","(+.f64 (*.f64 2/3 (/.f64 (-.f64 2 y) x)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 2 (*.f64 (-.f64 2 y) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 -4 (pow.f64 (-.f64 2 y) 2))))) (+.f64 (*.f64 -4/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 (-.f64 2 y) 2)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 -4 (pow.f64 (-.f64 2 y) 2)))) (-.f64 2 y))) (+.f64 (*.f64 2 (pow.f64 (-.f64 2 y) 3)) (*.f64 8/27 (pow.f64 (-.f64 2 y) 3))))) (pow.f64 x 3))) (+.f64 1 (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 (-.f64 2 y) 2) (+.f64 (*.f64 4/3 (pow.f64 (-.f64 2 y) 2)) (*.f64 -4 (pow.f64 (-.f64 2 y) 2)))) (pow.f64 x 2))))))","(pow.f64 (cbrt.f64 -1) 2)","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (*.f64 2 y) 4)) x)) (pow.f64 (cbrt.f64 -1) 2))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (*.f64 2 y) 4)) x)) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 2 y) 4)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 4) 2)))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 x 2))) (pow.f64 (cbrt.f64 -1) 2)))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (*.f64 2 y) 4)) x)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -1 (*.f64 (-.f64 4 (*.f64 2 y)) (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 2 y) 4)) (pow.f64 (-.f64 2 y) 2)))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 y) 4) 3)) (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 2 y) 4)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 4) 2)))) (-.f64 (*.f64 2 y) 4))) (*.f64 (pow.f64 (-.f64 2 y) 2) (-.f64 (*.f64 2 y) 4)))))) (pow.f64 x 3))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 2 y) 4)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 4) 2)))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 x 2))) (pow.f64 (cbrt.f64 -1) 2))))","(pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3)","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 (-.f64 2 x) 23)) 1/9) y)) (pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 (-.f64 2 x) 23)) 1/9) y)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3) (*.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 -4 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4))) (*.f64 4/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 34)) (pow.f64 (-.f64 2 x) 52)) 1/9)))) (pow.f64 y 2)))) (pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 (-.f64 2 x) 23)) 1/9) y)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3) (*.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 -4 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4))) (*.f64 4/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 34)) (pow.f64 (-.f64 2 x) 52)) 1/9)))) (pow.f64 y 2)))) (+.f64 (pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2 (/.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (*.f64 -4 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)))) (-.f64 2 x))) (+.f64 (*.f64 8/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 (-.f64 2 x) 23)) 1/3)) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 5))) (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 8)) (pow.f64 (-.f64 2 x) 17)) 1/9) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 -4 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4))) (*.f64 4/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 34)) (pow.f64 (-.f64 2 x) 52)) 1/9)))))))))))))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (-.f64 y 2) x))))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 y) (-.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 y 2) 2)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2)))) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (-.f64 y 2) x)))))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 2 y) 2) (-.f64 y 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 y 2) (+.f64 (*.f64 -1 (*.f64 (-.f64 2 y) (-.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 y 2) 2))))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 y) (-.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 y 2) 2)))) (-.f64 y 2)))) (*.f64 1/27 (/.f64 (pow.f64 (-.f64 y 2) 3) (pow.f64 (cbrt.f64 -1) 2)))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 y) (-.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 y 2) 2)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2)))) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (-.f64 y 2) x))))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (-.f64 y 2)) x)))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 (-.f64 2 y) (-.f64 y 2)) (*.f64 1/3 (pow.f64 (-.f64 y 2) 2)))) (pow.f64 x 2))) (+.f64 (cbrt.f64 -1) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (-.f64 y 2)) x))))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 (-.f64 2 y) (-.f64 y 2)) (*.f64 1/3 (pow.f64 (-.f64 y 2) 2)))) (pow.f64 x 2))) (+.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 2 y) 2) (-.f64 y 2))) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 (-.f64 2 y) (-.f64 y 2)) (*.f64 1/3 (pow.f64 (-.f64 y 2) 2))) (-.f64 y 2))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 y 2) 3)) (*.f64 -1/3 (*.f64 (-.f64 y 2) (+.f64 (*.f64 (-.f64 2 y) (-.f64 y 2)) (*.f64 1/3 (pow.f64 (-.f64 y 2) 2)))))))) (cbrt.f64 -1)) (pow.f64 x 3))) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (-.f64 y 2)) x)))))","(pow.f64 (/.f64 x (-.f64 2 x)) 1/3)","(+.f64 (pow.f64 (/.f64 x (-.f64 2 x)) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 (-.f64 2 x) 16)) 1/9) y)))","(+.f64 (pow.f64 (/.f64 x (-.f64 2 x)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 (-.f64 2 x) 16)) 1/9) y)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 (-.f64 2 x) 35)) 1/9))))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 (-.f64 2 x) 16)) 1/3)) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 13)) 1/9) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 (-.f64 2 x) 35)) 1/9)))))))))) (+.f64 (pow.f64 (/.f64 x (-.f64 2 x)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 (-.f64 2 x) 16)) 1/9) y)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 (-.f64 2 x) 35)) 1/9)))))))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (pow.f64 (-.f64 2 y) 2) 1/3)","(cbrt.f64 (pow.f64 (-.f64 2 y) 2))","(+.f64 (pow.f64 (pow.f64 (-.f64 2 y) 2) 1/3) (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 (-.f64 2 y) 1) 1/9) x)))","(+.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) 2)) (*.f64 -2/3 (*.f64 (*.f64 (pow.f64 (-.f64 2 y) 1/18) (pow.f64 (-.f64 2 y) 1/18)) x)))","(fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 (-.f64 2 y) 1/18) (pow.f64 (-.f64 2 y) 1/18)) x) (cbrt.f64 (pow.f64 (-.f64 2 y) 2)))","(+.f64 (pow.f64 (pow.f64 (-.f64 2 y) 2) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 (-.f64 2 y) 1) 1/9) x)) (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/9))) (pow.f64 x 2))))","(+.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) 2)) (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 (-.f64 2 y) 1/18) (pow.f64 (-.f64 2 y) 1/18)) x) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/18)) -1/9) (*.f64 x x))))","(+.f64 (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 (-.f64 2 y) 1/18) (pow.f64 (-.f64 2 y) 1/18)) x) (cbrt.f64 (pow.f64 (-.f64 2 y) 2))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/18)) (*.f64 -1/9 (*.f64 x x))))","(+.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) 2)) (*.f64 x (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (-.f64 2 y) 1/18) (pow.f64 (-.f64 2 y) 1/18))) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/18)) -1/9) x))))","(+.f64 (*.f64 (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (-.f64 2 y)))) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9)))) (pow.f64 (/.f64 1 (-.f64 2 y)) 1/3)))) (pow.f64 x 3)) (+.f64 (pow.f64 (pow.f64 (-.f64 2 y) 2) 1/3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 (-.f64 2 y) 1) 1/9) x)) (*.f64 (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/9))) (pow.f64 x 2)))))","(fma.f64 (fma.f64 2/27 (/.f64 1 (-.f64 2 y)) (*.f64 -2/3 (*.f64 (fma.f64 -1/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))) (*.f64 2/9 (*.f64 1 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)))))) (cbrt.f64 (/.f64 1 (-.f64 2 y)))))) (pow.f64 x 3) (+.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) 2)) (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 (-.f64 2 y) 1/18) (pow.f64 (-.f64 2 y) 1/18)) x) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/18)) -1/9) (*.f64 x x)))))","(fma.f64 (fma.f64 -2/3 (*.f64 (fma.f64 -1/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))) 2/9)) (cbrt.f64 (/.f64 1 (-.f64 2 y)))) (/.f64 2/27 (-.f64 2 y))) (pow.f64 x 3) (+.f64 (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 (-.f64 2 y) 1/18) (pow.f64 (-.f64 2 y) 1/18)) x) (cbrt.f64 (pow.f64 (-.f64 2 y) 2))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/18)) (*.f64 -1/9 (*.f64 x x)))))","(+.f64 (fma.f64 -2/3 (*.f64 (*.f64 (pow.f64 (-.f64 2 y) 1/18) (pow.f64 (-.f64 2 y) 1/18)) x) (cbrt.f64 (pow.f64 (-.f64 2 y) 2))) (*.f64 (*.f64 x x) (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/18)) -1/9) (*.f64 x (fma.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))) 5/27) (cbrt.f64 (/.f64 1 (-.f64 2 y)))) (/.f64 2/27 (-.f64 2 y)))))))","(pow.f64 (pow.f64 (-.f64 2 x) 2) 1/3)","(cbrt.f64 (pow.f64 (-.f64 2 x) 2))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (-.f64 2 x)) 1/9) y)) (pow.f64 (pow.f64 (-.f64 2 x) 2) 1/3))","(fma.f64 -2/3 (*.f64 y (*.f64 (pow.f64 (-.f64 2 x) 1/18) (pow.f64 (-.f64 2 x) 1/18))) (cbrt.f64 (pow.f64 (-.f64 2 x) 2)))","(fma.f64 -2/3 (*.f64 (pow.f64 (-.f64 2 x) 1/18) (*.f64 (pow.f64 (-.f64 2 x) 1/18) y)) (cbrt.f64 (pow.f64 (-.f64 2 x) 2)))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (-.f64 2 x)) 1/9) y)) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/9)))) (pow.f64 (pow.f64 (-.f64 2 x) 2) 1/3)))","(fma.f64 -2/3 (*.f64 y (*.f64 (pow.f64 (-.f64 2 x) 1/18) (pow.f64 (-.f64 2 x) 1/18))) (fma.f64 (*.f64 y y) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/18)) -1/9) (cbrt.f64 (pow.f64 (-.f64 2 x) 2))))","(fma.f64 -2/3 (*.f64 (pow.f64 (-.f64 2 x) 1/18) (*.f64 (pow.f64 (-.f64 2 x) 1/18) y)) (fma.f64 (*.f64 y y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/18) -1/9)) (cbrt.f64 (pow.f64 (-.f64 2 x) 2))))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 (-.f64 2 x)) 1/9) y)) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/9)))) (+.f64 (pow.f64 (pow.f64 (-.f64 2 x) 2) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (-.f64 2 x)))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3))))))))))","(fma.f64 -2/3 (*.f64 y (*.f64 (pow.f64 (-.f64 2 x) 1/18) (pow.f64 (-.f64 2 x) 1/18))) (+.f64 (fma.f64 (*.f64 y y) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/18)) -1/9) (cbrt.f64 (pow.f64 (-.f64 2 x) 2))) (*.f64 (pow.f64 y 3) (fma.f64 2/27 (/.f64 1 (-.f64 2 x)) (*.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 1 (-.f64 2 x)))) (+.f64 (*.f64 2/9 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)))) (*.f64 -1/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2))))))))))","(fma.f64 -2/3 (*.f64 (pow.f64 (-.f64 2 x) 1/18) (*.f64 (pow.f64 (-.f64 2 x) 1/18) y)) (fma.f64 (*.f64 y y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/18) -1/9)) (fma.f64 (pow.f64 y 3) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 2 x))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2))) 5/27)) (/.f64 2/27 (-.f64 2 x))) (cbrt.f64 (pow.f64 (-.f64 2 x) 2)))))","(fma.f64 -2/3 (*.f64 (pow.f64 (-.f64 2 x) 1/18) (*.f64 (pow.f64 (-.f64 2 x) 1/18) y)) (fma.f64 (*.f64 y y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/18) -1/9)) (fma.f64 (pow.f64 y 3) (fma.f64 -2/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2))) (cbrt.f64 (/.f64 1 (-.f64 2 x)))) 5/27) (/.f64 2/27 (-.f64 2 x))) (cbrt.f64 (pow.f64 (-.f64 2 x) 2)))))","1","(+.f64 (*.f64 2/3 (/.f64 (-.f64 2 y) x)) 1)","(fma.f64 2/3 (/.f64 (-.f64 2 y) x) 1)","(+.f64 (*.f64 2/3 (/.f64 (-.f64 2 y) x)) (+.f64 1 (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 (-.f64 2 y) 2) (+.f64 (*.f64 4/3 (pow.f64 (-.f64 2 y) 2)) (*.f64 -4 (pow.f64 (-.f64 2 y) 2)))) (pow.f64 x 2)))))","(+.f64 (fma.f64 2/3 (/.f64 (-.f64 2 y) x) 1) (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 (pow.f64 (-.f64 2 y) 2) -8/3)) (*.f64 x x))))","(fma.f64 2/3 (/.f64 (-.f64 2 y) x) (fma.f64 -1/3 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) -5/3) (*.f64 x x)) 1))","(fma.f64 2/3 (/.f64 (-.f64 2 y) x) (fma.f64 -1/3 (*.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) x) (/.f64 -5/3 x)) 1))","(+.f64 (*.f64 2/3 (/.f64 (-.f64 2 y) x)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 2 (*.f64 (-.f64 2 y) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 -4 (pow.f64 (-.f64 2 y) 2))))) (+.f64 (*.f64 -4/3 (*.f64 (+.f64 (*.f64 4/3 (pow.f64 (-.f64 2 y) 2)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 -4 (pow.f64 (-.f64 2 y) 2)))) (-.f64 2 y))) (+.f64 (*.f64 2 (pow.f64 (-.f64 2 y) 3)) (*.f64 8/27 (pow.f64 (-.f64 2 y) 3))))) (pow.f64 x 3))) (+.f64 1 (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 (-.f64 2 y) 2) (+.f64 (*.f64 4/3 (pow.f64 (-.f64 2 y) 2)) (*.f64 -4 (pow.f64 (-.f64 2 y) 2)))) (pow.f64 x 2))))))","(fma.f64 2/3 (/.f64 (-.f64 2 y) x) (fma.f64 -1/3 (/.f64 (fma.f64 2 (*.f64 (-.f64 2 y) (*.f64 -3 (pow.f64 (-.f64 2 y) 2))) (fma.f64 -4/3 (*.f64 (-.f64 2 y) (fma.f64 4/3 (pow.f64 (-.f64 2 y) 2) (*.f64 -3 (pow.f64 (-.f64 2 y) 2)))) (*.f64 (pow.f64 (-.f64 2 y) 3) 62/27))) (pow.f64 x 3)) (+.f64 1 (*.f64 -1/3 (/.f64 (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 (pow.f64 (-.f64 2 y) 2) -8/3)) (*.f64 x x))))))","(fma.f64 2/3 (/.f64 (-.f64 2 y) x) (fma.f64 -1/3 (/.f64 (fma.f64 2 (*.f64 -3 (pow.f64 (-.f64 2 y) 3)) (fma.f64 -4/3 (*.f64 (-.f64 2 y) (*.f64 (pow.f64 (-.f64 2 y) 2) -5/3)) (*.f64 (pow.f64 (-.f64 2 y) 3) 62/27))) (pow.f64 x 3)) (fma.f64 -1/3 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) -5/3) (*.f64 x x)) 1)))","(fma.f64 2/3 (/.f64 (-.f64 2 y) x) (fma.f64 -1/3 (/.f64 (fma.f64 2 (*.f64 (pow.f64 (-.f64 2 y) 3) -3) (fma.f64 -4/3 (*.f64 (-.f64 2 y) (*.f64 (pow.f64 (-.f64 2 y) 2) -5/3)) (*.f64 (pow.f64 (-.f64 2 y) 3) 62/27))) (pow.f64 x 3)) (fma.f64 -1/3 (*.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) x) (/.f64 -5/3 x)) 1)))","(pow.f64 (cbrt.f64 -1) 2)","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (*.f64 2 y) 4)) x)) (pow.f64 (cbrt.f64 -1) 2))","(fma.f64 -1/3 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (/.f64 x (fma.f64 2 y -4))) (pow.f64 (cbrt.f64 -1) 2))","(fma.f64 -1/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1) 2) x) (fma.f64 2 y -4)) (pow.f64 (cbrt.f64 -1) 2))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (*.f64 2 y) 4)) x)) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 2 y) 4)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 4) 2)))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 x 2))) (pow.f64 (cbrt.f64 -1) 2)))","(fma.f64 -1/3 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (/.f64 x (fma.f64 2 y -4))) (fma.f64 -1/3 (/.f64 (+.f64 (fma.f64 (+.f64 4 (*.f64 -2 y)) (fma.f64 2 y -4) (pow.f64 (-.f64 2 y) 2)) (*.f64 1/3 (pow.f64 (fma.f64 2 y -4) 2))) (/.f64 (*.f64 x x) (pow.f64 (cbrt.f64 -1) 2))) (pow.f64 (cbrt.f64 -1) 2)))","(fma.f64 -1/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1) 2) x) (fma.f64 2 y -4)) (fma.f64 -1/3 (*.f64 (/.f64 (fma.f64 (fma.f64 2 y -4) (+.f64 4 (*.f64 y -2)) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -4) 2) (pow.f64 (-.f64 2 y) 2))) (*.f64 x x)) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (cbrt.f64 -1) 2)))","(+.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 -1/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1) 2) x) (+.f64 (fma.f64 2 y -4) (/.f64 (fma.f64 (fma.f64 2 y -4) (+.f64 4 (*.f64 y -2)) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -4) 2) (pow.f64 (-.f64 2 y) 2))) x)))))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (*.f64 2 y) 4)) x)) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 -1 (*.f64 (-.f64 4 (*.f64 2 y)) (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 2 y) 4)) (pow.f64 (-.f64 2 y) 2)))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 2 y) 4) 3)) (+.f64 (*.f64 -2/3 (*.f64 (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 2 y) 4)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 4) 2)))) (-.f64 (*.f64 2 y) 4))) (*.f64 (pow.f64 (-.f64 2 y) 2) (-.f64 (*.f64 2 y) 4)))))) (pow.f64 x 3))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 2 y) 4)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 2 y) 4) 2)))) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 x 2))) (pow.f64 (cbrt.f64 -1) 2))))","(fma.f64 -1/3 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (/.f64 x (fma.f64 2 y -4))) (fma.f64 1/3 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (/.f64 (pow.f64 x 3) (fma.f64 -1 (*.f64 (+.f64 4 (*.f64 -2 y)) (fma.f64 (+.f64 4 (*.f64 -2 y)) (fma.f64 2 y -4) (pow.f64 (-.f64 2 y) 2))) (fma.f64 1/27 (pow.f64 (fma.f64 2 y -4) 3) (fma.f64 -2/3 (*.f64 (fma.f64 2 y -4) (+.f64 (fma.f64 (+.f64 4 (*.f64 -2 y)) (fma.f64 2 y -4) (pow.f64 (-.f64 2 y) 2)) (*.f64 1/3 (pow.f64 (fma.f64 2 y -4) 2)))) (*.f64 (pow.f64 (-.f64 2 y) 2) (fma.f64 2 y -4))))))) (fma.f64 -1/3 (/.f64 (+.f64 (fma.f64 (+.f64 4 (*.f64 -2 y)) (fma.f64 2 y -4) (pow.f64 (-.f64 2 y) 2)) (*.f64 1/3 (pow.f64 (fma.f64 2 y -4) 2))) (/.f64 (*.f64 x x) (pow.f64 (cbrt.f64 -1) 2))) (pow.f64 (cbrt.f64 -1) 2))))","(fma.f64 -1/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1) 2) x) (fma.f64 2 y -4)) (fma.f64 1/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)) (-.f64 (fma.f64 1/27 (pow.f64 (fma.f64 2 y -4) 3) (*.f64 (fma.f64 2 y -4) (+.f64 (*.f64 -2/3 (fma.f64 (fma.f64 2 y -4) (+.f64 4 (*.f64 y -2)) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -4) 2) (pow.f64 (-.f64 2 y) 2)))) (pow.f64 (-.f64 2 y) 2)))) (*.f64 (+.f64 4 (*.f64 y -2)) (fma.f64 (fma.f64 2 y -4) (+.f64 4 (*.f64 y -2)) (pow.f64 (-.f64 2 y) 2))))) (fma.f64 -1/3 (*.f64 (/.f64 (fma.f64 (fma.f64 2 y -4) (+.f64 4 (*.f64 y -2)) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -4) 2) (pow.f64 (-.f64 2 y) 2))) (*.f64 x x)) (pow.f64 (cbrt.f64 -1) 2)) (pow.f64 (cbrt.f64 -1) 2))))","(+.f64 (+.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 -1/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1) 2) x) (+.f64 (fma.f64 2 y -4) (/.f64 (fma.f64 (fma.f64 2 y -4) (+.f64 4 (*.f64 y -2)) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -4) 2) (pow.f64 (-.f64 2 y) 2))) x))))) (*.f64 1/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)) (fma.f64 (*.f64 (-.f64 2 y) -2) (fma.f64 (fma.f64 2 y -4) (+.f64 4 (*.f64 y -2)) (pow.f64 (-.f64 2 y) 2)) (fma.f64 1/27 (pow.f64 (fma.f64 2 y -4) 3) (*.f64 (fma.f64 2 y -4) (+.f64 (*.f64 -2/3 (fma.f64 (fma.f64 2 y -4) (+.f64 4 (*.f64 y -2)) (fma.f64 1/3 (pow.f64 (fma.f64 2 y -4) 2) (pow.f64 (-.f64 2 y) 2)))) (pow.f64 (-.f64 2 y) 2))))))))","(pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3)","(cbrt.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 2)))","(cbrt.f64 (/.f64 x (/.f64 (pow.f64 (-.f64 2 x) 2) x)))","(cbrt.f64 (*.f64 x (/.f64 x (pow.f64 (-.f64 2 x) 2))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 (-.f64 2 x) 23)) 1/9) y)) (pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3))","(fma.f64 2/3 (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23)) 1/18))) (cbrt.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 2))))","(fma.f64 2/3 (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23)) 1/18))) (cbrt.f64 (/.f64 x (/.f64 (pow.f64 (-.f64 2 x) 2) x))))","(fma.f64 2/3 (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23)) 1/18))) (cbrt.f64 (*.f64 x (/.f64 x (pow.f64 (-.f64 2 x) 2)))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 (-.f64 2 x) 23)) 1/9) y)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3) (*.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 -4 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4))) (*.f64 4/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 34)) (pow.f64 (-.f64 2 x) 52)) 1/9)))) (pow.f64 y 2)))) (pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3)))","(fma.f64 2/3 (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23)) 1/18))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4))) (*.f64 (*.f64 y y) (+.f64 (*.f64 -3 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 4))) (*.f64 4/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 34) (pow.f64 (-.f64 2 x) 52)) 1/18) (pow.f64 (/.f64 (pow.f64 x 34) (pow.f64 (-.f64 2 x) 52)) 1/18)))))) (cbrt.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 2)))))","(fma.f64 2/3 (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23)) 1/18))) (fma.f64 -1/3 (*.f64 (*.f64 y y) (*.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4))) (fma.f64 -3 (/.f64 x (/.f64 (pow.f64 (-.f64 2 x) 4) x)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 34) (pow.f64 (-.f64 2 x) 52)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 34) (pow.f64 (-.f64 2 x) 52)) 1/18) 4/3))))) (cbrt.f64 (/.f64 x (/.f64 (pow.f64 (-.f64 2 x) 2) x)))))","(fma.f64 2/3 (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23)) 1/18))) (fma.f64 -1/3 (*.f64 (*.f64 y y) (*.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4))) (fma.f64 -3 (/.f64 x (/.f64 (pow.f64 (-.f64 2 x) 4) x)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 34) (pow.f64 (-.f64 2 x) 52)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 34) (pow.f64 (-.f64 2 x) 52)) 1/18) 4/3))))) (cbrt.f64 (*.f64 x (/.f64 x (pow.f64 (-.f64 2 x) 2))))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 (-.f64 2 x) 23)) 1/9) y)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3) (*.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 -4 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4))) (*.f64 4/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 34)) (pow.f64 (-.f64 2 x) 52)) 1/9)))) (pow.f64 y 2)))) (+.f64 (pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2 (/.f64 (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (*.f64 -4 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)))) (-.f64 2 x))) (+.f64 (*.f64 8/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 14)) (pow.f64 (-.f64 2 x) 23)) 1/3)) (+.f64 (*.f64 2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 5))) (*.f64 -4/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 8)) (pow.f64 (-.f64 2 x) 17)) 1/9) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 -4 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4))) (*.f64 4/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 34)) (pow.f64 (-.f64 2 x) 52)) 1/9)))))))))))))))","(fma.f64 2/3 (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23)) 1/18))) (+.f64 (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4))) (*.f64 (*.f64 y y) (+.f64 (*.f64 -3 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 4))) (*.f64 4/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 34) (pow.f64 (-.f64 2 x) 52)) 1/18) (pow.f64 (/.f64 (pow.f64 x 34) (pow.f64 (-.f64 2 x) 52)) 1/18)))))) (cbrt.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 2)))) (*.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4))) (pow.f64 y 3)) (fma.f64 2 (/.f64 (*.f64 -3 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 4))) (-.f64 2 x)) (fma.f64 8/27 (cbrt.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23))) (fma.f64 2 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 5)) (*.f64 -4/3 (*.f64 (+.f64 (*.f64 -3 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 4))) (*.f64 4/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 34) (pow.f64 (-.f64 2 x) 52)) 1/18) (pow.f64 (/.f64 (pow.f64 x 34) (pow.f64 (-.f64 2 x) 52)) 1/18)))) (*.f64 (pow.f64 (/.f64 (pow.f64 x 8) (pow.f64 (-.f64 2 x) 17)) 1/18) (pow.f64 (/.f64 (pow.f64 x 8) (pow.f64 (-.f64 2 x) 17)) 1/18)))))))))))","(fma.f64 2/3 (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23)) 1/18))) (fma.f64 -1/3 (*.f64 (*.f64 y y) (*.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4))) (fma.f64 -3 (/.f64 x (/.f64 (pow.f64 (-.f64 2 x) 4) x)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 34) (pow.f64 (-.f64 2 x) 52)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 34) (pow.f64 (-.f64 2 x) 52)) 1/18) 4/3))))) (fma.f64 -1/3 (*.f64 (+.f64 (/.f64 (*.f64 -6 (/.f64 x (/.f64 (pow.f64 (-.f64 2 x) 4) x))) (-.f64 2 x)) (fma.f64 8/27 (cbrt.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23))) (fma.f64 2 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 5)) (*.f64 (fma.f64 -3 (/.f64 x (/.f64 (pow.f64 (-.f64 2 x) 4) x)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 34) (pow.f64 (-.f64 2 x) 52)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 34) (pow.f64 (-.f64 2 x) 52)) 1/18) 4/3))) (*.f64 (*.f64 -4/3 (pow.f64 (/.f64 (pow.f64 x 8) (pow.f64 (-.f64 2 x) 17)) 1/18)) (pow.f64 (/.f64 (pow.f64 x 8) (pow.f64 (-.f64 2 x) 17)) 1/18)))))) (*.f64 (pow.f64 y 3) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4))))) (cbrt.f64 (/.f64 x (/.f64 (pow.f64 (-.f64 2 x) 2) x))))))","(fma.f64 2/3 (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23)) 1/18) (pow.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23)) 1/18))) (+.f64 (cbrt.f64 (*.f64 x (/.f64 x (pow.f64 (-.f64 2 x) 2)))) (*.f64 (*.f64 -1/3 (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)))) (+.f64 (*.f64 (*.f64 y y) (fma.f64 -3 (/.f64 x (/.f64 (pow.f64 (-.f64 2 x) 4) x)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 34) (pow.f64 (-.f64 2 x) 52)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 34) (pow.f64 (-.f64 2 x) 52)) 1/18) 4/3)))) (*.f64 (pow.f64 y 3) (+.f64 (/.f64 -6 (*.f64 (/.f64 (-.f64 2 x) (*.f64 x x)) (pow.f64 (-.f64 2 x) 4))) (fma.f64 8/27 (cbrt.f64 (/.f64 (pow.f64 x 14) (pow.f64 (-.f64 2 x) 23))) (fma.f64 2 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 5)) (*.f64 (fma.f64 -3 (/.f64 x (/.f64 (pow.f64 (-.f64 2 x) 4) x)) (*.f64 (pow.f64 (/.f64 (pow.f64 x 34) (pow.f64 (-.f64 2 x) 52)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 34) (pow.f64 (-.f64 2 x) 52)) 1/18) 4/3))) (*.f64 (*.f64 -4/3 (pow.f64 (/.f64 (pow.f64 x 8) (pow.f64 (-.f64 2 x) 17)) 1/18)) (pow.f64 (/.f64 (pow.f64 x 8) (pow.f64 (-.f64 2 x) 17)) 1/18)))))))))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (-.f64 y 2) x))))","(+.f64 (cbrt.f64 -1) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (/.f64 (+.f64 y -2) x)))","(fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 (+.f64 y -2) x)) (cbrt.f64 -1))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 y) (-.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 y 2) 2)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2)))) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (-.f64 y 2) x)))))","(fma.f64 -1/3 (/.f64 (fma.f64 -1 (*.f64 (-.f64 2 y) (+.f64 y -2)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (+.f64 y -2) 2)))) (*.f64 (*.f64 x x) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (cbrt.f64 -1) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (/.f64 (+.f64 y -2) x))))","(fma.f64 -1/3 (/.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (+.f64 y -2) 2)) (*.f64 (-.f64 2 y) (neg.f64 (+.f64 y -2)))) (*.f64 x (*.f64 x (pow.f64 (cbrt.f64 -1) 2)))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 (+.f64 y -2) x)) (cbrt.f64 -1)))","(fma.f64 -1/3 (/.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (+.f64 y -2) 2)) (pow.f64 (-.f64 2 y) 2)) (*.f64 x (*.f64 x (pow.f64 (cbrt.f64 -1) 2)))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 (+.f64 y -2) x)) (cbrt.f64 -1)))","(+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 2 y) 2) (-.f64 y 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (-.f64 y 2) (+.f64 (*.f64 -1 (*.f64 (-.f64 2 y) (-.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 y 2) 2))))))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5)) 1/3) (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 y) (-.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 y 2) 2)))) (-.f64 y 2)))) (*.f64 1/27 (/.f64 (pow.f64 (-.f64 y 2) 3) (pow.f64 (cbrt.f64 -1) 2)))))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)))) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 2 y) (-.f64 y 2))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (cbrt.f64 -1)) 1/3) (pow.f64 (-.f64 y 2) 2)))) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 2)))) (+.f64 (cbrt.f64 -1) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) (/.f64 (-.f64 y 2) x))))))","(fma.f64 -1/3 (/.f64 (fma.f64 -1 (*.f64 (pow.f64 (-.f64 2 y) 2) (+.f64 y -2)) (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) (+.f64 y -2)) (fma.f64 -1 (*.f64 (-.f64 2 y) (+.f64 y -2)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (+.f64 y -2) 2))))) (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) (+.f64 y -2)) (fma.f64 -1 (*.f64 (-.f64 2 y) (+.f64 y -2)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (+.f64 y -2) 2))))) (*.f64 1/27 (/.f64 (pow.f64 (+.f64 y -2) 3) (pow.f64 (cbrt.f64 -1) 2)))))) (*.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 -1/3 (/.f64 (fma.f64 -1 (*.f64 (-.f64 2 y) (+.f64 y -2)) (*.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (+.f64 y -2) 2)))) (*.f64 (*.f64 x x) (pow.f64 (cbrt.f64 -1) 2))) (+.f64 (cbrt.f64 -1) (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (/.f64 (+.f64 y -2) x)))))","(fma.f64 -1/3 (/.f64 (-.f64 (+.f64 (*.f64 1/27 (/.f64 (pow.f64 (+.f64 y -2) 3) (pow.f64 (cbrt.f64 -1) 2))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) (+.f64 (*.f64 (*.f64 1/3 (cbrt.f64 (/.f64 1 (cbrt.f64 -1)))) (pow.f64 (+.f64 y -2) 3)) (*.f64 (neg.f64 (-.f64 2 y)) (pow.f64 (+.f64 y -2) 2)))) -2/3)) (*.f64 (pow.f64 (-.f64 2 y) 2) (+.f64 y -2))) (*.f64 (pow.f64 x 3) (pow.f64 (cbrt.f64 -1) 2))) (fma.f64 -1/3 (/.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (+.f64 y -2) 2)) (*.f64 (-.f64 2 y) (neg.f64 (+.f64 y -2)))) (*.f64 x (*.f64 x (pow.f64 (cbrt.f64 -1) 2)))) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 (+.f64 y -2) x)) (cbrt.f64 -1))))","(+.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))) (/.f64 (+.f64 y -2) x)) (cbrt.f64 -1)) (*.f64 (/.f64 -1/3 (pow.f64 (cbrt.f64 -1) 2)) (+.f64 (/.f64 (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (+.f64 y -2) 2)) (pow.f64 (-.f64 2 y) 2)) (*.f64 x x)) (/.f64 (+.f64 (*.f64 (*.f64 (+.f64 y -2) (fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 -1))) (pow.f64 (+.f64 y -2) 2)) (pow.f64 (-.f64 2 y) 2))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 5))) -2/3)) (+.f64 (*.f64 1/27 (/.f64 (pow.f64 (+.f64 y -2) 3) (pow.f64 (cbrt.f64 -1) 2))) (pow.f64 (-.f64 2 y) 3))) (pow.f64 x 3)))))","(cbrt.f64 -1)","(+.f64 (cbrt.f64 -1) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (-.f64 y 2)) x)))","(+.f64 (cbrt.f64 -1) (*.f64 -1/3 (/.f64 (cbrt.f64 -1) (/.f64 x (+.f64 y -2)))))","(fma.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 -1) x) (+.f64 y -2)) (cbrt.f64 -1))","(fma.f64 -1/3 (*.f64 (/.f64 (+.f64 y -2) x) (cbrt.f64 -1)) (cbrt.f64 -1))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 (-.f64 2 y) (-.f64 y 2)) (*.f64 1/3 (pow.f64 (-.f64 y 2) 2)))) (pow.f64 x 2))) (+.f64 (cbrt.f64 -1) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (-.f64 y 2)) x))))","(fma.f64 -1/3 (/.f64 (cbrt.f64 -1) (/.f64 (*.f64 x x) (fma.f64 (-.f64 2 y) (+.f64 y -2) (*.f64 1/3 (pow.f64 (+.f64 y -2) 2))))) (+.f64 (cbrt.f64 -1) (*.f64 -1/3 (/.f64 (cbrt.f64 -1) (/.f64 x (+.f64 y -2))))))","(fma.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 -1) (*.f64 x x)) (fma.f64 1/3 (pow.f64 (+.f64 y -2) 2) (*.f64 (-.f64 2 y) (+.f64 y -2)))) (fma.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 -1) x) (+.f64 y -2)) (cbrt.f64 -1)))","(fma.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 -1) x) (/.f64 (*.f64 (+.f64 y -2) (+.f64 (*.f64 1/3 (+.f64 y -2)) (-.f64 2 y))) x)) (fma.f64 -1/3 (*.f64 (/.f64 (+.f64 y -2) x) (cbrt.f64 -1)) (cbrt.f64 -1)))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (+.f64 (*.f64 (-.f64 2 y) (-.f64 y 2)) (*.f64 1/3 (pow.f64 (-.f64 y 2) 2)))) (pow.f64 x 2))) (+.f64 (cbrt.f64 -1) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 2 y) 2) (-.f64 y 2))) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 (-.f64 2 y) (-.f64 y 2)) (*.f64 1/3 (pow.f64 (-.f64 y 2) 2))) (-.f64 y 2))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 y 2) 3)) (*.f64 -1/3 (*.f64 (-.f64 y 2) (+.f64 (*.f64 (-.f64 2 y) (-.f64 y 2)) (*.f64 1/3 (pow.f64 (-.f64 y 2) 2)))))))) (cbrt.f64 -1)) (pow.f64 x 3))) (*.f64 -1/3 (/.f64 (*.f64 (cbrt.f64 -1) (-.f64 y 2)) x)))))","(fma.f64 -1/3 (/.f64 (cbrt.f64 -1) (/.f64 (*.f64 x x) (fma.f64 (-.f64 2 y) (+.f64 y -2) (*.f64 1/3 (pow.f64 (+.f64 y -2) 2))))) (+.f64 (cbrt.f64 -1) (fma.f64 1/3 (/.f64 (fma.f64 -1 (*.f64 (pow.f64 (-.f64 2 y) 2) (+.f64 y -2)) (fma.f64 -1/3 (*.f64 (+.f64 y -2) (fma.f64 (-.f64 2 y) (+.f64 y -2) (*.f64 1/3 (pow.f64 (+.f64 y -2) 2)))) (fma.f64 1/27 (pow.f64 (+.f64 y -2) 3) (*.f64 -1/3 (*.f64 (+.f64 y -2) (fma.f64 (-.f64 2 y) (+.f64 y -2) (*.f64 1/3 (pow.f64 (+.f64 y -2) 2)))))))) (/.f64 (pow.f64 x 3) (cbrt.f64 -1))) (*.f64 -1/3 (/.f64 (cbrt.f64 -1) (/.f64 x (+.f64 y -2)))))))","(+.f64 (fma.f64 1/3 (/.f64 (+.f64 (fma.f64 -1/3 (+.f64 (*.f64 (-.f64 2 y) (pow.f64 (+.f64 y -2) 2)) (*.f64 1/3 (pow.f64 (+.f64 y -2) 3))) (*.f64 1/27 (pow.f64 (+.f64 y -2) 3))) (*.f64 (+.f64 y -2) (+.f64 (neg.f64 (pow.f64 (-.f64 2 y) 2)) (*.f64 -1/3 (fma.f64 1/3 (pow.f64 (+.f64 y -2) 2) (*.f64 (-.f64 2 y) (+.f64 y -2))))))) (/.f64 (pow.f64 x 3) (cbrt.f64 -1))) (*.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 -1) x) (+.f64 y -2)))) (fma.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 -1) (*.f64 x x)) (fma.f64 1/3 (pow.f64 (+.f64 y -2) 2) (*.f64 (-.f64 2 y) (+.f64 y -2)))) (cbrt.f64 -1)))","(+.f64 (fma.f64 1/3 (*.f64 (/.f64 (cbrt.f64 -1) (pow.f64 x 3)) (+.f64 (pow.f64 (-.f64 2 y) 3) (+.f64 (*.f64 1/27 (pow.f64 (+.f64 y -2) 3)) (*.f64 (*.f64 (pow.f64 (+.f64 y -2) 2) (+.f64 (-.f64 2 y) (*.f64 1/3 (+.f64 y -2)))) -2/3)))) (*.f64 -1/3 (*.f64 (/.f64 (+.f64 y -2) x) (cbrt.f64 -1)))) (fma.f64 -1/3 (*.f64 (/.f64 (cbrt.f64 -1) x) (/.f64 (*.f64 (+.f64 y -2) (+.f64 (*.f64 1/3 (+.f64 y -2)) (-.f64 2 y))) x)) (cbrt.f64 -1)))","(pow.f64 (/.f64 x (-.f64 2 x)) 1/3)","(cbrt.f64 (/.f64 x (-.f64 2 x)))","(+.f64 (pow.f64 (/.f64 x (-.f64 2 x)) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 (-.f64 2 x) 16)) 1/9) y)))","(+.f64 (cbrt.f64 (/.f64 x (-.f64 2 x))) (*.f64 1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (-.f64 2 x) 16)) 1/18)))))","(fma.f64 1/3 (*.f64 (*.f64 y (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (-.f64 2 x) 16)) 1/18)) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (-.f64 2 x) 16)) 1/18)) (cbrt.f64 (/.f64 x (-.f64 2 x))))","(+.f64 (pow.f64 (/.f64 x (-.f64 2 x)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 (-.f64 2 x) 16)) 1/9) y)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 (-.f64 2 x) 35)) 1/9))))))))","(+.f64 (cbrt.f64 (/.f64 x (-.f64 2 x))) (fma.f64 1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (-.f64 2 x) 16)) 1/18))) (*.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x))) (*.f64 y y)) (fma.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (-.f64 2 x) 35)) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (-.f64 2 x) 35)) 1/18))))))))","(+.f64 (cbrt.f64 (/.f64 x (-.f64 2 x))) (fma.f64 -1/3 (*.f64 (-.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (-.f64 2 x) 35)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (-.f64 2 x) 35)) 1/18) 1/3)) (/.f64 x (pow.f64 (-.f64 2 x) 3))) (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x))))) (*.f64 y (*.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (-.f64 2 x) 16)) 1/18)) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (-.f64 2 x) 16)) 1/18)))))","(+.f64 (fma.f64 1/3 (*.f64 (*.f64 y (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (-.f64 2 x) 16)) 1/18)) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (-.f64 2 x) 16)) 1/18)) (cbrt.f64 (/.f64 x (-.f64 2 x)))) (*.f64 -1/3 (*.f64 (fma.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (-.f64 2 x) 35)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (-.f64 2 x) 35)) 1/18) 1/3) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 3))) (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)))))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 (-.f64 2 x) 16)) 1/3)) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 4)) (pow.f64 (-.f64 2 x) 13)) 1/9) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 (-.f64 2 x) 35)) 1/9)))))))))) (+.f64 (pow.f64 (/.f64 x (-.f64 2 x)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 7)) (pow.f64 (-.f64 2 x) 16)) 1/9) y)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3))) (*.f64 1/3 (pow.f64 (/.f64 (*.f64 1 (pow.f64 x 17)) (pow.f64 (-.f64 2 x) 35)) 1/9)))))))))","(fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x))) (pow.f64 y 3)) (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 x 7) (pow.f64 (-.f64 2 x) 16))) (fma.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 4)) (*.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 2 x) 13)) 1/18) (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 2 x) 13)) 1/18))) (fma.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (-.f64 2 x) 35)) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (-.f64 2 x) 35)) 1/18)))))))) (+.f64 (cbrt.f64 (/.f64 x (-.f64 2 x))) (fma.f64 1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (-.f64 2 x) 16)) 1/18))) (*.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x))) (*.f64 y y)) (fma.f64 -1 (/.f64 x (pow.f64 (-.f64 2 x) 3)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (-.f64 2 x) 35)) 1/18) (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (-.f64 2 x) 35)) 1/18)))))))))","(fma.f64 -1/3 (*.f64 (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 x 7) (pow.f64 (-.f64 2 x) 16))) (fma.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 2 x) 13)) 1/18) (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 2 x) 13)) 1/18))) (-.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (-.f64 2 x) 35)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (-.f64 2 x) 35)) 1/18) 1/3)) (/.f64 x (pow.f64 (-.f64 2 x) 3))) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 4)))) (*.f64 (pow.f64 y 3) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x))))) (+.f64 (cbrt.f64 (/.f64 x (-.f64 2 x))) (fma.f64 -1/3 (*.f64 (-.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (-.f64 2 x) 35)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (-.f64 2 x) 35)) 1/18) 1/3)) (/.f64 x (pow.f64 (-.f64 2 x) 3))) (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x))))) (*.f64 y (*.f64 (*.f64 1/3 (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (-.f64 2 x) 16)) 1/18)) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (-.f64 2 x) 16)) 1/18))))))","(+.f64 (fma.f64 1/3 (*.f64 (*.f64 y (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (-.f64 2 x) 16)) 1/18)) (pow.f64 (/.f64 (pow.f64 x 7) (pow.f64 (-.f64 2 x) 16)) 1/18)) (cbrt.f64 (/.f64 x (-.f64 2 x)))) (*.f64 (*.f64 -1/3 (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)))) (+.f64 (*.f64 y (*.f64 y (fma.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (-.f64 2 x) 35)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (-.f64 2 x) 35)) 1/18) 1/3) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 3))))) (*.f64 (pow.f64 y 3) (fma.f64 1/27 (cbrt.f64 (/.f64 (pow.f64 x 7) (pow.f64 (-.f64 2 x) 16))) (-.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 2 x) 13)) 1/18) (pow.f64 (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 2 x) 13)) 1/18)) (*.f64 (fma.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (-.f64 2 x) 35)) 1/18) (*.f64 (pow.f64 (/.f64 (pow.f64 x 17) (pow.f64 (-.f64 2 x) 35)) 1/18) 1/3) (/.f64 (neg.f64 x) (pow.f64 (-.f64 2 x) 3))) -2/3)) (/.f64 x (pow.f64 (-.f64 2 x) 4))))))))"]],"stop":[["node limit",1]],"time":62.22802734375,"type":"simplify"},{"compiler":[[8958,5968]],"time":98.392822265625,"type":"eval"},{"alts":[["(fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))","done",0.12758507069442182],["(/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))","done",0.03125],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))","next",0.1676750488422101],["(fma.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2) (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))","fresh",0.29599389652663033],["(+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))))","fresh",13.017178317921472]],"compiler":[[33,21],[11,7],[28,18],[27,17],[29,19],[28,18],[27,17],[29,19]],"count":[[187,5]],"kept":[{"done":[1,1],"fresh":[3,3],"new":[182,0],"picked":[1,1]}],"min-error":[0.00390625],"time":57.494140625,"type":"prune"},{"compiler":[[100,46]],"locations":[["(cbrt.f64 (-.f64 x y))",0.0859375,true],["(/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))",0.1171875,true],["(pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)",0.38119125976844204,false],["(pow.f64 (cbrt.f64 (-.f64 x y)) 2)",0.46712875976844204,true]],"time":22.423828125,"type":"localize"},{"count":[[3,40]],"series":[["(cbrt.f64 (-.f64 x y))","y","-inf",0.22509765625],["(cbrt.f64 (-.f64 x y))","y","inf",0.25390625],["(cbrt.f64 (-.f64 x y))","y","0",0.35693359375],["(cbrt.f64 (-.f64 x y))","x","-inf",0.281982421875],["(cbrt.f64 (-.f64 x y))","x","inf",0.27587890625],["(cbrt.f64 (-.f64 x y))","x","0",0.572021484375],["(/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))","y","-inf",0.974853515625],["(/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))","y","inf",1.235107421875],["(/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))","y","0",2.583984375],["(/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))","x","-inf",1.4169921875],["(/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))","x","inf",2.99609375],["(/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))","x","0",3.26708984375],["(pow.f64 (cbrt.f64 (-.f64 x y)) 2)","y","-inf",0.32080078125],["(pow.f64 (cbrt.f64 (-.f64 x y)) 2)","y","inf",0.239013671875],["(pow.f64 (cbrt.f64 (-.f64 x y)) 2)","y","0",0.919921875],["(pow.f64 (cbrt.f64 (-.f64 x y)) 2)","x","-inf",0.3359375],["(pow.f64 (cbrt.f64 (-.f64 x y)) 2)","x","inf",0.26318359375],["(pow.f64 (cbrt.f64 (-.f64 x y)) 2)","x","0",3.14892578125]],"time":20.234130859375,"type":"series"},{"count":[[3,86]],"egraph":[[2,3695,35,0.031687458],[1,274,35,0.005310957999999999],[0,12,38,0.000369125]],"inputs":[["(pow.f64 (cbrt.f64 (-.f64 x y)) 2)","(/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2))","(cbrt.f64 (-.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))) (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 4)) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) 1/6) (*.f64 (pow.f64 (-.f64 x y) 1/6) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x y)) (pow.f64 (-.f64 x y) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (-.f64 x y)) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2)) (cbrt.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (-.f64 x y))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2))) (cbrt.f64 (exp.f64 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x y)) (*.f64 (cbrt.f64 (-.f64 x y)) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2)) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 4) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 4) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 4))) (cbrt.f64 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 4)) (*.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 1 (neg.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 4)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2) (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 x y)) 1) (/.f64 (cbrt.f64 (-.f64 x y)) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 4)) 1) (/.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 4))) (/.f64 (cbrt.f64 (-.f64 x y)) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 4))) (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 4)) (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 4))) (cbrt.f64 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2) (pow.f64 (-.f64 x y) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 2) (pow.f64 (-.f64 x y) 2))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (neg.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 4) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 x y) 2) (pow.f64 (-.f64 (-.f64 2 x) y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (/.f64 (cbrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 (-.f64 2 x) y))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (-.f64 x y)))) (cbrt.f64 (exp.f64 (cbrt.f64 (-.f64 x y)))))) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (-.f64 x y))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (-.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2) (cbrt.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) 1/6) (pow.f64 (-.f64 x y) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 4))) (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (-.f64 x y)) 1/3) (pow.f64 (sqrt.f64 (-.f64 x y)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (cbrt.f64 (fma.f64 y (+.f64 x y) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 (*.f64 x x) (*.f64 y y))) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 x y) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 x y) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 x y)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (-.f64 x y))) 1))))))"]],"rules":[["egg-rr",28],["egg-rr",37],["egg-rr",21]],"stop":[["node limit",1]],"time":60.198974609375,"type":"rewrite"},{"count":[[126,160]],"egraph":[[2,5717,4187,0.034281251],[1,1392,4187,0.012671917],[0,424,4449,0.002228167]],"inputs":[["(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) y) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) x))) (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2)))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))) (pow.f64 x 2)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) y) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) x))) (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))) (pow.f64 x 2)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) y) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) x))) (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1)))) (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 y)))) (pow.f64 x 3)) (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2)))))","(pow.f64 (pow.f64 x 2) 1/3)","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 x) 1/9) y)) (pow.f64 (pow.f64 x 2) 1/3))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 x) 1/9) y)) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9))))))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 x) 1/9) y)) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))))) (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 x))))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)))))))","(pow.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 2)) 1/3)","(+.f64 (pow.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 2)) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/9) (*.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) x))))","(+.f64 (pow.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 2)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/9) (*.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) x))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 4)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) 2)))))) (pow.f64 x 2)) (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/3)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/3) (*.f64 (-.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 5))) (+.f64 (*.f64 -2 (/.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y))) (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 4)))) (-.f64 2 y))) (+.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 4))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/3) (pow.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) 3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 10) 1) (pow.f64 y 10)) 1/9) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 4)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) 2)))))) (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3))))))))))) (pow.f64 x 3)))) (+.f64 (pow.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 2)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/9) (*.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) x))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 4)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) 2)))))) (pow.f64 x 2)) (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/3))))))","1","(+.f64 1 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) x)))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) x)) (*.f64 1/3 (/.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))))) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) 2))))) (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) x)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y)))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) 3)) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (pow.f64 y 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))))) (pow.f64 (-.f64 2 y) 2))))) (*.f64 2/3 (*.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))))) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) 2)) (pow.f64 (-.f64 2 y) 2)))) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y)))))))) (pow.f64 x 3))) (*.f64 1/3 (/.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))))) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) 2))))) (pow.f64 x 2))))))","(pow.f64 (cbrt.f64 -1) 2)","(+.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (*.f64 4 y) 4)) x)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (pow.f64 y 2) (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 4 y) 4)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 y) 4) 2)))))) (pow.f64 x 2))) (+.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (*.f64 4 y) 4)) x))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (pow.f64 y 2) (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 4 y) 4)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 y) 4) 2)))))) (pow.f64 x 2))) (+.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 4 y) 4)) (pow.f64 (-.f64 2 y) 2))) (-.f64 4 (*.f64 2 y))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 4 y) 4) 3)) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 4 y) 4)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 y) 4) 2))))) (-.f64 (*.f64 4 y) 4))) (*.f64 (pow.f64 (-.f64 2 y) 2) (-.f64 (*.f64 4 y) 4)))))) (pow.f64 x 3))) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (*.f64 4 y) 4)) x)))))","(pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3)","(+.f64 (pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))))","(+.f64 (pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 2))) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))) (pow.f64 y 2)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3)))))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 5))) (+.f64 (*.f64 -2 (/.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x))))) (-.f64 2 x))) (+.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 10)) (pow.f64 x 10)) 1/9) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 2))) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))) (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3))))))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 3) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 10)) (pow.f64 x 10)) 1/9) (*.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 2))) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))))))))))) (pow.f64 y 3)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3))) (+.f64 (pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 2))) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))) (pow.f64 y 2)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3))))))","1","(+.f64 1 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) y)))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (+.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 2))))) (pow.f64 y 2))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) y))))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (+.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 2))))) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) y)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 3)) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (+.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 2))))))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (+.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 2))))) (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))))) (*.f64 -2 (*.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2))) (-.f64 2 x))))))) (pow.f64 y 3))))))","1","(+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 4 x) 4) y)) 1)","(+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 4 x) 4) y)) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 4 (*.f64 2 x))) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 x) 4) 2)) (pow.f64 (-.f64 2 x) 2)))) (pow.f64 y 2))) 1))","(+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 4 x) 4) y)) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 4 (*.f64 2 x))) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 x) 4) 2)) (pow.f64 (-.f64 2 x) 2)))) (pow.f64 y 2))) (+.f64 1 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 4 x) 4) 3)) (+.f64 (*.f64 (-.f64 4 (*.f64 2 x)) (-.f64 (pow.f64 x 2) (+.f64 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 4 (*.f64 2 x))) (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 (pow.f64 x 2) (+.f64 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 4 (*.f64 2 x))) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 x) 4) 2)) (pow.f64 (-.f64 2 x) 2)))))) (*.f64 (-.f64 (*.f64 4 x) 4) (pow.f64 (-.f64 2 x) 2))))) (pow.f64 y 3))))))","(*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3) (pow.f64 x 2)))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3) (pow.f64 x 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (pow.f64 x 3)) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1)))))","(pow.f64 x 1/3)","(+.f64 (pow.f64 x 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/9) y)))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/9) y)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/9) (pow.f64 y 2)))))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))) (pow.f64 y 3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/9) y)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/9) (pow.f64 y 2))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))","(*.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 -1) 2))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) y) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) x))) (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2)))","(fma.f64 2/3 (*.f64 (*.f64 (pow.f64 y 1/18) (pow.f64 y 1/18)) (*.f64 (cbrt.f64 (cbrt.f64 -1)) x)) (*.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 -1) 2)))","(fma.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 -1) 2) (*.f64 (*.f64 (pow.f64 y 1/18) (pow.f64 y 1/18)) (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 -1)) x) 2/3)))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))) (pow.f64 x 2)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) y) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) x))) (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2))))","(fma.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)))) -1/9) (*.f64 x x) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 y 1/18) (pow.f64 y 1/18)) (*.f64 (cbrt.f64 (cbrt.f64 -1)) x)) (*.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 -1) 2))))","(fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18)) -1/9)) (*.f64 x x) (fma.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 -1) 2) (*.f64 (*.f64 (pow.f64 y 1/18) (pow.f64 y 1/18)) (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 -1)) x) 2/3))))","(fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 -1 (cbrt.f64 -1)))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18)) -1/9)) (*.f64 x x) (fma.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 -1) 2) (*.f64 (*.f64 (pow.f64 y 1/18) (pow.f64 y 1/18)) (*.f64 (*.f64 (cbrt.f64 (cbrt.f64 -1)) x) 2/3))))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 4)) 1/9) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)) 1/3)))) (pow.f64 x 2)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (pow.f64 1 4) y) 1/9) (*.f64 (pow.f64 (cbrt.f64 -1) 1/3) x))) (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 y) 1/3) (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (cbrt.f64 -1)))) (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 y)))) (pow.f64 x 3)) (*.f64 (pow.f64 (*.f64 1 (pow.f64 y 2)) 1/3) (pow.f64 (cbrt.f64 -1) 2)))))","(fma.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4)))) -1/9) (*.f64 x x) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 y 1/18) (pow.f64 y 1/18)) (*.f64 (cbrt.f64 (cbrt.f64 -1)) x)) (fma.f64 (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 y)) (/.f64 (fma.f64 1/27 (/.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) 1) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -2/9 (/.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) 1) (pow.f64 (cbrt.f64 -1) 2)))) (cbrt.f64 -1))) (*.f64 (/.f64 1 y) 2/27)) (pow.f64 x 3) (*.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 -1) 2)))))","(fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 4))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18)) -1/9)) (*.f64 x x) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 y 1/18) (pow.f64 y 1/18)) (*.f64 (cbrt.f64 (cbrt.f64 -1)) x)) (fma.f64 (fma.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 1 y)) (*.f64 (/.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 (cbrt.f64 -1) 2)) -5/27)) (cbrt.f64 -1)) (/.f64 2/27 y)) (pow.f64 x 3) (*.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 -1) 2)))))","(fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 -1 (cbrt.f64 -1)))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 4)) 1/18)) -1/9)) (*.f64 x x) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 y 1/18) (pow.f64 y 1/18)) (*.f64 (cbrt.f64 (cbrt.f64 -1)) x)) (fma.f64 (fma.f64 -2/3 (/.f64 (*.f64 (cbrt.f64 (/.f64 1 y)) (*.f64 (/.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 (cbrt.f64 -1) 2)) -5/27)) (cbrt.f64 -1)) (/.f64 2/27 y)) (pow.f64 x 3) (*.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 -1) 2)))))","(pow.f64 (pow.f64 x 2) 1/3)","(cbrt.f64 (*.f64 x x))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 x) 1/9) y)) (pow.f64 (pow.f64 x 2) 1/3))","(fma.f64 -2/3 (*.f64 y (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18))) (cbrt.f64 (*.f64 x x)))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 x) 1/9) y)) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9))))))","(+.f64 (fma.f64 -2/3 (*.f64 y (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18))) (cbrt.f64 (*.f64 x x))) (*.f64 (*.f64 y y) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18)) -1/9)))","(fma.f64 -2/3 (*.f64 y (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18))) (fma.f64 (*.f64 y y) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18)) -1/9) (cbrt.f64 (*.f64 x x))))","(+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (*.f64 1 x) 1/9) y)) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 x) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))))) (*.f64 2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 x))))) (+.f64 (pow.f64 (pow.f64 x 2) 1/3) (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)) (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/9)))))))","(fma.f64 -2/3 (*.f64 y (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18))) (fma.f64 (pow.f64 y 3) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 x)) (+.f64 (*.f64 2/9 (cbrt.f64 (/.f64 1 (*.f64 x x)))) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x x))) -1/27))) (*.f64 2/27 (/.f64 1 x))) (+.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 y y) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18)) -1/9)))))","(fma.f64 -2/3 (*.f64 y (*.f64 (pow.f64 x 1/18) (pow.f64 x 1/18))) (fma.f64 (pow.f64 y 3) (fma.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 1 x))) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x x))) 5/27) (/.f64 2/27 x)) (fma.f64 (*.f64 y y) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 x 4)) 1/18)) -1/9) (cbrt.f64 (*.f64 x x)))))","(pow.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 2)) 1/3)","(cbrt.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 2)))","(cbrt.f64 (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 2) y)))","(cbrt.f64 (*.f64 y (/.f64 y (pow.f64 (-.f64 2 y) 2))))","(+.f64 (pow.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 2)) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/9) (*.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) x))))","(+.f64 (cbrt.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 2))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/18))) (*.f64 x (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))))))","(fma.f64 1/3 (*.f64 x (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/18)) (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 3) y)))))) (cbrt.f64 (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 2) y))))","(fma.f64 1/3 (*.f64 x (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/18)) (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 3) y)))))) (cbrt.f64 (*.f64 y (/.f64 y (pow.f64 (-.f64 2 y) 2)))))","(+.f64 (pow.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 2)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/9) (*.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) x))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 4)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) 2)))))) (pow.f64 x 2)) (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/3)))))","(+.f64 (cbrt.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 2))) (*.f64 1/3 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/18)) (*.f64 x (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))))) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (+.f64 (fma.f64 -2 (/.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 4))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/18))) (pow.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))) 2)))) (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4))))))))","(fma.f64 1/3 (fma.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/18)) (*.f64 (*.f64 x -2) (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 3) y)))) (*.f64 (*.f64 x x) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (fma.f64 -2 (-.f64 (/.f64 (*.f64 y -2) (pow.f64 (-.f64 2 y) 3)) (/.f64 (*.f64 (*.f64 y y) -2) (pow.f64 (-.f64 2 y) 4))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/18)) (pow.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 3) y)))) 2)) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 4) y))))) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)))))) (cbrt.f64 (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 2) y))))","(fma.f64 1/3 (fma.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/18)) (*.f64 (*.f64 x -2) (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 3) y)))) (*.f64 (*.f64 x x) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (fma.f64 -2 (-.f64 (/.f64 (*.f64 y -2) (pow.f64 (-.f64 2 y) 3)) (/.f64 (*.f64 (*.f64 y y) -2) (pow.f64 (-.f64 2 y) 4))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/18)) (pow.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 3) y)))) 2)) (*.f64 y (/.f64 y (pow.f64 (-.f64 2 y) 4)))))) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)))))) (cbrt.f64 (*.f64 y (/.f64 y (pow.f64 (-.f64 2 y) 2)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/3) (*.f64 (-.f64 (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 5))) (+.f64 (*.f64 -2 (/.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y))) (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 4)))) (-.f64 2 y))) (+.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 4))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/3) (pow.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) 3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 10) 1) (pow.f64 y 10)) 1/9) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 4)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) 2)))))) (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3))))))))))) (pow.f64 x 3)))) (+.f64 (pow.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 2)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/9) (*.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) x))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (+.f64 (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y))) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 4)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) (pow.f64 y 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 -2 (/.f64 (pow.f64 y 2) (pow.f64 (-.f64 2 y) 3)))) 2)))))) (pow.f64 x 2)) (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 2 y) 4) 1) (pow.f64 y 4)) 1/3))))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4))) (*.f64 (pow.f64 x 3) (-.f64 (/.f64 (*.f64 -2 (*.f64 y y)) (pow.f64 (-.f64 2 y) 5)) (fma.f64 -2 (/.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (fma.f64 -2 (/.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 4)))) (-.f64 2 y)) (fma.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 4)) (fma.f64 1/27 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4))) (pow.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))) 3)) (*.f64 2/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 10) (pow.f64 y 10)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 10) (pow.f64 y 10)) 1/18)) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (+.f64 (fma.f64 -2 (/.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 4))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/18))) (pow.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))) 2))))) (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))))))))))) (+.f64 (cbrt.f64 (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 2))) (*.f64 1/3 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/18)) (*.f64 x (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))))) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (+.f64 (fma.f64 -2 (/.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))) (-.f64 2 y)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 4))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/18))) (pow.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 (*.f64 y y) (pow.f64 (-.f64 2 y) 3)))) 2)))) (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)))))))))","(fma.f64 1/3 (*.f64 (-.f64 (*.f64 -2 (-.f64 (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 5) y)) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (/.f64 (fma.f64 -2 (-.f64 (/.f64 (*.f64 y -2) (pow.f64 (-.f64 2 y) 3)) (/.f64 (*.f64 (*.f64 y y) -2) (pow.f64 (-.f64 2 y) 4))) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 4) y))) (-.f64 2 y))))) (fma.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 4)) (fma.f64 2/3 (*.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 3) y)))) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (fma.f64 -2 (-.f64 (/.f64 (*.f64 y -2) (pow.f64 (-.f64 2 y) 3)) (/.f64 (*.f64 (*.f64 y y) -2) (pow.f64 (-.f64 2 y) 4))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/18)) (pow.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 3) y)))) 2)) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 4) y))))) (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 10) (pow.f64 y 10)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 10) (pow.f64 y 10)) 1/18)))) (*.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4))) (*.f64 (*.f64 -8 (pow.f64 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 3) y))) 3)) 1/27))))) (*.f64 (pow.f64 x 3) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4))))) (fma.f64 1/3 (fma.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/18)) (*.f64 (*.f64 x -2) (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 3) y)))) (*.f64 (*.f64 x x) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (fma.f64 -2 (-.f64 (/.f64 (*.f64 y -2) (pow.f64 (-.f64 2 y) 3)) (/.f64 (*.f64 (*.f64 y y) -2) (pow.f64 (-.f64 2 y) 4))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/18)) (pow.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 3) y)))) 2)) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 4) y))))) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)))))) (cbrt.f64 (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 2) y)))))","(fma.f64 1/3 (*.f64 (-.f64 (*.f64 -2 (-.f64 (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 5) y)) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (/.f64 (fma.f64 -2 (-.f64 (/.f64 (*.f64 y -2) (pow.f64 (-.f64 2 y) 3)) (/.f64 (*.f64 (*.f64 y y) -2) (pow.f64 (-.f64 2 y) 4))) (*.f64 y (/.f64 y (pow.f64 (-.f64 2 y) 4)))) (-.f64 2 y))))) (fma.f64 -2 (/.f64 y (pow.f64 (-.f64 2 y) 4)) (fma.f64 2/3 (*.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 3) y)))) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (fma.f64 -2 (-.f64 (/.f64 (*.f64 y -2) (pow.f64 (-.f64 2 y) 3)) (/.f64 (*.f64 (*.f64 y y) -2) (pow.f64 (-.f64 2 y) 4))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/18)) (pow.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 3) y)))) 2)) (*.f64 y (/.f64 y (pow.f64 (-.f64 2 y) 4)))))) (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 10) (pow.f64 y 10)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 10) (pow.f64 y 10)) 1/18)))) (*.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4))) (*.f64 (*.f64 -8 (pow.f64 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 3) y))) 3)) 1/27))))) (*.f64 (pow.f64 x 3) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4))))) (fma.f64 1/3 (fma.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)) 1/18)) (*.f64 (*.f64 x -2) (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 3) y)))) (*.f64 (*.f64 x x) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (fma.f64 -2 (-.f64 (/.f64 (*.f64 y -2) (pow.f64 (-.f64 2 y) 3)) (/.f64 (*.f64 (*.f64 y y) -2) (pow.f64 (-.f64 2 y) 4))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 y y)) 1/18)) (pow.f64 (*.f64 -2 (-.f64 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 y (/.f64 (pow.f64 (-.f64 2 y) 3) y)))) 2)) (*.f64 y (/.f64 y (pow.f64 (-.f64 2 y) 4)))))) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 y) 4) (pow.f64 y 4)))))) (cbrt.f64 (*.f64 y (/.f64 y (pow.f64 (-.f64 2 y) 2))))))","1","(+.f64 1 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) x)))","(+.f64 1 (/.f64 (*.f64 1/3 (*.f64 -2 (-.f64 y (-.f64 2 y)))) x))","(+.f64 1 (/.f64 (*.f64 -2/3 (-.f64 y (-.f64 2 y))) x))","(+.f64 1 (/.f64 (*.f64 -2/3 (+.f64 (+.f64 y -2) y)) x))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) x)) (*.f64 1/3 (/.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))))) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) 2))))) (pow.f64 x 2)))))","(+.f64 1 (*.f64 1/3 (+.f64 (/.f64 (*.f64 -2 (-.f64 y (-.f64 2 y))) x) (/.f64 (-.f64 (*.f64 y y) (fma.f64 -2 (*.f64 (-.f64 2 y) (*.f64 -2 (-.f64 y (-.f64 2 y)))) (fma.f64 1/3 (pow.f64 (*.f64 -2 (-.f64 y (-.f64 2 y))) 2) (pow.f64 (-.f64 2 y) 2)))) (*.f64 x x)))))","(+.f64 1 (fma.f64 1/3 (/.f64 (-.f64 (*.f64 y y) (fma.f64 -2 (*.f64 (-.f64 2 y) (*.f64 -2 (-.f64 y (-.f64 2 y)))) (fma.f64 1/3 (pow.f64 (*.f64 -2 (-.f64 y (-.f64 2 y))) 2) (pow.f64 (-.f64 2 y) 2)))) (*.f64 x x)) (/.f64 (*.f64 -2/3 (-.f64 y (-.f64 2 y))) x)))","(+.f64 1 (fma.f64 1/3 (/.f64 (-.f64 (*.f64 y y) (fma.f64 -2 (*.f64 (-.f64 2 y) (*.f64 -2 (+.f64 (+.f64 y -2) y))) (fma.f64 1/3 (pow.f64 (*.f64 -2 (+.f64 (+.f64 y -2) y)) 2) (pow.f64 (-.f64 2 y) 2)))) (*.f64 x x)) (/.f64 (*.f64 -2/3 (+.f64 (+.f64 y -2) y)) x)))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) x)) (+.f64 (*.f64 -1/3 (/.f64 (+.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y)))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) 3)) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (pow.f64 y 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))))) (pow.f64 (-.f64 2 y) 2))))) (*.f64 2/3 (*.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))))) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) 2)) (pow.f64 (-.f64 2 y) 2)))) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y)))))))) (pow.f64 x 3))) (*.f64 1/3 (/.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))))) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 y) (*.f64 -2 (-.f64 2 y))) 2))))) (pow.f64 x 2))))))","(+.f64 1 (fma.f64 1/3 (/.f64 (*.f64 -2 (-.f64 y (-.f64 2 y))) x) (fma.f64 -1/3 (/.f64 (fma.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 -2 (-.f64 y (-.f64 2 y))) (fma.f64 1/27 (pow.f64 (*.f64 -2 (-.f64 y (-.f64 2 y))) 3) (fma.f64 -2 (*.f64 (-.f64 2 y) (-.f64 (*.f64 y y) (fma.f64 -2 (*.f64 (-.f64 2 y) (*.f64 -2 (-.f64 y (-.f64 2 y)))) (pow.f64 (-.f64 2 y) 2)))) (*.f64 (*.f64 2/3 (-.f64 (*.f64 y y) (fma.f64 -2 (*.f64 (-.f64 2 y) (*.f64 -2 (-.f64 y (-.f64 2 y)))) (fma.f64 1/3 (pow.f64 (*.f64 -2 (-.f64 y (-.f64 2 y))) 2) (pow.f64 (-.f64 2 y) 2))))) (*.f64 -2 (-.f64 y (-.f64 2 y))))))) (pow.f64 x 3)) (/.f64 (*.f64 1/3 (-.f64 (*.f64 y y) (fma.f64 -2 (*.f64 (-.f64 2 y) (*.f64 -2 (-.f64 y (-.f64 2 y)))) (fma.f64 1/3 (pow.f64 (*.f64 -2 (-.f64 y (-.f64 2 y))) 2) (pow.f64 (-.f64 2 y) 2))))) (*.f64 x x)))))","(+.f64 (+.f64 1 (/.f64 (*.f64 -2/3 (-.f64 y (-.f64 2 y))) x)) (fma.f64 -1/3 (/.f64 (fma.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 -2 (-.f64 y (-.f64 2 y))) (fma.f64 1/27 (*.f64 -8 (pow.f64 (-.f64 y (-.f64 2 y)) 3)) (fma.f64 2/3 (*.f64 -2 (*.f64 (-.f64 y (-.f64 2 y)) (-.f64 (*.f64 y y) (fma.f64 -2 (*.f64 (-.f64 2 y) (*.f64 -2 (-.f64 y (-.f64 2 y)))) (fma.f64 1/3 (pow.f64 (*.f64 -2 (-.f64 y (-.f64 2 y))) 2) (pow.f64 (-.f64 2 y) 2)))))) (*.f64 (-.f64 2 y) (*.f64 (-.f64 (*.f64 y y) (fma.f64 (*.f64 (-.f64 2 y) -2) (*.f64 -2 (-.f64 y (-.f64 2 y))) (pow.f64 (-.f64 2 y) 2))) -2))))) (pow.f64 x 3)) (/.f64 (*.f64 1/3 (-.f64 (*.f64 y y) (fma.f64 -2 (*.f64 (-.f64 2 y) (*.f64 -2 (-.f64 y (-.f64 2 y)))) (fma.f64 1/3 (pow.f64 (*.f64 -2 (-.f64 y (-.f64 2 y))) 2) (pow.f64 (-.f64 2 y) 2))))) (*.f64 x x))))","(+.f64 (+.f64 1 (/.f64 (*.f64 -2/3 (+.f64 (+.f64 y -2) y)) x)) (fma.f64 -1/3 (/.f64 (fma.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 -2 (+.f64 (+.f64 y -2) y)) (fma.f64 1/27 (*.f64 -8 (pow.f64 (+.f64 (+.f64 y -2) y) 3)) (fma.f64 2/3 (*.f64 -2 (*.f64 (+.f64 (+.f64 y -2) y) (-.f64 (*.f64 y y) (fma.f64 -2 (*.f64 (-.f64 2 y) (*.f64 -2 (+.f64 (+.f64 y -2) y))) (fma.f64 1/3 (pow.f64 (*.f64 -2 (+.f64 (+.f64 y -2) y)) 2) (pow.f64 (-.f64 2 y) 2)))))) (*.f64 (-.f64 2 y) (*.f64 (-.f64 (*.f64 y y) (fma.f64 (*.f64 (-.f64 2 y) -2) (*.f64 -2 (+.f64 (+.f64 y -2) y)) (pow.f64 (-.f64 2 y) 2))) -2))))) (pow.f64 x 3)) (/.f64 (*.f64 1/3 (-.f64 (*.f64 y y) (fma.f64 -2 (*.f64 (-.f64 2 y) (*.f64 -2 (+.f64 (+.f64 y -2) y))) (fma.f64 1/3 (pow.f64 (*.f64 -2 (+.f64 (+.f64 y -2) y)) 2) (pow.f64 (-.f64 2 y) 2))))) (*.f64 x x))))","(pow.f64 (cbrt.f64 -1) 2)","(+.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (*.f64 4 y) 4)) x)))","(+.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 -1/3 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (/.f64 x (fma.f64 4 y -4)))))","(fma.f64 -1/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1) 2) x) (fma.f64 y 4 -4)) (pow.f64 (cbrt.f64 -1) 2))","(fma.f64 -1/3 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (/.f64 (fma.f64 y 4 -4) x)) (pow.f64 (cbrt.f64 -1) 2))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (pow.f64 y 2) (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 4 y) 4)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 y) 4) 2)))))) (pow.f64 x 2))) (+.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (*.f64 4 y) 4)) x))))","(fma.f64 1/3 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (/.f64 (*.f64 x x) (-.f64 (*.f64 y y) (+.f64 (fma.f64 (+.f64 4 (*.f64 y -2)) (fma.f64 4 y -4) (pow.f64 (-.f64 2 y) 2)) (*.f64 1/3 (pow.f64 (fma.f64 4 y -4) 2)))))) (+.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 -1/3 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (/.f64 x (fma.f64 4 y -4))))))","(fma.f64 1/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 x x)) (-.f64 (*.f64 y y) (fma.f64 (fma.f64 y 4 -4) (+.f64 4 (*.f64 y -2)) (fma.f64 1/3 (pow.f64 (fma.f64 y 4 -4) 2) (pow.f64 (-.f64 2 y) 2))))) (fma.f64 -1/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1) 2) x) (fma.f64 y 4 -4)) (pow.f64 (cbrt.f64 -1) 2)))","(fma.f64 1/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 x x)) (-.f64 (*.f64 y y) (fma.f64 (fma.f64 y 4 -4) (+.f64 4 (*.f64 y -2)) (fma.f64 1/3 (pow.f64 (fma.f64 y 4 -4) 2) (pow.f64 (-.f64 2 y) 2))))) (fma.f64 -1/3 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (/.f64 (fma.f64 y 4 -4) x)) (pow.f64 (cbrt.f64 -1) 2)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (pow.f64 y 2) (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 4 y) 4)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 y) 4) 2)))))) (pow.f64 x 2))) (+.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (+.f64 (*.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 4 y) 4)) (pow.f64 (-.f64 2 y) 2))) (-.f64 4 (*.f64 2 y))) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 4 y) 4) 3)) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (pow.f64 y 2) (+.f64 (*.f64 (-.f64 4 (*.f64 2 y)) (-.f64 (*.f64 4 y) 4)) (+.f64 (pow.f64 (-.f64 2 y) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 y) 4) 2))))) (-.f64 (*.f64 4 y) 4))) (*.f64 (pow.f64 (-.f64 2 y) 2) (-.f64 (*.f64 4 y) 4)))))) (pow.f64 x 3))) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (cbrt.f64 -1) 2) (-.f64 (*.f64 4 y) 4)) x)))))","(fma.f64 1/3 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (/.f64 (*.f64 x x) (-.f64 (*.f64 y y) (+.f64 (fma.f64 (+.f64 4 (*.f64 y -2)) (fma.f64 4 y -4) (pow.f64 (-.f64 2 y) 2)) (*.f64 1/3 (pow.f64 (fma.f64 4 y -4) 2)))))) (+.f64 (pow.f64 (cbrt.f64 -1) 2) (fma.f64 1/3 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (/.f64 (pow.f64 x 3) (fma.f64 (-.f64 (*.f64 y y) (fma.f64 (+.f64 4 (*.f64 y -2)) (fma.f64 4 y -4) (pow.f64 (-.f64 2 y) 2))) (+.f64 4 (*.f64 y -2)) (fma.f64 1/27 (pow.f64 (fma.f64 4 y -4) 3) (fma.f64 2/3 (*.f64 (fma.f64 4 y -4) (-.f64 (*.f64 y y) (+.f64 (fma.f64 (+.f64 4 (*.f64 y -2)) (fma.f64 4 y -4) (pow.f64 (-.f64 2 y) 2)) (*.f64 1/3 (pow.f64 (fma.f64 4 y -4) 2))))) (*.f64 (pow.f64 (-.f64 2 y) 2) (fma.f64 4 y -4))))))) (*.f64 -1/3 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (/.f64 x (fma.f64 4 y -4)))))))","(+.f64 (fma.f64 1/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)) (fma.f64 (+.f64 4 (*.f64 y -2)) (-.f64 (*.f64 y y) (fma.f64 (fma.f64 y 4 -4) (+.f64 4 (*.f64 y -2)) (pow.f64 (-.f64 2 y) 2))) (fma.f64 1/27 (pow.f64 (fma.f64 y 4 -4) 3) (*.f64 (fma.f64 y 4 -4) (+.f64 (*.f64 2/3 (-.f64 (*.f64 y y) (fma.f64 (fma.f64 y 4 -4) (+.f64 4 (*.f64 y -2)) (fma.f64 1/3 (pow.f64 (fma.f64 y 4 -4) 2) (pow.f64 (-.f64 2 y) 2))))) (pow.f64 (-.f64 2 y) 2)))))) (*.f64 -1/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1) 2) x) (fma.f64 y 4 -4)))) (fma.f64 1/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 x x)) (-.f64 (*.f64 y y) (fma.f64 (fma.f64 y 4 -4) (+.f64 4 (*.f64 y -2)) (fma.f64 1/3 (pow.f64 (fma.f64 y 4 -4) 2) (pow.f64 (-.f64 2 y) 2))))) (pow.f64 (cbrt.f64 -1) 2)))","(+.f64 (fma.f64 1/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)) (fma.f64 (+.f64 4 (*.f64 y -2)) (-.f64 (*.f64 y y) (fma.f64 (fma.f64 y 4 -4) (+.f64 4 (*.f64 y -2)) (pow.f64 (-.f64 2 y) 2))) (fma.f64 1/27 (pow.f64 (fma.f64 y 4 -4) 3) (*.f64 (fma.f64 y 4 -4) (+.f64 (*.f64 2/3 (-.f64 (*.f64 y y) (fma.f64 (fma.f64 y 4 -4) (+.f64 4 (*.f64 y -2)) (fma.f64 1/3 (pow.f64 (fma.f64 y 4 -4) 2) (pow.f64 (-.f64 2 y) 2))))) (pow.f64 (-.f64 2 y) 2)))))) (*.f64 (/.f64 -1/3 x) (*.f64 (pow.f64 (cbrt.f64 -1) 2) (fma.f64 y 4 -4)))) (fma.f64 1/3 (*.f64 (/.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 x x)) (-.f64 (*.f64 y y) (fma.f64 (fma.f64 y 4 -4) (+.f64 4 (*.f64 y -2)) (fma.f64 1/3 (pow.f64 (fma.f64 y 4 -4) 2) (pow.f64 (-.f64 2 y) 2))))) (pow.f64 (cbrt.f64 -1) 2)))","(pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3)","(cbrt.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 2)))","(+.f64 (pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))))","(+.f64 (cbrt.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 2))) (*.f64 1/3 (*.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)) 1/18))))))","(fma.f64 1/3 (*.f64 -2 (*.f64 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3))) (*.f64 (*.f64 y (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)) 1/18)) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)) 1/18)))) (cbrt.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 2))))","(+.f64 (pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 2))) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))) (pow.f64 y 2)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3)))))","(+.f64 (cbrt.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 2))) (*.f64 1/3 (+.f64 (*.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)) 1/18)))) (*.f64 (-.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 4))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/18)) (pow.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) 2)) (*.f64 -2 (/.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x))))) (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4))))))))","(fma.f64 1/3 (fma.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) (*.f64 (*.f64 y (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)) 1/18)) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)) 1/18)) (*.f64 (*.f64 y y) (*.f64 (-.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (fma.f64 -2 (-.f64 (/.f64 (*.f64 x -2) (pow.f64 (-.f64 2 x) 3)) (/.f64 (*.f64 (*.f64 x x) -2) (pow.f64 (-.f64 2 x) 4))) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 4)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/18)) (*.f64 (pow.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) 2) 1/3))) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)))))) (cbrt.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 2))))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 5))) (+.f64 (*.f64 -2 (/.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x))))) (-.f64 2 x))) (+.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 4))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 10)) (pow.f64 x 10)) 1/9) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 2))) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))) (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3))))))) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 3) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 10)) (pow.f64 x 10)) 1/9) (*.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 2))) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))))))))))) (pow.f64 y 3)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3))) (+.f64 (pow.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 2)) 1/3) (+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) y) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/9))) (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) (pow.f64 x 2)) 1/9) (pow.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) 2))) (*.f64 -2 (/.f64 (-.f64 (*.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 2))) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))) (pow.f64 y 2)) (pow.f64 (/.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 4)) (pow.f64 x 4)) 1/3))))))","(fma.f64 1/3 (*.f64 (-.f64 (/.f64 (*.f64 -2 (*.f64 x x)) (pow.f64 (-.f64 2 x) 5)) (fma.f64 -2 (/.f64 (-.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 4))) (*.f64 -2 (/.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))) (-.f64 2 x)) (fma.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 4)) (fma.f64 1/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 10) (pow.f64 x 10)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 10) (pow.f64 x 10)) 1/18)) (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3))))) (-.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 4))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/18)) (pow.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) 2)) (*.f64 -2 (/.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))) (fma.f64 1/27 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4))) (pow.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) 3)) (*.f64 1/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 10) (pow.f64 x 10)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 10) (pow.f64 x 10)) 1/18)) (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3))))) (-.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 4))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/18)) (pow.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) 2)) (*.f64 -2 (/.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x)))))))))))) (*.f64 (pow.f64 y 3) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4))))) (+.f64 (cbrt.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 2))) (*.f64 1/3 (+.f64 (*.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) (*.f64 y (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)) 1/18)))) (*.f64 (-.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 4))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/18)) (pow.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) 2)) (*.f64 -2 (/.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) (-.f64 2 x))))) (*.f64 (*.f64 y y) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)))))))))","(fma.f64 1/3 (*.f64 (-.f64 (*.f64 -2 (-.f64 (/.f64 x (/.f64 (pow.f64 (-.f64 2 x) 5) x)) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (/.f64 (fma.f64 -2 (-.f64 (/.f64 (*.f64 x -2) (pow.f64 (-.f64 2 x) 3)) (/.f64 (*.f64 (*.f64 x x) -2) (pow.f64 (-.f64 2 x) 4))) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 4))) (-.f64 2 x))))) (fma.f64 -2 (/.f64 x (pow.f64 (-.f64 2 x) 4)) (fma.f64 1/3 (*.f64 (-.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (fma.f64 -2 (-.f64 (/.f64 (*.f64 x -2) (pow.f64 (-.f64 2 x) 3)) (/.f64 (*.f64 (*.f64 x x) -2) (pow.f64 (-.f64 2 x) 4))) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 4)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/18)) (*.f64 (pow.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) 2) 1/3))) (*.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 10) (pow.f64 x 10)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 10) (pow.f64 x 10)) 1/18)))) (fma.f64 1/3 (*.f64 (-.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (fma.f64 -2 (-.f64 (/.f64 (*.f64 x -2) (pow.f64 (-.f64 2 x) 3)) (/.f64 (*.f64 (*.f64 x x) -2) (pow.f64 (-.f64 2 x) 4))) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 4)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/18)) (*.f64 (pow.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) 2) 1/3))) (*.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 10) (pow.f64 x 10)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 10) (pow.f64 x 10)) 1/18)))) (*.f64 (*.f64 -8 (pow.f64 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3))) 3)) (*.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4))) 1/27)))))) (*.f64 (pow.f64 y 3) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4))))) (fma.f64 1/3 (fma.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) (*.f64 (*.f64 y (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)) 1/18)) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)) 1/18)) (*.f64 (*.f64 y y) (*.f64 (-.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (fma.f64 -2 (-.f64 (/.f64 (*.f64 x -2) (pow.f64 (-.f64 2 x) 3)) (/.f64 (*.f64 (*.f64 x x) -2) (pow.f64 (-.f64 2 x) 4))) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 4)))) (*.f64 (*.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/18) (pow.f64 (/.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 x x)) 1/18)) (*.f64 (pow.f64 (*.f64 -2 (-.f64 (/.f64 x (pow.f64 (-.f64 2 x) 2)) (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 3)))) 2) 1/3))) (cbrt.f64 (/.f64 (pow.f64 (-.f64 2 x) 4) (pow.f64 x 4)))))) (cbrt.f64 (/.f64 (*.f64 x x) (pow.f64 (-.f64 2 x) 2)))))","1","(+.f64 1 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) y)))","(+.f64 1 (*.f64 1/3 (/.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) y)))","(+.f64 1 (/.f64 (*.f64 -2/3 (+.f64 (-.f64 x 2) x)) y))","(+.f64 1 (/.f64 (*.f64 -2/3 (+.f64 (+.f64 x -2) x)) y))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (+.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 2))))) (pow.f64 y 2))) (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) y))))","(+.f64 1 (*.f64 1/3 (+.f64 (/.f64 (-.f64 (*.f64 x x) (+.f64 (fma.f64 -2 (*.f64 (-.f64 2 x) (*.f64 -2 (-.f64 x (-.f64 2 x)))) (pow.f64 (-.f64 2 x) 2)) (*.f64 1/3 (pow.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) 2)))) (*.f64 y y)) (/.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) y))))","(+.f64 1 (fma.f64 1/3 (/.f64 (-.f64 (*.f64 x x) (fma.f64 (*.f64 4 (+.f64 (-.f64 x 2) x)) (-.f64 2 x) (fma.f64 1/3 (pow.f64 (*.f64 -2 (+.f64 (-.f64 x 2) x)) 2) (pow.f64 (-.f64 2 x) 2)))) (*.f64 y y)) (/.f64 (*.f64 -2/3 (+.f64 (-.f64 x 2) x)) y)))","(+.f64 1 (fma.f64 1/3 (/.f64 (-.f64 (*.f64 x x) (fma.f64 (*.f64 4 (+.f64 (+.f64 x -2) x)) (-.f64 2 x) (fma.f64 1/3 (pow.f64 (*.f64 -2 (+.f64 (+.f64 x -2) x)) 2) (pow.f64 (-.f64 2 x) 2)))) (*.f64 y y)) (/.f64 (*.f64 -2/3 (+.f64 (+.f64 x -2) x)) y)))","(+.f64 1 (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (+.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 2))))) (pow.f64 y 2))) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) y)) (*.f64 -1/3 (/.f64 (+.f64 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2)) (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 3)) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (+.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 2))))))) (+.f64 (*.f64 1/3 (*.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (+.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 1/3 (pow.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) 2))))) (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))))) (*.f64 -2 (*.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 -2 (*.f64 (-.f64 (*.f64 -2 x) (*.f64 -2 (-.f64 2 x))) (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2))) (-.f64 2 x))))))) (pow.f64 y 3))))))","(+.f64 1 (fma.f64 1/3 (/.f64 (-.f64 (*.f64 x x) (+.f64 (fma.f64 -2 (*.f64 (-.f64 2 x) (*.f64 -2 (-.f64 x (-.f64 2 x)))) (pow.f64 (-.f64 2 x) 2)) (*.f64 1/3 (pow.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) 2)))) (*.f64 y y)) (fma.f64 1/3 (/.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) y) (*.f64 -1/3 (/.f64 (fma.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) (pow.f64 (-.f64 2 x) 2) (fma.f64 1/27 (pow.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) 3) (fma.f64 1/3 (*.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) (-.f64 (*.f64 x x) (+.f64 (fma.f64 -2 (*.f64 (-.f64 2 x) (*.f64 -2 (-.f64 x (-.f64 2 x)))) (pow.f64 (-.f64 2 x) 2)) (*.f64 1/3 (pow.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) 2))))) (fma.f64 1/3 (*.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) (-.f64 (*.f64 x x) (+.f64 (fma.f64 -2 (*.f64 (-.f64 2 x) (*.f64 -2 (-.f64 x (-.f64 2 x)))) (pow.f64 (-.f64 2 x) 2)) (*.f64 1/3 (pow.f64 (*.f64 -2 (-.f64 x (-.f64 2 x))) 2))))) (*.f64 -2 (*.f64 (-.f64 2 x) (-.f64 (*.f64 x x) (fma.f64 -2 (*.f64 (-.f64 2 x) (*.f64 -2 (-.f64 x (-.f64 2 x)))) (pow.f64 (-.f64 2 x) 2))))))))) (pow.f64 y 3))))))","(+.f64 1 (fma.f64 1/3 (/.f64 (-.f64 (*.f64 x x) (fma.f64 (*.f64 4 (+.f64 (-.f64 x 2) x)) (-.f64 2 x) (fma.f64 1/3 (pow.f64 (*.f64 -2 (+.f64 (-.f64 x 2) x)) 2) (pow.f64 (-.f64 2 x) 2)))) (*.f64 y y)) (fma.f64 -1/3 (/.f64 (fma.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 -2 (+.f64 (-.f64 x 2) x)) (fma.f64 1/27 (*.f64 -8 (pow.f64 (+.f64 (-.f64 x 2) x) 3)) (+.f64 (*.f64 (*.f64 -2 (-.f64 2 x)) (-.f64 (*.f64 x x) (*.f64 (-.f64 2 x) (+.f64 (-.f64 2 x) (*.f64 4 (+.f64 (-.f64 x 2) x)))))) (*.f64 (*.f64 (*.f64 -2 (+.f64 (-.f64 x 2) x)) (-.f64 (*.f64 x x) (fma.f64 (*.f64 4 (+.f64 (-.f64 x 2) x)) (-.f64 2 x) (fma.f64 1/3 (pow.f64 (*.f64 -2 (+.f64 (-.f64 x 2) x)) 2) (pow.f64 (-.f64 2 x) 2))))) 2/3)))) (pow.f64 y 3)) (/.f64 (*.f64 -2/3 (+.f64 (-.f64 x 2) x)) y))))","(+.f64 1 (fma.f64 1/3 (/.f64 (-.f64 (*.f64 x x) (fma.f64 (*.f64 4 (+.f64 (+.f64 x -2) x)) (-.f64 2 x) (fma.f64 1/3 (pow.f64 (*.f64 -2 (+.f64 (+.f64 x -2) x)) 2) (pow.f64 (-.f64 2 x) 2)))) (*.f64 y y)) (fma.f64 -1/3 (/.f64 (fma.f64 (pow.f64 (-.f64 2 x) 2) (*.f64 -2 (+.f64 (+.f64 x -2) x)) (fma.f64 1/27 (*.f64 -8 (pow.f64 (+.f64 (+.f64 x -2) x) 3)) (+.f64 (*.f64 (*.f64 -2 (-.f64 2 x)) (-.f64 (*.f64 x x) (*.f64 (-.f64 2 x) (+.f64 (-.f64 2 x) (*.f64 4 (+.f64 (+.f64 x -2) x)))))) (*.f64 (*.f64 (*.f64 -2 (+.f64 (+.f64 x -2) x)) (-.f64 (*.f64 x x) (fma.f64 (*.f64 4 (+.f64 (+.f64 x -2) x)) (-.f64 2 x) (fma.f64 1/3 (pow.f64 (*.f64 -2 (+.f64 (+.f64 x -2) x)) 2) (pow.f64 (-.f64 2 x) 2))))) 2/3)))) (pow.f64 y 3)) (/.f64 (*.f64 -2/3 (+.f64 (+.f64 x -2) x)) y))))","1","(+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 4 x) 4) y)) 1)","(fma.f64 -1/3 (/.f64 (fma.f64 4 x -4) y) 1)","(+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 4 x) 4) y)) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 4 (*.f64 2 x))) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 x) 4) 2)) (pow.f64 (-.f64 2 x) 2)))) (pow.f64 y 2))) 1))","(fma.f64 -1/3 (/.f64 (fma.f64 4 x -4) y) (fma.f64 1/3 (/.f64 (-.f64 (*.f64 x x) (fma.f64 (fma.f64 4 x -4) (+.f64 4 (*.f64 x -2)) (fma.f64 1/3 (pow.f64 (fma.f64 4 x -4) 2) (pow.f64 (-.f64 2 x) 2)))) (*.f64 y y)) 1))","(+.f64 (*.f64 -1/3 (/.f64 (-.f64 (*.f64 4 x) 4) y)) (+.f64 (*.f64 1/3 (/.f64 (-.f64 (pow.f64 x 2) (+.f64 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 4 (*.f64 2 x))) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 x) 4) 2)) (pow.f64 (-.f64 2 x) 2)))) (pow.f64 y 2))) (+.f64 1 (*.f64 1/3 (/.f64 (+.f64 (*.f64 1/27 (pow.f64 (-.f64 (*.f64 4 x) 4) 3)) (+.f64 (*.f64 (-.f64 4 (*.f64 2 x)) (-.f64 (pow.f64 x 2) (+.f64 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 4 (*.f64 2 x))) (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 2/3 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 (pow.f64 x 2) (+.f64 (*.f64 (-.f64 (*.f64 4 x) 4) (-.f64 4 (*.f64 2 x))) (+.f64 (*.f64 1/3 (pow.f64 (-.f64 (*.f64 4 x) 4) 2)) (pow.f64 (-.f64 2 x) 2)))))) (*.f64 (-.f64 (*.f64 4 x) 4) (pow.f64 (-.f64 2 x) 2))))) (pow.f64 y 3))))))","(fma.f64 -1/3 (/.f64 (fma.f64 4 x -4) y) (+.f64 (fma.f64 1/3 (/.f64 (-.f64 (*.f64 x x) (fma.f64 (fma.f64 4 x -4) (+.f64 4 (*.f64 x -2)) (fma.f64 1/3 (pow.f64 (fma.f64 4 x -4) 2) (pow.f64 (-.f64 2 x) 2)))) (*.f64 y y)) 1) (*.f64 1/3 (/.f64 (fma.f64 1/27 (pow.f64 (fma.f64 4 x -4) 3) (fma.f64 (+.f64 4 (*.f64 x -2)) (-.f64 (*.f64 x x) (fma.f64 (fma.f64 4 x -4) (+.f64 4 (*.f64 x -2)) (pow.f64 (-.f64 2 x) 2))) (fma.f64 2/3 (*.f64 (fma.f64 4 x -4) (-.f64 (*.f64 x x) (fma.f64 (fma.f64 4 x -4) (+.f64 4 (*.f64 x -2)) (fma.f64 1/3 (pow.f64 (fma.f64 4 x -4) 2) (pow.f64 (-.f64 2 x) 2))))) (*.f64 (pow.f64 (-.f64 2 x) 2) (fma.f64 4 x -4))))) (pow.f64 y 3)))))","(fma.f64 -1/3 (/.f64 (fma.f64 4 x -4) y) (fma.f64 1/3 (/.f64 (-.f64 (*.f64 x x) (fma.f64 (fma.f64 4 x -4) (+.f64 4 (*.f64 x -2)) (fma.f64 1/3 (pow.f64 (fma.f64 4 x -4) 2) (pow.f64 (-.f64 2 x) 2)))) (*.f64 y y)) (fma.f64 1/3 (/.f64 (fma.f64 1/27 (pow.f64 (fma.f64 4 x -4) 3) (fma.f64 (+.f64 4 (*.f64 x -2)) (-.f64 (*.f64 x x) (fma.f64 (fma.f64 4 x -4) (+.f64 4 (*.f64 x -2)) (pow.f64 (-.f64 2 x) 2))) (fma.f64 (pow.f64 (-.f64 2 x) 2) (fma.f64 4 x -4) (*.f64 (-.f64 (*.f64 x x) (fma.f64 (fma.f64 4 x -4) (+.f64 4 (*.f64 x -2)) (fma.f64 1/3 (pow.f64 (fma.f64 4 x -4) 2) (pow.f64 (-.f64 2 x) 2)))) (*.f64 2/3 (fma.f64 4 x -4)))))) (pow.f64 y 3)) 1)))","(*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1))","(*.f64 (cbrt.f64 -1) (cbrt.f64 y))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1)))","(fma.f64 1/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 y y)) 1/18) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) x) (*.f64 (cbrt.f64 -1) (cbrt.f64 y)))","(fma.f64 1/3 (*.f64 x (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 y y)) 1/18) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (*.f64 (cbrt.f64 -1) (cbrt.f64 y)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3) (pow.f64 x 2)))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1))))","(fma.f64 1/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 y y)) 1/18) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) x) (fma.f64 -1/9 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)))) (*.f64 x x)) (*.f64 (cbrt.f64 -1) (cbrt.f64 y))))","(fma.f64 1/3 (*.f64 x (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 y y)) 1/18) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (fma.f64 -1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7))) (*.f64 (*.f64 x x) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18)))) (*.f64 (cbrt.f64 -1) (cbrt.f64 y))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 2)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)) 1/3) x))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 y 7)) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)) 1/3) (pow.f64 x 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 2)) 1/3) (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))))) (pow.f64 x 3)) (pow.f64 (cbrt.f64 -1) 2)))) (*.f64 (pow.f64 (*.f64 1 y) 1/3) (cbrt.f64 -1)))))","(fma.f64 1/3 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 y y)) 1/18) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2)))) x) (fma.f64 -1/9 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7)))) (*.f64 x x)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (/.f64 (fma.f64 1/27 (/.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) 1) (pow.f64 (cbrt.f64 -1) 2)) (*.f64 -2/9 (/.f64 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) 1) (pow.f64 (cbrt.f64 -1) 2)))) (/.f64 (pow.f64 (cbrt.f64 -1) 2) (pow.f64 x 3)))) (*.f64 (cbrt.f64 -1) (cbrt.f64 y)))))","(fma.f64 1/3 (*.f64 x (*.f64 (*.f64 (pow.f64 (/.f64 1 (*.f64 y y)) 1/18) (pow.f64 (/.f64 1 (*.f64 y y)) 1/18)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 2))))) (fma.f64 -1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 -1) 7))) (*.f64 (*.f64 x x) (*.f64 (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 y 7)) 1/18)))) (fma.f64 (cbrt.f64 -1) (cbrt.f64 y) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (*.f64 (/.f64 (pow.f64 x 3) (/.f64 (pow.f64 (cbrt.f64 -1) 2) (*.f64 (/.f64 (cbrt.f64 (/.f64 1 (*.f64 y y))) (pow.f64 (cbrt.f64 -1) 2)) -5/27))) -1/3)))))","(pow.f64 x 1/3)","(cbrt.f64 x)","(+.f64 (pow.f64 x 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/9) y)))","(+.f64 (cbrt.f64 x) (*.f64 -1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (*.f64 x x)) 1/18) (pow.f64 (/.f64 1 (*.f64 x x)) 1/18)))))","(fma.f64 -1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (*.f64 x x)) 1/18) (pow.f64 (/.f64 1 (*.f64 x x)) 1/18))) (cbrt.f64 x))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/9) y)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/9) (pow.f64 y 2)))))","(+.f64 (cbrt.f64 x) (fma.f64 -1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (*.f64 x x)) 1/18) (pow.f64 (/.f64 1 (*.f64 x x)) 1/18))) (*.f64 -1/9 (*.f64 (*.f64 y y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/18))))))","(+.f64 (fma.f64 -1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (*.f64 x x)) 1/18) (pow.f64 (/.f64 1 (*.f64 x x)) 1/18))) (cbrt.f64 x)) (*.f64 (*.f64 y y) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/18)))))","(+.f64 (pow.f64 x 1/3) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/3))) (pow.f64 y 3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 2)) 1/9) y)) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/9) (pow.f64 y 2))))))","(+.f64 (cbrt.f64 x) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x x))) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/9 (cbrt.f64 (/.f64 1 (*.f64 x x)))) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x x))) -1/27)))) (fma.f64 -1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (*.f64 x x)) 1/18) (pow.f64 (/.f64 1 (*.f64 x x)) 1/18))) (*.f64 -1/9 (*.f64 (*.f64 y y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/18)))))))","(+.f64 (cbrt.f64 x) (fma.f64 -1/3 (*.f64 (pow.f64 y 3) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x x))) (*.f64 (cbrt.f64 (/.f64 1 (*.f64 x x))) 5/27))) (fma.f64 -1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (*.f64 x x)) 1/18) (pow.f64 (/.f64 1 (*.f64 x x)) 1/18))) (*.f64 (*.f64 y y) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/18)))))))"]],"stop":[["node limit",1]],"time":79.171875,"type":"simplify"},{"compiler":[[11422,7846]],"time":124.468994140625,"type":"eval"},{"alts":[["(fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))","done",0.12758507069442182],["(/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))","done",0.03125],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))","done",0.1676750488422101],["(fma.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2) (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))","next",0.29599389652663033],["(+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))))","fresh",13.017178317921472]],"compiler":[[33,21],[11,7],[28,18],[27,17],[29,19],[27,17],[29,19]],"count":[[202,5]],"kept":[{"done":[2,2],"fresh":[2,2],"new":[197,0],"picked":[1,1]}],"min-error":[0.00390625],"time":49.897216796875,"type":"prune"},{"compiler":[[76,40]],"locations":[["(cbrt.f64 (-.f64 2 (+.f64 x y)))",0.078125,true],["(fma.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2) (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))",0.10282003162065376,true],["(/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y))))",0.1796875,true],["(pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2)",0.4176750488422101,true]],"time":16.661865234375,"type":"localize"},{"count":[[4,32]],"series":[["(cbrt.f64 (-.f64 2 (+.f64 x y)))","y","-inf",0.2119140625],["(cbrt.f64 (-.f64 2 (+.f64 x y)))","y","inf",0.18798828125],["(cbrt.f64 (-.f64 2 (+.f64 x y)))","y","0",0.412109375],["(cbrt.f64 (-.f64 2 (+.f64 x y)))","x","-inf",0.272216796875],["(cbrt.f64 (-.f64 2 (+.f64 x y)))","x","inf",0.194091796875],["(cbrt.f64 (-.f64 2 (+.f64 x y)))","x","0",0.447021484375],["(fma.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2) (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))","y","-inf",1.31201171875],["(fma.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2) (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))","y","inf",1.869140625],["(fma.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2) (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))","y","0",1.869140625],["(fma.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2) (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))","x","-inf",1.35400390625],["(fma.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2) (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))","x","inf",1.80908203125],["(fma.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2) (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))","x","0",4.281982421875],["(/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y))))","y","-inf",0.796142578125],["(/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y))))","y","inf",1.365966796875],["(/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y))))","y","0",1.955078125],["(/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y))))","x","-inf",0.83203125],["(/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y))))","x","inf",1.090087890625],["(/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y))))","x","0",1.7919921875],["(pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2)","y","-inf",0.359130859375],["(pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2)","y","inf",0.3388671875],["(pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2)","y","0",1.25],["(pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2)","x","-inf",0.3291015625],["(pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2)","x","inf",0.591064453125],["(pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2)","x","0",1.464111328125]],"time":27.18798828125,"type":"series"},{"count":[[4,333]],"egraph":[[2,4274,69,0.036413875],[1,302,69,0.007338417],[0,13,71,0.000494458]],"inputs":[["(pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2)","(/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y))))","(fma.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2) (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))","(cbrt.f64 (-.f64 2 (+.f64 x y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2) -2) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 1/6) -2) (pow.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 1/6) -2))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 -2/3 (log.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 -2/3 (log.f64 (-.f64 (-.f64 2 x) y))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2)) (/.f64 x (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (-.f64 (-.f64 2 x) y) 1/6)) (/.f64 x (pow.f64 (-.f64 (-.f64 2 x) y) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (-.f64 (-.f64 2 x) y) 1/6)) (/.f64 (cbrt.f64 x) (pow.f64 (-.f64 (-.f64 2 x) y) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (neg.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y (/.f64 y (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))) (fma.f64 -1 (/.f64 y (-.f64 (-.f64 2 x) y)) (/.f64 y (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))) (fma.f64 1 (/.f64 y (-.f64 (-.f64 2 x) y)) (/.f64 y (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))) (fma.f64 (/.f64 y (-.f64 (-.f64 2 x) y)) 1 (/.f64 y (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))) (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2) (/.f64 y (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))) (fma.f64 (neg.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))) (fma.f64 (neg.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)) (/.f64 y (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))) (fma.f64 (/.f64 y (-.f64 (-.f64 2 x) y)) -1 (/.f64 y (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (neg.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (/.f64 y (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (/.f64 y (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) 1) (/.f64 y (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y))) (fma.f64 (neg.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)))) y (*.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))) (fma.f64 (neg.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2) (*.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 y) 2) (*.f64 (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 y) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y)))) (sqrt.f64 y) (*.f64 (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 (-.f64 2 x) y))) (sqrt.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (-.f64 (-.f64 2 x) y))) (neg.f64 y) (*.f64 (/.f64 1 (-.f64 (-.f64 2 x) y)) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y)))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 y) (*.f64 (/.f64 1 (neg.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) (-.f64 (-.f64 2 x) y)) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 y (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 y (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 1 (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y)))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (neg.f64 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 y (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 y (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3)))))) (fma.f64 (neg.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))) (*.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4) (/.f64 (neg.f64 y) (-.f64 8 (pow.f64 (+.f64 x y) 3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2)))))) (fma.f64 (neg.f64 (+.f64 2 (+.f64 x y))) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))) (*.f64 (+.f64 2 (+.f64 x y)) (/.f64 (neg.f64 y) (-.f64 4 (pow.f64 (+.f64 x y) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)) (*.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (pow.f64 (cbrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -4)) (*.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2)) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))) (cbrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (sqrt.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (*.f64 (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) x) (/.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (pow.f64 (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 2)) (cbrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))))) (sqrt.f64 (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y)))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (*.f64 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (*.f64 -1 (sqrt.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (/.f64 y (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) 0) (/.f64 y (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y)))) (pow.f64 (cbrt.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y)))) 2) (cbrt.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y)))) (sqrt.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) 3) (pow.f64 (/.f64 y (-.f64 (-.f64 2 x) y)) 3)) (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (-.f64 (pow.f64 (/.f64 y (-.f64 (-.f64 2 x) y)) 2) (*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (/.f64 y (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)) (pow.f64 (/.f64 y (-.f64 (-.f64 2 x) y)) 2)) (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (exp.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (+.f64 1 (expm1.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 y (-.f64 (-.f64 2 x) y))) (exp.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))) (exp.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (+.f64 1 (expm1.f64 (/.f64 y (-.f64 (-.f64 2 x) y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 x (cbrt.f64 (-.f64 (-.f64 2 x) y))) (/.f64 y (-.f64 (-.f64 2 x) y)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) 2) (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 1/6) (pow.f64 (-.f64 (-.f64 2 x) y) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (cbrt.f64 (-.f64 (-.f64 2 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2) 1/3) (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (-.f64 (-.f64 2 x) y)) 1/3) (pow.f64 (sqrt.f64 (-.f64 (-.f64 2 x) y)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 8 (pow.f64 (+.f64 x y) 3))) (cbrt.f64 (fma.f64 (+.f64 x y) (+.f64 2 (+.f64 x y)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 4 (pow.f64 (+.f64 x y) 2))) (cbrt.f64 (+.f64 2 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (-.f64 2 x) y) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (-.f64 2 x) y) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (-.f64 2 x) y)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y))) 1))))))"]],"rules":[["egg-rr",23],["egg-rr",261],["egg-rr",33],["egg-rr",16]],"stop":[["node limit",1]],"time":134.31005859375,"type":"rewrite"},{"count":[[365,397]],"egraph":[[2,3425,3121,0.023588959],[1,985,3197,0.007633958999999999],[0,306,3319,0.0020575]],"inputs":[["(pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3)","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/9) x)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3))","(+.f64 (*.f64 (+.f64 (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/9))) (pow.f64 x 2)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/9) x)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3)))","(+.f64 (*.f64 (+.f64 (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/9))) (pow.f64 x 2)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/9) x)) (+.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 y)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9)))) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/3))) (+.f64 (*.f64 -1/27 (*.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (pow.f64 1 1/9))) (*.f64 -2/27 (*.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (pow.f64 1 1/9))))))) (*.f64 4/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/3) (pow.f64 (pow.f64 1 4) 1/9)))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3))))","(pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3)","(+.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/9) y)))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9)) (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9))) (pow.f64 y 2)) (+.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/9) y))))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9)) (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9))) (pow.f64 y 2)) (+.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/9) y)) (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3))) (*.f64 4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/3)))) (pow.f64 y 3)))))","(*.f64 (pow.f64 (/.f64 1 (-.f64 2 y)) 1/3) x)","(+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 y)) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/9) (pow.f64 x 2))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/9))) (pow.f64 x 3)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 y)) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/9) (pow.f64 x 2)))))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/9))))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/3)))) (pow.f64 x 4)) (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/9))) (pow.f64 x 3)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 y)) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/9) (pow.f64 x 2))))))","(*.f64 (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3) x)","(+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9) (*.f64 y x))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3) x) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9) (*.f64 y x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/9))) x))))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3) x) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9) (*.f64 y x))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 (pow.f64 y 3) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/9))))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/3)))) x)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/9))) x)))))))","(*.f64 -1 (/.f64 y (-.f64 2 y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 2 y))) (*.f64 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 (/.f64 1 (-.f64 2 y)) (pow.f64 1 1/3))) x))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 2 y))) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 14)) 1/9)) (+.f64 (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 22)) 1/9)) (*.f64 -1 (/.f64 y (pow.f64 (-.f64 2 y) 3))))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 (/.f64 1 (-.f64 2 y)) (pow.f64 1 1/3))) x)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 2 y))) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/9))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 y)) 1/3) (+.f64 (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/9)))) (+.f64 (*.f64 2/9 (*.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (pow.f64 1 1/9))) (*.f64 -1 (/.f64 y (pow.f64 (-.f64 2 y) 4)))))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 14)) 1/9)) (+.f64 (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 22)) 1/9)) (*.f64 -1 (/.f64 y (pow.f64 (-.f64 2 y) 3))))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 (/.f64 1 (-.f64 2 y)) (pow.f64 1 1/3))) x))))","(*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x)))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/9) x)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/9) x))) (/.f64 1 (-.f64 2 x))) y) (*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x))))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/9) x)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/9) x))) (/.f64 1 (-.f64 2 x))) y) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x))) (*.f64 (pow.f64 y 2) (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/9))) x))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3) (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9)) (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9))) x)) (*.f64 2/9 (*.f64 (pow.f64 1 1/9) (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (/.f64 1 (pow.f64 (-.f64 2 x) 2))))))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/9) x)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/9) x))) (/.f64 1 (-.f64 2 x))) y) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x))) (+.f64 (*.f64 (pow.f64 y 3) (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9) (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9)) (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9))) x))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3) (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3))) (*.f64 4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/3)))) x)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 5)) 1/9) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/9))) x))) (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/9))))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/3)))) x)))))) (/.f64 1 (pow.f64 (-.f64 2 x) 3)))) (*.f64 (pow.f64 y 2) (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/9))) x))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3) (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9)) (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9))) x)) (*.f64 2/9 (*.f64 (pow.f64 1 1/9) (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (/.f64 1 (pow.f64 (-.f64 2 x) 2)))))))","(pow.f64 (-.f64 2 y) 1/3)","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/9) x)) (pow.f64 (-.f64 2 y) 1/3))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/9) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/9) x)) (pow.f64 (-.f64 2 y) 1/3)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/9) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9)))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/9) x)) (pow.f64 (-.f64 2 y) 1/3))))","(pow.f64 (-.f64 2 x) 1/3)","(+.f64 (pow.f64 (-.f64 2 x) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/9) y)))","(+.f64 (pow.f64 (-.f64 2 x) 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/9) (pow.f64 y 2))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/9) y))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3)))))) (+.f64 (pow.f64 (-.f64 2 x) 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/9) (pow.f64 y 2))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/9) y)))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3)","(cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/9) x)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3))","(fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/18)) x) (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))))","(fma.f64 (*.f64 (*.f64 2/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/18)) x (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))))","(fma.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/18) x)) (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))))","(+.f64 (*.f64 (+.f64 (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/9))) (pow.f64 x 2)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/9) x)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3)))","(fma.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18)) 5/9) (*.f64 x x) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/18)) x) (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)))))","(fma.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18)) 5/9) (*.f64 x x) (fma.f64 (*.f64 (*.f64 2/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/18)) x (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)))))","(fma.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18)) 5/9) (*.f64 x x) (fma.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/18) x)) (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)))))","(+.f64 (*.f64 (+.f64 (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/9))) (pow.f64 x 2)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/9) x)) (+.f64 (*.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 y)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9)))) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) 1/3))) (+.f64 (*.f64 -1/27 (*.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (pow.f64 1 1/9))) (*.f64 -2/27 (*.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) (pow.f64 1 1/9))))))) (*.f64 4/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/3) (pow.f64 (pow.f64 1 4) 1/9)))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3))))","(fma.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18)) 5/9) (*.f64 x x) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/18)) x) (fma.f64 (fma.f64 -2 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 2 y))) (fma.f64 -1/3 (*.f64 (fma.f64 -1/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))) (*.f64 (*.f64 2/9 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)))) 1)) (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)))) (*.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) -1/9))) (*.f64 4/27 (*.f64 1 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)))))) (pow.f64 x 3) (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))))))","(fma.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18)) 5/9) (*.f64 x x) (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/18)) x) (fma.f64 (fma.f64 (*.f64 -2 (cbrt.f64 (/.f64 1 (-.f64 2 y)))) (fma.f64 -1/3 (*.f64 (fma.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))) -1/27 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))) 2/9)) (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)))) (/.f64 -1/9 (pow.f64 (-.f64 2 y) 2))) (*.f64 4/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7))))) (pow.f64 x 3) (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))))))","(fma.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18)) 5/9) (*.f64 x x) (fma.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 11)) 1/18) x)) (fma.f64 (fma.f64 (*.f64 -2 (cbrt.f64 (/.f64 1 (-.f64 2 y)))) (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))) 5/27) (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)))) (/.f64 -1/9 (pow.f64 (-.f64 2 y) 2))) (*.f64 4/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7))))) (pow.f64 x 3) (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))))))","(pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3)","(cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)))","(+.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/9) y)))","(+.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2))) (*.f64 2/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/18)))))","(fma.f64 2/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/18))) (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2))))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9)) (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9))) (pow.f64 y 2)) (+.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/9) y))))","(fma.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18)) 5/9) (*.f64 y y) (+.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2))) (*.f64 2/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/18))))))","(fma.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) 5/9)) (*.f64 y y) (fma.f64 2/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/18))) (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)))))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9)) (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9))) (pow.f64 y 2)) (+.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/9) y)) (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3))) (*.f64 4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/3)))) (pow.f64 y 3)))))","(fma.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18)) 5/9) (*.f64 y y) (+.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2))) (fma.f64 2/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/18))) (*.f64 (fma.f64 -2 (*.f64 (fma.f64 -1/27 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4))) (+.f64 (*.f64 2/9 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)))) (*.f64 -1/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)))))) (*.f64 -2/27 (/.f64 1 (pow.f64 (-.f64 2 x) 2))))) (cbrt.f64 (/.f64 1 (-.f64 2 x)))) (*.f64 4/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7))))) (pow.f64 y 3)))))","(+.f64 (fma.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) 5/9)) (*.f64 y y) (fma.f64 2/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/18))) (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2))))) (*.f64 (fma.f64 -2 (*.f64 (+.f64 (/.f64 -1/27 (pow.f64 (-.f64 2 x) 2)) (fma.f64 (*.f64 -1/3 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2))) 5/27) (/.f64 -2/27 (pow.f64 (-.f64 2 x) 2)))) (cbrt.f64 (/.f64 1 (-.f64 2 x)))) (*.f64 4/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7))))) (pow.f64 y 3)))","(+.f64 (fma.f64 2/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 11)) 1/18))) (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)))) (*.f64 (*.f64 y y) (+.f64 (*.f64 (fma.f64 (*.f64 -2 (+.f64 (*.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2))) 5/27))) (*.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) -1/9))) (cbrt.f64 (/.f64 1 (-.f64 2 x))) (*.f64 4/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7))))) y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) 5/9)))))","(*.f64 (pow.f64 (/.f64 1 (-.f64 2 y)) 1/3) x)","(*.f64 x (cbrt.f64 (/.f64 1 (-.f64 2 y))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 y)) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/9) (pow.f64 x 2))))","(fma.f64 (cbrt.f64 (/.f64 1 (-.f64 2 y))) x (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18))) (*.f64 x x)))","(fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18)) (*.f64 x x)) (*.f64 x (cbrt.f64 (/.f64 1 (-.f64 2 y)))))","(*.f64 x (+.f64 (cbrt.f64 (/.f64 1 (-.f64 2 y))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18))) x)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/9))) (pow.f64 x 3)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 y)) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/9) (pow.f64 x 2)))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) 2)) (*.f64 (pow.f64 x 3) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18)))))) (fma.f64 (cbrt.f64 (/.f64 1 (-.f64 2 y))) x (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18))) (*.f64 x x))))","(fma.f64 1/3 (*.f64 (pow.f64 x 3) (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) 2)) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18)))))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18)) (*.f64 x x)) (*.f64 x (cbrt.f64 (/.f64 1 (-.f64 2 y))))))","(fma.f64 1/3 (*.f64 (pow.f64 x 3) (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) 2)) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18))))) (*.f64 x (+.f64 (cbrt.f64 (/.f64 1 (-.f64 2 y))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18))) x))))","(+.f64 (*.f64 1/3 (*.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/9))))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/3)))) (pow.f64 x 4)) (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) 1/3))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 2 y) 2) 1) 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/9))) (pow.f64 x 3)))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 y)) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/9) (pow.f64 x 2))))))","(fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) 2)) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) (fma.f64 2/3 (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18)))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 13)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 13)) 1/18))) (*.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)))))) (pow.f64 x 4))) (fma.f64 1/3 (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) 2)) (*.f64 (pow.f64 x 3) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18)))))) (fma.f64 (cbrt.f64 (/.f64 1 (-.f64 2 y))) x (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18))) (*.f64 x x)))))","(fma.f64 (*.f64 (*.f64 1/3 (pow.f64 x 4)) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) (fma.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16))) (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18)))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 13)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 13)) 1/18))))))) (cbrt.f64 (pow.f64 (-.f64 2 y) 2)) (fma.f64 1/3 (*.f64 (pow.f64 x 3) (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 y) 2)) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18)))))) (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18)) (*.f64 x x)) (*.f64 x (cbrt.f64 (/.f64 1 (-.f64 2 y)))))))","(+.f64 (*.f64 x (+.f64 (cbrt.f64 (/.f64 1 (-.f64 2 y))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18))) x))) (*.f64 (*.f64 1/3 (cbrt.f64 (pow.f64 (-.f64 2 y) 2))) (+.f64 (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 4)) (fma.f64 (*.f64 (*.f64 2/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 13)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 13)) 1/18)) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18))) (*.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)))))) (pow.f64 x 4)) (*.f64 (pow.f64 x 3) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18)))))))","(*.f64 (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3) x)","(*.f64 x (cbrt.f64 (/.f64 1 (-.f64 2 x))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3) x) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9) (*.f64 y x))))","(fma.f64 (cbrt.f64 (/.f64 1 (-.f64 2 x))) x (*.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18)) (*.f64 y x))))","(fma.f64 1/3 (*.f64 y (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18)))) (*.f64 x (cbrt.f64 (/.f64 1 (-.f64 2 x)))))","(*.f64 x (+.f64 (cbrt.f64 (/.f64 1 (-.f64 2 x))) (*.f64 1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18))))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3) x) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9) (*.f64 y x))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/9))) x))))))","(fma.f64 (cbrt.f64 (/.f64 1 (-.f64 2 x))) x (*.f64 1/3 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18)) (*.f64 y x)) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 x) 2)) (*.f64 y y)) (*.f64 x (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)))))))))","(fma.f64 1/3 (fma.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18)) (*.f64 y x) (*.f64 (*.f64 y y) (*.f64 (*.f64 x (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)))) (cbrt.f64 (pow.f64 (-.f64 2 x) 2))))) (*.f64 x (cbrt.f64 (/.f64 1 (-.f64 2 x)))))","(fma.f64 1/3 (*.f64 x (+.f64 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18))) (*.f64 (*.f64 (*.f64 y y) (cbrt.f64 (pow.f64 (-.f64 2 x) 2))) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)))))) (*.f64 x (cbrt.f64 (/.f64 1 (-.f64 2 x)))))","(+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3) x) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9) (*.f64 y x))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 (pow.f64 y 3) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/9))))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/3)))) x)))) (*.f64 1/3 (*.f64 (pow.f64 (*.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 (pow.f64 y 2) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/9))) x)))))))","(fma.f64 (cbrt.f64 (/.f64 1 (-.f64 2 x))) x (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18)) (*.f64 y x)) (*.f64 1/3 (+.f64 (*.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 x) 2)) (pow.f64 y 3)) (*.f64 x (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) (fma.f64 2/3 (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 13)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 13)) 1/18))) (*.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)))))))) (*.f64 (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 x) 2)) (*.f64 y y)) (*.f64 x (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18))))))))))","(fma.f64 x (cbrt.f64 (/.f64 1 (-.f64 2 x))) (*.f64 1/3 (+.f64 (*.f64 y (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18)))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 x) 2)) (+.f64 (*.f64 (pow.f64 y 3) (*.f64 x (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) (fma.f64 2/3 (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 13)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 13)) 1/18))) (*.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)))))))) (*.f64 (*.f64 y y) (*.f64 x (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18))))))))))","(fma.f64 x (cbrt.f64 (/.f64 1 (-.f64 2 x))) (*.f64 1/3 (+.f64 (*.f64 y (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18)))) (*.f64 (cbrt.f64 (pow.f64 (-.f64 2 x) 2)) (*.f64 x (+.f64 (*.f64 y (*.f64 y (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18))))) (*.f64 (pow.f64 y 3) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) (fma.f64 2/3 (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 13)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 13)) 1/18))) (*.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)))))))))))))","(*.f64 -1 (/.f64 y (-.f64 2 y)))","(neg.f64 (/.f64 y (-.f64 2 y)))","(/.f64 (neg.f64 y) (-.f64 2 y))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 2 y))) (*.f64 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 (/.f64 1 (-.f64 2 y)) (pow.f64 1 1/3))) x))","(fma.f64 -1 (/.f64 y (-.f64 2 y)) (*.f64 x (fma.f64 -1 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 1 (-.f64 2 y)))))","(-.f64 (*.f64 x (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2)))) (/.f64 y (-.f64 2 y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 2 y))) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 14)) 1/9)) (+.f64 (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 22)) 1/9)) (*.f64 -1 (/.f64 y (pow.f64 (-.f64 2 y) 3))))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 (/.f64 1 (-.f64 2 y)) (pow.f64 1 1/3))) x)))","(fma.f64 -1 (/.f64 y (-.f64 2 y)) (fma.f64 (fma.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 14)) 1/18)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 22)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 22)) 1/18)) (neg.f64 (/.f64 y (pow.f64 (-.f64 2 y) 3))))) (*.f64 x x) (*.f64 x (fma.f64 -1 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 1 (-.f64 2 y))))))","(-.f64 (fma.f64 x (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 (*.f64 x x) (fma.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 14)) 1/18)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 22)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 22)) 1/18)) (/.f64 (neg.f64 y) (pow.f64 (-.f64 2 y) 3)))))) (/.f64 y (-.f64 2 y)))","(-.f64 (*.f64 x (+.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 (-.f64 (fma.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 14)) 1/18)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 22)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 22)) 1/18)))) (/.f64 y (pow.f64 (-.f64 2 y) 3))) x))) (/.f64 y (-.f64 2 y)))","(+.f64 (*.f64 -1 (/.f64 y (-.f64 2 y))) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/9))))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 y)) 1/3) (+.f64 (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/9)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/9)))) (+.f64 (*.f64 2/9 (*.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (pow.f64 1 1/9))) (*.f64 -1 (/.f64 y (pow.f64 (-.f64 2 y) 4)))))) (pow.f64 x 3)) (+.f64 (*.f64 (+.f64 (*.f64 2/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 14)) 1/9)) (+.f64 (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 22)) 1/9)) (*.f64 -1 (/.f64 y (pow.f64 (-.f64 2 y) 3))))) (pow.f64 x 2)) (*.f64 (+.f64 (*.f64 -1 (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 (/.f64 1 (-.f64 2 y)) (pow.f64 1 1/3))) x))))","(fma.f64 -1 (/.f64 y (-.f64 2 y)) (fma.f64 (+.f64 (*.f64 1/3 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18))))) (fma.f64 (cbrt.f64 (/.f64 1 (-.f64 2 y))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18)) 5/9) (fma.f64 2/9 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (neg.f64 (/.f64 y (pow.f64 (-.f64 2 y) 4)))))) (pow.f64 x 3) (fma.f64 (fma.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 14)) 1/18)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 22)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 22)) 1/18)) (neg.f64 (/.f64 y (pow.f64 (-.f64 2 y) 3))))) (*.f64 x x) (*.f64 x (fma.f64 -1 (/.f64 y (pow.f64 (-.f64 2 y) 2)) (/.f64 1 (-.f64 2 y)))))))","(-.f64 (fma.f64 (pow.f64 x 3) (fma.f64 1/3 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18)))) (-.f64 (fma.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18)) 5/9) (cbrt.f64 (/.f64 1 (-.f64 2 y))) (/.f64 2/9 (pow.f64 (-.f64 2 y) 3))) (/.f64 y (pow.f64 (-.f64 2 y) 4)))) (fma.f64 x (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 (*.f64 x x) (fma.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 14)) 1/18)) (fma.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 22)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 22)) 1/18)) (/.f64 (neg.f64 y) (pow.f64 (-.f64 2 y) 3))))))) (/.f64 y (-.f64 2 y)))","(-.f64 (fma.f64 (pow.f64 x 3) (fma.f64 1/3 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 3)) (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 35)) 1/18))) (-.f64 (fma.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 16)) 1/18)) 5/9) (cbrt.f64 (/.f64 1 (-.f64 2 y))) (/.f64 2/9 (pow.f64 (-.f64 2 y) 3))) (/.f64 y (pow.f64 (-.f64 2 y) 4)))) (*.f64 x (+.f64 (-.f64 (/.f64 1 (-.f64 2 y)) (/.f64 y (pow.f64 (-.f64 2 y) 2))) (*.f64 (-.f64 (fma.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 14)) 1/18)) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 22)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 22)) 1/18)))) (/.f64 y (pow.f64 (-.f64 2 y) 3))) x)))) (/.f64 y (-.f64 2 y)))","(*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x)))","(/.f64 (*.f64 1 x) (-.f64 2 x))","(/.f64 x (-.f64 2 x))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/9) x)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/9) x))) (/.f64 1 (-.f64 2 x))) y) (*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x))))","(fma.f64 (-.f64 (fma.f64 1/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/18))) (*.f64 2/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/18))))) (/.f64 1 (-.f64 2 x))) y (/.f64 (*.f64 1 x) (-.f64 2 x)))","(fma.f64 y (fma.f64 1/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/18))) (fma.f64 2/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/18))) (/.f64 -1 (-.f64 2 x)))) (/.f64 x (-.f64 2 x)))","(fma.f64 y (fma.f64 x (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/18))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/18)))) (/.f64 -1 (-.f64 2 x))) (/.f64 x (-.f64 2 x)))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/9) x)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/9) x))) (/.f64 1 (-.f64 2 x))) y) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x))) (*.f64 (pow.f64 y 2) (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/9))) x))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3) (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9)) (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9))) x)) (*.f64 2/9 (*.f64 (pow.f64 1 1/9) (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (/.f64 1 (pow.f64 (-.f64 2 x) 2))))))","(fma.f64 (-.f64 (fma.f64 1/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/18))) (*.f64 2/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/18))))) (/.f64 1 (-.f64 2 x))) y (fma.f64 1 (/.f64 x (-.f64 2 x)) (*.f64 (*.f64 y y) (+.f64 (*.f64 1/3 (*.f64 x (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)))))) (-.f64 (fma.f64 (cbrt.f64 (/.f64 1 (-.f64 2 x))) (*.f64 x (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18)) 5/9)) (*.f64 2/9 (/.f64 x (pow.f64 (-.f64 2 x) 3)))) (/.f64 1 (pow.f64 (-.f64 2 x) 2)))))))","(fma.f64 y (fma.f64 1/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/18))) (fma.f64 2/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/18))) (/.f64 -1 (-.f64 2 x)))) (fma.f64 (*.f64 y y) (+.f64 (fma.f64 1/3 (*.f64 x (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)))) (fma.f64 2/9 (/.f64 x (pow.f64 (-.f64 2 x) 3)) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) 5/9)) (*.f64 x (cbrt.f64 (/.f64 1 (-.f64 2 x))))))) (/.f64 -1 (pow.f64 (-.f64 2 x) 2))) (/.f64 x (-.f64 2 x))))","(fma.f64 y (fma.f64 x (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/18))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/18)))) (/.f64 -1 (-.f64 2 x))) (fma.f64 (*.f64 y y) (+.f64 (*.f64 x (+.f64 (*.f64 1/3 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) 5/9)) (cbrt.f64 (/.f64 1 (-.f64 2 x)))))) (fma.f64 2/9 (/.f64 x (pow.f64 (-.f64 2 x) 3)) (/.f64 -1 (pow.f64 (-.f64 2 x) 2)))) (/.f64 x (-.f64 2 x))))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/9) x)) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/9) x))) (/.f64 1 (-.f64 2 x))) y) (+.f64 (*.f64 (pow.f64 1 1/3) (/.f64 x (-.f64 2 x))) (+.f64 (*.f64 (pow.f64 y 3) (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9) (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9)) (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9))) x))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3) (*.f64 (+.f64 (*.f64 -2 (*.f64 (+.f64 (*.f64 -1/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 (-.f64 2 x) 2)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 1 (pow.f64 (-.f64 2 x) 2)))))) (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3))) (*.f64 4/27 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/3)))) x)) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 5)) 1/9) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/9))) x))) (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 13)) 1/9) (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/9))))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/3)))) x)))))) (/.f64 1 (pow.f64 (-.f64 2 x) 3)))) (*.f64 (pow.f64 y 2) (-.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 1 1/3) (*.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/9))) x))) (+.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 2 x)) 1/3) (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9)) (*.f64 4/9 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/9))) x)) (*.f64 2/9 (*.f64 (pow.f64 1 1/9) (/.f64 x (pow.f64 (-.f64 2 x) 3)))))) (/.f64 1 (pow.f64 (-.f64 2 x) 2)))))))","(fma.f64 (-.f64 (fma.f64 1/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/18))) (*.f64 2/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/18))))) (/.f64 1 (-.f64 2 x))) y (fma.f64 1 (/.f64 x (-.f64 2 x)) (fma.f64 (pow.f64 y 3) (-.f64 (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18)) (*.f64 x (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18)) 5/9))) (fma.f64 (cbrt.f64 (/.f64 1 (-.f64 2 x))) (*.f64 x (fma.f64 -2 (*.f64 (fma.f64 -1/27 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4))) (+.f64 (*.f64 2/9 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)))) (*.f64 -1/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)))))) (*.f64 -2/27 (/.f64 1 (pow.f64 (-.f64 2 x) 2))))) (cbrt.f64 (/.f64 1 (-.f64 2 x)))) (*.f64 4/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)))))) (fma.f64 2/9 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 5)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 5)) 1/18)) (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18))))) x) (*.f64 1/3 (*.f64 x (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) (fma.f64 2/3 (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 13)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 13)) 1/18))) (*.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16))))))))))) (/.f64 1 (pow.f64 (-.f64 2 x) 3))) (*.f64 (*.f64 y y) (+.f64 (*.f64 1/3 (*.f64 x (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)))))) (-.f64 (fma.f64 (cbrt.f64 (/.f64 1 (-.f64 2 x))) (*.f64 x (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18)) 5/9)) (*.f64 2/9 (/.f64 x (pow.f64 (-.f64 2 x) 3)))) (/.f64 1 (pow.f64 (-.f64 2 x) 2))))))))","(+.f64 (fma.f64 y (fma.f64 1/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/18))) (fma.f64 2/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/18))) (/.f64 -1 (-.f64 2 x)))) (fma.f64 (*.f64 y y) (+.f64 (fma.f64 1/3 (*.f64 x (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)))) (fma.f64 2/9 (/.f64 x (pow.f64 (-.f64 2 x) 3)) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) 5/9)) (*.f64 x (cbrt.f64 (/.f64 1 (-.f64 2 x))))))) (/.f64 -1 (pow.f64 (-.f64 2 x) 2))) (/.f64 x (-.f64 2 x)))) (*.f64 (pow.f64 y 3) (+.f64 (fma.f64 1/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) 5/9)) (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18)))) (fma.f64 (cbrt.f64 (/.f64 1 (-.f64 2 x))) (*.f64 x (fma.f64 -2 (*.f64 (+.f64 (/.f64 -1/27 (pow.f64 (-.f64 2 x) 2)) (fma.f64 (*.f64 -1/3 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2))) 5/27) (/.f64 -2/27 (pow.f64 (-.f64 2 x) 2)))) (cbrt.f64 (/.f64 1 (-.f64 2 x)))) (*.f64 4/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)))))) (fma.f64 1/3 (*.f64 x (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) (fma.f64 2/3 (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 13)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 13)) 1/18))) (*.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16))))))) (*.f64 2/9 (*.f64 x (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 5)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 5)) 1/18)))))))) (/.f64 -1 (pow.f64 (-.f64 2 x) 3)))))","(+.f64 (*.f64 (*.f64 y y) (+.f64 (+.f64 (*.f64 x (+.f64 (*.f64 1/3 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) 5/9)) (cbrt.f64 (/.f64 1 (-.f64 2 x)))))) (fma.f64 2/9 (/.f64 x (pow.f64 (-.f64 2 x) 3)) (/.f64 -1 (pow.f64 (-.f64 2 x) 2)))) (*.f64 (+.f64 (+.f64 (*.f64 x (+.f64 (*.f64 (cbrt.f64 (/.f64 1 (-.f64 2 x))) (fma.f64 (*.f64 -2 (+.f64 (*.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2))) 5/27))) (*.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) -1/9))) (cbrt.f64 (/.f64 1 (-.f64 2 x))) (*.f64 4/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)))))) (*.f64 2/9 (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 5)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 5)) 1/18)))))) (*.f64 (*.f64 x 1/3) (+.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 4)) (fma.f64 2/3 (*.f64 (+.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 3)) (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 35)) 1/18))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 13)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 13)) 1/18))) (*.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)))))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 16)) 1/18) 5/9)))))) (/.f64 -1 (pow.f64 (-.f64 2 x) 3))) y))) (fma.f64 y (fma.f64 x (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 22)) 1/18))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 14)) 1/18)))) (/.f64 -1 (-.f64 2 x))) (/.f64 x (-.f64 2 x))))","(pow.f64 (-.f64 2 y) 1/3)","(cbrt.f64 (-.f64 2 y))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/9) x)) (pow.f64 (-.f64 2 y) 1/3))","(fma.f64 -1/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/18))) (cbrt.f64 (-.f64 2 y)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/9) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/9) x)) (pow.f64 (-.f64 2 y) 1/3)))","(fma.f64 -1/9 (*.f64 (*.f64 x x) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/18))) (fma.f64 -1/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/18))) (cbrt.f64 (-.f64 2 y))))","(fma.f64 -1/9 (*.f64 x (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/18)))) (fma.f64 -1/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/18))) (cbrt.f64 (-.f64 2 y))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/9) (pow.f64 x 2))) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3)) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3) (pow.f64 (pow.f64 1 4) 1/9)))) (pow.f64 x 3)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/3))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/9) x)) (pow.f64 (-.f64 2 y) 1/3))))","(fma.f64 -1/9 (*.f64 (*.f64 x x) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/18))) (fma.f64 -1/3 (*.f64 (fma.f64 -1/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))) (*.f64 (*.f64 2/9 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)))) 1)) (*.f64 (pow.f64 x 3) (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))))) (fma.f64 -1/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/18))) (cbrt.f64 (-.f64 2 y)))))","(fma.f64 -1/9 (*.f64 (*.f64 x x) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/18))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))) (*.f64 (fma.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))) -1/27 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))) 2/9)) (pow.f64 x 3))) (fma.f64 -1/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/18))) (cbrt.f64 (-.f64 2 y)))))","(fma.f64 -1/9 (*.f64 x (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 7)) 1/18)))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2))) 5/27) (pow.f64 x 3))) (fma.f64 -1/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 y) 2)) 1/18))) (cbrt.f64 (-.f64 2 y)))))","(pow.f64 (-.f64 2 x) 1/3)","(cbrt.f64 (-.f64 2 x))","(+.f64 (pow.f64 (-.f64 2 x) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/9) y)))","(+.f64 (cbrt.f64 (-.f64 2 x)) (*.f64 -1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/18)))))","(fma.f64 -1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/18))) (cbrt.f64 (-.f64 2 x)))","(fma.f64 -1/3 (*.f64 (*.f64 y (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/18)) (cbrt.f64 (-.f64 2 x)))","(+.f64 (pow.f64 (-.f64 2 x) 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/9) (pow.f64 y 2))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/9) y))))","(+.f64 (cbrt.f64 (-.f64 2 x)) (fma.f64 -1/9 (*.f64 (*.f64 y y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/18))) (*.f64 -1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/18))))))","(+.f64 (cbrt.f64 (-.f64 2 x)) (fma.f64 -1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/18))) (*.f64 -1/9 (*.f64 (*.f64 y y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/18))))))","(+.f64 (cbrt.f64 (-.f64 2 x)) (*.f64 y (+.f64 (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/18)) (*.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/18))) y))))","(+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3))) (*.f64 -1/27 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/3)))))) (+.f64 (pow.f64 (-.f64 2 x) 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/9) (pow.f64 y 2))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/9) y)))))","(fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2))) (*.f64 (+.f64 (*.f64 2/9 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)))) (*.f64 -1/27 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2))))) (pow.f64 y 3))) (+.f64 (cbrt.f64 (-.f64 2 x)) (fma.f64 -1/9 (*.f64 (*.f64 y y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/18))) (*.f64 -1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/18)))))))","(+.f64 (fma.f64 -1/3 (*.f64 y (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/18))) (*.f64 -1/9 (*.f64 (*.f64 y y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/18))))) (fma.f64 (*.f64 -1/3 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2))) 5/27) (pow.f64 y 3)) (cbrt.f64 (-.f64 2 x))))","(+.f64 (*.f64 y (+.f64 (*.f64 (*.f64 -1/3 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/18)) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2)) 1/18)) (*.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 7)) 1/18))) y))) (fma.f64 -1/3 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2))) 5/27) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (-.f64 2 x) 2))) (pow.f64 y 3))) (cbrt.f64 (-.f64 2 x))))"]],"stop":[["node limit",1]],"time":71.091064453125,"type":"simplify"},{"compiler":[[28396,19825]],"time":313.030029296875,"type":"eval"},{"alts":[["(log.f64 (/.f64 (exp.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (exp.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))))","fresh",13.217579444288294],["(fma.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2) (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))","done",0.29599389652663033],["(fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))","done",0.12758507069442182],["(/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))","done",0.03125],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))","done",0.1676750488422101],["(+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))))","fresh",13.017178317921472]],"compiler":[[30,22],[27,17],[33,21],[11,7],[28,18],[29,19]],"count":[[441,6]],"kept":[{"done":[3,3],"fresh":[1,1],"new":[436,1],"picked":[1,1]}],"min-error":[0],"time":192.9658203125,"type":"prune"},{"accuracy":[0.03125],"baseline":[0.03125],"branch":[["x",0.03125,1],["y",0.03125,1],["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))",0.03125,1],["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))",0.03125,1]],"compiler":[[3,2],[3,2],[11,7],[11,7],[157,92]],"count":[[7,1]],"inputs":[["(log.f64 (/.f64 (exp.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) -2) (/.f64 (cbrt.f64 (-.f64 (-.f64 2 x) y)) x))) (exp.f64 (/.f64 y (-.f64 (-.f64 2 x) y)))))","(fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))","(*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))","(fma.f64 (pow.f64 (cbrt.f64 (-.f64 2 (+.f64 x y))) -2) (/.f64 x (cbrt.f64 (-.f64 2 (+.f64 x y)))) (neg.f64 (/.f64 y (-.f64 2 (+.f64 x y)))))","(+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))))))","(/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))","(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))"]],"link":["."],"name":["Data.Colour.RGB:hslsv from colour-2.3.3, C"],"oracle":[13.365872377770165],"outputs":[["(/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))"]],"time":15.760009765625,"times":[["x",4.076171875],["y",4.10498046875],["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))",2.5048828125],["(/.f64 (-.f64 x y) (-.f64 2 (+.f64 x y)))",2.552001953125]],"type":"regimes"},{"compiler":[[11,7]],"egraph":[[4,28,13,0.000163292],[3,26,13,0.000131958],[2,22,13,0.00010037499999999999],[1,13,13,6.4042e-5],[0,8,13,2.4584e-5]],"inputs":[["(/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 x y) (-.f64 (-.f64 2 x) y))"]],"stop":[["fuel",1],["saturated",1]],"time":8.85400390625,"type":"simplify"},{"time":0.01708984375,"type":"soundness"},{"compiler":[[11,7]],"remove-preprocessing":[[]],"time":8.1728515625,"type":"end"}]