[{"compiler":[[10,8]],"method":["search"],"sampling":[[1,2.938735877055719e-39,0.0,1.0],[0,0.0,2.938735877055719e-39,1.0]],"time":0.14501953125,"type":"analyze"},{"outcomes":[["body",256,"valid",221.857177734375,8256]],"time":229.30419921875,"type":"sample"},{"compiler":[[45,33]],"egraph":[[1,2,2,6e-6],[0,2,2,5.417e-6],[0,1,2,2.3875e-5]],"inputs":[["0","1"],["-54767/66192","-54767/66192"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","0"],["-54767/66192","-54767/66192"]],"stop":[["unsound",1],["saturated",1]],"symmetry":[["(sort x y)"]],"time":22.579833984375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[5,7359,54,0.030847084],[4,3367,54,0.01789125],[3,815,54,0.006413958],[2,244,55,0.0017621660000000001],[1,82,58,0.0005273750000000001],[0,31,62,0.000149833]],"inputs":[["(+.f64 (+.f64 (+.f64 (*.f64 1335/4 (pow.f64 y 6)) (*.f64 (*.f64 x x) (-.f64 (-.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 11 x) x) y) y) (pow.f64 y 6)) (*.f64 121 (pow.f64 y 4))) 2))) (*.f64 11/2 (pow.f64 y 8))) (/.f64 x (*.f64 2 y)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (+.f64 (+.f64 (*.f64 1335/4 (pow.f64 y 6)) (*.f64 (*.f64 x x) (-.f64 (-.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 11 x) x) y) y) (pow.f64 y 6)) (*.f64 121 (pow.f64 y 4))) 2))) (*.f64 11/2 (pow.f64 y 8))) (/.f64 x (*.f64 2 y)))","(+.f64 (fma.f64 1335/4 (pow.f64 y 6) (*.f64 (*.f64 x x) (-.f64 (-.f64 (*.f64 y (*.f64 y (*.f64 x (*.f64 x 11)))) (pow.f64 y 6)) (+.f64 (*.f64 121 (pow.f64 y 4)) 2)))) (+.f64 (*.f64 11/2 (pow.f64 y 8)) (/.f64 x (*.f64 y 2))))","(+.f64 (fma.f64 1335/4 (pow.f64 y 6) (*.f64 (*.f64 x x) (-.f64 (*.f64 y (*.f64 y (*.f64 x (*.f64 x 11)))) (+.f64 (pow.f64 y 6) (fma.f64 121 (pow.f64 y 4) 2))))) (fma.f64 11/2 (pow.f64 y 8) (/.f64 x (*.f64 y 2))))","(fma.f64 1335/4 (pow.f64 y 6) (fma.f64 x (*.f64 x (fma.f64 y (*.f64 (*.f64 x x) (*.f64 y 11)) (fma.f64 -1 (pow.f64 y 6) (fma.f64 (pow.f64 y 4) -121 -2)))) (fma.f64 11/2 (pow.f64 y 8) (/.f64 x (*.f64 y 2)))))","(fma.f64 11/2 (pow.f64 y 8) (fma.f64 x (*.f64 x (-.f64 (fma.f64 (*.f64 x x) (*.f64 y (*.f64 y 11)) (fma.f64 (pow.f64 y 4) -121 -2)) (pow.f64 y 6))) (fma.f64 1335/4 (pow.f64 y 6) (/.f64 x (*.f64 y 2)))))","(fma.f64 1335/4 (pow.f64 y 6) (fma.f64 (*.f64 x x) (-.f64 (*.f64 y (*.f64 (*.f64 x x) (*.f64 y 11))) (fma.f64 (pow.f64 y 4) (fma.f64 y y 121) 2)) (fma.f64 11/2 (pow.f64 y 8) (/.f64 x (*.f64 y 2)))))"]],"stop":[["node limit",1]],"time":42.31494140625,"type":"simplify"},{"compiler":[[83,56]],"time":1.0400390625,"type":"eval"},{"alts":[["(fma.f64 1335/4 (pow.f64 y 6) (fma.f64 (*.f64 x x) (-.f64 (*.f64 y (*.f64 (*.f64 x x) (*.f64 y 11))) (fma.f64 (pow.f64 y 4) (fma.f64 y y 121) 2)) (fma.f64 11/2 (pow.f64 y 8) (/.f64 x (*.f64 y 2)))))","next",63.08874944616072]],"compiler":[[40,26],[40,26]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[63.08874944616072],"time":1.72607421875,"type":"prune"},{"compiler":[[164,99]],"time":40.06396484375,"type":"localize"},{"compiler":[[2,2]],"time":0.116943359375,"type":"eval"},{"alts":[["(fma.f64 1335/4 (pow.f64 y 6) (fma.f64 (*.f64 x x) (-.f64 (*.f64 y (*.f64 (*.f64 x x) (*.f64 y 11))) (fma.f64 (pow.f64 y 4) (fma.f64 y y 121) 2)) (fma.f64 11/2 (pow.f64 y 8) (/.f64 x (*.f64 y 2)))))","done",63.08874944616072]],"compiler":[[40,26]],"count":[[1,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[0,0],"picked":[1,1]}],"min-error":[63.08874944616072],"time":0.6259765625,"type":"prune"},{"accuracy":[63.08874944616072],"baseline":[63.08874944616072],"branch":[["x",63.08874944616072,1],["y",63.08874944616072,1],["(+.f64 (+.f64 (+.f64 (*.f64 1335/4 (pow.f64 y 6)) (*.f64 (*.f64 x x) (-.f64 (-.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 11 x) x) y) y) (pow.f64 y 6)) (*.f64 121 (pow.f64 y 4))) 2))) (*.f64 11/2 (pow.f64 y 8))) (/.f64 x (*.f64 2 y)))",63.08874944616072,1]],"compiler":[[3,2],[3,2],[45,33],[83,56]],"count":[[2,1]],"inputs":[["(fma.f64 1335/4 (pow.f64 y 6) (fma.f64 (*.f64 x x) (-.f64 (*.f64 y (*.f64 (*.f64 x x) (*.f64 y 11))) (fma.f64 (pow.f64 y 4) (fma.f64 y y 121) 2)) (fma.f64 11/2 (pow.f64 y 8) (/.f64 x (*.f64 y 2)))))","(+.f64 (+.f64 (+.f64 (*.f64 1335/4 (pow.f64 y 6)) (*.f64 (*.f64 x x) (-.f64 (-.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 11 x) x) y) y) (pow.f64 y 6)) (*.f64 121 (pow.f64 y 4))) 2))) (*.f64 11/2 (pow.f64 y 8))) (/.f64 x (*.f64 2 y)))"]],"link":["."],"name":["Rump's expression from Stadtherr's award speech"],"oracle":[63.08874944616072],"outputs":[["(fma.f64 1335/4 (pow.f64 y 6) (fma.f64 (*.f64 x x) (-.f64 (*.f64 y (*.f64 (*.f64 x x) (*.f64 y 11))) (fma.f64 (pow.f64 y 4) (fma.f64 y y 121) 2)) (fma.f64 11/2 (pow.f64 y 8) (/.f64 x (*.f64 y 2)))))"]],"time":7.12109375,"times":[["x",1.477783203125],["y",1.47509765625],["(+.f64 (+.f64 (+.f64 (*.f64 1335/4 (pow.f64 y 6)) (*.f64 (*.f64 x x) (-.f64 (-.f64 (-.f64 (*.f64 (*.f64 (*.f64 (*.f64 11 x) x) y) y) (pow.f64 y 6)) (*.f64 121 (pow.f64 y 4))) 2))) (*.f64 11/2 (pow.f64 y 8))) (/.f64 x (*.f64 2 y)))",2.276123046875]],"type":"regimes"},{"compiler":[[40,26]],"egraph":[[4,40,54,0.000207208],[3,39,54,0.000165792],[2,37,54,0.000124417],[1,32,54,8.3084e-5],[0,26,54,4.1167e-5]],"inputs":[["(fma.f64 1335/4 (pow.f64 y 6) (fma.f64 (*.f64 x x) (-.f64 (*.f64 y (*.f64 (*.f64 x x) (*.f64 y 11))) (fma.f64 (pow.f64 y 4) (fma.f64 y y 121) 2)) (fma.f64 11/2 (pow.f64 y 8) (/.f64 x (*.f64 y 2)))))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 1335/4 (pow.f64 y 6) (fma.f64 (*.f64 x x) (-.f64 (*.f64 y (*.f64 (*.f64 x x) (*.f64 y 11))) (fma.f64 (pow.f64 y 4) (fma.f64 y y 121) 2)) (fma.f64 11/2 (pow.f64 y 8) (/.f64 x (*.f64 y 2)))))"]],"stop":[["done",1],["saturated",1]],"time":8.9541015625,"type":"simplify"},{"time":0.011962890625,"type":"soundness"},{"compiler":[[40,26],[40,26],[40,26]],"remove-preprocessing":[["(sort x y)"]],"time":18.617919921875,"type":"end"}]