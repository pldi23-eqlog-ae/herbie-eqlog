[{"compiler":[[8,6]],"method":["search"],"sampling":[[12,0.4987797737121582,0.0009760856628417969,0.500244140625],[11,0.4978036880493164,0.0019521713256835938,0.500244140625],[10,0.4958515167236328,0.0039043426513671875,0.500244140625],[9,0.4919471740722656,0.007808685302734375,0.500244140625],[8,0.48413848876953125,0.01561737060546875,0.500244140625],[7,0.4685211181640625,0.0312347412109375,0.500244140625],[6,0.437286376953125,0.062469482421875,0.500244140625],[5,0.37481689453125,0.12493896484375,0.500244140625],[4,0.2498779296875,0.2498779296875,0.500244140625],[3,0.0,0.499755859375,0.500244140625],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":1.365966796875,"type":"analyze"},{"outcomes":[["body",256,"invalid",0.051025390625,2],["body",256,"valid",252.7568359375,8256]],"time":260.73388671875,"type":"sample"},{"compiler":[[7,5]],"egraph":[[0,1,1,1.792e-6],[18,7251,9,0.095970083],[17,6305,9,0.082226125],[16,6037,9,0.070524667],[15,5959,9,0.060182875000000004],[14,5863,9,0.052782917000000006],[13,5559,9,0.046109042],[12,5247,9,0.039079],[11,4282,9,0.031060625],[10,2859,9,0.021673],[9,1497,9,0.013806583],[8,707,9,0.006671],[7,340,9,0.002807084],[6,123,9,0.001291292],[5,76,9,0.0007371260000000001],[4,48,9,0.00047891700000000004],[3,31,9,0.000284334],[2,20,9,0.000170626],[1,13,9,9.4292e-5],[0,6,9,4.5834e-5]],"inputs":[["0"],["(sqrt.f64 (-.f64 1 (*.f64 x x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(sqrt.f64 (-.f64 1 (*.f64 x x)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":119.22998046875,"type":"preprocess"},{"count":[[1,1]],"egraph":[[18,7251,9,0.095911126],[17,6305,9,0.082075001],[16,6037,9,0.070541626],[15,5959,9,0.060104918],[14,5863,9,0.052685501],[13,5559,9,0.045990293],[12,5247,9,0.039009835],[11,4282,9,0.031028918],[10,2859,9,0.021654543],[9,1497,9,0.013776417999999999],[8,707,9,0.006701543],[7,340,9,0.002847001],[6,123,9,0.00127496],[5,76,9,0.000722751],[4,48,9,0.00046737600000000003],[3,31,9,0.00027996],[2,20,9,0.000166876],[1,13,9,9.1501e-5],[0,6,9,4.2917e-5]],"inputs":[["(sqrt.f64 (-.f64 1 (*.f64 x x)))"]],"method":["egg-herbie"],"outputs":[["(sqrt.f64 (-.f64 1 (*.f64 x x)))"]],"stop":[["node limit",1]],"time":107.80908203125,"type":"simplify"},{"compiler":[[7,5]],"time":0.2138671875,"type":"eval"},{"alts":[["(sqrt.f64 (-.f64 1 (*.f64 x x)))","next",0.00390625]],"compiler":[[7,5],[7,5]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[0.00390625],"time":1.162109375,"type":"prune"},{"compiler":[[17,8]],"locations":[["(sqrt.f64 (-.f64 1 (*.f64 x x)))",0.00390625,true]],"time":3.56201171875,"type":"localize"},{"count":[[1,4]],"series":[["(sqrt.f64 (-.f64 1 (*.f64 x x)))","x","-inf",0.328857421875],["(sqrt.f64 (-.f64 1 (*.f64 x x)))","x","inf",0.5380859375],["(sqrt.f64 (-.f64 1 (*.f64 x x)))","x","0",0.368896484375]],"time":1.2880859375,"type":"series"},{"count":[[1,22]],"egraph":[[2,1548,9,0.015789209000000002],[1,126,9,0.0022587090000000002],[0,6,9,0.000182292]],"inputs":[["(sqrt.f64 (-.f64 1 (*.f64 x x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (sqrt.f64 (-.f64 1 (*.f64 x x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (-.f64 1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 1 (*.f64 x x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (-.f64 1 (*.f64 x x)))) (cbrt.f64 (-.f64 1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (*.f64 x x))) (cbrt.f64 (sqrt.f64 (-.f64 1 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (*.f64 x x)) 1/4) (pow.f64 (-.f64 1 (*.f64 x x)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x x))) 2)) (sqrt.f64 (cbrt.f64 (-.f64 1 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (-.f64 1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x x))) 2) 1/2) (pow.f64 (cbrt.f64 (-.f64 1 (*.f64 x x))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 1 (pow.f64 x 4))) (sqrt.f64 (+.f64 1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 1 (pow.f64 x 6))) (sqrt.f64 (+.f64 1 (+.f64 (*.f64 x x) (pow.f64 x 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (*.f64 x x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 1 (*.f64 x x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (*.f64 x x)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (-.f64 1 (*.f64 x x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (*.f64 x x)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (-.f64 1 (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (-.f64 1 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 (*.f64 x x)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (-.f64 1 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (-.f64 1 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (*.f64 x (neg.f64 x))) 1/2))))))"]],"rules":[["egg-rr",22]],"stop":[["node limit",1]],"time":32.462890625,"type":"rewrite"},{"count":[[26,29]],"egraph":[[16,7841,46,0.100071667],[15,7593,46,0.090489667],[14,7339,46,0.080755709],[13,6736,46,0.070502209],[12,6241,46,0.05926316699999999],[11,5803,46,0.050122166999999995],[10,4496,46,0.041649042],[9,4181,46,0.033113417],[8,3930,46,0.026646417000000002],[7,3735,46,0.021003876],[6,3505,46,0.015667709000000002],[5,2920,46,0.010571709],[4,1153,46,0.005922959],[3,308,46,0.002280251],[2,110,48,0.000822084],[1,49,50,0.000334251],[0,21,52,0.000106584]],"inputs":[["1","(+.f64 1 (*.f64 -1/2 (pow.f64 x 2)))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 4))))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/16 (pow.f64 x 6)) (*.f64 -1/8 (pow.f64 x 4)))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/2 (pow.f64 x 2)))","(+.f64 1 (*.f64 -1/2 (*.f64 x x)))","(fma.f64 -1/2 (*.f64 x x) 1)","(fma.f64 x (*.f64 -1/2 x) 1)","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 -1/8 (pow.f64 x 4))))","(+.f64 1 (fma.f64 -1/2 (*.f64 x x) (*.f64 -1/8 (pow.f64 x 4))))","(fma.f64 -1/2 (*.f64 x x) (fma.f64 -1/8 (pow.f64 x 4) 1))","(+.f64 1 (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1/16 (pow.f64 x 6)) (*.f64 -1/8 (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1/2 (*.f64 x x) (fma.f64 -1/16 (pow.f64 x 6) (*.f64 -1/8 (pow.f64 x 4)))))","(+.f64 1 (fma.f64 -1/2 (*.f64 x x) (fma.f64 -1/8 (pow.f64 x 4) (*.f64 -1/16 (pow.f64 x 6)))))","(fma.f64 -1/2 (*.f64 x x) (fma.f64 -1/16 (pow.f64 x 6) (fma.f64 -1/8 (pow.f64 x 4) 1)))","(fma.f64 (*.f64 x x) (fma.f64 (pow.f64 x 4) -1/16 (fma.f64 x (*.f64 x -1/8) -1/2)) 1)","(fma.f64 -1/2 (*.f64 x x) (fma.f64 -1/8 (pow.f64 x 4) (fma.f64 -1/16 (pow.f64 x 6) 1)))"]],"stop":[["node limit",1]],"time":112.97705078125,"type":"simplify"},{"compiler":[[308,209]],"time":4.47998046875,"type":"eval"},{"alts":[["(pow.f64 (-.f64 1 (*.f64 x x)) 1/2)","next",0]],"compiler":[[8,6],[8,6]],"count":[[30,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[29,1],"picked":[1,0]}],"min-error":[0],"time":4.425048828125,"type":"prune"},{"compiler":[[19,10]],"time":4.284912109375,"type":"localize"},{"compiler":[[1,1]],"time":0.0869140625,"type":"eval"},{"alts":[["(pow.f64 (-.f64 1 (*.f64 x x)) 1/2)","done",0]],"compiler":[[8,6]],"count":[[1,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[0,0],"picked":[1,1]}],"min-error":[0],"time":0.47021484375,"type":"prune"},{"accuracy":[0],"baseline":[0.0],"branch":[["x",0,1],["(sqrt.f64 (-.f64 1 (*.f64 x x)))",0,1],["(-.f64 1 (*.f64 x x))",0,1],["(*.f64 x x)",0,1]],"compiler":[[2,1],[7,5],[6,4],[4,2],[14,9]],"count":[[2,1]],"inputs":[["(pow.f64 (-.f64 1 (*.f64 x x)) 1/2)","(sqrt.f64 (-.f64 1 (*.f64 x x)))"]],"link":["."],"name":["Diagrams.TwoD.Ellipse:ellipse from diagrams-lib-1.3.0.3"],"oracle":[0.00390625],"outputs":[["(pow.f64 (-.f64 1 (*.f64 x x)) 1/2)"]],"time":7.69384765625,"times":[["x",2.06298828125],["(sqrt.f64 (-.f64 1 (*.f64 x x)))",1.585205078125],["(-.f64 1 (*.f64 x x))",1.570068359375],["(*.f64 x x)",1.94091796875]],"type":"regimes"},{"compiler":[[8,6]],"egraph":[[4,27,10,0.000149042],[3,25,10,0.000116375],[2,21,10,8.3708e-5],[1,14,10,5.2667e-5],[0,7,10,2.4e-5]],"inputs":[["(pow.f64 (-.f64 1 (*.f64 x x)) 1/2)"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (-.f64 1 (*.f64 x x)) 1/2)"]],"stop":[["done",1],["saturated",1]],"time":8.2099609375,"type":"simplify"},{"time":0.005126953125,"type":"soundness"},{"compiler":[[8,6]],"remove-preprocessing":[[]],"time":7.93896484375,"type":"end"}]