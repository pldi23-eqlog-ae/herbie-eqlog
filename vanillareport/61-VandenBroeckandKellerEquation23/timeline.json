[{"compiler":[[31,24]],"method":["search"],"sampling":[[12,0.17747414901646152,0.6884436769539661,0.13408217402957234],[11,0.13651857616650886,0.7372003112991479,0.12628111253434326],[10,0.10921486093320709,0.795708272513366,0.09507686655342695],[9,0.062408491961832624,0.8737188874656567,0.06387262057251064],[8,0.0,0.9361273794274894,0.06387262057251064],[7,0.0,0.998535871389322,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":338.7568359375,"type":"analyze"},{"outcomes":[["body",256,"invalid",132.613525390625,1149],["body",512,"valid",292.407958984375,1136],["body",1024,"valid",993.34033203125,2270],["body",2048,"valid",5.708740234375,7],["body",256,"valid",600.30126953125,4843]],"time":2034.197021484375,"type":"sample"},{"compiler":[[30,23]],"egraph":[[0,3,3,2.083e-6],[6,6811,112,0.039315457],[5,4854,112,0.025989957],[4,2102,112,0.014398874],[3,815,112,0.0061373320000000006],[2,347,112,0.002210749],[1,138,112,0.0008084990000000001],[0,56,140,0.000237333]],"inputs":[["0","1","2"],["(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))","(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 F)))) (*.f64 (/.f64 B (sin.f64 F)) (pow.f64 (+.f64 (+.f64 (*.f64 B B) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))","(+.f64 (neg.f64 (*.f64 F (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 x x) 2) (*.f64 2 F)) (neg.f64 (/.f64 1 2)))))","(+.f64 (neg.f64 (*.f64 B (/.f64 1 (tan.f64 x)))) (*.f64 (/.f64 F (sin.f64 x)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 B)) (neg.f64 (/.f64 1 2)))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))","(+.f64 (*.f64 (neg.f64 x) (/.f64 1 (tan.f64 B))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (fma.f64 F F 2) (*.f64 x 2)) -1/2)))","(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","(-.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (/.f64 x (tan.f64 B)))","(-.f64 (*.f64 F (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B))) (/.f64 x (tan.f64 B)))","(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 F)))) (*.f64 (/.f64 B (sin.f64 F)) (pow.f64 (+.f64 (+.f64 (*.f64 B B) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))","(+.f64 (*.f64 x (neg.f64 (/.f64 1 (tan.f64 F)))) (*.f64 (/.f64 B (sin.f64 F)) (pow.f64 (+.f64 (*.f64 x 2) (fma.f64 B B 2)) -1/2)))","(fma.f64 (/.f64 B (sin.f64 F)) (pow.f64 (fma.f64 x 2 (fma.f64 B B 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 F)))","(-.f64 (*.f64 (/.f64 B (sin.f64 F)) (pow.f64 (fma.f64 x 2 (fma.f64 B B 2)) -1/2)) (/.f64 x (tan.f64 F)))","(+.f64 (neg.f64 (*.f64 F (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 x x) 2) (*.f64 2 F)) (neg.f64 (/.f64 1 2)))))","(+.f64 (*.f64 (neg.f64 F) (/.f64 1 (tan.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (+.f64 (fma.f64 x x 2) (*.f64 F 2)) -1/2)))","(fma.f64 (/.f64 x (sin.f64 B)) (pow.f64 (fma.f64 F 2 (fma.f64 x x 2)) -1/2) (/.f64 (neg.f64 F) (tan.f64 B)))","(fma.f64 (/.f64 x (sin.f64 B)) (pow.f64 (fma.f64 x x (fma.f64 F 2 2)) -1/2) (/.f64 (neg.f64 F) (tan.f64 B)))","(-.f64 (*.f64 (/.f64 (pow.f64 (fma.f64 x x (fma.f64 F 2 2)) -1/2) (sin.f64 B)) x) (/.f64 F (tan.f64 B)))","(-.f64 (*.f64 x (/.f64 (pow.f64 (fma.f64 x x (fma.f64 F 2 2)) -1/2) (sin.f64 B))) (/.f64 F (tan.f64 B)))","(+.f64 (neg.f64 (*.f64 B (/.f64 1 (tan.f64 x)))) (*.f64 (/.f64 F (sin.f64 x)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 B)) (neg.f64 (/.f64 1 2)))))","(+.f64 (*.f64 B (neg.f64 (/.f64 1 (tan.f64 x)))) (*.f64 (/.f64 F (sin.f64 x)) (pow.f64 (+.f64 (fma.f64 F F 2) (*.f64 B 2)) -1/2)))","(fma.f64 (/.f64 F (sin.f64 x)) (pow.f64 (fma.f64 B 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 B) (tan.f64 x)))","(-.f64 (*.f64 (/.f64 F (sin.f64 x)) (pow.f64 (fma.f64 B 2 (fma.f64 F F 2)) -1/2)) (/.f64 B (tan.f64 x)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":64.80517578125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[8,7669,28,0.046813707999999996],[7,6363,28,0.036728832999999995],[6,3924,28,0.022281541999999998],[5,1505,28,0.010465791999999998],[4,503,28,0.004023166999999999],[3,218,28,0.001679],[2,107,28,0.000742542],[1,49,28,0.000313959],[0,23,35,0.000108875]],"inputs":[["(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))","(+.f64 (*.f64 (neg.f64 x) (/.f64 1 (tan.f64 B))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (fma.f64 F F 2) (*.f64 x 2)) -1/2)))","(-.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (/.f64 x (tan.f64 B)))","(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))"]],"stop":[["node limit",1]],"time":58.36083984375,"type":"simplify"},{"compiler":[[49,32]],"time":0.649169921875,"type":"eval"},{"alts":[["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","next",14.475747698456303],["(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))","fresh",14.553872698456248]],"compiler":[[22,15],[30,23],[22,15],[30,23]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[14.432778948456244],"time":1.930908203125,"type":"prune"},{"compiler":[[62,29]],"locations":[["(/.f64 (neg.f64 x) (tan.f64 B))",0.10546875,true],["(tan.f64 B)",0.21941376953688402,true],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))",7.009242072933158,true],["(pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)",18.315404590794927,true]],"time":20.02197265625,"type":"localize"},{"count":[[4,96]],"series":[["(/.f64 (neg.f64 x) (tan.f64 B))","B","-inf",0.173828125],["(/.f64 (neg.f64 x) (tan.f64 B))","B","inf",0.157958984375],["(/.f64 (neg.f64 x) (tan.f64 B))","B","0",0.265869140625],["(/.f64 (neg.f64 x) (tan.f64 B))","x","-inf",0.302001953125],["(/.f64 (neg.f64 x) (tan.f64 B))","x","inf",0.558837890625],["(/.f64 (neg.f64 x) (tan.f64 B))","x","0",1.050048828125],["(tan.f64 B)","B","-inf",0.181884765625],["(tan.f64 B)","B","inf",0.14794921875],["(tan.f64 B)","B","0",0.205078125],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","x","-inf",4.841064453125],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","x","inf",0.661865234375],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","x","0",0.635009765625],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","B","-inf",1.2978515625],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","B","inf",18.426025390625],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","B","0",1.416015625],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","F","-inf",0.450927734375],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","F","inf",0.474853515625],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","F","0",1.0791015625],["(pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)","F","-inf",0.552001953125],["(pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)","F","inf",1.177001953125],["(pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)","F","0",1.307861328125],["(pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)","x","-inf",0.88916015625],["(pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)","x","inf",1.0048828125],["(pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)","x","0",1.01513671875]],"time":38.7470703125,"type":"series"},{"count":[[4,285]],"egraph":[[2,4198,47,0.029387417],[1,323,47,0.005799584],[0,15,51,0.000411209]],"inputs":[["(pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)","(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","(tan.f64 B)","(/.f64 (neg.f64 x) (tan.f64 B))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (cbrt.f64 (exp.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 -1/2) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2))) 2) -1/2) (pow.f64 (cbrt.f64 (fma.f64 x 2 (fma.f64 F F 2))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 x 2 (fma.f64 F F 2))) -1/2) (pow.f64 (sqrt.f64 (fma.f64 x 2 (fma.f64 F F 2))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 -1/2 (log.f64 (fma.f64 x 2 (fma.f64 F F 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 -1/2 (log.f64 (fma.f64 x 2 (fma.f64 F F 2)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (tan.f64 B)) (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B))) (fma.f64 (neg.f64 (/.f64 1 (tan.f64 B))) x (/.f64 x (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B))) (fma.f64 -1 (/.f64 x (tan.f64 B)) (/.f64 x (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B))) (fma.f64 (/.f64 x (tan.f64 B)) 1 (/.f64 x (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B))) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (/.f64 x (tan.f64 B)) 2))) (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 x (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (tan.f64 B)))) (cbrt.f64 (pow.f64 (/.f64 x (tan.f64 B)) 2)) (/.f64 x (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (tan.f64 B)))) (sqrt.f64 (/.f64 x (tan.f64 B))) (/.f64 x (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B))) (fma.f64 x (/.f64 1 (tan.f64 B)) (/.f64 x (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (/.f64 x (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) 1) (/.f64 x (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (tan.f64 B)))) x (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (tan.f64 B)))) x (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (tan.f64 B)))) x (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (tan.f64 B)))) x (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (tan.f64 B)))) x (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (tan.f64 B)))) x (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (tan.f64 B)))) x (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (tan.f64 B)))) x (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (tan.f64 B)))) x (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (tan.f64 B)))) x (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4) (neg.f64 (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 (tan.f64 B)))) x (*.f64 (/.f64 1 (neg.f64 (tan.f64 B))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B)))) (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B)))) (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B)))) (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B)))) (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B)))) (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B)))) (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B)))) (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B)))) (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B)))) (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B)))) (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4) (neg.f64 (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B)))) (cbrt.f64 (*.f64 x x)) (*.f64 (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))) (cbrt.f64 (*.f64 x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4) (neg.f64 (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B)))) (sqrt.f64 x) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))) (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (tan.f64 B)) -1))) (fma.f64 (/.f64 x (tan.f64 B)) -1 (*.f64 (/.f64 x (tan.f64 B)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (neg.f64 (*.f64 (/.f64 x (tan.f64 B)) -1))) (fma.f64 (/.f64 x (tan.f64 B)) -1 (*.f64 (/.f64 x (tan.f64 B)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (neg.f64 (*.f64 (/.f64 x (tan.f64 B)) -1))) (fma.f64 (/.f64 x (tan.f64 B)) -1 (*.f64 (/.f64 x (tan.f64 B)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (tan.f64 B)) -1))) (fma.f64 (/.f64 x (tan.f64 B)) -1 (*.f64 (/.f64 x (tan.f64 B)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (tan.f64 B)) -1))) (fma.f64 (/.f64 x (tan.f64 B)) -1 (*.f64 (/.f64 x (tan.f64 B)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (tan.f64 B)) -1))) (fma.f64 (/.f64 x (tan.f64 B)) -1 (*.f64 (/.f64 x (tan.f64 B)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (tan.f64 B)) -1))) (fma.f64 (/.f64 x (tan.f64 B)) -1 (*.f64 (/.f64 x (tan.f64 B)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (tan.f64 B)) -1))) (fma.f64 (/.f64 x (tan.f64 B)) -1 (*.f64 (/.f64 x (tan.f64 B)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (neg.f64 (*.f64 (/.f64 x (tan.f64 B)) -1))) (fma.f64 (/.f64 x (tan.f64 B)) -1 (*.f64 (/.f64 x (tan.f64 B)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (tan.f64 B)) -1))) (fma.f64 (/.f64 x (tan.f64 B)) -1 (*.f64 (/.f64 x (tan.f64 B)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4) (neg.f64 (*.f64 (/.f64 x (tan.f64 B)) -1))) (fma.f64 (/.f64 x (tan.f64 B)) -1 (*.f64 (/.f64 x (tan.f64 B)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (tan.f64 B))) (/.f64 (sqrt.f64 x) 1) (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (tan.f64 B))) (/.f64 (sqrt.f64 x) 1) (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (tan.f64 B))) (/.f64 (sqrt.f64 x) 1) (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (tan.f64 B))) (/.f64 (sqrt.f64 x) 1) (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (tan.f64 B))) (/.f64 (sqrt.f64 x) 1) (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (tan.f64 B))) (/.f64 (sqrt.f64 x) 1) (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (tan.f64 B))) (/.f64 (sqrt.f64 x) 1) (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (tan.f64 B))) (/.f64 (sqrt.f64 x) 1) (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (tan.f64 B))) (/.f64 (sqrt.f64 x) 1) (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (tan.f64 B))) (/.f64 (sqrt.f64 x) 1) (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (tan.f64 B))) (/.f64 (sqrt.f64 x) 1) (*.f64 (/.f64 (sqrt.f64 x) (tan.f64 B)) (/.f64 (sqrt.f64 x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B)))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B)))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B)))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B)))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B)))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B)))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B)))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B)))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B)))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B)))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4) (neg.f64 (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B)))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))) (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) 1) (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) 1) (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) 1) (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) 1) (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) 1) (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) 1) (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) 1) (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) 1) (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) 1) (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) 1) (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) 1) (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (tan.f64 B)))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (tan.f64 B))) (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B)))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 -1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 -1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 -1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 -1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 -1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 -1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 -1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 -1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 -1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 -1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (tan.f64 B)))) (/.f64 -1 (sqrt.f64 (tan.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (tan.f64 B))) (/.f64 -1 (sqrt.f64 (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))))) (cbrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (*.f64 (sqrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1))) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B))))) (cbrt.f64 (exp.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B))))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B)))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (/.f64 x (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B)))) (pow.f64 (cbrt.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B)))) 2) (cbrt.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B)))) (sqrt.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) 3) (pow.f64 (/.f64 x (tan.f64 B)) 3)) (fma.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (-.f64 (pow.f64 (/.f64 x (tan.f64 B)) 2) (*.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (/.f64 x (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))) (pow.f64 (/.f64 x (tan.f64 B)) 2)) (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (exp.f64 (/.f64 x (tan.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (+.f64 1 (expm1.f64 (/.f64 x (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 x (tan.f64 B))) (exp.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 x (tan.f64 B)))) (exp.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (+.f64 1 (expm1.f64 (/.f64 x (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)) (/.f64 x (tan.f64 B)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (tan.f64 B))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (tan.f64 B))) (cbrt.f64 (exp.f64 (tan.f64 B))))) (log.f64 (cbrt.f64 (exp.f64 (tan.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (tan.f64 B)))) (log.f64 (sqrt.f64 (exp.f64 (tan.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (tan.f64 B))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 B) (/.f64 1 (cos.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (tan.f64 B) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (tan.f64 B))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (tan.f64 B)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (tan.f64 B)) 2) (cbrt.f64 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (tan.f64 B)) (sqrt.f64 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sin.f64 B) (cos.f64 B))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cos.f64 B) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (sin.f64 B)) 2) (/.f64 (cos.f64 B) (cbrt.f64 (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (sin.f64 B)) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sin.f64 B)) (neg.f64 (cos.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (tan.f64 B) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (tan.f64 B) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (tan.f64 B)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (tan.f64 B)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cos.f64 B) (sin.f64 B)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (tan.f64 B) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (tan.f64 B) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (tan.f64 B)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 x (tan.f64 B)))) (cbrt.f64 (exp.f64 (/.f64 x (tan.f64 B)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (tan.f64 B))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (/.f64 x (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (tan.f64 B)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 0 (tan.f64 B)) (/.f64 x (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (neg.f64 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (tan.f64 B)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (cbrt.f64 x) (/.f64 1 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) (cbrt.f64 (pow.f64 (/.f64 x (tan.f64 B)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (tan.f64 B)) 2)) (cbrt.f64 (/.f64 x (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (tan.f64 B))) (sqrt.f64 (/.f64 x (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (tan.f64 B)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 x (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (/.f64 x (cbrt.f64 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (tan.f64 B))) (/.f64 x (sqrt.f64 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) 1) (/.f64 (cbrt.f64 x) (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (cbrt.f64 (/.f64 x (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (pow.f64 (cbrt.f64 (tan.f64 B)) 2)) (/.f64 x (cbrt.f64 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (tan.f64 B))) (/.f64 (cbrt.f64 x) (sqrt.f64 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (sqrt.f64 (tan.f64 B))) (/.f64 x (sqrt.f64 (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (sin.f64 B)) (cos.f64 B))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (tan.f64 B)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (tan.f64 B)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (tan.f64 B))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (tan.f64 B))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (tan.f64 B) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (tan.f64 B) x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (tan.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (tan.f64 B)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (tan.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (/.f64 x (tan.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (tan.f64 B)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (tan.f64 B) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (tan.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (tan.f64 B))) 1))))))"]],"rules":[["egg-rr",44],["egg-rr",28],["egg-rr",193],["egg-rr",20]],"stop":[["node limit",1]],"time":88.880859375,"type":"rewrite"},{"count":[[381,398]],"egraph":[[2,3810,3058,0.021872000000000003],[1,1077,3298,0.007879125],[0,350,3752,0.001760833]],"inputs":[["(sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 3/2 (*.f64 (pow.f64 x 2) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 -5/2 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7))))) (+.f64 (*.f64 3/2 (*.f64 (pow.f64 x 2) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))))","(exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x))))))","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (pow.f64 F 2) 2)) x)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (pow.f64 F 2) 2)) x))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (pow.f64 F 2) 2)) x)) (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (+.f64 (*.f64 -1/384 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (*.f64 -1/64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (pow.f64 x 3)))))","(exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2))))","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2)) x)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2)) x))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2)) x)) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (+.f64 (*.f64 1/64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (*.f64 1/384 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (pow.f64 x 3))))))","(sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (pow.f64 F 2))) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (pow.f64 F 2))) (+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (*.f64 3/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 5))) (pow.f64 F 4)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (pow.f64 F 2))) (+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (+.f64 (*.f64 3/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 5))) (pow.f64 F 4))) (*.f64 -5/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 7))) (pow.f64 F 6))))))","(/.f64 1 F)","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (/.f64 1 F))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5))) (/.f64 1 F))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (pow.f64 F 7))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (pow.f64 F 7))) (+.f64 (*.f64 -1/48 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (pow.f64 F 7))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5))) (/.f64 1 F)))))))","(/.f64 -1 F)","(-.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (/.f64 1 F))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (*.f64 1/8 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))) (pow.f64 F 5)))) (/.f64 1 F))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 (+.f64 2 (*.f64 2 x)) 3)) (+.f64 (*.f64 -1/6 (pow.f64 (+.f64 2 (*.f64 2 x)) 3)) (*.f64 -1/48 (pow.f64 (+.f64 2 (*.f64 2 x)) 3)))) (pow.f64 F 7))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (*.f64 1/8 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))) (pow.f64 F 5))))) (/.f64 1 F))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (/.f64 (pow.f64 F 3) (sin.f64 B)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (/.f64 (pow.f64 F 3) (sin.f64 B)))) (+.f64 (*.f64 3/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 5))) (/.f64 (pow.f64 F 5) (sin.f64 B)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(/.f64 1 (sin.f64 B))","(+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (*.f64 (sin.f64 B) (pow.f64 F 4)))) (+.f64 (/.f64 1 (sin.f64 B)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (*.f64 (sin.f64 B) (pow.f64 F 4))))))))","(/.f64 -1 (sin.f64 B))","(-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 1 (sin.f64 B)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))) (/.f64 1 (sin.f64 B)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (*.f64 1/8 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))) (*.f64 (sin.f64 B) (pow.f64 F 4)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))) (/.f64 1 (sin.f64 B)))","(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x)) B)","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 (+.f64 (*.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (*.f64 1/3 x)) B)))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (*.f64 1/3 x)) B) (*.f64 (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F)))) (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x))) (pow.f64 B 3)))))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (+.f64 (*.f64 1/6 (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F))) (+.f64 (*.f64 1/720 F) (*.f64 -1/5040 F))))) (+.f64 (*.f64 17/315 x) (+.f64 (*.f64 -2/45 x) (*.f64 -1/3 (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x)))))) (pow.f64 B 5)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (*.f64 1/3 x)) B) (*.f64 (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F)))) (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x))) (pow.f64 B 3))))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (*.f64 -1 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))) x))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (*.f64 -1 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))) x) (*.f64 3/2 (*.f64 (/.f64 (*.f64 F (pow.f64 x 2)) (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5)))))))","(+.f64 (*.f64 -5/2 (*.f64 (/.f64 (*.f64 F (pow.f64 x 3)) (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7))))) (+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (*.f64 -1 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))) x) (*.f64 3/2 (*.f64 (/.f64 (*.f64 F (pow.f64 x 2)) (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5))))))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) F) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) F) (sin.f64 B)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 F (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) F) (sin.f64 B)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 F (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 F (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))) (*.f64 (sin.f64 B) (pow.f64 x 2))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) F) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (+.f64 (/.f64 (*.f64 F (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2))))) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (*.f64 F (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))) (*.f64 (sin.f64 B) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 F (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2))))) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","B","(+.f64 (*.f64 1/3 (pow.f64 B 3)) B)","(+.f64 (*.f64 1/3 (pow.f64 B 3)) (+.f64 (*.f64 2/15 (pow.f64 B 5)) B))","(+.f64 (*.f64 1/3 (pow.f64 B 3)) (+.f64 (*.f64 2/15 (pow.f64 B 5)) (+.f64 (*.f64 17/315 (pow.f64 B 7)) B)))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 x B))","(+.f64 (*.f64 -1 (/.f64 x B)) (*.f64 1/3 (*.f64 B x)))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 1/3 (*.f64 B x)) (*.f64 (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x)) (pow.f64 B 3))))","(+.f64 (*.f64 (+.f64 (*.f64 17/315 x) (+.f64 (*.f64 -2/45 x) (*.f64 -1/3 (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x))))) (pow.f64 B 5)) (+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 1/3 (*.f64 B x)) (*.f64 (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x)) (pow.f64 B 3)))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))"]],"method":["egg-herbie"],"outputs":[["(sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))","(sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 F F))))","(sqrt.f64 (/.f64 1 (fma.f64 F F 2)))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(fma.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3)))) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 F F)))))","(-.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3)))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 3/2 (*.f64 (pow.f64 x 2) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))))","(fma.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3)))) (fma.f64 3/2 (*.f64 (*.f64 x x) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 5)))) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 F F))))))","(-.f64 (fma.f64 3/2 (*.f64 (*.f64 x x) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 5)))) (sqrt.f64 (/.f64 1 (fma.f64 F F 2)))) (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3)))))","(+.f64 (*.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 -5/2 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7))))) (+.f64 (*.f64 3/2 (*.f64 (pow.f64 x 2) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5))))) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))))","(fma.f64 -1 (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3)))) (fma.f64 -5/2 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 7)))) (fma.f64 3/2 (*.f64 (*.f64 x x) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 5)))) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 F F)))))))","(-.f64 (fma.f64 -5/2 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 7)))) (fma.f64 3/2 (*.f64 (*.f64 x x) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 5)))) (sqrt.f64 (/.f64 1 (fma.f64 F F 2))))) (*.f64 x (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3)))))","(exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x))))))","(pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x)))))","(pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (log.f64 x)))","(*.f64 (pow.f64 x -1/2) (pow.f64 2 -1/2))","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (pow.f64 F 2) 2)) x)))","(+.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (*.f64 -1/4 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (/.f64 x (+.f64 2 (*.f64 F F))))))","(fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (log.f64 x))) x) (fma.f64 F F 2)) (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (log.f64 x))))","(fma.f64 -1/4 (*.f64 (/.f64 (*.f64 (pow.f64 x -1/2) (pow.f64 2 -1/2)) x) (fma.f64 F F 2)) (*.f64 (pow.f64 x -1/2) (pow.f64 2 -1/2)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (pow.f64 F 2) 2)) x))))","(+.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (/.f64 (*.f64 x x) (*.f64 (pow.f64 (+.f64 2 (*.f64 F F)) 2) 3/32))) (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x)))))) (*.f64 -1/4 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (/.f64 x (+.f64 2 (*.f64 F F))))))","(+.f64 (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (log.f64 x))) x) (fma.f64 F F 2)) (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (log.f64 x)))) (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (log.f64 x))) (*.f64 x x)) (*.f64 (pow.f64 (fma.f64 F F 2) 2) 3/32)))","(+.f64 (fma.f64 -1/4 (*.f64 (/.f64 (*.f64 (pow.f64 x -1/2) (pow.f64 2 -1/2)) x) (fma.f64 F F 2)) (*.f64 (pow.f64 x -1/2) (pow.f64 2 -1/2))) (*.f64 (*.f64 (/.f64 (pow.f64 2 -1/2) x) (/.f64 (pow.f64 x -1/2) x)) (*.f64 (pow.f64 (fma.f64 F F 2) 2) 3/32)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (pow.f64 F 2) 2)) x)) (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (+.f64 (*.f64 -1/48 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (+.f64 (*.f64 -1/384 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (*.f64 -1/64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (pow.f64 x 3)))))","(+.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (/.f64 (*.f64 x x) (*.f64 (pow.f64 (+.f64 2 (*.f64 F F)) 2) 3/32))) (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x)))))) (fma.f64 -1/4 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (/.f64 x (+.f64 2 (*.f64 F F)))) (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (/.f64 (pow.f64 x 3) (fma.f64 -1/48 (pow.f64 (+.f64 2 (*.f64 F F)) 3) (*.f64 (pow.f64 (+.f64 2 (*.f64 F F)) 3) -7/384))))))","(+.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (log.f64 x))) (+.f64 (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (log.f64 x))) x) (fma.f64 F F 2)) (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (log.f64 x))) (pow.f64 x 3)) (*.f64 (pow.f64 (fma.f64 F F 2) 3) -5/128))) (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (log.f64 x))) (*.f64 x x)) (*.f64 (pow.f64 (fma.f64 F F 2) 2) 3/32))))","(+.f64 (fma.f64 -1/4 (*.f64 (/.f64 (*.f64 (pow.f64 x -1/2) (pow.f64 2 -1/2)) x) (fma.f64 F F 2)) (*.f64 (pow.f64 x -1/2) (pow.f64 2 -1/2))) (*.f64 (*.f64 (/.f64 (pow.f64 2 -1/2) x) (/.f64 (pow.f64 x -1/2) x)) (+.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 F F 2) 3) -5/128) x) (*.f64 (pow.f64 (fma.f64 F F 2) 2) 3/32))))","(exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2))))","(pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -2)))","(pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -2) (log.f64 (/.f64 -1 x))))","(*.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -2 -1/2))","(+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2)) x)))","(+.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -2))) (*.f64 -1/4 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -2))) (/.f64 x (+.f64 2 (*.f64 F F))))))","(fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -2) (log.f64 (/.f64 -1 x)))) x) (fma.f64 F F 2)) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -2) (log.f64 (/.f64 -1 x)))))","(fma.f64 -1/4 (/.f64 (fma.f64 F F 2) (/.f64 x (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -2 -1/2)))) (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -2 -1/2)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2)) x))))","(+.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -2))) (/.f64 (*.f64 x x) (*.f64 (pow.f64 (+.f64 2 (*.f64 F F)) 2) 3/32))) (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -2)))) (*.f64 -1/4 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -2))) (/.f64 x (+.f64 2 (*.f64 F F))))))","(+.f64 (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -2) (log.f64 (/.f64 -1 x)))) x) (fma.f64 F F 2)) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -2) (log.f64 (/.f64 -1 x))))) (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -2) (log.f64 (/.f64 -1 x)))) (*.f64 x x)) (*.f64 (pow.f64 (fma.f64 F F 2) 2) 3/32)))","(+.f64 (fma.f64 -1/4 (/.f64 (fma.f64 F F 2) (/.f64 x (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -2 -1/2)))) (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -2 -1/2))) (*.f64 (*.f64 (/.f64 (pow.f64 (/.f64 -1 x) 1/2) x) (/.f64 (pow.f64 -2 -1/2) x)) (*.f64 (pow.f64 (fma.f64 F F 2) 2) 3/32)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)))) (pow.f64 x 2)) (+.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2)) x)) (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (*.f64 1/48 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (+.f64 (*.f64 1/64 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)) (*.f64 1/384 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (pow.f64 x 3))))))","(+.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -2))) (/.f64 (*.f64 x x) (*.f64 (pow.f64 (+.f64 2 (*.f64 F F)) 2) 3/32))) (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -2)))) (fma.f64 -1/4 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -2))) (/.f64 x (+.f64 2 (*.f64 F F)))) (neg.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -2))) (/.f64 (pow.f64 x 3) (fma.f64 1/48 (pow.f64 (+.f64 2 (*.f64 F F)) 3) (*.f64 (pow.f64 (+.f64 2 (*.f64 F F)) 3) 7/384)))))))","(+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -2) (log.f64 (/.f64 -1 x)))) (*.f64 x x)) (*.f64 (pow.f64 (fma.f64 F F 2) 2) 3/32)) (-.f64 (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -2) (log.f64 (/.f64 -1 x)))) x) (fma.f64 F F 2)) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -2) (log.f64 (/.f64 -1 x))))) (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -2) (log.f64 (/.f64 -1 x)))) (pow.f64 x 3)) (*.f64 (pow.f64 (fma.f64 F F 2) 3) 5/128))))","(+.f64 (*.f64 (*.f64 (/.f64 (pow.f64 (/.f64 -1 x) 1/2) x) (/.f64 (pow.f64 -2 -1/2) x)) (*.f64 (pow.f64 (fma.f64 F F 2) 2) 3/32)) (-.f64 (fma.f64 -1/4 (/.f64 (fma.f64 F F 2) (/.f64 x (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -2 -1/2)))) (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -2 -1/2))) (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -2 -1/2)) (pow.f64 x 3)) (*.f64 (pow.f64 (fma.f64 F F 2) 3) 5/128))))","(sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))))","(sqrt.f64 (/.f64 1 (fma.f64 2 x 2)))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (pow.f64 F 2))) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))))","(fma.f64 -1/2 (*.f64 (*.f64 F F) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3)))) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))))","(fma.f64 -1/2 (*.f64 (*.f64 F F) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 2 x 2) 3)))) (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))))","(fma.f64 -1/2 (*.f64 F (*.f64 F (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 2 x 2) 3))))) (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (pow.f64 F 2))) (+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (*.f64 3/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 5))) (pow.f64 F 4)))))","(+.f64 (fma.f64 -1/2 (*.f64 (*.f64 F F) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3)))) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))))) (*.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 5)))) (pow.f64 F 4)))","(fma.f64 -1/2 (*.f64 (*.f64 F F) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 2 x 2) 3)))) (fma.f64 3/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 2 x 2) 5))) (pow.f64 F 4)) (sqrt.f64 (/.f64 1 (fma.f64 2 x 2)))))","(fma.f64 -1/2 (*.f64 F (*.f64 F (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 2 x 2) 3))))) (fma.f64 3/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 2 x 2) 5))) (pow.f64 F 4)) (sqrt.f64 (/.f64 1 (fma.f64 2 x 2)))))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (pow.f64 F 2))) (+.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (+.f64 (*.f64 3/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 5))) (pow.f64 F 4))) (*.f64 -5/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 7))) (pow.f64 F 6))))))","(+.f64 (fma.f64 -1/2 (*.f64 (*.f64 F F) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3)))) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))))) (fma.f64 3/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 5))) (pow.f64 F 4)) (*.f64 (*.f64 -5/16 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 7)))) (pow.f64 F 6))))","(fma.f64 -1/2 (*.f64 (*.f64 F F) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 2 x 2) 3)))) (+.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (fma.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 2 x 2) 5)))) (pow.f64 F 4) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 2 x 2) 7))) (*.f64 (pow.f64 F 6) -5/16)))))","(+.f64 (fma.f64 -1/2 (*.f64 F (*.f64 F (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 2 x 2) 3))))) (sqrt.f64 (/.f64 1 (fma.f64 2 x 2)))) (fma.f64 -5/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 2 x 2) 7))) (pow.f64 F 6)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 2 x 2) 5))) (*.f64 (pow.f64 F 4) 3/8))))","(/.f64 1 F)","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (/.f64 1 F))","(fma.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3)) (/.f64 1 F))","(fma.f64 -1/2 (/.f64 (fma.f64 2 x 2) (pow.f64 F 3)) (/.f64 1 F))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5))) (/.f64 1 F))))","(fma.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3)) (fma.f64 1/4 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5)) (fma.f64 1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5)) (/.f64 1 F))))","(+.f64 (*.f64 (/.f64 (pow.f64 (fma.f64 2 x 2) 2) (pow.f64 F 5)) 3/8) (fma.f64 -1/2 (/.f64 (fma.f64 2 x 2) (pow.f64 F 3)) (/.f64 1 F)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (+.f64 (*.f64 -1/6 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (pow.f64 F 7))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (pow.f64 F 7))) (+.f64 (*.f64 -1/48 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (pow.f64 F 7))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5))) (/.f64 1 F)))))))","(fma.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3)) (fma.f64 -1/6 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (pow.f64 F 7)) (fma.f64 -1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (pow.f64 F 7)) (fma.f64 -1/48 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (pow.f64 F 7)) (fma.f64 1/4 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5)) (fma.f64 1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 F 5)) (/.f64 1 F)))))))","(fma.f64 -1/2 (/.f64 (fma.f64 2 x 2) (pow.f64 F 3)) (fma.f64 -1/6 (/.f64 (pow.f64 (fma.f64 2 x 2) 3) (pow.f64 F 7)) (+.f64 (+.f64 (/.f64 1 F) (*.f64 (/.f64 (pow.f64 (fma.f64 2 x 2) 2) (pow.f64 F 5)) 3/8)) (*.f64 (/.f64 (pow.f64 (fma.f64 2 x 2) 3) (pow.f64 F 7)) -7/48))))","(fma.f64 -1/2 (/.f64 (fma.f64 2 x 2) (pow.f64 F 3)) (+.f64 (*.f64 (/.f64 (pow.f64 (fma.f64 2 x 2) 3) (pow.f64 F 7)) -5/16) (+.f64 (/.f64 1 F) (*.f64 (/.f64 (pow.f64 (fma.f64 2 x 2) 2) (pow.f64 F 5)) 3/8))))","(/.f64 -1 F)","(-.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (/.f64 1 F))","(-.f64 (/.f64 (*.f64 1/2 (+.f64 2 (*.f64 2 x))) (pow.f64 F 3)) (/.f64 1 F))","(fma.f64 (/.f64 (fma.f64 2 x 2) (pow.f64 F 3)) 1/2 (/.f64 -1 F))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (*.f64 1/8 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))) (pow.f64 F 5)))) (/.f64 1 F))","(-.f64 (fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3)) (neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) 3/8) (pow.f64 F 5)))) (/.f64 1 F))","(fma.f64 (/.f64 (fma.f64 2 x 2) (pow.f64 F 3)) 1/2 (fma.f64 -1 (/.f64 (pow.f64 (fma.f64 2 x 2) 2) (/.f64 (pow.f64 F 5) 3/8)) (/.f64 -1 F)))","(+.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 2 x 2) 2) -3/8) (pow.f64 F 5)) (fma.f64 (/.f64 (fma.f64 2 x 2) (pow.f64 F 3)) 1/2 (/.f64 -1 F)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/8 (pow.f64 (+.f64 2 (*.f64 2 x)) 3)) (+.f64 (*.f64 -1/6 (pow.f64 (+.f64 2 (*.f64 2 x)) 3)) (*.f64 -1/48 (pow.f64 (+.f64 2 (*.f64 2 x)) 3)))) (pow.f64 F 7))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (*.f64 1/8 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))) (pow.f64 F 5))))) (/.f64 1 F))","(-.f64 (fma.f64 -1 (/.f64 (fma.f64 -1/8 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 3) -3/16)) (pow.f64 F 7)) (fma.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 F 3)) (neg.f64 (/.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) 3/8) (pow.f64 F 5))))) (/.f64 1 F))","(+.f64 (-.f64 (-.f64 (*.f64 (/.f64 (fma.f64 2 x 2) (pow.f64 F 3)) 1/2) (/.f64 (pow.f64 (fma.f64 2 x 2) 2) (/.f64 (pow.f64 F 5) 3/8))) (/.f64 (*.f64 (pow.f64 (fma.f64 2 x 2) 3) -5/16) (pow.f64 F 7))) (/.f64 -1 F))","(+.f64 (fma.f64 (/.f64 (fma.f64 2 x 2) (pow.f64 F 3)) 1/2 (/.f64 (*.f64 (pow.f64 (fma.f64 2 x 2) 2) -3/8) (pow.f64 F 5))) (+.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 2 x 2) 3) 5/16) (pow.f64 F 7)) (/.f64 -1 F)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B)) (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))","(-.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (/.f64 F (sin.f64 B))) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (/.f64 (pow.f64 F 3) (sin.f64 B)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (/.f64 (pow.f64 F 3) (sin.f64 B))) (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B)) (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 2 x 2) 3))) (/.f64 (pow.f64 F 3) (sin.f64 B))) (-.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (/.f64 F (sin.f64 B))) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))","(-.f64 (fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 2 x 2) 3)))) (/.f64 (pow.f64 F 3) (sin.f64 B)) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (/.f64 F (sin.f64 B)))) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (/.f64 (pow.f64 F 3) (sin.f64 B)))) (+.f64 (*.f64 3/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 5))) (/.f64 (pow.f64 F 5) (sin.f64 B)))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 3))) (/.f64 (pow.f64 F 3) (sin.f64 B))) (fma.f64 3/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 2 x)) 5))) (/.f64 (pow.f64 F 5) (sin.f64 B))) (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 F (sin.f64 B)) (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 2 x 2) 3))) (/.f64 (pow.f64 F 3) (sin.f64 B))) (fma.f64 3/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 2 x 2) 5))) (/.f64 (pow.f64 F 5) (sin.f64 B))) (-.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (/.f64 F (sin.f64 B))) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 2 x 2) 3))) (/.f64 (pow.f64 F 3) (sin.f64 B))) (-.f64 (fma.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 2 x 2) 5)))) (/.f64 (pow.f64 F 5) (sin.f64 B)) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (/.f64 F (sin.f64 B)))) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))","(/.f64 1 (sin.f64 B))","(+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))) (/.f64 1 (sin.f64 B)))","(-.f64 (/.f64 1 (sin.f64 B)) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(fma.f64 -1/2 (/.f64 (/.f64 (+.f64 2 (*.f64 2 x)) (sin.f64 B)) (*.f64 F F)) (+.f64 (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))) (/.f64 1 (sin.f64 B))))","(-.f64 (fma.f64 -1/2 (/.f64 (fma.f64 2 x 2) (*.f64 (*.f64 F F) (sin.f64 B))) (/.f64 1 (sin.f64 B))) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (*.f64 (sin.f64 B) (pow.f64 F 4)))) (+.f64 (/.f64 1 (sin.f64 B)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (*.f64 (sin.f64 B) (pow.f64 F 4))))))))","(fma.f64 -1/2 (/.f64 (/.f64 (+.f64 2 (*.f64 2 x)) (sin.f64 B)) (*.f64 F F)) (fma.f64 1/8 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (*.f64 (pow.f64 F 4) (sin.f64 B))) (+.f64 (/.f64 1 (sin.f64 B)) (fma.f64 -1 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (*.f64 (pow.f64 F 4) (sin.f64 B))))))))","(fma.f64 -1/2 (/.f64 (fma.f64 2 x 2) (*.f64 (*.f64 F F) (sin.f64 B))) (fma.f64 1/8 (/.f64 (pow.f64 (fma.f64 2 x 2) 2) (*.f64 (pow.f64 F 4) (sin.f64 B))) (+.f64 (/.f64 1 (sin.f64 B)) (-.f64 (/.f64 1/4 (/.f64 (*.f64 (pow.f64 F 4) (sin.f64 B)) (pow.f64 (fma.f64 2 x 2) 2))) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))))","(fma.f64 -1/2 (/.f64 (fma.f64 2 x 2) (*.f64 (*.f64 F F) (sin.f64 B))) (+.f64 (-.f64 (/.f64 1 (sin.f64 B)) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))) (*.f64 (/.f64 (pow.f64 (fma.f64 2 x 2) 2) (*.f64 (pow.f64 F 4) (sin.f64 B))) 3/8)))","(/.f64 -1 (sin.f64 B))","(-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 1 (sin.f64 B)))","(-.f64 (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))) (/.f64 1 (sin.f64 B)))","(fma.f64 -1 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)) (/.f64 -1 (sin.f64 B)))","(-.f64 (/.f64 -1 (sin.f64 B)) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))) (/.f64 1 (sin.f64 B)))","(-.f64 (fma.f64 1/2 (/.f64 (/.f64 (+.f64 2 (*.f64 2 x)) (sin.f64 B)) (*.f64 F F)) (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))) (/.f64 1 (sin.f64 B)))","(fma.f64 1/2 (/.f64 (fma.f64 2 x 2) (*.f64 (*.f64 F F) (sin.f64 B))) (fma.f64 -1 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)) (/.f64 -1 (sin.f64 B))))","(fma.f64 1/2 (/.f64 (fma.f64 2 x 2) (*.f64 (*.f64 F F) (sin.f64 B))) (-.f64 (/.f64 -1 (sin.f64 B)) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (*.f64 1/8 (pow.f64 (+.f64 2 (*.f64 2 x)) 2))) (*.f64 (sin.f64 B) (pow.f64 F 4)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 2)))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))) (/.f64 1 (sin.f64 B)))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) 3/8) (*.f64 (pow.f64 F 4) (sin.f64 B))) (fma.f64 1/2 (/.f64 (/.f64 (+.f64 2 (*.f64 2 x)) (sin.f64 B)) (*.f64 F F)) (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))) (/.f64 1 (sin.f64 B)))","(+.f64 (-.f64 (-.f64 (*.f64 1/2 (/.f64 (fma.f64 2 x 2) (*.f64 (*.f64 F F) (sin.f64 B)))) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))) (/.f64 (pow.f64 (fma.f64 2 x 2) 2) (/.f64 (*.f64 (pow.f64 F 4) (sin.f64 B)) 3/8))) (/.f64 -1 (sin.f64 B)))","(+.f64 (fma.f64 1/2 (/.f64 (fma.f64 2 x 2) (*.f64 (*.f64 F F) (sin.f64 B))) (-.f64 (/.f64 -1 (sin.f64 B)) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))) (/.f64 (*.f64 (pow.f64 (fma.f64 2 x 2) 2) -3/8) (*.f64 (pow.f64 F 4) (sin.f64 B))))","(/.f64 (+.f64 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 x)) B)","(/.f64 (fma.f64 F (sqrt.f64 (/.f64 1 (+.f64 (+.f64 2 (*.f64 F F)) (*.f64 2 x)))) (neg.f64 x)) B)","(/.f64 (-.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) x) B)","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 (+.f64 (*.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (*.f64 1/3 x)) B)))","(fma.f64 -1 (/.f64 x B) (fma.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (+.f64 2 (*.f64 F F)) (*.f64 2 x)))) (*.f64 B (fma.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (+.f64 2 (*.f64 F F)) (*.f64 2 x))))) (*.f64 x 1/3)))))","(-.f64 (fma.f64 B (fma.f64 (*.f64 F 1/6) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 x 1/3)) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (/.f64 F B))) (/.f64 x B))","(+.f64 (*.f64 B (fma.f64 (*.f64 F 1/6) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 x 1/3))) (/.f64 (-.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) x) B))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (*.f64 1/3 x)) B) (*.f64 (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F)))) (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x))) (pow.f64 B 3)))))","(fma.f64 -1 (/.f64 x B) (fma.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (+.f64 2 (*.f64 F F)) (*.f64 2 x)))) (fma.f64 (fma.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (+.f64 2 (*.f64 F F)) (*.f64 2 x))))) (*.f64 x 1/3)) B (*.f64 (fma.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (+.f64 2 (*.f64 F F)) (*.f64 2 x)))) (*.f64 F -7/360)) (*.f64 x 1/45)) (pow.f64 B 3)))))","(-.f64 (fma.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (/.f64 F B) (fma.f64 B (fma.f64 (*.f64 F 1/6) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 x 1/3)) (*.f64 (-.f64 (*.f64 x 1/45) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 F -7/360))) (pow.f64 B 3)))) (/.f64 x B))","(+.f64 (fma.f64 B (fma.f64 (*.f64 F 1/6) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 x 1/3)) (*.f64 (fma.f64 x 1/45 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 F 7/360))) (pow.f64 B 3))) (/.f64 (-.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) x) B))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (+.f64 (*.f64 1/6 (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F))) (+.f64 (*.f64 1/720 F) (*.f64 -1/5040 F))))) (+.f64 (*.f64 17/315 x) (+.f64 (*.f64 -2/45 x) (*.f64 -1/3 (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x)))))) (pow.f64 B 5)) (+.f64 (*.f64 (+.f64 (*.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (*.f64 1/3 x)) B) (*.f64 (+.f64 (*.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (+.f64 (*.f64 1/120 F) (*.f64 -1/36 F)))) (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x))) (pow.f64 B 3))))))","(fma.f64 -1 (/.f64 x B) (fma.f64 (/.f64 F B) (sqrt.f64 (/.f64 1 (+.f64 (+.f64 2 (*.f64 F F)) (*.f64 2 x)))) (fma.f64 (fma.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (+.f64 2 (*.f64 F F)) (*.f64 2 x)))) (fma.f64 1/6 (*.f64 F -7/360) (*.f64 F 1/840))) (fma.f64 17/315 x (fma.f64 -2/45 x (*.f64 (*.f64 x 1/45) -1/3)))) (pow.f64 B 5) (fma.f64 (fma.f64 1/6 (*.f64 F (sqrt.f64 (/.f64 1 (+.f64 (+.f64 2 (*.f64 F F)) (*.f64 2 x))))) (*.f64 x 1/3)) B (*.f64 (fma.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (+.f64 2 (*.f64 F F)) (*.f64 2 x)))) (*.f64 F -7/360)) (*.f64 x 1/45)) (pow.f64 B 3))))))","(-.f64 (fma.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (/.f64 F B) (fma.f64 (-.f64 (+.f64 (*.f64 x -1/135) (*.f64 x 1/105)) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (fma.f64 F 1/840 (*.f64 F -7/2160)))) (pow.f64 B 5) (fma.f64 B (fma.f64 (*.f64 F 1/6) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 x 1/3)) (*.f64 (-.f64 (*.f64 x 1/45) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 F -7/360))) (pow.f64 B 3))))) (/.f64 x B))","(+.f64 (fma.f64 (-.f64 (*.f64 x 2/945) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 F -31/15120))) (pow.f64 B 5) (fma.f64 B (fma.f64 (*.f64 F 1/6) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 x 1/3)) (*.f64 (fma.f64 x 1/45 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 F 7/360))) (pow.f64 B 3)))) (/.f64 (-.f64 (*.f64 F (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2))))) x) B))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (+.f64 2 (*.f64 F F)) (*.f64 2 x)))) (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B)))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x)))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (+.f64 2 (*.f64 F F)) (*.f64 2 x)))) (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B)))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x)))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (+.f64 2 (*.f64 F F)) (*.f64 2 x)))) (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B)))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x)))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (+.f64 2 (*.f64 F F)) (*.f64 2 x)))) (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B)))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x)))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (+.f64 2 (*.f64 F F)) (*.f64 2 x)))) (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B)))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x)))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (+.f64 2 (*.f64 F F)) (*.f64 2 x)))) (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B)))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x)))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (+.f64 2 (*.f64 F F)) (*.f64 2 x)))) (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B)))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x)))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (+.f64 2 (*.f64 F F)) (*.f64 2 x)))) (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B)))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 2 x 2)))) (*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x)))","(*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 F F)))) (/.f64 F (sin.f64 B)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (/.f64 F (sin.f64 B)))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (*.f64 -1 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))) x))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 F F)))) (*.f64 x (*.f64 -1 (+.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))) (/.f64 F (sin.f64 B)))))))","(fma.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (/.f64 F (sin.f64 B)) (*.f64 x (fma.f64 (neg.f64 (/.f64 F (sin.f64 B))) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))) (/.f64 (neg.f64 (cos.f64 B)) (sin.f64 B)))))","(fma.f64 x (-.f64 (/.f64 (neg.f64 (cos.f64 B)) (sin.f64 B)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))) (/.f64 F (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (/.f64 F (sin.f64 B))))","(+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (*.f64 -1 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))) x) (*.f64 3/2 (*.f64 (/.f64 (*.f64 F (pow.f64 x 2)) (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5)))))))","(fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 F F)))) (fma.f64 (*.f64 -1 (+.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))) (/.f64 F (sin.f64 B))))) x (*.f64 (*.f64 3/2 (/.f64 F (/.f64 (sin.f64 B) (*.f64 x x)))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 5))))))","(fma.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (/.f64 F (sin.f64 B)) (fma.f64 x (fma.f64 (neg.f64 (/.f64 F (sin.f64 B))) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))) (/.f64 (neg.f64 (cos.f64 B)) (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 5))) (*.f64 3/2 (/.f64 (*.f64 x (*.f64 x F)) (sin.f64 B))))))","(fma.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (/.f64 F (sin.f64 B)) (fma.f64 x (-.f64 (/.f64 (neg.f64 (cos.f64 B)) (sin.f64 B)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))) (/.f64 F (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 5))) (/.f64 (*.f64 3/2 F) (/.f64 (sin.f64 B) (*.f64 x x))))))","(+.f64 (*.f64 -5/2 (*.f64 (/.f64 (*.f64 F (pow.f64 x 3)) (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 7))))) (+.f64 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (*.f64 -1 (*.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))) x) (*.f64 3/2 (*.f64 (/.f64 (*.f64 F (pow.f64 x 2)) (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 5))))))))","(fma.f64 -5/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 7))) (/.f64 (*.f64 F (pow.f64 x 3)) (sin.f64 B))) (fma.f64 (/.f64 F (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 F F)))) (fma.f64 (*.f64 -1 (+.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))) (/.f64 F (sin.f64 B))))) x (*.f64 (*.f64 3/2 (/.f64 F (/.f64 (sin.f64 B) (*.f64 x x)))) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 5)))))))","(fma.f64 -5/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 7))) (/.f64 (*.f64 F (pow.f64 x 3)) (sin.f64 B))) (fma.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (/.f64 F (sin.f64 B)) (fma.f64 x (fma.f64 (neg.f64 (/.f64 F (sin.f64 B))) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))) (/.f64 (neg.f64 (cos.f64 B)) (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 5))) (*.f64 3/2 (/.f64 (*.f64 x (*.f64 x F)) (sin.f64 B)))))))","(fma.f64 -5/2 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 7))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 x 3))) (fma.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (/.f64 F (sin.f64 B)) (fma.f64 x (-.f64 (/.f64 (neg.f64 (cos.f64 B)) (sin.f64 B)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))) (/.f64 F (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 5))) (/.f64 (*.f64 3/2 F) (/.f64 (sin.f64 B) (*.f64 x x)))))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) F) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))) (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (/.f64 (sin.f64 B) F)))","(-.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (log.f64 x))) (sin.f64 B)) F) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(-.f64 (*.f64 (/.f64 (*.f64 (pow.f64 x -1/2) (pow.f64 2 -1/2)) (sin.f64 B)) F) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) F) (sin.f64 B)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 F (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(+.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (/.f64 (sin.f64 B) F)) (fma.f64 -1/4 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (/.f64 (*.f64 x (sin.f64 B)) (+.f64 (pow.f64 F 3) (*.f64 F 2)))) (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))))","(+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (log.f64 x))) (sin.f64 B)) F) (-.f64 (*.f64 -1/4 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (log.f64 x))) x) (/.f64 (*.f64 F (fma.f64 F F 2)) (sin.f64 B)))) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))","(-.f64 (*.f64 (/.f64 (*.f64 (pow.f64 x -1/2) (pow.f64 2 -1/2)) (sin.f64 B)) (+.f64 F (*.f64 (/.f64 F (/.f64 x (fma.f64 F F 2))) -1/4))) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) F) (sin.f64 B)) (+.f64 (*.f64 -1/4 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 F (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (log.f64 2) (*.f64 -1 (log.f64 (/.f64 1 x)))))) (*.f64 F (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))) (*.f64 (sin.f64 B) (pow.f64 x 2))) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(+.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (/.f64 (sin.f64 B) F)) (fma.f64 -1/4 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (/.f64 (*.f64 x (sin.f64 B)) (+.f64 (pow.f64 F 3) (*.f64 F 2)))) (+.f64 (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))) (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (neg.f64 (neg.f64 (log.f64 x))))) (/.f64 (*.f64 (*.f64 x x) (sin.f64 B)) (*.f64 F (*.f64 (pow.f64 (+.f64 2 (*.f64 F F)) 2) 3/32)))))))","(+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (log.f64 x))) (sin.f64 B)) F) (-.f64 (fma.f64 -1/4 (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (log.f64 x))) x) (/.f64 (*.f64 F (fma.f64 F F 2)) (sin.f64 B))) (/.f64 (pow.f64 (exp.f64 -1/2) (+.f64 (log.f64 2) (log.f64 x))) (*.f64 (/.f64 (sin.f64 B) F) (*.f64 (/.f64 x (pow.f64 (fma.f64 F F 2) 2)) (/.f64 x 3/32))))) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))","(+.f64 (*.f64 (/.f64 (*.f64 (pow.f64 x -1/2) (pow.f64 2 -1/2)) (sin.f64 B)) F) (-.f64 (*.f64 (/.f64 (*.f64 (pow.f64 x -1/2) (pow.f64 2 -1/2)) (sin.f64 B)) (+.f64 (*.f64 (/.f64 F (/.f64 x (fma.f64 F F 2))) -1/4) (/.f64 (*.f64 (pow.f64 (fma.f64 F F 2) 2) (*.f64 3/32 F)) (*.f64 x x)))) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) F) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))) (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -2))) (/.f64 (sin.f64 B) F)))","(-.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -2) (log.f64 (/.f64 -1 x))))) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(-.f64 (*.f64 (/.f64 F (sin.f64 B)) (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -2 -1/2))) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (+.f64 (/.f64 (*.f64 F (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2))))) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(fma.f64 -1/4 (*.f64 (/.f64 F (sin.f64 B)) (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -2))) (/.f64 x (+.f64 2 (*.f64 F F))))) (+.f64 (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))) (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -2))) (/.f64 (sin.f64 B) F))))","(-.f64 (fma.f64 -1/4 (*.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -2) (log.f64 (/.f64 -1 x))))) (/.f64 (fma.f64 F F 2) x)) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -2) (log.f64 (/.f64 -1 x)))))) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(-.f64 (*.f64 (/.f64 F (sin.f64 B)) (fma.f64 -1/4 (/.f64 (fma.f64 F F 2) (/.f64 x (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -2 -1/2)))) (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -2 -1/2)))) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(+.f64 (*.f64 -1/4 (/.f64 (*.f64 F (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (+.f64 (pow.f64 F 2) 2))) (*.f64 (sin.f64 B) x))) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2)))) (*.f64 F (+.f64 (*.f64 1/16 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2)) (*.f64 1/32 (pow.f64 (+.f64 (pow.f64 F 2) 2) 2))))) (*.f64 (sin.f64 B) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 F (exp.f64 (*.f64 -1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -2))))) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(fma.f64 -1/4 (*.f64 (/.f64 F (sin.f64 B)) (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -2))) (/.f64 x (+.f64 2 (*.f64 F F))))) (+.f64 (+.f64 (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))) (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -2))) (/.f64 (sin.f64 B) F))) (*.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -2))) (sin.f64 B)) (/.f64 (*.f64 F (*.f64 (pow.f64 (+.f64 2 (*.f64 F F)) 2) 3/32)) (*.f64 x x)))))","(fma.f64 -1/4 (*.f64 (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -2) (log.f64 (/.f64 -1 x))))) (/.f64 (fma.f64 F F 2) x)) (-.f64 (fma.f64 (/.f64 (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -2) (log.f64 (/.f64 -1 x)))) (sin.f64 B)) (/.f64 F (*.f64 (/.f64 x (pow.f64 (fma.f64 F F 2) 2)) (/.f64 x 3/32))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (exp.f64 -1/2) (-.f64 (log.f64 -2) (log.f64 (/.f64 -1 x)))))) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))","(fma.f64 -1/4 (*.f64 (*.f64 (/.f64 F (sin.f64 B)) (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -2 -1/2))) (/.f64 (fma.f64 F F 2) x)) (-.f64 (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) 1/2) (pow.f64 -2 -1/2)) (sin.f64 B)) (+.f64 F (/.f64 (*.f64 (pow.f64 (fma.f64 F F 2) 2) (*.f64 3/32 F)) (*.f64 x x)))) (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))","B","(+.f64 (*.f64 1/3 (pow.f64 B 3)) B)","(fma.f64 1/3 (pow.f64 B 3) B)","(+.f64 (*.f64 1/3 (pow.f64 B 3)) (+.f64 (*.f64 2/15 (pow.f64 B 5)) B))","(fma.f64 1/3 (pow.f64 B 3) (fma.f64 2/15 (pow.f64 B 5) B))","(+.f64 (*.f64 1/3 (pow.f64 B 3)) (+.f64 (*.f64 2/15 (pow.f64 B 5)) (+.f64 (*.f64 17/315 (pow.f64 B 7)) B)))","(fma.f64 1/3 (pow.f64 B 3) (fma.f64 2/15 (pow.f64 B 5) (fma.f64 17/315 (pow.f64 B 7) B)))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(/.f64 (sin.f64 B) (cos.f64 B))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(*.f64 -1 (/.f64 x B))","(/.f64 (neg.f64 x) B)","(+.f64 (*.f64 -1 (/.f64 x B)) (*.f64 1/3 (*.f64 B x)))","(fma.f64 -1 (/.f64 x B) (*.f64 1/3 (*.f64 x B)))","(-.f64 (*.f64 x (*.f64 B 1/3)) (/.f64 x B))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 1/3 (*.f64 B x)) (*.f64 (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x)) (pow.f64 B 3))))","(fma.f64 -1 (/.f64 x B) (fma.f64 1/3 (*.f64 x B) (*.f64 (*.f64 x 1/45) (pow.f64 B 3))))","(-.f64 (fma.f64 1/3 (*.f64 x B) (*.f64 (*.f64 (pow.f64 B 3) x) 1/45)) (/.f64 x B))","(-.f64 (*.f64 x (+.f64 (*.f64 B 1/3) (*.f64 1/45 (pow.f64 B 3)))) (/.f64 x B))","(+.f64 (*.f64 (+.f64 (*.f64 17/315 x) (+.f64 (*.f64 -2/45 x) (*.f64 -1/3 (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x))))) (pow.f64 B 5)) (+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 1/3 (*.f64 B x)) (*.f64 (+.f64 (*.f64 -1/9 x) (*.f64 2/15 x)) (pow.f64 B 3)))))","(fma.f64 (fma.f64 17/315 x (fma.f64 -2/45 x (*.f64 (*.f64 x 1/45) -1/3))) (pow.f64 B 5) (fma.f64 -1 (/.f64 x B) (fma.f64 1/3 (*.f64 x B) (*.f64 (*.f64 x 1/45) (pow.f64 B 3)))))","(fma.f64 (+.f64 (*.f64 x -1/135) (*.f64 x 1/105)) (pow.f64 B 5) (-.f64 (fma.f64 1/3 (*.f64 x B) (*.f64 (*.f64 (pow.f64 B 3) x) 1/45)) (/.f64 x B)))","(fma.f64 (*.f64 x 2/945) (pow.f64 B 5) (-.f64 (*.f64 x (+.f64 (*.f64 B 1/3) (*.f64 1/45 (pow.f64 B 3)))) (/.f64 x B)))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))","(*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))","(neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))","(/.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (sin.f64 B))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) (neg.f64 x))"]],"stop":[["node limit",1]],"time":67.6240234375,"type":"simplify"},{"compiler":[[17369,8262]],"time":147.97607421875,"type":"eval"},{"alts":[["(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))","next",10.873044988311381],["(fma.f64 (/.f64 F (sin.f64 B)) (/.f64 1 F) (/.f64 (neg.f64 x) (tan.f64 B)))","fresh",35.89082639943648],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (*.f64 x (/.f64 1 (neg.f64 (tan.f64 B)))))","fresh",14.546060198456248],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (pow.f64 (/.f64 (cos.f64 B) (sin.f64 B)) -1)))","fresh",14.546060198456312],["(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) 1) (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1))))","fresh",21.60910440051523],["(+.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (tan.f64 B)) -1))) (fma.f64 (/.f64 x (tan.f64 B)) -1 (*.f64 (/.f64 x (tan.f64 B)) -1)))","fresh",34.66457523753008],["(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 B)) 2) (/.f64 (cos.f64 B) (cbrt.f64 (sin.f64 B))))))","fresh",14.7271516047515],["(fma.f64 (/.f64 F (sin.f64 B)) (expm1.f64 (log1p.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))","fresh",14.528813958224745],["(-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 1 (sin.f64 B)))","fresh",32.48400036600159],["(+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","fresh",30.782087794442738],["(+.f64 (fma.f64 (cbrt.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (tan.f64 B)) -1))) (fma.f64 (/.f64 x (tan.f64 B)) -1 (*.f64 (/.f64 x (tan.f64 B)) -1)))","fresh",29.2049347653757]],"compiler":[[43,21],[16,11],[24,17],[27,18],[58,31],[54,32],[32,20],[24,17],[17,12],[17,12],[46,27],[43,21],[16,11],[24,17],[27,18],[58,31],[54,32],[32,20],[24,17],[17,12],[17,12],[46,27]],"count":[[400,11]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[398,11],"picked":[1,0]}],"min-error":[0.01953125],"time":132.056884765625,"type":"prune"},{"compiler":[[152,57]],"locations":[["(*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))",0.1875,true],["(*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))",0.40462875976844204,true],["(pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)",18.315404590794927,false],["(fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))",29.109260134929098,true]],"time":37.110107421875,"type":"localize"},{"count":[[3,76]],"series":[["(*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))","x","-inf",0.181884765625],["(*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))","x","inf",0.15087890625],["(*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))","x","0",0.154052734375],["(*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))","B","-inf",0.180908203125],["(*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))","B","inf",0.158935546875],["(*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))","B","0",0.327880859375],["(*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))","F","-inf",0.740966796875],["(*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))","F","inf",0.93212890625],["(*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))","F","0",1.511962890625],["(*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))","x","-inf",0.786865234375],["(*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))","x","inf",0.922119140625],["(*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))","x","0",1.011962890625],["(*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))","B","-inf",0.56103515625],["(*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))","B","inf",0.98291015625],["(*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))","B","0",0.59814453125],["(fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))","x","-inf",0.693115234375],["(fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))","x","inf",0.656982421875],["(fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))","x","0",0.8798828125],["(fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))","B","-inf",0.97412109375],["(fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))","B","inf",0.97705078125],["(fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))","B","0",1.041015625]],"time":14.826904296875,"type":"series"},{"count":[[3,391]],"egraph":[[2,4526,44,0.033233042],[1,371,44,0.006482542],[0,18,52,0.000499625]],"inputs":[["(fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))","(*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))","(*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (cos.f64 B) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B))) (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2)) (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 B) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (sin.f64 B)) (cos.f64 B) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 1 (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) x) (/.f64 1 (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) 1) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (/.f64 x (cbrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (/.f64 x (sqrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (cbrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (sqrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (sqrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 B) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (sin.f64 B)) (cos.f64 B) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 1 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) x) (/.f64 1 (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) 1) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (/.f64 x (cbrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (/.f64 x (sqrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (cbrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (sqrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (sqrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 B) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (sin.f64 B)) (cos.f64 B) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 1 (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) x) (/.f64 1 (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) 1) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (/.f64 x (cbrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (/.f64 x (sqrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (cbrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (sqrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (sqrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 B) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (sin.f64 B)) (cos.f64 B) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 1 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) x) (/.f64 1 (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) 1) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (/.f64 x (cbrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (/.f64 x (sqrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (cbrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (sqrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (sqrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (sqrt.f64 (cos.f64 B)) (*.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (sqrt.f64 (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 B) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (sin.f64 B)) (cos.f64 B) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 1 (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) x) (/.f64 1 (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) 1) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (/.f64 x (cbrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (/.f64 x (sqrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (cbrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (sqrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (sqrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B)))))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (sqrt.f64 (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 B) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (sin.f64 B)) (cos.f64 B) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 1 (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) x) (/.f64 1 (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) 1) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (/.f64 x (cbrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (/.f64 x (sqrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (cbrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (sqrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (sqrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1))) (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1 (*.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 B) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (sin.f64 B)) (cos.f64 B) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 1 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) x) (/.f64 1 (sin.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) 1) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (/.f64 x (cbrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (/.f64 x (sqrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (cbrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (sqrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (sqrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 B) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (sin.f64 B)) (cos.f64 B) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 1 (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) x) (/.f64 1 (sin.f64 B)) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) 1) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (/.f64 x (cbrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (/.f64 x (sqrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (cbrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (sqrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (sqrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 B) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (sin.f64 B)) (cos.f64 B) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 1 (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) x) (/.f64 1 (sin.f64 B)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) 1) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (/.f64 x (cbrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (/.f64 x (sqrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (cbrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (sqrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (sqrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2))))) (fma.f64 (neg.f64 (/.f64 x (cbrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (*.f64 (/.f64 x (cbrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 B) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (sin.f64 B)) (cos.f64 B) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 1 (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) x) (/.f64 1 (sin.f64 B)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) 1) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (/.f64 x (cbrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (/.f64 x (sqrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (cbrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (sqrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (sqrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B)))))) (fma.f64 (neg.f64 (/.f64 x (sqrt.f64 (sin.f64 B)))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (*.f64 (/.f64 x (sqrt.f64 (sin.f64 B))) (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 B) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (sin.f64 B)) (cos.f64 B) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 1 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) x) (/.f64 1 (sin.f64 B)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) 1) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (/.f64 x (cbrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (/.f64 x (sqrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (cbrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (sqrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (sqrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 B) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (sin.f64 B)) (cos.f64 B) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 1 (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) x) (/.f64 1 (sin.f64 B)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) 1) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (/.f64 x (cbrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (/.f64 x (sqrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (cbrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (sqrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (sqrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B))))))) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 B) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (sin.f64 B)) (cos.f64 B) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 1 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) x) (/.f64 1 (sin.f64 B)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) 1) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (/.f64 x (cbrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (/.f64 x (sqrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (cbrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (sqrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (sqrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2))))) (fma.f64 (neg.f64 (cbrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (*.f64 (cbrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cos.f64 B) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 x (sin.f64 B)) (cos.f64 B) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 1 (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (sqrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (*.f64 (sqrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) x) (/.f64 1 (sin.f64 B)) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) 1) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (/.f64 x (cbrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (cos.f64 B) (sqrt.f64 (sin.f64 B))) (/.f64 x (sqrt.f64 (sin.f64 B))) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)) (cbrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cos.f64 B) (sqrt.f64 (/.f64 x (sin.f64 B)))) (sqrt.f64 (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (sqrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B)))))) (fma.f64 (neg.f64 (sqrt.f64 (cos.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))) (*.f64 (sqrt.f64 (cos.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B))))) (cbrt.f64 (exp.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B))))))) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B)))))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B)))) (pow.f64 (cbrt.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B)))) 2) (cbrt.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B)))) (sqrt.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 3) (pow.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 3)) (+.f64 (pow.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 2) (-.f64 (pow.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 2) (pow.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 2) (pow.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 2)) (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (exp.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (pow.f64 (exp.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (+.f64 1 (expm1.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 1 (expm1.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (pow.f64 (exp.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (+.f64 1 (expm1.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 1 (expm1.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (cos.f64 B) (cos.f64 B)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B)))) (cbrt.f64 (exp.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (sin.f64 B) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1)) (/.f64 (sin.f64 B) (cbrt.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4) (/.f64 (sin.f64 B) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sqrt.f64 (sin.f64 B))) (sqrt.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) 1) (sin.f64 B))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (cbrt.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) -1) (neg.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/4) (sqrt.f64 (sin.f64 B))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1) (pow.f64 (sin.f64 B) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) 3) (pow.f64 (sin.f64 B) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 1 (sin.f64 B)) 3) (pow.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) 3) (pow.f64 (/.f64 1 (sin.f64 B)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (sin.f64 B))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (sin.f64 B) (*.f64 (cos.f64 B) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (cos.f64 B) x)) (neg.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 B) x) 1) (sin.f64 B))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 B) x) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (cbrt.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (cos.f64 B) x) (sqrt.f64 (sin.f64 B))) (sqrt.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (cos.f64 B)) (neg.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cos.f64 B) (neg.f64 x)) (neg.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (pow.f64 (exp.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (cos.f64 B) 3) (pow.f64 (/.f64 x (sin.f64 B)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 x (sin.f64 B)) 3) (pow.f64 (cos.f64 B) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 1))))))"]],"rules":[["egg-rr",30],["egg-rr",29],["egg-rr",332]],"stop":[["node limit",1]],"time":117.802978515625,"type":"rewrite"},{"count":[[467,449]],"egraph":[[2,2625,1613,0.019432209],[1,845,1902,0.0056335],[0,248,2285,0.001305]],"inputs":[["(/.f64 (+.f64 (*.f64 -1 x) x) B)","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) B) (/.f64 x B)))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) B) (+.f64 (/.f64 x B) (*.f64 (-.f64 (+.f64 (*.f64 1/24 x) (+.f64 (*.f64 -1/36 x) (+.f64 (*.f64 1/12 x) (*.f64 -1/24 x)))) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))) (pow.f64 B 3)))))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) B) (+.f64 (/.f64 x B) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 -1/36 x) (*.f64 1/120 x))) (+.f64 (*.f64 -1/720 x) (+.f64 (*.f64 -1/144 x) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -1/36 x) (*.f64 1/120 x))) (*.f64 1/360 x))))) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/24 x) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (*.f64 1/120 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))))) (pow.f64 B 5)) (*.f64 (-.f64 (+.f64 (*.f64 1/24 x) (+.f64 (*.f64 -1/36 x) (+.f64 (*.f64 1/12 x) (*.f64 -1/24 x)))) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))) (pow.f64 B 3))))))","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (/.f64 1 B))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (/.f64 1 B)) (*.f64 1/6 (*.f64 B (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))))","(+.f64 (*.f64 7/360 (*.f64 (pow.f64 B 3) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (/.f64 1 B)) (*.f64 1/6 (*.f64 B (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))))))","(+.f64 (*.f64 7/360 (*.f64 (pow.f64 B 3) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (+.f64 (*.f64 31/15120 (*.f64 (pow.f64 B 5) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (/.f64 1 B)) (*.f64 1/6 (*.f64 B (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))))))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(+.f64 (*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (*.f64 -1 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2)) (sin.f64 B)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (*.f64 -1 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2)) (sin.f64 B)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 x 3) (+.f64 (*.f64 8 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (*.f64 -1 (/.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (+.f64 (pow.f64 F 2) 2))))) (sin.f64 B)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (*.f64 -1 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))))))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))","(+.f64 (*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 2) (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))) 2)) (pow.f64 F 4)) (sin.f64 B)))) (+.f64 (*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 2) (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2)))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))) 2)) (pow.f64 F 4)) (sin.f64 B)))) (+.f64 (*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (/.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))) 2)) (+.f64 2 (*.f64 2 x))))) (pow.f64 F 6)) (sin.f64 B)))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 2) (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2))))))))","(/.f64 1 (*.f64 (sin.f64 B) F))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 3)))) (/.f64 1 (*.f64 (sin.f64 B) F)))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 3)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (*.f64 (sin.f64 B) (pow.f64 F 5)))) (/.f64 1 (*.f64 (sin.f64 B) F))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 x) 2) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2))))) (*.f64 (sin.f64 B) (pow.f64 F 7)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 3)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (*.f64 (sin.f64 B) (pow.f64 F 5)))) (/.f64 1 (*.f64 (sin.f64 B) F)))))","(/.f64 -1 (*.f64 (sin.f64 B) F))","(-.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (*.f64 (sin.f64 B) (pow.f64 F 3)))) (/.f64 1 (*.f64 (sin.f64 B) F)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (*.f64 (sin.f64 B) (pow.f64 F 5)))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (*.f64 (sin.f64 B) (pow.f64 F 3))))) (/.f64 1 (*.f64 (sin.f64 B) F)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (*.f64 (sin.f64 B) (pow.f64 F 5)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)))) (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (*.f64 (sin.f64 B) (pow.f64 F 7)))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (*.f64 (sin.f64 B) (pow.f64 F 3)))))) (/.f64 1 (*.f64 (sin.f64 B) F)))","(/.f64 x B)","(+.f64 (/.f64 x B) (*.f64 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)) B))","(+.f64 (/.f64 x B) (+.f64 (*.f64 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)) B) (*.f64 (-.f64 (*.f64 1/24 x) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))))) (pow.f64 B 3))))","(+.f64 (/.f64 x B) (+.f64 (*.f64 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)) B) (+.f64 (*.f64 (-.f64 (*.f64 -1/720 x) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/24 x) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (+.f64 (*.f64 -1/5040 x) (*.f64 1/120 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (pow.f64 B 5)) (*.f64 (-.f64 (*.f64 1/24 x) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))))) (pow.f64 B 3)))))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (*.f64 -1 x) x) B)","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) B) (/.f64 x B)))","(fma.f64 -1 (/.f64 x B) (fma.f64 (*.f64 x 0) B (/.f64 x B)))","(-.f64 (fma.f64 B 0 (/.f64 x B)) (/.f64 x B))","(*.f64 0 (/.f64 x B))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) B) (+.f64 (/.f64 x B) (*.f64 (-.f64 (+.f64 (*.f64 1/24 x) (+.f64 (*.f64 -1/36 x) (+.f64 (*.f64 1/12 x) (*.f64 -1/24 x)))) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))) (pow.f64 B 3)))))","(fma.f64 -1 (/.f64 x B) (fma.f64 (*.f64 x 0) B (/.f64 x B)))","(-.f64 (fma.f64 B 0 (/.f64 x B)) (/.f64 x B))","(*.f64 0 (/.f64 x B))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) B) (+.f64 (/.f64 x B) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/2 (+.f64 (*.f64 -1/36 x) (*.f64 1/120 x))) (+.f64 (*.f64 -1/720 x) (+.f64 (*.f64 -1/144 x) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -1/36 x) (*.f64 1/120 x))) (*.f64 1/360 x))))) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/24 x) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (*.f64 1/120 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))))) (pow.f64 B 5)) (*.f64 (-.f64 (+.f64 (*.f64 1/24 x) (+.f64 (*.f64 -1/36 x) (+.f64 (*.f64 1/12 x) (*.f64 -1/24 x)))) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))) (pow.f64 B 3))))))","(fma.f64 -1 (/.f64 x B) (+.f64 (fma.f64 (*.f64 x 0) B (/.f64 x B)) (fma.f64 (-.f64 (fma.f64 -1/2 (*.f64 x -7/360) (fma.f64 -1/720 x (fma.f64 -1/144 x (fma.f64 1/6 (*.f64 x -7/360) (*.f64 x 1/360))))) (fma.f64 -1/6 (-.f64 (*.f64 x 1/24) (fma.f64 1/120 x (*.f64 -1/6 (*.f64 x -1/3)))) (*.f64 (*.f64 x -1/3) 1/120))) (pow.f64 B 5) (*.f64 (+.f64 (fma.f64 1/24 x (fma.f64 -1/36 x (*.f64 x 1/24))) (*.f64 1/6 (*.f64 x -1/3))) (pow.f64 B 3)))))","(+.f64 (-.f64 (fma.f64 B 0 (/.f64 x B)) (/.f64 x B)) (fma.f64 (+.f64 (+.f64 (fma.f64 x 1/360 (*.f64 x -7/2160)) (*.f64 x -1/120)) (-.f64 (*.f64 x 7/720) (fma.f64 -1/6 (-.f64 (*.f64 x 1/30) (*.f64 x 1/18)) (*.f64 x -1/360)))) (pow.f64 B 5) (*.f64 (-.f64 (fma.f64 x 1/24 (*.f64 x 1/72)) (*.f64 x 1/18)) (pow.f64 B 3))))","(+.f64 (*.f64 0 (/.f64 x B)) (fma.f64 (-.f64 (+.f64 (*.f64 x 1/720) (*.f64 x -1/2160)) (fma.f64 -1/6 (*.f64 x -1/45) (*.f64 x -1/360))) (pow.f64 B 5) 0))","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (/.f64 1 B))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (/.f64 1 B))","(/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 x 2 2)))) B)","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (/.f64 1 B)) (*.f64 1/6 (*.f64 B (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))))","(fma.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (/.f64 1 B) (*.f64 (*.f64 1/6 B) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 x 2 2)))) (+.f64 (/.f64 1 B) (*.f64 B 1/6)))","(+.f64 (*.f64 7/360 (*.f64 (pow.f64 B 3) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (/.f64 1 B)) (*.f64 1/6 (*.f64 B (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x)))))))))","(fma.f64 7/360 (*.f64 (pow.f64 B 3) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (/.f64 1 B) (*.f64 (*.f64 1/6 B) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))))))","(fma.f64 7/360 (*.f64 (pow.f64 B 3) (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 x 2 2))))) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 x 2 2)))) (+.f64 (/.f64 1 B) (*.f64 B 1/6))))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 x 2 2)))) (+.f64 (*.f64 B 1/6) (+.f64 (*.f64 (pow.f64 B 3) 7/360) (/.f64 1 B))))","(+.f64 (*.f64 7/360 (*.f64 (pow.f64 B 3) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (+.f64 (*.f64 31/15120 (*.f64 (pow.f64 B 5) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))) (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))) (/.f64 1 B)) (*.f64 1/6 (*.f64 B (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))))))","(fma.f64 7/360 (*.f64 (pow.f64 B 3) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (fma.f64 31/15120 (*.f64 (pow.f64 B 5) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))) (fma.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (/.f64 1 B) (*.f64 (*.f64 1/6 B) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2))))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 x 2 2)))) (+.f64 (/.f64 1 B) (*.f64 B 1/6))) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 x 2 2)))) (+.f64 (*.f64 (pow.f64 B 3) 7/360) (*.f64 (pow.f64 B 5) 31/15120))))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 x 2 2)))) (+.f64 (+.f64 (/.f64 1 B) (*.f64 B 1/6)) (+.f64 (*.f64 (pow.f64 B 3) 7/360) (*.f64 (pow.f64 B 5) 31/15120))))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (/.f64 1 (sin.f64 B)))","(/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 x 2 2)))) (sin.f64 B))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (/.f64 1 (sin.f64 B)))","(/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 x 2 2)))) (sin.f64 B))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (/.f64 1 (sin.f64 B)))","(/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 x 2 2)))) (sin.f64 B))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (/.f64 1 (sin.f64 B)))","(/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 x 2 2)))) (sin.f64 B))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (/.f64 1 (sin.f64 B)))","(/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 x 2 2)))) (sin.f64 B))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (/.f64 1 (sin.f64 B)))","(/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 x 2 2)))) (sin.f64 B))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (/.f64 1 (sin.f64 B)))","(/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 x 2 2)))) (sin.f64 B))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) (+.f64 2 (*.f64 2 x))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 F F) (fma.f64 2 x 2)))) (/.f64 1 (sin.f64 B)))","(/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F (fma.f64 x 2 2)))) (sin.f64 B))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2))))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 F F)))))","(/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B))","(+.f64 (*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (*.f64 -1 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))))","(fma.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 F F)))) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))))","(-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3)))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2)) (sin.f64 B)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (*.f64 -1 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))))))","(fma.f64 1/2 (*.f64 (/.f64 (-.f64 (/.f64 4 (pow.f64 (+.f64 2 (*.f64 F F)) 3)) (pow.f64 (neg.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3)))) 2)) (/.f64 (sin.f64 B) (*.f64 x x))) (sqrt.f64 (+.f64 2 (*.f64 F F)))) (fma.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 F F)))) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3)))))))","(-.f64 (fma.f64 (/.f64 (*.f64 1/2 (-.f64 (/.f64 4 (pow.f64 (fma.f64 F F 2) 3)) (pow.f64 (neg.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3)))) 2))) (/.f64 (sin.f64 B) (*.f64 x x))) (sqrt.f64 (fma.f64 F F 2)) (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3)))))","(-.f64 (fma.f64 1/2 (/.f64 (-.f64 (/.f64 4 (pow.f64 (fma.f64 F F 2) 3)) (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))) (/.f64 (/.f64 (sin.f64 B) (sqrt.f64 (fma.f64 F F 2))) (*.f64 x x))) (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3)))))","(+.f64 (*.f64 1/2 (*.f64 (/.f64 (*.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (pow.f64 x 2)) (sin.f64 B)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 F 2) 2)))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 (pow.f64 x 3) (+.f64 (*.f64 8 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 4))) (*.f64 -1 (/.f64 (-.f64 (*.f64 4 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (pow.f64 (*.f64 -1 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3)))) 2)) (+.f64 (pow.f64 F 2) 2))))) (sin.f64 B)) (sqrt.f64 (+.f64 (pow.f64 F 2) 2)))) (*.f64 -1 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))))))","(fma.f64 1/2 (*.f64 (/.f64 (-.f64 (/.f64 4 (pow.f64 (+.f64 2 (*.f64 F F)) 3)) (pow.f64 (neg.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3)))) 2)) (/.f64 (sin.f64 B) (*.f64 x x))) (sqrt.f64 (+.f64 2 (*.f64 F F)))) (fma.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 F F)))) (fma.f64 -1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 F F))) (/.f64 (pow.f64 x 3) (/.f64 (sin.f64 B) (+.f64 (/.f64 8 (pow.f64 (+.f64 2 (*.f64 F F)) 4)) (neg.f64 (/.f64 (-.f64 (/.f64 4 (pow.f64 (+.f64 2 (*.f64 F F)) 3)) (pow.f64 (neg.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3)))) 2)) (+.f64 2 (*.f64 F F)))))))) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))))))","(+.f64 (-.f64 (fma.f64 (/.f64 (*.f64 1/2 (-.f64 (/.f64 4 (pow.f64 (fma.f64 F F 2) 3)) (pow.f64 (neg.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3)))) 2))) (/.f64 (sin.f64 B) (*.f64 x x))) (sqrt.f64 (fma.f64 F F 2)) (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (*.f64 -1/2 (*.f64 (sqrt.f64 (fma.f64 F F 2)) (*.f64 (/.f64 (pow.f64 x 3) (sin.f64 B)) (-.f64 (/.f64 8 (pow.f64 (fma.f64 F F 2) 4)) (/.f64 (-.f64 (/.f64 4 (pow.f64 (fma.f64 F F 2) 3)) (pow.f64 (neg.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3)))) 2)) (fma.f64 F F 2)))))))","(+.f64 (-.f64 (fma.f64 1/2 (/.f64 (-.f64 (/.f64 4 (pow.f64 (fma.f64 F F 2) 3)) (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))) (/.f64 (/.f64 (sin.f64 B) (sqrt.f64 (fma.f64 F F 2))) (*.f64 x x))) (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (*.f64 (sqrt.f64 (fma.f64 F F 2)) (*.f64 (/.f64 (*.f64 -1/2 (pow.f64 x 3)) (sin.f64 B)) (-.f64 (/.f64 8 (pow.f64 (fma.f64 F F 2) 4)) (-.f64 (/.f64 4 (pow.f64 (fma.f64 F F 2) 4)) (/.f64 1 (pow.f64 (fma.f64 F F 2) 4)))))))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))","(*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))))","(/.f64 (sqrt.f64 (/.f64 1 (fma.f64 x 2 2))) (sin.f64 B))","(+.f64 (*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 2) (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2))))))","(fma.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (/.f64 (*.f64 F F) (*.f64 (sin.f64 B) (fma.f64 2 x 2))))))","(fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 x 2 2))) (/.f64 (*.f64 F F) (*.f64 (sin.f64 B) (fma.f64 x 2 2)))) (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 x 2 2))) (sin.f64 B)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 x 2 2))) (+.f64 (/.f64 1 (sin.f64 B)) (*.f64 (*.f64 -1/2 (/.f64 F (sin.f64 B))) (/.f64 F (fma.f64 x 2 2)))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))) 2)) (pow.f64 F 4)) (sin.f64 B)))) (+.f64 (*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 2) (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2)))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (fma.f64 2 x 2)) (/.f64 (-.f64 (/.f64 (/.f64 1 (fma.f64 2 x 2)) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 (*.f64 -1/2 (/.f64 1 (fma.f64 2 x 2))) (sqrt.f64 (/.f64 1 (fma.f64 2 x 2)))) 2)) (/.f64 (sin.f64 B) (pow.f64 F 4)))) (fma.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (/.f64 (*.f64 F F) (*.f64 (sin.f64 B) (fma.f64 2 x 2)))))))","(fma.f64 1/2 (/.f64 (*.f64 (*.f64 (sqrt.f64 (fma.f64 x 2 2)) (pow.f64 F 4)) (-.f64 (/.f64 1 (pow.f64 (fma.f64 x 2 2) 3)) (pow.f64 (*.f64 -1/2 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 x 2 2))) (fma.f64 x 2 2))) 2))) (sin.f64 B)) (fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 x 2 2))) (/.f64 (*.f64 F F) (*.f64 (sin.f64 B) (fma.f64 x 2 2)))) (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 x 2 2))) (sin.f64 B))))","(fma.f64 1/2 (*.f64 (/.f64 (sqrt.f64 (fma.f64 x 2 2)) (sin.f64 B)) (*.f64 (-.f64 (/.f64 1 (pow.f64 (fma.f64 x 2 2) 3)) (/.f64 (*.f64 1/4 (/.f64 1 (pow.f64 (fma.f64 x 2 2) 2))) (fma.f64 x 2 2))) (pow.f64 F 4))) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 x 2 2))) (+.f64 (/.f64 1 (sin.f64 B)) (*.f64 (*.f64 -1/2 (/.f64 F (sin.f64 B))) (/.f64 F (fma.f64 x 2 2))))))","(+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (+.f64 2 (*.f64 2 x))) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2))))) 2)) (pow.f64 F 4)) (sin.f64 B)))) (+.f64 (*.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 2 x) 2)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (+.f64 2 (*.f64 2 x))) (/.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (pow.f64 (+.f64 (*.f64 2 x) 2) 2))) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (pow.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 1 (+.f64 (*.f64 2 x) 2)))) 2)) (+.f64 2 (*.f64 2 x))))) (pow.f64 F 6)) (sin.f64 B)))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 2 (*.f64 2 x)))) (/.f64 (pow.f64 F 2) (*.f64 (sin.f64 B) (+.f64 (*.f64 2 x) 2))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (fma.f64 2 x 2)) (/.f64 (-.f64 (/.f64 (/.f64 1 (fma.f64 2 x 2)) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 (*.f64 -1/2 (/.f64 1 (fma.f64 2 x 2))) (sqrt.f64 (/.f64 1 (fma.f64 2 x 2)))) 2)) (/.f64 (sin.f64 B) (pow.f64 F 4)))) (fma.f64 (/.f64 1 (sin.f64 B)) (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (*.f64 -1/2 (+.f64 (*.f64 (sqrt.f64 (fma.f64 2 x 2)) (/.f64 (+.f64 (/.f64 (/.f64 1 (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (fma.f64 2 x 2) 2)) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 (/.f64 1 (fma.f64 2 x 2)) (pow.f64 (fma.f64 2 x 2) 2)) (pow.f64 (*.f64 (*.f64 -1/2 (/.f64 1 (fma.f64 2 x 2))) (sqrt.f64 (/.f64 1 (fma.f64 2 x 2)))) 2)) (fma.f64 2 x 2)))) (/.f64 (sin.f64 B) (pow.f64 F 6)))) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 2 x 2))) (/.f64 (*.f64 F F) (*.f64 (sin.f64 B) (fma.f64 2 x 2))))))))","(fma.f64 1/2 (/.f64 (*.f64 (*.f64 (sqrt.f64 (fma.f64 x 2 2)) (pow.f64 F 4)) (-.f64 (/.f64 1 (pow.f64 (fma.f64 x 2 2) 3)) (pow.f64 (*.f64 -1/2 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 x 2 2))) (fma.f64 x 2 2))) 2))) (sin.f64 B)) (fma.f64 -1/2 (fma.f64 (sqrt.f64 (fma.f64 x 2 2)) (/.f64 (fma.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (pow.f64 (fma.f64 x 2 2) 3)) (pow.f64 (*.f64 -1/2 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 x 2 2))) (fma.f64 x 2 2))) 2)) (fma.f64 x 2 2)) (/.f64 1 (pow.f64 (fma.f64 x 2 2) 4))) (/.f64 (sin.f64 B) (pow.f64 F 6))) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 x 2 2))) (/.f64 (*.f64 F F) (*.f64 (sin.f64 B) (fma.f64 x 2 2))))) (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 x 2 2))) (sin.f64 B))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 (sqrt.f64 (fma.f64 x 2 2)) (sin.f64 B)) (*.f64 (-.f64 (/.f64 1 (pow.f64 (fma.f64 x 2 2) 3)) (/.f64 (*.f64 1/4 (/.f64 1 (pow.f64 (fma.f64 x 2 2) 2))) (fma.f64 x 2 2))) (pow.f64 F 4))) (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 x 2 2))) (+.f64 (/.f64 1 (sin.f64 B)) (*.f64 (*.f64 -1/2 (/.f64 F (sin.f64 B))) (/.f64 F (fma.f64 x 2 2)))))) (*.f64 -1/2 (/.f64 (fma.f64 -1/2 (-.f64 (/.f64 1 (pow.f64 (fma.f64 x 2 2) 4)) (/.f64 (/.f64 (*.f64 1/4 (/.f64 1 (pow.f64 (fma.f64 x 2 2) 2))) (fma.f64 x 2 2)) (fma.f64 x 2 2))) (/.f64 1 (pow.f64 (fma.f64 x 2 2) 4))) (/.f64 (/.f64 (sin.f64 B) (pow.f64 F 6)) (sqrt.f64 (fma.f64 x 2 2))))))","(/.f64 1 (*.f64 (sin.f64 B) F))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 3)))) (/.f64 1 (*.f64 (sin.f64 B) F)))","(fma.f64 -1/2 (/.f64 (fma.f64 2 x 2) (*.f64 (sin.f64 B) (pow.f64 F 3))) (/.f64 1 (*.f64 (sin.f64 B) F)))","(+.f64 (/.f64 1 (*.f64 (sin.f64 B) F)) (/.f64 (+.f64 -1 (neg.f64 x)) (*.f64 (sin.f64 B) (pow.f64 F 3))))","(+.f64 (/.f64 1 (*.f64 (sin.f64 B) F)) (/.f64 (-.f64 -1 x) (*.f64 (sin.f64 B) (pow.f64 F 3))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 3)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (*.f64 (sin.f64 B) (pow.f64 F 5)))) (/.f64 1 (*.f64 (sin.f64 B) F))))","(fma.f64 -1/2 (/.f64 (fma.f64 2 x 2) (*.f64 (sin.f64 B) (pow.f64 F 3))) (fma.f64 -1/2 (/.f64 (fma.f64 -1 (pow.f64 (fma.f64 2 x 2) 2) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)) (*.f64 (sin.f64 B) (pow.f64 F 5))) (/.f64 1 (*.f64 (sin.f64 B) F))))","(+.f64 (/.f64 (+.f64 -1 (neg.f64 x)) (*.f64 (sin.f64 B) (pow.f64 F 3))) (fma.f64 -1/2 (/.f64 (-.f64 (pow.f64 (+.f64 -1 (neg.f64 x)) 2) (pow.f64 (fma.f64 x 2 2) 2)) (*.f64 (sin.f64 B) (pow.f64 F 5))) (/.f64 1 (*.f64 (sin.f64 B) F))))","(+.f64 (/.f64 1 (*.f64 (sin.f64 B) F)) (*.f64 (/.f64 -1/2 (sin.f64 B)) (+.f64 (/.f64 (fma.f64 x 2 2) (pow.f64 F 3)) (/.f64 (*.f64 (pow.f64 (fma.f64 x 2 2) 2) -3/4) (pow.f64 F 5)))))","(+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 (+.f64 2 (*.f64 2 x)) (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (*.f64 1/2 (*.f64 (+.f64 (*.f64 2 x) 2) (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2))))) (*.f64 (sin.f64 B) (pow.f64 F 7)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 2 x)) (*.f64 (sin.f64 B) (pow.f64 F 3)))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)) (*.f64 (sin.f64 B) (pow.f64 F 5)))) (/.f64 1 (*.f64 (sin.f64 B) F)))))","(fma.f64 -1/2 (/.f64 (fma.f64 1/2 (*.f64 (fma.f64 2 x 2) (fma.f64 -1 (pow.f64 (fma.f64 2 x 2) 2) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2))) (*.f64 (fma.f64 2 x 2) (pow.f64 (fma.f64 2 x 2) 2))) (*.f64 (sin.f64 B) (pow.f64 F 7))) (fma.f64 -1/2 (/.f64 (fma.f64 2 x 2) (*.f64 (sin.f64 B) (pow.f64 F 3))) (fma.f64 -1/2 (/.f64 (fma.f64 -1 (pow.f64 (fma.f64 2 x 2) 2) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)) (*.f64 (sin.f64 B) (pow.f64 F 5))) (/.f64 1 (*.f64 (sin.f64 B) F)))))","(+.f64 (fma.f64 -1/2 (/.f64 (-.f64 (pow.f64 (+.f64 -1 (neg.f64 x)) 2) (pow.f64 (fma.f64 x 2 2) 2)) (*.f64 (sin.f64 B) (pow.f64 F 5))) (/.f64 1 (*.f64 (sin.f64 B) F))) (fma.f64 -1/2 (/.f64 (fma.f64 1/2 (*.f64 (fma.f64 x 2 2) (-.f64 (pow.f64 (+.f64 -1 (neg.f64 x)) 2) (pow.f64 (fma.f64 x 2 2) 2))) (pow.f64 (fma.f64 x 2 2) 3)) (*.f64 (sin.f64 B) (pow.f64 F 7))) (/.f64 (+.f64 -1 (neg.f64 x)) (*.f64 (sin.f64 B) (pow.f64 F 3)))))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 (fma.f64 x 2 2) 2) -3/4) (*.f64 (sin.f64 B) (pow.f64 F 5))) (/.f64 1 (*.f64 (sin.f64 B) F))) (*.f64 (/.f64 -1/2 (sin.f64 B)) (+.f64 (/.f64 (fma.f64 x 2 2) (pow.f64 F 3)) (/.f64 (fma.f64 (neg.f64 (-.f64 -1 x)) (*.f64 (pow.f64 (fma.f64 x 2 2) 2) -3/4) (pow.f64 (fma.f64 x 2 2) 3)) (pow.f64 F 7)))))","(/.f64 -1 (*.f64 (sin.f64 B) F))","(-.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (*.f64 (sin.f64 B) (pow.f64 F 3)))) (/.f64 1 (*.f64 (sin.f64 B) F)))","(-.f64 (*.f64 1/2 (/.f64 (fma.f64 2 x 2) (*.f64 (sin.f64 B) (pow.f64 F 3)))) (/.f64 1 (*.f64 (sin.f64 B) F)))","(fma.f64 1/2 (/.f64 (fma.f64 x 2 2) (*.f64 (sin.f64 B) (pow.f64 F 3))) (/.f64 -1 (*.f64 (sin.f64 B) F)))","(fma.f64 1/2 (/.f64 (/.f64 (fma.f64 x 2 2) (sin.f64 B)) (pow.f64 F 3)) (/.f64 -1 (*.f64 (sin.f64 B) F)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (*.f64 (sin.f64 B) (pow.f64 F 5)))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (*.f64 (sin.f64 B) (pow.f64 F 3))))) (/.f64 1 (*.f64 (sin.f64 B) F)))","(-.f64 (*.f64 1/2 (+.f64 (/.f64 (fma.f64 -1 (pow.f64 (fma.f64 2 x 2) 2) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)) (*.f64 (sin.f64 B) (pow.f64 F 5))) (/.f64 (fma.f64 2 x 2) (*.f64 (sin.f64 B) (pow.f64 F 3))))) (/.f64 1 (*.f64 (sin.f64 B) F)))","(fma.f64 1/2 (+.f64 (/.f64 (fma.f64 x 2 2) (*.f64 (sin.f64 B) (pow.f64 F 3))) (/.f64 (-.f64 (pow.f64 (+.f64 -1 (neg.f64 x)) 2) (pow.f64 (fma.f64 x 2 2) 2)) (*.f64 (sin.f64 B) (pow.f64 F 5)))) (/.f64 -1 (*.f64 (sin.f64 B) F)))","(+.f64 (*.f64 (/.f64 1/2 (sin.f64 B)) (+.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 x 2 2) 2) -3/4) (pow.f64 F 5)) (/.f64 (fma.f64 x 2 2) (pow.f64 F 3)))) (/.f64 -1 (*.f64 (sin.f64 B) F)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (pow.f64 (+.f64 (*.f64 2 x) 2) 2)) (pow.f64 (*.f64 -1/2 (+.f64 2 (*.f64 2 x))) 2)) (*.f64 (sin.f64 B) (pow.f64 F 5)))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (+.f64 2 (*.f64 2 x)) (+.f64 (*.f64 -1 (pow.f64 (+.f64 2 (*.f64 2 x)) 2)) (pow.f64 (*.f64 -1/2 (+.f64 (*.f64 2 x) 2)) 2)))) (*.f64 (pow.f64 (+.f64 2 (*.f64 2 x)) 2) (+.f64 (*.f64 2 x) 2))) (*.f64 (sin.f64 B) (pow.f64 F 7)))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 x) 2) (*.f64 (sin.f64 B) (pow.f64 F 3)))))) (/.f64 1 (*.f64 (sin.f64 B) F)))","(-.f64 (fma.f64 1/2 (/.f64 (fma.f64 -1 (pow.f64 (fma.f64 2 x 2) 2) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2)) (*.f64 (sin.f64 B) (pow.f64 F 5))) (*.f64 1/2 (+.f64 (/.f64 (fma.f64 1/2 (*.f64 (fma.f64 2 x 2) (fma.f64 -1 (pow.f64 (fma.f64 2 x 2) 2) (pow.f64 (*.f64 -1/2 (fma.f64 2 x 2)) 2))) (*.f64 (fma.f64 2 x 2) (pow.f64 (fma.f64 2 x 2) 2))) (*.f64 (sin.f64 B) (pow.f64 F 7))) (/.f64 (fma.f64 2 x 2) (*.f64 (sin.f64 B) (pow.f64 F 3)))))) (/.f64 1 (*.f64 (sin.f64 B) F)))","(fma.f64 1/2 (/.f64 (-.f64 (pow.f64 (+.f64 -1 (neg.f64 x)) 2) (pow.f64 (fma.f64 x 2 2) 2)) (*.f64 (sin.f64 B) (pow.f64 F 5))) (fma.f64 1/2 (+.f64 (/.f64 (fma.f64 x 2 2) (*.f64 (sin.f64 B) (pow.f64 F 3))) (/.f64 (fma.f64 1/2 (*.f64 (fma.f64 x 2 2) (-.f64 (pow.f64 (+.f64 -1 (neg.f64 x)) 2) (pow.f64 (fma.f64 x 2 2) 2))) (pow.f64 (fma.f64 x 2 2) 3)) (*.f64 (sin.f64 B) (pow.f64 F 7)))) (/.f64 -1 (*.f64 (sin.f64 B) F))))","(+.f64 (*.f64 (/.f64 1/2 (sin.f64 B)) (+.f64 (/.f64 (fma.f64 x 2 2) (pow.f64 F 3)) (/.f64 (fma.f64 (neg.f64 (-.f64 -1 x)) (*.f64 (pow.f64 (fma.f64 x 2 2) 2) -3/4) (pow.f64 (fma.f64 x 2 2) 3)) (pow.f64 F 7)))) (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 (fma.f64 x 2 2) 2) -3/4) (*.f64 (sin.f64 B) (pow.f64 F 5))) (/.f64 -1 (*.f64 (sin.f64 B) F))))","(/.f64 x B)","(+.f64 (/.f64 x B) (*.f64 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)) B))","(+.f64 (/.f64 x B) (*.f64 B (*.f64 x -1/3)))","(fma.f64 B (*.f64 x -1/3) (/.f64 x B))","(+.f64 (/.f64 x B) (+.f64 (*.f64 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)) B) (*.f64 (-.f64 (*.f64 1/24 x) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))))) (pow.f64 B 3))))","(+.f64 (/.f64 x B) (fma.f64 (*.f64 x -1/3) B (*.f64 (pow.f64 B 3) (-.f64 (*.f64 x 1/24) (fma.f64 1/120 x (*.f64 -1/6 (*.f64 x -1/3)))))))","(+.f64 (/.f64 x B) (fma.f64 B (*.f64 x -1/3) (*.f64 (pow.f64 B 3) (-.f64 (*.f64 x 1/30) (*.f64 x 1/18)))))","(+.f64 (fma.f64 B (*.f64 x -1/3) (/.f64 x B)) (*.f64 (pow.f64 B 3) (*.f64 x -1/45)))","(+.f64 (/.f64 x B) (+.f64 (*.f64 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)) B) (+.f64 (*.f64 (-.f64 (*.f64 -1/720 x) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/24 x) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (+.f64 (*.f64 -1/5040 x) (*.f64 1/120 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (pow.f64 B 5)) (*.f64 (-.f64 (*.f64 1/24 x) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))))) (pow.f64 B 3)))))","(+.f64 (/.f64 x B) (fma.f64 (*.f64 x -1/3) B (fma.f64 (-.f64 (*.f64 x -1/720) (fma.f64 -1/6 (-.f64 (*.f64 x 1/24) (fma.f64 1/120 x (*.f64 -1/6 (*.f64 x -1/3)))) (fma.f64 -1/5040 x (*.f64 (*.f64 x -1/3) 1/120)))) (pow.f64 B 5) (*.f64 (pow.f64 B 3) (-.f64 (*.f64 x 1/24) (fma.f64 1/120 x (*.f64 -1/6 (*.f64 x -1/3))))))))","(+.f64 (/.f64 x B) (fma.f64 B (*.f64 x -1/3) (fma.f64 (pow.f64 B 3) (-.f64 (*.f64 x 1/30) (*.f64 x 1/18)) (*.f64 (pow.f64 B 5) (-.f64 (*.f64 x -1/720) (fma.f64 -1/6 (-.f64 (*.f64 x 1/30) (*.f64 x 1/18)) (fma.f64 x -1/5040 (*.f64 x -1/360))))))))","(+.f64 (fma.f64 B (*.f64 x -1/3) (/.f64 x B)) (fma.f64 (pow.f64 B 3) (*.f64 x -1/45) (*.f64 (pow.f64 B 5) (-.f64 (*.f64 x -1/720) (fma.f64 -1/6 (*.f64 x -1/45) (*.f64 x -1/336))))))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))","(/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))","(/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 (cos.f64 B) (sin.f64 B)) x)","(*.f64 x (/.f64 (cos.f64 B) (sin.f64 B)))"]],"stop":[["node limit",1]],"time":57.606201171875,"type":"simplify"},{"compiler":[[36818,12356]],"time":417.267822265625,"type":"eval"},{"alts":[["(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))","next",10.843416228542939],["(fma.f64 (/.f64 F (sin.f64 B)) (/.f64 1 F) (/.f64 (neg.f64 x) (tan.f64 B)))","fresh",35.89082639943648],["(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))","fresh",10.847986248079824],["(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))))","fresh",10.947340105532684],["(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (expm1.f64 (log1p.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))","fresh",10.898767498079822],["(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))))","fresh",10.888376287153589],["(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 (*.f64 (cos.f64 B) x) (/.f64 1 (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))))","fresh",10.900758806690474],["(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (/.f64 1 F)) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))","fresh",32.33840779134165],["(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))","fresh",10.910486248079824],["(-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 1 (sin.f64 B)))","fresh",32.48400036600159],["(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))","fresh",10.902673748079822],["(+.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (tan.f64 B)) -1))) (fma.f64 (/.f64 x (tan.f64 B)) -1 (*.f64 (/.f64 x (tan.f64 B)) -1)))","fresh",34.66457523753008],["(+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","fresh",30.782087794442738],["(fma.f64 (/.f64 F (sin.f64 B)) (expm1.f64 (log1p.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))","fresh",14.528813958224745]],"compiler":[[54,27],[16,11],[43,23],[72,36],[45,23],[67,36],[67,38],[37,17],[43,23],[17,12],[87,37],[54,32],[17,12],[24,17],[54,27],[16,11],[43,23],[72,36],[45,23],[67,36],[67,38],[37,17],[43,23],[17,12],[87,37],[54,32],[17,12],[24,17]],"count":[[564,14]],"kept":[{"done":[0,0],"fresh":[10,5],"new":[553,9],"picked":[1,0]}],"min-error":[0.0078125],"time":269.47607421875,"type":"prune"},{"compiler":[[225,103]],"locations":[["(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))",2.2955321596336953,true],["(sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3)))",5.85127524005986,true],["(sqrt.f64 (/.f64 1 (fma.f64 F F 2)))",17.767991519583067,true],["(fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))",29.109260134929098,false]],"time":45.319091796875,"type":"localize"},{"count":[[3,60]],"series":[["(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","F","-inf",0.308837890625],["(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","F","inf",0.339111328125],["(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","F","0",0.60888671875],["(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","B","-inf",0.31103515625],["(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","B","inf",0.590087890625],["(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","B","0",0.601806640625],["(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","x","-inf",0.333984375],["(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","x","inf",0.27197265625],["(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","x","0",1.0791015625],["(sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3)))","F","-inf",0.315185546875],["(sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3)))","F","inf",0.39013671875],["(sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3)))","F","0",0.578857421875],["(sqrt.f64 (/.f64 1 (fma.f64 F F 2)))","F","-inf",0.244873046875],["(sqrt.f64 (/.f64 1 (fma.f64 F F 2)))","F","inf",0.323974609375],["(sqrt.f64 (/.f64 1 (fma.f64 F F 2)))","F","0",0.614013671875]],"time":7.178955078125,"type":"series"},{"count":[[3,113]],"egraph":[[2,4026,32,0.029759251],[1,340,32,0.005826584],[0,16,38,0.000446959]],"inputs":[["(sqrt.f64 (/.f64 1 (fma.f64 F F 2)))","(sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3)))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (fma.f64 F F 2) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (fma.f64 F F 2) -1/2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (fma.f64 F F 2) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (fma.f64 F F 2) -1/2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (fma.f64 F F 2) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (fma.f64 F F 2) -1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (fma.f64 F F 2) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 F F 2) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (fma.f64 F F 2))) (cbrt.f64 (pow.f64 (fma.f64 F F 2) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 F F 2) -1/2)) (/.f64 1 (cbrt.f64 (fma.f64 F F 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 F F 2) -1/2)) (sqrt.f64 (pow.f64 (fma.f64 F F 2) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (fma.f64 F F 2) -2))) (sqrt.f64 (/.f64 1 (cbrt.f64 (fma.f64 F F 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (pow.f64 (fma.f64 F F 2) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (sqrt.f64 (fma.f64 F F 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (sqrt.f64 (fma.f64 F F 2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (sqrt.f64 (fma.f64 F F 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 -1) (sqrt.f64 (neg.f64 (fma.f64 F F 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 F F 2) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F 2) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F 2) -3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F 2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 F F 2) -1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 F F 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 (fma.f64 F F 2) -1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (fma.f64 F F 2)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (pow.f64 (fma.f64 F F 2) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (fma.f64 F F 2) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (fma.f64 F F 2) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 F F 2) -3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (fma.f64 F F 2) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (fma.f64 F F 2) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 -1/2 (log.f64 (fma.f64 F F 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 F F 2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 -1/2 (log.f64 (fma.f64 F F 2))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (fma.f64 F F 2) -3/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (fma.f64 F F 2) -3/2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (fma.f64 F F 2) -3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (fma.f64 F F 2) -3/2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (fma.f64 F F 2) -3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (fma.f64 F F 2) -3/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (fma.f64 F F 2) -3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 F F 2) -1/2) (/.f64 1 (fma.f64 F F 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 F F 2) -3/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 F F 2) -2)) (*.f64 (/.f64 1 (cbrt.f64 (fma.f64 F F 2))) (pow.f64 (fma.f64 F F 2) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 F F 2)) (pow.f64 (fma.f64 F F 2) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 F F 2) -3/2)) (sqrt.f64 (pow.f64 (fma.f64 F F 2) -3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (pow.f64 (fma.f64 F F 2) -3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 (fma.f64 F F 2)) (/.f64 1 (cbrt.f64 (fma.f64 F F 2)))) (cbrt.f64 (pow.f64 (fma.f64 F F 2) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 1 (fma.f64 F F 2)) (sqrt.f64 (pow.f64 (fma.f64 F F 2) -1/2))) (sqrt.f64 (pow.f64 (fma.f64 F F 2) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (pow.f64 (fma.f64 F F 2) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (pow.f64 (fma.f64 F F 2) 3/2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 F F 2) -1/2) (fma.f64 F F 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (fma.f64 F F 2)) (sqrt.f64 (fma.f64 F F 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (pow.f64 (fma.f64 F F 2) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (neg.f64 (fma.f64 F F 2)) (sqrt.f64 (fma.f64 F F 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 -1) (sqrt.f64 (neg.f64 (pow.f64 (fma.f64 F F 2) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (pow.f64 (fma.f64 F F 2) -1/2)) (neg.f64 (fma.f64 F F 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 F F 2) -3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F 2) -1/2) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F 2) 3) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F 2) -3) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F 2) -3/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (fma.f64 F F 2) -3) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 F F 2)) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 F F 2) 3/2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 (fma.f64 F F 2) -3/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (fma.f64 F F 2) 3/2) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (pow.f64 (fma.f64 F F 2) -3/2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (fma.f64 F F 2) -3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (fma.f64 F F 2) -3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (fma.f64 F F 2) -3) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (fma.f64 F F 2) -3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (fma.f64 F F 2) -3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 -3/2 (log.f64 (fma.f64 F F 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (fma.f64 F F 2) -3)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 -3/2 (log.f64 (fma.f64 F F 2))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (pow.f64 (fma.f64 F F 2) -3/2) (/.f64 x (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 x (sin.f64 B))) (pow.f64 (fma.f64 F F 2) -3/2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 x (sin.f64 B))) (pow.f64 (fma.f64 F F 2) -3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 x (sin.f64 B))) (pow.f64 (fma.f64 F F 2) -3/2)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 x (sin.f64 B))) (pow.f64 (fma.f64 F F 2) -3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (pow.f64 (fma.f64 F F 2) -3/2) (/.f64 x (sin.f64 B))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (pow.f64 (fma.f64 F F 2) 3/2) (/.f64 (sin.f64 B) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (sin.f64 B) x) (pow.f64 (fma.f64 F F 2) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (sin.f64 B) (/.f64 x (pow.f64 (fma.f64 F F 2) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 F F 2) -3/2) (/.f64 (sin.f64 B) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 (pow.f64 (fma.f64 F F 2) 3/2) (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 (sin.f64 B) (pow.f64 (fma.f64 F F 2) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 (sin.f64 B) (pow.f64 (fma.f64 F F 2) -3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (sin.f64 B)) (pow.f64 (fma.f64 F F 2) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (*.f64 (pow.f64 (fma.f64 F F 2) 3/2) (neg.f64 (sin.f64 B))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (pow.f64 (fma.f64 F F 2) 3/2)) (sin.f64 B))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (pow.f64 (fma.f64 F F 2) 3/2))) (neg.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) 1) (*.f64 (neg.f64 (sin.f64 B)) (pow.f64 (fma.f64 F F 2) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (pow.f64 (fma.f64 F F 2) 3/2)) 1) (sin.f64 B))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (pow.f64 (fma.f64 F F 2) 3/2)) (pow.f64 (cbrt.f64 (sin.f64 B)) 2)) (cbrt.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (pow.f64 (fma.f64 F F 2) 3/2)) (sqrt.f64 (sin.f64 B))) (sqrt.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (pow.f64 (fma.f64 F F 2) -3/2)) (neg.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (fma.f64 F F 2) -3/2) (neg.f64 x)) (neg.f64 (sin.f64 B)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (fma.f64 F F 2) -3/2) (/.f64 x (sin.f64 B))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (fma.f64 F F 2) -3) (pow.f64 (/.f64 x (sin.f64 B)) 2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 F F 2) -3/2) (/.f64 x (sin.f64 B))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (fma.f64 F F 2) -1/2) (cbrt.f64 (/.f64 x (sin.f64 B)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 F F 2) -3/2) (/.f64 x (sin.f64 B)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (pow.f64 (fma.f64 F F 2) -3) 3/2) (pow.f64 (/.f64 x (sin.f64 B)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (/.f64 x (sin.f64 B)) 3) (pow.f64 (pow.f64 (fma.f64 F F 2) -3) 3/2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (fma.f64 F F 2) 3/2) (/.f64 (sin.f64 B) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (sin.f64 B) x) (pow.f64 (fma.f64 F F 2) 3/2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sin.f64 B) (/.f64 x (pow.f64 (fma.f64 F F 2) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (fma.f64 F F 2) -3) (pow.f64 (/.f64 x (sin.f64 B)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 x (sin.f64 B))) (pow.f64 (fma.f64 F F 2) -3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (pow.f64 (fma.f64 F F 2) -3/2) (/.f64 x (sin.f64 B))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 F F 2) -3/2) (/.f64 x (sin.f64 B))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 (fma.f64 F F 2) -3) 3/2) (pow.f64 (/.f64 x (sin.f64 B)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 x (sin.f64 B)) 3) (pow.f64 (pow.f64 (fma.f64 F F 2) -3) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (pow.f64 (fma.f64 F F 2) -3/2) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (pow.f64 (fma.f64 F F 2) -3/2) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (pow.f64 (fma.f64 F F 2) -3/2) (/.f64 x (sin.f64 B)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (pow.f64 (fma.f64 F F 2) -3/2) (/.f64 x (sin.f64 B)))) 1))))))"]],"rules":[["egg-rr",41],["egg-rr",40],["egg-rr",32]],"stop":[["node limit",1]],"time":54.552978515625,"type":"rewrite"},{"count":[[173,189]],"egraph":[[2,1950,1533,0.015762625000000002],[1,572,1672,0.004051292],[0,188,1815,0.000925334]],"inputs":[["(sqrt.f64 1/2)","(+.f64 (sqrt.f64 1/2) (*.f64 -1/8 (/.f64 (pow.f64 F 2) (sqrt.f64 1/2))))","(+.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 F 2) (sqrt.f64 1/2))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 F 4) (-.f64 1/8 (pow.f64 (/.f64 -1/8 (sqrt.f64 1/2)) 2))) (sqrt.f64 1/2)))))","(+.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 1/16 (*.f64 -1/8 (/.f64 (-.f64 1/8 (pow.f64 (/.f64 -1/8 (sqrt.f64 1/2)) 2)) (pow.f64 (sqrt.f64 1/2) 2)))) (pow.f64 F 6)) (sqrt.f64 1/2))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 F 2) (sqrt.f64 1/2))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 F 4) (-.f64 1/8 (pow.f64 (/.f64 -1/8 (sqrt.f64 1/2)) 2))) (sqrt.f64 1/2))))))","(/.f64 1 F)","(-.f64 (/.f64 1 F) (/.f64 1 (pow.f64 F 3)))","(-.f64 (+.f64 (*.f64 3/2 (/.f64 1 (pow.f64 F 5))) (/.f64 1 F)) (/.f64 1 (pow.f64 F 3)))","(-.f64 (+.f64 (*.f64 3/2 (/.f64 1 (pow.f64 F 5))) (/.f64 1 F)) (+.f64 (/.f64 1 (pow.f64 F 3)) (*.f64 5/2 (/.f64 1 (pow.f64 F 7)))))","(/.f64 -1 F)","(-.f64 (/.f64 1 (pow.f64 F 3)) (/.f64 1 F))","(-.f64 (/.f64 1 (pow.f64 F 3)) (+.f64 (*.f64 3/2 (/.f64 1 (pow.f64 F 5))) (/.f64 1 F)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 F 3)) (*.f64 5/2 (/.f64 1 (pow.f64 F 7)))) (+.f64 (*.f64 3/2 (/.f64 1 (pow.f64 F 5))) (/.f64 1 F)))","(sqrt.f64 1/8)","(+.f64 (*.f64 -3/32 (/.f64 (pow.f64 F 2) (sqrt.f64 1/8))) (sqrt.f64 1/8))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (pow.f64 F 4)) (sqrt.f64 1/8))) (+.f64 (*.f64 -3/32 (/.f64 (pow.f64 F 2) (sqrt.f64 1/8))) (sqrt.f64 1/8)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (pow.f64 F 4)) (sqrt.f64 1/8))) (+.f64 (*.f64 -3/32 (/.f64 (pow.f64 F 2) (sqrt.f64 1/8))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 F 6) (+.f64 5/32 (*.f64 -3/32 (/.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (pow.f64 (sqrt.f64 1/8) 2))))) (sqrt.f64 1/8))) (sqrt.f64 1/8))))","(/.f64 1 (pow.f64 F 3))","(-.f64 (/.f64 1 (pow.f64 F 3)) (*.f64 3 (/.f64 1 (pow.f64 F 5))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 F 3)) (*.f64 15/2 (/.f64 1 (pow.f64 F 7)))) (*.f64 3 (/.f64 1 (pow.f64 F 5))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 F 3)) (*.f64 15/2 (/.f64 1 (pow.f64 F 7)))) (+.f64 (*.f64 35/2 (/.f64 1 (pow.f64 F 9))) (*.f64 3 (/.f64 1 (pow.f64 F 5)))))","(/.f64 -1 (pow.f64 F 3))","(-.f64 (*.f64 3 (/.f64 1 (pow.f64 F 5))) (/.f64 1 (pow.f64 F 3)))","(-.f64 (*.f64 3 (/.f64 1 (pow.f64 F 5))) (+.f64 (/.f64 1 (pow.f64 F 3)) (*.f64 15/2 (/.f64 1 (pow.f64 F 7)))))","(-.f64 (+.f64 (*.f64 35/2 (/.f64 1 (pow.f64 F 9))) (*.f64 3 (/.f64 1 (pow.f64 F 5)))) (+.f64 (/.f64 1 (pow.f64 F 3)) (*.f64 15/2 (/.f64 1 (pow.f64 F 7)))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (/.f64 x B))","(+.f64 (*.f64 1/6 (*.f64 (*.f64 x B) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (/.f64 x B)))","(+.f64 (*.f64 1/6 (*.f64 (*.f64 x B) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (+.f64 (*.f64 -1/36 x) (*.f64 1/120 x)) (pow.f64 B 3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (/.f64 x B))))","(+.f64 (*.f64 1/6 (*.f64 (*.f64 x B) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (+.f64 (*.f64 1/720 x) (+.f64 (*.f64 -1/5040 x) (*.f64 1/6 (+.f64 (*.f64 -1/36 x) (*.f64 1/120 x))))) (pow.f64 B 5)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (+.f64 (*.f64 -1/36 x) (*.f64 1/120 x)) (pow.f64 B 3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (/.f64 x B)))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(/.f64 (*.f64 x (sqrt.f64 1/8)) (sin.f64 B))","(+.f64 (*.f64 -3/32 (/.f64 (*.f64 (pow.f64 F 2) x) (*.f64 (sin.f64 B) (sqrt.f64 1/8)))) (/.f64 (*.f64 (sqrt.f64 1/8) x) (sin.f64 B)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (*.f64 (pow.f64 F 4) x)) (*.f64 (sin.f64 B) (sqrt.f64 1/8)))) (+.f64 (*.f64 -3/32 (/.f64 (*.f64 (pow.f64 F 2) x) (*.f64 (sin.f64 B) (sqrt.f64 1/8)))) (/.f64 (*.f64 (sqrt.f64 1/8) x) (sin.f64 B))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 F 6) (*.f64 x (+.f64 5/32 (*.f64 -3/32 (/.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (pow.f64 (sqrt.f64 1/8) 2)))))) (*.f64 (sin.f64 B) (sqrt.f64 1/8)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (*.f64 (pow.f64 F 4) x)) (*.f64 (sin.f64 B) (sqrt.f64 1/8)))) (+.f64 (*.f64 -3/32 (/.f64 (*.f64 (pow.f64 F 2) x) (*.f64 (sin.f64 B) (sqrt.f64 1/8)))) (/.f64 (*.f64 (sqrt.f64 1/8) x) (sin.f64 B)))))","(/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 3)))","(+.f64 (*.f64 -3 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 5)))) (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 3))))","(+.f64 (*.f64 -3 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 5)))) (+.f64 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 3))) (*.f64 15/2 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 7))))))","(+.f64 (*.f64 -3 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 5)))) (+.f64 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 3))) (+.f64 (*.f64 15/2 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 7)))) (*.f64 -35/2 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 9)))))))","(*.f64 -1 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 3))))","(+.f64 (*.f64 3 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 5)))) (*.f64 -1 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 3)))))","(+.f64 (*.f64 3 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 5)))) (+.f64 (*.f64 -15/2 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 7)))) (*.f64 -1 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 3))))))","(+.f64 (*.f64 3 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 5)))) (+.f64 (*.f64 35/2 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 9)))) (+.f64 (*.f64 -15/2 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 7)))) (*.f64 -1 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 3)))))))"]],"method":["egg-herbie"],"outputs":[["(sqrt.f64 1/2)","(+.f64 (sqrt.f64 1/2) (*.f64 -1/8 (/.f64 (pow.f64 F 2) (sqrt.f64 1/2))))","(+.f64 (sqrt.f64 1/2) (*.f64 -1/8 (/.f64 (*.f64 F F) (sqrt.f64 1/2))))","(fma.f64 -1/8 (/.f64 (*.f64 F F) (sqrt.f64 1/2)) (sqrt.f64 1/2))","(fma.f64 -1/8 (*.f64 (/.f64 F (sqrt.f64 1/2)) F) (sqrt.f64 1/2))","(+.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 F 2) (sqrt.f64 1/2))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 F 4) (-.f64 1/8 (pow.f64 (/.f64 -1/8 (sqrt.f64 1/2)) 2))) (sqrt.f64 1/2)))))","(+.f64 (sqrt.f64 1/2) (fma.f64 -1/8 (/.f64 (*.f64 F F) (sqrt.f64 1/2)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 F 4) (-.f64 1/8 (pow.f64 (/.f64 -1/8 (sqrt.f64 1/2)) 2))) (sqrt.f64 1/2)))))","(+.f64 (sqrt.f64 1/2) (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 F 4) (sqrt.f64 1/2)) (-.f64 1/8 (pow.f64 (/.f64 -1/8 (sqrt.f64 1/2)) 2))) (*.f64 -1/8 (/.f64 (*.f64 F F) (sqrt.f64 1/2)))))","(fma.f64 1/2 (*.f64 (-.f64 (/.f64 1/8 (sqrt.f64 1/2)) (/.f64 (/.f64 1/64 (sqrt.f64 1/2)) 1/2)) (pow.f64 F 4)) (fma.f64 -1/8 (*.f64 (/.f64 F (sqrt.f64 1/2)) F) (sqrt.f64 1/2)))","(+.f64 (sqrt.f64 1/2) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 1/16 (*.f64 -1/8 (/.f64 (-.f64 1/8 (pow.f64 (/.f64 -1/8 (sqrt.f64 1/2)) 2)) (pow.f64 (sqrt.f64 1/2) 2)))) (pow.f64 F 6)) (sqrt.f64 1/2))) (+.f64 (*.f64 -1/8 (/.f64 (pow.f64 F 2) (sqrt.f64 1/2))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 F 4) (-.f64 1/8 (pow.f64 (/.f64 -1/8 (sqrt.f64 1/2)) 2))) (sqrt.f64 1/2))))))","(+.f64 (sqrt.f64 1/2) (fma.f64 -1/2 (/.f64 (+.f64 1/16 (*.f64 -1/8 (/.f64 (-.f64 1/8 (pow.f64 (/.f64 -1/8 (sqrt.f64 1/2)) 2)) (pow.f64 (sqrt.f64 1/2) 2)))) (/.f64 (sqrt.f64 1/2) (pow.f64 F 6))) (fma.f64 -1/8 (/.f64 (*.f64 F F) (sqrt.f64 1/2)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 F 4) (-.f64 1/8 (pow.f64 (/.f64 -1/8 (sqrt.f64 1/2)) 2))) (sqrt.f64 1/2))))))","(+.f64 (sqrt.f64 1/2) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 -1/8 (-.f64 1/4 (/.f64 (pow.f64 (/.f64 -1/8 (sqrt.f64 1/2)) 2) 1/2)) 1/16) (sqrt.f64 1/2)) (pow.f64 F 6)) (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 F 4) (sqrt.f64 1/2)) (-.f64 1/8 (pow.f64 (/.f64 -1/8 (sqrt.f64 1/2)) 2))) (*.f64 -1/8 (/.f64 (*.f64 F F) (sqrt.f64 1/2))))))","(+.f64 (sqrt.f64 1/2) (fma.f64 1/2 (*.f64 (-.f64 (/.f64 1/8 (sqrt.f64 1/2)) (/.f64 (/.f64 1/64 (sqrt.f64 1/2)) 1/2)) (pow.f64 F 4)) (fma.f64 -1/8 (*.f64 (/.f64 F (sqrt.f64 1/2)) F) (*.f64 (/.f64 -5/256 (sqrt.f64 1/2)) (pow.f64 F 6)))))","(/.f64 1 F)","(-.f64 (/.f64 1 F) (/.f64 1 (pow.f64 F 3)))","(+.f64 (/.f64 1 F) (/.f64 -1 (pow.f64 F 3)))","(-.f64 (+.f64 (*.f64 3/2 (/.f64 1 (pow.f64 F 5))) (/.f64 1 F)) (/.f64 1 (pow.f64 F 3)))","(+.f64 (/.f64 3/2 (pow.f64 F 5)) (-.f64 (/.f64 1 F) (/.f64 1 (pow.f64 F 3))))","(+.f64 (/.f64 1 F) (-.f64 (/.f64 3/2 (pow.f64 F 5)) (/.f64 1 (pow.f64 F 3))))","(+.f64 (+.f64 (/.f64 1 F) (/.f64 3/2 (pow.f64 F 5))) (/.f64 -1 (pow.f64 F 3)))","(-.f64 (+.f64 (*.f64 3/2 (/.f64 1 (pow.f64 F 5))) (/.f64 1 F)) (+.f64 (/.f64 1 (pow.f64 F 3)) (*.f64 5/2 (/.f64 1 (pow.f64 F 7)))))","(+.f64 (/.f64 3/2 (pow.f64 F 5)) (-.f64 (/.f64 1 F) (+.f64 (/.f64 1 (pow.f64 F 3)) (/.f64 5/2 (pow.f64 F 7)))))","(+.f64 (+.f64 (/.f64 1 F) (/.f64 3/2 (pow.f64 F 5))) (-.f64 (/.f64 -1 (pow.f64 F 3)) (/.f64 5/2 (pow.f64 F 7))))","(+.f64 (/.f64 1 F) (-.f64 (/.f64 3/2 (pow.f64 F 5)) (+.f64 (/.f64 1 (pow.f64 F 3)) (/.f64 5/2 (pow.f64 F 7)))))","(/.f64 -1 F)","(-.f64 (/.f64 1 (pow.f64 F 3)) (/.f64 1 F))","(+.f64 (/.f64 1 (pow.f64 F 3)) (/.f64 -1 F))","(-.f64 (/.f64 1 (pow.f64 F 3)) (+.f64 (*.f64 3/2 (/.f64 1 (pow.f64 F 5))) (/.f64 1 F)))","(-.f64 (/.f64 1 (pow.f64 F 3)) (+.f64 (/.f64 1 F) (/.f64 3/2 (pow.f64 F 5))))","(+.f64 (-.f64 (/.f64 1 (pow.f64 F 3)) (/.f64 3/2 (pow.f64 F 5))) (/.f64 -1 F))","(+.f64 (/.f64 1 (pow.f64 F 3)) (-.f64 (/.f64 -3/2 (pow.f64 F 5)) (/.f64 1 F)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 F 3)) (*.f64 5/2 (/.f64 1 (pow.f64 F 7)))) (+.f64 (*.f64 3/2 (/.f64 1 (pow.f64 F 5))) (/.f64 1 F)))","(+.f64 (/.f64 1 (pow.f64 F 3)) (-.f64 (/.f64 5/2 (pow.f64 F 7)) (+.f64 (/.f64 1 F) (/.f64 3/2 (pow.f64 F 5)))))","(+.f64 (+.f64 (/.f64 1 (pow.f64 F 3)) (-.f64 (/.f64 5/2 (pow.f64 F 7)) (/.f64 3/2 (pow.f64 F 5)))) (/.f64 -1 F))","(+.f64 (/.f64 1 (pow.f64 F 3)) (+.f64 (/.f64 5/2 (pow.f64 F 7)) (-.f64 (/.f64 -3/2 (pow.f64 F 5)) (/.f64 1 F))))","(sqrt.f64 1/8)","(+.f64 (*.f64 -3/32 (/.f64 (pow.f64 F 2) (sqrt.f64 1/8))) (sqrt.f64 1/8))","(fma.f64 -3/32 (/.f64 (*.f64 F F) (sqrt.f64 1/8)) (sqrt.f64 1/8))","(fma.f64 -3/32 (/.f64 F (/.f64 (sqrt.f64 1/8) F)) (sqrt.f64 1/8))","(fma.f64 -3/32 (*.f64 (/.f64 F (sqrt.f64 1/8)) F) (sqrt.f64 1/8))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (pow.f64 F 4)) (sqrt.f64 1/8))) (+.f64 (*.f64 -3/32 (/.f64 (pow.f64 F 2) (sqrt.f64 1/8))) (sqrt.f64 1/8)))","(fma.f64 1/2 (/.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (/.f64 (sqrt.f64 1/8) (pow.f64 F 4))) (fma.f64 -3/32 (/.f64 (*.f64 F F) (sqrt.f64 1/8)) (sqrt.f64 1/8)))","(fma.f64 1/2 (/.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (/.f64 (sqrt.f64 1/8) (pow.f64 F 4))) (fma.f64 -3/32 (/.f64 F (/.f64 (sqrt.f64 1/8) F)) (sqrt.f64 1/8)))","(fma.f64 1/2 (*.f64 (-.f64 (/.f64 3/16 (sqrt.f64 1/8)) (/.f64 (/.f64 9/1024 (sqrt.f64 1/8)) 1/8)) (pow.f64 F 4)) (fma.f64 -3/32 (*.f64 (/.f64 F (sqrt.f64 1/8)) F) (sqrt.f64 1/8)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (pow.f64 F 4)) (sqrt.f64 1/8))) (+.f64 (*.f64 -3/32 (/.f64 (pow.f64 F 2) (sqrt.f64 1/8))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 F 6) (+.f64 5/32 (*.f64 -3/32 (/.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (pow.f64 (sqrt.f64 1/8) 2))))) (sqrt.f64 1/8))) (sqrt.f64 1/8))))","(fma.f64 1/2 (/.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (/.f64 (sqrt.f64 1/8) (pow.f64 F 4))) (fma.f64 -3/32 (/.f64 (*.f64 F F) (sqrt.f64 1/8)) (fma.f64 -1/2 (/.f64 (pow.f64 F 6) (/.f64 (sqrt.f64 1/8) (+.f64 5/32 (*.f64 -3/32 (/.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (pow.f64 (sqrt.f64 1/8) 2)))))) (sqrt.f64 1/8))))","(fma.f64 1/2 (/.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (/.f64 (sqrt.f64 1/8) (pow.f64 F 4))) (fma.f64 -3/32 (/.f64 F (/.f64 (sqrt.f64 1/8) F)) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 F 6) (sqrt.f64 1/8)) (fma.f64 -3/32 (-.f64 3/2 (/.f64 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2) 1/8)) 5/32)) (sqrt.f64 1/8))))","(+.f64 (fma.f64 1/2 (*.f64 (-.f64 (/.f64 3/16 (sqrt.f64 1/8)) (/.f64 (/.f64 9/1024 (sqrt.f64 1/8)) 1/8)) (pow.f64 F 4)) (fma.f64 -3/32 (*.f64 (/.f64 F (sqrt.f64 1/8)) F) (sqrt.f64 1/8))) (/.f64 (*.f64 (pow.f64 F 6) -35/1024) (sqrt.f64 1/8)))","(/.f64 1 (pow.f64 F 3))","(-.f64 (/.f64 1 (pow.f64 F 3)) (*.f64 3 (/.f64 1 (pow.f64 F 5))))","(-.f64 (/.f64 1 (pow.f64 F 3)) (/.f64 3 (pow.f64 F 5)))","(+.f64 (/.f64 1 (pow.f64 F 3)) (/.f64 -3 (pow.f64 F 5)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 F 3)) (*.f64 15/2 (/.f64 1 (pow.f64 F 7)))) (*.f64 3 (/.f64 1 (pow.f64 F 5))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 F 3)) (/.f64 15/2 (pow.f64 F 7))) (/.f64 3 (pow.f64 F 5)))","(+.f64 (/.f64 15/2 (pow.f64 F 7)) (+.f64 (/.f64 1 (pow.f64 F 3)) (/.f64 -3 (pow.f64 F 5))))","(-.f64 (/.f64 15/2 (pow.f64 F 7)) (-.f64 (/.f64 3 (pow.f64 F 5)) (/.f64 1 (pow.f64 F 3))))","(-.f64 (+.f64 (/.f64 1 (pow.f64 F 3)) (*.f64 15/2 (/.f64 1 (pow.f64 F 7)))) (+.f64 (*.f64 35/2 (/.f64 1 (pow.f64 F 9))) (*.f64 3 (/.f64 1 (pow.f64 F 5)))))","(+.f64 (/.f64 1 (pow.f64 F 3)) (-.f64 (/.f64 15/2 (pow.f64 F 7)) (+.f64 (/.f64 3 (pow.f64 F 5)) (/.f64 35/2 (pow.f64 F 9)))))","(+.f64 (/.f64 1 (pow.f64 F 3)) (+.f64 (/.f64 15/2 (pow.f64 F 7)) (+.f64 (/.f64 -3 (pow.f64 F 5)) (/.f64 -35/2 (pow.f64 F 9)))))","(/.f64 -1 (pow.f64 F 3))","(-.f64 (*.f64 3 (/.f64 1 (pow.f64 F 5))) (/.f64 1 (pow.f64 F 3)))","(-.f64 (/.f64 3 (pow.f64 F 5)) (/.f64 1 (pow.f64 F 3)))","(+.f64 (/.f64 3 (pow.f64 F 5)) (/.f64 -1 (pow.f64 F 3)))","(-.f64 (*.f64 3 (/.f64 1 (pow.f64 F 5))) (+.f64 (/.f64 1 (pow.f64 F 3)) (*.f64 15/2 (/.f64 1 (pow.f64 F 7)))))","(-.f64 (/.f64 3 (pow.f64 F 5)) (+.f64 (/.f64 1 (pow.f64 F 3)) (/.f64 15/2 (pow.f64 F 7))))","(+.f64 (/.f64 3 (pow.f64 F 5)) (-.f64 (/.f64 -1 (pow.f64 F 3)) (/.f64 15/2 (pow.f64 F 7))))","(+.f64 (/.f64 3 (pow.f64 F 5)) (+.f64 (/.f64 -1 (pow.f64 F 3)) (/.f64 -15/2 (pow.f64 F 7))))","(-.f64 (+.f64 (*.f64 35/2 (/.f64 1 (pow.f64 F 9))) (*.f64 3 (/.f64 1 (pow.f64 F 5)))) (+.f64 (/.f64 1 (pow.f64 F 3)) (*.f64 15/2 (/.f64 1 (pow.f64 F 7)))))","(+.f64 (/.f64 35/2 (pow.f64 F 9)) (-.f64 (/.f64 3 (pow.f64 F 5)) (+.f64 (/.f64 1 (pow.f64 F 3)) (/.f64 15/2 (pow.f64 F 7)))))","(-.f64 (+.f64 (/.f64 3 (pow.f64 F 5)) (-.f64 (/.f64 35/2 (pow.f64 F 9)) (/.f64 1 (pow.f64 F 3)))) (/.f64 15/2 (pow.f64 F 7)))","(+.f64 (+.f64 (/.f64 35/2 (pow.f64 F 9)) (-.f64 (/.f64 3 (pow.f64 F 5)) (/.f64 1 (pow.f64 F 3)))) (/.f64 -15/2 (pow.f64 F 7)))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (/.f64 x B))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))) (/.f64 x B))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))) (/.f64 x B))","(+.f64 (*.f64 1/6 (*.f64 (*.f64 x B) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (/.f64 x B)))","(fma.f64 1/6 (*.f64 x (*.f64 B (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))) (/.f64 x B)))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))) (+.f64 (/.f64 x B) (*.f64 1/6 (*.f64 x B))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))) (fma.f64 1/6 (*.f64 x B) (/.f64 x B)))","(+.f64 (*.f64 1/6 (*.f64 (*.f64 x B) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (+.f64 (*.f64 -1/36 x) (*.f64 1/120 x)) (pow.f64 B 3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (/.f64 x B))))","(fma.f64 1/6 (*.f64 x (*.f64 B (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))) (fma.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))) (*.f64 (*.f64 x -7/360) (pow.f64 B 3))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))) (/.f64 x B))))","(fma.f64 1/6 (*.f64 x (*.f64 B (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))) (+.f64 (/.f64 x B) (neg.f64 (*.f64 (*.f64 x -7/360) (pow.f64 B 3))))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))) (+.f64 (/.f64 x B) (fma.f64 1/6 (*.f64 x B) (*.f64 (pow.f64 B 3) (*.f64 x 7/360)))))","(+.f64 (*.f64 1/6 (*.f64 (*.f64 x B) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (+.f64 (*.f64 1/720 x) (+.f64 (*.f64 -1/5040 x) (*.f64 1/6 (+.f64 (*.f64 -1/36 x) (*.f64 1/120 x))))) (pow.f64 B 5)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (+.f64 (*.f64 -1 (*.f64 (*.f64 (+.f64 (*.f64 -1/36 x) (*.f64 1/120 x)) (pow.f64 B 3)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))) (/.f64 x B)))))","(fma.f64 1/6 (*.f64 x (*.f64 B (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))) (fma.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))) (*.f64 (fma.f64 1/720 x (fma.f64 -1/5040 x (*.f64 1/6 (*.f64 x -7/360)))) (pow.f64 B 5))) (fma.f64 -1 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))) (*.f64 (*.f64 x -7/360) (pow.f64 B 3))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))) (/.f64 x B)))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))) (+.f64 (/.f64 x B) (neg.f64 (*.f64 (*.f64 x -7/360) (pow.f64 B 3))))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))) (+.f64 (*.f64 1/6 (*.f64 x B)) (neg.f64 (*.f64 (+.f64 (*.f64 x -7/2160) (*.f64 x 1/840)) (pow.f64 B 5))))))","(*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))) (+.f64 (fma.f64 (*.f64 x 7/360) (pow.f64 B 3) (/.f64 x B)) (-.f64 (*.f64 B (*.f64 x 1/6)) (*.f64 (*.f64 x -31/15120) (pow.f64 B 5)))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 F 2) 2) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 2 (*.f64 F F)) 3))))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))","(/.f64 (*.f64 x (sqrt.f64 1/8)) (sin.f64 B))","(/.f64 (sqrt.f64 1/8) (/.f64 (sin.f64 B) x))","(*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 1/8))","(+.f64 (*.f64 -3/32 (/.f64 (*.f64 (pow.f64 F 2) x) (*.f64 (sin.f64 B) (sqrt.f64 1/8)))) (/.f64 (*.f64 (sqrt.f64 1/8) x) (sin.f64 B)))","(fma.f64 -3/32 (*.f64 (/.f64 (*.f64 F F) (sin.f64 B)) (/.f64 x (sqrt.f64 1/8))) (/.f64 (sqrt.f64 1/8) (/.f64 (sin.f64 B) x)))","(fma.f64 -3/32 (*.f64 (/.f64 F (/.f64 (sqrt.f64 1/8) F)) (/.f64 x (sin.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 1/8)))","(fma.f64 -3/32 (*.f64 (*.f64 (/.f64 F (sqrt.f64 1/8)) F) (/.f64 x (sin.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 1/8)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (*.f64 (pow.f64 F 4) x)) (*.f64 (sin.f64 B) (sqrt.f64 1/8)))) (+.f64 (*.f64 -3/32 (/.f64 (*.f64 (pow.f64 F 2) x) (*.f64 (sin.f64 B) (sqrt.f64 1/8)))) (/.f64 (*.f64 (sqrt.f64 1/8) x) (sin.f64 B))))","(fma.f64 1/2 (/.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (/.f64 (*.f64 (sqrt.f64 1/8) (sin.f64 B)) (*.f64 (pow.f64 F 4) x))) (fma.f64 -3/32 (*.f64 (/.f64 (*.f64 F F) (sin.f64 B)) (/.f64 x (sqrt.f64 1/8))) (/.f64 (sqrt.f64 1/8) (/.f64 (sin.f64 B) x))))","(fma.f64 1/2 (/.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (/.f64 (sqrt.f64 1/8) (/.f64 (*.f64 (pow.f64 F 4) x) (sin.f64 B)))) (fma.f64 -3/32 (*.f64 (/.f64 F (/.f64 (sqrt.f64 1/8) F)) (/.f64 x (sin.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 1/8))))","(fma.f64 1/2 (*.f64 (*.f64 (-.f64 (/.f64 3/16 (sqrt.f64 1/8)) (/.f64 (/.f64 9/1024 (sqrt.f64 1/8)) 1/8)) (pow.f64 F 4)) (/.f64 x (sin.f64 B))) (fma.f64 -3/32 (*.f64 (*.f64 (/.f64 F (sqrt.f64 1/8)) F) (/.f64 x (sin.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 1/8))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 F 6) (*.f64 x (+.f64 5/32 (*.f64 -3/32 (/.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (pow.f64 (sqrt.f64 1/8) 2)))))) (*.f64 (sin.f64 B) (sqrt.f64 1/8)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (*.f64 (pow.f64 F 4) x)) (*.f64 (sin.f64 B) (sqrt.f64 1/8)))) (+.f64 (*.f64 -3/32 (/.f64 (*.f64 (pow.f64 F 2) x) (*.f64 (sin.f64 B) (sqrt.f64 1/8)))) (/.f64 (*.f64 (sqrt.f64 1/8) x) (sin.f64 B)))))","(fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 F 6) (sin.f64 B)) (/.f64 (*.f64 (+.f64 5/32 (*.f64 -3/32 (/.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (pow.f64 (sqrt.f64 1/8) 2)))) x) (sqrt.f64 1/8))) (fma.f64 1/2 (/.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (/.f64 (*.f64 (sqrt.f64 1/8) (sin.f64 B)) (*.f64 (pow.f64 F 4) x))) (fma.f64 -3/32 (*.f64 (/.f64 (*.f64 F F) (sin.f64 B)) (/.f64 x (sqrt.f64 1/8))) (/.f64 (sqrt.f64 1/8) (/.f64 (sin.f64 B) x)))))","(fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 F 6) (*.f64 (sqrt.f64 1/8) (sin.f64 B))) (*.f64 (fma.f64 -3/32 (-.f64 3/2 (/.f64 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2) 1/8)) 5/32) x)) (fma.f64 1/2 (/.f64 (-.f64 3/16 (pow.f64 (/.f64 -3/32 (sqrt.f64 1/8)) 2)) (/.f64 (sqrt.f64 1/8) (/.f64 (*.f64 (pow.f64 F 4) x) (sin.f64 B)))) (fma.f64 -3/32 (*.f64 (/.f64 F (/.f64 (sqrt.f64 1/8) F)) (/.f64 x (sin.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 1/8)))))","(fma.f64 (/.f64 (pow.f64 F 6) (sin.f64 B)) (/.f64 -35/1024 (/.f64 (sqrt.f64 1/8) x)) (fma.f64 1/2 (*.f64 (*.f64 (-.f64 (/.f64 3/16 (sqrt.f64 1/8)) (/.f64 (/.f64 9/1024 (sqrt.f64 1/8)) 1/8)) (pow.f64 F 4)) (/.f64 x (sin.f64 B))) (fma.f64 -3/32 (*.f64 (*.f64 (/.f64 F (sqrt.f64 1/8)) F) (/.f64 x (sin.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 1/8)))))","(/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 3)))","(/.f64 x (*.f64 (pow.f64 F 3) (sin.f64 B)))","(/.f64 (/.f64 x (pow.f64 F 3)) (sin.f64 B))","(+.f64 (*.f64 -3 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 5)))) (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 3))))","(fma.f64 -3 (/.f64 (/.f64 x (sin.f64 B)) (pow.f64 F 5)) (/.f64 x (*.f64 (pow.f64 F 3) (sin.f64 B))))","(fma.f64 -3 (/.f64 x (*.f64 (pow.f64 F 5) (sin.f64 B))) (/.f64 (/.f64 x (pow.f64 F 3)) (sin.f64 B)))","(fma.f64 -3 (/.f64 (/.f64 x (pow.f64 F 5)) (sin.f64 B)) (/.f64 x (*.f64 (pow.f64 F 3) (sin.f64 B))))","(+.f64 (*.f64 -3 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 5)))) (+.f64 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 3))) (*.f64 15/2 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 7))))))","(+.f64 (fma.f64 -3 (/.f64 (/.f64 x (sin.f64 B)) (pow.f64 F 5)) (/.f64 x (*.f64 (pow.f64 F 3) (sin.f64 B)))) (*.f64 15/2 (/.f64 x (*.f64 (pow.f64 F 7) (sin.f64 B)))))","(fma.f64 -3 (/.f64 x (*.f64 (pow.f64 F 5) (sin.f64 B))) (fma.f64 15/2 (/.f64 (/.f64 x (sin.f64 B)) (pow.f64 F 7)) (/.f64 (/.f64 x (pow.f64 F 3)) (sin.f64 B))))","(+.f64 (/.f64 x (*.f64 (pow.f64 F 3) (sin.f64 B))) (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (/.f64 -3 (pow.f64 F 5)) (/.f64 15/2 (pow.f64 F 7)))))","(+.f64 (*.f64 -3 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 5)))) (+.f64 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 3))) (+.f64 (*.f64 15/2 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 7)))) (*.f64 -35/2 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 9)))))))","(+.f64 (fma.f64 -3 (/.f64 (/.f64 x (sin.f64 B)) (pow.f64 F 5)) (/.f64 x (*.f64 (pow.f64 F 3) (sin.f64 B)))) (fma.f64 15/2 (/.f64 x (*.f64 (pow.f64 F 7) (sin.f64 B))) (*.f64 -35/2 (/.f64 x (*.f64 (pow.f64 F 9) (sin.f64 B))))))","(+.f64 (fma.f64 -3 (/.f64 x (*.f64 (pow.f64 F 5) (sin.f64 B))) (/.f64 (/.f64 x (pow.f64 F 3)) (sin.f64 B))) (fma.f64 15/2 (/.f64 (/.f64 x (sin.f64 B)) (pow.f64 F 7)) (*.f64 -35/2 (/.f64 x (*.f64 (pow.f64 F 9) (sin.f64 B))))))","(+.f64 (/.f64 x (*.f64 (pow.f64 F 3) (sin.f64 B))) (fma.f64 -3 (/.f64 (/.f64 x (pow.f64 F 5)) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (/.f64 15/2 (pow.f64 F 7)) (/.f64 -35/2 (pow.f64 F 9))))))","(*.f64 -1 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 3))))","(neg.f64 (/.f64 x (*.f64 (pow.f64 F 3) (sin.f64 B))))","(/.f64 (neg.f64 x) (*.f64 (pow.f64 F 3) (sin.f64 B)))","(+.f64 (*.f64 3 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 5)))) (*.f64 -1 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 3)))))","(fma.f64 3 (/.f64 (/.f64 x (sin.f64 B)) (pow.f64 F 5)) (neg.f64 (/.f64 x (*.f64 (pow.f64 F 3) (sin.f64 B)))))","(-.f64 (/.f64 (/.f64 (*.f64 3 x) (pow.f64 F 5)) (sin.f64 B)) (/.f64 (/.f64 x (pow.f64 F 3)) (sin.f64 B)))","(*.f64 (/.f64 x (sin.f64 B)) (-.f64 (/.f64 3 (pow.f64 F 5)) (/.f64 1 (pow.f64 F 3))))","(+.f64 (*.f64 3 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 5)))) (+.f64 (*.f64 -15/2 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 7)))) (*.f64 -1 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 3))))))","(fma.f64 3 (/.f64 (/.f64 x (sin.f64 B)) (pow.f64 F 5)) (fma.f64 -15/2 (/.f64 x (*.f64 (pow.f64 F 7) (sin.f64 B))) (neg.f64 (/.f64 x (*.f64 (pow.f64 F 3) (sin.f64 B))))))","(fma.f64 3 (/.f64 x (*.f64 (pow.f64 F 5) (sin.f64 B))) (fma.f64 (/.f64 (/.f64 x (sin.f64 B)) (pow.f64 F 7)) -15/2 (/.f64 (neg.f64 x) (*.f64 (pow.f64 F 3) (sin.f64 B)))))","(-.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (/.f64 3 (pow.f64 F 5)) (/.f64 -15/2 (pow.f64 F 7)))) (/.f64 x (*.f64 (pow.f64 F 3) (sin.f64 B))))","(+.f64 (*.f64 3 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 5)))) (+.f64 (*.f64 35/2 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 9)))) (+.f64 (*.f64 -15/2 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 7)))) (*.f64 -1 (/.f64 x (*.f64 (sin.f64 B) (pow.f64 F 3)))))))","(fma.f64 3 (/.f64 (/.f64 x (sin.f64 B)) (pow.f64 F 5)) (fma.f64 35/2 (/.f64 x (*.f64 (pow.f64 F 9) (sin.f64 B))) (fma.f64 -15/2 (/.f64 x (*.f64 (pow.f64 F 7) (sin.f64 B))) (neg.f64 (/.f64 x (*.f64 (pow.f64 F 3) (sin.f64 B)))))))","(fma.f64 3 (/.f64 x (*.f64 (pow.f64 F 5) (sin.f64 B))) (fma.f64 35/2 (/.f64 x (*.f64 (pow.f64 F 9) (sin.f64 B))) (fma.f64 (/.f64 (/.f64 x (sin.f64 B)) (pow.f64 F 7)) -15/2 (/.f64 (neg.f64 x) (*.f64 (pow.f64 F 3) (sin.f64 B))))))","(+.f64 (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (/.f64 -1 (pow.f64 F 3)) (/.f64 -15/2 (pow.f64 F 7)))) (*.f64 (/.f64 x (sin.f64 B)) (+.f64 (/.f64 3 (pow.f64 F 5)) (/.f64 35/2 (pow.f64 F 9)))))"]],"stop":[["node limit",1]],"time":42.4130859375,"type":"simplify"},{"compiler":[[39583,13387]],"time":222.096923828125,"type":"eval"},{"alts":[["(-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 1 (sin.f64 B)))","fresh",32.48400036600159],["(+.f64 (fma.f64 F (-.f64 (/.f64 (/.f64 1 F) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))","fresh",32.32668904134165],["(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))))","next",10.858747527385146],["(+.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (tan.f64 B)) -1))) (fma.f64 (/.f64 x (tan.f64 B)) -1 (*.f64 (/.f64 x (tan.f64 B)) -1)))","fresh",34.66457523753008],["(+.f64 (fma.f64 F (-.f64 (/.f64 (pow.f64 (sqrt.f64 (fma.f64 F F 2)) -1) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))","fresh",10.881521257848265],["(+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","fresh",30.782087794442738],["(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 (*.f64 (cos.f64 B) x) (/.f64 1 (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))))","fresh",10.871130046922033],["(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))","fresh",10.949491460163085],["(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))))","fresh",10.900388738311326],["(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 (cos.f64 B) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))","fresh",10.932015166458667],["(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))))","fresh",10.925523845764241]],"compiler":[[17,12],[50,24],[78,42],[54,32],[54,27],[17,12],[78,44],[109,43],[78,40],[91,40],[83,42],[17,12],[50,24],[78,42],[54,32],[54,27],[17,12],[78,44],[109,43],[78,40],[91,40],[83,42]],"count":[[545,11]],"kept":[{"done":[0,0],"fresh":[13,3],"new":[531,8],"picked":[1,0]}],"min-error":[0.00390625],"time":269.574951171875,"type":"prune"},{"compiler":[[347,164]],"locations":[["(sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3)))",5.85127524005986,false],["(sqrt.f64 (/.f64 1 (fma.f64 F F 2)))",17.767991519583067,false],["(fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))",61.098367310456,true],["(fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))",61.31611675000266,true]],"time":67.34912109375,"type":"localize"},{"count":[[2,48]],"series":[["(fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))","B","-inf",0.875],["(fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))","B","inf",0.84619140625],["(fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))","B","0",1.12890625],["(fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))","x","-inf",0.5380859375],["(fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))","x","inf",0.652099609375],["(fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))","x","0",0.996826171875],["(fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))","x","-inf",0.466064453125],["(fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))","x","inf",0.508056640625],["(fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))","x","0",0.52294921875],["(fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))","B","-inf",0.76708984375],["(fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))","B","inf",0.573974609375],["(fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))","B","0",1.550048828125]],"time":9.660888671875,"type":"series"},{"count":[[2,2]],"egraph":[[2,3712,2,0.026941458],[1,286,28,0.0049687080000000005],[0,14,50,0.0003385]],"inputs":[["(fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))","(fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x . 0)))))","((#(struct:change #<rule egg-rr> (2) ((x . 0)))))"]],"rules":[["egg-rr",1],["egg-rr",1]],"stop":[["node limit",1]],"time":43.9560546875,"type":"rewrite"},{"count":[[50,17]],"egraph":[[3,7331,176,0.023340249],[2,1253,176,0.012603083000000001],[1,384,463,0.002852958],[0,124,692,0.000653458]],"inputs":[["(/.f64 (+.f64 (*.f64 -1 x) x) B)","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) B) (/.f64 x B)))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) B) (+.f64 (/.f64 x B) (*.f64 (-.f64 (+.f64 (*.f64 1/24 x) (+.f64 (*.f64 -1/24 x) (+.f64 (*.f64 1/12 x) (*.f64 -7/360 x)))) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))))) (pow.f64 B 3)))))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) B) (+.f64 (/.f64 x B) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/720 x) (+.f64 (*.f64 1/720 x) (+.f64 (*.f64 -1/144 x) (+.f64 (*.f64 7/720 x) (*.f64 -31/15120 x))))) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/24 x) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (+.f64 (*.f64 -1/5040 x) (*.f64 1/120 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (pow.f64 B 5)) (*.f64 (-.f64 (+.f64 (*.f64 1/24 x) (+.f64 (*.f64 -1/24 x) (+.f64 (*.f64 1/12 x) (*.f64 -7/360 x)))) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))))) (pow.f64 B 3))))))","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x))","0","0","0","0","0","0","0","0","0","0","0","0","(*.f64 (-.f64 (+.f64 (*.f64 -1/3 x) (*.f64 -1/6 x)) (*.f64 -1/2 x)) B)","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/3 x) (*.f64 -1/6 x)) (*.f64 -1/2 x)) B) (*.f64 (-.f64 (+.f64 (*.f64 1/120 x) (+.f64 (*.f64 -1/45 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))))) (*.f64 1/24 x)) (pow.f64 B 3)))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/3 x) (*.f64 -1/6 x)) (*.f64 -1/2 x)) B) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/120 x) (+.f64 (*.f64 -1/45 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))))) (*.f64 1/24 x)) (pow.f64 B 3)) (*.f64 (-.f64 (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/24 x) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (+.f64 (*.f64 -2/945 x) (+.f64 (*.f64 -1/5040 x) (*.f64 1/120 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (*.f64 -1/720 x)) (pow.f64 B 5))))","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/3 x) (*.f64 -1/6 x)) (*.f64 -1/2 x)) B) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/120 x) (+.f64 (*.f64 -1/45 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))))) (*.f64 1/24 x)) (pow.f64 B 3)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/4725 x) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 -1/720 x) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/24 x) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (+.f64 (*.f64 -1/5040 x) (*.f64 1/120 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))))))) (+.f64 (*.f64 1/362880 x) (+.f64 (*.f64 -1/5040 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))) (*.f64 1/120 (-.f64 (*.f64 1/24 x) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))))))) (*.f64 1/40320 x)) (pow.f64 B 7)) (*.f64 (-.f64 (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/24 x) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (+.f64 (*.f64 -2/945 x) (+.f64 (*.f64 -1/5040 x) (*.f64 1/120 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (*.f64 -1/720 x)) (pow.f64 B 5)))))","0","0","0","0","0","0","0","0"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 (*.f64 -1 x) x) B)","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) B) (/.f64 x B)))","(fma.f64 -1 (/.f64 x B) (fma.f64 (*.f64 x 0) B (/.f64 x B)))","(-.f64 (fma.f64 B 0 (/.f64 x B)) (/.f64 x B))","(*.f64 0 (/.f64 x B))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) B) (+.f64 (/.f64 x B) (*.f64 (-.f64 (+.f64 (*.f64 1/24 x) (+.f64 (*.f64 -1/24 x) (+.f64 (*.f64 1/12 x) (*.f64 -7/360 x)))) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))))) (pow.f64 B 3)))))","(fma.f64 -1 (/.f64 x B) (fma.f64 (*.f64 x 0) B (/.f64 x B)))","(-.f64 (fma.f64 B 0 (/.f64 x B)) (/.f64 x B))","(*.f64 0 (/.f64 x B))","(+.f64 (*.f64 -1 (/.f64 x B)) (+.f64 (*.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) B) (+.f64 (/.f64 x B) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/720 x) (+.f64 (*.f64 1/720 x) (+.f64 (*.f64 -1/144 x) (+.f64 (*.f64 7/720 x) (*.f64 -31/15120 x))))) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/24 x) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (+.f64 (*.f64 -1/5040 x) (*.f64 1/120 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (pow.f64 B 5)) (*.f64 (-.f64 (+.f64 (*.f64 1/24 x) (+.f64 (*.f64 -1/24 x) (+.f64 (*.f64 1/12 x) (*.f64 -7/360 x)))) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))))) (pow.f64 B 3))))))","(fma.f64 -1 (/.f64 x B) (+.f64 (fma.f64 (*.f64 x 0) B (/.f64 x B)) (fma.f64 (-.f64 (fma.f64 -1/720 x (fma.f64 1/720 x (fma.f64 -1/144 x (*.f64 x 29/3780)))) (fma.f64 -1/6 (-.f64 (*.f64 x 1/24) (fma.f64 1/120 x (*.f64 -1/6 (*.f64 x -1/3)))) (fma.f64 -1/5040 x (*.f64 1/120 (*.f64 x -1/3))))) (pow.f64 B 5) (*.f64 (-.f64 (fma.f64 1/24 x (fma.f64 -1/24 x (*.f64 x 23/360))) (fma.f64 1/120 x (*.f64 -1/6 (*.f64 x -1/3)))) (pow.f64 B 3)))))","(+.f64 (-.f64 (fma.f64 B 0 (/.f64 x B)) (/.f64 x B)) (fma.f64 (+.f64 0 (-.f64 (*.f64 x 11/15120) (fma.f64 -1/6 (-.f64 (*.f64 x 1/30) (*.f64 x 1/18)) (fma.f64 x -1/5040 (*.f64 x -1/360))))) (pow.f64 B 5) (*.f64 (+.f64 (*.f64 x 1/45) (-.f64 (*.f64 x 1/30) (*.f64 x 1/18))) (pow.f64 B 3))))","(+.f64 (*.f64 (-.f64 (fma.f64 x 11/15120 (*.f64 (*.f64 x 1/45) -1/6)) (*.f64 x -1/336)) (pow.f64 B 5)) (*.f64 0 (/.f64 x B)))","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(+.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x)","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (cos.f64 B) (sin.f64 B))) (/.f64 (cos.f64 B) (sin.f64 B))) x))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","(*.f64 (-.f64 (+.f64 (*.f64 -1/3 x) (*.f64 -1/6 x)) (*.f64 -1/2 x)) B)","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/3 x) (*.f64 -1/6 x)) (*.f64 -1/2 x)) B) (*.f64 (-.f64 (+.f64 (*.f64 1/120 x) (+.f64 (*.f64 -1/45 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))))) (*.f64 1/24 x)) (pow.f64 B 3)))","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/3 x) (*.f64 -1/6 x)) (*.f64 -1/2 x)) B) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/120 x) (+.f64 (*.f64 -1/45 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))))) (*.f64 1/24 x)) (pow.f64 B 3)) (*.f64 (-.f64 (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/24 x) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (+.f64 (*.f64 -2/945 x) (+.f64 (*.f64 -1/5040 x) (*.f64 1/120 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (*.f64 -1/720 x)) (pow.f64 B 5))))","(fma.f64 (*.f64 x 0) B (fma.f64 (+.f64 (fma.f64 1/120 x (fma.f64 -1/45 x (*.f64 -1/6 (*.f64 x -1/3)))) (*.f64 x -1/24)) (pow.f64 B 3) (*.f64 (pow.f64 B 5) (+.f64 (fma.f64 -1/6 (-.f64 (*.f64 x 1/24) (fma.f64 1/120 x (*.f64 -1/6 (*.f64 x -1/3)))) (fma.f64 -2/945 x (fma.f64 -1/5040 x (*.f64 1/120 (*.f64 x -1/3))))) (*.f64 x 1/720)))))","(fma.f64 B 0 (fma.f64 (pow.f64 B 5) (fma.f64 -1/6 (-.f64 (*.f64 x 1/30) (*.f64 x 1/18)) (+.f64 (+.f64 (*.f64 x -1/360) (*.f64 x -1/432)) (*.f64 x 1/720))) (*.f64 (pow.f64 B 3) (+.f64 (*.f64 x -1/24) (+.f64 (*.f64 x 1/18) (*.f64 x -1/72))))))","(fma.f64 (pow.f64 B 5) (fma.f64 x 1/720 (fma.f64 -1/6 (*.f64 x -1/45) (*.f64 x -11/2160))) 0)","(+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/3 x) (*.f64 -1/6 x)) (*.f64 -1/2 x)) B) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/120 x) (+.f64 (*.f64 -1/45 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))))) (*.f64 1/24 x)) (pow.f64 B 3)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 -1/4725 x) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 -1/720 x) (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/24 x) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (+.f64 (*.f64 -1/5040 x) (*.f64 1/120 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))))))) (+.f64 (*.f64 1/362880 x) (+.f64 (*.f64 -1/5040 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x))) (*.f64 1/120 (-.f64 (*.f64 1/24 x) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))))))) (*.f64 1/40320 x)) (pow.f64 B 7)) (*.f64 (-.f64 (+.f64 (*.f64 -1/6 (-.f64 (*.f64 1/24 x) (+.f64 (*.f64 1/120 x) (*.f64 -1/6 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (+.f64 (*.f64 -2/945 x) (+.f64 (*.f64 -1/5040 x) (*.f64 1/120 (-.f64 (*.f64 -1/2 x) (*.f64 -1/6 x)))))) (*.f64 -1/720 x)) (pow.f64 B 5)))))","(fma.f64 (*.f64 x 0) B (fma.f64 (+.f64 (fma.f64 1/120 x (fma.f64 -1/45 x (*.f64 -1/6 (*.f64 x -1/3)))) (*.f64 x -1/24)) (pow.f64 B 3) (fma.f64 (+.f64 (fma.f64 -1/4725 x (fma.f64 -1/6 (-.f64 (*.f64 x -1/720) (fma.f64 -1/6 (-.f64 (*.f64 x 1/24) (fma.f64 1/120 x (*.f64 -1/6 (*.f64 x -1/3)))) (fma.f64 -1/5040 x (*.f64 1/120 (*.f64 x -1/3))))) (fma.f64 1/362880 x (fma.f64 -1/5040 (*.f64 x -1/3) (*.f64 1/120 (-.f64 (*.f64 x 1/24) (fma.f64 1/120 x (*.f64 -1/6 (*.f64 x -1/3))))))))) (*.f64 -1/40320 x)) (pow.f64 B 7) (*.f64 (pow.f64 B 5) (+.f64 (fma.f64 -1/6 (-.f64 (*.f64 x 1/24) (fma.f64 1/120 x (*.f64 -1/6 (*.f64 x -1/3)))) (fma.f64 -2/945 x (fma.f64 -1/5040 x (*.f64 1/120 (*.f64 x -1/3))))) (*.f64 x 1/720))))))","(fma.f64 B 0 (fma.f64 (pow.f64 B 3) (+.f64 (*.f64 x -1/24) (+.f64 (*.f64 x 1/18) (*.f64 x -1/72))) (fma.f64 (fma.f64 x -1/4725 (+.f64 (fma.f64 -1/6 (-.f64 (*.f64 x -1/720) (fma.f64 -1/6 (-.f64 (*.f64 x 1/30) (*.f64 x 1/18)) (fma.f64 x -1/5040 (*.f64 x -1/360)))) (fma.f64 x 1/362880 (fma.f64 1/120 (-.f64 (*.f64 x 1/30) (*.f64 x 1/18)) (*.f64 x 1/15120)))) (*.f64 x -1/40320))) (pow.f64 B 7) (*.f64 (pow.f64 B 5) (fma.f64 -1/6 (-.f64 (*.f64 x 1/30) (*.f64 x 1/18)) (+.f64 (+.f64 (*.f64 x -1/360) (*.f64 x -1/432)) (*.f64 x 1/720)))))))","(fma.f64 (+.f64 (fma.f64 -1/6 (-.f64 (*.f64 x -1/720) (fma.f64 -1/6 (*.f64 x -1/45) (*.f64 x -1/336))) (fma.f64 1/120 (*.f64 x -1/45) (*.f64 x 5/72576))) (*.f64 x -143/604800)) (pow.f64 B 7) (fma.f64 (pow.f64 B 5) (fma.f64 x 1/720 (fma.f64 -1/6 (*.f64 x -1/45) (*.f64 x -11/2160))) 0))","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)","0","(/.f64 (*.f64 0 x) B)","(/.f64 0 B)"]],"stop":[["node limit",1]],"time":40.718017578125,"type":"simplify"},{"compiler":[[10761,5208]],"time":77.18798828125,"type":"eval"},{"alts":[["(-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 1 (sin.f64 B)))","fresh",32.48400036600159],["(+.f64 (fma.f64 F (-.f64 (/.f64 (/.f64 1 F) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))","fresh",32.32668904134165],["(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))))","done",10.858747527385146],["(+.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (tan.f64 B)) -1))) (fma.f64 (/.f64 x (tan.f64 B)) -1 (*.f64 (/.f64 x (tan.f64 B)) -1)))","fresh",34.66457523753008],["(+.f64 (fma.f64 F (-.f64 (/.f64 (pow.f64 (sqrt.f64 (fma.f64 F F 2)) -1) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))","fresh",10.881521257848265],["(+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","fresh",30.782087794442738],["(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 (*.f64 (cos.f64 B) x) (/.f64 1 (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))))","fresh",10.871130046922033],["(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))","fresh",10.949491460163085],["(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))))","fresh",10.900388738311326],["(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 (cos.f64 B) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))","fresh",10.932015166458667],["(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))))","fresh",10.925523845764241]],"compiler":[[17,12],[50,24],[78,42],[54,32],[54,27],[17,12],[78,44],[109,43],[78,40],[91,40],[83,42]],"count":[[142,11]],"kept":[{"done":[0,0],"fresh":[10,10],"new":[131,0],"picked":[1,1]}],"min-error":[0.00390625],"time":34.423828125,"type":"prune"},{"accuracy":[0.162441259768442],"baseline":[10.843416228542939],"branch":[["F",0.162441259768442,3],["B",10.843416228542937,1],["x",10.84341622854294,1],["(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))",7.2277919940399515,4]],"compiler":[[4,3],[4,3],[4,3],[30,23],[1459,581]],"count":[[30,3]],"inputs":[["(+.f64 (fma.f64 F (-.f64 (/.f64 (/.f64 1 F) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))","(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))))","(+.f64 (fma.f64 F (-.f64 (/.f64 (pow.f64 (sqrt.f64 (fma.f64 F F 2)) -1) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))","(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 (*.f64 (cos.f64 B) x) (/.f64 1 (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))))","(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))) 2) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B))) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2) (*.f64 (*.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) (cos.f64 B)) (pow.f64 (cbrt.f64 (/.f64 x (sin.f64 B))) 2)))))","(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 1 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))))","(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 (cos.f64 B) (/.f64 x (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))","(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))))","(+.f64 (fma.f64 F (-.f64 (/.f64 (sqrt.f64 (/.f64 1 (fma.f64 F F 2))) (sin.f64 B)) (*.f64 (/.f64 x (sin.f64 B)) (sqrt.f64 (/.f64 1 (pow.f64 (fma.f64 F F 2) 3))))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))","(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))","(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))) (fma.f64 (neg.f64 (/.f64 x (sin.f64 B))) (/.f64 (cos.f64 B) 1) (*.f64 (/.f64 x (sin.f64 B)) (/.f64 (cos.f64 B) 1)))))","(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (expm1.f64 (log1p.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)))) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))","(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 x (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))) (fma.f64 (neg.f64 (/.f64 1 (sin.f64 B))) (*.f64 (cos.f64 B) x) (*.f64 (/.f64 1 (sin.f64 B)) (*.f64 (cos.f64 B) x)))))","(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 (*.f64 (cos.f64 B) x) (/.f64 1 (sin.f64 B)) (neg.f64 (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))) (fma.f64 (neg.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B))) x (*.f64 (*.f64 (/.f64 1 (sin.f64 B)) (cos.f64 B)) x))))","(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (/.f64 1 F)) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))","(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (/.f64 (cos.f64 B) (/.f64 (sin.f64 B) x)))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))","(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (+.f64 (fma.f64 (*.f64 (/.f64 x (sin.f64 B)) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)) (cbrt.f64 (cos.f64 B)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2) (*.f64 (*.f64 (cbrt.f64 (cos.f64 B)) (/.f64 x (sin.f64 B))) (pow.f64 (cbrt.f64 (cos.f64 B)) 2)))))","(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B))))) (fma.f64 (neg.f64 (cos.f64 B)) (/.f64 x (sin.f64 B)) (*.f64 (cos.f64 B) (/.f64 x (sin.f64 B)))))","(fma.f64 (/.f64 F (sin.f64 B)) (/.f64 1 F) (/.f64 (neg.f64 x) (tan.f64 B)))","(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (*.f64 x (/.f64 1 (neg.f64 (tan.f64 B)))))","(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (pow.f64 (/.f64 (cos.f64 B) (sin.f64 B)) -1)))","(+.f64 (fma.f64 F (*.f64 (/.f64 1 (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 x) (tan.f64 B))) (/.f64 (cbrt.f64 (*.f64 x x)) 1) (*.f64 (/.f64 (cbrt.f64 x) (tan.f64 B)) (/.f64 (cbrt.f64 (*.f64 x x)) 1))))","(+.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (sqrt.f64 (*.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 F (sin.f64 B)))) (neg.f64 (*.f64 (/.f64 x (tan.f64 B)) -1))) (fma.f64 (/.f64 x (tan.f64 B)) -1 (*.f64 (/.f64 x (tan.f64 B)) -1)))","(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (/.f64 (pow.f64 (cbrt.f64 (sin.f64 B)) 2) (/.f64 (cos.f64 B) (cbrt.f64 (sin.f64 B))))))","(fma.f64 (/.f64 F (sin.f64 B)) (expm1.f64 (log1p.f64 (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2))) (/.f64 (neg.f64 x) (tan.f64 B)))","(-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 1 (sin.f64 B)))","(+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))","(+.f64 (fma.f64 (cbrt.f64 (pow.f64 (/.f64 F (sin.f64 B)) 2)) (*.f64 (cbrt.f64 (/.f64 F (sin.f64 B))) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2)) (neg.f64 (*.f64 (/.f64 x (tan.f64 B)) -1))) (fma.f64 (/.f64 x (tan.f64 B)) -1 (*.f64 (/.f64 x (tan.f64 B)) -1)))","(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))"]],"link":["."],"name":["VandenBroeck and Keller, Equation (23)"],"oracle":[61.64913504500029],"outputs":[["(-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 1 (sin.f64 B)))","(fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B)))","(+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))"]],"time":100.10009765625,"times":[["F",25.116943359375],["B",9.05712890625],["x",9.089111328125],["(+.f64 (neg.f64 (*.f64 x (/.f64 1 (tan.f64 B)))) (*.f64 (/.f64 F (sin.f64 B)) (pow.f64 (+.f64 (+.f64 (*.f64 F F) 2) (*.f64 2 x)) (neg.f64 (/.f64 1 2)))))",35.759033203125]],"type":"regimes"},{"bstep":[[4039657310128.013,434181327160327.8,272.927978515625],[-1.230377030264496e+33,-2035648614836337700.0,396.72900390625]],"compiler":[[18,13],[23,16],[18,13],[23,16],[18,13],[23,16],[18,13],[23,16],[18,13],[23,16],[18,13],[23,16],[18,13],[23,16],[23,16],[18,13],[23,16],[18,13],[23,16],[18,13],[23,16],[18,13],[23,16],[18,13],[23,16],[18,13],[23,16],[18,13],[23,16],[18,13],[23,16],[18,13],[23,16],[18,13],[32,25],[4,3]],"method":["binary-search","binary-search"],"time":670.219970703125,"type":"bsearch"},{"compiler":[[54,30]],"egraph":[[6,90,78,0.0006807070000000001],[5,89,78,0.0005694160000000001],[4,85,78,0.00045554100000000006],[3,76,78,0.00034258300000000004],[2,58,78,0.00023295800000000001],[1,43,80,0.000139958],[0,31,82,6.0958e-5]],"inputs":[["(if (<=.f64 F -2050000000000000000) (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 1 (sin.f64 B))) (if (<=.f64 F 4100000000000) (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) (+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 F -2050000000000000000) (-.f64 (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 1 (sin.f64 B))) (if (<=.f64 F 4100000000000) (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) (+.f64 (/.f64 1 (sin.f64 B)) (*.f64 -1 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))))))","(if (<=.f64 F -2050000000000000000) (-.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 1 (sin.f64 B))) (if (<=.f64 F 4100000000000) (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) (+.f64 (neg.f64 (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (/.f64 1 (sin.f64 B)))))","(if (<=.f64 F -2050000000000000000) (+.f64 (/.f64 (neg.f64 (*.f64 (cos.f64 B) x)) (sin.f64 B)) (/.f64 -1 (sin.f64 B))) (if (<=.f64 F 4100000000000) (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) (-.f64 (/.f64 1 (sin.f64 B)) (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))","(if (<=.f64 F -2050000000000000000) (-.f64 (/.f64 -1 (sin.f64 B)) (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B))) (if (<=.f64 F 4100000000000) (fma.f64 (/.f64 F (sin.f64 B)) (pow.f64 (fma.f64 x 2 (fma.f64 F F 2)) -1/2) (/.f64 (neg.f64 x) (tan.f64 B))) (-.f64 (/.f64 1 (sin.f64 B)) (/.f64 (*.f64 (cos.f64 B) x) (sin.f64 B)))))"]],"stop":[["fuel",1],["saturated",1]],"time":10.52001953125,"type":"simplify"},{"time":0.02392578125,"type":"soundness"},{"compiler":[[54,30]],"remove-preprocessing":[[]],"time":17.0400390625,"type":"end"}]