[{"compiler":[[22,14]],"method":["search"],"sampling":[[12,0.0,0.9970738864512326,0.002926113548767373],[11,0.0,0.9970738864512326,0.002926113548767373],[10,0.0,0.9970738864512326,0.002926113548767373],[9,0.0,0.9970738864512326,0.002926113548767373],[8,0.0,0.9970738864512326,0.002926113548767373],[7,0.0,0.9970738864512326,0.002926113548767373],[6,0.0,0.9970738864512326,0.002926113548767373],[5,0.0,0.9970738864512326,0.002926113548767373],[4,0.0,0.9970738864512326,0.002926113548767373],[3,0.0,0.9970738864512326,0.002926113548767373],[2,0.0,0.9970738864512326,0.002926113548767373],[1,0.0,0.9970738864512326,0.002926113548767373],[0,0.0,0.9970738864512326,0.002926113548767373]],"time":200.4521484375,"type":"analyze"},{"outcomes":[["body",256,"invalid",243.044921875,4098],["body",256,"valid",492.666015625,8256]],"time":747.43798828125,"type":"sample"},{"compiler":[[21,13]],"egraph":[[0,6,6,2.958e-6],[8,2483,208,0.025488749999999998],[7,2483,208,0.021289166999999998],[6,1939,208,0.017518291999999998],[5,1939,236,0.013481749999999999],[4,1917,236,0.010382042],[3,1763,236,0.007133291999999999],[2,793,236,0.003837709],[1,257,254,0.001226042],[0,86,352,0.000310125]],"inputs":[["0","1","2","3","4","5"],["(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (*.f64 (*.f64 a z) b))","(+.f64 (+.f64 (+.f64 y (*.f64 x z)) (*.f64 t a)) (*.f64 (*.f64 a z) b))","(+.f64 (+.f64 (+.f64 z (*.f64 y x)) (*.f64 t a)) (*.f64 (*.f64 a x) b))","(+.f64 (+.f64 (+.f64 t (*.f64 y z)) (*.f64 x a)) (*.f64 (*.f64 a z) b))","(+.f64 (+.f64 (+.f64 a (*.f64 y z)) (*.f64 t x)) (*.f64 (*.f64 x z) b))","(+.f64 (+.f64 (+.f64 b (*.f64 y z)) (*.f64 t a)) (*.f64 (*.f64 a z) x))","(+.f64 (+.f64 (+.f64 x (*.f64 z y)) (*.f64 t a)) (*.f64 (*.f64 a y) b))","(+.f64 (+.f64 (+.f64 x (*.f64 t z)) (*.f64 y a)) (*.f64 (*.f64 a z) b))","(+.f64 (+.f64 (+.f64 x (*.f64 a z)) (*.f64 t y)) (*.f64 (*.f64 y z) b))","(+.f64 (+.f64 (+.f64 x (*.f64 b z)) (*.f64 t a)) (*.f64 (*.f64 a z) y))","(+.f64 (+.f64 (+.f64 x (*.f64 y t)) (*.f64 z a)) (*.f64 (*.f64 a t) b))","(+.f64 (+.f64 (+.f64 x (*.f64 y a)) (*.f64 t z)) (*.f64 (*.f64 z a) b))","(+.f64 (+.f64 (+.f64 x (*.f64 y b)) (*.f64 t a)) (*.f64 (*.f64 a b) z))","(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 a t)) (*.f64 (*.f64 t z) b))","(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 b a)) (*.f64 (*.f64 a z) t))","(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t b)) (*.f64 (*.f64 b z) a))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","4","5"],["(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (*.f64 (*.f64 a z) b))","(+.f64 (+.f64 x (*.f64 y z)) (+.f64 (*.f64 t a) (*.f64 a (*.f64 z b))))","(fma.f64 z (*.f64 a b) (fma.f64 t a (fma.f64 y z x)))","(fma.f64 a (+.f64 t (*.f64 z b)) (fma.f64 y z x))","(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","(+.f64 (+.f64 (+.f64 y (*.f64 x z)) (*.f64 t a)) (*.f64 (*.f64 a z) b))","(+.f64 (+.f64 y (*.f64 x z)) (+.f64 (*.f64 t a) (*.f64 a (*.f64 z b))))","(fma.f64 z (*.f64 a b) (fma.f64 t a (fma.f64 x z y)))","(fma.f64 a (+.f64 t (*.f64 z b)) (fma.f64 x z y))","(+.f64 (fma.f64 t a y) (*.f64 z (fma.f64 a b x)))","(fma.f64 x z (fma.f64 a (fma.f64 z b t) y))","(+.f64 (+.f64 (+.f64 z (*.f64 y x)) (*.f64 t a)) (*.f64 (*.f64 a x) b))","(+.f64 (+.f64 z (*.f64 x y)) (+.f64 (*.f64 t a) (*.f64 a (*.f64 x b))))","(fma.f64 a (*.f64 x b) (fma.f64 t a (fma.f64 x y z)))","(fma.f64 a (+.f64 t (*.f64 x b)) (fma.f64 x y z))","(fma.f64 x y (fma.f64 a (fma.f64 x b t) z))","(+.f64 (+.f64 (+.f64 t (*.f64 y z)) (*.f64 x a)) (*.f64 (*.f64 a z) b))","(+.f64 (*.f64 a (*.f64 z b)) (+.f64 t (+.f64 (*.f64 y z) (*.f64 x a))))","(+.f64 (fma.f64 y z t) (*.f64 a (fma.f64 z b x)))","(fma.f64 a (fma.f64 z b x) (fma.f64 y z t))","(fma.f64 x a (fma.f64 z (fma.f64 a b y) t))","(+.f64 (+.f64 (+.f64 a (*.f64 y z)) (*.f64 t x)) (*.f64 (*.f64 x z) b))","(+.f64 (+.f64 (*.f64 y z) a) (+.f64 (*.f64 x t) (*.f64 x (*.f64 z b))))","(fma.f64 x (*.f64 z b) (fma.f64 x t (fma.f64 y z a)))","(fma.f64 x (+.f64 t (*.f64 z b)) (fma.f64 y z a))","(fma.f64 x (fma.f64 z b t) (fma.f64 y z a))","(+.f64 (+.f64 (+.f64 b (*.f64 y z)) (*.f64 t a)) (*.f64 (*.f64 a z) x))","(+.f64 (+.f64 b (+.f64 (*.f64 y z) (*.f64 t a))) (*.f64 x (*.f64 z a)))","(fma.f64 x (*.f64 z a) (fma.f64 t a (fma.f64 y z b)))","(fma.f64 a (+.f64 t (*.f64 x z)) (fma.f64 y z b))","(fma.f64 y z (fma.f64 a (fma.f64 x z t) b))","(+.f64 (+.f64 (+.f64 x (*.f64 z y)) (*.f64 t a)) (*.f64 (*.f64 a y) b))","(+.f64 (+.f64 x (*.f64 y z)) (+.f64 (*.f64 t a) (*.f64 b (*.f64 y a))))","(fma.f64 a (*.f64 y b) (fma.f64 t a (fma.f64 y z x)))","(fma.f64 a (+.f64 t (*.f64 y b)) (fma.f64 y z x))","(fma.f64 y z (fma.f64 a (fma.f64 y b t) x))","(+.f64 (+.f64 (+.f64 x (*.f64 t z)) (*.f64 y a)) (*.f64 (*.f64 a z) b))","(+.f64 (*.f64 a (*.f64 z b)) (+.f64 x (+.f64 (*.f64 z t) (*.f64 y a))))","(fma.f64 z (*.f64 a b) (fma.f64 z t (fma.f64 y a x)))","(fma.f64 z (+.f64 t (*.f64 a b)) (fma.f64 y a x))","(fma.f64 y a (fma.f64 z (fma.f64 a b t) x))","(+.f64 (+.f64 (+.f64 x (*.f64 a z)) (*.f64 t y)) (*.f64 (*.f64 y z) b))","(+.f64 (+.f64 x (+.f64 (*.f64 z a) (*.f64 y t))) (*.f64 y (*.f64 z b)))","(fma.f64 y (*.f64 z b) (fma.f64 y t (fma.f64 z a x)))","(fma.f64 y (+.f64 t (*.f64 z b)) (fma.f64 z a x))","(fma.f64 y t (fma.f64 z (fma.f64 y b a) x))","(+.f64 (+.f64 (+.f64 x (*.f64 b z)) (*.f64 t a)) (*.f64 (*.f64 a z) y))","(+.f64 (+.f64 x (*.f64 z b)) (+.f64 (*.f64 t a) (*.f64 y (*.f64 z a))))","(+.f64 (fma.f64 z b x) (*.f64 a (fma.f64 y z t)))","(fma.f64 a (fma.f64 y z t) (fma.f64 z b x))","(fma.f64 t a (fma.f64 z (fma.f64 y a b) x))","(+.f64 (+.f64 (+.f64 x (*.f64 y t)) (*.f64 z a)) (*.f64 (*.f64 a t) b))","(+.f64 (+.f64 x (*.f64 y t)) (+.f64 (*.f64 z a) (*.f64 (*.f64 t a) b)))","(fma.f64 a (*.f64 t b) (fma.f64 y t (fma.f64 z a x)))","(fma.f64 a (+.f64 z (*.f64 t b)) (fma.f64 y t x))","(fma.f64 z a (fma.f64 t (fma.f64 a b y) x))","(+.f64 (+.f64 (+.f64 x (*.f64 y a)) (*.f64 t z)) (*.f64 (*.f64 z a) b))","(+.f64 (*.f64 a (*.f64 z b)) (+.f64 x (+.f64 (*.f64 z t) (*.f64 y a))))","(fma.f64 z (*.f64 a b) (fma.f64 z t (fma.f64 y a x)))","(fma.f64 z (+.f64 t (*.f64 a b)) (fma.f64 y a x))","(fma.f64 y a (fma.f64 z (fma.f64 a b t) x))","(+.f64 (+.f64 (+.f64 x (*.f64 y b)) (*.f64 t a)) (*.f64 (*.f64 a b) z))","(+.f64 (*.f64 a (*.f64 z b)) (+.f64 x (+.f64 (*.f64 y b) (*.f64 t a))))","(fma.f64 z (*.f64 a b) (fma.f64 t a (fma.f64 y b x)))","(fma.f64 a (+.f64 t (*.f64 z b)) (fma.f64 y b x))","(fma.f64 a (fma.f64 z b t) (fma.f64 y b x))","(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 a t)) (*.f64 (*.f64 t z) b))","(+.f64 (+.f64 x (*.f64 y z)) (+.f64 (*.f64 t a) (*.f64 t (*.f64 z b))))","(fma.f64 t (*.f64 z b) (fma.f64 t a (fma.f64 y z x)))","(fma.f64 t (+.f64 a (*.f64 z b)) (fma.f64 y z x))","(fma.f64 y z (fma.f64 t (fma.f64 z b a) x))","(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 b a)) (*.f64 (*.f64 a z) t))","(+.f64 (+.f64 x (*.f64 y z)) (+.f64 (*.f64 a b) (*.f64 t (*.f64 z a))))","(fma.f64 t (*.f64 z a) (fma.f64 a b (fma.f64 y z x)))","(fma.f64 a (+.f64 b (*.f64 z t)) (fma.f64 y z x))","(fma.f64 y z (fma.f64 a (fma.f64 z t b) x))","(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t b)) (*.f64 (*.f64 b z) a))","(+.f64 (+.f64 x (*.f64 y z)) (+.f64 (*.f64 t b) (*.f64 a (*.f64 z b))))","(fma.f64 z (*.f64 a b) (fma.f64 t b (fma.f64 y z x)))","(fma.f64 b (+.f64 t (*.f64 z a)) (fma.f64 y z x))","(fma.f64 z (fma.f64 a b y) (fma.f64 t b x))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":53.2080078125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[6,206,13,0.001802416],[5,203,13,0.001458375],[4,191,13,0.0011054580000000001],[3,148,13,0.000751833],[2,69,15,0.000420916],[1,27,16,0.000155916],[0,14,22,5.2583e-5]],"inputs":[["(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (*.f64 (*.f64 a z) b))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (*.f64 (*.f64 a z) b))","(+.f64 (+.f64 x (*.f64 y z)) (+.f64 (*.f64 t a) (*.f64 a (*.f64 z b))))","(fma.f64 a (*.f64 z b) (fma.f64 t a (fma.f64 y z x)))","(fma.f64 a (+.f64 t (*.f64 z b)) (fma.f64 y z x))","(fma.f64 y z (fma.f64 a (fma.f64 z b t) x))","(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))"]],"stop":[["saturated",1]],"time":12.219970703125,"type":"simplify"},{"compiler":[[31,16]],"time":0.37890625,"type":"eval"},{"alts":[["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","fresh",2.8046875],["(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (*.f64 (*.f64 a z) b))","next",2.287480354339564]],"compiler":[[16,9],[21,13],[16,9],[21,13]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.03125],"time":1.39990234375,"type":"prune"},{"compiler":[[55,13]],"locations":[["(+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a))",0.0078125,true],["(*.f64 (*.f64 a z) b)",6.199706603781233,true]],"time":9.363037109375,"type":"localize"},{"count":[[2,96]],"series":[["(+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a))","a","-inf",0.22607421875],["(+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a))","a","inf",0.27783203125],["(+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a))","a","0",0.277099609375],["(+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a))","t","-inf",0.2529296875],["(+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a))","t","inf",0.285888671875],["(+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a))","t","0",0.285888671875],["(+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a))","z","-inf",0.238037109375],["(+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a))","z","inf",0.284912109375],["(+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a))","z","0",0.23291015625],["(+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a))","y","-inf",0.255859375],["(+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a))","y","inf",0.2861328125],["(+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a))","y","0",0.233154296875],["(+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a))","x","-inf",0.214111328125],["(+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a))","x","inf",0.25390625],["(+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a))","x","0",0.3388671875],["(*.f64 (*.f64 a z) b)","b","-inf",0.31201171875],["(*.f64 (*.f64 a z) b)","b","inf",0.739013671875],["(*.f64 (*.f64 a z) b)","b","0",0.427001953125],["(*.f64 (*.f64 a z) b)","z","-inf",0.322021484375],["(*.f64 (*.f64 a z) b)","z","inf",0.43994140625],["(*.f64 (*.f64 a z) b)","z","0",0.60791015625],["(*.f64 (*.f64 a z) b)","a","-inf",0.2939453125],["(*.f64 (*.f64 a z) b)","a","inf",0.419921875],["(*.f64 (*.f64 a z) b)","a","0",0.55810546875]],"time":8.339111328125,"type":"series"},{"count":[[2,116]],"egraph":[[2,3955,16,0.030437291],[1,279,16,0.005204249],[0,13,20,0.000260958]],"inputs":[["(*.f64 (*.f64 a z) b)","(+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 a (*.f64 z b)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 b) (*.f64 a z))) (cbrt.f64 (pow.f64 (exp.f64 b) (*.f64 a z))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 b) (*.f64 a z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 b) (*.f64 a z)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 b) (*.f64 a z)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 a (*.f64 z b)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (*.f64 z b)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (*.f64 z b)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (*.f64 z b))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 a (*.f64 z b))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 a z) 3) (pow.f64 b 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 b 3) (pow.f64 (*.f64 a z) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 a (*.f64 z b)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 b) (*.f64 a z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 a (*.f64 z b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (*.f64 z b)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 a z) 3) (pow.f64 b 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 b 3) (pow.f64 (*.f64 a z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 a (*.f64 z b))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 a (*.f64 z b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 a (*.f64 z b))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 a (*.f64 z b))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 a t (fma.f64 z y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (fma.f64 z y x) 2) (-.f64 (fma.f64 z y x) (*.f64 a t))) (/.f64 (pow.f64 (*.f64 a t) 2) (-.f64 (fma.f64 z y x) (*.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 a t (fma.f64 z y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 a t (fma.f64 z y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 a t (fma.f64 z y x))) (pow.f64 (cbrt.f64 (fma.f64 a t (fma.f64 z y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 a t (fma.f64 z y x))) 2) (cbrt.f64 (fma.f64 a t (fma.f64 z y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 a t (fma.f64 z y x))) (sqrt.f64 (fma.f64 a t (fma.f64 z y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (fma.f64 z y x) 3) (pow.f64 (*.f64 a t) 3)) (/.f64 1 (fma.f64 (*.f64 a t) (-.f64 (*.f64 a t) (fma.f64 z y x)) (pow.f64 (fma.f64 z y x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (fma.f64 z y x) 2) (pow.f64 (*.f64 a t) 2)) (/.f64 1 (-.f64 (fma.f64 z y x) (*.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 a t) (-.f64 (*.f64 a t) (fma.f64 z y x)) (pow.f64 (fma.f64 z y x) 2)) (+.f64 (pow.f64 (fma.f64 z y x) 3) (pow.f64 (*.f64 a t) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (fma.f64 z y x) (*.f64 a t)) (-.f64 (pow.f64 (fma.f64 z y x) 2) (pow.f64 (*.f64 a t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 z y x) 3) (pow.f64 (*.f64 a t) 3)) (fma.f64 (*.f64 a t) (-.f64 (*.f64 a t) (fma.f64 z y x)) (pow.f64 (fma.f64 z y x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 z y x) 3) (pow.f64 (*.f64 a t) 3)) (+.f64 (pow.f64 (*.f64 a t) 2) (-.f64 (pow.f64 (fma.f64 z y x) 2) (*.f64 (fma.f64 z y x) (*.f64 a t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (fma.f64 z y x) 2) (pow.f64 (*.f64 a t) 2)) (-.f64 (fma.f64 z y x) (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 z y x) 3) (pow.f64 (*.f64 a t) 3))) (neg.f64 (fma.f64 (*.f64 a t) (-.f64 (*.f64 a t) (fma.f64 z y x)) (pow.f64 (fma.f64 z y x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 z y x) 2) (pow.f64 (*.f64 a t) 2))) (neg.f64 (-.f64 (fma.f64 z y x) (*.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (fma.f64 a t (*.f64 z y)) 3)) (fma.f64 x x (-.f64 (*.f64 (fma.f64 a t (*.f64 z y)) (fma.f64 a t (*.f64 z y))) (*.f64 x (fma.f64 a t (*.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (*.f64 (fma.f64 a t (*.f64 z y)) (fma.f64 a t (*.f64 z y)))) (-.f64 x (fma.f64 a t (*.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 a t) 2) (pow.f64 (fma.f64 z y x) 2)) (-.f64 (*.f64 a t) (fma.f64 z y x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 a t (fma.f64 z y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a t (fma.f64 z y x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 a t (fma.f64 z y x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 a t (fma.f64 z y x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (*.f64 a t) (-.f64 (*.f64 a t) (fma.f64 z y x)) (pow.f64 (fma.f64 z y x) 2)) (+.f64 (pow.f64 (fma.f64 z y x) 3) (pow.f64 (*.f64 a t) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (fma.f64 z y x) (*.f64 a t)) (-.f64 (pow.f64 (fma.f64 z y x) 2) (pow.f64 (*.f64 a t) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 a t (fma.f64 z y x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 a t (fma.f64 z y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 a t (fma.f64 z y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (fma.f64 a t (*.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (*.f64 (pow.f64 (exp.f64 y) z) (pow.f64 (exp.f64 t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (*.f64 (pow.f64 (exp.f64 y) z) (pow.f64 (exp.f64 t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 z y x))) (pow.f64 (exp.f64 t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 z y x)) (+.f64 1 (expm1.f64 (*.f64 a t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 z y x))) (+.f64 1 (expm1.f64 (*.f64 a t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 a t))) (exp.f64 (fma.f64 z y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 t) a) (+.f64 1 (expm1.f64 (fma.f64 z y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 a t))) (+.f64 1 (expm1.f64 (fma.f64 z y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 a t (*.f64 z y))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 y) z) (pow.f64 (exp.f64 t) a)) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 a t (*.f64 z y))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 y) z) (pow.f64 (exp.f64 t) a)) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 a t (fma.f64 z y x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 a t (fma.f64 z y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 a t (fma.f64 z y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 a t (fma.f64 z y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 a t (fma.f64 z y x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a t (fma.f64 z y x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z y (+.f64 x (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (fma.f64 a t (*.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (fma.f64 a t (*.f64 z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y z (+.f64 x (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z y) 1 (+.f64 x (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 z y x) 1 (*.f64 a t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t a (fma.f64 z y x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a t) 1 (fma.f64 z y x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (fma.f64 a t (*.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (fma.f64 a t (*.f64 z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z y) (+.f64 x (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 z y x) (*.f64 a t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a t) (fma.f64 z y x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 a t (*.f64 z y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 t t)) (*.f64 (cbrt.f64 t) a) (fma.f64 z y x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 y) 2) (*.f64 (cbrt.f64 y) z) (+.f64 x (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 a) 2) (*.f64 (cbrt.f64 a) t) (fma.f64 z y x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 a t)) (pow.f64 (cbrt.f64 (*.f64 a t)) 2) (fma.f64 z y x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 a t)) 2) (cbrt.f64 (*.f64 a t)) (fma.f64 z y x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z y)) (pow.f64 (cbrt.f64 (*.f64 z y)) 2) (+.f64 x (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 z y)) 2) (cbrt.f64 (*.f64 z y)) (+.f64 x (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) y) (+.f64 x (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 z y x)) (pow.f64 (cbrt.f64 (fma.f64 z y x)) 2) (*.f64 a t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 z y x)) 2) (cbrt.f64 (fma.f64 z y x)) (*.f64 a t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (fma.f64 a t (*.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 (fma.f64 a t (*.f64 z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (fma.f64 a t (*.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 (fma.f64 a t (*.f64 z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 t) (*.f64 (sqrt.f64 t) a) (fma.f64 z y x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) z) (+.f64 x (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 a) (*.f64 (sqrt.f64 a) t) (fma.f64 z y x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 a t)) (sqrt.f64 (*.f64 a t)) (fma.f64 z y x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 z y)) (sqrt.f64 (*.f64 z y)) (+.f64 x (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) y) (+.f64 x (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 z y x)) (sqrt.f64 (fma.f64 z y x)) (*.f64 a t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (fma.f64 a t (*.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (fma.f64 a t (*.f64 z y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 x 3) (pow.f64 (*.f64 z y) 3)) (/.f64 1 (fma.f64 (*.f64 z y) (-.f64 (*.f64 z y) x) (*.f64 x x))) (*.f64 a t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 x x) (pow.f64 (*.f64 z y) 2)) (/.f64 1 (-.f64 x (*.f64 z y))) (*.f64 a t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (fma.f64 a t (*.f64 z y))) (cbrt.f64 (fma.f64 a t (*.f64 z y)))) (cbrt.f64 (fma.f64 a t (*.f64 z y))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 a t (*.f64 z y))) (sqrt.f64 (fma.f64 a t (*.f64 z y))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (cbrt.f64 (*.f64 t t))) (cbrt.f64 t) (fma.f64 z y x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 a (sqrt.f64 t)) (sqrt.f64 t) (fma.f64 z y x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (pow.f64 (cbrt.f64 a) 2)) (cbrt.f64 a) (fma.f64 z y x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (sqrt.f64 a)) (sqrt.f64 a) (fma.f64 z y x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 y) (+.f64 x (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (sqrt.f64 y)) (sqrt.f64 y) (+.f64 x (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (+.f64 x (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (sqrt.f64 z)) (sqrt.f64 z) (+.f64 x (*.f64 a t)))))))"]],"rules":[["egg-rr",96],["egg-rr",20]],"stop":[["node limit",1]],"time":54.135986328125,"type":"rewrite"},{"count":[[212,130]],"egraph":[[3,51,719,0.000626417],[2,49,719,0.000456125],[1,34,719,0.000284084],[0,17,719,0.000122292]],"inputs":[["(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 z b))","(*.f64 a (*.f64 z b))","(*.f64 a (*.f64 z b))","(*.f64 a (*.f64 z b))","(*.f64 a (*.f64 z b))","(*.f64 a (*.f64 z b))","(*.f64 a (*.f64 z b))","(*.f64 a (*.f64 z b))","(*.f64 a (*.f64 z b))","(*.f64 a (*.f64 z b))","(*.f64 a (*.f64 z b))","(*.f64 a (*.f64 z b))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 b z))","(+.f64 (*.f64 y z) (*.f64 a t))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","x","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","x","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 a t) x)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(*.f64 y z)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(*.f64 y z)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 a t) x)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(*.f64 y z)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(*.f64 y z)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) x)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(*.f64 a t)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(*.f64 a t)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) x)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(*.f64 a t)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(*.f64 a t)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 z b))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 z b))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 z b))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 z b))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 z b))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 z b))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 z b))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 z b))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 z b))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 z b))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 z b))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 z b))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 b (*.f64 a z))","(+.f64 (*.f64 y z) (*.f64 a t))","(fma.f64 y z (*.f64 a t))","(fma.f64 z y (*.f64 a t))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","x","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","x","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 a t) x)","(fma.f64 a t x)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(*.f64 y z)","(*.f64 z y)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(*.f64 y z)","(*.f64 z y)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 a t) x)","(fma.f64 a t x)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(*.f64 y z)","(*.f64 z y)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(*.f64 y z)","(*.f64 z y)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) x)","(fma.f64 y z x)","(fma.f64 z y x)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(*.f64 a t)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(*.f64 a t)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) x)","(fma.f64 y z x)","(fma.f64 z y x)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(*.f64 a t)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(*.f64 a t)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))"]],"stop":[["saturated",1]],"time":18.85888671875,"type":"simplify"},{"compiler":[[2576,623]],"time":17.18701171875,"type":"eval"},{"alts":[["(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 z b))) 3))","fresh",3.579452539073768],["(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (*.f64 a (*.f64 b z)))","fresh",3.5390625],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","next",2.8046875],["(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (*.f64 (*.f64 a z) b))","done",2.287480354339564]],"compiler":[[24,16],[21,13],[16,9],[21,13],[24,16],[21,13],[16,9]],"count":[[132,4]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[130,2],"picked":[1,1]}],"min-error":[0.01171875],"time":32.83203125,"type":"prune"},{"compiler":[[30,9]],"locations":[["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))",2.650846625633922,true]],"time":6.446044921875,"type":"localize"},{"count":[[1,72]],"series":[["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","x","-inf",0.22607421875],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","x","inf",0.197998046875],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","x","0",0.281005859375],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","t","-inf",0.279052734375],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","t","inf",0.273193359375],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","t","0",0.3291015625],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","y","-inf",0.31884765625],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","y","inf",0.31298828125],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","y","0",0.349853515625],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","b","-inf",0.35595703125],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","b","inf",0.35205078125],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","b","0",0.33984375],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","a","-inf",0.468017578125],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","a","inf",0.416015625],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","a","0",0.387939453125],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","z","-inf",0.342041015625],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","z","inf",0.278076171875],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","z","0",1.06005859375]],"time":6.81494140625,"type":"series"},{"count":[[1,22]],"egraph":[[2,2355,13,0.02133525],[1,197,13,0.003013417],[0,10,13,0.00020725]],"inputs":[["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t a x) (*.f64 z (fma.f64 a b y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (fma.f64 a b y)) (fma.f64 t a x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (fma.f64 a b y)) 1) (fma.f64 t a x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (*.f64 z (fma.f64 a b y)) (*.f64 a t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) (sqrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 a b y)) 3) (pow.f64 (fma.f64 t a x) 3)) (+.f64 (*.f64 (*.f64 z (fma.f64 a b y)) (*.f64 z (fma.f64 a b y))) (-.f64 (pow.f64 (fma.f64 t a x) 2) (*.f64 (*.f64 z (fma.f64 a b y)) (fma.f64 t a x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 z (fma.f64 a b y)) (*.f64 z (fma.f64 a b y))) (pow.f64 (fma.f64 t a x) 2)) (-.f64 (*.f64 z (fma.f64 a b y)) (fma.f64 t a x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))))))"]],"rules":[["egg-rr",22]],"stop":[["node limit",1]],"time":39.698974609375,"type":"rewrite"},{"count":[[94,52]],"egraph":[[11,4145,815,0.07007529],[10,4145,815,0.06120641499999999],[9,3925,815,0.052733581999999994],[8,3925,815,0.043623498999999996],[7,3895,815,0.03617329],[6,3104,815,0.028191332],[5,2426,815,0.018481123999999998],[4,1323,815,0.010711248999999999],[3,563,815,0.004921083],[2,277,815,0.001964],[1,120,815,0.000806083],[0,38,822,0.000235667]],"inputs":[["(+.f64 (*.f64 a t) x)","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(*.f64 z (+.f64 (*.f64 a b) y))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(*.f64 z (+.f64 (*.f64 a b) y))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 y z) x)","(+.f64 (*.f64 y z) (+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x))","(*.f64 (+.f64 t (*.f64 b z)) a)","(+.f64 (*.f64 y z) (+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x))","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (*.f64 b z)) (*.f64 -1 t))))","(+.f64 (*.f64 y z) (+.f64 x (*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (*.f64 b z)) (*.f64 -1 t))))))","(+.f64 (*.f64 y z) (+.f64 x (*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (*.f64 b z)) (*.f64 -1 t))))))","(+.f64 (*.f64 y z) (+.f64 x (*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (*.f64 b z)) (*.f64 -1 t))))))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)))","(*.f64 a (*.f64 b z))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(*.f64 a (*.f64 b z))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(*.f64 y z)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(*.f64 y z)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x)","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(*.f64 a t)","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(*.f64 a t)","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","x","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","x","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 a t) x)","(fma.f64 a t x)","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(*.f64 z (+.f64 (*.f64 a b) y))","(*.f64 z (fma.f64 a b y))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(*.f64 z (+.f64 (*.f64 a b) y))","(*.f64 z (fma.f64 a b y))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) x)","(fma.f64 y z x)","(fma.f64 z y x)","(+.f64 (*.f64 y z) (+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(*.f64 (+.f64 t (*.f64 b z)) a)","(*.f64 a (+.f64 t (*.f64 z b)))","(*.f64 a (fma.f64 z b t))","(+.f64 (*.f64 y z) (+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (*.f64 b z)) (*.f64 -1 t))))","(*.f64 a (+.f64 t (*.f64 z b)))","(*.f64 a (fma.f64 z b t))","(+.f64 (*.f64 y z) (+.f64 x (*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (*.f64 b z)) (*.f64 -1 t))))))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) (+.f64 x (*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (*.f64 b z)) (*.f64 -1 t))))))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) (+.f64 x (*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (*.f64 b z)) (*.f64 -1 t))))))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(fma.f64 a t (fma.f64 z y x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 z (*.f64 a b))","(*.f64 a (*.f64 z b))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 a b) z)","(*.f64 z (*.f64 a b))","(*.f64 a (*.f64 z b))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x))","(fma.f64 a (*.f64 z b) (fma.f64 a t x))","(fma.f64 a (fma.f64 z b t) x)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(*.f64 y z)","(*.f64 z y)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(*.f64 y z)","(*.f64 z y)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x)","(fma.f64 z (fma.f64 a b y) x)","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(*.f64 a t)","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(*.f64 a t)","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t))","(fma.f64 z (fma.f64 a b y) (*.f64 a t))","(fma.f64 a t (*.f64 z (fma.f64 a b y)))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","x","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","x","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))"]],"stop":[["saturated",1]],"time":98.135986328125,"type":"simplify"},{"compiler":[[615,128]],"time":4.68505859375,"type":"eval"},{"alts":[["(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 z b))) 3))","fresh",3.579452539073768],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","next",3.468315332127029],["(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","fresh",3.5390625],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","done",2.8046875],["(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (*.f64 (*.f64 a z) b))","done",2.287480354339564]],"compiler":[[24,16],[31,13],[21,13],[16,9],[21,13],[24,16],[31,13],[21,13]],"count":[[56,5]],"kept":[{"done":[1,1],"fresh":[2,1],"new":[52,2],"picked":[1,1]}],"min-error":[0.0078125],"time":11.491943359375,"type":"prune"},{"compiler":[[80,16]],"locations":[["(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))",0.08984375,true],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))",0.29296875,true],["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)",0.4599800293053261,true],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))",2.650846625633922,false]],"time":11.757080078125,"type":"localize"},{"count":[[3,120]],"series":[["(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))","x","-inf",0.252197265625],["(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))","x","inf",0.22998046875],["(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))","x","0",1.047119140625],["(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))","t","-inf",0.2490234375],["(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))","t","inf",0.22412109375],["(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))","t","0",0.5078125],["(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))","y","-inf",0.251953125],["(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))","y","inf",0.22607421875],["(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))","y","0",0.68798828125],["(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))","b","-inf",0.22607421875],["(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))","b","inf",0.255859375],["(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))","b","0",0.572998046875],["(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))","a","-inf",1.052978515625],["(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))","a","inf",0.2548828125],["(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))","a","0",0.5390625],["(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))","z","-inf",0.224853515625],["(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))","z","inf",0.27001953125],["(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))","z","0",0.492919921875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","x","-inf",0.27392578125],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","x","inf",0.248046875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","x","0",0.280029296875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","t","-inf",0.243896484375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","t","inf",0.26904296875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","t","0",0.26904296875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","y","-inf",0.2548828125],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","y","inf",0.276123046875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","y","0",0.26904296875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","b","-inf",0.278076171875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","b","inf",0.285888671875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","b","0",0.260009765625],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","a","-inf",0.275146484375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","a","inf",0.2919921875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","a","0",0.255126953125],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","z","-inf",0.281982421875],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","z","inf",0.256103515625],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","z","0",0.282958984375],["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)","x","-inf",0.385986328125],["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)","x","inf",0.385009765625],["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)","x","0",3.35400390625],["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)","t","-inf",0.35009765625],["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)","t","inf",0.3759765625],["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)","t","0",1.983154296875],["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)","y","-inf",0.366943359375],["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)","y","inf",0.3779296875],["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)","y","0",2.263916015625],["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)","b","-inf",0.344970703125],["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)","b","inf",0.407958984375],["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)","b","0",2.84716796875],["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)","a","-inf",0.369873046875],["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)","a","inf",0.407958984375],["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)","a","0",1.799072265625],["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)","z","-inf",0.375],["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)","z","inf",0.548095703125],["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)","z","0",1.80908203125]],"time":32.1220703125,"type":"series"},{"count":[[3,115]],"egraph":[[2,3008,46,0.025853708],[1,283,46,0.004345583],[0,14,46,0.00033575]],"inputs":[["(pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2)","(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","(cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 4) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)) 1/6) (sqrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) (pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 5) (cbrt.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)) 2)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (*.f64 2/3 (log.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 3) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 1/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2/3 (log.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 a t x) (*.f64 z (fma.f64 a b y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z (fma.f64 a b y)) (fma.f64 a t x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z (fma.f64 a b y)) 1) (fma.f64 a t x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (fma.f64 a b y) (*.f64 a t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 z (fma.f64 a b y)) 3) (pow.f64 (fma.f64 a t x) 3)) (+.f64 (pow.f64 (*.f64 z (fma.f64 a b y)) 2) (-.f64 (pow.f64 (fma.f64 a t x) 2) (*.f64 (*.f64 z (fma.f64 a b y)) (fma.f64 a t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 z (fma.f64 a b y)) 2) (pow.f64 (fma.f64 a t x) 2)) (-.f64 (*.f64 z (fma.f64 a b y)) (fma.f64 a t x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 2) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)) 1/6) 6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 a t x)) (exp.f64 (*.f64 z (fma.f64 a b y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 a t x))) (exp.f64 (*.f64 z (fma.f64 a b y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 z (fma.f64 a b y))) (+.f64 1 (expm1.f64 (fma.f64 a t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 1/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (fma.f64 a b y) (fma.f64 a t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 a b y) z (fma.f64 a t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 a t x) 1 (*.f64 z (fma.f64 a b y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 a t x) (*.f64 z (fma.f64 a b y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z (fma.f64 a b y)) (fma.f64 a t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 z) 2) (*.f64 (cbrt.f64 z) (fma.f64 a b y)) (fma.f64 a t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 a t x)) (pow.f64 (cbrt.f64 (fma.f64 a t x)) 2) (*.f64 z (fma.f64 a b y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 a t x)) 2) (cbrt.f64 (fma.f64 a t x)) (*.f64 z (fma.f64 a b y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (fma.f64 a b y)) (fma.f64 a t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 a t x)) (sqrt.f64 (fma.f64 a t x)) (*.f64 z (fma.f64 a b y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (fma.f64 a b y)) 1 (fma.f64 a t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 z (fma.f64 a b y))) 2) (cbrt.f64 (*.f64 z (fma.f64 a b y))) (fma.f64 a t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 z (fma.f64 a b y))) (sqrt.f64 (*.f64 z (fma.f64 a b y))) (fma.f64 a t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (pow.f64 (cbrt.f64 (fma.f64 a b y)) 2)) (cbrt.f64 (fma.f64 a b y)) (fma.f64 a t x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (sqrt.f64 (fma.f64 a b y))) (sqrt.f64 (fma.f64 a b y)) (fma.f64 a t x))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 2) (cbrt.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)) 1/6) (pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 4)) (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)) 2) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)) 3) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 2) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/6 (log.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 1) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 3) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x))) 1/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2/3 (log.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 a t x)))) 1) 1/2))))))"]],"rules":[["egg-rr",36],["egg-rr",51],["egg-rr",28]],"stop":[["node limit",1]],"time":52.472900390625,"type":"rewrite"},{"count":[[235,242]],"egraph":[[2,6847,6366,0.028668208],[1,1730,6463,0.012239166],[0,479,6905,0.002489166]],"inputs":[["(pow.f64 (pow.f64 (+.f64 (*.f64 a t) x) 2) 1/3)","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 a t) x) 1) 1/9) (*.f64 z (+.f64 (*.f64 a b) y)))) (pow.f64 (pow.f64 (+.f64 (*.f64 a t) x) 2) 1/3))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 a t) x) 1) 1/9) (*.f64 z (+.f64 (*.f64 a b) y)))) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 a t) x) 2) 1/3) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a b) y) 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a b) y) 2)))) (pow.f64 z 2))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 a t) x) 1) 1/9) (*.f64 z (+.f64 (*.f64 a b) y)))) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 a t) x) 2) 1/3) (+.f64 (*.f64 (pow.f64 z 3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 a t) x)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (+.f64 (*.f64 a b) y) 3)))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 2)) 1/3) (pow.f64 (+.f64 (*.f64 a b) y) 3)))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 (+.f64 (*.f64 a b) y) 3) (+.f64 (*.f64 a t) x)))))) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a b) y) 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a b) y) 2)))) (pow.f64 z 2)))))","(pow.f64 (pow.f64 (+.f64 (*.f64 y z) x) 2) 1/3)","(+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 y z) x) 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y z) x) 1) 1/9) (*.f64 (+.f64 t (*.f64 b z)) a))))","(+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 y z) x) 2) 1/3) (+.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z b) t) 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 4)) 1/9) (pow.f64 (+.f64 t (*.f64 b z)) 2))))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y z) x) 1) 1/9) (*.f64 (+.f64 t (*.f64 b z)) a)))))","(+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 y z) x) 2) 1/3) (+.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 y z) x)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 2)) 1/3) (*.f64 (*.f64 (pow.f64 (+.f64 t (*.f64 b z)) 2) (+.f64 (*.f64 z b) t)) (pow.f64 (pow.f64 1 4) 1/9)))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 2)) 1/3) (pow.f64 (+.f64 (*.f64 z b) t) 3)))))) (*.f64 -2/27 (*.f64 (/.f64 (*.f64 (+.f64 t (*.f64 b z)) (pow.f64 (+.f64 (*.f64 z b) t) 2)) (+.f64 (*.f64 y z) x)) (pow.f64 1 1/9))))) (+.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z b) t) 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 4)) 1/9) (pow.f64 (+.f64 t (*.f64 b z)) 2))))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y z) x) 1) 1/9) (*.f64 (+.f64 t (*.f64 b z)) a))))))","(pow.f64 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2) 1/3)","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 1) 1/9) (*.f64 a (*.f64 b z)))) (pow.f64 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2) 1/3))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 1) 1/9) (*.f64 a (*.f64 b z)))) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2) 1/3) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 4)) 1/9) (*.f64 (pow.f64 a 2) (pow.f64 z 2)))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 4)) 1/9) (*.f64 (pow.f64 a 2) (pow.f64 z 2))))) (pow.f64 b 2))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 1) 1/9) (*.f64 a (*.f64 b z)))) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (*.f64 (pow.f64 a 3) (pow.f64 z 3)) (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))))) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 a 3) (pow.f64 z 3))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2)) 1/3) (*.f64 (pow.f64 a 3) (pow.f64 z 3))))) (pow.f64 (/.f64 1 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))) 1/3)))) (pow.f64 b 3)) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 4)) 1/9) (*.f64 (pow.f64 a 2) (pow.f64 z 2)))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 4)) 1/9) (*.f64 (pow.f64 a 2) (pow.f64 z 2))))) (pow.f64 b 2)))))","(pow.f64 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 2) 1/3)","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 2)) 1/9) (*.f64 y z)))) (pow.f64 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 2) 1/3))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 2)) 1/9) (*.f64 y z)))) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 4)) 1/9) (pow.f64 z 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x))) 1/9) (*.f64 (pow.f64 z 2) (pow.f64 (/.f64 1 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x))) 1/3)))))) (pow.f64 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 2) 1/3)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 2)) 1/9) (*.f64 y z)))) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 4)) 1/9) (pow.f64 z 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x))) 1/9) (*.f64 (pow.f64 z 2) (pow.f64 (/.f64 1 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x))) 1/3)))))) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 2) 1/3) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 1) (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 2)) 1/3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 2)) 1/3) (pow.f64 z 3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 5) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))) 1/9) (pow.f64 z 3)))))) (*.f64 -2/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 4) (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 5))) 1/9) (pow.f64 z 3)))) (pow.f64 y 3)))))","(pow.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2) 1/3)","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 1) 1/9) (*.f64 a t))) (pow.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2) 1/3))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 1) 1/9) (*.f64 a t))) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 4)) 1/9) (pow.f64 a 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 4)) 1/9) (pow.f64 a 2))))) (pow.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2) 1/3)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 1) 1/9) (*.f64 a t))) (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x)) 1/3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2)) 1/3) (pow.f64 a 3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 a 3))))))) (*.f64 -2/27 (*.f64 (/.f64 (pow.f64 a 3) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x)) (pow.f64 1 1/9)))) (pow.f64 t 3)) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 4)) 1/9) (pow.f64 a 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 4)) 1/9) (pow.f64 a 2))))) (pow.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2) 1/3))))","(pow.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2) 1/3)","(+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2) 1/3) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3) (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/9))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3)))) x))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))))))) (pow.f64 x 2)) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2) 1/3) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3) (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/9))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3)))) x)))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))))))) (pow.f64 x 2)) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3) (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/9))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3)))) x) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 8)) 1/9) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3)))))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 8)) 1/9) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3))))))) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2)) 1/3)) (*.f64 -4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 8)) 1/9) (*.f64 (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3)))))))))))) (pow.f64 x 3)))))","(+.f64 (*.f64 a t) x)","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(*.f64 z (+.f64 (*.f64 a b) y))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(*.f64 z (+.f64 (*.f64 a b) y))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 y z) x)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (+.f64 (*.f64 z b) t)) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (+.f64 (*.f64 z b) t)) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (+.f64 (*.f64 z b) t)) x))","(*.f64 a (+.f64 (*.f64 z b) t))","(+.f64 (*.f64 y z) (+.f64 x (*.f64 a (+.f64 (*.f64 z b) t))))","(+.f64 (*.f64 y z) (+.f64 x (*.f64 a (+.f64 (*.f64 z b) t))))","(+.f64 (*.f64 y z) (+.f64 x (*.f64 a (+.f64 (*.f64 z b) t))))","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (*.f64 b z)) (*.f64 -1 t))))","(+.f64 (*.f64 y z) (+.f64 x (*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (*.f64 b z)) (*.f64 -1 t))))))","(+.f64 (*.f64 y z) (+.f64 x (*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (*.f64 b z)) (*.f64 -1 t))))))","(+.f64 (*.f64 y z) (+.f64 x (*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (*.f64 b z)) (*.f64 -1 t))))))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)))","(*.f64 a (*.f64 b z))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(*.f64 a (*.f64 b z))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)))","(*.f64 y z)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(*.f64 y z)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x)","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(*.f64 a t)","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(*.f64 a t)","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y)))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","x","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","x","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(pow.f64 (+.f64 (*.f64 a t) x) 1/3)","(+.f64 (pow.f64 (+.f64 (*.f64 a t) x) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 2)) 1/9) (*.f64 z (+.f64 (*.f64 a b) y)))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 7)) 1/9) (*.f64 (pow.f64 z 2) (pow.f64 (+.f64 (*.f64 a b) y) 2)))) (+.f64 (pow.f64 (+.f64 (*.f64 a t) x) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 2)) 1/9) (*.f64 z (+.f64 (*.f64 a b) y))))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 7)) 1/9) (*.f64 (pow.f64 z 2) (pow.f64 (+.f64 (*.f64 a b) y) 2)))) (+.f64 (pow.f64 (+.f64 (*.f64 a t) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 2)) 1/9) (*.f64 z (+.f64 (*.f64 a b) y)))) (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (+.f64 (*.f64 a b) y) 3)))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 2)) 1/3) (pow.f64 (+.f64 (*.f64 a b) y) 3)))) (pow.f64 z 3)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 2)) 1/3))))))","(pow.f64 (+.f64 (*.f64 y z) x) 1/3)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 2)) 1/9) (*.f64 a (+.f64 (*.f64 z b) t)))) (pow.f64 (+.f64 (*.f64 y z) x) 1/3))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 7)) 1/9) (*.f64 (pow.f64 (+.f64 t (*.f64 b z)) 2) (pow.f64 a 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 2)) 1/9) (*.f64 a (+.f64 (*.f64 z b) t)))) (pow.f64 (+.f64 (*.f64 y z) x) 1/3)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 7)) 1/9) (*.f64 (pow.f64 (+.f64 t (*.f64 b z)) 2) (pow.f64 a 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 2)) 1/9) (*.f64 a (+.f64 (*.f64 z b) t)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 2)) 1/3) (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 2)) 1/3) (pow.f64 (+.f64 t (*.f64 b z)) 3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 2)) 1/3) (*.f64 (*.f64 (+.f64 t (*.f64 b z)) (pow.f64 (+.f64 (*.f64 z b) t) 2)) (pow.f64 (pow.f64 1 4) 1/9))))) (pow.f64 a 3)))) (pow.f64 (+.f64 (*.f64 y z) x) 1/3))))","(pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 1/3)","(+.f64 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2)) 1/9) (*.f64 a (*.f64 b z)))))","(+.f64 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 7)) 1/9) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 b 2) (pow.f64 z 2))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2)) 1/9) (*.f64 a (*.f64 b z))))))","(+.f64 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 a 3) (pow.f64 z 3))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2)) 1/3) (*.f64 (pow.f64 a 3) (pow.f64 z 3))))) (pow.f64 b 3)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2)) 1/3))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 7)) 1/9) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 b 2) (pow.f64 z 2))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2)) 1/9) (*.f64 a (*.f64 b z)))))))","(pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 1/3)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 2)) 1/9) (*.f64 y z))) (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 2)) 1/9) (*.f64 y z))) (+.f64 (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 1/3) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 4)) 1/9) (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 2)) 1/9) (*.f64 y z))) (+.f64 (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 4)) 1/9) (*.f64 (pow.f64 y 2) (pow.f64 z 2))))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 2)) 1/3) (pow.f64 z 3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 5))) 1/9) (pow.f64 z 3))))))))))","(pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 1/3)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2)) 1/9) (*.f64 a t))) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 1/3))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 7)) 1/9) (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2)) 1/9) (*.f64 a t))) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 1/3)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 7)) 1/9) (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2)) 1/9) (*.f64 a t))) (+.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2)) 1/3) (*.f64 (pow.f64 t 3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2)) 1/3) (pow.f64 a 3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 a 3)))))))))))","(pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3)","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2)) 1/9) x)) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2)) 1/9) x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2)) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3)))) (pow.f64 x 2)))) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2)) 1/9) x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2)) 1/3) (*.f64 (+.f64 (*.f64 -4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 8)) 1/9) (*.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))))))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 8)) 1/9) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))))))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/3)))) (pow.f64 x 3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2)) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3)))) (pow.f64 x 2)))) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (pow.f64 (+.f64 (*.f64 a t) x) 2) 1/3)","(cbrt.f64 (pow.f64 (fma.f64 a t x) 2))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 a t) x) 1) 1/9) (*.f64 z (+.f64 (*.f64 a b) y)))) (pow.f64 (pow.f64 (+.f64 (*.f64 a t) x) 2) 1/3))","(fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (fma.f64 a t x) 1/18) (pow.f64 (fma.f64 a t x) 1/18)) (*.f64 z (fma.f64 a b y))) (cbrt.f64 (pow.f64 (fma.f64 a t x) 2)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 a t) x) 1) 1/9) (*.f64 z (+.f64 (*.f64 a b) y)))) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 a t) x) 2) 1/3) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a b) y) 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a b) y) 2)))) (pow.f64 z 2))))","(+.f64 (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (fma.f64 a t x) 1/18) (pow.f64 (fma.f64 a t x) 1/18)) (*.f64 z (fma.f64 a b y))) (cbrt.f64 (pow.f64 (fma.f64 a t x) 2))) (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 4)) 1/18)) (pow.f64 (fma.f64 a b y) 2)) -1/9) (*.f64 z z)))","(fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (fma.f64 a t x) 1/18) (pow.f64 (fma.f64 a t x) 1/18)) (*.f64 z (fma.f64 a b y))) (fma.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 4)) 1/18)) (*.f64 (pow.f64 (fma.f64 a b y) 2) -1/9)) (*.f64 z z) (cbrt.f64 (pow.f64 (fma.f64 a t x) 2))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 a t) x) 1) 1/9) (*.f64 z (+.f64 (*.f64 a b) y)))) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 a t) x) 2) 1/3) (+.f64 (*.f64 (pow.f64 z 3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 a t) x)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (+.f64 (*.f64 a b) y) 3)))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 2)) 1/3) (pow.f64 (+.f64 (*.f64 a b) y) 3)))))) (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (pow.f64 (+.f64 (*.f64 a b) y) 3) (+.f64 (*.f64 a t) x)))))) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a b) y) 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a b) y) 2)))) (pow.f64 z 2)))))","(+.f64 (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (fma.f64 a t x) 1/18) (pow.f64 (fma.f64 a t x) 1/18)) (*.f64 z (fma.f64 a b y))) (cbrt.f64 (pow.f64 (fma.f64 a t x) 2))) (fma.f64 (pow.f64 z 3) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 (fma.f64 a t x))) (fma.f64 -2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2))) (*.f64 1 (pow.f64 (fma.f64 a b y) 3))) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2))) (pow.f64 (fma.f64 a b y) 3))))) (*.f64 -2/27 (/.f64 (pow.f64 (fma.f64 a b y) 3) (fma.f64 a t x)))) (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 4)) 1/18)) (pow.f64 (fma.f64 a b y) 2)) -1/9) (*.f64 z z))))","(+.f64 (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (fma.f64 a t x) 1/18) (pow.f64 (fma.f64 a t x) 1/18)) (*.f64 z (fma.f64 a b y))) (cbrt.f64 (pow.f64 (fma.f64 a t x) 2))) (fma.f64 (pow.f64 z 3) (fma.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 1 (fma.f64 a t x)))) (fma.f64 -2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2))) (pow.f64 (fma.f64 a b y) 3)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2))) (*.f64 (pow.f64 (fma.f64 a b y) 3) 1/27))) (*.f64 -2/27 (/.f64 (pow.f64 (fma.f64 a b y) 3) (fma.f64 a t x)))) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 4)) 1/18)) (pow.f64 (fma.f64 a b y) 2)) (*.f64 -1/9 (*.f64 z z)))))","(+.f64 (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (fma.f64 a t x) 1/18) (pow.f64 (fma.f64 a t x) 1/18)) (*.f64 z (fma.f64 a b y))) (cbrt.f64 (pow.f64 (fma.f64 a t x) 2))) (fma.f64 (pow.f64 z 3) (fma.f64 (*.f64 -2/3 (cbrt.f64 (/.f64 1 (fma.f64 a t x)))) (fma.f64 -2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2))) (pow.f64 (fma.f64 a b y) 3)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2))) (*.f64 (pow.f64 (fma.f64 a b y) 3) 1/27))) (*.f64 (pow.f64 (fma.f64 a b y) 3) (/.f64 -2/27 (fma.f64 a t x)))) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 4)) 1/18)) (pow.f64 (fma.f64 a b y) 2)) (*.f64 -1/9 (*.f64 z z)))))","(pow.f64 (pow.f64 (+.f64 (*.f64 y z) x) 2) 1/3)","(cbrt.f64 (pow.f64 (fma.f64 y z x) 2))","(cbrt.f64 (pow.f64 (fma.f64 z y x) 2))","(+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 y z) x) 2) 1/3) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y z) x) 1) 1/9) (*.f64 (+.f64 t (*.f64 b z)) a))))","(+.f64 (cbrt.f64 (pow.f64 (fma.f64 y z x) 2)) (*.f64 2/3 (*.f64 (*.f64 (pow.f64 (fma.f64 y z x) 1/18) (pow.f64 (fma.f64 y z x) 1/18)) (*.f64 a (fma.f64 z b t)))))","(fma.f64 2/3 (*.f64 a (*.f64 (*.f64 (pow.f64 (fma.f64 z y x) 1/18) (pow.f64 (fma.f64 z y x) 1/18)) (fma.f64 z b t))) (cbrt.f64 (pow.f64 (fma.f64 z y x) 2)))","(+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 y z) x) 2) 1/3) (+.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z b) t) 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 4)) 1/9) (pow.f64 (+.f64 t (*.f64 b z)) 2))))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y z) x) 1) 1/9) (*.f64 (+.f64 t (*.f64 b z)) a)))))","(+.f64 (cbrt.f64 (pow.f64 (fma.f64 y z x) 2)) (fma.f64 (*.f64 a a) (fma.f64 -2/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 4)) 1/18)) (pow.f64 (fma.f64 z b t) 2)) (*.f64 1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 4)) 1/18)) (pow.f64 (fma.f64 z b t) 2)))) (*.f64 2/3 (*.f64 (*.f64 (pow.f64 (fma.f64 y z x) 1/18) (pow.f64 (fma.f64 y z x) 1/18)) (*.f64 a (fma.f64 z b t))))))","(+.f64 (cbrt.f64 (pow.f64 (fma.f64 z y x) 2)) (fma.f64 (*.f64 a a) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y x) 4)) 1/18)) (pow.f64 (fma.f64 z b t) 2)) -1/9) (*.f64 (*.f64 (*.f64 (pow.f64 (fma.f64 z y x) 1/18) (pow.f64 (fma.f64 z y x) 1/18)) (fma.f64 z b t)) (*.f64 a 2/3))))","(+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 y z) x) 2) 1/3) (+.f64 (*.f64 (pow.f64 a 3) (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 y z) x)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 2)) 1/3) (*.f64 (*.f64 (pow.f64 (+.f64 t (*.f64 b z)) 2) (+.f64 (*.f64 z b) t)) (pow.f64 (pow.f64 1 4) 1/9)))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 2)) 1/3) (pow.f64 (+.f64 (*.f64 z b) t) 3)))))) (*.f64 -2/27 (*.f64 (/.f64 (*.f64 (+.f64 t (*.f64 b z)) (pow.f64 (+.f64 (*.f64 z b) t) 2)) (+.f64 (*.f64 y z) x)) (pow.f64 1 1/9))))) (+.f64 (*.f64 (pow.f64 a 2) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z b) t) 2))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 4)) 1/9) (pow.f64 (+.f64 t (*.f64 b z)) 2))))) (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y z) x) 1) 1/9) (*.f64 (+.f64 t (*.f64 b z)) a))))))","(+.f64 (cbrt.f64 (pow.f64 (fma.f64 y z x) 2)) (fma.f64 (pow.f64 a 3) (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 (fma.f64 y z x))) (fma.f64 -2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 2))) (*.f64 1 (pow.f64 (fma.f64 z b t) 3))) (*.f64 (*.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 2)))) (pow.f64 (fma.f64 z b t) 3)))) (*.f64 -2/27 (*.f64 1 (/.f64 (pow.f64 (fma.f64 z b t) 3) (fma.f64 y z x))))) (fma.f64 (*.f64 a a) (fma.f64 -2/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 4)) 1/18)) (pow.f64 (fma.f64 z b t) 2)) (*.f64 1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 4)) 1/18)) (pow.f64 (fma.f64 z b t) 2)))) (*.f64 2/3 (*.f64 (*.f64 (pow.f64 (fma.f64 y z x) 1/18) (pow.f64 (fma.f64 y z x) 1/18)) (*.f64 a (fma.f64 z b t)))))))","(+.f64 (cbrt.f64 (pow.f64 (fma.f64 z y x) 2)) (fma.f64 (pow.f64 a 3) (fma.f64 -2/27 (/.f64 (pow.f64 (fma.f64 z b t) 3) (fma.f64 z y x)) (*.f64 (fma.f64 -2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z y x) 2))) (pow.f64 (fma.f64 z b t) 3)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z y x) 2))) (*.f64 (pow.f64 (fma.f64 z b t) 3) 1/27))) (*.f64 -2/3 (cbrt.f64 (/.f64 1 (fma.f64 z y x)))))) (fma.f64 (*.f64 a a) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y x) 4)) 1/18)) (pow.f64 (fma.f64 z b t) 2)) -1/9) (*.f64 (*.f64 (*.f64 (pow.f64 (fma.f64 z y x) 1/18) (pow.f64 (fma.f64 z y x) 1/18)) (fma.f64 z b t)) (*.f64 a 2/3)))))","(pow.f64 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2) 1/3)","(cbrt.f64 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 2))","(cbrt.f64 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 2))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 1) 1/9) (*.f64 a (*.f64 b z)))) (pow.f64 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2) 1/3))","(fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 1/18) (pow.f64 (fma.f64 y z (fma.f64 a t x)) 1/18)) (*.f64 a (*.f64 z b))) (cbrt.f64 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 2)))","(fma.f64 2/3 (*.f64 a (*.f64 (*.f64 z b) (*.f64 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 1/18) (pow.f64 (fma.f64 z y (fma.f64 a t x)) 1/18)))) (cbrt.f64 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 2)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 1) 1/9) (*.f64 a (*.f64 b z)))) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2) 1/3) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 4)) 1/9) (*.f64 (pow.f64 a 2) (pow.f64 z 2)))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 4)) 1/9) (*.f64 (pow.f64 a 2) (pow.f64 z 2))))) (pow.f64 b 2))))","(+.f64 (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 1/18) (pow.f64 (fma.f64 y z (fma.f64 a t x)) 1/18)) (*.f64 a (*.f64 z b))) (cbrt.f64 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 2))) (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 4)) 1/18)) (*.f64 (*.f64 z z) (*.f64 a a))) -1/9) (*.f64 b b)))","(fma.f64 2/3 (*.f64 a (*.f64 (*.f64 z b) (*.f64 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 1/18) (pow.f64 (fma.f64 z y (fma.f64 a t x)) 1/18)))) (fma.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 4)) 1/18)) (*.f64 (*.f64 a (*.f64 a (*.f64 z z))) -1/9)) (*.f64 b b) (cbrt.f64 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 2))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 1) 1/9) (*.f64 a (*.f64 b z)))) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 -2/27 (*.f64 (pow.f64 1 1/9) (/.f64 (*.f64 (pow.f64 a 3) (pow.f64 z 3)) (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))))) (*.f64 -2/3 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 a 3) (pow.f64 z 3))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2)) 1/3) (*.f64 (pow.f64 a 3) (pow.f64 z 3))))) (pow.f64 (/.f64 1 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))) 1/3)))) (pow.f64 b 3)) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 4)) 1/9) (*.f64 (pow.f64 a 2) (pow.f64 z 2)))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 4)) 1/9) (*.f64 (pow.f64 a 2) (pow.f64 z 2))))) (pow.f64 b 2)))))","(+.f64 (fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 1/18) (pow.f64 (fma.f64 y z (fma.f64 a t x)) 1/18)) (*.f64 a (*.f64 z b))) (cbrt.f64 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 2))) (fma.f64 (+.f64 (*.f64 -2/27 (/.f64 (*.f64 (pow.f64 z 3) (pow.f64 a 3)) (fma.f64 y z (fma.f64 a t x)))) (*.f64 -2/3 (*.f64 (fma.f64 -2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 2))) (*.f64 (*.f64 1 (pow.f64 a 3)) (pow.f64 z 3))) (*.f64 1/27 (*.f64 (*.f64 (pow.f64 z 3) (pow.f64 a 3)) (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 2)))))) (cbrt.f64 (/.f64 1 (fma.f64 y z (fma.f64 a t x))))))) (pow.f64 b 3) (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 4)) 1/18)) (*.f64 (*.f64 z z) (*.f64 a a))) -1/9) (*.f64 b b))))","(+.f64 (fma.f64 2/3 (*.f64 a (*.f64 (*.f64 z b) (*.f64 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 1/18) (pow.f64 (fma.f64 z y (fma.f64 a t x)) 1/18)))) (cbrt.f64 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 2))) (fma.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 4)) 1/18)) (*.f64 (*.f64 a (*.f64 a (*.f64 z z))) -1/9)) (*.f64 b b) (*.f64 (fma.f64 -2/3 (*.f64 (fma.f64 -2/9 (*.f64 (pow.f64 z 3) (*.f64 (pow.f64 a 3) (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 2))))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 2))) (*.f64 (*.f64 (pow.f64 z 3) (pow.f64 a 3)) 1/27))) (cbrt.f64 (/.f64 1 (fma.f64 z y (fma.f64 a t x))))) (*.f64 -2/27 (/.f64 (pow.f64 a 3) (/.f64 (fma.f64 z y (fma.f64 a t x)) (pow.f64 z 3))))) (pow.f64 b 3))))","(pow.f64 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 2) 1/3)","(cbrt.f64 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 2)) 1/9) (*.f64 y z)))) (pow.f64 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 2) 1/3))","(fma.f64 2/3 (*.f64 (cbrt.f64 (fma.f64 a (fma.f64 z b t) x)) (*.f64 (*.f64 z y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 2)) 1/18)))) (cbrt.f64 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)))","(fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18)) (*.f64 (*.f64 z y) (cbrt.f64 (fma.f64 a (fma.f64 z b t) x)))) (cbrt.f64 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 2)) 1/9) (*.f64 y z)))) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 4)) 1/9) (pow.f64 z 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x))) 1/9) (*.f64 (pow.f64 z 2) (pow.f64 (/.f64 1 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x))) 1/3)))))) (pow.f64 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 2) 1/3)))","(fma.f64 2/3 (*.f64 (cbrt.f64 (fma.f64 a (fma.f64 z b t) x)) (*.f64 (*.f64 z y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 2)) 1/18)))) (fma.f64 (*.f64 y y) (fma.f64 1/9 (*.f64 (*.f64 z z) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 4)) 1/18))) (*.f64 -2/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (fma.f64 a (fma.f64 z b t) x)) 1/18) (pow.f64 (/.f64 1 (fma.f64 a (fma.f64 z b t) x)) 1/18)) (*.f64 (*.f64 z z) (cbrt.f64 (/.f64 1 (fma.f64 a t (fma.f64 a (*.f64 z b) x)))))))) (cbrt.f64 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2))))","(fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18)) (*.f64 (*.f64 z y) (cbrt.f64 (fma.f64 a (fma.f64 z b t) x)))) (fma.f64 (*.f64 y y) (fma.f64 1/9 (*.f64 z (*.f64 z (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 4)) 1/18)))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (fma.f64 a (fma.f64 z b t) x)) 1/18) (*.f64 (pow.f64 (/.f64 1 (fma.f64 a (fma.f64 z b t) x)) 1/18) (*.f64 z z))) (*.f64 (cbrt.f64 (/.f64 1 (fma.f64 a (fma.f64 z b t) x))) -2/9))) (cbrt.f64 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 2)) 1/9) (*.f64 y z)))) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 4)) 1/9) (pow.f64 z 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x))) 1/9) (*.f64 (pow.f64 z 2) (pow.f64 (/.f64 1 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x))) 1/3)))))) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 2) 1/3) (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 1) (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 2)) 1/3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 2)) 1/3) (pow.f64 z 3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 5) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))) 1/9) (pow.f64 z 3)))))) (*.f64 -2/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 4) (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 5))) 1/9) (pow.f64 z 3)))) (pow.f64 y 3)))))","(fma.f64 2/3 (*.f64 (cbrt.f64 (fma.f64 a (fma.f64 z b t) x)) (*.f64 (*.f64 z y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 2)) 1/18)))) (+.f64 (fma.f64 (*.f64 y y) (fma.f64 1/9 (*.f64 (*.f64 z z) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 4)) 1/18))) (*.f64 -2/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (fma.f64 a (fma.f64 z b t) x)) 1/18) (pow.f64 (/.f64 1 (fma.f64 a (fma.f64 z b t) x)) 1/18)) (*.f64 (*.f64 z z) (cbrt.f64 (/.f64 1 (fma.f64 a t (fma.f64 a (*.f64 z b) x)))))))) (cbrt.f64 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2))) (*.f64 (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (fma.f64 a (fma.f64 z b t) x) (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 2))) (fma.f64 1/27 (*.f64 (pow.f64 z 3) (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 z 3) (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 5)) (fma.f64 a t (fma.f64 a (*.f64 z b) x))) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 5)) (fma.f64 a t (fma.f64 a (*.f64 z b) x))) 1/18)))))) (*.f64 -2/27 (*.f64 (pow.f64 z 3) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 4) (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 5))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 4) (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 5))) 1/18))))) (pow.f64 y 3))))","(fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18)) (*.f64 (*.f64 z y) (cbrt.f64 (fma.f64 a (fma.f64 z b t) x)))) (fma.f64 (*.f64 y y) (fma.f64 1/9 (*.f64 z (*.f64 z (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 4)) 1/18)))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (fma.f64 a (fma.f64 z b t) x)) 1/18) (*.f64 (pow.f64 (/.f64 1 (fma.f64 a (fma.f64 z b t) x)) 1/18) (*.f64 z z))) (*.f64 (cbrt.f64 (/.f64 1 (fma.f64 a (fma.f64 z b t) x))) -2/9))) (fma.f64 (fma.f64 -2/27 (*.f64 (pow.f64 z 3) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 5) (pow.f64 (fma.f64 a (fma.f64 z b t) x) 4))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 5) (pow.f64 (fma.f64 a (fma.f64 z b t) x) 4))) 1/18))) (*.f64 (*.f64 (pow.f64 z 3) (+.f64 (*.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 5)) (fma.f64 a (fma.f64 z b t) x)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 5)) (fma.f64 a (fma.f64 z b t) x)) 1/18))))) (*.f64 -2/3 (cbrt.f64 (/.f64 (fma.f64 a (fma.f64 z b t) x) (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)))))) (pow.f64 y 3) (cbrt.f64 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)))))","(fma.f64 2/3 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18)) (*.f64 (*.f64 z y) (cbrt.f64 (fma.f64 a (fma.f64 z b t) x)))) (fma.f64 (*.f64 y y) (fma.f64 1/9 (*.f64 z (*.f64 z (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 4)) 1/18)))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (fma.f64 a (fma.f64 z b t) x)) 1/18) (*.f64 (pow.f64 (/.f64 1 (fma.f64 a (fma.f64 z b t) x)) 1/18) (*.f64 z z))) (*.f64 (cbrt.f64 (/.f64 1 (fma.f64 a (fma.f64 z b t) x))) -2/9))) (fma.f64 (fma.f64 -2/27 (*.f64 (pow.f64 z 3) (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 5) (pow.f64 (fma.f64 a (fma.f64 z b t) x) 4))) 1/18) (pow.f64 (/.f64 1 (*.f64 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 5) (pow.f64 (fma.f64 a (fma.f64 z b t) x) 4))) 1/18))) (*.f64 (*.f64 (pow.f64 z 3) (+.f64 (*.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 6)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 6)) 1/18))))) (*.f64 -2/3 (cbrt.f64 (/.f64 1 (fma.f64 a (fma.f64 z b t) x)))))) (pow.f64 y 3) (cbrt.f64 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)))))","(pow.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2) 1/3)","(cbrt.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 1) 1/9) (*.f64 a t))) (pow.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2) 1/3))","(fma.f64 2/3 (*.f64 (*.f64 a t) (*.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 1/18) (pow.f64 (fma.f64 z (fma.f64 a b y) x) 1/18))) (cbrt.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)))","(fma.f64 2/3 (*.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 1/18) (*.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 1/18) (*.f64 a t))) (cbrt.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 1) 1/9) (*.f64 a t))) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 4)) 1/9) (pow.f64 a 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 4)) 1/9) (pow.f64 a 2))))) (pow.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2) 1/3)))","(fma.f64 2/3 (*.f64 (*.f64 a t) (*.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 1/18) (pow.f64 (fma.f64 z (fma.f64 a b y) x) 1/18))) (fma.f64 (*.f64 t t) (*.f64 (*.f64 (*.f64 a a) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 4)) 1/18))) -1/9) (cbrt.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2))))","(fma.f64 2/3 (*.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 1/18) (*.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 1/18) (*.f64 a t))) (fma.f64 (*.f64 t t) (*.f64 (*.f64 a a) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 4)) 1/18)) -1/9)) (cbrt.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 (*.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 1) 1/9) (*.f64 a t))) (+.f64 (*.f64 (+.f64 (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x)) 1/3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2)) 1/3) (pow.f64 a 3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 a 3))))))) (*.f64 -2/27 (*.f64 (/.f64 (pow.f64 a 3) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x)) (pow.f64 1 1/9)))) (pow.f64 t 3)) (+.f64 (*.f64 (pow.f64 t 2) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 4)) 1/9) (pow.f64 a 2))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 4)) 1/9) (pow.f64 a 2))))) (pow.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2) 1/3))))","(fma.f64 2/3 (*.f64 (*.f64 a t) (*.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 1/18) (pow.f64 (fma.f64 z (fma.f64 a b y) x) 1/18))) (fma.f64 (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 (fma.f64 z (fma.f64 a b y) x))) (fma.f64 1/27 (*.f64 (pow.f64 a 3) (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)))) (*.f64 -2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2))) (*.f64 1 (pow.f64 a 3)))))) (*.f64 -2/27 (*.f64 1 (/.f64 (pow.f64 a 3) (fma.f64 z (fma.f64 a b y) x))))) (pow.f64 t 3) (fma.f64 (*.f64 t t) (*.f64 (*.f64 (*.f64 a a) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 4)) 1/18))) -1/9) (cbrt.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)))))","(fma.f64 2/3 (*.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 1/18) (*.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 1/18) (*.f64 a t))) (fma.f64 (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 (fma.f64 z (fma.f64 a b y) x))) (fma.f64 -2/9 (*.f64 (pow.f64 a 3) (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2))) (*.f64 (pow.f64 a 3) 1/27)))) (*.f64 -2/27 (/.f64 (pow.f64 a 3) (fma.f64 z (fma.f64 a b y) x)))) (pow.f64 t 3) (fma.f64 (*.f64 t t) (*.f64 (*.f64 a a) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 4)) 1/18)) -1/9)) (cbrt.f64 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)))))","(pow.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2) 1/3)","(cbrt.f64 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2))","(cbrt.f64 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2))","(+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2) 1/3) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3) (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/9))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3)))) x))","(+.f64 (cbrt.f64 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) (*.f64 x (*.f64 1/3 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) 1/18)) (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) 1/18)) (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y)))))))))","(fma.f64 x (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2)) 1/18) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t)))))) 2/3) (cbrt.f64 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2)))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))))))) (pow.f64 x 2)) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2) 1/3) (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3) (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/9))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3)))) x)))","(fma.f64 (fma.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18)) (*.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2))) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18)) (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))))) 1/3)))) (*.f64 x x) (+.f64 (cbrt.f64 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) (*.f64 x (*.f64 1/3 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) 1/18)) (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) 1/18)) (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))))))))))","(fma.f64 (fma.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18)) (*.f64 (cbrt.f64 (/.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))))))) -2/3))) (*.f64 x x) (fma.f64 x (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2)) 1/18) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t)))))) 2/3) (cbrt.f64 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2))))","(fma.f64 (fma.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (fma.f64 z y (*.f64 a (fma.f64 z b t))))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))))))) -2/3))) (*.f64 x x) (fma.f64 x (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2)) 1/18) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t)))))) 2/3) (cbrt.f64 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2))))","(+.f64 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9)) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))))))) (pow.f64 x 2)) (+.f64 (pow.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2) 1/3) (+.f64 (*.f64 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3) (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/9))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3)))) x) (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 8)) 1/9) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3)))))) (*.f64 -2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/3) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 8)) 1/9) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3))))))) (+.f64 (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2)) 1/3)) (*.f64 -4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 8)) 1/9) (*.f64 (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3) (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3)))))))))))) (pow.f64 x 3)))))","(fma.f64 (fma.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18)) (*.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2))) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18)) (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))))) 1/3)))) (*.f64 x x) (+.f64 (cbrt.f64 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) (fma.f64 (*.f64 1/3 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) 1/18)) (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) 1/18)) (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))))))) x (*.f64 (fma.f64 -2/9 (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18)) (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))))) 1/3) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 8)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 8)) 1/18))) (*.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2))) (fma.f64 -2/9 (*.f64 (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y)))) (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18)) (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))))) 1/3) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 8)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 8)) 1/18)))) (fma.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2))) (*.f64 -4/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 8)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 8)) 1/18)) (*.f64 (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y)))) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18)) (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))))) 1/3))))))))) (pow.f64 x 3)))))","(+.f64 (fma.f64 (fma.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18)) (*.f64 (cbrt.f64 (/.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))))))) -2/3))) (*.f64 x x) (fma.f64 x (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2)) 1/18) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t)))))) 2/3) (cbrt.f64 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2)))) (*.f64 (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2))) (fma.f64 -2/9 (*.f64 (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t)))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 8)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 8)) 1/18)))) (fma.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2))) (*.f64 -4/9 (*.f64 (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t)))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 8)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 8)) 1/18)))))))) (*.f64 (*.f64 -2/9 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t)))))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 8)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 8)) 1/18)))) (pow.f64 x 3)))","(+.f64 (fma.f64 (fma.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18)) (*.f64 (cbrt.f64 (/.f64 1 (fma.f64 z y (*.f64 a (fma.f64 z b t))))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))))))) -2/3))) (*.f64 x x) (fma.f64 x (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2)) 1/18) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t)))))) 2/3) (cbrt.f64 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2)))) (*.f64 (fma.f64 -2/3 (*.f64 (cbrt.f64 (/.f64 1 (fma.f64 z y (*.f64 a (fma.f64 z b t))))) (fma.f64 -2/9 (*.f64 (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t)))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 8)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 8)) 1/18)))) (fma.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2))) (*.f64 -4/9 (*.f64 (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t)))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 8)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 8)) 1/18)))))))) (*.f64 (*.f64 -2/9 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t)))))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 8)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 8)) 1/18)))) (pow.f64 x 3)))","(+.f64 (*.f64 a t) x)","(fma.f64 a t x)","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(*.f64 z (+.f64 (*.f64 a b) y))","(*.f64 z (fma.f64 a b y))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(*.f64 z (+.f64 (*.f64 a b) y))","(*.f64 z (fma.f64 a b y))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) x)","(fma.f64 y z x)","(fma.f64 z y x)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (+.f64 (*.f64 z b) t)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (+.f64 (*.f64 z b) t)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (+.f64 (*.f64 z b) t)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(*.f64 a (+.f64 (*.f64 z b) t))","(*.f64 a (fma.f64 z b t))","(+.f64 (*.f64 y z) (+.f64 x (*.f64 a (+.f64 (*.f64 z b) t))))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) (+.f64 x (*.f64 a (+.f64 (*.f64 z b) t))))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) (+.f64 x (*.f64 a (+.f64 (*.f64 z b) t))))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (*.f64 b z)) (*.f64 -1 t))))","(*.f64 a (fma.f64 z b t))","(+.f64 (*.f64 y z) (+.f64 x (*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (*.f64 b z)) (*.f64 -1 t))))))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) (+.f64 x (*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (*.f64 b z)) (*.f64 -1 t))))))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) (+.f64 x (*.f64 -1 (*.f64 a (+.f64 (*.f64 -1 (*.f64 b z)) (*.f64 -1 t))))))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x))","(fma.f64 y z (fma.f64 a t x))","(fma.f64 z y (fma.f64 a t x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 z b))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(*.f64 a (*.f64 b z))","(*.f64 a (*.f64 z b))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x))","(fma.f64 a t (fma.f64 a (*.f64 z b) x))","(fma.f64 a (fma.f64 z b t) x)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(*.f64 y z)","(*.f64 z y)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(*.f64 y z)","(*.f64 z y)","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x)","(fma.f64 z (fma.f64 a b y) x)","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(*.f64 a t)","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(*.f64 a t)","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y)))","(fma.f64 a t (*.f64 z (fma.f64 a b y)))","(fma.f64 z y (*.f64 a (fma.f64 z b t)))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (+.f64 (*.f64 a t) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","x","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","x","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x))","(fma.f64 a t (fma.f64 z (fma.f64 a b y) x))","(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(pow.f64 (+.f64 (*.f64 a t) x) 1/3)","(cbrt.f64 (fma.f64 a t x))","(+.f64 (pow.f64 (+.f64 (*.f64 a t) x) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 2)) 1/9) (*.f64 z (+.f64 (*.f64 a b) y)))))","(+.f64 (cbrt.f64 (fma.f64 a t x)) (*.f64 1/3 (*.f64 (*.f64 z (fma.f64 a b y)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2)) 1/18)))))","(fma.f64 1/3 (*.f64 (fma.f64 a b y) (*.f64 z (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2)) 1/18)))) (cbrt.f64 (fma.f64 a t x)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 7)) 1/9) (*.f64 (pow.f64 z 2) (pow.f64 (+.f64 (*.f64 a b) y) 2)))) (+.f64 (pow.f64 (+.f64 (*.f64 a t) x) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 2)) 1/9) (*.f64 z (+.f64 (*.f64 a b) y))))))","(fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 7)) 1/18)) (*.f64 (pow.f64 (fma.f64 a b y) 2) (*.f64 z z))) (+.f64 (cbrt.f64 (fma.f64 a t x)) (*.f64 1/3 (*.f64 (*.f64 z (fma.f64 a b y)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2)) 1/18))))))","(fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 7)) 1/18)) (*.f64 (pow.f64 (fma.f64 a b y) 2) (*.f64 z z))) (fma.f64 1/3 (*.f64 (fma.f64 a b y) (*.f64 z (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2)) 1/18)))) (cbrt.f64 (fma.f64 a t x))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 7)) 1/9) (*.f64 (pow.f64 z 2) (pow.f64 (+.f64 (*.f64 a b) y) 2)))) (+.f64 (pow.f64 (+.f64 (*.f64 a t) x) 1/3) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 2)) 1/9) (*.f64 z (+.f64 (*.f64 a b) y)))) (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 (+.f64 (*.f64 a b) y) 3)))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 2)) 1/3) (pow.f64 (+.f64 (*.f64 a b) y) 3)))) (pow.f64 z 3)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) x) 2)) 1/3))))))","(fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 7)) 1/18)) (*.f64 (pow.f64 (fma.f64 a b y) 2) (*.f64 z z))) (+.f64 (cbrt.f64 (fma.f64 a t x)) (fma.f64 1/3 (*.f64 (*.f64 z (fma.f64 a b y)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2)) 1/18))) (*.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2))) (*.f64 (pow.f64 z 3) (fma.f64 -2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2))) (*.f64 1 (pow.f64 (fma.f64 a b y) 3))) (*.f64 1/27 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2))) (pow.f64 (fma.f64 a b y) 3))))))))))","(+.f64 (fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 7)) 1/18)) (*.f64 (pow.f64 (fma.f64 a b y) 2) (*.f64 z z))) (fma.f64 1/3 (*.f64 (fma.f64 a b y) (*.f64 z (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2)) 1/18)))) (cbrt.f64 (fma.f64 a t x)))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2))) (*.f64 -1/3 (*.f64 (pow.f64 z 3) (fma.f64 -2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2))) (pow.f64 (fma.f64 a b y) 3)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a t x) 2))) (*.f64 (pow.f64 (fma.f64 a b y) 3) 1/27)))))))","(pow.f64 (+.f64 (*.f64 y z) x) 1/3)","(cbrt.f64 (fma.f64 y z x))","(cbrt.f64 (fma.f64 z y x))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 2)) 1/9) (*.f64 a (+.f64 (*.f64 z b) t)))) (pow.f64 (+.f64 (*.f64 y z) x) 1/3))","(fma.f64 1/3 (*.f64 (*.f64 a (fma.f64 z b t)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 2)) 1/18))) (cbrt.f64 (fma.f64 y z x)))","(fma.f64 1/3 (*.f64 (fma.f64 z b t) (*.f64 a (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y x) 2)) 1/18)))) (cbrt.f64 (fma.f64 z y x)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 7)) 1/9) (*.f64 (pow.f64 (+.f64 t (*.f64 b z)) 2) (pow.f64 a 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 2)) 1/9) (*.f64 a (+.f64 (*.f64 z b) t)))) (pow.f64 (+.f64 (*.f64 y z) x) 1/3)))","(fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 7)) 1/18)) (*.f64 (*.f64 a a) (pow.f64 (fma.f64 z b t) 2))) (fma.f64 1/3 (*.f64 (*.f64 a (fma.f64 z b t)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 2)) 1/18))) (cbrt.f64 (fma.f64 y z x))))","(fma.f64 -1/9 (*.f64 (*.f64 a a) (*.f64 (pow.f64 (fma.f64 z b t) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y x) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y x) 7)) 1/18)))) (fma.f64 1/3 (*.f64 (fma.f64 z b t) (*.f64 a (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y x) 2)) 1/18)))) (cbrt.f64 (fma.f64 z y x))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 7)) 1/9) (*.f64 (pow.f64 (+.f64 t (*.f64 b z)) 2) (pow.f64 a 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 2)) 1/9) (*.f64 a (+.f64 (*.f64 z b) t)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 2)) 1/3) (*.f64 (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 2)) 1/3) (pow.f64 (+.f64 t (*.f64 b z)) 3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) x) 2)) 1/3) (*.f64 (*.f64 (+.f64 t (*.f64 b z)) (pow.f64 (+.f64 (*.f64 z b) t) 2)) (pow.f64 (pow.f64 1 4) 1/9))))) (pow.f64 a 3)))) (pow.f64 (+.f64 (*.f64 y z) x) 1/3))))","(fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 7)) 1/18)) (*.f64 (*.f64 a a) (pow.f64 (fma.f64 z b t) 2))) (fma.f64 1/3 (*.f64 (*.f64 a (fma.f64 z b t)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 2)) 1/18))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 2))) (*.f64 (pow.f64 a 3) (fma.f64 -2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 2))) (*.f64 1 (pow.f64 (fma.f64 z b t) 3))) (*.f64 (*.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 y z x) 2)))) (pow.f64 (fma.f64 z b t) 3))))) (cbrt.f64 (fma.f64 y z x)))))","(fma.f64 -1/9 (*.f64 (*.f64 a a) (*.f64 (pow.f64 (fma.f64 z b t) 2) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y x) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y x) 7)) 1/18)))) (fma.f64 1/3 (*.f64 (fma.f64 z b t) (*.f64 a (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y x) 2)) 1/18)))) (fma.f64 -1/3 (*.f64 (fma.f64 -2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z y x) 2))) (pow.f64 (fma.f64 z b t) 3)) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z y x) 2))) (*.f64 (pow.f64 (fma.f64 z b t) 3) 1/27))) (*.f64 (pow.f64 a 3) (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z y x) 2))))) (cbrt.f64 (fma.f64 z y x)))))","(pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 1/3)","(cbrt.f64 (fma.f64 y z (fma.f64 a t x)))","(cbrt.f64 (fma.f64 z y (fma.f64 a t x)))","(+.f64 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 1/3) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2)) 1/9) (*.f64 a (*.f64 b z)))))","(+.f64 (cbrt.f64 (fma.f64 y z (fma.f64 a t x))) (*.f64 1/3 (*.f64 (*.f64 a (*.f64 z b)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 2)) 1/18)))))","(fma.f64 1/3 (*.f64 a (*.f64 (*.f64 z b) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 2)) 1/18)))) (cbrt.f64 (fma.f64 z y (fma.f64 a t x))))","(+.f64 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 7)) 1/9) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 b 2) (pow.f64 z 2))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2)) 1/9) (*.f64 a (*.f64 b z))))))","(+.f64 (cbrt.f64 (fma.f64 y z (fma.f64 a t x))) (fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 7)) 1/18)) (*.f64 (*.f64 a a) (*.f64 (*.f64 z z) (*.f64 b b)))) (*.f64 1/3 (*.f64 (*.f64 a (*.f64 z b)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 2)) 1/18))))))","(+.f64 (cbrt.f64 (fma.f64 z y (fma.f64 a t x))) (fma.f64 1/3 (*.f64 a (*.f64 (*.f64 z b) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 2)) 1/18)))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 7)) 1/18)) (*.f64 (*.f64 (*.f64 z z) (*.f64 a (*.f64 a (*.f64 b b)))) -1/9))))","(+.f64 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 1/3) (+.f64 (*.f64 -1/3 (*.f64 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (*.f64 (pow.f64 a 3) (pow.f64 z 3))))) (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2)) 1/3) (*.f64 (pow.f64 a 3) (pow.f64 z 3))))) (pow.f64 b 3)) (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2)) 1/3))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 7)) 1/9) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 b 2) (pow.f64 z 2))))) (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 y z) (+.f64 (*.f64 a t) x)) 2)) 1/9) (*.f64 a (*.f64 b z)))))))","(+.f64 (cbrt.f64 (fma.f64 y z (fma.f64 a t x))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 2))) (*.f64 (fma.f64 -2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 2))) (*.f64 (*.f64 1 (pow.f64 a 3)) (pow.f64 z 3))) (*.f64 1/27 (*.f64 (*.f64 (pow.f64 z 3) (pow.f64 a 3)) (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 2)))))) (pow.f64 b 3))) (fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 7)) 1/18)) (*.f64 (*.f64 a a) (*.f64 (*.f64 z z) (*.f64 b b)))) (*.f64 1/3 (*.f64 (*.f64 a (*.f64 z b)) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 y z (fma.f64 a t x)) 2)) 1/18)))))))","(+.f64 (fma.f64 (*.f64 -1/3 (*.f64 (fma.f64 -2/9 (*.f64 (pow.f64 z 3) (*.f64 (pow.f64 a 3) (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 2))))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 2))) (*.f64 (*.f64 (pow.f64 z 3) (pow.f64 a 3)) 1/27))) (pow.f64 b 3))) (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 2))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 7)) 1/18)) (*.f64 (*.f64 (*.f64 z z) (*.f64 a (*.f64 a (*.f64 b b)))) -1/9))) (fma.f64 1/3 (*.f64 a (*.f64 (*.f64 z b) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (fma.f64 a t x)) 2)) 1/18)))) (cbrt.f64 (fma.f64 z y (fma.f64 a t x)))))","(pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 1/3)","(cbrt.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)))","(cbrt.f64 (fma.f64 a (fma.f64 z b t) x))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 2)) 1/9) (*.f64 y z))) (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 1/3))","(fma.f64 1/3 (*.f64 (*.f64 z y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18))) (cbrt.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x))))","(fma.f64 1/3 (*.f64 (*.f64 z y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18))) (cbrt.f64 (fma.f64 a (fma.f64 z b t) x)))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 2)) 1/9) (*.f64 y z))) (+.f64 (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 1/3) (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 4)) 1/9) (*.f64 (pow.f64 y 2) (pow.f64 z 2)))))))","(+.f64 (fma.f64 1/3 (*.f64 (*.f64 z y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18))) (cbrt.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)))) (*.f64 -1/9 (*.f64 (cbrt.f64 (/.f64 1 (fma.f64 a (fma.f64 z b t) x))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 4)) 1/18)) (*.f64 (*.f64 z z) (*.f64 y y))))))","(fma.f64 1/3 (*.f64 (*.f64 z y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18))) (fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 4)) 1/18)) (*.f64 (*.f64 z (*.f64 z (*.f64 y y))) (cbrt.f64 (/.f64 1 (fma.f64 a (fma.f64 z b t) x))))) (cbrt.f64 (fma.f64 a (fma.f64 z b t) x))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 2)) 1/9) (*.f64 y z))) (+.f64 (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 1/3) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x))) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 4)) 1/9) (*.f64 (pow.f64 y 2) (pow.f64 z 2))))) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) 2)) 1/3) (*.f64 (pow.f64 y 3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 2)) 1/3) (pow.f64 z 3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x)) (pow.f64 (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)) 5))) 1/9) (pow.f64 z 3))))))))))","(+.f64 (fma.f64 1/3 (*.f64 (*.f64 z y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18))) (cbrt.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)))) (fma.f64 -1/9 (*.f64 (cbrt.f64 (/.f64 1 (fma.f64 a (fma.f64 z b t) x))) (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 4)) 1/18)) (*.f64 (*.f64 z z) (*.f64 y y)))) (*.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2))) (*.f64 (pow.f64 y 3) (fma.f64 1/27 (*.f64 (pow.f64 z 3) (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 z 3) (*.f64 (pow.f64 (/.f64 1 (*.f64 (fma.f64 a (fma.f64 z b t) x) (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 5))) 1/18) (pow.f64 (/.f64 1 (*.f64 (fma.f64 a (fma.f64 z b t) x) (pow.f64 (fma.f64 a t (fma.f64 a (*.f64 z b) x)) 5))) 1/18))))))))))","(+.f64 (fma.f64 1/3 (*.f64 (*.f64 z y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18))) (cbrt.f64 (fma.f64 a (fma.f64 z b t) x))) (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 z 3) (+.f64 (*.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 5)) (fma.f64 a (fma.f64 z b t) x)) 1/18) (pow.f64 (/.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 5)) (fma.f64 a (fma.f64 z b t) x)) 1/18))))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2))) (pow.f64 y 3))) (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 4)) 1/18)) (*.f64 (*.f64 z (*.f64 z (*.f64 y y))) (cbrt.f64 (/.f64 1 (fma.f64 a (fma.f64 z b t) x))))))))","(+.f64 (fma.f64 1/3 (*.f64 (*.f64 z y) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)) 1/18))) (cbrt.f64 (fma.f64 a (fma.f64 z b t) x))) (fma.f64 -1/3 (*.f64 (*.f64 (pow.f64 z 3) (+.f64 (*.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2)))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 6)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 6)) 1/18))))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2))) (pow.f64 y 3))) (*.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 4)) 1/18)) (*.f64 (*.f64 z (*.f64 z (*.f64 y y))) (cbrt.f64 (/.f64 1 (fma.f64 a (fma.f64 z b t) x))))))))","(pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 1/3)","(cbrt.f64 (fma.f64 z (fma.f64 a b y) x))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2)) 1/9) (*.f64 a t))) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 1/3))","(fma.f64 1/3 (*.f64 (*.f64 a t) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)) 1/18))) (cbrt.f64 (fma.f64 z (fma.f64 a b y) x)))","(fma.f64 1/3 (*.f64 t (*.f64 a (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)) 1/18)))) (cbrt.f64 (fma.f64 z (fma.f64 a b y) x)))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 7)) 1/9) (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2)) 1/9) (*.f64 a t))) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 1/3)))","(fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 7)) 1/18)) (*.f64 (*.f64 a a) (*.f64 t t))) (fma.f64 1/3 (*.f64 (*.f64 a t) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)) 1/18))) (cbrt.f64 (fma.f64 z (fma.f64 a b y) x))))","(fma.f64 -1/9 (*.f64 (*.f64 t t) (*.f64 (*.f64 a a) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 7)) 1/18)))) (fma.f64 1/3 (*.f64 t (*.f64 a (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)) 1/18)))) (cbrt.f64 (fma.f64 z (fma.f64 a b y) x))))","(+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 7)) 1/9) (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2)) 1/9) (*.f64 a t))) (+.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 1/3) (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2)) 1/3) (*.f64 (pow.f64 t 3) (+.f64 (*.f64 1/27 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2)) 1/3) (pow.f64 a 3))) (*.f64 -2/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) x) 2)) 1/3) (*.f64 (pow.f64 (pow.f64 1 4) 1/9) (pow.f64 a 3)))))))))))","(fma.f64 -1/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 7)) 1/18)) (*.f64 (*.f64 a a) (*.f64 t t))) (+.f64 (fma.f64 1/3 (*.f64 (*.f64 a t) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)) 1/18))) (cbrt.f64 (fma.f64 z (fma.f64 a b y) x))) (*.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2))) (*.f64 (fma.f64 1/27 (*.f64 (pow.f64 a 3) (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)))) (*.f64 -2/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2))) (*.f64 1 (pow.f64 a 3))))) (pow.f64 t 3))))))","(fma.f64 -1/9 (*.f64 (*.f64 t t) (*.f64 (*.f64 a a) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 7)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 7)) 1/18)))) (fma.f64 1/3 (*.f64 t (*.f64 a (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)) 1/18)))) (fma.f64 -1/3 (*.f64 (fma.f64 -2/9 (*.f64 (pow.f64 a 3) (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2)))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2))) (*.f64 (pow.f64 a 3) 1/27))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z (fma.f64 a b y) x) 2))) (pow.f64 t 3))) (cbrt.f64 (fma.f64 z (fma.f64 a b y) x)))))","(pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3)","(cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))))","(cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2)) 1/9) x)) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))","(fma.f64 1/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) 1/18))) (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y)))))","(fma.f64 1/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2)) 1/18))) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t)))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2)) 1/9) x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2)) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3)))) (pow.f64 x 2)))) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3)))","(fma.f64 1/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) 1/18))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2))) (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18)) (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))))) 1/3) (*.f64 x x))) (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))))))","(fma.f64 1/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2)) 1/18))) (fma.f64 -1/3 (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))))))) (*.f64 (*.f64 x x) (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2))))) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))))))","(+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2)) 1/9) x)) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2)) 1/3) (*.f64 (+.f64 (*.f64 -4/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 8)) 1/9) (*.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))))))) (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3) (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 8)) 1/9) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))) (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 4)) 1/9) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))))))) (*.f64 1/27 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 2)) 1/3)))) (pow.f64 x 3)))) (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 2)) 1/3) (*.f64 (+.f64 (*.f64 2/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3))) (*.f64 1/9 (*.f64 (pow.f64 (/.f64 (pow.f64 1 4) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 4)) 1/9) (pow.f64 (+.f64 (*.f64 z (+.f64 (*.f64 a b) y)) (*.f64 a t)) 1/3)))) (pow.f64 x 2)))) (pow.f64 (+.f64 (*.f64 a t) (*.f64 z (+.f64 (*.f64 a b) y))) 1/3))))","(fma.f64 1/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2)) 1/18))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2))) (*.f64 (pow.f64 x 3) (fma.f64 -2/9 (*.f64 (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y)))) (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18)) (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))))) 1/3) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 8)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 8)) 1/18)))) (fma.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2))) (*.f64 -4/9 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 8)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 8)) 1/18)) (*.f64 (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y)))) (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18)) (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))))) 1/3)))))))) (fma.f64 -1/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 2))) (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))) 4)) 1/18)) (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y))))) 1/3) (*.f64 x x))) (cbrt.f64 (fma.f64 a t (*.f64 z (fma.f64 a b y)))))))","(+.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2))) -1/3) (+.f64 (*.f64 (pow.f64 x 3) (fma.f64 -2/9 (*.f64 (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t)))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 8)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 8)) 1/18)))) (fma.f64 1/27 (cbrt.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2))) (*.f64 -4/9 (*.f64 (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t)))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))))))) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 8)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 8)) 1/18)))))))) (*.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 4)) 1/18) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))))))) (*.f64 x x)))) (fma.f64 1/3 (*.f64 x (*.f64 (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2)) 1/18) (pow.f64 (/.f64 1 (pow.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))) 2)) 1/18))) (cbrt.f64 (fma.f64 z y (*.f64 a (fma.f64 z b t))))))"]],"stop":[["node limit",1]],"time":85.97607421875,"type":"simplify"},{"compiler":[[20631,6901]],"time":126.135009765625,"type":"eval"},{"alts":[["(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 z b))) 3))","fresh",3.579452539073768],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","done",3.468315332127029],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","done",2.8046875],["(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","next",3.53515625],["(fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (fma.f64 a b y)) (fma.f64 a t x))","fresh",34.33203125],["(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (*.f64 (*.f64 a z) b))","done",2.287480354339564]],"compiler":[[24,16],[31,13],[16,9],[16,9],[20,11],[21,13],[24,16],[16,9],[20,11]],"count":[[435,6]],"kept":[{"done":[2,2],"fresh":[2,1],"new":[430,2],"picked":[1,1]}],"min-error":[0.00390625],"time":118.183837890625,"type":"prune"},{"compiler":[[33,9]],"locations":[["(fma.f64 a (fma.f64 z b t) x)",3.3676470306480724,true]],"time":6.3291015625,"type":"localize"},{"count":[[1,60]],"series":[["(fma.f64 a (fma.f64 z b t) x)","x","-inf",0.1591796875],["(fma.f64 a (fma.f64 z b t) x)","x","inf",0.177001953125],["(fma.f64 a (fma.f64 z b t) x)","x","0",0.2490234375],["(fma.f64 a (fma.f64 z b t) x)","t","-inf",0.2529296875],["(fma.f64 a (fma.f64 z b t) x)","t","inf",0.263916015625],["(fma.f64 a (fma.f64 z b t) x)","t","0",0.515869140625],["(fma.f64 a (fma.f64 z b t) x)","b","-inf",0.31689453125],["(fma.f64 a (fma.f64 z b t) x)","b","inf",0.317138671875],["(fma.f64 a (fma.f64 z b t) x)","b","0",0.298095703125],["(fma.f64 a (fma.f64 z b t) x)","z","-inf",0.31982421875],["(fma.f64 a (fma.f64 z b t) x)","z","inf",0.302978515625],["(fma.f64 a (fma.f64 z b t) x)","z","0",0.283935546875],["(fma.f64 a (fma.f64 z b t) x)","a","-inf",0.259033203125],["(fma.f64 a (fma.f64 z b t) x)","a","inf",0.22021484375],["(fma.f64 a (fma.f64 z b t) x)","a","0",0.431884765625]],"time":4.5390625,"type":"series"},{"count":[[1,21]],"egraph":[[2,1863,9,0.017987167],[1,157,9,0.002401584],[0,8,9,0.000164]],"inputs":[["(fma.f64 a (fma.f64 z b t) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 a (fma.f64 z b t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (fma.f64 z b t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 a (fma.f64 z b t)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 a (fma.f64 z b t) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 a (fma.f64 z b t) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 a (fma.f64 z b t) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 a (fma.f64 z b t) x)) (pow.f64 (cbrt.f64 (fma.f64 a (fma.f64 z b t) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 a (fma.f64 z b t) x)) 2) (cbrt.f64 (fma.f64 a (fma.f64 z b t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 a (fma.f64 z b t) x)) (sqrt.f64 (fma.f64 a (fma.f64 z b t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 a (fma.f64 z b t)) 3) (pow.f64 x 3)) (+.f64 (*.f64 (*.f64 a (fma.f64 z b t)) (*.f64 a (fma.f64 z b t))) (-.f64 (*.f64 x x) (*.f64 (*.f64 a (fma.f64 z b t)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 a (fma.f64 z b t)) (*.f64 a (fma.f64 z b t))) (*.f64 x x)) (-.f64 (*.f64 a (fma.f64 z b t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 a (fma.f64 z b t) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 a (fma.f64 z b t) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 a (fma.f64 z b t) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 a (fma.f64 z b t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 a (fma.f64 z b t) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 a (fma.f64 z b t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 a (fma.f64 z b t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 a (fma.f64 z b t) x)))))))"]],"rules":[["egg-rr",21]],"stop":[["node limit",1]],"time":35.64404296875,"type":"rewrite"},{"count":[[81,39]],"egraph":[[3,81,486,0.0006790419999999999],[2,75,486,0.000500542],[1,51,486,0.000317542],[0,22,582,0.000139125]],"inputs":[["x","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(*.f64 (+.f64 t (*.f64 b z)) a)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(*.f64 (+.f64 t (*.f64 b z)) a)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(+.f64 (*.f64 a t) x)","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 z b)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 z b)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 z b)) x))","(*.f64 a (*.f64 z b))","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(*.f64 a (*.f64 z b))","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(+.f64 (*.f64 a t) x)","(+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x))","(+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x))","(*.f64 a (*.f64 b z))","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x))","(*.f64 a (*.f64 b z))","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x))","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x))","(+.f64 (*.f64 a (*.f64 z b)) x)","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(*.f64 a t)","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(*.f64 a t)","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(*.f64 (+.f64 t (*.f64 b z)) a)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","x","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","x","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)"]],"method":["egg-herbie"],"outputs":[["x","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(*.f64 (+.f64 t (*.f64 b z)) a)","(*.f64 (fma.f64 b z t) a)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(*.f64 (+.f64 t (*.f64 b z)) a)","(*.f64 (fma.f64 b z t) a)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a t) x)","(fma.f64 a t x)","(fma.f64 t a x)","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 z b)) x))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 z b)) x))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 z b)) x))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(*.f64 a (*.f64 z b))","(*.f64 (*.f64 b z) a)","(*.f64 b (*.f64 z a))","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(*.f64 a (*.f64 z b))","(*.f64 (*.f64 b z) a)","(*.f64 b (*.f64 z a))","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a t) x)","(fma.f64 a t x)","(fma.f64 t a x)","(+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a (*.f64 b z)) (+.f64 (*.f64 a t) x))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 b z) a)","(*.f64 b (*.f64 z a))","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(*.f64 a (*.f64 b z))","(*.f64 (*.f64 b z) a)","(*.f64 b (*.f64 z a))","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a (*.f64 z b)) x)","(fma.f64 a (*.f64 b z) x)","(fma.f64 (*.f64 z a) b x)","(fma.f64 b (*.f64 z a) x)","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(*.f64 a t)","(*.f64 t a)","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(*.f64 a t)","(*.f64 t a)","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 a t) (+.f64 x (*.f64 a (*.f64 z b))))","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(*.f64 (+.f64 t (*.f64 b z)) a)","(*.f64 (fma.f64 b z t) a)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","x","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","x","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)","(+.f64 (*.f64 (+.f64 t (*.f64 b z)) a) x)","(fma.f64 (+.f64 t (*.f64 b z)) a x)","(fma.f64 (fma.f64 b z t) a x)"]],"stop":[["saturated",1]],"time":15.976806640625,"type":"simplify"},{"compiler":[[511,132]],"time":4.355224609375,"type":"eval"},{"alts":[["(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 z b))) 3))","fresh",3.579452539073768],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","done",3.468315332127029],["(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","done",2.8046875],["(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","done",3.53515625],["(fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (fma.f64 a b y)) (fma.f64 a t x))","fresh",34.33203125],["(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (*.f64 (*.f64 a z) b))","done",2.287480354339564]],"compiler":[[24,16],[31,13],[16,9],[16,9],[20,11],[21,13]],"count":[[45,6]],"kept":[{"done":[3,3],"fresh":[2,2],"new":[39,0],"picked":[1,1]}],"min-error":[0.00390625],"time":8.909912109375,"type":"prune"},{"accuracy":[0.5374803543395638],"baseline":[2.287480354339564],"branch":[["x",2.287480354339564,1],["y",2.287480354339564,1],["z",0.5374803543395638,2],["t",2.287480354339564,1],["a",0.80078125,2],["b",1.2796678543395639,2],["(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (*.f64 (*.f64 a z) b))",0.7874803543395638,2]],"compiler":[[7,6],[7,6],[7,6],[7,6],[7,6],[7,6],[21,13],[128,40]],"count":[[8,2]],"inputs":[["(fma.f64 z y (fma.f64 a (fma.f64 z b t) x))","(fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) (fma.f64 a b y)) (fma.f64 a t x))","(*.f64 (pow.f64 (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))) 2) (cbrt.f64 (fma.f64 z (fma.f64 a b y) (fma.f64 t a x))))","(+.f64 (*.f64 y z) (+.f64 (*.f64 a t) (+.f64 (*.f64 a (*.f64 b z)) x)))","(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (pow.f64 (cbrt.f64 (*.f64 a (*.f64 z b))) 3))","(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (*.f64 a (*.f64 b z)))","(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))","(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (*.f64 (*.f64 a z) b))"]],"link":["."],"name":["Graphics.Rasterific.CubicBezier:cachedBezierAt from Rasterific-0.6.1"],"oracle":[38.34191142583196],"outputs":[["(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (*.f64 (*.f64 a z) b))","(fma.f64 z (fma.f64 a b y) (fma.f64 t a x))"]],"time":51.697998046875,"times":[["x",4.320068359375],["y",4.5009765625],["z",12.10302734375],["t",4.370849609375],["a",8.072998046875],["b",7.89697265625],["(+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (*.f64 (*.f64 a z) b))",8.2099609375]],"type":"regimes"},{"bstep":[[1.5027353071510996e+137,2.3115326616180267e+156,2.7041015625]],"compiler":[[17,10],[22,14],[23,15],[7,6]],"method":["binary-search"],"time":2.806884765625,"type":"bsearch"},{"compiler":[[35,19]],"egraph":[[1,28,41,6.3833e-5],[0,21,41,3.4583e-5]],"inputs":[["(if (<=.f64 z 999999999999999980835596172437374590573120014030318793091164810154100112203678582976298268616221151962702060266176005440567032331208403948233373515776) (+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (*.f64 (*.f64 a z) b)) (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 z 999999999999999980835596172437374590573120014030318793091164810154100112203678582976298268616221151962702060266176005440567032331208403948233373515776) (+.f64 (+.f64 (+.f64 x (*.f64 y z)) (*.f64 t a)) (*.f64 (*.f64 a z) b)) (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))","(if (<=.f64 z 999999999999999980835596172437374590573120014030318793091164810154100112203678582976298268616221151962702060266176005440567032331208403948233373515776) (+.f64 (+.f64 (+.f64 x (*.f64 z y)) (*.f64 t a)) (*.f64 (*.f64 z a) b)) (fma.f64 z (fma.f64 a b y) (fma.f64 t a x)))"]],"stop":[["fuel",1],["saturated",1]],"time":8.72509765625,"type":"simplify"},{"time":0.015869140625,"type":"soundness"},{"compiler":[[35,19]],"remove-preprocessing":[[]],"time":11.9140625,"type":"end"}]