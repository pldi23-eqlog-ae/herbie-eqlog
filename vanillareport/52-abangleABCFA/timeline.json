[{"compiler":[[25,20]],"method":["search"],"sampling":[[12,0.448561035975672,0.42515785148998475,0.12628111253434326],[11,0.3588488287805376,0.5148700586851191,0.12628111253434326],[10,0.3120424598091631,0.5616764276564936,0.12628111253434326],[9,0.3120424598091631,0.5616764276564936,0.12628111253434326],[8,0.3120424598091631,0.6864934115801589,0.0014641286106780171],[7,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[6,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":330.907958984375,"type":"analyze"},{"outcomes":[["body",512,"invalid",212.70361328125,697],["body",256,"invalid",117.44091796875,1010],["body",4096,"valid",25.388916015625,5],["body",512,"valid",225.77978515625,791],["body",1024,"invalid",748.939208984375,1374],["body",1024,"valid",860.376220703125,1619],["body",2048,"valid",204.3701171875,198],["body",256,"valid",609.42236328125,5643]],"time":3016.173095703125,"type":"sample"},{"compiler":[[24,19]],"egraph":[[0,3,3,2.5e-6],[16,7941,136,0.09488520600000001],[15,7765,136,0.08440312200000001],[14,7115,136,0.073938205],[13,6253,136,0.06359616400000001],[12,5493,136,0.053968705000000006],[11,4699,136,0.04561978900000001],[10,3764,136,0.036298289000000004],[9,3077,136,0.028041331000000003],[8,2607,136,0.021139248000000003],[7,2276,136,0.016074665000000002],[6,1963,136,0.011878707],[5,1303,136,0.008129832],[4,936,136,0.005181916],[3,483,136,0.002877416],[2,222,136,0.001351624],[1,86,136,0.0005290410000000001],[0,39,136,0.000170291]],"inputs":[["0","1","2"],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","(+.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","(+.f64 (pow.f64 (*.f64 angle (sin.f64 (*.f64 (/.f64 a 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 a 180) (PI.f64)))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 b 180) (PI.f64)))) 2) (pow.f64 (*.f64 angle (cos.f64 (*.f64 (/.f64 b 180) (PI.f64)))) 2))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (pow.f64 (*.f64 b (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","(+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64))) b) 2) (pow.f64 (*.f64 a (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","(+.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180))) b) 2) (pow.f64 (*.f64 a (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (pow.f64 (*.f64 angle (sin.f64 (*.f64 (/.f64 a 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 a 180) (PI.f64)))) 2))","(+.f64 (pow.f64 (*.f64 angle (sin.f64 (*.f64 (PI.f64) (/.f64 a 180)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (PI.f64) (/.f64 a 180)))) 2))","(+.f64 (pow.f64 (*.f64 angle (sin.f64 (/.f64 (PI.f64) (/.f64 180 a)))) 2) (pow.f64 (*.f64 b (cos.f64 (/.f64 (PI.f64) (/.f64 180 a)))) 2))","(+.f64 (pow.f64 (*.f64 angle (sin.f64 (/.f64 (*.f64 a (PI.f64)) 180))) 2) (pow.f64 (*.f64 b (cos.f64 (/.f64 (*.f64 a (PI.f64)) 180))) 2))","(+.f64 (pow.f64 (*.f64 angle (sin.f64 (*.f64 a (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 a (/.f64 (PI.f64) 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 b 180) (PI.f64)))) 2) (pow.f64 (*.f64 angle (cos.f64 (*.f64 (/.f64 b 180) (PI.f64)))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (PI.f64) (/.f64 b 180)))) 2) (pow.f64 (*.f64 angle (cos.f64 (*.f64 (PI.f64) (/.f64 b 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (/.f64 (*.f64 (PI.f64) b) 180))) 2) (pow.f64 (*.f64 angle (cos.f64 (/.f64 (*.f64 (PI.f64) b) 180))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 b (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 angle (cos.f64 (*.f64 b (/.f64 (PI.f64) 180)))) 2))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":122.802978515625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[20,7877,34,0.10586587500000001],[19,7050,34,0.09441200000000001],[18,6980,34,0.08267695800000001],[17,6820,34,0.074205792],[16,6384,34,0.06569395800000001],[15,5930,34,0.056977833000000006],[14,5242,34,0.049333167000000004],[13,4365,34,0.041129667],[12,3658,34,0.033430542],[11,3064,34,0.026791500000000003],[10,2616,34,0.021261958000000004],[9,2306,34,0.016381917000000003],[8,2066,34,0.012526583],[7,1849,34,0.009245958],[6,1026,34,0.006006166],[5,657,34,0.003556833],[4,260,34,0.001978416],[3,142,34,0.000943833],[2,71,34,0.000499124],[1,30,34,0.000221291],[0,16,34,8.0708e-5]],"inputs":[["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))"]],"stop":[["node limit",1]],"time":118.324951171875,"type":"simplify"},{"compiler":[[45,34]],"time":0.675048828125,"type":"eval"},{"alts":[["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","fresh",21.09421523058784],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","next",21.077119719092032]],"compiler":[[24,19],[24,19],[24,19],[24,19]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[20.925201131201447],"time":1.89501953125,"type":"prune"},{"compiler":[[86,58]],"locations":[["(*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180))))",0.236660009768442,true],["(pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2)",0.33107377930532605,true],["(sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))",25.40669251837167,true],["(cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))",26.47512414518111,true]],"time":25.10888671875,"type":"localize"},{"count":[[4,72]],"series":[["(*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180))))","angle","-inf",0.152099609375],["(*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180))))","angle","inf",0.175048828125],["(*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180))))","angle","0",0.35205078125],["(*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180))))","a","-inf",0.160888671875],["(*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180))))","a","inf",0.157958984375],["(*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180))))","a","0",0.176025390625],["(pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2)","angle","-inf",0.487060546875],["(pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2)","angle","inf",0.501953125],["(pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2)","angle","0",0.680908203125],["(pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2)","a","-inf",0.757080078125],["(pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2)","a","inf",0.48193359375],["(pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2)","a","0",1.1689453125],["(sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))","angle","-inf",0.15283203125],["(sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))","angle","inf",0.159912109375],["(sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))","angle","0",0.468017578125],["(cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))","angle","-inf",0.364013671875],["(cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))","angle","inf",0.197021484375],["(cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))","angle","0",0.569091796875]],"time":7.420166015625,"type":"series"},{"count":[[4,110]],"egraph":[[2,2928,49,0.025749334],[1,253,49,0.004323667],[0,12,49,0.000359209]],"inputs":[["(cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))","(sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))","(pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2)","(*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (sqrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2) (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (sqrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) (*.f64 a (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)) 4) (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2)) (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)) (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 3/2) (sqrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) a)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) a) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)) 5) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 6)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) a)) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) a))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) a))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 6) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2)) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) a))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) 1) 1/2))))))"]],"rules":[["egg-rr",26],["egg-rr",30],["egg-rr",27],["egg-rr",27]],"stop":[["node limit",1]],"time":52.698974609375,"type":"rewrite"},{"count":[[182,149]],"egraph":[[10,7903,1320,0.076424251],[9,7119,1320,0.066903292],[8,4236,1320,0.051654542],[7,4002,1320,0.040688292],[6,3816,1320,0.032770834],[5,3665,1320,0.025798625999999998],[4,3354,1320,0.019327917],[3,2741,1320,0.013058459],[2,1092,1328,0.006921834],[1,306,1354,0.002342334],[0,105,1356,0.000575792]],"inputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/180 (*.f64 angle (PI.f64))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (+.f64 (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))))","(+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4)))) (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6)))))))","(+.f64 (*.f64 (pow.f64 angle 8) (+.f64 (*.f64 -1/396718580736000000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 8))) (*.f64 -1/2777030065152000000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 8))))) (+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))))))))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (*.f64 a (pow.f64 (PI.f64) 3)))) (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64)))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (*.f64 a (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64)))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (*.f64 a (pow.f64 (PI.f64) 5))))))","(+.f64 (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (*.f64 a (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (*.f64 a (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64)))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (*.f64 a (pow.f64 (PI.f64) 5)))))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (*.f64 (*.f64 -1/64800 (*.f64 angle angle)) (pow.f64 (PI.f64) 2)))","(fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) 1)","(fma.f64 (*.f64 angle angle) (*.f64 -1/64800 (pow.f64 (PI.f64) 2)) 1)","(fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) 1)","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 (*.f64 -1/64800 (*.f64 angle angle)) (pow.f64 (PI.f64) 2))))","(+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 (*.f64 -1/64800 (pow.f64 (PI.f64) 2)) (*.f64 angle angle))))","(fma.f64 (*.f64 angle angle) (*.f64 -1/64800 (pow.f64 (PI.f64) 2)) (fma.f64 (pow.f64 angle 4) (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) 1))","(fma.f64 (*.f64 angle angle) (*.f64 -1/64800 (pow.f64 (PI.f64) 2)) (fma.f64 (pow.f64 (PI.f64) 4) (*.f64 1/25194240000 (pow.f64 angle 4)) 1))","(fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 (*.f64 -1/64800 (*.f64 angle angle)) (pow.f64 (PI.f64) 2)))))","(+.f64 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 (*.f64 -1/64800 (pow.f64 (PI.f64) 2)) (*.f64 angle angle))) (fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) 1))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (fma.f64 (*.f64 angle angle) (*.f64 -1/64800 (pow.f64 (PI.f64) 2)) (fma.f64 (pow.f64 angle 4) (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) 1)))","(fma.f64 (pow.f64 angle 6) (*.f64 -1/24488801280000000 (pow.f64 (PI.f64) 6)) (fma.f64 (*.f64 angle angle) (*.f64 -1/64800 (pow.f64 (PI.f64) 2)) (fma.f64 (pow.f64 (PI.f64) 4) (*.f64 1/25194240000 (pow.f64 angle 4)) 1)))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 (PI.f64) 1/180))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/180 (*.f64 angle (PI.f64))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (*.f64 1/180 (*.f64 angle (PI.f64))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (*.f64 angle (*.f64 (PI.f64) 1/180)))","(fma.f64 angle (*.f64 (PI.f64) 1/180) (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))))","(fma.f64 angle (*.f64 (PI.f64) 1/180) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -1/34992000 (pow.f64 angle 3))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/180 (*.f64 angle (PI.f64)) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/180 (*.f64 angle (PI.f64)) (*.f64 (pow.f64 angle 5) (*.f64 (pow.f64 (PI.f64) 5) 1/22674816000000))))","(fma.f64 (pow.f64 angle 5) (*.f64 1/22674816000000 (pow.f64 (PI.f64) 5)) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (*.f64 angle (*.f64 (PI.f64) 1/180))))","(fma.f64 angle (*.f64 (PI.f64) 1/180) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 angle (*.f64 (PI.f64) 1/180) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -1/34992000 (pow.f64 angle 3)))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (+.f64 (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 angle (*.f64 (PI.f64) 1/180) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 angle (*.f64 (PI.f64) 1/180) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 (PI.f64) 7) (*.f64 -1/30855889612800000000 (pow.f64 angle 7))))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2))))","(*.f64 1/32400 (*.f64 (*.f64 (*.f64 angle angle) (*.f64 a a)) (pow.f64 (PI.f64) 2)))","(*.f64 (*.f64 angle angle) (*.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 a a)) 1/32400))","(*.f64 (*.f64 angle angle) (*.f64 1/32400 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 a a))))","(*.f64 (pow.f64 (PI.f64) 2) (*.f64 1/32400 (*.f64 angle (*.f64 angle (*.f64 a a)))))","(+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4)))) (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))))","(fma.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 a a))) (*.f64 1/32400 (*.f64 (*.f64 (*.f64 angle angle) (*.f64 a a)) (pow.f64 (PI.f64) 2))))","(fma.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 a a))) (*.f64 (*.f64 angle angle) (*.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 a a)) 1/32400)))","(*.f64 (*.f64 a a) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000))))","(+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6)))))))","(fma.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 a a))) (fma.f64 1/32400 (*.f64 (*.f64 (*.f64 angle angle) (*.f64 a a)) (pow.f64 (PI.f64) 2)) (*.f64 (pow.f64 angle 6) (*.f64 (*.f64 (pow.f64 (PI.f64) 6) (*.f64 a a)) 1/765275040000000))))","(fma.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 a a))) (fma.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 (*.f64 a a) 1/765275040000000)) (*.f64 (*.f64 angle angle) (*.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 a a)) 1/32400))))","(fma.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 (*.f64 a a) 1/765275040000000)) (*.f64 (*.f64 a a) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000)))))","(fma.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 a (*.f64 a 1/765275040000000))) (*.f64 (*.f64 a a) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000)))))","(fma.f64 (pow.f64 angle 6) (*.f64 (*.f64 (pow.f64 (PI.f64) 6) (*.f64 a a)) 1/765275040000000) (*.f64 (*.f64 a a) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000)))))","(+.f64 (*.f64 (pow.f64 angle 8) (+.f64 (*.f64 -1/396718580736000000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 8))) (*.f64 -1/2777030065152000000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 8))))) (+.f64 (*.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/1224440064000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))) (*.f64 1/2040733440000000 (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 6))))))))","(fma.f64 (pow.f64 angle 8) (*.f64 (*.f64 (*.f64 a a) (pow.f64 (PI.f64) 8)) -1/347128758144000000000) (fma.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 a a))) (fma.f64 1/32400 (*.f64 (*.f64 (*.f64 angle angle) (*.f64 a a)) (pow.f64 (PI.f64) 2)) (*.f64 (pow.f64 angle 6) (*.f64 (*.f64 (pow.f64 (PI.f64) 6) (*.f64 a a)) 1/765275040000000)))))","(fma.f64 (pow.f64 angle 8) (*.f64 (pow.f64 (PI.f64) 8) (*.f64 (*.f64 a a) -1/347128758144000000000)) (fma.f64 -1/3149280000 (*.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 a a))) (fma.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 (*.f64 a a) 1/765275040000000)) (*.f64 (*.f64 angle angle) (*.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 a a)) 1/32400)))))","(fma.f64 (pow.f64 angle 8) (*.f64 (pow.f64 (PI.f64) 8) (*.f64 (*.f64 a a) -1/347128758144000000000)) (fma.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 (*.f64 a a) 1/765275040000000)) (*.f64 (*.f64 a a) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000))))))","(fma.f64 (pow.f64 angle 8) (*.f64 (pow.f64 (PI.f64) 8) (*.f64 a (*.f64 a -1/347128758144000000000))) (fma.f64 (pow.f64 angle 6) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 a (*.f64 a 1/765275040000000))) (*.f64 (*.f64 a a) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000))))))","(fma.f64 (pow.f64 angle 8) (*.f64 (pow.f64 (PI.f64) 8) (*.f64 a (*.f64 a -1/347128758144000000000))) (fma.f64 (pow.f64 angle 6) (*.f64 (*.f64 (pow.f64 (PI.f64) 6) (*.f64 a a)) 1/765275040000000) (*.f64 (*.f64 a a) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000))))))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (pow.f64 a 2) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 (*.f64 a a) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))","(*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)","(*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64))))","(*.f64 (*.f64 1/180 angle) (*.f64 (PI.f64) a))","(*.f64 angle (*.f64 (*.f64 (PI.f64) a) 1/180))","(*.f64 angle (*.f64 1/180 (*.f64 (PI.f64) a)))","(*.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)) a)","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (*.f64 a (pow.f64 (PI.f64) 3)))) (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64)))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (PI.f64) 3) a)) (*.f64 (*.f64 1/180 angle) (*.f64 (PI.f64) a)))","(fma.f64 1/180 (*.f64 angle (*.f64 (PI.f64) a)) (*.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 (PI.f64) 3) a)) (pow.f64 angle 3)))","(*.f64 a (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (*.f64 angle (*.f64 (PI.f64) 1/180))))","(*.f64 a (fma.f64 angle (*.f64 (PI.f64) 1/180) (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)))))","(*.f64 (fma.f64 angle (*.f64 (PI.f64) 1/180) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -1/34992000 (pow.f64 angle 3)))) a)","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (*.f64 a (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64)))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (*.f64 a (pow.f64 (PI.f64) 5))))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (PI.f64) 3) a)) (fma.f64 1/180 (*.f64 angle (*.f64 (PI.f64) a)) (*.f64 1/22674816000000 (*.f64 (*.f64 (pow.f64 angle 5) a) (pow.f64 (PI.f64) 5)))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (PI.f64) 3) a)) (fma.f64 1/180 (*.f64 angle (*.f64 (PI.f64) a)) (*.f64 (pow.f64 angle 5) (*.f64 (*.f64 (pow.f64 (PI.f64) 5) a) 1/22674816000000))))","(fma.f64 (pow.f64 angle 5) (*.f64 1/22674816000000 (*.f64 (pow.f64 (PI.f64) 5) a)) (*.f64 a (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (*.f64 angle (*.f64 (PI.f64) 1/180)))))","(*.f64 a (fma.f64 (pow.f64 angle 5) (*.f64 1/22674816000000 (pow.f64 (PI.f64) 5)) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (*.f64 angle (*.f64 (PI.f64) 1/180)))))","(*.f64 a (fma.f64 angle (*.f64 (PI.f64) 1/180) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))))))","(*.f64 (fma.f64 angle (*.f64 (PI.f64) 1/180) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -1/34992000 (pow.f64 angle 3))))) a)","(+.f64 (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (*.f64 a (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (*.f64 a (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64)))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (*.f64 a (pow.f64 (PI.f64) 5)))))))","(fma.f64 -1/30855889612800000000 (*.f64 (*.f64 (pow.f64 angle 7) a) (pow.f64 (PI.f64) 7)) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (PI.f64) 3) a)) (fma.f64 1/180 (*.f64 angle (*.f64 (PI.f64) a)) (*.f64 1/22674816000000 (*.f64 (*.f64 (pow.f64 angle 5) a) (pow.f64 (PI.f64) 5))))))","(fma.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (*.f64 (pow.f64 (PI.f64) 7) a)) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (PI.f64) 3) a)) (fma.f64 1/180 (*.f64 angle (*.f64 (PI.f64) a)) (*.f64 (pow.f64 angle 5) (*.f64 (*.f64 (pow.f64 (PI.f64) 5) a) 1/22674816000000)))))","(+.f64 (*.f64 a (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (*.f64 angle (*.f64 (PI.f64) 1/180)))) (*.f64 a (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(*.f64 a (fma.f64 angle (*.f64 (PI.f64) 1/180) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7)))))))","(*.f64 (fma.f64 angle (*.f64 (PI.f64) 1/180) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 (PI.f64) 7) (*.f64 -1/30855889612800000000 (pow.f64 angle 7)))))) a)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)","(*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) a)","(*.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) a)"]],"stop":[["node limit",1]],"time":118.118896484375,"type":"simplify"},{"compiler":[[4239,3002]],"time":49.6220703125,"type":"eval"},{"alts":[["(+.f64 (pow.f64 (*.f64 a (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (sin.f64 1)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",33.41083131031717],["(+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 1/32400 (*.f64 angle (*.f64 angle (*.f64 a a))))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",31.649923084593233],["(+.f64 (pow.f64 (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2)) 3/2) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",21.12697799202523],["(+.f64 (*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",25.276109072868184],["(+.f64 (expm1.f64 (log1p.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",21.4424051809377],["(+.f64 (pow.f64 (*.f64 a (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",29.874773153308464],["(+.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) 3)) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",38.74218495240741],["(+.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 6) 1/6) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",30.249032474077836],["(+.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) (*.f64 a (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",23.55680890354312],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","fresh",21.09421523058784],["(+.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) 1/3)) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",38.77467699518968],["(+.f64 (pow.f64 (*.f64 a (pow.f64 (sqrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",42.77382442822055],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b 1) 2))","fresh",21.253734881944727],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (expm1.f64 (log1p.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))) 2))","fresh",21.032215959543862],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.03393694622492],["(+.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2))) 3)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",21.854752437215634],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","fresh",21.032188401897233],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (sin.f64 1)))) 2))","fresh",24.62490487258258],["(+.f64 (*.f64 (*.f64 a a) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000)))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",37.083775385476265],["(+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 6)) 1/3)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",30.250750743884435],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (log.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))) 2))","fresh",21.032215959543862],["(+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",35.80461126387667],["(+.f64 (pow.f64 (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",27.819655667208586],["(+.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)) 5) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",21.162953421195333],["(+.f64 (*.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 3/2) (sqrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",38.3117036342426],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","next",21.0283097095439]],"compiler":[[41,33],[27,20],[29,24],[26,20],[26,21],[39,31],[29,24],[28,23],[31,22],[24,19],[30,25],[27,22],[19,16],[26,21],[37,29],[29,24],[28,23],[41,33],[37,28],[28,23],[26,21],[27,22],[23,18],[35,26],[34,25],[39,31],[41,33],[27,20],[29,24],[26,20],[26,21],[39,31],[29,24],[28,23],[31,22],[24,19],[30,25],[27,22],[19,16],[26,21],[37,29],[29,24],[28,23],[41,33],[37,28],[28,23],[26,21],[27,22],[23,18],[35,26],[34,25],[39,31]],"count":[[151,26]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[149,25],"picked":[1,0]}],"min-error":[20.297041834600684],"time":52.593994140625,"type":"prune"},{"compiler":[[206,139]],"locations":[["(pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)",0.7428512695368841,true],["(log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))",0.9580861044609695,true],["(sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))",25.40669251837167,false],["(cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))",26.238204519378108,true]],"time":70.77294921875,"type":"localize"},{"count":[[3,36]],"series":[["(pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)","angle","-inf",0.16015625],["(pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)","angle","inf",0.173828125],["(pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)","angle","0",0.773193359375],["(log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))","angle","-inf",14.572021484375],["(log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))","angle","inf",19.510009765625],["(log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))","angle","0",5.743896484375],["(cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))","angle","-inf",0.16015625],["(cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))","angle","inf",0.163818359375],["(cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))","angle","0",0.262939453125]],"time":41.751953125,"type":"series"},{"count":[[3,123]],"egraph":[[2,2567,38,0.024972084000000002],[1,236,43,0.003936042],[0,12,46,0.000363125]],"inputs":[["(cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))","(log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2))","(pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) (*.f64 1/2 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (*.f64 1/3 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) (log.f64 (pow.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 5/6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) 4)) (*.f64 1/3 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 5/6)) (*.f64 1/6 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 1/2 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) (cbrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) (sqrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (*.f64 3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 2)) (cbrt.f64 (log.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) (sqrt.f64 (log.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 2 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (cbrt.f64 (pow.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2)) (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2)) (cbrt.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sqrt.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) (*.f64 1/6 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (*.f64 2 (*.f64 1/3 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/6 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) (*.f64 1/2 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (*.f64 1/3 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) (*.f64 1/3 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 5/6)) (*.f64 1/3 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (cbrt.f64 (pow.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2)) (cbrt.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sqrt.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (*.f64 2 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 1/3 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) 2)) (cbrt.f64 (log.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) (sqrt.f64 (log.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 2) (cbrt.f64 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sqrt.f64 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 4)) (cbrt.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1/6) (sqrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 5/6) (cbrt.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 2) (*.f64 1/3 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) (pow.f64 (exp.f64 2) (*.f64 1/3 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 2) (*.f64 1/6 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (pow.f64 (exp.f64 2) (*.f64 1/6 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 1) (*.f64 2 (*.f64 1/3 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) (pow.f64 (exp.f64 1) (*.f64 1/3 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (exp.f64 1) (exp.f64 (log1p.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) (pow.f64 (exp.f64 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 1/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 1/3) (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1) (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) (*.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 1/3) (*.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1) (*.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 1/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) (*.f64 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 1/3) (*.f64 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (*.f64 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1) (*.f64 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1)))))))"]],"rules":[["egg-rr",36],["egg-rr",41],["egg-rr",46]],"stop":[["node limit",1]],"time":54.0771484375,"type":"rewrite"},{"count":[[159,150]],"egraph":[[2,2541,1232,0.015995668],[1,675,1423,0.004469459],[0,190,1723,0.001002625]],"inputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(log.f64 (pow.f64 (pow.f64 (E.f64) 2) 1/3))","(+.f64 (log.f64 (pow.f64 (pow.f64 (E.f64) 2) 1/3)) (*.f64 -1/97200 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 2) 1) (pow.f64 (exp.f64 1) 2)) 1/3) (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (log.f64 (pow.f64 (pow.f64 (E.f64) 2) 1/3)) (+.f64 (*.f64 -1/97200 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 2) 1) (pow.f64 (exp.f64 1) 2)) 1/3) (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))) (*.f64 1/24 (*.f64 (pow.f64 angle 4) (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (E.f64) 2)) 1/3) (+.f64 (*.f64 1/37791360000 (*.f64 (*.f64 (pow.f64 (E.f64) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 1) 4)) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (E.f64) 1) (pow.f64 (exp.f64 1) 2)) 1/3) (-.f64 (*.f64 (E.f64) (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4)))) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 7)) (pow.f64 (E.f64) 4)) 1/3) (pow.f64 (PI.f64) 4))))))))) (*.f64 -1/787320000 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 4) 1) (pow.f64 (exp.f64 1) 4)) 1/3) (pow.f64 (PI.f64) 4))))))))","(+.f64 (*.f64 1/720 (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/135 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 1) 2)) 1/3) (*.f64 (+.f64 (*.f64 1/37791360000 (*.f64 (*.f64 (pow.f64 (E.f64) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 1) 4)) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (E.f64) 1) (pow.f64 (exp.f64 1) 2)) 1/3) (-.f64 (*.f64 (E.f64) (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4)))) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 7)) (pow.f64 (E.f64) 4)) 1/3) (pow.f64 (PI.f64) 4))))))) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (E.f64) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (E.f64) 1) (pow.f64 (exp.f64 1) 2)) 1/3) (-.f64 (*.f64 (E.f64) (+.f64 (*.f64 -1/816293376000000 (pow.f64 (PI.f64) 6)) (*.f64 -1/24488801280000000 (pow.f64 (PI.f64) 6)))) (+.f64 (*.f64 -1/7346640384000000 (/.f64 (*.f64 (pow.f64 (PI.f64) 6) (pow.f64 (exp.f64 1) 3)) (pow.f64 (E.f64) 2))) (+.f64 (*.f64 -1/145800 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 4)) (pow.f64 (E.f64) 4)) 1/3) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1)) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 7) 1) (pow.f64 (exp.f64 1) 4)) 1/3) (pow.f64 (PI.f64) 4)))) (pow.f64 (PI.f64) 2)))) (*.f64 -1/291600 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 4)) (pow.f64 (E.f64) 4)) 1/3) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1)) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 7) 1) (pow.f64 (exp.f64 1) 4)) 1/3) (pow.f64 (PI.f64) 4)))) (pow.f64 (PI.f64) 2))))))))) (*.f64 -1/291600 (*.f64 (*.f64 (E.f64) (*.f64 (-.f64 (*.f64 (E.f64) (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4)))) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 7)) (pow.f64 (E.f64) 4)) 1/3) (pow.f64 (PI.f64) 4)))) (pow.f64 (PI.f64) 2))) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 1) 4)) 1/3)))))) (*.f64 -1/3826375200000 (/.f64 (*.f64 (pow.f64 (E.f64) 2) (pow.f64 (PI.f64) 6)) (pow.f64 (exp.f64 1) 2))))))) (+.f64 (log.f64 (pow.f64 (pow.f64 (E.f64) 2) 1/3)) (+.f64 (*.f64 -1/97200 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 2) 1) (pow.f64 (exp.f64 1) 2)) 1/3) (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))) (*.f64 1/24 (*.f64 (pow.f64 angle 4) (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (E.f64) 2)) 1/3) (+.f64 (*.f64 1/37791360000 (*.f64 (*.f64 (pow.f64 (E.f64) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 1) 4)) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (E.f64) 1) (pow.f64 (exp.f64 1) 2)) 1/3) (-.f64 (*.f64 (E.f64) (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4)))) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 7)) (pow.f64 (E.f64) 4)) 1/3) (pow.f64 (PI.f64) 4))))))))) (*.f64 -1/787320000 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 4) 1) (pow.f64 (exp.f64 1) 4)) 1/3) (pow.f64 (PI.f64) 4)))))))))","(log.f64 (pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3))","(log.f64 (pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3))","(log.f64 (pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3))","(log.f64 (pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3))","(log.f64 (pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3))","(log.f64 (pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3))","(log.f64 (pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3))","(log.f64 (pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3))","(pow.f64 (pow.f64 (exp.f64 1) 2) 1/3)","(+.f64 (*.f64 -1/97200 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 4)) (pow.f64 (E.f64) 2)) 1/3) (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))) (pow.f64 (pow.f64 (exp.f64 1) 2) 1/3))","(+.f64 (*.f64 (pow.f64 angle 4) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (exp.f64 1)) (pow.f64 (E.f64) 2)) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1)) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 7) 1) (pow.f64 (exp.f64 1) 4)) 1/3) (pow.f64 (PI.f64) 4)))))) (*.f64 1/37791360000 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (E.f64) 4)) 1/3) (*.f64 (pow.f64 (PI.f64) 4) (pow.f64 (exp.f64 1) 2)))))) (+.f64 (*.f64 -1/97200 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 4)) (pow.f64 (E.f64) 2)) 1/3) (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))) (pow.f64 (pow.f64 (exp.f64 1) 2) 1/3)))","(+.f64 (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (exp.f64 1)) (pow.f64 (E.f64) 2)) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 -1/816293376000000 (pow.f64 (PI.f64) 6)) (*.f64 -1/24488801280000000 (pow.f64 (PI.f64) 6))) (exp.f64 1)) (+.f64 (*.f64 -1/145800 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 4) 1) (pow.f64 (exp.f64 1) 4)) 1/3) (*.f64 (-.f64 (*.f64 (E.f64) (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4)))) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 7)) (pow.f64 (E.f64) 4)) 1/3) (pow.f64 (PI.f64) 4)))) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 -1/7346640384000000 (/.f64 (*.f64 (pow.f64 (E.f64) 3) (pow.f64 (PI.f64) 6)) (pow.f64 (exp.f64 1) 2))) (*.f64 -1/291600 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 4) 1) (pow.f64 (exp.f64 1) 4)) 1/3) (*.f64 (-.f64 (*.f64 (E.f64) (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4)))) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 7)) (pow.f64 (E.f64) 4)) 1/3) (pow.f64 (PI.f64) 4)))) (pow.f64 (PI.f64) 2))))))))) (*.f64 -1/291600 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (E.f64) 4)) 1/3) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1)) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 7) 1) (pow.f64 (exp.f64 1) 4)) 1/3) (pow.f64 (PI.f64) 4)))) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2))))))) (+.f64 (*.f64 (pow.f64 angle 4) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (exp.f64 1)) (pow.f64 (E.f64) 2)) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1)) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 7) 1) (pow.f64 (exp.f64 1) 4)) 1/3) (pow.f64 (PI.f64) 4)))))) (*.f64 1/37791360000 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (E.f64) 4)) 1/3) (*.f64 (pow.f64 (PI.f64) 4) (pow.f64 (exp.f64 1) 2)))))) (+.f64 (*.f64 -1/97200 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 4)) (pow.f64 (E.f64) 2)) 1/3) (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))) (pow.f64 (pow.f64 (exp.f64 1) 2) 1/3))))","(pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3)","(pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3)","(pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3)","(pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3)","(pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3)","(pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3)","(pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3)","(pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3)"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (*.f64 (*.f64 -1/64800 (*.f64 angle angle)) (pow.f64 (PI.f64) 2)))","(fma.f64 (*.f64 -1/64800 (*.f64 angle angle)) (pow.f64 (PI.f64) 2) 1)","(fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) 1)","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 (*.f64 -1/64800 (*.f64 angle angle)) (pow.f64 (PI.f64) 2))))","(+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 (*.f64 angle angle) (*.f64 (pow.f64 (PI.f64) 2) -1/64800))))","(fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 (*.f64 -1/64800 (*.f64 angle angle)) (pow.f64 (PI.f64) 2)))))","(+.f64 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 (*.f64 angle angle) (*.f64 (pow.f64 (PI.f64) 2) -1/64800))) (fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) 1))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))","(cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(log.f64 (pow.f64 (pow.f64 (E.f64) 2) 1/3))","(log.f64 (cbrt.f64 (pow.f64 (E.f64) 2)))","(log.f64 (cbrt.f64 (exp.f64 2)))","2/3","(+.f64 (log.f64 (pow.f64 (pow.f64 (E.f64) 2) 1/3)) (*.f64 -1/97200 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 2) 1) (pow.f64 (exp.f64 1) 2)) 1/3) (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (log.f64 (cbrt.f64 (pow.f64 (E.f64) 2))) (*.f64 -1/97200 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (E.f64) 2) (pow.f64 (E.f64) 2))) (*.f64 angle angle)) (pow.f64 (PI.f64) 2))))","(fma.f64 -1/97200 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) (log.f64 (cbrt.f64 (exp.f64 2))))","(fma.f64 (*.f64 angle angle) (*.f64 (pow.f64 (PI.f64) 2) -1/97200) 2/3)","(+.f64 (log.f64 (pow.f64 (pow.f64 (E.f64) 2) 1/3)) (+.f64 (*.f64 -1/97200 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 2) 1) (pow.f64 (exp.f64 1) 2)) 1/3) (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))) (*.f64 1/24 (*.f64 (pow.f64 angle 4) (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (E.f64) 2)) 1/3) (+.f64 (*.f64 1/37791360000 (*.f64 (*.f64 (pow.f64 (E.f64) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 1) 4)) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (E.f64) 1) (pow.f64 (exp.f64 1) 2)) 1/3) (-.f64 (*.f64 (E.f64) (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4)))) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 7)) (pow.f64 (E.f64) 4)) 1/3) (pow.f64 (PI.f64) 4))))))))) (*.f64 -1/787320000 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 4) 1) (pow.f64 (exp.f64 1) 4)) 1/3) (pow.f64 (PI.f64) 4))))))))","(+.f64 (log.f64 (cbrt.f64 (pow.f64 (E.f64) 2))) (fma.f64 -1/97200 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (E.f64) 2) (pow.f64 (E.f64) 2))) (*.f64 angle angle)) (pow.f64 (PI.f64) 2)) (*.f64 1/24 (*.f64 (pow.f64 angle 4) (fma.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (E.f64) 2))) (fma.f64 1/37791360000 (*.f64 (pow.f64 (E.f64) 2) (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 1 (pow.f64 (E.f64) 4))))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 (E.f64) (pow.f64 (E.f64) 2))) (+.f64 (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000)) (*.f64 -1/12597120000 (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (pow.f64 (E.f64) 4)))))))))) (*.f64 -1/787320000 (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 4) (pow.f64 (E.f64) 4))))))))))","(fma.f64 1/3 (log.f64 (exp.f64 2)) (fma.f64 -1/97200 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) (*.f64 (pow.f64 angle 4) (*.f64 (fma.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (exp.f64 2))) (fma.f64 1/37791360000 (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (exp.f64 2)) (cbrt.f64 (/.f64 1 (pow.f64 (E.f64) 4)))) (*.f64 (cbrt.f64 (/.f64 (E.f64) (exp.f64 2))) (*.f64 (fma.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) (*.f64 (*.f64 -1/12597120000 (pow.f64 (PI.f64) 4)) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (pow.f64 (E.f64) 4))))) 2/3)))) (*.f64 (pow.f64 (PI.f64) 4) -1/787320000)) 1/24))))","(fma.f64 (pow.f64 angle 4) (*.f64 (fma.f64 (pow.f64 (PI.f64) 4) -1/787320000 (*.f64 (cbrt.f64 (exp.f64 -2)) (*.f64 (fma.f64 (exp.f64 2) (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 1 (exp.f64 4)))) 1/37791360000) (*.f64 (cbrt.f64 (exp.f64 -1)) (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (-.f64 (*.f64 1/6298560000 (E.f64)) (*.f64 1/12597120000 (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (exp.f64 4)))))) 2/3))) 24))) 1/24) (fma.f64 (*.f64 angle angle) (*.f64 (pow.f64 (PI.f64) 2) -1/97200) 2/3))","(+.f64 (*.f64 1/720 (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 1/135 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (exp.f64 1) 2)) 1/3) (*.f64 (+.f64 (*.f64 1/37791360000 (*.f64 (*.f64 (pow.f64 (E.f64) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 1) 4)) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (E.f64) 1) (pow.f64 (exp.f64 1) 2)) 1/3) (-.f64 (*.f64 (E.f64) (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4)))) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 7)) (pow.f64 (E.f64) 4)) 1/3) (pow.f64 (PI.f64) 4))))))) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 720 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (E.f64) 2)) 1/3) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (E.f64) 1) (pow.f64 (exp.f64 1) 2)) 1/3) (-.f64 (*.f64 (E.f64) (+.f64 (*.f64 -1/816293376000000 (pow.f64 (PI.f64) 6)) (*.f64 -1/24488801280000000 (pow.f64 (PI.f64) 6)))) (+.f64 (*.f64 -1/7346640384000000 (/.f64 (*.f64 (pow.f64 (PI.f64) 6) (pow.f64 (exp.f64 1) 3)) (pow.f64 (E.f64) 2))) (+.f64 (*.f64 -1/145800 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 4)) (pow.f64 (E.f64) 4)) 1/3) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1)) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 7) 1) (pow.f64 (exp.f64 1) 4)) 1/3) (pow.f64 (PI.f64) 4)))) (pow.f64 (PI.f64) 2)))) (*.f64 -1/291600 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 4)) (pow.f64 (E.f64) 4)) 1/3) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1)) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 7) 1) (pow.f64 (exp.f64 1) 4)) 1/3) (pow.f64 (PI.f64) 4)))) (pow.f64 (PI.f64) 2))))))))) (*.f64 -1/291600 (*.f64 (*.f64 (E.f64) (*.f64 (-.f64 (*.f64 (E.f64) (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4)))) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 7)) (pow.f64 (E.f64) 4)) 1/3) (pow.f64 (PI.f64) 4)))) (pow.f64 (PI.f64) 2))) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 1) 4)) 1/3)))))) (*.f64 -1/3826375200000 (/.f64 (*.f64 (pow.f64 (E.f64) 2) (pow.f64 (PI.f64) 6)) (pow.f64 (exp.f64 1) 2))))))) (+.f64 (log.f64 (pow.f64 (pow.f64 (E.f64) 2) 1/3)) (+.f64 (*.f64 -1/97200 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 2) 1) (pow.f64 (exp.f64 1) 2)) 1/3) (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))) (*.f64 1/24 (*.f64 (pow.f64 angle 4) (+.f64 (*.f64 24 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (E.f64) 2)) 1/3) (+.f64 (*.f64 1/37791360000 (*.f64 (*.f64 (pow.f64 (E.f64) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (/.f64 1 (pow.f64 (exp.f64 1) 4)) 1/3))) (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 (E.f64) 1) (pow.f64 (exp.f64 1) 2)) 1/3) (-.f64 (*.f64 (E.f64) (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4)))) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 7)) (pow.f64 (E.f64) 4)) 1/3) (pow.f64 (PI.f64) 4))))))))) (*.f64 -1/787320000 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 4) 1) (pow.f64 (exp.f64 1) 4)) 1/3) (pow.f64 (PI.f64) 4)))))))))","(fma.f64 1/720 (*.f64 (pow.f64 angle 6) (fma.f64 1/135 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (E.f64) 2))) (*.f64 (pow.f64 (PI.f64) 2) (fma.f64 1/37791360000 (*.f64 (pow.f64 (E.f64) 2) (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 1 (pow.f64 (E.f64) 4))))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 (E.f64) (pow.f64 (E.f64) 2))) (+.f64 (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000)) (*.f64 -1/12597120000 (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (pow.f64 (E.f64) 4))))))))))) (fma.f64 720 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (E.f64) 2))) (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 (E.f64) (pow.f64 (E.f64) 2))) (-.f64 (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 6) -31/24488801280000000)) (fma.f64 -1/7346640384000000 (/.f64 (pow.f64 (PI.f64) 6) (/.f64 (pow.f64 (E.f64) 2) (pow.f64 (E.f64) 3))) (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (E.f64) 4) (pow.f64 (E.f64) 4))) (*.f64 (pow.f64 (PI.f64) 2) (+.f64 (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000)) (*.f64 -1/12597120000 (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (pow.f64 (E.f64) 4)))))))) -1/97200)))) (*.f64 -1/291600 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (E.f64) 4))) (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 2) (+.f64 (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000)) (*.f64 -1/12597120000 (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (pow.f64 (E.f64) 4)))))))))))) (*.f64 -1/3826375200000 (/.f64 (*.f64 (pow.f64 (PI.f64) 6) (pow.f64 (E.f64) 2)) (pow.f64 (E.f64) 2)))))) (+.f64 (log.f64 (cbrt.f64 (pow.f64 (E.f64) 2))) (fma.f64 -1/97200 (*.f64 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (E.f64) 2) (pow.f64 (E.f64) 2))) (*.f64 angle angle)) (pow.f64 (PI.f64) 2)) (*.f64 1/24 (*.f64 (pow.f64 angle 4) (fma.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (E.f64) 2))) (fma.f64 1/37791360000 (*.f64 (pow.f64 (E.f64) 2) (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 1 (pow.f64 (E.f64) 4))))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 (E.f64) (pow.f64 (E.f64) 2))) (+.f64 (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000)) (*.f64 -1/12597120000 (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (pow.f64 (E.f64) 4)))))))))) (*.f64 -1/787320000 (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 4) (pow.f64 (E.f64) 4)))))))))))","(fma.f64 1/720 (*.f64 (pow.f64 angle 6) (fma.f64 1/135 (*.f64 (fma.f64 1/37791360000 (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (exp.f64 2)) (cbrt.f64 (/.f64 1 (pow.f64 (E.f64) 4)))) (*.f64 (cbrt.f64 (/.f64 (E.f64) (exp.f64 2))) (*.f64 (fma.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) (*.f64 (*.f64 -1/12597120000 (pow.f64 (PI.f64) 4)) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (pow.f64 (E.f64) 4))))) 2/3))) (*.f64 (cbrt.f64 (/.f64 1 (exp.f64 2))) (pow.f64 (PI.f64) 2))) (fma.f64 (*.f64 (cbrt.f64 (/.f64 1 (exp.f64 2))) 720) (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 (E.f64) (exp.f64 2))) (-.f64 (*.f64 (pow.f64 (PI.f64) 6) (*.f64 -31/24488801280000000 (E.f64))) (fma.f64 -1/7346640384000000 (/.f64 (pow.f64 (PI.f64) 6) (/.f64 1 (E.f64))) (*.f64 (*.f64 (pow.f64 (PI.f64) 2) (fma.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) (*.f64 (*.f64 -1/12597120000 (pow.f64 (PI.f64) 4)) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (pow.f64 (E.f64) 4)))))) -1/97200)))) (*.f64 -1/291600 (*.f64 (fma.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) (*.f64 (*.f64 -1/12597120000 (pow.f64 (PI.f64) 4)) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (pow.f64 (E.f64) 4))))) (*.f64 (*.f64 (pow.f64 (PI.f64) 2) (E.f64)) (cbrt.f64 (/.f64 1 (pow.f64 (E.f64) 4))))))) (*.f64 -1/3826375200000 (*.f64 1 (pow.f64 (PI.f64) 6)))))) (fma.f64 1/3 (log.f64 (exp.f64 2)) (fma.f64 -1/97200 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) (*.f64 (pow.f64 angle 4) (*.f64 (fma.f64 24 (*.f64 (cbrt.f64 (/.f64 1 (exp.f64 2))) (fma.f64 1/37791360000 (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (exp.f64 2)) (cbrt.f64 (/.f64 1 (pow.f64 (E.f64) 4)))) (*.f64 (cbrt.f64 (/.f64 (E.f64) (exp.f64 2))) (*.f64 (fma.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) (*.f64 (*.f64 -1/12597120000 (pow.f64 (PI.f64) 4)) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (pow.f64 (E.f64) 4))))) 2/3)))) (*.f64 (pow.f64 (PI.f64) 4) -1/787320000)) 1/24)))))","(fma.f64 (pow.f64 angle 6) (*.f64 (fma.f64 (pow.f64 (PI.f64) 6) -1/3826375200000 (*.f64 (cbrt.f64 (exp.f64 -2)) (+.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2) (fma.f64 (exp.f64 2) (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 1 (exp.f64 4)))) 1/37791360000) (*.f64 (cbrt.f64 (exp.f64 -1)) (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (-.f64 (*.f64 1/6298560000 (E.f64)) (*.f64 1/12597120000 (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (exp.f64 4)))))) 2/3)))) 1/135) (*.f64 (fma.f64 (+.f64 (fma.f64 (pow.f64 (PI.f64) 6) (*.f64 -31/24488801280000000 (E.f64)) (*.f64 (*.f64 (pow.f64 (PI.f64) 6) (E.f64)) 1/7346640384000000)) (*.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 (PI.f64) 4) (-.f64 (*.f64 1/6298560000 (E.f64)) (*.f64 1/12597120000 (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (exp.f64 4))))))) 1/97200)) (*.f64 2/3 (cbrt.f64 (exp.f64 -1))) (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (exp.f64 4))) -1/291600) (*.f64 (pow.f64 (PI.f64) 4) (-.f64 (*.f64 1/6298560000 (E.f64)) (*.f64 1/12597120000 (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (exp.f64 4))))))) (*.f64 (pow.f64 (PI.f64) 2) (E.f64)))) 720)))) 1/720) (fma.f64 (pow.f64 angle 4) (*.f64 (fma.f64 (pow.f64 (PI.f64) 4) -1/787320000 (*.f64 (cbrt.f64 (exp.f64 -2)) (*.f64 (fma.f64 (exp.f64 2) (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 1 (exp.f64 4)))) 1/37791360000) (*.f64 (cbrt.f64 (exp.f64 -1)) (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (-.f64 (*.f64 1/6298560000 (E.f64)) (*.f64 1/12597120000 (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (exp.f64 4)))))) 2/3))) 24))) 1/24) (fma.f64 (*.f64 angle angle) (*.f64 (pow.f64 (PI.f64) 2) -1/97200) 2/3)))","(log.f64 (pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3))","(log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)))","(log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))) 2)))","(*.f64 1/3 (*.f64 2 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))","(log.f64 (pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3))","(log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)))","(log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))) 2)))","(*.f64 1/3 (*.f64 2 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))","(log.f64 (pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3))","(log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)))","(log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))) 2)))","(*.f64 1/3 (*.f64 2 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))","(log.f64 (pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3))","(log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)))","(log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))) 2)))","(*.f64 1/3 (*.f64 2 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))","(log.f64 (pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3))","(log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)))","(log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))) 2)))","(*.f64 1/3 (*.f64 2 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))","(log.f64 (pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3))","(log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)))","(log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))) 2)))","(*.f64 1/3 (*.f64 2 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))","(log.f64 (pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3))","(log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)))","(log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))) 2)))","(*.f64 1/3 (*.f64 2 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))","(log.f64 (pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3))","(log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2)))","(log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))) 2)))","(*.f64 1/3 (*.f64 2 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))","(pow.f64 (pow.f64 (exp.f64 1) 2) 1/3)","(cbrt.f64 (pow.f64 (E.f64) 2))","(cbrt.f64 (exp.f64 2))","(+.f64 (*.f64 -1/97200 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 4)) (pow.f64 (E.f64) 2)) 1/3) (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))) (pow.f64 (pow.f64 (exp.f64 1) 2) 1/3))","(fma.f64 -1/97200 (*.f64 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 4) (pow.f64 (E.f64) 2)))) (cbrt.f64 (pow.f64 (E.f64) 2)))","(fma.f64 -1/97200 (*.f64 (*.f64 angle angle) (*.f64 (pow.f64 (PI.f64) 2) (cbrt.f64 (exp.f64 2)))) (cbrt.f64 (exp.f64 2)))","(*.f64 (+.f64 (*.f64 (*.f64 angle angle) (*.f64 (pow.f64 (PI.f64) 2) -1/97200)) 1) (cbrt.f64 (exp.f64 2)))","(+.f64 (*.f64 (pow.f64 angle 4) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (exp.f64 1)) (pow.f64 (E.f64) 2)) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1)) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 7) 1) (pow.f64 (exp.f64 1) 4)) 1/3) (pow.f64 (PI.f64) 4)))))) (*.f64 1/37791360000 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (E.f64) 4)) 1/3) (*.f64 (pow.f64 (PI.f64) 4) (pow.f64 (exp.f64 1) 2)))))) (+.f64 (*.f64 -1/97200 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 4)) (pow.f64 (E.f64) 2)) 1/3) (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))) (pow.f64 (pow.f64 (exp.f64 1) 2) 1/3)))","(fma.f64 (pow.f64 angle 4) (fma.f64 1/37791360000 (*.f64 (pow.f64 (E.f64) 2) (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 1 (pow.f64 (E.f64) 4))))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 (E.f64) (pow.f64 (E.f64) 2))) (+.f64 (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000)) (*.f64 -1/12597120000 (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (pow.f64 (E.f64) 4))))))))) (fma.f64 -1/97200 (*.f64 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 4) (pow.f64 (E.f64) 2)))) (cbrt.f64 (pow.f64 (E.f64) 2))))","(fma.f64 (pow.f64 angle 4) (fma.f64 1/37791360000 (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (exp.f64 2)) (cbrt.f64 (/.f64 1 (pow.f64 (E.f64) 4)))) (*.f64 (cbrt.f64 (/.f64 (E.f64) (exp.f64 2))) (*.f64 (fma.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) (*.f64 (*.f64 -1/12597120000 (pow.f64 (PI.f64) 4)) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (pow.f64 (E.f64) 4))))) 2/3))) (fma.f64 -1/97200 (*.f64 (*.f64 angle angle) (*.f64 (pow.f64 (PI.f64) 2) (cbrt.f64 (exp.f64 2)))) (cbrt.f64 (exp.f64 2))))","(fma.f64 (pow.f64 angle 4) (fma.f64 (exp.f64 2) (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 1 (exp.f64 4)))) 1/37791360000) (*.f64 (cbrt.f64 (exp.f64 -1)) (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (-.f64 (*.f64 1/6298560000 (E.f64)) (*.f64 1/12597120000 (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (exp.f64 4)))))) 2/3))) (*.f64 (+.f64 (*.f64 (*.f64 angle angle) (*.f64 (pow.f64 (PI.f64) 2) -1/97200)) 1) (cbrt.f64 (exp.f64 2))))","(+.f64 (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (exp.f64 1)) (pow.f64 (E.f64) 2)) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 -1/816293376000000 (pow.f64 (PI.f64) 6)) (*.f64 -1/24488801280000000 (pow.f64 (PI.f64) 6))) (exp.f64 1)) (+.f64 (*.f64 -1/145800 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 4) 1) (pow.f64 (exp.f64 1) 4)) 1/3) (*.f64 (-.f64 (*.f64 (E.f64) (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4)))) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 7)) (pow.f64 (E.f64) 4)) 1/3) (pow.f64 (PI.f64) 4)))) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 -1/7346640384000000 (/.f64 (*.f64 (pow.f64 (E.f64) 3) (pow.f64 (PI.f64) 6)) (pow.f64 (exp.f64 1) 2))) (*.f64 -1/291600 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 4) 1) (pow.f64 (exp.f64 1) 4)) 1/3) (*.f64 (-.f64 (*.f64 (E.f64) (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4)))) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 7)) (pow.f64 (E.f64) 4)) 1/3) (pow.f64 (PI.f64) 4)))) (pow.f64 (PI.f64) 2))))))))) (*.f64 -1/291600 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (E.f64) 4)) 1/3) (*.f64 (-.f64 (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1)) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 7) 1) (pow.f64 (exp.f64 1) 4)) 1/3) (pow.f64 (PI.f64) 4)))) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2))))))) (+.f64 (*.f64 (pow.f64 angle 4) (+.f64 (*.f64 2/3 (*.f64 (pow.f64 (/.f64 (*.f64 1 (exp.f64 1)) (pow.f64 (E.f64) 2)) 1/3) (-.f64 (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1)) (*.f64 1/12597120000 (*.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (E.f64) 7) 1) (pow.f64 (exp.f64 1) 4)) 1/3) (pow.f64 (PI.f64) 4)))))) (*.f64 1/37791360000 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (E.f64) 4)) 1/3) (*.f64 (pow.f64 (PI.f64) 4) (pow.f64 (exp.f64 1) 2)))))) (+.f64 (*.f64 -1/97200 (*.f64 (pow.f64 (/.f64 (*.f64 1 (pow.f64 (exp.f64 1) 4)) (pow.f64 (E.f64) 2)) 1/3) (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))) (pow.f64 (pow.f64 (exp.f64 1) 2) 1/3))))","(fma.f64 (pow.f64 angle 6) (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 (E.f64) (pow.f64 (E.f64) 2))) (-.f64 (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 6) -31/24488801280000000)) (fma.f64 -1/145800 (*.f64 (cbrt.f64 (/.f64 (pow.f64 (E.f64) 4) (pow.f64 (E.f64) 4))) (*.f64 (pow.f64 (PI.f64) 2) (+.f64 (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000)) (*.f64 -1/12597120000 (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (pow.f64 (E.f64) 4)))))))) (fma.f64 -1/7346640384000000 (/.f64 (pow.f64 (PI.f64) 6) (/.f64 (pow.f64 (E.f64) 2) (pow.f64 (E.f64) 3))) (*.f64 (*.f64 -1/291600 (cbrt.f64 (/.f64 (pow.f64 (E.f64) 4) (pow.f64 (E.f64) 4)))) (*.f64 (pow.f64 (PI.f64) 2) (+.f64 (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000)) (*.f64 -1/12597120000 (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (pow.f64 (E.f64) 4)))))))))))) (*.f64 -1/291600 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (E.f64) 4))) (*.f64 (+.f64 (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000)) (*.f64 -1/12597120000 (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (pow.f64 (E.f64) 4)))))) (*.f64 (pow.f64 (PI.f64) 2) (E.f64)))))) (fma.f64 (pow.f64 angle 4) (fma.f64 1/37791360000 (*.f64 (pow.f64 (E.f64) 2) (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 1 (pow.f64 (E.f64) 4))))) (*.f64 2/3 (*.f64 (cbrt.f64 (/.f64 (E.f64) (pow.f64 (E.f64) 2))) (+.f64 (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000)) (*.f64 -1/12597120000 (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (pow.f64 (E.f64) 4))))))))) (fma.f64 -1/97200 (*.f64 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 4) (pow.f64 (E.f64) 2)))) (cbrt.f64 (pow.f64 (E.f64) 2)))))","(fma.f64 (pow.f64 angle 6) (fma.f64 2/3 (*.f64 (cbrt.f64 (/.f64 (E.f64) (exp.f64 2))) (-.f64 (*.f64 (pow.f64 (PI.f64) 6) (*.f64 -31/24488801280000000 (E.f64))) (fma.f64 -1/7346640384000000 (/.f64 (pow.f64 (PI.f64) 6) (/.f64 1 (E.f64))) (*.f64 (*.f64 (pow.f64 (PI.f64) 2) (fma.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) (*.f64 (*.f64 -1/12597120000 (pow.f64 (PI.f64) 4)) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (pow.f64 (E.f64) 4)))))) -1/97200)))) (*.f64 -1/291600 (*.f64 (fma.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) (*.f64 (*.f64 -1/12597120000 (pow.f64 (PI.f64) 4)) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (pow.f64 (E.f64) 4))))) (*.f64 (*.f64 (pow.f64 (PI.f64) 2) (E.f64)) (cbrt.f64 (/.f64 1 (pow.f64 (E.f64) 4))))))) (fma.f64 (pow.f64 angle 4) (fma.f64 1/37791360000 (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (exp.f64 2)) (cbrt.f64 (/.f64 1 (pow.f64 (E.f64) 4)))) (*.f64 (cbrt.f64 (/.f64 (E.f64) (exp.f64 2))) (*.f64 (fma.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) (*.f64 (*.f64 -1/12597120000 (pow.f64 (PI.f64) 4)) (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (pow.f64 (E.f64) 4))))) 2/3))) (fma.f64 -1/97200 (*.f64 (*.f64 angle angle) (*.f64 (pow.f64 (PI.f64) 2) (cbrt.f64 (exp.f64 2)))) (cbrt.f64 (exp.f64 2)))))","(fma.f64 (pow.f64 angle 4) (fma.f64 (exp.f64 2) (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (cbrt.f64 (/.f64 1 (exp.f64 4)))) 1/37791360000) (*.f64 (cbrt.f64 (exp.f64 -1)) (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (-.f64 (*.f64 1/6298560000 (E.f64)) (*.f64 1/12597120000 (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (exp.f64 4)))))) 2/3))) (fma.f64 (pow.f64 angle 6) (fma.f64 (+.f64 (fma.f64 (pow.f64 (PI.f64) 6) (*.f64 -31/24488801280000000 (E.f64)) (*.f64 (*.f64 (pow.f64 (PI.f64) 6) (E.f64)) 1/7346640384000000)) (*.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 (PI.f64) 4) (-.f64 (*.f64 1/6298560000 (E.f64)) (*.f64 1/12597120000 (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (exp.f64 4))))))) 1/97200)) (*.f64 2/3 (cbrt.f64 (exp.f64 -1))) (*.f64 (*.f64 (*.f64 (cbrt.f64 (/.f64 1 (exp.f64 4))) -1/291600) (*.f64 (pow.f64 (PI.f64) 4) (-.f64 (*.f64 1/6298560000 (E.f64)) (*.f64 1/12597120000 (cbrt.f64 (/.f64 (pow.f64 (E.f64) 7) (exp.f64 4))))))) (*.f64 (pow.f64 (PI.f64) 2) (E.f64)))) (*.f64 (+.f64 (*.f64 (*.f64 angle angle) (*.f64 (pow.f64 (PI.f64) 2) -1/97200)) 1) (cbrt.f64 (exp.f64 2)))))","(pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2))","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))) 2))","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))","(pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2))","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))) 2))","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))","(pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2))","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))) 2))","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))","(pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2))","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))) 2))","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))","(pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2))","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))) 2))","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))","(pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2))","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))) 2))","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))","(pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2))","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))) 2))","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))","(pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) 1/3)","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) 2))","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 1/180 (PI.f64)) angle))) 2))","(cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))"]],"stop":[["node limit",1]],"time":41.18798828125,"type":"simplify"},{"compiler":[[11626,8973]],"time":143.2548828125,"type":"eval"},{"alts":[["(+.f64 (pow.f64 (*.f64 a (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (sin.f64 1)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",33.41083131031717],["(+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 1/32400 (*.f64 angle (*.f64 angle (*.f64 a a))))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",31.649923084593233],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.058186050677104],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (sqrt.f64 (pow.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.435295039679257],["(+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",35.80461126387667],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.058891411019758],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (pow.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))))))) 2))","fresh",21.409538022539504],["(+.f64 (*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",25.276109072868184],["(+.f64 (expm1.f64 (log1p.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",21.4424051809377],["(+.f64 (pow.f64 (*.f64 a (pow.f64 (sqrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",42.715746607619145],["(+.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) 3)) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",38.74218495240741],["(+.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 6) 1/6) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",30.249032474077836],["(+.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) (*.f64 a (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",23.55680890354312],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","fresh",21.09421523058784],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (log1p.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.057797239460413],["(+.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) 1/3)) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",38.77467699518968],["(+.f64 (pow.f64 (*.f64 a (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",29.81537777759328],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b 1) 2))","fresh",21.253734881944727],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sin.f64 1))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",24.68862702266628],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 2/3 (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.448418089969763],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 1))))) 2))","fresh",21.573022285204523],["(+.f64 (pow.f64 (*.f64 a (*.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.076288939319788],["(+.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2))) 3)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",21.854752437215634],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","next",21.032188401897233],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (sin.f64 1)))) 2))","fresh",24.62490487258258],["(+.f64 (*.f64 (*.f64 a a) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000)))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",37.083775385476265],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))))) 2))","fresh",21.092389265244595],["(+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 6)) 1/3)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",30.250750743884435],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (cbrt.f64 (exp.f64 2))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.448418089969763],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.057797239460413],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 1) (*.f64 2 (*.f64 1/3 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) (pow.f64 (exp.f64 1) (*.f64 1/3 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.06209230068522],["(+.f64 (pow.f64 (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",27.819655667208586],["(+.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)) 5) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",21.162953421195333],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sin.f64 1)))))))) 2))","fresh",24.710522122794384],["(+.f64 (*.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 3/2) (sqrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",38.3117036342426]],"compiler":[[41,33],[27,20],[54,45],[39,32],[27,22],[56,47],[42,35],[26,20],[26,21],[42,33],[29,24],[28,23],[31,22],[24,19],[41,34],[30,25],[54,42],[19,16],[56,47],[29,24],[34,29],[50,38],[29,24],[28,23],[41,33],[37,28],[43,36],[28,23],[32,27],[42,35],[58,49],[23,18],[35,26],[56,47],[34,25],[41,33],[27,20],[54,45],[39,32],[27,22],[56,47],[42,35],[26,20],[26,21],[42,33],[29,24],[28,23],[31,22],[24,19],[41,34],[30,25],[54,42],[19,16],[56,47],[29,24],[34,29],[50,38],[29,24],[28,23],[41,33],[37,28],[43,36],[28,23],[32,27],[42,35],[58,49],[23,18],[35,26],[56,47],[34,25]],"count":[[268,35]],"kept":[{"done":[0,0],"fresh":[25,19],"new":[242,16],"picked":[1,0]}],"min-error":[20.04824509465339],"time":110.7470703125,"type":"prune"},{"compiler":[[134,88]],"locations":[["(pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2)",0.33107377930532605,false],["(+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))",0.6328125,true],["(sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))",25.40669251837167,false],["(cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))",26.238204519378108,false]],"time":42.110107421875,"type":"localize"},{"count":[[1,12]],"series":[["(+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))","angle","-inf",0.19189453125],["(+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))","angle","inf",0.205078125],["(+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))","angle","0",0.44091796875]],"time":0.9169921875,"type":"series"},{"count":[[1,34]],"egraph":[[2,2394,12,0.022462083],[1,201,12,0.0034558749999999997],[0,10,15,0.000305916]],"inputs":[["(+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (-.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) (/.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) (-.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 2) (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sqrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 3)) (/.f64 1 (+.f64 1 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2)) (/.f64 1 (-.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (-.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 3)) (+.f64 1 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 3)) (+.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) (-.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2)) (-.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 3))) (neg.f64 (+.f64 1 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))) (neg.f64 (-.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2) 1) (-.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2)) (cbrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sqrt.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 2) (cbrt.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sqrt.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 1)))))"]],"rules":[["egg-rr",34]],"stop":[["node limit",1]],"time":42.02490234375,"type":"rewrite"},{"count":[[46,43]],"egraph":[[10,7403,204,0.083184083],[9,6923,204,0.068815916],[8,6576,204,0.056664833],[7,6309,204,0.045457291],[6,6038,204,0.0354405],[5,5615,204,0.025577957999999998],[4,3737,204,0.015902832999999998],[3,1471,204,0.007921458],[2,307,206,0.0026326659999999997],[1,105,212,0.000789625],[0,41,212,0.00023525]],"inputs":[["(exp.f64 1)","(+.f64 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2)))) (exp.f64 1))","(+.f64 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 (pow.f64 angle 4) (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1))) (exp.f64 1)))","(+.f64 (*.f64 (pow.f64 angle 6) (*.f64 (+.f64 (*.f64 -1/816293376000000 (pow.f64 (PI.f64) 6)) (*.f64 -1/24488801280000000 (pow.f64 (PI.f64) 6))) (exp.f64 1))) (+.f64 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 (pow.f64 angle 4) (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1))) (exp.f64 1))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))"]],"method":["egg-herbie"],"outputs":[["(exp.f64 1)","(E.f64)","(+.f64 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2)))) (exp.f64 1))","(fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (*.f64 (E.f64) (pow.f64 (PI.f64) 2))) (E.f64))","(fma.f64 -1/64800 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (E.f64) (*.f64 angle angle))) (E.f64))","(fma.f64 (*.f64 angle angle) (*.f64 (*.f64 -1/64800 (E.f64)) (pow.f64 (PI.f64) 2)) (E.f64))","(fma.f64 (*.f64 angle angle) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (E.f64) -1/64800)) (E.f64))","(fma.f64 -1/64800 (*.f64 (E.f64) (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2)))) (E.f64))","(+.f64 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 (pow.f64 angle 4) (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1))) (exp.f64 1)))","(fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (*.f64 (E.f64) (pow.f64 (PI.f64) 2))) (fma.f64 (pow.f64 angle 4) (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000)) (E.f64)))","(fma.f64 -1/64800 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (E.f64) (*.f64 angle angle))) (fma.f64 (pow.f64 angle 4) (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000)) (E.f64)))","(*.f64 (E.f64) (+.f64 (*.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2))) (fma.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) 1)))","(*.f64 (E.f64) (+.f64 (fma.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) 1) (*.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))))))","(+.f64 (*.f64 (pow.f64 angle 6) (*.f64 (+.f64 (*.f64 -1/816293376000000 (pow.f64 (PI.f64) 6)) (*.f64 -1/24488801280000000 (pow.f64 (PI.f64) 6))) (exp.f64 1))) (+.f64 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (*.f64 (exp.f64 1) (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 (pow.f64 angle 4) (*.f64 (+.f64 (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (*.f64 1/8398080000 (pow.f64 (PI.f64) 4))) (exp.f64 1))) (exp.f64 1))))","(fma.f64 (pow.f64 angle 6) (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 6) -31/24488801280000000)) (fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (*.f64 (E.f64) (pow.f64 (PI.f64) 2))) (fma.f64 (pow.f64 angle 4) (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000)) (E.f64))))","(fma.f64 (pow.f64 angle 6) (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 6) -31/24488801280000000)) (fma.f64 -1/64800 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (E.f64) (*.f64 angle angle))) (fma.f64 (pow.f64 angle 4) (*.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000)) (E.f64))))","(fma.f64 (E.f64) (*.f64 (pow.f64 (PI.f64) 6) (*.f64 -31/24488801280000000 (pow.f64 angle 6))) (*.f64 (E.f64) (+.f64 (*.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2))) (fma.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) 1))))","(*.f64 (E.f64) (+.f64 (*.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2)))) (+.f64 (*.f64 (pow.f64 (PI.f64) 6) (*.f64 (pow.f64 angle 6) -31/24488801280000000)) (fma.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) 1))))","(*.f64 (E.f64) (+.f64 (fma.f64 (pow.f64 angle 4) (*.f64 (pow.f64 (PI.f64) 4) 1/6298560000) 1) (+.f64 (*.f64 (pow.f64 (PI.f64) 6) (*.f64 (pow.f64 angle 6) -31/24488801280000000)) (*.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2)))))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))","(exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))"]],"stop":[["node limit",1]],"time":100.3291015625,"type":"simplify"},{"compiler":[[5845,4379]],"time":72.868896484375,"type":"eval"},{"alts":[["(+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 6)) 1/3)) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","fresh",30.201983848766453],["(+.f64 (pow.f64 (*.f64 a (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (sin.f64 1)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",33.41083131031717],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.058186050677104],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (sqrt.f64 (pow.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.435295039679257],["(+.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2))) 3)) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","fresh",21.79923575385378],["(+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",35.80461126387667],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (log.f64 (fma.f64 (pow.f64 (cbrt.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 2) (cbrt.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 1))) 2))","fresh",21.077119719100153],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.058891411019758],["(+.f64 (*.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)) (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 3/2)) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","fresh",38.30155701276422],["(+.f64 (pow.f64 (*.f64 a (pow.f64 (sqrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",42.715746607619145],["(+.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) 3)) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",38.74218495240741],["(+.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 6) 1/6) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",30.249032474077836],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","fresh",21.09421523058784],["(+.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) 1/3)) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",38.77467699518968],["(+.f64 (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) a) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","fresh",23.501292220181263],["(+.f64 (pow.f64 (*.f64 a (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",29.81537777759328],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b 1) 2))","fresh",21.253734881944727],["(+.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)) 5) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","fresh",21.107436737833478],["(+.f64 (pow.f64 (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",27.819655667208586],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sin.f64 1))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",24.68862702266628],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 2/3 (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.448418089969763],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) 4)) (*.f64 1/3 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) 2))","fresh",21.079404728860474],["(+.f64 (expm1.f64 (log1p.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2))) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","fresh",21.386888497575843],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 1))))) 2))","fresh",21.573022285204523],["(+.f64 (pow.f64 (*.f64 a (*.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.076288939319788],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (sin.f64 1)))) 2))","fresh",24.62490487258258],["(+.f64 (*.f64 (*.f64 a a) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000)))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",37.083775385476265],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))))) 2))","fresh",21.092389265244595],["(+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 1/32400 (*.f64 angle (*.f64 angle (*.f64 a a))))) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","fresh",31.65160047033825],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (cbrt.f64 (exp.f64 2))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.448418089969763],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","next",21.057797239460413],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (pow.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))))))) 2))","fresh",21.409538022539504],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 1) (*.f64 2 (*.f64 1/3 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) (pow.f64 (exp.f64 1) (*.f64 1/3 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.06209230068522],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sin.f64 1))))))) 2))","fresh",24.62547460252959],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sin.f64 1)))))))) 2))","fresh",24.710522122794384],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 2)))) 2))","fresh",21.073213469092032],["(+.f64 (*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","fresh",25.231177755673382]],"compiler":[[32,26],[41,33],[54,45],[39,32],[33,27],[27,22],[39,32],[56,47],[38,28],[42,33],[29,24],[28,23],[24,19],[30,25],[35,25],[54,42],[19,16],[39,29],[23,18],[56,47],[29,24],[46,39],[30,24],[34,29],[50,38],[41,33],[37,28],[43,36],[31,24],[32,27],[42,35],[42,35],[58,49],[45,38],[56,47],[38,31],[30,24],[32,26],[41,33],[54,45],[39,32],[33,27],[27,22],[39,32],[56,47],[38,28],[42,33],[29,24],[28,23],[24,19],[30,25],[35,25],[54,42],[19,16],[39,29],[23,18],[56,47],[29,24],[46,39],[30,24],[34,29],[50,38],[41,33],[37,28],[43,36],[31,24],[32,27],[42,35],[42,35],[58,49],[45,38],[56,47],[38,31],[30,24]],"count":[[210,37]],"kept":[{"done":[0,0],"fresh":[34,25],"new":[175,12],"picked":[1,0]}],"min-error":[20.04824509465339],"time":87.907958984375,"type":"prune"},{"compiler":[[278,204]],"locations":[["(log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1))",0.9465261122129123,true],["(sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))",25.40669251837167,false],["(cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))",26.238204519378108,false],["(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))",26.47512414518111,true]],"time":100.05712890625,"type":"localize"},{"count":[[2,24]],"series":[["(log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1))","angle","-inf",18.449951171875],["(log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1))","angle","inf",27.52783203125],["(log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1))","angle","0",4.00390625],["(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","angle","-inf",0.15087890625],["(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","angle","inf",0.1728515625],["(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","angle","0",0.238037109375]],"time":50.678955078125,"type":"series"},{"count":[[2,68]],"egraph":[[2,3040,23,0.026220333000000002],[1,300,23,0.004456707999999999],[0,15,23,0.000470208]],"inputs":[["(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3) (*.f64 1/2 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (cbrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)) (*.f64 1/2 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (expm1.f64 (*.f64 2 (log1p.f64 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (log.f64 (/.f64 1 (+.f64 (+.f64 1 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (*.f64 1/3 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3))) (*.f64 1/3 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (expm1.f64 (*.f64 3 (log1p.f64 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (log.f64 (/.f64 1 (+.f64 (pow.f64 (hypot.f64 1 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) 4) (+.f64 (+.f64 1 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)) (*.f64 2 (*.f64 1/3 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (+.f64 (hypot.f64 1 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) 1)) (log.f64 (-.f64 (hypot.f64 1 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (log.f64 (/.f64 (+.f64 (pow.f64 (hypot.f64 1 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) 4) (+.f64 (+.f64 1 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 1)) (expm1.f64 (*.f64 3 (log1p.f64 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (log.f64 (/.f64 (+.f64 (+.f64 1 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 1) (expm1.f64 (*.f64 2 (log1p.f64 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (expm1.f64 (*.f64 2 (log1p.f64 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (log1p.f64 (+.f64 1 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (expm1.f64 (*.f64 3 (log1p.f64 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (log.f64 (+.f64 (pow.f64 (hypot.f64 1 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) 4) (+.f64 (+.f64 1 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (expm1.f64 (*.f64 3 (log1p.f64 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (log.f64 (+.f64 (pow.f64 (hypot.f64 1 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) 4) (-.f64 1 (*.f64 (+.f64 1 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (neg.f64 (expm1.f64 (*.f64 3 (log1p.f64 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))))) (log.f64 (neg.f64 (+.f64 (pow.f64 (hypot.f64 1 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) 4) (+.f64 (+.f64 1 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (neg.f64 (expm1.f64 (*.f64 2 (log1p.f64 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))))) (log.f64 (neg.f64 (+.f64 (+.f64 1 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2/3 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)) (cbrt.f64 (*.f64 4/9 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 4/9 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (cbrt.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (log.f64 (pow.f64 (exp.f64 2/3) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2) (*.f64 (cbrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)) (sqrt.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 (sqrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (log.f64 (pow.f64 (exp.f64 2/3) (sqrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 1/3 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 1/2 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (*.f64 3 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2/3 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 2)) (cbrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2/3 (sqrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (sqrt.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 4/9 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (log.f64 (/.f64 (+.f64 (pow.f64 (hypot.f64 1 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) 4) (+.f64 (+.f64 1 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 1)) (expm1.f64 (*.f64 3 (log1p.f64 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (log.f64 (/.f64 (+.f64 (+.f64 1 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 1) (expm1.f64 (*.f64 2 (log1p.f64 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 4/9 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)) 1))))))"]],"rules":[["egg-rr",45],["egg-rr",23]],"stop":[["node limit",1]],"time":52.946044921875,"type":"rewrite"},{"count":[[92,85]],"egraph":[[3,7949,672,0.026975666000000002],[2,1405,748,0.013118291],[1,354,856,0.002834916],[0,117,895,0.00058675]],"inputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","2/3","(+.f64 2/3 (*.f64 -1/97200 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 2/3 (+.f64 (*.f64 -1/97200 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))) (*.f64 1/24 (*.f64 (+.f64 (*.f64 -1/787320000 (pow.f64 (PI.f64) 4)) (*.f64 24 (/.f64 (*.f64 (+.f64 1 (exp.f64 2/3)) (+.f64 (*.f64 1/18895680000 (/.f64 (*.f64 (pow.f64 (exp.f64 2/3) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))) (*.f64 1/24 (+.f64 (*.f64 24 (/.f64 (*.f64 (+.f64 (*.f64 1/37791360000 (pow.f64 (PI.f64) 4)) (*.f64 1/18895680000 (pow.f64 (PI.f64) 4))) (exp.f64 2/3)) (+.f64 1 (exp.f64 2/3)))) (*.f64 -1/787320000 (/.f64 (*.f64 (pow.f64 (exp.f64 2/3) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))))))) (exp.f64 2/3)))) (pow.f64 angle 4)))))","(+.f64 2/3 (+.f64 (*.f64 -1/97200 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))) (+.f64 (*.f64 1/24 (*.f64 (+.f64 (*.f64 -1/787320000 (pow.f64 (PI.f64) 4)) (*.f64 24 (/.f64 (*.f64 (+.f64 1 (exp.f64 2/3)) (+.f64 (*.f64 1/18895680000 (/.f64 (*.f64 (pow.f64 (exp.f64 2/3) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))) (*.f64 1/24 (+.f64 (*.f64 24 (/.f64 (*.f64 (+.f64 (*.f64 1/37791360000 (pow.f64 (PI.f64) 4)) (*.f64 1/18895680000 (pow.f64 (PI.f64) 4))) (exp.f64 2/3)) (+.f64 1 (exp.f64 2/3)))) (*.f64 -1/787320000 (/.f64 (*.f64 (pow.f64 (exp.f64 2/3) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))))))) (exp.f64 2/3)))) (pow.f64 angle 4))) (*.f64 1/720 (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 -1/3826375200000 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 1/135 (/.f64 (*.f64 (+.f64 1 (exp.f64 2/3)) (*.f64 (+.f64 (*.f64 1/18895680000 (/.f64 (*.f64 (pow.f64 (exp.f64 2/3) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))) (*.f64 1/24 (+.f64 (*.f64 24 (/.f64 (*.f64 (+.f64 (*.f64 1/37791360000 (pow.f64 (PI.f64) 4)) (*.f64 1/18895680000 (pow.f64 (PI.f64) 4))) (exp.f64 2/3)) (+.f64 1 (exp.f64 2/3)))) (*.f64 -1/787320000 (/.f64 (*.f64 (pow.f64 (exp.f64 2/3) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2)))))) (pow.f64 (PI.f64) 2))) (exp.f64 2/3))) (*.f64 720 (/.f64 (*.f64 (+.f64 (*.f64 1/720 (+.f64 (*.f64 1/135 (/.f64 (*.f64 (+.f64 (*.f64 1/37791360000 (pow.f64 (PI.f64) 4)) (*.f64 1/18895680000 (pow.f64 (PI.f64) 4))) (*.f64 (pow.f64 (exp.f64 2/3) 2) (pow.f64 (PI.f64) 2))) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))) (+.f64 (*.f64 720 (/.f64 (*.f64 (exp.f64 2/3) (+.f64 (*.f64 -1/5509980288000000 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/36733201920000000 (pow.f64 (PI.f64) 6)) (*.f64 -1/3673320192000000 (pow.f64 (PI.f64) 6))))) (+.f64 1 (exp.f64 2/3)))) (*.f64 -1/3826375200000 (/.f64 (*.f64 (pow.f64 (exp.f64 2/3) 3) (pow.f64 (PI.f64) 6)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 3)))))) (+.f64 (*.f64 -1/5509980288000000 (/.f64 (*.f64 (pow.f64 (exp.f64 2/3) 3) (pow.f64 (PI.f64) 6)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 3))) (*.f64 -1/2332800 (/.f64 (*.f64 (+.f64 (*.f64 24 (/.f64 (*.f64 (+.f64 (*.f64 1/37791360000 (pow.f64 (PI.f64) 4)) (*.f64 1/18895680000 (pow.f64 (PI.f64) 4))) (exp.f64 2/3)) (+.f64 1 (exp.f64 2/3)))) (*.f64 -1/787320000 (/.f64 (*.f64 (pow.f64 (exp.f64 2/3) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2)))) (*.f64 (exp.f64 2/3) (pow.f64 (PI.f64) 2))) (+.f64 1 (exp.f64 2/3)))))) (+.f64 1 (exp.f64 2/3))) (exp.f64 2/3))))))))))","(*.f64 2/3 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 2/3 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 2/3 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 2/3 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 2/3 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 2/3 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 2/3 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 2/3 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (*.f64 (*.f64 -1/64800 (*.f64 angle angle)) (pow.f64 (PI.f64) 2)))","(fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) 1)","(fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) 1)","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 (*.f64 -1/64800 (*.f64 angle angle)) (pow.f64 (PI.f64) 2))))","(+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 -1/64800 (*.f64 angle angle)))))","(fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 (*.f64 -1/64800 (*.f64 angle angle)) (pow.f64 (PI.f64) 2)))))","(+.f64 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 -1/64800 (*.f64 angle angle)))) (fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) 1))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","2/3","(+.f64 2/3 (*.f64 -1/97200 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 2/3 (*.f64 (*.f64 -1/97200 (*.f64 angle angle)) (pow.f64 (PI.f64) 2)))","(fma.f64 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) -1/97200 2/3)","(fma.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle -1/97200)) 2/3)","(+.f64 2/3 (+.f64 (*.f64 -1/97200 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))) (*.f64 1/24 (*.f64 (+.f64 (*.f64 -1/787320000 (pow.f64 (PI.f64) 4)) (*.f64 24 (/.f64 (*.f64 (+.f64 1 (exp.f64 2/3)) (+.f64 (*.f64 1/18895680000 (/.f64 (*.f64 (pow.f64 (exp.f64 2/3) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))) (*.f64 1/24 (+.f64 (*.f64 24 (/.f64 (*.f64 (+.f64 (*.f64 1/37791360000 (pow.f64 (PI.f64) 4)) (*.f64 1/18895680000 (pow.f64 (PI.f64) 4))) (exp.f64 2/3)) (+.f64 1 (exp.f64 2/3)))) (*.f64 -1/787320000 (/.f64 (*.f64 (pow.f64 (exp.f64 2/3) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))))))) (exp.f64 2/3)))) (pow.f64 angle 4)))))","(+.f64 2/3 (fma.f64 -1/97200 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (*.f64 1/24 (*.f64 (pow.f64 angle 4) (fma.f64 -1/787320000 (pow.f64 (PI.f64) 4) (*.f64 24 (/.f64 (+.f64 1 (exp.f64 2/3)) (/.f64 (exp.f64 2/3) (fma.f64 1/18895680000 (/.f64 (*.f64 (pow.f64 (PI.f64) 4) (pow.f64 (exp.f64 2/3) 2)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2)) (*.f64 1/24 (fma.f64 24 (/.f64 (*.f64 (pow.f64 (PI.f64) 4) 1/12597120000) (/.f64 (+.f64 1 (exp.f64 2/3)) (exp.f64 2/3))) (*.f64 -1/787320000 (/.f64 (*.f64 (pow.f64 (PI.f64) 4) (pow.f64 (exp.f64 2/3) 2)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))))))))))))))","(+.f64 (fma.f64 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) -1/97200 2/3) (*.f64 (fma.f64 24 (*.f64 (/.f64 (+.f64 1 (exp.f64 2/3)) (exp.f64 2/3)) (fma.f64 1/18895680000 (*.f64 (/.f64 (exp.f64 4/3) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2)) (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1 (*.f64 (/.f64 (*.f64 (pow.f64 (PI.f64) 4) 1/12597120000) (+.f64 1 (exp.f64 2/3))) (exp.f64 2/3))) (*.f64 (*.f64 (/.f64 (exp.f64 4/3) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2)) (pow.f64 (PI.f64) 4)) -1/18895680000)))) (*.f64 (pow.f64 (PI.f64) 4) -1/787320000)) (*.f64 (pow.f64 angle 4) 1/24)))","(fma.f64 (pow.f64 angle 4) (+.f64 (*.f64 (pow.f64 (PI.f64) 4) -1/18895680000) (*.f64 (*.f64 (+.f64 (*.f64 (exp.f64 2/3) (/.f64 (*.f64 (pow.f64 (PI.f64) 4) 1/12597120000) (+.f64 1 (exp.f64 2/3)))) (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (/.f64 (exp.f64 4/3) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))) 0)) (/.f64 (+.f64 1 (exp.f64 2/3)) (exp.f64 2/3))) 1)) (fma.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle -1/97200)) 2/3))","(fma.f64 (pow.f64 angle 4) (+.f64 (*.f64 (pow.f64 (PI.f64) 4) -1/18895680000) (*.f64 (+.f64 (*.f64 (exp.f64 2/3) (/.f64 (*.f64 (pow.f64 (PI.f64) 4) 1/12597120000) (+.f64 1 (exp.f64 2/3)))) 0) (/.f64 (+.f64 1 (exp.f64 2/3)) (exp.f64 2/3)))) (fma.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle -1/97200)) 2/3))","(+.f64 2/3 (+.f64 (*.f64 -1/97200 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))) (+.f64 (*.f64 1/24 (*.f64 (+.f64 (*.f64 -1/787320000 (pow.f64 (PI.f64) 4)) (*.f64 24 (/.f64 (*.f64 (+.f64 1 (exp.f64 2/3)) (+.f64 (*.f64 1/18895680000 (/.f64 (*.f64 (pow.f64 (exp.f64 2/3) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))) (*.f64 1/24 (+.f64 (*.f64 24 (/.f64 (*.f64 (+.f64 (*.f64 1/37791360000 (pow.f64 (PI.f64) 4)) (*.f64 1/18895680000 (pow.f64 (PI.f64) 4))) (exp.f64 2/3)) (+.f64 1 (exp.f64 2/3)))) (*.f64 -1/787320000 (/.f64 (*.f64 (pow.f64 (exp.f64 2/3) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))))))) (exp.f64 2/3)))) (pow.f64 angle 4))) (*.f64 1/720 (*.f64 (pow.f64 angle 6) (+.f64 (*.f64 -1/3826375200000 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 1/135 (/.f64 (*.f64 (+.f64 1 (exp.f64 2/3)) (*.f64 (+.f64 (*.f64 1/18895680000 (/.f64 (*.f64 (pow.f64 (exp.f64 2/3) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))) (*.f64 1/24 (+.f64 (*.f64 24 (/.f64 (*.f64 (+.f64 (*.f64 1/37791360000 (pow.f64 (PI.f64) 4)) (*.f64 1/18895680000 (pow.f64 (PI.f64) 4))) (exp.f64 2/3)) (+.f64 1 (exp.f64 2/3)))) (*.f64 -1/787320000 (/.f64 (*.f64 (pow.f64 (exp.f64 2/3) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2)))))) (pow.f64 (PI.f64) 2))) (exp.f64 2/3))) (*.f64 720 (/.f64 (*.f64 (+.f64 (*.f64 1/720 (+.f64 (*.f64 1/135 (/.f64 (*.f64 (+.f64 (*.f64 1/37791360000 (pow.f64 (PI.f64) 4)) (*.f64 1/18895680000 (pow.f64 (PI.f64) 4))) (*.f64 (pow.f64 (exp.f64 2/3) 2) (pow.f64 (PI.f64) 2))) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))) (+.f64 (*.f64 720 (/.f64 (*.f64 (exp.f64 2/3) (+.f64 (*.f64 -1/5509980288000000 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/36733201920000000 (pow.f64 (PI.f64) 6)) (*.f64 -1/3673320192000000 (pow.f64 (PI.f64) 6))))) (+.f64 1 (exp.f64 2/3)))) (*.f64 -1/3826375200000 (/.f64 (*.f64 (pow.f64 (exp.f64 2/3) 3) (pow.f64 (PI.f64) 6)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 3)))))) (+.f64 (*.f64 -1/5509980288000000 (/.f64 (*.f64 (pow.f64 (exp.f64 2/3) 3) (pow.f64 (PI.f64) 6)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 3))) (*.f64 -1/2332800 (/.f64 (*.f64 (+.f64 (*.f64 24 (/.f64 (*.f64 (+.f64 (*.f64 1/37791360000 (pow.f64 (PI.f64) 4)) (*.f64 1/18895680000 (pow.f64 (PI.f64) 4))) (exp.f64 2/3)) (+.f64 1 (exp.f64 2/3)))) (*.f64 -1/787320000 (/.f64 (*.f64 (pow.f64 (exp.f64 2/3) 2) (pow.f64 (PI.f64) 4)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2)))) (*.f64 (exp.f64 2/3) (pow.f64 (PI.f64) 2))) (+.f64 1 (exp.f64 2/3)))))) (+.f64 1 (exp.f64 2/3))) (exp.f64 2/3))))))))))","(+.f64 2/3 (fma.f64 -1/97200 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (fma.f64 1/24 (*.f64 (pow.f64 angle 4) (fma.f64 -1/787320000 (pow.f64 (PI.f64) 4) (*.f64 24 (/.f64 (+.f64 1 (exp.f64 2/3)) (/.f64 (exp.f64 2/3) (fma.f64 1/18895680000 (/.f64 (*.f64 (pow.f64 (PI.f64) 4) (pow.f64 (exp.f64 2/3) 2)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2)) (*.f64 1/24 (fma.f64 24 (/.f64 (*.f64 (pow.f64 (PI.f64) 4) 1/12597120000) (/.f64 (+.f64 1 (exp.f64 2/3)) (exp.f64 2/3))) (*.f64 -1/787320000 (/.f64 (*.f64 (pow.f64 (PI.f64) 4) (pow.f64 (exp.f64 2/3) 2)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))))))))))) (*.f64 (*.f64 1/720 (pow.f64 angle 6)) (fma.f64 -1/3826375200000 (pow.f64 (PI.f64) 6) (fma.f64 1/135 (/.f64 (+.f64 1 (exp.f64 2/3)) (/.f64 (exp.f64 2/3) (*.f64 (pow.f64 (PI.f64) 2) (fma.f64 1/18895680000 (/.f64 (*.f64 (pow.f64 (PI.f64) 4) (pow.f64 (exp.f64 2/3) 2)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2)) (*.f64 1/24 (fma.f64 24 (/.f64 (*.f64 (pow.f64 (PI.f64) 4) 1/12597120000) (/.f64 (+.f64 1 (exp.f64 2/3)) (exp.f64 2/3))) (*.f64 -1/787320000 (/.f64 (*.f64 (pow.f64 (PI.f64) 4) (pow.f64 (exp.f64 2/3) 2)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))))))))) (*.f64 720 (/.f64 (fma.f64 1/720 (fma.f64 1/135 (/.f64 (*.f64 (pow.f64 (PI.f64) 4) 1/12597120000) (/.f64 (pow.f64 (+.f64 1 (exp.f64 2/3)) 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (exp.f64 2/3) 2)))) (fma.f64 720 (/.f64 (exp.f64 2/3) (/.f64 (+.f64 1 (exp.f64 2/3)) (fma.f64 -1/5509980288000000 (pow.f64 (PI.f64) 6) (*.f64 (pow.f64 (PI.f64) 6) -11/36733201920000000)))) (/.f64 (*.f64 -1/3826375200000 (*.f64 (pow.f64 (PI.f64) 6) (pow.f64 (exp.f64 2/3) 3))) (pow.f64 (+.f64 1 (exp.f64 2/3)) 3)))) (fma.f64 -1/5509980288000000 (/.f64 (pow.f64 (exp.f64 2/3) 3) (/.f64 (pow.f64 (+.f64 1 (exp.f64 2/3)) 3) (pow.f64 (PI.f64) 6))) (/.f64 (*.f64 -1/2332800 (*.f64 (fma.f64 24 (/.f64 (*.f64 (pow.f64 (PI.f64) 4) 1/12597120000) (/.f64 (+.f64 1 (exp.f64 2/3)) (exp.f64 2/3))) (*.f64 -1/787320000 (/.f64 (*.f64 (pow.f64 (PI.f64) 4) (pow.f64 (exp.f64 2/3) 2)) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2)))) (*.f64 (pow.f64 (PI.f64) 2) (exp.f64 2/3)))) (+.f64 1 (exp.f64 2/3))))) (/.f64 (exp.f64 2/3) (+.f64 1 (exp.f64 2/3)))))))))))","(+.f64 (fma.f64 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) -1/97200 2/3) (fma.f64 1/24 (*.f64 (pow.f64 angle 4) (fma.f64 24 (*.f64 (/.f64 (+.f64 1 (exp.f64 2/3)) (exp.f64 2/3)) (fma.f64 1/18895680000 (*.f64 (/.f64 (exp.f64 4/3) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2)) (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1 (*.f64 (/.f64 (*.f64 (pow.f64 (PI.f64) 4) 1/12597120000) (+.f64 1 (exp.f64 2/3))) (exp.f64 2/3))) (*.f64 (*.f64 (/.f64 (exp.f64 4/3) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2)) (pow.f64 (PI.f64) 4)) -1/18895680000)))) (*.f64 (pow.f64 (PI.f64) 4) -1/787320000))) (*.f64 (pow.f64 angle 6) (*.f64 (fma.f64 (pow.f64 (PI.f64) 6) -1/3826375200000 (fma.f64 1/135 (*.f64 (/.f64 (+.f64 1 (exp.f64 2/3)) (exp.f64 2/3)) (*.f64 (pow.f64 (PI.f64) 2) (fma.f64 1/18895680000 (*.f64 (/.f64 (exp.f64 4/3) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2)) (pow.f64 (PI.f64) 4)) (+.f64 (*.f64 1 (*.f64 (/.f64 (*.f64 (pow.f64 (PI.f64) 4) 1/12597120000) (+.f64 1 (exp.f64 2/3))) (exp.f64 2/3))) (*.f64 (*.f64 (/.f64 (exp.f64 4/3) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2)) (pow.f64 (PI.f64) 4)) -1/18895680000))))) (*.f64 720 (*.f64 (/.f64 (fma.f64 1/720 (fma.f64 1/135 (*.f64 (/.f64 (*.f64 (pow.f64 (PI.f64) 4) 1/12597120000) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2)) (*.f64 (pow.f64 (PI.f64) 2) (exp.f64 4/3))) (fma.f64 -1/3826375200000 (*.f64 (/.f64 (pow.f64 (exp.f64 2/3) 3) (pow.f64 (+.f64 1 (exp.f64 2/3)) 3)) (pow.f64 (PI.f64) 6)) (/.f64 (*.f64 (*.f64 720 (exp.f64 2/3)) (*.f64 (pow.f64 (PI.f64) 6) -53/110199605760000000)) (+.f64 1 (exp.f64 2/3))))) (fma.f64 -1/2332800 (*.f64 (/.f64 (fma.f64 -1/787320000 (*.f64 (/.f64 (exp.f64 4/3) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2)) (pow.f64 (PI.f64) 4)) (/.f64 (*.f64 (*.f64 24 (*.f64 (pow.f64 (PI.f64) 4) 1/12597120000)) (exp.f64 2/3)) (+.f64 1 (exp.f64 2/3)))) (+.f64 1 (exp.f64 2/3))) (*.f64 (pow.f64 (PI.f64) 2) (exp.f64 2/3))) (*.f64 -1/5509980288000000 (*.f64 (/.f64 (pow.f64 (exp.f64 2/3) 3) (pow.f64 (+.f64 1 (exp.f64 2/3)) 3)) (pow.f64 (PI.f64) 6))))) (exp.f64 2/3)) (+.f64 1 (exp.f64 2/3)))))) 1/720))))","(+.f64 (fma.f64 (pow.f64 angle 4) (+.f64 (*.f64 (pow.f64 (PI.f64) 4) -1/18895680000) (*.f64 (*.f64 (+.f64 (*.f64 (exp.f64 2/3) (/.f64 (*.f64 (pow.f64 (PI.f64) 4) 1/12597120000) (+.f64 1 (exp.f64 2/3)))) (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (/.f64 (exp.f64 4/3) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))) 0)) (/.f64 (+.f64 1 (exp.f64 2/3)) (exp.f64 2/3))) 1)) 2/3) (fma.f64 (fma.f64 (pow.f64 (PI.f64) 6) -1/3826375200000 (fma.f64 720 (*.f64 (+.f64 1 (exp.f64 2/3)) (/.f64 (fma.f64 1/720 (fma.f64 -1/3826375200000 (*.f64 (pow.f64 (PI.f64) 6) (/.f64 (exp.f64 2) (pow.f64 (+.f64 1 (exp.f64 2/3)) 3))) (fma.f64 720 (*.f64 (*.f64 (pow.f64 (PI.f64) 6) -53/110199605760000000) (/.f64 (exp.f64 2/3) (+.f64 1 (exp.f64 2/3)))) (/.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 6) (exp.f64 4/3)) 1/1700611200000) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2)))) (fma.f64 -1/5509980288000000 (*.f64 (pow.f64 (PI.f64) 6) (/.f64 (exp.f64 2) (pow.f64 (+.f64 1 (exp.f64 2/3)) 3))) (*.f64 (/.f64 (fma.f64 -1/787320000 (*.f64 (pow.f64 (PI.f64) 4) (/.f64 (exp.f64 4/3) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))) (/.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (exp.f64 2/3)) 1/524880000) (+.f64 1 (exp.f64 2/3)))) (+.f64 1 (exp.f64 2/3))) (*.f64 -1/2332800 (*.f64 (pow.f64 (PI.f64) 2) (exp.f64 2/3)))))) (exp.f64 2/3))) (*.f64 (/.f64 1/135 (exp.f64 2/3)) (*.f64 (+.f64 (*.f64 (exp.f64 2/3) (/.f64 (*.f64 (pow.f64 (PI.f64) 4) 1/12597120000) (+.f64 1 (exp.f64 2/3)))) (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (/.f64 (exp.f64 4/3) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))) 0)) (*.f64 (pow.f64 (PI.f64) 2) (+.f64 1 (exp.f64 2/3))))))) (*.f64 (pow.f64 angle 6) 1/720) (*.f64 (*.f64 angle angle) (*.f64 (pow.f64 (PI.f64) 2) -1/97200))))","(+.f64 (fma.f64 (pow.f64 angle 4) (+.f64 (*.f64 (pow.f64 (PI.f64) 4) -1/18895680000) (*.f64 (+.f64 (*.f64 (exp.f64 2/3) (/.f64 (*.f64 (pow.f64 (PI.f64) 4) 1/12597120000) (+.f64 1 (exp.f64 2/3)))) 0) (/.f64 (+.f64 1 (exp.f64 2/3)) (exp.f64 2/3)))) 2/3) (fma.f64 (fma.f64 (pow.f64 (PI.f64) 6) -1/3826375200000 (fma.f64 720 (*.f64 (+.f64 1 (exp.f64 2/3)) (/.f64 (fma.f64 -1/5509980288000000 (*.f64 (pow.f64 (PI.f64) 6) (/.f64 (exp.f64 2) (pow.f64 (+.f64 1 (exp.f64 2/3)) 3))) (fma.f64 -1/2332800 (*.f64 (*.f64 (pow.f64 (PI.f64) 2) (exp.f64 2/3)) (/.f64 (fma.f64 -1/787320000 (*.f64 (pow.f64 (PI.f64) 4) (/.f64 (exp.f64 4/3) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))) (/.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 4) (exp.f64 2/3)) 1/524880000) (+.f64 1 (exp.f64 2/3)))) (+.f64 1 (exp.f64 2/3)))) (+.f64 (/.f64 (*.f64 (pow.f64 (PI.f64) 6) (*.f64 -53/110199605760000000 (exp.f64 2/3))) (+.f64 1 (exp.f64 2/3))) (*.f64 1/720 (fma.f64 -1/3826375200000 (*.f64 (pow.f64 (PI.f64) 6) (/.f64 (exp.f64 2) (pow.f64 (+.f64 1 (exp.f64 2/3)) 3))) (/.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 6) (exp.f64 4/3)) 1/1700611200000) (pow.f64 (+.f64 1 (exp.f64 2/3)) 2))))))) (exp.f64 2/3))) (*.f64 (/.f64 1/135 (exp.f64 2/3)) (*.f64 (+.f64 (*.f64 (exp.f64 2/3) (/.f64 (*.f64 (pow.f64 (PI.f64) 4) 1/12597120000) (+.f64 1 (exp.f64 2/3)))) 0) (*.f64 (pow.f64 (PI.f64) 2) (+.f64 1 (exp.f64 2/3))))))) (*.f64 (pow.f64 angle 6) 1/720) (*.f64 (*.f64 angle angle) (*.f64 (pow.f64 (PI.f64) 2) -1/97200))))","(*.f64 2/3 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)","(*.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2/3)","(*.f64 2/3 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)","(*.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2/3)","(*.f64 2/3 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)","(*.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2/3)","(*.f64 2/3 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)","(*.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2/3)","(*.f64 2/3 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)","(*.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2/3)","(*.f64 2/3 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)","(*.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2/3)","(*.f64 2/3 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)","(*.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2/3)","(*.f64 2/3 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2/3)","(*.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2/3)"]],"stop":[["node limit",1]],"time":46.930908203125,"type":"simplify"},{"compiler":[[8671,6759]],"time":109.759033203125,"type":"eval"},{"alts":[["(+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 6)) 1/3)) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","fresh",30.201983848766453],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.058186050677104],["(+.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2))) 3)) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","fresh",21.79923575385378],["(+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",35.80461126387667],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (+.f64 (log.f64 (+.f64 (hypot.f64 1 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) 1)) (log.f64 (-.f64 (hypot.f64 1 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) 1))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.59071805111081],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.058891411019758],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (pow.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))))))) 2))","fresh",21.409538022539504],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (sqrt.f64 (*.f64 4/9 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.433508169124142],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1)) (log.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sin.f64 1)))))))) 2))","fresh",24.69483278048279],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))","fresh",21.09421523058784],["(+.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) 3)) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",38.74218495240741],["(+.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 6) 1/6) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",30.249032474077836],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (+.f64 (log.f64 (expm1.f64 (*.f64 2 (log1p.f64 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (log.f64 (/.f64 1 (+.f64 (+.f64 1 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 1)))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.029062229379562],["(+.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) 1/3)) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",38.77467699518968],["(+.f64 (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) a) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","fresh",23.501292220181263],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1)) (log.f64 (cbrt.f64 (exp.f64 1))))) 2))","fresh",21.55663373890598],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b 1) 2))","fresh",21.253734881944727],["(+.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)) 5) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","fresh",21.107436737833478],["(+.f64 (pow.f64 (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",27.819655667208586],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sin.f64 1))))))) 2))","fresh",24.62547460252959],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 2/3 (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.448418089969763],["(+.f64 (pow.f64 (*.f64 a (pow.f64 (sqrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",42.754056372569615],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1)) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (pow.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))))))) 2))","fresh",21.427599487366454],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) 4)) (*.f64 1/3 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) 2))","fresh",21.079404728860474],["(+.f64 (pow.f64 (*.f64 a (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",29.842430993859693],["(+.f64 (expm1.f64 (log1p.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2))) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","fresh",21.386888497575843],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 1))))) 2))","fresh",21.573022285204523],["(+.f64 (pow.f64 (*.f64 a (*.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.076288939319788],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (-.f64 (log.f64 (expm1.f64 (*.f64 3 (log1p.f64 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (log.f64 (+.f64 (pow.f64 (hypot.f64 1 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) 4) (+.f64 (+.f64 1 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 1)))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.59370059952278],["(+.f64 (*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","fresh",25.231177755673382],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (sin.f64 1))))))) 1)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",24.691216729746564],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (sin.f64 1)))) 2))","fresh",24.62490487258258],["(+.f64 (*.f64 (*.f64 a a) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000)))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","fresh",37.083775385476265],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))))) 1)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.02833713308948],["(+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 1/32400 (*.f64 angle (*.f64 angle (*.f64 a a))))) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","fresh",31.65160047033825],["(+.f64 (pow.f64 (*.f64 a (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (sin.f64 1)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",33.40755540890715],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (cbrt.f64 (exp.f64 2))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.448418089969763],["(+.f64 (*.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)) (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 3/2)) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","fresh",38.30155701276422],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (neg.f64 (log.f64 (/.f64 (+.f64 (pow.f64 (hypot.f64 1 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) 4) (+.f64 (+.f64 1 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 1)) (expm1.f64 (*.f64 3 (log1p.f64 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","fresh",21.029062229387698]],"compiler":[[32,26],[54,45],[33,27],[27,22],[55,44],[56,47],[42,35],[39,31],[59,50],[24,19],[29,24],[28,23],[59,48],[30,25],[35,25],[37,32],[19,16],[39,29],[23,18],[45,38],[29,24],[45,37],[45,38],[46,39],[57,46],[30,24],[34,29],[50,38],[70,56],[30,24],[59,48],[41,33],[37,28],[46,38],[31,24],[59,48],[32,27],[38,28],[70,56]],"count":[[214,39]],"kept":[{"done":[0,0],"fresh":[36,25],"new":[177,14],"picked":[1,0]}],"min-error":[20.038098725811338],"time":70.472900390625,"type":"prune"},{"accuracy":[21.028309709543894],"baseline":[21.0283097095439],"branch":[["a",21.028309709543898,1],["b",21.028309709543898,1],["angle",21.028309709543894,1],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))",21.028309709543894,1],["(*.f64 (/.f64 angle 180) (PI.f64))",21.028309709543894,1],["(/.f64 angle 180)",21.028309709543894,1]],"compiler":[[4,3],[4,3],[4,3],[24,19],[8,7],[6,5],[2499,1857]],"count":[[69,1]],"inputs":[["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (+.f64 (log.f64 (+.f64 (hypot.f64 1 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) 1)) (log.f64 (-.f64 (hypot.f64 1 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) 1))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (sqrt.f64 (*.f64 4/9 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1)) (log.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sin.f64 1)))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (+.f64 (log.f64 (expm1.f64 (*.f64 2 (log1p.f64 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (log.f64 (/.f64 1 (+.f64 (+.f64 1 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 1)))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1)) (log.f64 (cbrt.f64 (exp.f64 1))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 2/3 (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (pow.f64 (sqrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1)) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (pow.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))))))) 2))","(+.f64 (pow.f64 (*.f64 a (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (-.f64 (log.f64 (expm1.f64 (*.f64 3 (log1p.f64 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))) (log.f64 (+.f64 (pow.f64 (hypot.f64 1 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) 4) (+.f64 (+.f64 1 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 1)))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (sin.f64 1))))))) 1)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))))) 1)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (sin.f64 1)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (neg.f64 (log.f64 (/.f64 (+.f64 (pow.f64 (hypot.f64 1 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) 4) (+.f64 (+.f64 1 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) 1)) (expm1.f64 (*.f64 3 (log1p.f64 (pow.f64 (exp.f64 2/3) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 6)) 1/3)) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","(+.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2))) 3)) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (log.f64 (fma.f64 (pow.f64 (cbrt.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 2) (cbrt.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 1))) 2))","(+.f64 (*.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)) (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 3/2)) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","(+.f64 (*.f64 (*.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) a) (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","(+.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)) 5) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))) 4)) (*.f64 1/3 (*.f64 1/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) 2))","(+.f64 (expm1.f64 (log1p.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2))) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","(+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 1/32400 (*.f64 angle (*.f64 angle (*.f64 a a))))) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sin.f64 1))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) 2)))) 2))","(+.f64 (*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (log.f64 (sqrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (sqrt.f64 (pow.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (pow.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))))))) 2))","(+.f64 (pow.f64 (*.f64 a (pow.f64 (sqrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (log1p.f64 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sin.f64 1))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 2/3 (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 1))))) 2))","(+.f64 (pow.f64 (*.f64 a (*.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (cbrt.f64 (exp.f64 2))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (-.f64 (exp.f64 (log1p.f64 (exp.f64 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) 1)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (*.f64 (pow.f64 (exp.f64 1) (*.f64 2 (*.f64 1/3 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))))) (pow.f64 (exp.f64 1) (*.f64 1/3 (*.f64 2/3 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))))) (sin.f64 1)))))))) 2))","(+.f64 (pow.f64 (*.f64 a (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (sin.f64 1)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 1/32400 (*.f64 angle (*.f64 angle (*.f64 a a))))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (pow.f64 (pow.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2)) 3/2) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (*.f64 a (*.f64 a (pow.f64 (sin.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (expm1.f64 (log1p.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (pow.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) 3)) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (pow.f64 (pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 6) 1/6) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) (*.f64 a (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (pow.f64 (exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) 1/3)) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (pow.f64 (sqrt.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))) 2)) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b 1) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (expm1.f64 (log1p.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (exp.f64 (*.f64 (log.f64 (cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 2))) 3)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) (sin.f64 1)))) 2))","(+.f64 (*.f64 (*.f64 a a) (+.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 angle (*.f64 angle 1/32400))) (*.f64 (pow.f64 (PI.f64) 4) (*.f64 (pow.f64 angle 4) -1/3149280000)))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 6)) 1/3)) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (log.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))) 2))","(+.f64 (*.f64 1/32400 (*.f64 (pow.f64 angle 2) (*.f64 (pow.f64 a 2) (pow.f64 (PI.f64) 2)))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (pow.f64 (*.f64 1/180 (*.f64 angle (*.f64 a (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (*.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a)) 5) (cbrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (*.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a) 3/2) (sqrt.f64 (*.f64 (sin.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)) a))) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2))","(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))"]],"link":["."],"name":["ab-angle->ABCF A"],"oracle":[55.8127259575607],"outputs":[["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))"]],"time":153.802001953125,"times":[["a",17.572021484375],["b",18.676025390625],["angle",18.324951171875],["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2) (pow.f64 (*.f64 b (cos.f64 (*.f64 (/.f64 angle 180) (PI.f64)))) 2))",14.513916015625],["(*.f64 (/.f64 angle 180) (PI.f64))",18.43896484375],["(/.f64 angle 180)",18.166015625]],"type":"regimes"},{"compiler":[[39,31]],"egraph":[[1,32,61,7.0667e-5],[0,25,61,3.9209e-5]],"inputs":[["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (pow.f64 (*.f64 a (sin.f64 (*.f64 angle (/.f64 (PI.f64) 180)))) 2) (pow.f64 (*.f64 b (+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (*.f64 angle (PI.f64)) 1/180))))))) 2))"]],"stop":[["fuel",1],["saturated",1]],"time":9.10498046875,"type":"simplify"},{"time":0.01611328125,"type":"soundness"},{"compiler":[[39,31]],"remove-preprocessing":[[]],"time":17.534912109375,"type":"end"}]