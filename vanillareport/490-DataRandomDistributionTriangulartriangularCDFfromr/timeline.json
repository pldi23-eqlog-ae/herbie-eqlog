[{"compiler":[[14,9]],"method":["search"],"sampling":[[12,0.43274750726598277,0.5653007977798874,0.0019516949541298345],[11,0.35477498343427416,0.643273321611596,0.0019516949541298345],[10,0.335281852476347,0.6627664525695232,0.0019516949541298345],[9,0.20272856196244238,0.7953197430834278,0.0019516949541298345],[8,0.09356702859805033,0.9044812764478198,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":103.782958984375,"type":"analyze"},{"outcomes":[["body",256,"invalid",18.009521484375,404],["body",256,"valid",369.534423828125,8256]],"time":395.695068359375,"type":"sample"},{"compiler":[[13,8]],"egraph":[[1,4,4,7.792e-6],[0,4,4,6.417e-6],[6,6623,91,0.03301],[5,2875,91,0.021858],[4,1467,91,0.008428083999999999],[3,450,91,0.002735459],[2,155,91,0.000870125],[1,60,91,0.000289459],[0,28,91,9.9167e-5]],"inputs":[["0","1","2","3"],["(/.f64 x (*.f64 (-.f64 y z) (-.f64 t z)))","(/.f64 y (*.f64 (-.f64 x z) (-.f64 t z)))","(/.f64 z (*.f64 (-.f64 y x) (-.f64 t x)))","(/.f64 t (*.f64 (-.f64 y z) (-.f64 x z)))","(/.f64 x (*.f64 (-.f64 z y) (-.f64 t y)))","(/.f64 x (*.f64 (-.f64 t z) (-.f64 y z)))","(/.f64 x (*.f64 (-.f64 y t) (-.f64 z t)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3","1"],["(/.f64 x (*.f64 (-.f64 y z) (-.f64 t z)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 y (*.f64 (-.f64 x z) (-.f64 t z)))","(/.f64 y (*.f64 (-.f64 t z) (-.f64 x z)))","(/.f64 y (*.f64 (-.f64 z t) (-.f64 z x)))","(/.f64 z (*.f64 (-.f64 y x) (-.f64 t x)))","(/.f64 (/.f64 z (-.f64 y x)) (-.f64 t x))","(/.f64 z (*.f64 (-.f64 x t) (-.f64 x y)))","(/.f64 t (*.f64 (-.f64 y z) (-.f64 x z)))","(/.f64 (/.f64 t (-.f64 y z)) (-.f64 x z))","(/.f64 x (*.f64 (-.f64 z y) (-.f64 t y)))","(/.f64 x (*.f64 (-.f64 y z) (-.f64 y t)))","(/.f64 x (*.f64 (-.f64 t z) (-.f64 y z)))","(/.f64 x (*.f64 (-.f64 y z) (-.f64 t z)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 y t) (-.f64 z t)))","(/.f64 (/.f64 x (-.f64 y t)) (-.f64 z t))"]],"stop":[["unsound",1],["node limit",1]],"symmetry":[["(sort y t)"]],"time":57.202880859375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[12,4119,13,0.068236666],[11,4119,13,0.059057124],[10,3958,13,0.050243124],[9,3958,13,0.040805416],[8,3936,13,0.033027583],[7,3173,13,0.024329],[6,1829,13,0.013793708],[5,948,13,0.005684583],[4,303,13,0.002177708],[3,94,13,0.000660208],[2,35,13,0.000243833],[1,15,13,0.000101333],[0,9,13,3.9458e-5]],"inputs":[["(/.f64 x (*.f64 (-.f64 y z) (-.f64 t z)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (*.f64 (-.f64 y z) (-.f64 t z)))","(/.f64 (/.f64 x (-.f64 y z)) (-.f64 t z))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))"]],"stop":[["saturated",1]],"time":80.129150390625,"type":"simplify"},{"compiler":[[22,12]],"time":0.301025390625,"type":"eval"},{"alts":[["(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","next",2.1756393093264297],["(/.f64 x (*.f64 (-.f64 y z) (-.f64 t z)))","fresh",10.389617560054827]],"compiler":[[13,8],[13,8],[13,8],[13,8]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.09375],"time":1.182861328125,"type":"prune"},{"compiler":[[28,8]],"locations":[["(/.f64 x (-.f64 z y))",0.00390625,true],["(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))",2.1129415991999285,true]],"time":5.27294921875,"type":"localize"},{"count":[[2,72]],"series":[["(/.f64 x (-.f64 z y))","y","-inf",0.234130859375],["(/.f64 x (-.f64 z y))","y","inf",0.266845703125],["(/.f64 x (-.f64 z y))","y","0",0.260986328125],["(/.f64 x (-.f64 z y))","z","-inf",0.281005859375],["(/.f64 x (-.f64 z y))","z","inf",0.31005859375],["(/.f64 x (-.f64 z y))","z","0",0.5009765625],["(/.f64 x (-.f64 z y))","x","-inf",0.345947265625],["(/.f64 x (-.f64 z y))","x","inf",0.322998046875],["(/.f64 x (-.f64 z y))","x","0",0.364990234375],["(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","t","-inf",0.370849609375],["(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","t","inf",0.505126953125],["(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","t","0",0.446044921875],["(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","y","-inf",0.376953125],["(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","y","inf",0.51806640625],["(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","y","0",0.89404296875],["(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","z","-inf",0.584228515625],["(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","z","inf",0.716064453125],["(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","z","0",1.117919921875],["(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","x","-inf",0.4521484375],["(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","x","inf",0.77783203125],["(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","x","0",0.711181640625]],"time":10.72216796875,"type":"series"},{"count":[[2,87]],"egraph":[[2,3408,20,0.027598001],[1,212,20,0.0041095839999999995],[0,9,20,0.000210375]],"inputs":[["(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (-.f64 z y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))))) (cbrt.f64 (exp.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (*.f64 (-.f64 z y) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 (/.f64 1 (-.f64 z y)) (/.f64 1 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 z y)) (/.f64 1 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))) (pow.f64 (cbrt.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))) 2) (cbrt.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (*.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (/.f64 1 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))) (sqrt.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (*.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (/.f64 1 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 x) (-.f64 z y)) (/.f64 1 (neg.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z t)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (-.f64 z t)) (/.f64 (cbrt.f64 x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (-.f64 z t)) (/.f64 (sqrt.f64 x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x 1) (/.f64 (/.f64 1 (-.f64 z y)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) 1) (/.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) 1) (/.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (cbrt.f64 (-.f64 z t)) 2)) (/.f64 (/.f64 1 (-.f64 z y)) (cbrt.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z t)) 2)) (/.f64 (/.f64 x (-.f64 z y)) (cbrt.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (pow.f64 (cbrt.f64 (-.f64 z t)) 2)) (cbrt.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z t)) 2)) (/.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (sqrt.f64 (-.f64 z t))) (/.f64 (/.f64 1 (-.f64 z y)) (sqrt.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 z t))) (/.f64 (/.f64 x (-.f64 z y)) (sqrt.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (sqrt.f64 (-.f64 z t))) (/.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 (pow.f64 z 3) (pow.f64 t 3))) (fma.f64 t (+.f64 z t) (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 (*.f64 z z) (*.f64 t t))) (+.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 z t) (/.f64 (-.f64 z y) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (-.f64 z y) x) (-.f64 z t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (-.f64 z y) (-.f64 z t)) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (-.f64 z t) (/.f64 (-.f64 z y) x)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 x (-.f64 z y)) (neg.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 x (-.f64 z y)) 3) (pow.f64 (-.f64 z t) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 x (-.f64 z y)))) (cbrt.f64 (exp.f64 (/.f64 x (-.f64 z y)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (-.f64 z y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (-.f64 z y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (cbrt.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 x (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (cbrt.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 z y))) (/.f64 x (sqrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 y (+.f64 z y) (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (-.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 z y) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 z y) x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (neg.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 z y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (-.f64 z y))) 1))))))"]],"rules":[["egg-rr",39],["egg-rr",48]],"stop":[["node limit",1]],"time":50.426025390625,"type":"rewrite"},{"count":[[159,156]],"egraph":[[2,3120,2065,0.018425542],[1,699,2354,0.005281167],[0,191,2498,0.000951459]],"inputs":[["(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 y t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (/.f64 x (*.f64 y t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (pow.f64 z 2))) (/.f64 x (*.f64 y t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (pow.f64 z 2))) (+.f64 (/.f64 x (*.f64 y t)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2))))) (*.f64 y t)))) (pow.f64 z 3))))))","(/.f64 x (pow.f64 z 2))","(+.f64 (/.f64 x (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4)))))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))))) (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 t x))))) (pow.f64 z 5))))))","(/.f64 x (pow.f64 z 2))","(+.f64 (/.f64 x (pow.f64 z 2)) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3))))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (+.f64 y t)) (pow.f64 z 5))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 t (*.f64 (+.f64 y t) x))) (pow.f64 z 5))) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3))))))","(/.f64 x (*.f64 (-.f64 z t) z))","(+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (-.f64 z t) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (-.f64 z t) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (+.f64 (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2))) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (-.f64 z t) (pow.f64 z 4))))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z t) (pow.f64 y 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3)))))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z t) (pow.f64 y 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3)))))))","(/.f64 x (*.f64 (-.f64 z y) z))","(+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (-.f64 z y) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (-.f64 z y) (pow.f64 z 3))) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (-.f64 z y) (pow.f64 z 4))) (+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2))))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z y) (pow.f64 t 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3)))))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z y) (pow.f64 t 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3)))))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 y t))","(/.f64 x (*.f64 t y))","(/.f64 (/.f64 x y) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (/.f64 x (*.f64 y t)))","(fma.f64 -1 (/.f64 (*.f64 (*.f64 -1 (+.f64 t y)) (*.f64 x z)) (*.f64 (*.f64 y y) (*.f64 t t))) (/.f64 x (*.f64 t y)))","(-.f64 (/.f64 x (*.f64 t y)) (*.f64 (*.f64 (/.f64 z (*.f64 y y)) x) (/.f64 (-.f64 (neg.f64 y) t) (*.f64 t t))))","(+.f64 (/.f64 (/.f64 x y) t) (*.f64 (*.f64 (/.f64 x t) (/.f64 z t)) (/.f64 (+.f64 t y) (*.f64 y y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (pow.f64 z 2))) (/.f64 x (*.f64 y t))))","(fma.f64 -1 (/.f64 (*.f64 (*.f64 -1 (+.f64 t y)) (*.f64 x z)) (*.f64 (*.f64 y y) (*.f64 t t))) (fma.f64 -1 (*.f64 (fma.f64 -1 (*.f64 (/.f64 (pow.f64 (*.f64 -1 (+.f64 t y)) 2) (pow.f64 y 3)) (/.f64 x (pow.f64 t 3))) (/.f64 x (*.f64 (*.f64 y y) (*.f64 t t)))) (*.f64 z z)) (/.f64 x (*.f64 t y))))","(-.f64 (-.f64 (/.f64 x (*.f64 t y)) (*.f64 z (*.f64 z (-.f64 (/.f64 (/.f64 x (*.f64 y y)) (*.f64 t t)) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (-.f64 (neg.f64 y) t) 2) (pow.f64 y 3))))))) (*.f64 (*.f64 (/.f64 z (*.f64 y y)) x) (/.f64 (-.f64 (neg.f64 y) t) (*.f64 t t))))","(+.f64 (/.f64 (/.f64 x y) t) (-.f64 (*.f64 (*.f64 (/.f64 x t) (/.f64 z t)) (/.f64 (+.f64 t y) (*.f64 y y))) (*.f64 z (*.f64 z (-.f64 (/.f64 x (*.f64 t (*.f64 t (*.f64 y y)))) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (+.f64 t y) 2) (pow.f64 y 3))))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (pow.f64 z 2))) (+.f64 (/.f64 x (*.f64 y t)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2))))) (*.f64 y t)))) (pow.f64 z 3))))))","(fma.f64 -1 (/.f64 (*.f64 (*.f64 -1 (+.f64 t y)) (*.f64 x z)) (*.f64 (*.f64 y y) (*.f64 t t))) (+.f64 (fma.f64 -1 (*.f64 (fma.f64 -1 (*.f64 (/.f64 (pow.f64 (*.f64 -1 (+.f64 t y)) 2) (pow.f64 y 3)) (/.f64 x (pow.f64 t 3))) (/.f64 x (*.f64 (*.f64 y y) (*.f64 t t)))) (*.f64 z z)) (/.f64 x (*.f64 t y))) (neg.f64 (*.f64 (*.f64 -1 (+.f64 (/.f64 (*.f64 x (*.f64 -1 (+.f64 t y))) (*.f64 (pow.f64 y 3) (pow.f64 t 3))) (*.f64 (/.f64 (*.f64 -1 (+.f64 t y)) y) (/.f64 (fma.f64 -1 (*.f64 (/.f64 (pow.f64 (*.f64 -1 (+.f64 t y)) 2) (pow.f64 y 3)) (/.f64 x (pow.f64 t 3))) (/.f64 x (*.f64 (*.f64 y y) (*.f64 t t)))) t)))) (pow.f64 z 3)))))","(-.f64 (-.f64 (fma.f64 (*.f64 1 (fma.f64 (/.f64 (-.f64 (neg.f64 y) t) (pow.f64 y 3)) (/.f64 x (pow.f64 t 3)) (*.f64 (/.f64 (-.f64 (neg.f64 y) t) y) (/.f64 (-.f64 (/.f64 (/.f64 x (*.f64 y y)) (*.f64 t t)) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (-.f64 (neg.f64 y) t) 2) (pow.f64 y 3)))) t)))) (pow.f64 z 3) (/.f64 x (*.f64 t y))) (*.f64 z (*.f64 z (-.f64 (/.f64 (/.f64 x (*.f64 y y)) (*.f64 t t)) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (-.f64 (neg.f64 y) t) 2) (pow.f64 y 3))))))) (*.f64 (*.f64 (/.f64 z (*.f64 y y)) x) (/.f64 (-.f64 (neg.f64 y) t) (*.f64 t t))))","(+.f64 (-.f64 (/.f64 (/.f64 x y) t) (*.f64 (fma.f64 (/.f64 (+.f64 t y) y) (/.f64 (-.f64 (/.f64 x (*.f64 t (*.f64 t (*.f64 y y)))) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (+.f64 t y) 2) (pow.f64 y 3)))) t) (/.f64 (+.f64 t y) (*.f64 (/.f64 (pow.f64 y 3) x) (pow.f64 t 3)))) (pow.f64 z 3))) (-.f64 (*.f64 (*.f64 (/.f64 x t) (/.f64 z t)) (/.f64 (+.f64 t y) (*.f64 y y))) (*.f64 z (*.f64 z (-.f64 (/.f64 x (*.f64 t (*.f64 t (*.f64 y y)))) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (+.f64 t y) 2) (pow.f64 y 3))))))))","(/.f64 x (pow.f64 z 2))","(/.f64 x (*.f64 z z))","(/.f64 (/.f64 x z) z)","(+.f64 (/.f64 x (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))))","(+.f64 (/.f64 x (*.f64 z z)) (neg.f64 (/.f64 (*.f64 x (*.f64 -1 (+.f64 t y))) (pow.f64 z 3))))","(-.f64 (/.f64 (/.f64 x z) z) (*.f64 (/.f64 (-.f64 (neg.f64 y) t) (pow.f64 z 3)) x))","(*.f64 (+.f64 (/.f64 (+.f64 t y) z) 1) (/.f64 x (*.f64 z z)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4)))))","(+.f64 (/.f64 x (*.f64 z z)) (fma.f64 -1 (/.f64 (*.f64 x (*.f64 -1 (+.f64 t y))) (pow.f64 z 3)) (neg.f64 (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (*.f64 -1 (+.f64 t y)) 2)) (*.f64 y (*.f64 x t))) (pow.f64 z 4)))))","(-.f64 (-.f64 (/.f64 (/.f64 x z) z) (*.f64 (/.f64 (-.f64 (neg.f64 y) t) (pow.f64 z 3)) x)) (/.f64 (*.f64 x (+.f64 (neg.f64 (pow.f64 (-.f64 (neg.f64 y) t) 2)) (*.f64 t y))) (pow.f64 z 4)))","(-.f64 (*.f64 (+.f64 (/.f64 (+.f64 t y) z) 1) (/.f64 x (*.f64 z z))) (/.f64 (*.f64 x (-.f64 (*.f64 t y) (pow.f64 (+.f64 t y) 2))) (pow.f64 z 4)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))))) (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 t x))))) (pow.f64 z 5))))))","(+.f64 (/.f64 x (*.f64 z z)) (fma.f64 -1 (/.f64 (*.f64 x (*.f64 -1 (+.f64 t y))) (pow.f64 z 3)) (fma.f64 -1 (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (*.f64 -1 (+.f64 t y)) 2)) (*.f64 y (*.f64 x t))) (pow.f64 z 4)) (neg.f64 (/.f64 (*.f64 -1 (+.f64 (*.f64 (*.f64 -1 (+.f64 t y)) (fma.f64 -1 (*.f64 x (pow.f64 (*.f64 -1 (+.f64 t y)) 2)) (*.f64 y (*.f64 x t)))) (*.f64 y (*.f64 (*.f64 -1 (+.f64 t y)) (*.f64 x t))))) (pow.f64 z 5))))))","(+.f64 (/.f64 (/.f64 x z) z) (-.f64 (-.f64 (/.f64 (*.f64 1 (fma.f64 (-.f64 (neg.f64 y) t) (*.f64 x (+.f64 (neg.f64 (pow.f64 (-.f64 (neg.f64 y) t) 2)) (*.f64 t y))) (*.f64 y (*.f64 t (*.f64 x (-.f64 (neg.f64 y) t)))))) (pow.f64 z 5)) (/.f64 (*.f64 x (+.f64 (neg.f64 (pow.f64 (-.f64 (neg.f64 y) t) 2)) (*.f64 t y))) (pow.f64 z 4))) (*.f64 (/.f64 (-.f64 (neg.f64 y) t) (pow.f64 z 3)) x)))","(+.f64 (*.f64 (+.f64 (/.f64 (+.f64 t y) z) 1) (/.f64 x (*.f64 z z))) (-.f64 (/.f64 (*.f64 (-.f64 (neg.f64 y) t) (+.f64 (*.f64 x (-.f64 (*.f64 t y) (pow.f64 (+.f64 t y) 2))) (*.f64 t (*.f64 x y)))) (pow.f64 z 5)) (/.f64 (*.f64 x (-.f64 (*.f64 t y) (pow.f64 (+.f64 t y) 2))) (pow.f64 z 4))))","(/.f64 x (pow.f64 z 2))","(/.f64 x (*.f64 z z))","(/.f64 (/.f64 x z) z)","(+.f64 (/.f64 x (pow.f64 z 2)) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3)))","(+.f64 (/.f64 x (*.f64 z z)) (neg.f64 (/.f64 (*.f64 x (*.f64 -1 (+.f64 t y))) (pow.f64 z 3))))","(-.f64 (/.f64 (/.f64 x z) z) (*.f64 (/.f64 (-.f64 (neg.f64 y) t) (pow.f64 z 3)) x))","(*.f64 (+.f64 (/.f64 (+.f64 t y) z) 1) (/.f64 x (*.f64 z z)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3))))","(+.f64 (/.f64 x (*.f64 z z)) (fma.f64 -1 (/.f64 (*.f64 x (*.f64 -1 (+.f64 t y))) (pow.f64 z 3)) (neg.f64 (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (*.f64 -1 (+.f64 t y)) 2)) (*.f64 y (*.f64 x t))) (pow.f64 z 4)))))","(-.f64 (-.f64 (/.f64 (/.f64 x z) z) (*.f64 (/.f64 (-.f64 (neg.f64 y) t) (pow.f64 z 3)) x)) (/.f64 (*.f64 x (+.f64 (neg.f64 (pow.f64 (-.f64 (neg.f64 y) t) 2)) (*.f64 t y))) (pow.f64 z 4)))","(-.f64 (*.f64 (+.f64 (/.f64 (+.f64 t y) z) 1) (/.f64 x (*.f64 z z))) (/.f64 (*.f64 x (-.f64 (*.f64 t y) (pow.f64 (+.f64 t y) 2))) (pow.f64 z 4)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (+.f64 y t)) (pow.f64 z 5))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 t (*.f64 (+.f64 y t) x))) (pow.f64 z 5))) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3))))))","(+.f64 (/.f64 x (*.f64 z z)) (fma.f64 -1 (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (+.f64 t y) 2)) (*.f64 y (*.f64 x t))) (/.f64 (pow.f64 z 5) (+.f64 t y))) (fma.f64 -1 (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (+.f64 t y) 2)) (*.f64 y (*.f64 x t))) (pow.f64 z 4)) (fma.f64 -1 (/.f64 y (/.f64 (pow.f64 z 5) (*.f64 t (*.f64 x (+.f64 t y))))) (/.f64 (*.f64 x (+.f64 t y)) (pow.f64 z 3))))))","(+.f64 (/.f64 (/.f64 x z) z) (-.f64 (-.f64 (-.f64 (*.f64 (/.f64 (+.f64 t y) (pow.f64 z 3)) x) (*.f64 (/.f64 y (pow.f64 z 5)) (*.f64 x (*.f64 t (+.f64 t y))))) (/.f64 (*.f64 x (+.f64 (*.f64 t y) (neg.f64 (pow.f64 (+.f64 t y) 2)))) (pow.f64 z 4))) (*.f64 (/.f64 (*.f64 x (+.f64 (*.f64 t y) (neg.f64 (pow.f64 (+.f64 t y) 2)))) (pow.f64 z 5)) (+.f64 t y))))","(+.f64 (/.f64 x (*.f64 z z)) (-.f64 (-.f64 (fma.f64 (/.f64 (+.f64 t y) (pow.f64 z 3)) x (/.f64 (*.f64 (neg.f64 x) (-.f64 (*.f64 t y) (pow.f64 (+.f64 t y) 2))) (pow.f64 z 4))) (*.f64 (/.f64 y (pow.f64 z 5)) (*.f64 x (*.f64 t (+.f64 t y))))) (*.f64 (/.f64 (*.f64 x (-.f64 (*.f64 t y) (pow.f64 (+.f64 t y) 2))) (pow.f64 z 5)) (+.f64 t y))))","(/.f64 x (*.f64 (-.f64 z t) z))","(/.f64 x (*.f64 z (-.f64 z t)))","(/.f64 (/.f64 x z) (-.f64 z t))","(+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2))))","(+.f64 (/.f64 x (*.f64 z (-.f64 z t))) (/.f64 (*.f64 x y) (*.f64 (-.f64 z t) (*.f64 z z))))","(fma.f64 (/.f64 y (-.f64 z t)) (/.f64 (/.f64 x z) z) (/.f64 x (*.f64 z (-.f64 z t))))","(fma.f64 (/.f64 y (-.f64 z t)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x z) (-.f64 z t)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (-.f64 z t) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2)))))","(+.f64 (+.f64 (/.f64 x (*.f64 z (-.f64 z t))) (/.f64 (*.f64 x y) (*.f64 (-.f64 z t) (*.f64 z z)))) (/.f64 (*.f64 x (*.f64 y y)) (*.f64 (-.f64 z t) (pow.f64 z 3))))","(fma.f64 (/.f64 (*.f64 y y) (-.f64 z t)) (/.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 y (-.f64 z t)) (/.f64 (/.f64 x z) z) (/.f64 x (*.f64 z (-.f64 z t)))))","(+.f64 (/.f64 (/.f64 x z) (-.f64 z t)) (*.f64 (/.f64 x (-.f64 z t)) (+.f64 (/.f64 y (*.f64 z z)) (/.f64 (*.f64 y y) (pow.f64 z 3)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (-.f64 z t) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (+.f64 (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2))) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (-.f64 z t) (pow.f64 z 4))))))","(+.f64 (/.f64 (*.f64 x (*.f64 y y)) (*.f64 (-.f64 z t) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 z (-.f64 z t))) (+.f64 (/.f64 (*.f64 x y) (*.f64 (-.f64 z t) (*.f64 z z))) (*.f64 (/.f64 (pow.f64 y 3) (-.f64 z t)) (/.f64 x (pow.f64 z 4))))))","(+.f64 (fma.f64 (/.f64 (*.f64 y y) (-.f64 z t)) (/.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 y (-.f64 z t)) (/.f64 (/.f64 x z) z) (/.f64 x (*.f64 z (-.f64 z t))))) (*.f64 (/.f64 (pow.f64 y 3) (-.f64 z t)) (/.f64 x (pow.f64 z 4))))","(+.f64 (fma.f64 (/.f64 y (-.f64 z t)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x z) (-.f64 z t))) (*.f64 (/.f64 x (-.f64 z t)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (/.f64 (*.f64 y y) (pow.f64 z 3)))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)))","(neg.f64 (/.f64 x (*.f64 (-.f64 z t) y)))","(/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))))","(*.f64 -1 (+.f64 (/.f64 x (*.f64 (-.f64 z t) y)) (*.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)))))","(-.f64 (/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t)) (/.f64 z (/.f64 (-.f64 z t) (/.f64 x (*.f64 y y)))))","(*.f64 (/.f64 -1 (-.f64 z t)) (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3))))))","(fma.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)) (fma.f64 -1 (*.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y))) (neg.f64 (/.f64 (*.f64 z z) (/.f64 (*.f64 (-.f64 z t) (pow.f64 y 3)) x)))))","(-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)) (*.f64 (/.f64 x (-.f64 z t)) (/.f64 (*.f64 z z) (pow.f64 y 3))))) (/.f64 x (*.f64 (-.f64 z t) y)))","(-.f64 (/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t)) (*.f64 (/.f64 x (-.f64 z t)) (+.f64 (/.f64 z (*.f64 y y)) (/.f64 (*.f64 z z) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z t) (pow.f64 y 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3)))))))","(fma.f64 -1 (*.f64 (/.f64 (pow.f64 z 3) (-.f64 z t)) (/.f64 x (pow.f64 y 4))) (fma.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)) (fma.f64 -1 (*.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y))) (neg.f64 (/.f64 (*.f64 z z) (/.f64 (*.f64 (-.f64 z t) (pow.f64 y 3)) x))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)) (*.f64 (/.f64 x (-.f64 z t)) (/.f64 (*.f64 z z) (pow.f64 y 3))))) (/.f64 x (*.f64 (-.f64 z t) y))) (/.f64 (*.f64 x (pow.f64 z 3)) (*.f64 (-.f64 z t) (pow.f64 y 4))))","(-.f64 (*.f64 (/.f64 -1 (-.f64 z t)) (+.f64 (*.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) x) (/.f64 x y))) (*.f64 (/.f64 x (-.f64 z t)) (+.f64 (/.f64 z (*.f64 y y)) (/.f64 (*.f64 z z) (pow.f64 y 3)))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)))","(neg.f64 (/.f64 x (*.f64 (-.f64 z t) y)))","(/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))))","(*.f64 -1 (+.f64 (/.f64 x (*.f64 (-.f64 z t) y)) (*.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)))))","(-.f64 (/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t)) (/.f64 z (/.f64 (-.f64 z t) (/.f64 x (*.f64 y y)))))","(*.f64 (/.f64 -1 (-.f64 z t)) (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3))))))","(fma.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)) (fma.f64 -1 (*.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y))) (neg.f64 (/.f64 (*.f64 z z) (/.f64 (*.f64 (-.f64 z t) (pow.f64 y 3)) x)))))","(-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)) (*.f64 (/.f64 x (-.f64 z t)) (/.f64 (*.f64 z z) (pow.f64 y 3))))) (/.f64 x (*.f64 (-.f64 z t) y)))","(-.f64 (/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t)) (*.f64 (/.f64 x (-.f64 z t)) (+.f64 (/.f64 z (*.f64 y y)) (/.f64 (*.f64 z z) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z t) (pow.f64 y 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3)))))))","(fma.f64 -1 (*.f64 (/.f64 (pow.f64 z 3) (-.f64 z t)) (/.f64 x (pow.f64 y 4))) (fma.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)) (fma.f64 -1 (*.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y))) (neg.f64 (/.f64 (*.f64 z z) (/.f64 (*.f64 (-.f64 z t) (pow.f64 y 3)) x))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)) (*.f64 (/.f64 x (-.f64 z t)) (/.f64 (*.f64 z z) (pow.f64 y 3))))) (/.f64 x (*.f64 (-.f64 z t) y))) (/.f64 (*.f64 x (pow.f64 z 3)) (*.f64 (-.f64 z t) (pow.f64 y 4))))","(-.f64 (*.f64 (/.f64 -1 (-.f64 z t)) (+.f64 (*.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) x) (/.f64 x y))) (*.f64 (/.f64 x (-.f64 z t)) (+.f64 (/.f64 z (*.f64 y y)) (/.f64 (*.f64 z z) (pow.f64 y 3)))))","(/.f64 x (*.f64 (-.f64 z y) z))","(/.f64 x (*.f64 z (-.f64 z y)))","(+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2))))","(+.f64 (/.f64 x (*.f64 z (-.f64 z y))) (/.f64 (*.f64 x t) (*.f64 (-.f64 z y) (*.f64 z z))))","(fma.f64 (/.f64 t (-.f64 z y)) (/.f64 (/.f64 x z) z) (/.f64 x (*.f64 z (-.f64 z y))))","(fma.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 z (-.f64 z y))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (-.f64 z y) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2)))))","(+.f64 (+.f64 (/.f64 x (*.f64 z (-.f64 z y))) (/.f64 (*.f64 x t) (*.f64 (-.f64 z y) (*.f64 z z)))) (*.f64 (/.f64 (*.f64 t t) (-.f64 z y)) (/.f64 x (pow.f64 z 3))))","(fma.f64 (/.f64 t (/.f64 (-.f64 z y) t)) (/.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 t (-.f64 z y)) (/.f64 (/.f64 x z) z) (/.f64 x (*.f64 z (-.f64 z y)))))","(+.f64 (/.f64 x (*.f64 z (-.f64 z y))) (*.f64 (/.f64 x (-.f64 z y)) (+.f64 (/.f64 t (*.f64 z z)) (/.f64 (*.f64 t t) (pow.f64 z 3)))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (-.f64 z y) (pow.f64 z 3))) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (-.f64 z y) (pow.f64 z 4))) (+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2))))))","(+.f64 (*.f64 (/.f64 (*.f64 t t) (-.f64 z y)) (/.f64 x (pow.f64 z 3))) (+.f64 (+.f64 (/.f64 x (*.f64 z (-.f64 z y))) (/.f64 (*.f64 x t) (*.f64 (-.f64 z y) (*.f64 z z)))) (*.f64 (/.f64 (pow.f64 t 3) (-.f64 z y)) (/.f64 x (pow.f64 z 4)))))","(fma.f64 (/.f64 t (/.f64 (-.f64 z y) t)) (/.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 (pow.f64 t 3) (-.f64 z y)) (/.f64 x (pow.f64 z 4)) (fma.f64 (/.f64 t (-.f64 z y)) (/.f64 (/.f64 x z) z) (/.f64 x (*.f64 z (-.f64 z y))))))","(+.f64 (fma.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 z (-.f64 z y)))) (*.f64 (/.f64 x (-.f64 z y)) (+.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t)))","(neg.f64 (/.f64 x (*.f64 t (-.f64 z y))))","(/.f64 (/.f64 (neg.f64 x) (-.f64 z y)) t)","(/.f64 (neg.f64 x) (*.f64 t (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))))","(*.f64 -1 (+.f64 (/.f64 (*.f64 x z) (*.f64 (-.f64 z y) (*.f64 t t))) (/.f64 x (*.f64 t (-.f64 z y)))))","(neg.f64 (fma.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t)) (/.f64 x (*.f64 t (-.f64 z y)))))","(*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 z (*.f64 t t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3))))))","(fma.f64 -1 (/.f64 (*.f64 x z) (*.f64 (-.f64 z y) (*.f64 t t))) (fma.f64 -1 (/.f64 x (*.f64 t (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) (/.f64 x (pow.f64 t 3))))))","(-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t)) (/.f64 x (*.f64 t (-.f64 z y))))) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 z (/.f64 (-.f64 z y) z))))","(-.f64 (*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 z (*.f64 t t)))) (*.f64 (/.f64 x (-.f64 z y)) (/.f64 (*.f64 z z) (pow.f64 t 3))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z y) (pow.f64 t 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3)))))))","(fma.f64 -1 (/.f64 (*.f64 x z) (*.f64 (-.f64 z y) (*.f64 t t))) (fma.f64 -1 (*.f64 (/.f64 (pow.f64 z 3) (-.f64 z y)) (/.f64 x (pow.f64 t 4))) (fma.f64 -1 (/.f64 x (*.f64 t (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) (/.f64 x (pow.f64 t 3)))))))","(-.f64 (-.f64 (-.f64 (*.f64 (/.f64 (pow.f64 z 3) (-.f64 z y)) (neg.f64 (/.f64 x (pow.f64 t 4)))) (/.f64 x (*.f64 t (-.f64 z y)))) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 z (/.f64 (-.f64 z y) z)))) (*.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t))))","(-.f64 (*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 (*.f64 z z) (pow.f64 t 3)))) (*.f64 (/.f64 x (-.f64 z y)) (+.f64 (/.f64 z (*.f64 t t)) (/.f64 (pow.f64 z 3) (pow.f64 t 4)))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t)))","(neg.f64 (/.f64 x (*.f64 t (-.f64 z y))))","(/.f64 (/.f64 (neg.f64 x) (-.f64 z y)) t)","(/.f64 (neg.f64 x) (*.f64 t (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))))","(*.f64 -1 (+.f64 (/.f64 (*.f64 x z) (*.f64 (-.f64 z y) (*.f64 t t))) (/.f64 x (*.f64 t (-.f64 z y)))))","(neg.f64 (fma.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t)) (/.f64 x (*.f64 t (-.f64 z y)))))","(*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 z (*.f64 t t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3))))))","(fma.f64 -1 (/.f64 (*.f64 x z) (*.f64 (-.f64 z y) (*.f64 t t))) (fma.f64 -1 (/.f64 x (*.f64 t (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) (/.f64 x (pow.f64 t 3))))))","(-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t)) (/.f64 x (*.f64 t (-.f64 z y))))) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 z (/.f64 (-.f64 z y) z))))","(-.f64 (*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 z (*.f64 t t)))) (*.f64 (/.f64 x (-.f64 z y)) (/.f64 (*.f64 z z) (pow.f64 t 3))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z y) (pow.f64 t 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3)))))))","(fma.f64 -1 (/.f64 (*.f64 x z) (*.f64 (-.f64 z y) (*.f64 t t))) (fma.f64 -1 (*.f64 (/.f64 (pow.f64 z 3) (-.f64 z y)) (/.f64 x (pow.f64 t 4))) (fma.f64 -1 (/.f64 x (*.f64 t (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) (/.f64 x (pow.f64 t 3)))))))","(-.f64 (-.f64 (-.f64 (*.f64 (/.f64 (pow.f64 z 3) (-.f64 z y)) (neg.f64 (/.f64 x (pow.f64 t 4)))) (/.f64 x (*.f64 t (-.f64 z y)))) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 z (/.f64 (-.f64 z y) z)))) (*.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t))))","(-.f64 (*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 (*.f64 z z) (pow.f64 t 3)))) (*.f64 (/.f64 x (-.f64 z y)) (+.f64 (/.f64 z (*.f64 t t)) (/.f64 (pow.f64 z 3) (pow.f64 t 4)))))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(/.f64 (neg.f64 x) y)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(*.f64 -1 (+.f64 (/.f64 z (/.f64 (*.f64 y y) x)) (/.f64 x y)))","(-.f64 (/.f64 (neg.f64 x) y) (*.f64 (/.f64 z (*.f64 y y)) x))","(*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (/.f64 x y))))","(-.f64 (-.f64 (/.f64 (neg.f64 x) y) (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x))) (*.f64 (/.f64 z (*.f64 y y)) x))","(-.f64 (*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y))) (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (fma.f64 -1 (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 4) x)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 x) y) (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x))) (*.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) x)) (*.f64 (/.f64 z (*.f64 y y)) x))","(+.f64 (neg.f64 (*.f64 x (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (/.f64 (*.f64 z z) (pow.f64 y 3))))) (*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 x z) (/.f64 y (/.f64 (*.f64 z z) x)))","(+.f64 (/.f64 x z) (/.f64 y (/.f64 z (/.f64 x z))))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))))","(+.f64 (/.f64 x z) (+.f64 (/.f64 y (/.f64 z (/.f64 x z))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) x)))","(+.f64 (/.f64 x z) (*.f64 x (+.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (/.f64 y (*.f64 z z)))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (+.f64 (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 y (/.f64 z (/.f64 x z))) (+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) x) (+.f64 (/.f64 x z) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) x))))","(+.f64 (*.f64 x (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (/.f64 (*.f64 y y) (pow.f64 z 3)))) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z)))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 x z) (/.f64 y (/.f64 (*.f64 z z) x)))","(+.f64 (/.f64 x z) (/.f64 y (/.f64 z (/.f64 x z))))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))))","(+.f64 (/.f64 x z) (+.f64 (/.f64 y (/.f64 z (/.f64 x z))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) x)))","(+.f64 (/.f64 x z) (*.f64 x (+.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (/.f64 y (*.f64 z z)))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (+.f64 (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 y (/.f64 z (/.f64 x z))) (+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) x) (+.f64 (/.f64 x z) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) x))))","(+.f64 (*.f64 x (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (/.f64 (*.f64 y y) (pow.f64 z 3)))) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z)))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 x z) (/.f64 y (/.f64 (*.f64 z z) x)))","(+.f64 (/.f64 x z) (/.f64 y (/.f64 z (/.f64 x z))))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))))","(+.f64 (/.f64 x z) (+.f64 (/.f64 y (/.f64 z (/.f64 x z))) (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) x)))","(+.f64 (/.f64 x z) (*.f64 x (+.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (/.f64 y (*.f64 z z)))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (+.f64 (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 y (/.f64 z (/.f64 x z))) (+.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) x) (+.f64 (/.f64 x z) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) x))))","(+.f64 (*.f64 x (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (/.f64 (*.f64 y y) (pow.f64 z 3)))) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z)))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(/.f64 (neg.f64 x) y)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(*.f64 -1 (+.f64 (/.f64 z (/.f64 (*.f64 y y) x)) (/.f64 x y)))","(-.f64 (/.f64 (neg.f64 x) y) (*.f64 (/.f64 z (*.f64 y y)) x))","(*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (/.f64 x y))))","(-.f64 (-.f64 (/.f64 (neg.f64 x) y) (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x))) (*.f64 (/.f64 z (*.f64 y y)) x))","(-.f64 (*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y))) (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (fma.f64 -1 (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 4) x)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 x) y) (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x))) (*.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) x)) (*.f64 (/.f64 z (*.f64 y y)) x))","(+.f64 (neg.f64 (*.f64 x (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (/.f64 (*.f64 z z) (pow.f64 y 3))))) (*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y))))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(/.f64 (neg.f64 x) y)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(*.f64 -1 (+.f64 (/.f64 z (/.f64 (*.f64 y y) x)) (/.f64 x y)))","(-.f64 (/.f64 (neg.f64 x) y) (*.f64 (/.f64 z (*.f64 y y)) x))","(*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (/.f64 x y))))","(-.f64 (-.f64 (/.f64 (neg.f64 x) y) (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x))) (*.f64 (/.f64 z (*.f64 y y)) x))","(-.f64 (*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y))) (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (fma.f64 -1 (/.f64 (pow.f64 z 3) (/.f64 (pow.f64 y 4) x)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 x) y) (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x))) (*.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) x)) (*.f64 (/.f64 z (*.f64 y y)) x))","(+.f64 (neg.f64 (*.f64 x (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (/.f64 (*.f64 z z) (pow.f64 y 3))))) (*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y))))"]],"stop":[["node limit",1]],"time":46.23291015625,"type":"simplify"},{"compiler":[[3395,1322]],"time":26.529052734375,"type":"eval"},{"alts":[["(/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (-.f64 z t))","fresh",2.2208930690948714],["(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","done",2.1756393093264297],["(*.f64 (/.f64 x (-.f64 z y)) (/.f64 1 (-.f64 z t)))","next",2.2107955593264297],["(pow.f64 (/.f64 (*.f64 (-.f64 z y) (-.f64 z t)) x) -1)","fresh",10.45440506950284],["(pow.f64 (*.f64 (/.f64 (-.f64 z y) x) (-.f64 z t)) -1)","fresh",2.634456562380861],["(*.f64 (/.f64 x 1) (/.f64 (/.f64 1 (-.f64 z y)) (-.f64 z t)))","fresh",9.963393342893895],["(*.f64 (/.f64 (sqrt.f64 x) (-.f64 z t)) (/.f64 (sqrt.f64 x) (-.f64 z y)))","fresh",31.233652875637723]],"compiler":[[15,10],[13,8],[15,10],[15,10],[15,10],[17,12],[17,10],[15,10],[15,10],[15,10],[15,10],[17,12],[17,10]],"count":[[158,7]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[156,6],"picked":[1,1]}],"min-error":[0],"time":38.2939453125,"type":"prune"},{"compiler":[[36,13]],"locations":[["(/.f64 x (-.f64 z y))",0.00390625,false],["(/.f64 1 (-.f64 z t))",0.01953125,true],["(*.f64 (/.f64 x (-.f64 z y)) (/.f64 1 (-.f64 z t)))",2.1520040991999285,true]],"time":6.910888671875,"type":"localize"},{"count":[[2,72]],"series":[["(/.f64 1 (-.f64 z t))","t","-inf",0.237060546875],["(/.f64 1 (-.f64 z t))","t","inf",0.214111328125],["(/.f64 1 (-.f64 z t))","t","0",0.2509765625],["(/.f64 1 (-.f64 z t))","z","-inf",0.213134765625],["(/.f64 1 (-.f64 z t))","z","inf",0.291015625],["(/.f64 1 (-.f64 z t))","z","0",0.302978515625],["(*.f64 (/.f64 x (-.f64 z y)) (/.f64 1 (-.f64 z t)))","t","-inf",0.9111328125],["(*.f64 (/.f64 x (-.f64 z y)) (/.f64 1 (-.f64 z t)))","t","inf",0.247802734375],["(*.f64 (/.f64 x (-.f64 z y)) (/.f64 1 (-.f64 z t)))","t","0",0.205078125],["(*.f64 (/.f64 x (-.f64 z y)) (/.f64 1 (-.f64 z t)))","y","-inf",0.2490234375],["(*.f64 (/.f64 x (-.f64 z y)) (/.f64 1 (-.f64 z t)))","y","inf",0.219970703125],["(*.f64 (/.f64 x (-.f64 z y)) (/.f64 1 (-.f64 z t)))","y","0",0.236083984375],["(*.f64 (/.f64 x (-.f64 z y)) (/.f64 1 (-.f64 z t)))","z","-inf",0.239990234375],["(*.f64 (/.f64 x (-.f64 z y)) (/.f64 1 (-.f64 z t)))","z","inf",0.291015625],["(*.f64 (/.f64 x (-.f64 z y)) (/.f64 1 (-.f64 z t)))","z","0",0.299072265625],["(*.f64 (/.f64 x (-.f64 z y)) (/.f64 1 (-.f64 z t)))","x","-inf",0.192138671875],["(*.f64 (/.f64 x (-.f64 z y)) (/.f64 1 (-.f64 z t)))","x","inf",0.169921875],["(*.f64 (/.f64 x (-.f64 z y)) (/.f64 1 (-.f64 z t)))","x","0",0.235107421875]],"time":5.274169921875,"type":"series"},{"count":[[2,82]],"egraph":[[2,3827,20,0.029392917],[1,251,20,0.00483575],[0,11,20,0.000282917]],"inputs":[["(*.f64 (/.f64 x (-.f64 z y)) (/.f64 1 (-.f64 z t)))","(/.f64 1 (-.f64 z t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t)))) (cbrt.f64 (exp.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 (-.f64 z t) (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 (*.f64 (-.f64 z y) (-.f64 z t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 (-.f64 z y) (/.f64 1 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (-.f64 z y) x) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (-.f64 z t) (/.f64 (-.f64 z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 z t) (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (-.f64 z y) (-.f64 z t)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 z y) (/.f64 x (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 z t)) (/.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (/.f64 (-.f64 z t) (cbrt.f64 (/.f64 x (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (/.f64 (-.f64 z t) (sqrt.f64 (/.f64 x (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (/.f64 (-.f64 z y) x) (neg.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (neg.f64 (-.f64 z t)) (/.f64 (-.f64 z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (*.f64 (-.f64 z y) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (*.f64 (neg.f64 (-.f64 z t)) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (*.f64 (-.f64 z t) (neg.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 z t)) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (-.f64 z y))) (neg.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (-.f64 z t))) (neg.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) 1) (*.f64 (neg.f64 (-.f64 z y)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x -1) (*.f64 (-.f64 z y) (neg.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) -1) (*.f64 (neg.f64 (-.f64 z y)) (neg.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (neg.f64 x)) (*.f64 (neg.f64 (-.f64 z t)) (neg.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 z y)) (sqrt.f64 (-.f64 z t))) (sqrt.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 z y)) 1) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 z y)) (pow.f64 (cbrt.f64 (-.f64 z t)) 2)) (cbrt.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 z t)) 1) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 z t)) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 z t)) (sqrt.f64 (-.f64 z y))) (sqrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (/.f64 1 (-.f64 z t))) (neg.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 x (-.f64 z y))) (neg.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (-.f64 z y)) -1) (neg.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 1 (-.f64 z t)) (neg.f64 x)) (neg.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 x (-.f64 z y)) 3) (pow.f64 (-.f64 z t) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 x (-.f64 z y)) 3) (pow.f64 (/.f64 1 (-.f64 z t)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 z t)) 3) (pow.f64 (/.f64 x (-.f64 z y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 1 (-.f64 z t)))) (cbrt.f64 (exp.f64 (/.f64 1 (-.f64 z t)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 1 (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (-.f64 z t))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (-.f64 z t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (-.f64 z t))) (cbrt.f64 (pow.f64 (-.f64 z t) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 z t) -2)) (/.f64 1 (cbrt.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 z t) -1/2) (pow.f64 (-.f64 z t) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (neg.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (-.f64 z t)) 2) -1) (pow.f64 (cbrt.f64 (-.f64 z t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (-.f64 z t)) -1) (pow.f64 (sqrt.f64 (-.f64 z t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (pow.f64 z 3) (pow.f64 t 3))) (fma.f64 z z (*.f64 t (+.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 z z (neg.f64 (*.f64 t t)))) (+.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 z t) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 1 (-.f64 z t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (-.f64 z t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 z t) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 z t) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 1 (-.f64 z t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 z t)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (-.f64 z t))) 1))))))"]],"rules":[["egg-rr",28],["egg-rr",54]],"stop":[["node limit",1]],"time":51.178955078125,"type":"rewrite"},{"count":[[154,149]],"egraph":[[2,3041,1975,0.017912541],[1,685,2234,0.005153958],[0,192,2375,0.000939916]],"inputs":[["(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 y t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (/.f64 x (*.f64 y t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (pow.f64 z 2))) (/.f64 x (*.f64 y t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (pow.f64 z 2))) (+.f64 (/.f64 x (*.f64 y t)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2))))) (*.f64 y t)))) (pow.f64 z 3))))))","(/.f64 x (pow.f64 z 2))","(+.f64 (/.f64 x (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4)))))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))))) (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 t x))))) (pow.f64 z 5))))))","(/.f64 x (pow.f64 z 2))","(+.f64 (/.f64 x (pow.f64 z 2)) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3))))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (+.f64 y t)) (pow.f64 z 5))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 t (*.f64 (+.f64 y t) x))) (pow.f64 z 5))) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3))))))","(/.f64 x (*.f64 (-.f64 z t) z))","(+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (-.f64 z t) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (-.f64 z t) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (+.f64 (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2))) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (-.f64 z t) (pow.f64 z 4))))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z t) (pow.f64 y 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3)))))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z t) (pow.f64 y 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3)))))))","(/.f64 x (*.f64 (-.f64 z y) z))","(+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (-.f64 z y) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (-.f64 z y) (pow.f64 z 3))) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (-.f64 z y) (pow.f64 z 4))) (+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2))))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z y) (pow.f64 t 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3)))))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z y) (pow.f64 t 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3)))))))","(/.f64 -1 t)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 t 2))) (/.f64 1 t))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (*.f64 -1 (/.f64 z (pow.f64 t 2)))) (/.f64 1 t))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (*.f64 -1 (/.f64 z (pow.f64 t 2))))) (/.f64 1 t))","(/.f64 1 z)","(+.f64 (/.f64 t (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 (pow.f64 t 2) (pow.f64 z 3)) (+.f64 (/.f64 t (pow.f64 z 2)) (/.f64 1 z)))","(+.f64 (/.f64 (pow.f64 t 2) (pow.f64 z 3)) (+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (/.f64 1 z))))","(/.f64 1 z)","(+.f64 (/.f64 t (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 (pow.f64 t 2) (pow.f64 z 3)) (+.f64 (/.f64 t (pow.f64 z 2)) (/.f64 1 z)))","(+.f64 (/.f64 (pow.f64 t 2) (pow.f64 z 3)) (+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (/.f64 1 z))))","(/.f64 1 z)","(+.f64 (/.f64 t (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 (pow.f64 t 2) (pow.f64 z 3)) (+.f64 (/.f64 t (pow.f64 z 2)) (/.f64 1 z)))","(+.f64 (/.f64 (pow.f64 t 2) (pow.f64 z 3)) (+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (/.f64 1 z))))","(/.f64 -1 t)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 t 2))) (/.f64 1 t))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (*.f64 -1 (/.f64 z (pow.f64 t 2)))) (/.f64 1 t))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (*.f64 -1 (/.f64 z (pow.f64 t 2))))) (/.f64 1 t))","(/.f64 -1 t)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 t 2))) (/.f64 1 t))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (*.f64 -1 (/.f64 z (pow.f64 t 2)))) (/.f64 1 t))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (*.f64 -1 (/.f64 z (pow.f64 t 2))))) (/.f64 1 t))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z t)) (-.f64 z y))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z t)) (-.f64 z y))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z t)) (-.f64 z y))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z t)) (-.f64 z y))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z t)) (-.f64 z y))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z t)) (-.f64 z y))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z t)) (-.f64 z y))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z t)) (-.f64 z y))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z t)) (-.f64 z y))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z t)) (-.f64 z y))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z t)) (-.f64 z y))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z t)) (-.f64 z y))","(/.f64 x (*.f64 y t))","(/.f64 (/.f64 x y) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (/.f64 x (*.f64 y t)))","(fma.f64 -1 (*.f64 (/.f64 (*.f64 -1 (+.f64 t y)) (*.f64 y y)) (/.f64 (*.f64 x z) (*.f64 t t))) (/.f64 (/.f64 x y) t))","(-.f64 (/.f64 (/.f64 x y) t) (*.f64 (/.f64 (*.f64 x z) (*.f64 y y)) (/.f64 (-.f64 (neg.f64 y) t) (*.f64 t t))))","(+.f64 (/.f64 (/.f64 x y) t) (*.f64 (/.f64 (+.f64 t y) (/.f64 (*.f64 t (*.f64 t (*.f64 y y))) x)) z))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (pow.f64 z 2))) (/.f64 x (*.f64 y t))))","(fma.f64 -1 (*.f64 (/.f64 (*.f64 -1 (+.f64 t y)) (*.f64 y y)) (/.f64 (*.f64 x z) (*.f64 t t))) (fma.f64 -1 (*.f64 (fma.f64 -1 (*.f64 (/.f64 (pow.f64 (*.f64 -1 (+.f64 t y)) 2) (pow.f64 y 3)) (/.f64 x (pow.f64 t 3))) (/.f64 x (*.f64 (*.f64 y y) (*.f64 t t)))) (*.f64 z z)) (/.f64 (/.f64 x y) t)))","(-.f64 (fma.f64 (neg.f64 (-.f64 (/.f64 x (*.f64 t (*.f64 t (*.f64 y y)))) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (-.f64 (neg.f64 y) t) 2) (pow.f64 y 3))))) (*.f64 z z) (/.f64 (/.f64 x y) t)) (*.f64 (/.f64 (*.f64 x z) (*.f64 y y)) (/.f64 (-.f64 (neg.f64 y) t) (*.f64 t t))))","(+.f64 (*.f64 (/.f64 (+.f64 t y) (/.f64 (*.f64 t (*.f64 t (*.f64 y y))) x)) z) (fma.f64 (+.f64 (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (+.f64 t y) 2) (pow.f64 y 3))) (/.f64 (neg.f64 x) (*.f64 t (*.f64 t (*.f64 y y))))) (*.f64 z z) (/.f64 (/.f64 x y) t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (pow.f64 z 2))) (+.f64 (/.f64 x (*.f64 y t)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2))))) (*.f64 y t)))) (pow.f64 z 3))))))","(fma.f64 -1 (*.f64 (/.f64 (*.f64 -1 (+.f64 t y)) (*.f64 y y)) (/.f64 (*.f64 x z) (*.f64 t t))) (+.f64 (fma.f64 -1 (*.f64 (fma.f64 -1 (*.f64 (/.f64 (pow.f64 (*.f64 -1 (+.f64 t y)) 2) (pow.f64 y 3)) (/.f64 x (pow.f64 t 3))) (/.f64 x (*.f64 (*.f64 y y) (*.f64 t t)))) (*.f64 z z)) (/.f64 (/.f64 x y) t)) (neg.f64 (*.f64 (*.f64 -1 (+.f64 (*.f64 (/.f64 (*.f64 -1 (+.f64 t y)) (pow.f64 y 3)) (/.f64 x (pow.f64 t 3))) (*.f64 (/.f64 (*.f64 -1 (+.f64 t y)) y) (/.f64 (fma.f64 -1 (*.f64 (/.f64 (pow.f64 (*.f64 -1 (+.f64 t y)) 2) (pow.f64 y 3)) (/.f64 x (pow.f64 t 3))) (/.f64 x (*.f64 (*.f64 y y) (*.f64 t t)))) t)))) (pow.f64 z 3)))))","(-.f64 (-.f64 (fma.f64 (*.f64 1 (fma.f64 (/.f64 (-.f64 (neg.f64 y) t) (pow.f64 y 3)) (/.f64 x (pow.f64 t 3)) (*.f64 (/.f64 (-.f64 (neg.f64 y) t) (*.f64 t y)) (-.f64 (/.f64 x (*.f64 t (*.f64 t (*.f64 y y)))) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (-.f64 (neg.f64 y) t) 2) (pow.f64 y 3))))))) (pow.f64 z 3) (/.f64 (/.f64 x y) t)) (*.f64 (-.f64 (/.f64 x (*.f64 t (*.f64 t (*.f64 y y)))) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (-.f64 (neg.f64 y) t) 2) (pow.f64 y 3)))) (*.f64 z z))) (*.f64 (/.f64 (*.f64 x z) (*.f64 y y)) (/.f64 (-.f64 (neg.f64 y) t) (*.f64 t t))))","(+.f64 (-.f64 (/.f64 (/.f64 x y) t) (*.f64 (fma.f64 (/.f64 (+.f64 t y) y) (/.f64 (-.f64 (/.f64 x (*.f64 t (*.f64 t (*.f64 y y)))) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (+.f64 t y) 2) (pow.f64 y 3)))) t) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (+.f64 t y) (pow.f64 y 3)))) (pow.f64 z 3))) (-.f64 (*.f64 (/.f64 (+.f64 t y) (/.f64 (*.f64 t (*.f64 t (*.f64 y y))) x)) z) (*.f64 (-.f64 (/.f64 x (*.f64 t (*.f64 t (*.f64 y y)))) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (+.f64 t y) 2) (pow.f64 y 3)))) (*.f64 z z))))","(/.f64 x (pow.f64 z 2))","(/.f64 x (*.f64 z z))","(/.f64 (/.f64 x z) z)","(+.f64 (/.f64 x (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))))","(+.f64 (/.f64 x (*.f64 z z)) (neg.f64 (/.f64 (*.f64 x (*.f64 -1 (+.f64 t y))) (pow.f64 z 3))))","(-.f64 (/.f64 (/.f64 x z) z) (*.f64 (/.f64 (-.f64 (neg.f64 y) t) (pow.f64 z 3)) x))","(*.f64 (+.f64 (/.f64 (+.f64 t y) z) 1) (/.f64 x (*.f64 z z)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4)))))","(+.f64 (/.f64 x (*.f64 z z)) (*.f64 -1 (+.f64 (/.f64 (*.f64 x (*.f64 -1 (+.f64 t y))) (pow.f64 z 3)) (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (*.f64 -1 (+.f64 t y)) 2)) (*.f64 y (*.f64 x t))) (pow.f64 z 4)))))","(-.f64 (-.f64 (/.f64 (/.f64 x z) z) (*.f64 (/.f64 (-.f64 (neg.f64 y) t) (pow.f64 z 3)) x)) (/.f64 (*.f64 x (+.f64 (neg.f64 (pow.f64 (-.f64 (neg.f64 y) t) 2)) (*.f64 t y))) (pow.f64 z 4)))","(-.f64 (*.f64 (+.f64 (/.f64 (+.f64 t y) z) 1) (/.f64 x (*.f64 z z))) (/.f64 (*.f64 x (-.f64 (*.f64 t y) (pow.f64 (+.f64 t y) 2))) (pow.f64 z 4)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))))) (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 t x))))) (pow.f64 z 5))))))","(+.f64 (/.f64 x (*.f64 z z)) (fma.f64 -1 (/.f64 (*.f64 x (*.f64 -1 (+.f64 t y))) (pow.f64 z 3)) (*.f64 -1 (+.f64 (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (*.f64 -1 (+.f64 t y)) 2)) (*.f64 y (*.f64 x t))) (pow.f64 z 4)) (/.f64 (fma.f64 -1 (*.f64 (*.f64 -1 (+.f64 t y)) (fma.f64 -1 (*.f64 x (pow.f64 (*.f64 -1 (+.f64 t y)) 2)) (*.f64 y (*.f64 x t)))) (*.f64 (neg.f64 y) (*.f64 (*.f64 -1 (+.f64 t y)) (*.f64 x t)))) (pow.f64 z 5))))))","(+.f64 (/.f64 (/.f64 x z) z) (-.f64 (-.f64 (/.f64 (*.f64 1 (fma.f64 (-.f64 (neg.f64 y) t) (*.f64 x (+.f64 (neg.f64 (pow.f64 (-.f64 (neg.f64 y) t) 2)) (*.f64 t y))) (*.f64 y (*.f64 t (*.f64 x (-.f64 (neg.f64 y) t)))))) (pow.f64 z 5)) (/.f64 (*.f64 x (+.f64 (neg.f64 (pow.f64 (-.f64 (neg.f64 y) t) 2)) (*.f64 t y))) (pow.f64 z 4))) (*.f64 (/.f64 (-.f64 (neg.f64 y) t) (pow.f64 z 3)) x)))","(+.f64 (*.f64 (+.f64 (/.f64 (+.f64 t y) z) 1) (/.f64 x (*.f64 z z))) (-.f64 (/.f64 (*.f64 (-.f64 (neg.f64 y) t) (+.f64 (*.f64 x (-.f64 (*.f64 t y) (pow.f64 (+.f64 t y) 2))) (*.f64 t (*.f64 x y)))) (pow.f64 z 5)) (/.f64 (*.f64 x (-.f64 (*.f64 t y) (pow.f64 (+.f64 t y) 2))) (pow.f64 z 4))))","(/.f64 x (pow.f64 z 2))","(/.f64 x (*.f64 z z))","(/.f64 (/.f64 x z) z)","(+.f64 (/.f64 x (pow.f64 z 2)) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3)))","(+.f64 (/.f64 x (*.f64 z z)) (neg.f64 (/.f64 (*.f64 x (*.f64 -1 (+.f64 t y))) (pow.f64 z 3))))","(-.f64 (/.f64 (/.f64 x z) z) (*.f64 (/.f64 (-.f64 (neg.f64 y) t) (pow.f64 z 3)) x))","(*.f64 (+.f64 (/.f64 (+.f64 t y) z) 1) (/.f64 x (*.f64 z z)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3))))","(+.f64 (/.f64 x (*.f64 z z)) (*.f64 -1 (+.f64 (/.f64 (*.f64 x (*.f64 -1 (+.f64 t y))) (pow.f64 z 3)) (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (*.f64 -1 (+.f64 t y)) 2)) (*.f64 y (*.f64 x t))) (pow.f64 z 4)))))","(-.f64 (-.f64 (/.f64 (/.f64 x z) z) (*.f64 (/.f64 (-.f64 (neg.f64 y) t) (pow.f64 z 3)) x)) (/.f64 (*.f64 x (+.f64 (neg.f64 (pow.f64 (-.f64 (neg.f64 y) t) 2)) (*.f64 t y))) (pow.f64 z 4)))","(-.f64 (*.f64 (+.f64 (/.f64 (+.f64 t y) z) 1) (/.f64 x (*.f64 z z))) (/.f64 (*.f64 x (-.f64 (*.f64 t y) (pow.f64 (+.f64 t y) 2))) (pow.f64 z 4)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (+.f64 y t)) (pow.f64 z 5))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 t (*.f64 (+.f64 y t) x))) (pow.f64 z 5))) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3))))))","(+.f64 (/.f64 x (*.f64 z z)) (fma.f64 -1 (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (+.f64 t y) 2)) (*.f64 y (*.f64 x t))) (/.f64 (pow.f64 z 5) (+.f64 t y))) (fma.f64 -1 (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (+.f64 t y) 2)) (*.f64 y (*.f64 x t))) (pow.f64 z 4)) (fma.f64 -1 (/.f64 y (/.f64 (pow.f64 z 5) (*.f64 t (*.f64 x (+.f64 t y))))) (/.f64 (*.f64 x (+.f64 t y)) (pow.f64 z 3))))))","(+.f64 (/.f64 (/.f64 x z) z) (-.f64 (-.f64 (-.f64 (*.f64 (/.f64 (+.f64 t y) (pow.f64 z 3)) x) (*.f64 (/.f64 y (pow.f64 z 5)) (*.f64 x (*.f64 t (+.f64 t y))))) (/.f64 (*.f64 x (+.f64 (*.f64 t y) (neg.f64 (pow.f64 (+.f64 t y) 2)))) (pow.f64 z 4))) (*.f64 (/.f64 (*.f64 x (+.f64 (*.f64 t y) (neg.f64 (pow.f64 (+.f64 t y) 2)))) (pow.f64 z 5)) (+.f64 t y))))","(+.f64 (/.f64 x (*.f64 z z)) (-.f64 (-.f64 (*.f64 (/.f64 x (pow.f64 z 3)) (+.f64 t y)) (*.f64 (/.f64 y (pow.f64 z 5)) (*.f64 x (*.f64 t (+.f64 t y))))) (+.f64 (*.f64 (/.f64 (+.f64 t y) (pow.f64 z 5)) (*.f64 x (-.f64 (*.f64 t y) (pow.f64 (+.f64 t y) 2)))) (/.f64 (*.f64 x (-.f64 (*.f64 t y) (pow.f64 (+.f64 t y) 2))) (pow.f64 z 4)))))","(/.f64 x (*.f64 (-.f64 z t) z))","(/.f64 x (*.f64 z (-.f64 z t)))","(/.f64 (/.f64 x (-.f64 z t)) z)","(+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2))))","(+.f64 (/.f64 x (*.f64 z (-.f64 z t))) (*.f64 (/.f64 y (-.f64 z t)) (/.f64 x (*.f64 z z))))","(fma.f64 (/.f64 y (-.f64 z t)) (/.f64 (/.f64 x z) z) (/.f64 x (*.f64 z (-.f64 z t))))","(fma.f64 (/.f64 y (-.f64 z t)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x (-.f64 z t)) z))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (-.f64 z t) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2)))))","(+.f64 (+.f64 (/.f64 x (*.f64 z (-.f64 z t))) (*.f64 (/.f64 y (-.f64 z t)) (/.f64 x (*.f64 z z)))) (*.f64 (/.f64 (*.f64 y y) (-.f64 z t)) (/.f64 x (pow.f64 z 3))))","(fma.f64 (/.f64 (*.f64 y y) (-.f64 z t)) (/.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 y (-.f64 z t)) (/.f64 (/.f64 x z) z) (/.f64 x (*.f64 z (-.f64 z t)))))","(+.f64 (/.f64 (/.f64 x (-.f64 z t)) z) (*.f64 (/.f64 x (-.f64 z t)) (+.f64 (/.f64 y (*.f64 z z)) (/.f64 (*.f64 y y) (pow.f64 z 3)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (-.f64 z t) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (+.f64 (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2))) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (-.f64 z t) (pow.f64 z 4))))))","(+.f64 (*.f64 (/.f64 (*.f64 y y) (-.f64 z t)) (/.f64 x (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 z (-.f64 z t))) (+.f64 (*.f64 (/.f64 y (-.f64 z t)) (/.f64 x (*.f64 z z))) (*.f64 (/.f64 (pow.f64 y 3) (-.f64 z t)) (/.f64 x (pow.f64 z 4))))))","(+.f64 (fma.f64 (/.f64 y (-.f64 z t)) (/.f64 (/.f64 x z) z) (*.f64 (/.f64 (pow.f64 y 3) (-.f64 z t)) (/.f64 x (pow.f64 z 4)))) (fma.f64 (/.f64 (*.f64 y y) (-.f64 z t)) (/.f64 x (pow.f64 z 3)) (/.f64 x (*.f64 z (-.f64 z t)))))","(+.f64 (fma.f64 (/.f64 y (-.f64 z t)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x (-.f64 z t)) z)) (*.f64 (/.f64 x (-.f64 z t)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (/.f64 (*.f64 y y) (pow.f64 z 3)))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)))","(neg.f64 (/.f64 x (*.f64 (-.f64 z t) y)))","(/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t))","(/.f64 (neg.f64 x) (*.f64 (-.f64 z t) y))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))))","(*.f64 -1 (+.f64 (/.f64 x (*.f64 (-.f64 z t) y)) (*.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)))))","(-.f64 (/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t)) (/.f64 (/.f64 (*.f64 x z) (*.f64 y y)) (-.f64 z t)))","(*.f64 (/.f64 x (-.f64 z t)) (-.f64 (/.f64 -1 y) (/.f64 z (*.f64 y y))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3))))))","(fma.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)) (fma.f64 -1 (*.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y))) (neg.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z t)) (/.f64 x (pow.f64 y 3))))))","(-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)) (*.f64 (/.f64 (*.f64 z z) (-.f64 z t)) (/.f64 x (pow.f64 y 3))))) (/.f64 (/.f64 x y) (-.f64 z t)))","(-.f64 (/.f64 (neg.f64 x) (*.f64 (-.f64 z t) y)) (*.f64 (/.f64 x (-.f64 z t)) (+.f64 (/.f64 z (*.f64 y y)) (/.f64 (*.f64 z z) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z t) (pow.f64 y 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3)))))))","(fma.f64 -1 (*.f64 (/.f64 (pow.f64 z 3) (-.f64 z t)) (/.f64 x (pow.f64 y 4))) (fma.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)) (fma.f64 -1 (*.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y))) (neg.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z t)) (/.f64 x (pow.f64 y 3)))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)) (*.f64 (/.f64 (*.f64 z z) (-.f64 z t)) (/.f64 x (pow.f64 y 3))))) (/.f64 (/.f64 x y) (-.f64 z t))) (*.f64 (/.f64 (pow.f64 z 3) (-.f64 z t)) (/.f64 x (pow.f64 y 4))))","(-.f64 (*.f64 (/.f64 -1 (-.f64 z t)) (+.f64 (/.f64 x y) (/.f64 (*.f64 x (pow.f64 z 3)) (pow.f64 y 4)))) (*.f64 (/.f64 x (-.f64 z t)) (+.f64 (/.f64 z (*.f64 y y)) (/.f64 (*.f64 z z) (pow.f64 y 3)))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)))","(neg.f64 (/.f64 x (*.f64 (-.f64 z t) y)))","(/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t))","(/.f64 (neg.f64 x) (*.f64 (-.f64 z t) y))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))))","(*.f64 -1 (+.f64 (/.f64 x (*.f64 (-.f64 z t) y)) (*.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)))))","(-.f64 (/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t)) (/.f64 (/.f64 (*.f64 x z) (*.f64 y y)) (-.f64 z t)))","(*.f64 (/.f64 x (-.f64 z t)) (-.f64 (/.f64 -1 y) (/.f64 z (*.f64 y y))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3))))))","(fma.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)) (fma.f64 -1 (*.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y))) (neg.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z t)) (/.f64 x (pow.f64 y 3))))))","(-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)) (*.f64 (/.f64 (*.f64 z z) (-.f64 z t)) (/.f64 x (pow.f64 y 3))))) (/.f64 (/.f64 x y) (-.f64 z t)))","(-.f64 (/.f64 (neg.f64 x) (*.f64 (-.f64 z t) y)) (*.f64 (/.f64 x (-.f64 z t)) (+.f64 (/.f64 z (*.f64 y y)) (/.f64 (*.f64 z z) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z t) (pow.f64 y 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3)))))))","(fma.f64 -1 (*.f64 (/.f64 (pow.f64 z 3) (-.f64 z t)) (/.f64 x (pow.f64 y 4))) (fma.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)) (fma.f64 -1 (*.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y))) (neg.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z t)) (/.f64 x (pow.f64 y 3)))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)) (*.f64 (/.f64 (*.f64 z z) (-.f64 z t)) (/.f64 x (pow.f64 y 3))))) (/.f64 (/.f64 x y) (-.f64 z t))) (*.f64 (/.f64 (pow.f64 z 3) (-.f64 z t)) (/.f64 x (pow.f64 y 4))))","(-.f64 (*.f64 (/.f64 -1 (-.f64 z t)) (+.f64 (/.f64 x y) (/.f64 (*.f64 x (pow.f64 z 3)) (pow.f64 y 4)))) (*.f64 (/.f64 x (-.f64 z t)) (+.f64 (/.f64 z (*.f64 y y)) (/.f64 (*.f64 z z) (pow.f64 y 3)))))","(/.f64 x (*.f64 (-.f64 z y) z))","(/.f64 x (*.f64 z (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) z)","(+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2))))","(+.f64 (/.f64 x (*.f64 z (-.f64 z y))) (*.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z))))","(fma.f64 (/.f64 t (-.f64 z y)) (/.f64 (/.f64 x z) z) (/.f64 x (*.f64 z (-.f64 z y))))","(fma.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x (-.f64 z y)) z))","(+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (-.f64 z y) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2)))))","(+.f64 (+.f64 (/.f64 x (*.f64 z (-.f64 z y))) (*.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z)))) (*.f64 (/.f64 (*.f64 t t) (-.f64 z y)) (/.f64 x (pow.f64 z 3))))","(fma.f64 (/.f64 t (/.f64 (-.f64 z y) t)) (/.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 t (-.f64 z y)) (/.f64 (/.f64 x z) z) (/.f64 x (*.f64 z (-.f64 z y)))))","(+.f64 (/.f64 (/.f64 x (-.f64 z y)) z) (*.f64 (/.f64 x (-.f64 z y)) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t (*.f64 z z)))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (-.f64 z y) (pow.f64 z 3))) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (-.f64 z y) (pow.f64 z 4))) (+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2))))))","(+.f64 (*.f64 (/.f64 (*.f64 t t) (-.f64 z y)) (/.f64 x (pow.f64 z 3))) (+.f64 (+.f64 (/.f64 x (*.f64 z (-.f64 z y))) (*.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z)))) (/.f64 (pow.f64 t 3) (/.f64 (*.f64 (-.f64 z y) (pow.f64 z 4)) x))))","(fma.f64 (/.f64 t (/.f64 (-.f64 z y) t)) (/.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 (pow.f64 t 3) (-.f64 z y)) (/.f64 x (pow.f64 z 4)) (fma.f64 (/.f64 t (-.f64 z y)) (/.f64 (/.f64 x z) z) (/.f64 x (*.f64 z (-.f64 z y))))))","(+.f64 (fma.f64 (/.f64 (pow.f64 t 3) (-.f64 z y)) (/.f64 x (pow.f64 z 4)) (/.f64 (/.f64 x (-.f64 z y)) z)) (*.f64 (/.f64 x (-.f64 z y)) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t (*.f64 z z)))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t)))","(neg.f64 (/.f64 x (*.f64 t (-.f64 z y))))","(/.f64 (neg.f64 x) (*.f64 t (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))))","(fma.f64 -1 (*.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t))) (neg.f64 (/.f64 x (*.f64 t (-.f64 z y)))))","(neg.f64 (fma.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t)) (/.f64 x (*.f64 t (-.f64 z y)))))","(*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 (/.f64 z t) t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3))))))","(fma.f64 -1 (*.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t))) (fma.f64 -1 (/.f64 x (*.f64 t (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) (/.f64 x (pow.f64 t 3))))))","(-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t)) (/.f64 x (*.f64 t (-.f64 z y))))) (/.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) x) (pow.f64 t 3)))","(-.f64 (*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 (/.f64 z t) t))) (*.f64 (*.f64 (/.f64 z (pow.f64 t 3)) z) (/.f64 x (-.f64 z y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z y) (pow.f64 t 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3)))))))","(fma.f64 -1 (*.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t))) (fma.f64 -1 (/.f64 (pow.f64 z 3) (/.f64 (*.f64 (-.f64 z y) (pow.f64 t 4)) x)) (fma.f64 -1 (/.f64 x (*.f64 t (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) (/.f64 x (pow.f64 t 3)))))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 x) (*.f64 t (-.f64 z y))) (/.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) x) (pow.f64 t 3))) (*.f64 (/.f64 (pow.f64 z 3) (pow.f64 t 4)) (/.f64 x (-.f64 z y)))) (*.f64 (/.f64 z (*.f64 t t)) (/.f64 x (-.f64 z y))))","(-.f64 (*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (*.f64 (/.f64 z (pow.f64 t 3)) z))) (*.f64 (/.f64 x (-.f64 z y)) (+.f64 (/.f64 (/.f64 z t) t) (/.f64 (pow.f64 z 3) (pow.f64 t 4)))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t)))","(neg.f64 (/.f64 x (*.f64 t (-.f64 z y))))","(/.f64 (neg.f64 x) (*.f64 t (-.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))))","(fma.f64 -1 (*.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t))) (neg.f64 (/.f64 x (*.f64 t (-.f64 z y)))))","(neg.f64 (fma.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t)) (/.f64 x (*.f64 t (-.f64 z y)))))","(*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 (/.f64 z t) t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3))))))","(fma.f64 -1 (*.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t))) (fma.f64 -1 (/.f64 x (*.f64 t (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) (/.f64 x (pow.f64 t 3))))))","(-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t)) (/.f64 x (*.f64 t (-.f64 z y))))) (/.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) x) (pow.f64 t 3)))","(-.f64 (*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 (/.f64 z t) t))) (*.f64 (*.f64 (/.f64 z (pow.f64 t 3)) z) (/.f64 x (-.f64 z y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z y) (pow.f64 t 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3)))))))","(fma.f64 -1 (*.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t))) (fma.f64 -1 (/.f64 (pow.f64 z 3) (/.f64 (*.f64 (-.f64 z y) (pow.f64 t 4)) x)) (fma.f64 -1 (/.f64 x (*.f64 t (-.f64 z y))) (neg.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) (/.f64 x (pow.f64 t 3)))))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 x) (*.f64 t (-.f64 z y))) (/.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) x) (pow.f64 t 3))) (*.f64 (/.f64 (pow.f64 z 3) (pow.f64 t 4)) (/.f64 x (-.f64 z y)))) (*.f64 (/.f64 z (*.f64 t t)) (/.f64 x (-.f64 z y))))","(-.f64 (*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (*.f64 (/.f64 z (pow.f64 t 3)) z))) (*.f64 (/.f64 x (-.f64 z y)) (+.f64 (/.f64 (/.f64 z t) t) (/.f64 (pow.f64 z 3) (pow.f64 t 4)))))","(/.f64 -1 t)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 t 2))) (/.f64 1 t))","(-.f64 (neg.f64 (/.f64 z (*.f64 t t))) (/.f64 1 t))","(fma.f64 -1 (/.f64 z (*.f64 t t)) (/.f64 -1 t))","(-.f64 (/.f64 -1 t) (/.f64 (/.f64 z t) t))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (*.f64 -1 (/.f64 z (pow.f64 t 2)))) (/.f64 1 t))","(-.f64 (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (pow.f64 t 3)) (/.f64 z (*.f64 t t)))) (/.f64 1 t))","(fma.f64 -1 (+.f64 (/.f64 z (*.f64 t t)) (/.f64 (*.f64 z z) (pow.f64 t 3))) (/.f64 -1 t))","(-.f64 (/.f64 -1 t) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (/.f64 z t) t)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (*.f64 -1 (/.f64 z (pow.f64 t 2))))) (/.f64 1 t))","(-.f64 (fma.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 t 4)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (pow.f64 t 3)) (/.f64 z (*.f64 t t))))) (/.f64 1 t))","(+.f64 (-.f64 (-.f64 (/.f64 (neg.f64 z) (*.f64 t t)) (/.f64 (*.f64 z z) (pow.f64 t 3))) (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (/.f64 -1 t))","(-.f64 (-.f64 (/.f64 -1 t) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (/.f64 z t) t))) (/.f64 (pow.f64 z 3) (pow.f64 t 4)))","(/.f64 1 z)","(+.f64 (/.f64 t (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 1 z) (/.f64 t (*.f64 z z)))","(+.f64 (/.f64 (pow.f64 t 2) (pow.f64 z 3)) (+.f64 (/.f64 t (pow.f64 z 2)) (/.f64 1 z)))","(+.f64 (+.f64 (/.f64 1 z) (/.f64 t (*.f64 z z))) (/.f64 (*.f64 t t) (pow.f64 z 3)))","(+.f64 (/.f64 1 z) (+.f64 (/.f64 t (*.f64 z z)) (/.f64 t (/.f64 (pow.f64 z 3) t))))","(+.f64 (/.f64 1 z) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t (*.f64 z z))))","(+.f64 (/.f64 (pow.f64 t 2) (pow.f64 z 3)) (+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (/.f64 1 z))))","(+.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) (+.f64 (/.f64 t (*.f64 z z)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))))","(+.f64 (/.f64 t (*.f64 z z)) (+.f64 (+.f64 (/.f64 1 z) (/.f64 (pow.f64 t 3) (pow.f64 z 4))) (/.f64 t (/.f64 (pow.f64 z 3) t))))","(+.f64 (+.f64 (/.f64 1 z) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t (*.f64 z z)))) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))","(/.f64 1 z)","(+.f64 (/.f64 t (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 1 z) (/.f64 t (*.f64 z z)))","(+.f64 (/.f64 (pow.f64 t 2) (pow.f64 z 3)) (+.f64 (/.f64 t (pow.f64 z 2)) (/.f64 1 z)))","(+.f64 (+.f64 (/.f64 1 z) (/.f64 t (*.f64 z z))) (/.f64 (*.f64 t t) (pow.f64 z 3)))","(+.f64 (/.f64 1 z) (+.f64 (/.f64 t (*.f64 z z)) (/.f64 t (/.f64 (pow.f64 z 3) t))))","(+.f64 (/.f64 1 z) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t (*.f64 z z))))","(+.f64 (/.f64 (pow.f64 t 2) (pow.f64 z 3)) (+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (/.f64 1 z))))","(+.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) (+.f64 (/.f64 t (*.f64 z z)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))))","(+.f64 (/.f64 t (*.f64 z z)) (+.f64 (+.f64 (/.f64 1 z) (/.f64 (pow.f64 t 3) (pow.f64 z 4))) (/.f64 t (/.f64 (pow.f64 z 3) t))))","(+.f64 (+.f64 (/.f64 1 z) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t (*.f64 z z)))) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))","(/.f64 1 z)","(+.f64 (/.f64 t (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 1 z) (/.f64 t (*.f64 z z)))","(+.f64 (/.f64 (pow.f64 t 2) (pow.f64 z 3)) (+.f64 (/.f64 t (pow.f64 z 2)) (/.f64 1 z)))","(+.f64 (+.f64 (/.f64 1 z) (/.f64 t (*.f64 z z))) (/.f64 (*.f64 t t) (pow.f64 z 3)))","(+.f64 (/.f64 1 z) (+.f64 (/.f64 t (*.f64 z z)) (/.f64 t (/.f64 (pow.f64 z 3) t))))","(+.f64 (/.f64 1 z) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t (*.f64 z z))))","(+.f64 (/.f64 (pow.f64 t 2) (pow.f64 z 3)) (+.f64 (/.f64 t (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 4)) (/.f64 1 z))))","(+.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) (+.f64 (/.f64 t (*.f64 z z)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))))","(+.f64 (/.f64 t (*.f64 z z)) (+.f64 (+.f64 (/.f64 1 z) (/.f64 (pow.f64 t 3) (pow.f64 z 4))) (/.f64 t (/.f64 (pow.f64 z 3) t))))","(+.f64 (+.f64 (/.f64 1 z) (*.f64 (+.f64 (/.f64 t z) 1) (/.f64 t (*.f64 z z)))) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))","(/.f64 -1 t)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 t 2))) (/.f64 1 t))","(-.f64 (neg.f64 (/.f64 z (*.f64 t t))) (/.f64 1 t))","(fma.f64 -1 (/.f64 z (*.f64 t t)) (/.f64 -1 t))","(-.f64 (/.f64 -1 t) (/.f64 (/.f64 z t) t))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (*.f64 -1 (/.f64 z (pow.f64 t 2)))) (/.f64 1 t))","(-.f64 (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (pow.f64 t 3)) (/.f64 z (*.f64 t t)))) (/.f64 1 t))","(fma.f64 -1 (+.f64 (/.f64 z (*.f64 t t)) (/.f64 (*.f64 z z) (pow.f64 t 3))) (/.f64 -1 t))","(-.f64 (/.f64 -1 t) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (/.f64 z t) t)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (*.f64 -1 (/.f64 z (pow.f64 t 2))))) (/.f64 1 t))","(-.f64 (fma.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 t 4)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (pow.f64 t 3)) (/.f64 z (*.f64 t t))))) (/.f64 1 t))","(+.f64 (-.f64 (-.f64 (/.f64 (neg.f64 z) (*.f64 t t)) (/.f64 (*.f64 z z) (pow.f64 t 3))) (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (/.f64 -1 t))","(-.f64 (-.f64 (/.f64 -1 t) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (/.f64 z t) t))) (/.f64 (pow.f64 z 3) (pow.f64 t 4)))","(/.f64 -1 t)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 t 2))) (/.f64 1 t))","(-.f64 (neg.f64 (/.f64 z (*.f64 t t))) (/.f64 1 t))","(fma.f64 -1 (/.f64 z (*.f64 t t)) (/.f64 -1 t))","(-.f64 (/.f64 -1 t) (/.f64 (/.f64 z t) t))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (*.f64 -1 (/.f64 z (pow.f64 t 2)))) (/.f64 1 t))","(-.f64 (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (pow.f64 t 3)) (/.f64 z (*.f64 t t)))) (/.f64 1 t))","(fma.f64 -1 (+.f64 (/.f64 z (*.f64 t t)) (/.f64 (*.f64 z z) (pow.f64 t 3))) (/.f64 -1 t))","(-.f64 (/.f64 -1 t) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (/.f64 z t) t)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 t 3))) (*.f64 -1 (/.f64 z (pow.f64 t 2))))) (/.f64 1 t))","(-.f64 (fma.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 t 4)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (pow.f64 t 3)) (/.f64 z (*.f64 t t))))) (/.f64 1 t))","(+.f64 (-.f64 (-.f64 (/.f64 (neg.f64 z) (*.f64 t t)) (/.f64 (*.f64 z z) (pow.f64 t 3))) (/.f64 (pow.f64 z 3) (pow.f64 t 4))) (/.f64 -1 t))","(-.f64 (-.f64 (/.f64 -1 t) (*.f64 (+.f64 (/.f64 z t) 1) (/.f64 (/.f64 z t) t))) (/.f64 (pow.f64 z 3) (pow.f64 t 4)))"]],"stop":[["node limit",1]],"time":46.387939453125,"type":"simplify"},{"compiler":[[4182,1740]],"time":32.953125,"type":"eval"},{"alts":[["(/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (-.f64 z t))","next",2.2208930690948714],["(/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))","fresh",10.389617560054827],["(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","done",2.1756393093264297],["(/.f64 1 (/.f64 (-.f64 z y) (/.f64 x (-.f64 z t))))","fresh",3.272923424258452],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) x) -1) (/.f64 1 (-.f64 z t)))","fresh",2.6175756966310564],["(*.f64 (/.f64 x 1) (/.f64 (/.f64 1 (-.f64 z y)) (-.f64 z t)))","fresh",9.963393342893895]],"compiler":[[15,10],[13,8],[13,8],[15,10],[17,12],[17,12],[15,10],[13,8],[15,10],[17,12],[17,12]],"count":[[210,6]],"kept":[{"done":[1,1],"fresh":[5,2],"new":[203,3],"picked":[1,0]}],"min-error":[0],"time":61.85791015625,"type":"prune"},{"compiler":[[38,16]],"locations":[["(/.f64 1 (-.f64 z y))",0.01171875,true],["(*.f64 (/.f64 1 (-.f64 z y)) x)",0.22265625,true],["(/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (-.f64 z t))",2.1129415991999285,true]],"time":7.68798828125,"type":"localize"},{"count":[[3,108]],"series":[["(/.f64 1 (-.f64 z y))","y","-inf",0.214111328125],["(/.f64 1 (-.f64 z y))","y","inf",0.189208984375],["(/.f64 1 (-.f64 z y))","y","0",0.20703125],["(/.f64 1 (-.f64 z y))","z","-inf",0.205078125],["(/.f64 1 (-.f64 z y))","z","inf",0.287109375],["(/.f64 1 (-.f64 z y))","z","0",0.30078125],["(*.f64 (/.f64 1 (-.f64 z y)) x)","x","-inf",0.164794921875],["(*.f64 (/.f64 1 (-.f64 z y)) x)","x","inf",0.139892578125],["(*.f64 (/.f64 1 (-.f64 z y)) x)","x","0",0.138916015625],["(*.f64 (/.f64 1 (-.f64 z y)) x)","y","-inf",0.205810546875],["(*.f64 (/.f64 1 (-.f64 z y)) x)","y","inf",0.179931640625],["(*.f64 (/.f64 1 (-.f64 z y)) x)","y","0",0.197998046875],["(*.f64 (/.f64 1 (-.f64 z y)) x)","z","-inf",0.171875],["(*.f64 (/.f64 1 (-.f64 z y)) x)","z","inf",0.197998046875],["(*.f64 (/.f64 1 (-.f64 z y)) x)","z","0",0.18017578125],["(/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (-.f64 z t))","t","-inf",0.242919921875],["(/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (-.f64 z t))","t","inf",0.2109375],["(/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (-.f64 z t))","t","0",0.212890625],["(/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (-.f64 z t))","x","-inf",0.159912109375],["(/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (-.f64 z t))","x","inf",0.161865234375],["(/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (-.f64 z t))","x","0",0.18310546875],["(/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (-.f64 z t))","y","-inf",0.22607421875],["(/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (-.f64 z t))","y","inf",0.2509765625],["(/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (-.f64 z t))","y","0",0.20703125],["(/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (-.f64 z t))","z","-inf",0.27099609375],["(/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (-.f64 z t))","z","inf",0.27294921875],["(/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (-.f64 z t))","z","0",0.360107421875]],"time":6.12109375,"type":"series"},{"count":[[3,105]],"egraph":[[2,3667,27,0.028598833999999997],[1,246,27,0.004696667],[0,11,27,0.000276709]],"inputs":[["(/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (-.f64 z t))","(*.f64 (/.f64 1 (-.f64 z y)) x)","(/.f64 1 (-.f64 z y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))))) (cbrt.f64 (exp.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z y)) (/.f64 1 (/.f64 (-.f64 z t) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z y)) (*.f64 x (/.f64 1 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 (/.f64 1 (-.f64 z y)) (/.f64 1 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 z y)) (/.f64 1 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))) (pow.f64 (cbrt.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))) 2) (cbrt.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (*.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (/.f64 1 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))) (sqrt.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (*.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (/.f64 1 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (neg.f64 x) (-.f64 z y)) (/.f64 1 (neg.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z t)) (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (-.f64 z y)) 1) (/.f64 x (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x 1) (/.f64 (/.f64 1 (-.f64 z y)) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (-.f64 z y)) (-.f64 z t)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) 1) (/.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) 1) (/.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z t)) 2)) (/.f64 (/.f64 x (-.f64 z y)) (cbrt.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (-.f64 z y)) (pow.f64 (cbrt.f64 (-.f64 z t)) 2)) (/.f64 x (cbrt.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (cbrt.f64 (-.f64 z t)) 2)) (/.f64 (/.f64 1 (-.f64 z y)) (cbrt.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (pow.f64 (cbrt.f64 (-.f64 z t)) 2)) (cbrt.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (pow.f64 (cbrt.f64 (-.f64 z t)) 2)) (/.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (cbrt.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 z t))) (/.f64 (/.f64 x (-.f64 z y)) (sqrt.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (-.f64 z y)) (sqrt.f64 (-.f64 z t))) (/.f64 x (sqrt.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (sqrt.f64 (-.f64 z t))) (/.f64 (/.f64 1 (-.f64 z y)) (sqrt.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (sqrt.f64 (-.f64 z t))) (/.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 (pow.f64 z 3) (pow.f64 t 3))) (fma.f64 z z (*.f64 t (+.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 (*.f64 z z) (*.f64 t t))) (+.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 z y) (/.f64 (-.f64 z t) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 x (-.f64 z y)) (neg.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 x (-.f64 z y)) 3) (pow.f64 (-.f64 z t) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 x (-.f64 z y)))) (cbrt.f64 (exp.f64 (/.f64 x (-.f64 z y)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (-.f64 z y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (-.f64 z y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 x) 2) (/.f64 (-.f64 z y) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 x) (/.f64 (-.f64 z y) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (sqrt.f64 (-.f64 z y))) (sqrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x 1) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 x) (neg.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x -1) (neg.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (-.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 z y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (/.f64 1 (-.f64 z y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (-.f64 z y))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 1 (-.f64 z y)))) (cbrt.f64 (exp.f64 (/.f64 1 (-.f64 z y)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 1 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (-.f64 z y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (-.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (-.f64 z y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (-.f64 z y))) (cbrt.f64 (pow.f64 (-.f64 z y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 z y) -2)) (/.f64 1 (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 z y) -1/2) (pow.f64 (-.f64 z y) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (neg.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) 2) -1) (pow.f64 (cbrt.f64 (-.f64 z y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (-.f64 z y)) -1) (pow.f64 (sqrt.f64 (-.f64 z y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 z z (*.f64 y (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 y y))) (+.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 z y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (-.f64 z y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 z y) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 z y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 1 (-.f64 z y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 z y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (-.f64 z y))) 1))))))"]],"rules":[["egg-rr",28],["egg-rr",29],["egg-rr",48]],"stop":[["node limit",1]],"time":53.4580078125,"type":"rewrite"},{"count":[[213,188]],"egraph":[[2,3318,2559,0.019546624999999998],[1,761,2924,0.005805958],[0,216,3083,0.00106325]],"inputs":[["(/.f64 x (*.f64 y t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (/.f64 x (*.f64 y t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (pow.f64 z 2))) (/.f64 x (*.f64 y t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (pow.f64 z 2))) (+.f64 (/.f64 x (*.f64 y t)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2))))) (*.f64 y t)))) (pow.f64 z 3))))))","(/.f64 x (pow.f64 z 2))","(+.f64 (/.f64 x (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4)))))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))))) (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 t x))))) (pow.f64 z 5))))))","(/.f64 x (pow.f64 z 2))","(+.f64 (/.f64 x (pow.f64 z 2)) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3))))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (+.f64 y t)) (pow.f64 z 5))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 t (*.f64 (+.f64 y t) x))) (pow.f64 z 5))) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3))))))","(/.f64 x (*.f64 (-.f64 z t) z))","(+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (-.f64 z t) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (-.f64 z t) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (+.f64 (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2))) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (-.f64 z t) (pow.f64 z 4))))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z t) (pow.f64 y 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3)))))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z t) (pow.f64 y 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3)))))))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z y) z))","(+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (-.f64 z y) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (-.f64 z y) (pow.f64 z 3))) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (-.f64 z y) (pow.f64 z 4))) (+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2))))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z y) (pow.f64 t 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3)))))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z y) (pow.f64 t 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3)))))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (*.f64 y t))","(/.f64 (/.f64 x y) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (/.f64 x (*.f64 y t)))","(fma.f64 -1 (/.f64 (fma.f64 -1 t (neg.f64 y)) (/.f64 (*.f64 (*.f64 y y) (*.f64 t t)) (*.f64 x z))) (/.f64 x (*.f64 y t)))","(-.f64 (/.f64 x (*.f64 y t)) (/.f64 (*.f64 z (*.f64 (neg.f64 x) (+.f64 y t))) (*.f64 t (*.f64 t (*.f64 y y)))))","(+.f64 (/.f64 (/.f64 x y) t) (*.f64 (/.f64 (+.f64 y t) (*.f64 t (*.f64 t (*.f64 y y)))) (*.f64 x z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (pow.f64 z 2))) (/.f64 x (*.f64 y t))))","(fma.f64 -1 (/.f64 (fma.f64 -1 t (neg.f64 y)) (/.f64 (*.f64 (*.f64 y y) (*.f64 t t)) (*.f64 x z))) (fma.f64 -1 (*.f64 (fma.f64 -1 (*.f64 (/.f64 (pow.f64 (fma.f64 -1 t (neg.f64 y)) 2) (pow.f64 y 3)) (/.f64 x (pow.f64 t 3))) (/.f64 x (*.f64 (*.f64 y y) (*.f64 t t)))) (*.f64 z z)) (/.f64 x (*.f64 y t))))","(-.f64 (-.f64 (/.f64 x (*.f64 y t)) (*.f64 (-.f64 (/.f64 (/.f64 x (*.f64 y y)) (*.f64 t t)) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (-.f64 (neg.f64 t) y) 2) (pow.f64 y 3)))) (*.f64 z z))) (/.f64 (*.f64 z (*.f64 (neg.f64 x) (+.f64 y t))) (*.f64 t (*.f64 t (*.f64 y y)))))","(+.f64 (*.f64 (/.f64 (+.f64 y t) (*.f64 t (*.f64 t (*.f64 y y)))) (*.f64 x z)) (fma.f64 (+.f64 (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (+.f64 y t) 2) (pow.f64 y 3))) (/.f64 (neg.f64 x) (*.f64 t (*.f64 t (*.f64 y y))))) (*.f64 z z) (/.f64 (/.f64 x y) t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (pow.f64 z 2))) (+.f64 (/.f64 x (*.f64 y t)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2))))) (*.f64 y t)))) (pow.f64 z 3))))))","(fma.f64 -1 (/.f64 (fma.f64 -1 t (neg.f64 y)) (/.f64 (*.f64 (*.f64 y y) (*.f64 t t)) (*.f64 x z))) (+.f64 (fma.f64 -1 (*.f64 (fma.f64 -1 (*.f64 (/.f64 (pow.f64 (fma.f64 -1 t (neg.f64 y)) 2) (pow.f64 y 3)) (/.f64 x (pow.f64 t 3))) (/.f64 x (*.f64 (*.f64 y y) (*.f64 t t)))) (*.f64 z z)) (/.f64 x (*.f64 y t))) (neg.f64 (*.f64 (*.f64 -1 (+.f64 (*.f64 (/.f64 (fma.f64 -1 t (neg.f64 y)) (pow.f64 y 3)) (/.f64 x (pow.f64 t 3))) (*.f64 (/.f64 (fma.f64 -1 t (neg.f64 y)) y) (/.f64 (fma.f64 -1 (*.f64 (/.f64 (pow.f64 (fma.f64 -1 t (neg.f64 y)) 2) (pow.f64 y 3)) (/.f64 x (pow.f64 t 3))) (/.f64 x (*.f64 (*.f64 y y) (*.f64 t t)))) t)))) (pow.f64 z 3)))))","(-.f64 (-.f64 (fma.f64 (*.f64 1 (fma.f64 (/.f64 (-.f64 (neg.f64 t) y) (pow.f64 y 3)) (/.f64 x (pow.f64 t 3)) (*.f64 (/.f64 (-.f64 (neg.f64 t) y) y) (/.f64 (-.f64 (/.f64 (/.f64 x (*.f64 y y)) (*.f64 t t)) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (-.f64 (neg.f64 t) y) 2) (pow.f64 y 3)))) t)))) (pow.f64 z 3) (/.f64 x (*.f64 y t))) (*.f64 (-.f64 (/.f64 (/.f64 x (*.f64 y y)) (*.f64 t t)) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (-.f64 (neg.f64 t) y) 2) (pow.f64 y 3)))) (*.f64 z z))) (/.f64 (*.f64 z (*.f64 (neg.f64 x) (+.f64 y t))) (*.f64 t (*.f64 t (*.f64 y y)))))","(+.f64 (-.f64 (/.f64 (/.f64 x y) t) (*.f64 (fma.f64 (/.f64 (+.f64 y t) y) (/.f64 (-.f64 (/.f64 (/.f64 (/.f64 x t) t) (*.f64 y y)) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (+.f64 y t) 2) (pow.f64 y 3)))) t) (*.f64 (/.f64 (+.f64 y t) (pow.f64 t 3)) (/.f64 x (pow.f64 y 3)))) (pow.f64 z 3))) (-.f64 (*.f64 (/.f64 (+.f64 y t) (*.f64 t (*.f64 t (*.f64 y y)))) (*.f64 x z)) (*.f64 (-.f64 (/.f64 (/.f64 (/.f64 x t) t) (*.f64 y y)) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (+.f64 y t) 2) (pow.f64 y 3)))) (*.f64 z z))))","(/.f64 x (pow.f64 z 2))","(/.f64 x (*.f64 z z))","(+.f64 (/.f64 x (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))))","(+.f64 (/.f64 x (*.f64 z z)) (neg.f64 (/.f64 (fma.f64 -1 t (neg.f64 y)) (/.f64 (pow.f64 z 3) x))))","(-.f64 (/.f64 x (*.f64 z z)) (/.f64 (*.f64 (neg.f64 x) (+.f64 y t)) (pow.f64 z 3)))","(*.f64 (+.f64 (/.f64 (+.f64 y t) z) 1) (/.f64 x (*.f64 z z)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4)))))","(+.f64 (/.f64 x (*.f64 z z)) (fma.f64 -1 (/.f64 (fma.f64 -1 t (neg.f64 y)) (/.f64 (pow.f64 z 3) x)) (neg.f64 (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (fma.f64 -1 t (neg.f64 y)) 2)) (*.f64 y (*.f64 x t))) (pow.f64 z 4)))))","(-.f64 (-.f64 (/.f64 x (*.f64 z z)) (/.f64 (*.f64 (neg.f64 x) (+.f64 y t)) (pow.f64 z 3))) (/.f64 (*.f64 x (+.f64 (neg.f64 (pow.f64 (-.f64 (neg.f64 t) y) 2)) (*.f64 y t))) (pow.f64 z 4)))","(-.f64 (*.f64 (+.f64 (/.f64 (+.f64 y t) z) 1) (/.f64 x (*.f64 z z))) (/.f64 (*.f64 x (-.f64 (*.f64 y t) (pow.f64 (+.f64 y t) 2))) (pow.f64 z 4)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))))) (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 t x))))) (pow.f64 z 5))))))","(+.f64 (/.f64 x (*.f64 z z)) (fma.f64 -1 (/.f64 (fma.f64 -1 t (neg.f64 y)) (/.f64 (pow.f64 z 3) x)) (fma.f64 -1 (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (fma.f64 -1 t (neg.f64 y)) 2)) (*.f64 y (*.f64 x t))) (pow.f64 z 4)) (neg.f64 (/.f64 (fma.f64 -1 (*.f64 (fma.f64 -1 t (neg.f64 y)) (fma.f64 -1 (*.f64 x (pow.f64 (fma.f64 -1 t (neg.f64 y)) 2)) (*.f64 y (*.f64 x t)))) (*.f64 (neg.f64 y) (*.f64 (fma.f64 -1 t (neg.f64 y)) (*.f64 x t)))) (pow.f64 z 5))))))","(+.f64 (/.f64 x (*.f64 z z)) (-.f64 (-.f64 (/.f64 (*.f64 (*.f64 1 (+.f64 y t)) x) (pow.f64 z 3)) (/.f64 (*.f64 x (+.f64 (neg.f64 (pow.f64 (-.f64 (neg.f64 t) y) 2)) (*.f64 y t))) (pow.f64 z 4))) (/.f64 (neg.f64 (fma.f64 (-.f64 (neg.f64 t) y) (*.f64 x (+.f64 (neg.f64 (pow.f64 (-.f64 (neg.f64 t) y) 2)) (*.f64 y t))) (*.f64 y (*.f64 t (*.f64 (neg.f64 x) (+.f64 y t)))))) (pow.f64 z 5))))","(+.f64 (*.f64 (+.f64 (/.f64 (+.f64 y t) z) 1) (/.f64 x (*.f64 z z))) (-.f64 (/.f64 (*.f64 (-.f64 (neg.f64 t) y) (+.f64 (*.f64 x (-.f64 (*.f64 y t) (pow.f64 (+.f64 y t) 2))) (*.f64 x (*.f64 y t)))) (pow.f64 z 5)) (/.f64 (*.f64 x (-.f64 (*.f64 y t) (pow.f64 (+.f64 y t) 2))) (pow.f64 z 4))))","(/.f64 x (pow.f64 z 2))","(/.f64 x (*.f64 z z))","(+.f64 (/.f64 x (pow.f64 z 2)) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3)))","(+.f64 (/.f64 x (*.f64 z z)) (neg.f64 (/.f64 (fma.f64 -1 t (neg.f64 y)) (/.f64 (pow.f64 z 3) x))))","(-.f64 (/.f64 x (*.f64 z z)) (/.f64 (*.f64 (neg.f64 x) (+.f64 y t)) (pow.f64 z 3)))","(*.f64 (+.f64 (/.f64 (+.f64 y t) z) 1) (/.f64 x (*.f64 z z)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3))))","(+.f64 (/.f64 x (*.f64 z z)) (fma.f64 -1 (/.f64 (fma.f64 -1 t (neg.f64 y)) (/.f64 (pow.f64 z 3) x)) (neg.f64 (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (fma.f64 -1 t (neg.f64 y)) 2)) (*.f64 y (*.f64 x t))) (pow.f64 z 4)))))","(-.f64 (-.f64 (/.f64 x (*.f64 z z)) (/.f64 (*.f64 (neg.f64 x) (+.f64 y t)) (pow.f64 z 3))) (/.f64 (*.f64 x (+.f64 (neg.f64 (pow.f64 (-.f64 (neg.f64 t) y) 2)) (*.f64 y t))) (pow.f64 z 4)))","(-.f64 (*.f64 (+.f64 (/.f64 (+.f64 y t) z) 1) (/.f64 x (*.f64 z z))) (/.f64 (*.f64 x (-.f64 (*.f64 y t) (pow.f64 (+.f64 y t) 2))) (pow.f64 z 4)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (+.f64 y t)) (pow.f64 z 5))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 t (*.f64 (+.f64 y t) x))) (pow.f64 z 5))) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3))))))","(+.f64 (/.f64 x (*.f64 z z)) (fma.f64 -1 (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (+.f64 y t) 2)) (*.f64 y (*.f64 x t))) (/.f64 (pow.f64 z 5) (+.f64 y t))) (fma.f64 -1 (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (+.f64 y t) 2)) (*.f64 y (*.f64 x t))) (pow.f64 z 4)) (fma.f64 -1 (/.f64 (*.f64 y (*.f64 t (*.f64 x (+.f64 y t)))) (pow.f64 z 5)) (/.f64 (+.f64 y t) (/.f64 (pow.f64 z 3) x))))))","(+.f64 (/.f64 x (*.f64 z z)) (-.f64 (-.f64 (-.f64 (/.f64 x (/.f64 (pow.f64 z 3) (+.f64 y t))) (*.f64 (/.f64 y (pow.f64 z 5)) (*.f64 x (*.f64 t (+.f64 y t))))) (/.f64 (*.f64 x (+.f64 (*.f64 y t) (neg.f64 (pow.f64 (+.f64 y t) 2)))) (pow.f64 z 4))) (*.f64 (/.f64 (*.f64 x (+.f64 (*.f64 y t) (neg.f64 (pow.f64 (+.f64 y t) 2)))) (pow.f64 z 5)) (+.f64 y t))))","(+.f64 (/.f64 x (*.f64 z z)) (-.f64 (-.f64 (*.f64 (/.f64 x (pow.f64 z 3)) (+.f64 y t)) (*.f64 (/.f64 y (pow.f64 z 5)) (*.f64 x (*.f64 t (+.f64 y t))))) (+.f64 (*.f64 (/.f64 (*.f64 x (-.f64 (*.f64 y t) (pow.f64 (+.f64 y t) 2))) (pow.f64 z 5)) (+.f64 y t)) (/.f64 (*.f64 x (-.f64 (*.f64 y t) (pow.f64 (+.f64 y t) 2))) (pow.f64 z 4)))))","(/.f64 x (*.f64 (-.f64 z t) z))","(/.f64 x (*.f64 z (-.f64 z t)))","(/.f64 (/.f64 x z) (-.f64 z t))","(+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2))))","(+.f64 (/.f64 x (*.f64 z (-.f64 z t))) (*.f64 (/.f64 y (-.f64 z t)) (/.f64 x (*.f64 z z))))","(fma.f64 (/.f64 y (-.f64 z t)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 z (-.f64 z t))))","(fma.f64 (/.f64 y (-.f64 z t)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x z) (-.f64 z t)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (-.f64 z t) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2)))))","(+.f64 (+.f64 (/.f64 x (*.f64 z (-.f64 z t))) (*.f64 (/.f64 y (-.f64 z t)) (/.f64 x (*.f64 z z)))) (*.f64 (/.f64 (*.f64 y y) (-.f64 z t)) (/.f64 x (pow.f64 z 3))))","(fma.f64 (/.f64 y (/.f64 (-.f64 z t) y)) (/.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 y (-.f64 z t)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 z (-.f64 z t)))))","(+.f64 (/.f64 (/.f64 x z) (-.f64 z t)) (*.f64 (/.f64 x (-.f64 z t)) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y (*.f64 z z)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (-.f64 z t) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (+.f64 (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2))) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (-.f64 z t) (pow.f64 z 4))))))","(+.f64 (*.f64 (/.f64 (*.f64 y y) (-.f64 z t)) (/.f64 x (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 z (-.f64 z t))) (+.f64 (*.f64 (/.f64 y (-.f64 z t)) (/.f64 x (*.f64 z z))) (/.f64 (pow.f64 y 3) (/.f64 (*.f64 (pow.f64 z 4) (-.f64 z t)) x)))))","(+.f64 (fma.f64 (/.f64 y (/.f64 (-.f64 z t) y)) (/.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 y (-.f64 z t)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 z (-.f64 z t))))) (/.f64 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) x) (-.f64 z t)))","(+.f64 (+.f64 (/.f64 (/.f64 x z) (-.f64 z t)) (*.f64 (/.f64 x (-.f64 z t)) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y (*.f64 z z))))) (/.f64 x (*.f64 (-.f64 z t) (/.f64 (pow.f64 z 4) (pow.f64 y 3)))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)))","(neg.f64 (/.f64 x (*.f64 y (-.f64 z t))))","(/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))))","(fma.f64 -1 (/.f64 x (*.f64 y (-.f64 z t))) (neg.f64 (/.f64 (/.f64 (*.f64 x z) (-.f64 z t)) (*.f64 y y))))","(-.f64 (/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t)) (*.f64 (/.f64 (/.f64 z y) y) (/.f64 x (-.f64 z t))))","(*.f64 (/.f64 x (-.f64 z t)) (-.f64 (/.f64 -1 y) (/.f64 z (*.f64 y y))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3))))))","(fma.f64 -1 (/.f64 x (*.f64 y (-.f64 z t))) (fma.f64 -1 (/.f64 (/.f64 (*.f64 x z) (-.f64 z t)) (*.f64 y y)) (neg.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z t)) (/.f64 x (pow.f64 y 3))))))","(-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)) (*.f64 (/.f64 (*.f64 z z) (*.f64 (pow.f64 y 3) (-.f64 z t))) x))) (/.f64 x (*.f64 y (-.f64 z t))))","(-.f64 (/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t)) (*.f64 (/.f64 x (-.f64 z t)) (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z (*.f64 y y)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z t) (pow.f64 y 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3)))))))","(fma.f64 -1 (/.f64 (pow.f64 z 3) (/.f64 (*.f64 (-.f64 z t) (pow.f64 y 4)) x)) (fma.f64 -1 (/.f64 x (*.f64 y (-.f64 z t))) (fma.f64 -1 (/.f64 (/.f64 (*.f64 x z) (-.f64 z t)) (*.f64 y y)) (neg.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z t)) (/.f64 x (pow.f64 y 3)))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)) (*.f64 (/.f64 (*.f64 z z) (*.f64 (pow.f64 y 3) (-.f64 z t))) x))) (/.f64 x (*.f64 y (-.f64 z t)))) (*.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (/.f64 x (-.f64 z t))))","(-.f64 (*.f64 (/.f64 -1 (-.f64 z t)) (+.f64 (/.f64 x y) (*.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) x))) (*.f64 (/.f64 x (-.f64 z t)) (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z (*.f64 y y)))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)))","(neg.f64 (/.f64 x (*.f64 y (-.f64 z t))))","(/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))))","(fma.f64 -1 (/.f64 x (*.f64 y (-.f64 z t))) (neg.f64 (/.f64 (/.f64 (*.f64 x z) (-.f64 z t)) (*.f64 y y))))","(-.f64 (/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t)) (*.f64 (/.f64 (/.f64 z y) y) (/.f64 x (-.f64 z t))))","(*.f64 (/.f64 x (-.f64 z t)) (-.f64 (/.f64 -1 y) (/.f64 z (*.f64 y y))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3))))))","(fma.f64 -1 (/.f64 x (*.f64 y (-.f64 z t))) (fma.f64 -1 (/.f64 (/.f64 (*.f64 x z) (-.f64 z t)) (*.f64 y y)) (neg.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z t)) (/.f64 x (pow.f64 y 3))))))","(-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)) (*.f64 (/.f64 (*.f64 z z) (*.f64 (pow.f64 y 3) (-.f64 z t))) x))) (/.f64 x (*.f64 y (-.f64 z t))))","(-.f64 (/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t)) (*.f64 (/.f64 x (-.f64 z t)) (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z (*.f64 y y)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z t) (pow.f64 y 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3)))))))","(fma.f64 -1 (/.f64 (pow.f64 z 3) (/.f64 (*.f64 (-.f64 z t) (pow.f64 y 4)) x)) (fma.f64 -1 (/.f64 x (*.f64 y (-.f64 z t))) (fma.f64 -1 (/.f64 (/.f64 (*.f64 x z) (-.f64 z t)) (*.f64 y y)) (neg.f64 (*.f64 (/.f64 (*.f64 z z) (-.f64 z t)) (/.f64 x (pow.f64 y 3)))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)) (*.f64 (/.f64 (*.f64 z z) (*.f64 (pow.f64 y 3) (-.f64 z t))) x))) (/.f64 x (*.f64 y (-.f64 z t)))) (*.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (/.f64 x (-.f64 z t))))","(-.f64 (*.f64 (/.f64 -1 (-.f64 z t)) (+.f64 (/.f64 x y) (*.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) x))) (*.f64 (/.f64 x (-.f64 z t)) (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z (*.f64 y y)))))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z y) z))","(/.f64 x (*.f64 z (-.f64 z y)))","(/.f64 (/.f64 x z) (-.f64 z y))","(+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2))))","(+.f64 (/.f64 x (*.f64 z (-.f64 z y))) (*.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z))))","(fma.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x z) (-.f64 z y)))","(fma.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 z (-.f64 z y))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (-.f64 z y) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2)))))","(+.f64 (+.f64 (/.f64 x (*.f64 z (-.f64 z y))) (*.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z)))) (*.f64 (/.f64 (*.f64 t t) (-.f64 z y)) (/.f64 x (pow.f64 z 3))))","(fma.f64 (/.f64 t (/.f64 (-.f64 z y) t)) (/.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x z) (-.f64 z y))))","(+.f64 (/.f64 x (*.f64 z (-.f64 z y))) (*.f64 (/.f64 x (-.f64 z y)) (+.f64 (/.f64 t (*.f64 z z)) (/.f64 (*.f64 t t) (pow.f64 z 3)))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (-.f64 z y) (pow.f64 z 3))) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (-.f64 z y) (pow.f64 z 4))) (+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2))))))","(+.f64 (*.f64 (/.f64 (*.f64 t t) (-.f64 z y)) (/.f64 x (pow.f64 z 3))) (+.f64 (+.f64 (/.f64 x (*.f64 z (-.f64 z y))) (*.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z)))) (/.f64 (*.f64 x (pow.f64 t 3)) (*.f64 (pow.f64 z 4) (-.f64 z y)))))","(fma.f64 (/.f64 t (/.f64 (-.f64 z y) t)) (/.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 (pow.f64 t 3) (-.f64 z y)) (/.f64 x (pow.f64 z 4)) (fma.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x z) (-.f64 z y)))))","(+.f64 (fma.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 z (-.f64 z y)))) (*.f64 (/.f64 x (-.f64 z y)) (+.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t)))","(neg.f64 (/.f64 x (*.f64 t (-.f64 z y))))","(/.f64 (neg.f64 x) (*.f64 t (-.f64 z y)))","(/.f64 (/.f64 (neg.f64 x) (-.f64 z y)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))))","(fma.f64 -1 (/.f64 (*.f64 x z) (*.f64 (*.f64 t t) (-.f64 z y))) (neg.f64 (/.f64 x (*.f64 t (-.f64 z y)))))","(neg.f64 (fma.f64 (/.f64 z (-.f64 z y)) (/.f64 (/.f64 x t) t) (/.f64 x (*.f64 t (-.f64 z y)))))","(*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 z (*.f64 t t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3))))))","(fma.f64 -1 (/.f64 (*.f64 x z) (*.f64 (*.f64 t t) (-.f64 z y))) (*.f64 -1 (+.f64 (/.f64 x (*.f64 t (-.f64 z y))) (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) (/.f64 x (pow.f64 t 3))))))","(-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z y)) (/.f64 (/.f64 x t) t) (/.f64 x (*.f64 t (-.f64 z y))))) (*.f64 (/.f64 x (-.f64 z y)) (/.f64 (*.f64 z z) (pow.f64 t 3))))","(-.f64 (*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 (*.f64 z z) (pow.f64 t 3)))) (*.f64 (/.f64 z (-.f64 z y)) (/.f64 (/.f64 x t) t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z y) (pow.f64 t 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3)))))))","(fma.f64 -1 (/.f64 (*.f64 x z) (*.f64 (*.f64 t t) (-.f64 z y))) (fma.f64 -1 (/.f64 (*.f64 x (pow.f64 z 3)) (*.f64 (-.f64 z y) (pow.f64 t 4))) (*.f64 -1 (+.f64 (/.f64 x (*.f64 t (-.f64 z y))) (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) (/.f64 x (pow.f64 t 3)))))))","(-.f64 (-.f64 (-.f64 (*.f64 (/.f64 (pow.f64 z 3) (-.f64 z y)) (neg.f64 (/.f64 x (pow.f64 t 4)))) (/.f64 x (*.f64 t (-.f64 z y)))) (*.f64 (/.f64 x (-.f64 z y)) (/.f64 (*.f64 z z) (pow.f64 t 3)))) (*.f64 (/.f64 z (-.f64 z y)) (/.f64 (/.f64 x t) t)))","(-.f64 (*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 (*.f64 z z) (pow.f64 t 3)))) (*.f64 (/.f64 x (-.f64 z y)) (+.f64 (/.f64 z (*.f64 t t)) (/.f64 (pow.f64 z 3) (pow.f64 t 4)))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t)))","(neg.f64 (/.f64 x (*.f64 t (-.f64 z y))))","(/.f64 (neg.f64 x) (*.f64 t (-.f64 z y)))","(/.f64 (/.f64 (neg.f64 x) (-.f64 z y)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))))","(fma.f64 -1 (/.f64 (*.f64 x z) (*.f64 (*.f64 t t) (-.f64 z y))) (neg.f64 (/.f64 x (*.f64 t (-.f64 z y)))))","(neg.f64 (fma.f64 (/.f64 z (-.f64 z y)) (/.f64 (/.f64 x t) t) (/.f64 x (*.f64 t (-.f64 z y)))))","(*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 z (*.f64 t t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3))))))","(fma.f64 -1 (/.f64 (*.f64 x z) (*.f64 (*.f64 t t) (-.f64 z y))) (*.f64 -1 (+.f64 (/.f64 x (*.f64 t (-.f64 z y))) (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) (/.f64 x (pow.f64 t 3))))))","(-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z y)) (/.f64 (/.f64 x t) t) (/.f64 x (*.f64 t (-.f64 z y))))) (*.f64 (/.f64 x (-.f64 z y)) (/.f64 (*.f64 z z) (pow.f64 t 3))))","(-.f64 (*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 (*.f64 z z) (pow.f64 t 3)))) (*.f64 (/.f64 z (-.f64 z y)) (/.f64 (/.f64 x t) t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z y) (pow.f64 t 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3)))))))","(fma.f64 -1 (/.f64 (*.f64 x z) (*.f64 (*.f64 t t) (-.f64 z y))) (fma.f64 -1 (/.f64 (*.f64 x (pow.f64 z 3)) (*.f64 (-.f64 z y) (pow.f64 t 4))) (*.f64 -1 (+.f64 (/.f64 x (*.f64 t (-.f64 z y))) (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) (/.f64 x (pow.f64 t 3)))))))","(-.f64 (-.f64 (-.f64 (*.f64 (/.f64 (pow.f64 z 3) (-.f64 z y)) (neg.f64 (/.f64 x (pow.f64 t 4)))) (/.f64 x (*.f64 t (-.f64 z y)))) (*.f64 (/.f64 x (-.f64 z y)) (/.f64 (*.f64 z z) (pow.f64 t 3)))) (*.f64 (/.f64 z (-.f64 z y)) (/.f64 (/.f64 x t) t)))","(-.f64 (*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 (*.f64 z z) (pow.f64 t 3)))) (*.f64 (/.f64 x (-.f64 z y)) (+.f64 (/.f64 z (*.f64 t t)) (/.f64 (pow.f64 z 3) (pow.f64 t 4)))))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(/.f64 (neg.f64 x) y)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(*.f64 -1 (+.f64 (/.f64 (*.f64 x z) (*.f64 y y)) (/.f64 x y)))","(-.f64 (/.f64 (neg.f64 x) y) (*.f64 (/.f64 x y) (/.f64 z y)))","(*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(fma.f64 -1 (/.f64 (*.f64 x z) (*.f64 y y)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (/.f64 x y))))","(-.f64 (-.f64 (/.f64 (*.f64 (*.f64 (neg.f64 z) z) x) (pow.f64 y 3)) (/.f64 x y)) (*.f64 (/.f64 x y) (/.f64 z y)))","(-.f64 (/.f64 (neg.f64 x) y) (*.f64 x (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z (*.f64 y y)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(fma.f64 -1 (/.f64 (*.f64 x z) (*.f64 y y)) (fma.f64 -1 (/.f64 (*.f64 x (pow.f64 z 3)) (pow.f64 y 4)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (*.f64 (neg.f64 z) z) x) (pow.f64 y 3)) (/.f64 x y)) (*.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) x)) (*.f64 (/.f64 x y) (/.f64 z y)))","(+.f64 (neg.f64 (*.f64 x (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (*.f64 (/.f64 z (pow.f64 y 3)) z)))) (*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 x z) (/.f64 y (/.f64 (*.f64 z z) x)))","(+.f64 (/.f64 x z) (*.f64 (/.f64 y (*.f64 z z)) x))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))))","(+.f64 (/.f64 x z) (+.f64 (*.f64 (/.f64 y (*.f64 z z)) x) (*.f64 (/.f64 y (/.f64 (pow.f64 z 3) y)) x)))","(+.f64 (/.f64 x z) (*.f64 x (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y (*.f64 z z)))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (+.f64 (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))) (/.f64 (*.f64 x (pow.f64 y 3)) (pow.f64 z 4))))","(+.f64 (*.f64 (/.f64 y (*.f64 z z)) x) (+.f64 (/.f64 x z) (+.f64 (*.f64 (/.f64 y (/.f64 (pow.f64 z 3) y)) x) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) x))))","(+.f64 (*.f64 x (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (/.f64 y (/.f64 (pow.f64 z 3) y)))) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z)))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 x z) (/.f64 y (/.f64 (*.f64 z z) x)))","(+.f64 (/.f64 x z) (*.f64 (/.f64 y (*.f64 z z)) x))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))))","(+.f64 (/.f64 x z) (+.f64 (*.f64 (/.f64 y (*.f64 z z)) x) (*.f64 (/.f64 y (/.f64 (pow.f64 z 3) y)) x)))","(+.f64 (/.f64 x z) (*.f64 x (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y (*.f64 z z)))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (+.f64 (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))) (/.f64 (*.f64 x (pow.f64 y 3)) (pow.f64 z 4))))","(+.f64 (*.f64 (/.f64 y (*.f64 z z)) x) (+.f64 (/.f64 x z) (+.f64 (*.f64 (/.f64 y (/.f64 (pow.f64 z 3) y)) x) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) x))))","(+.f64 (*.f64 x (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (/.f64 y (/.f64 (pow.f64 z 3) y)))) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z)))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 x z) (/.f64 y (/.f64 (*.f64 z z) x)))","(+.f64 (/.f64 x z) (*.f64 (/.f64 y (*.f64 z z)) x))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))))","(+.f64 (/.f64 x z) (+.f64 (*.f64 (/.f64 y (*.f64 z z)) x) (*.f64 (/.f64 y (/.f64 (pow.f64 z 3) y)) x)))","(+.f64 (/.f64 x z) (*.f64 x (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y (*.f64 z z)))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(+.f64 (/.f64 y (/.f64 (*.f64 z z) x)) (+.f64 (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))) (/.f64 (*.f64 x (pow.f64 y 3)) (pow.f64 z 4))))","(+.f64 (*.f64 (/.f64 y (*.f64 z z)) x) (+.f64 (/.f64 x z) (+.f64 (*.f64 (/.f64 y (/.f64 (pow.f64 z 3) y)) x) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) x))))","(+.f64 (*.f64 x (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (/.f64 y (/.f64 (pow.f64 z 3) y)))) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z)))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(/.f64 (neg.f64 x) y)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(*.f64 -1 (+.f64 (/.f64 (*.f64 x z) (*.f64 y y)) (/.f64 x y)))","(-.f64 (/.f64 (neg.f64 x) y) (*.f64 (/.f64 x y) (/.f64 z y)))","(*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(fma.f64 -1 (/.f64 (*.f64 x z) (*.f64 y y)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (/.f64 x y))))","(-.f64 (-.f64 (/.f64 (*.f64 (*.f64 (neg.f64 z) z) x) (pow.f64 y 3)) (/.f64 x y)) (*.f64 (/.f64 x y) (/.f64 z y)))","(-.f64 (/.f64 (neg.f64 x) y) (*.f64 x (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z (*.f64 y y)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(fma.f64 -1 (/.f64 (*.f64 x z) (*.f64 y y)) (fma.f64 -1 (/.f64 (*.f64 x (pow.f64 z 3)) (pow.f64 y 4)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (*.f64 (neg.f64 z) z) x) (pow.f64 y 3)) (/.f64 x y)) (*.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) x)) (*.f64 (/.f64 x y) (/.f64 z y)))","(+.f64 (neg.f64 (*.f64 x (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (*.f64 (/.f64 z (pow.f64 y 3)) z)))) (*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y))))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(/.f64 (neg.f64 x) y)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(*.f64 -1 (+.f64 (/.f64 (*.f64 x z) (*.f64 y y)) (/.f64 x y)))","(-.f64 (/.f64 (neg.f64 x) y) (*.f64 (/.f64 x y) (/.f64 z y)))","(*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(fma.f64 -1 (/.f64 (*.f64 x z) (*.f64 y y)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (/.f64 x y))))","(-.f64 (-.f64 (/.f64 (*.f64 (*.f64 (neg.f64 z) z) x) (pow.f64 y 3)) (/.f64 x y)) (*.f64 (/.f64 x y) (/.f64 z y)))","(-.f64 (/.f64 (neg.f64 x) y) (*.f64 x (*.f64 (+.f64 (/.f64 z y) 1) (/.f64 z (*.f64 y y)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(fma.f64 -1 (/.f64 (*.f64 x z) (*.f64 y y)) (fma.f64 -1 (/.f64 (*.f64 x (pow.f64 z 3)) (pow.f64 y 4)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (/.f64 (*.f64 (*.f64 (neg.f64 z) z) x) (pow.f64 y 3)) (/.f64 x y)) (*.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) x)) (*.f64 (/.f64 x y) (/.f64 z y)))","(+.f64 (neg.f64 (*.f64 x (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (*.f64 (/.f64 z (pow.f64 y 3)) z)))) (*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y))))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (neg.f64 (/.f64 z (*.f64 y y))) (/.f64 1 y))","(fma.f64 -1 (/.f64 (/.f64 z y) y) (/.f64 -1 y))","(-.f64 (/.f64 -1 y) (/.f64 z (*.f64 y y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (pow.f64 y 3)) (/.f64 z (*.f64 y y)))) (/.f64 1 y))","(fma.f64 -1 (+.f64 (/.f64 (/.f64 z y) y) (/.f64 z (/.f64 (pow.f64 y 3) z))) (/.f64 -1 y))","(+.f64 (/.f64 -1 y) (*.f64 (/.f64 z (*.f64 y y)) (-.f64 -1 (/.f64 z y))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(-.f64 (fma.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (pow.f64 y 3)) (/.f64 z (*.f64 y y))))) (/.f64 1 y))","(+.f64 (/.f64 -1 y) (-.f64 (-.f64 (/.f64 (neg.f64 z) (*.f64 y y)) (/.f64 z (/.f64 (pow.f64 y 3) z))) (/.f64 (pow.f64 z 3) (pow.f64 y 4))))","(+.f64 (/.f64 -1 y) (-.f64 (*.f64 (/.f64 z (*.f64 y y)) (-.f64 -1 (/.f64 z y))) (/.f64 (pow.f64 z 3) (pow.f64 y 4))))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 1 z) (/.f64 y (*.f64 z z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 1 z) (/.f64 (*.f64 y y) (pow.f64 z 3))))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 1 z) (/.f64 y (/.f64 (pow.f64 z 3) y))))","(+.f64 (/.f64 1 z) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y (*.f64 z z))))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 1 z) (+.f64 (/.f64 y (/.f64 (pow.f64 z 3) y)) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(+.f64 (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4))) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y (*.f64 z z))))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 1 z) (/.f64 y (*.f64 z z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 1 z) (/.f64 (*.f64 y y) (pow.f64 z 3))))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 1 z) (/.f64 y (/.f64 (pow.f64 z 3) y))))","(+.f64 (/.f64 1 z) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y (*.f64 z z))))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 1 z) (+.f64 (/.f64 y (/.f64 (pow.f64 z 3) y)) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(+.f64 (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4))) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y (*.f64 z z))))","(/.f64 1 z)","(+.f64 (/.f64 y (pow.f64 z 2)) (/.f64 1 z))","(+.f64 (/.f64 1 z) (/.f64 y (*.f64 z z)))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (/.f64 1 z)))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 1 z) (/.f64 (*.f64 y y) (pow.f64 z 3))))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 1 z) (/.f64 y (/.f64 (pow.f64 z 3) y))))","(+.f64 (/.f64 1 z) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y (*.f64 z z))))","(+.f64 (/.f64 y (pow.f64 z 2)) (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(+.f64 (/.f64 y (*.f64 z z)) (+.f64 (/.f64 1 z) (+.f64 (/.f64 y (/.f64 (pow.f64 z 3) y)) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))))","(+.f64 (+.f64 (/.f64 1 z) (/.f64 (pow.f64 y 3) (pow.f64 z 4))) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 y (*.f64 z z))))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (neg.f64 (/.f64 z (*.f64 y y))) (/.f64 1 y))","(fma.f64 -1 (/.f64 (/.f64 z y) y) (/.f64 -1 y))","(-.f64 (/.f64 -1 y) (/.f64 z (*.f64 y y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (pow.f64 y 3)) (/.f64 z (*.f64 y y)))) (/.f64 1 y))","(fma.f64 -1 (+.f64 (/.f64 (/.f64 z y) y) (/.f64 z (/.f64 (pow.f64 y 3) z))) (/.f64 -1 y))","(+.f64 (/.f64 -1 y) (*.f64 (/.f64 z (*.f64 y y)) (-.f64 -1 (/.f64 z y))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(-.f64 (fma.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (pow.f64 y 3)) (/.f64 z (*.f64 y y))))) (/.f64 1 y))","(+.f64 (/.f64 -1 y) (-.f64 (-.f64 (/.f64 (neg.f64 z) (*.f64 y y)) (/.f64 z (/.f64 (pow.f64 y 3) z))) (/.f64 (pow.f64 z 3) (pow.f64 y 4))))","(+.f64 (/.f64 -1 y) (-.f64 (*.f64 (/.f64 z (*.f64 y y)) (-.f64 -1 (/.f64 z y))) (/.f64 (pow.f64 z 3) (pow.f64 y 4))))","(/.f64 -1 y)","(-.f64 (*.f64 -1 (/.f64 z (pow.f64 y 2))) (/.f64 1 y))","(-.f64 (neg.f64 (/.f64 z (*.f64 y y))) (/.f64 1 y))","(fma.f64 -1 (/.f64 (/.f64 z y) y) (/.f64 -1 y))","(-.f64 (/.f64 -1 y) (/.f64 z (*.f64 y y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2)))) (/.f64 1 y))","(-.f64 (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (pow.f64 y 3)) (/.f64 z (*.f64 y y)))) (/.f64 1 y))","(fma.f64 -1 (+.f64 (/.f64 (/.f64 z y) y) (/.f64 z (/.f64 (pow.f64 y 3) z))) (/.f64 -1 y))","(+.f64 (/.f64 -1 y) (*.f64 (/.f64 z (*.f64 y y)) (-.f64 -1 (/.f64 z y))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 z 2) (pow.f64 y 3))) (*.f64 -1 (/.f64 z (pow.f64 y 2))))) (/.f64 1 y))","(-.f64 (fma.f64 -1 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (*.f64 -1 (+.f64 (/.f64 (*.f64 z z) (pow.f64 y 3)) (/.f64 z (*.f64 y y))))) (/.f64 1 y))","(+.f64 (/.f64 -1 y) (-.f64 (-.f64 (/.f64 (neg.f64 z) (*.f64 y y)) (/.f64 z (/.f64 (pow.f64 y 3) z))) (/.f64 (pow.f64 z 3) (pow.f64 y 4))))","(+.f64 (/.f64 -1 y) (-.f64 (*.f64 (/.f64 z (*.f64 y y)) (-.f64 -1 (/.f64 z y))) (/.f64 (pow.f64 z 3) (pow.f64 y 4))))"]],"stop":[["node limit",1]],"time":52.3359375,"type":"simplify"},{"compiler":[[3948,1632]],"time":30.79296875,"type":"eval"},{"alts":[["(/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (-.f64 z t))","done",2.2208930690948714],["(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","done",2.1756393093264297],["(*.f64 (/.f64 1 (-.f64 z y)) (*.f64 x (/.f64 1 (-.f64 z t))))","fresh",2.9118470442035918],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) x) -1) (/.f64 1 (-.f64 z t)))","next",2.6175756966310564],["(*.f64 (/.f64 (/.f64 1 (-.f64 z y)) (-.f64 z t)) x)","fresh",9.963393342893895],["(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","fresh",10.389617560054827]],"compiler":[[15,10],[13,8],[17,12],[17,12],[15,10],[13,8],[17,12],[17,12],[15,10],[13,8]],"count":[[194,6]],"kept":[{"done":[1,1],"fresh":[4,1],"new":[188,3],"picked":[1,1]}],"min-error":[0],"time":51.626953125,"type":"prune"},{"compiler":[[46,18]],"locations":[["(/.f64 (-.f64 z y) x)",0.01171875,true],["(/.f64 1 (-.f64 z t))",0.01953125,false],["(pow.f64 (/.f64 (-.f64 z y) x) -1)",0.831563481195111,true],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) x) -1) (/.f64 1 (-.f64 z t)))",2.1520040991999285,true]],"time":8.992919921875,"type":"localize"},{"count":[[3,108]],"series":[["(/.f64 (-.f64 z y) x)","x","-inf",0.173095703125],["(/.f64 (-.f64 z y) x)","x","inf",0.13818359375],["(/.f64 (-.f64 z y) x)","x","0",0.154052734375],["(/.f64 (-.f64 z y) x)","y","-inf",0.22802734375],["(/.f64 (-.f64 z y) x)","y","inf",0.2958984375],["(/.f64 (-.f64 z y) x)","y","0",0.22998046875],["(/.f64 (-.f64 z y) x)","z","-inf",0.31591796875],["(/.f64 (-.f64 z y) x)","z","inf",0.324951171875],["(/.f64 (-.f64 z y) x)","z","0",0.241943359375],["(pow.f64 (/.f64 (-.f64 z y) x) -1)","x","-inf",0.527099609375],["(pow.f64 (/.f64 (-.f64 z y) x) -1)","x","inf",0.261962890625],["(pow.f64 (/.f64 (-.f64 z y) x) -1)","x","0",0.447021484375],["(pow.f64 (/.f64 (-.f64 z y) x) -1)","y","-inf",0.2509765625],["(pow.f64 (/.f64 (-.f64 z y) x) -1)","y","inf",0.22509765625],["(pow.f64 (/.f64 (-.f64 z y) x) -1)","y","0",0.263916015625],["(pow.f64 (/.f64 (-.f64 z y) x) -1)","z","-inf",0.27099609375],["(pow.f64 (/.f64 (-.f64 z y) x) -1)","z","inf",0.25],["(pow.f64 (/.f64 (-.f64 z y) x) -1)","z","0",0.2900390625],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) x) -1) (/.f64 1 (-.f64 z t)))","t","-inf",0.222900390625],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) x) -1) (/.f64 1 (-.f64 z t)))","t","inf",0.248046875],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) x) -1) (/.f64 1 (-.f64 z t)))","t","0",0.2080078125],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) x) -1) (/.f64 1 (-.f64 z t)))","x","-inf",0.18408203125],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) x) -1) (/.f64 1 (-.f64 z t)))","x","inf",0.201904296875],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) x) -1) (/.f64 1 (-.f64 z t)))","x","0",0.158935546875],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) x) -1) (/.f64 1 (-.f64 z t)))","y","-inf",0.26806640625],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) x) -1) (/.f64 1 (-.f64 z t)))","y","inf",0.241943359375],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) x) -1) (/.f64 1 (-.f64 z t)))","y","0",0.23388671875],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) x) -1) (/.f64 1 (-.f64 z t)))","z","-inf",0.259033203125],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) x) -1) (/.f64 1 (-.f64 z t)))","z","inf",0.31005859375],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) x) -1) (/.f64 1 (-.f64 z t)))","z","0",0.413818359375]],"time":8.254150390625,"type":"series"},{"count":[[3,248]],"egraph":[[2,4138,27,0.030444126000000002],[1,290,27,0.005312501000000001],[0,13,33,0.000342542]],"inputs":[["(*.f64 (pow.f64 (/.f64 (-.f64 z y) x) -1) (/.f64 1 (-.f64 z t)))","(pow.f64 (/.f64 (-.f64 z y) x) -1)","(/.f64 (-.f64 z y) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (/.f64 (-.f64 z y) x) (neg.f64 (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (*.f64 (neg.f64 (-.f64 z t)) (/.f64 (-.f64 z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (-.f64 z y) x) (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (-.f64 z t) (/.f64 (-.f64 z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 z t) (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 z t)) (/.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (/.f64 (-.f64 z t) (cbrt.f64 (/.f64 x (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (/.f64 (-.f64 z t) (sqrt.f64 (/.f64 x (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (/.f64 x (-.f64 z y))) (neg.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 z y)) (sqrt.f64 (-.f64 z t))) (sqrt.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 z y)) 1) (-.f64 z t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 x (-.f64 z y)) (pow.f64 (cbrt.f64 (-.f64 z t)) 2)) (cbrt.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (/.f64 x (-.f64 z y))) (neg.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (-.f64 z y)) -1) (neg.f64 (-.f64 z t)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (-.f64 z y) x) (-.f64 z t)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 z t) (/.f64 (-.f64 z y) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 x (-.f64 z y)) 3) (pow.f64 (-.f64 z t) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 x (-.f64 z y)) 3) (pow.f64 (/.f64 1 (-.f64 z t)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 z t)) 3) (pow.f64 (/.f64 x (-.f64 z y)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (-.f64 z y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 z y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (cbrt.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 2) (*.f64 (cbrt.f64 (/.f64 x (-.f64 z y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (*.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 z y) -1) (pow.f64 (/.f64 1 x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) x)) 2) -1) (pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 (-.f64 z y) x)) -1) (pow.f64 (sqrt.f64 (/.f64 (-.f64 z y) x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 x (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 z y))) (/.f64 x (sqrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 z y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 z y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (pow.f64 z 3) (pow.f64 y 3))) (fma.f64 z z (*.f64 y (+.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (*.f64 (+.f64 z y) (-.f64 z y))) (+.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (neg.f64 (-.f64 z y))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (-.f64 z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (-.f64 z y) x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 x) 2) (/.f64 (-.f64 z y) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 x) (/.f64 (-.f64 z y) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 x (-.f64 z y))) (sqrt.f64 (/.f64 (-.f64 z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (sqrt.f64 (-.f64 z y))) (sqrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x 1) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 z y)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (pow.f64 (cbrt.f64 (-.f64 z y)) 2)) (cbrt.f64 (-.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) x)) 2)) (cbrt.f64 (/.f64 (-.f64 z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 z y) x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (-.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (-.f64 z y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 z y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (-.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (-.f64 z y))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 z y) x) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 y x))) (sqrt.f64 (/.f64 y x)) (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 z y) x) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (sqrt.f64 x))) (/.f64 (sqrt.f64 y) (sqrt.f64 x)) (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 z x) (neg.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 x) (neg.f64 (*.f64 (/.f64 1 x) y))) (fma.f64 (neg.f64 (/.f64 1 x)) y (*.f64 (/.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z x) (neg.f64 (*.f64 (/.f64 1 x) y))) (fma.f64 (neg.f64 (/.f64 1 x)) y (*.f64 (/.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z x)) (cbrt.f64 (/.f64 z x))) (cbrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (/.f64 1 x) y))) (fma.f64 (neg.f64 (/.f64 1 x)) y (*.f64 (/.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z x)) (sqrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (/.f64 1 x) y))) (fma.f64 (neg.f64 (/.f64 1 x)) y (*.f64 (/.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 z (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 1 x) y))) (fma.f64 (neg.f64 (/.f64 1 x)) y (*.f64 (/.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 z (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 1 x) y))) (fma.f64 (neg.f64 (/.f64 1 x)) y (*.f64 (/.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) x) (neg.f64 (*.f64 (/.f64 1 x) y))) (fma.f64 (neg.f64 (/.f64 1 x)) y (*.f64 (/.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) x) (neg.f64 (*.f64 (/.f64 1 x) y))) (fma.f64 (neg.f64 (/.f64 1 x)) y (*.f64 (/.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 1 x) y))) (fma.f64 (neg.f64 (/.f64 1 x)) y (*.f64 (/.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 1 x) y))) (fma.f64 (neg.f64 (/.f64 1 x)) y (*.f64 (/.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 x)) (/.f64 (cbrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 1 x) y))) (fma.f64 (neg.f64 (/.f64 1 x)) y (*.f64 (/.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 1 x) y))) (fma.f64 (neg.f64 (/.f64 1 x)) y (*.f64 (/.f64 1 x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 x) (neg.f64 (*.f64 (/.f64 y x) 1))) (fma.f64 (neg.f64 (/.f64 y x)) 1 (*.f64 (/.f64 y x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z x) (neg.f64 (*.f64 (/.f64 y x) 1))) (fma.f64 (neg.f64 (/.f64 y x)) 1 (*.f64 (/.f64 y x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z x)) (cbrt.f64 (/.f64 z x))) (cbrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (/.f64 y x) 1))) (fma.f64 (neg.f64 (/.f64 y x)) 1 (*.f64 (/.f64 y x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z x)) (sqrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (/.f64 y x) 1))) (fma.f64 (neg.f64 (/.f64 y x)) 1 (*.f64 (/.f64 y x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 z (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 y x) 1))) (fma.f64 (neg.f64 (/.f64 y x)) 1 (*.f64 (/.f64 y x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 z (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 y x) 1))) (fma.f64 (neg.f64 (/.f64 y x)) 1 (*.f64 (/.f64 y x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) x) (neg.f64 (*.f64 (/.f64 y x) 1))) (fma.f64 (neg.f64 (/.f64 y x)) 1 (*.f64 (/.f64 y x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) x) (neg.f64 (*.f64 (/.f64 y x) 1))) (fma.f64 (neg.f64 (/.f64 y x)) 1 (*.f64 (/.f64 y x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 y x) 1))) (fma.f64 (neg.f64 (/.f64 y x)) 1 (*.f64 (/.f64 y x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 y x) 1))) (fma.f64 (neg.f64 (/.f64 y x)) 1 (*.f64 (/.f64 y x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 x)) (/.f64 (cbrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 y x) 1))) (fma.f64 (neg.f64 (/.f64 y x)) 1 (*.f64 (/.f64 y x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 y x) 1))) (fma.f64 (neg.f64 (/.f64 y x)) 1 (*.f64 (/.f64 y x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 x) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z x) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z x)) (cbrt.f64 (/.f64 z x))) (cbrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z x)) (sqrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 z (cbrt.f64 x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 z (sqrt.f64 x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) x) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) x) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 x)) (/.f64 (cbrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))) (*.f64 (cbrt.f64 (/.f64 y x)) (*.f64 (cbrt.f64 (/.f64 y x)) (cbrt.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z x)) (cbrt.f64 (/.f64 z x))) (cbrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z x)) (sqrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 z (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 z (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 x)) (/.f64 (cbrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1) (*.f64 (/.f64 (cbrt.f64 y) x) (/.f64 (pow.f64 (cbrt.f64 y) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) x)) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) x)) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z x)) (cbrt.f64 (/.f64 z x))) (cbrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) x)) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z x)) (sqrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) x)) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 z (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) x)) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 z (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) x)) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) x)) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) x)) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) x)) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) x)) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 x)) (/.f64 (cbrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) x)) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) x)) (/.f64 (sqrt.f64 y) 1) (*.f64 (/.f64 (sqrt.f64 y) x) (/.f64 (sqrt.f64 y) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 x) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z x) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z x)) (cbrt.f64 (/.f64 z x))) (cbrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z x)) (sqrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 z (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 z (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) x) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) x) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 x)) (/.f64 (cbrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 y (cbrt.f64 x))) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 y (cbrt.f64 x)) (/.f64 1 (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z x)) (cbrt.f64 (/.f64 z x))) (cbrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z x)) (sqrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 z (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 z (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 x)) (/.f64 (cbrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (cbrt.f64 y) (cbrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z x)) (cbrt.f64 (/.f64 z x))) (cbrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z x)) (sqrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 z (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 z (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) x) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 x)) (/.f64 (cbrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x))) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)) (*.f64 (/.f64 (sqrt.f64 y) (cbrt.f64 x)) (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 x) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z x) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z x)) (cbrt.f64 (/.f64 z x))) (cbrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z x)) (sqrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 z (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 z (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) x) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) x) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 x)) (/.f64 (cbrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 y (sqrt.f64 x))) (/.f64 1 (sqrt.f64 x)) (*.f64 (/.f64 y (sqrt.f64 x)) (/.f64 1 (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z (/.f64 1 x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 z x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (/.f64 z x)) (cbrt.f64 (/.f64 z x))) (cbrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 z x)) (sqrt.f64 (/.f64 z x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 z (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 z (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) x) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 x)) (/.f64 (cbrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x))) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)) (*.f64 (/.f64 (cbrt.f64 y) (sqrt.f64 x)) (/.f64 (pow.f64 (cbrt.f64 y) 2) (sqrt.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 z x) (/.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 z y) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 z y) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 z y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 z y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 z y) x)) (pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) x)) 2) (cbrt.f64 (/.f64 (-.f64 z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) 2) (*.f64 (cbrt.f64 (-.f64 z y)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 z y) x)) (sqrt.f64 (/.f64 (-.f64 z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 z y)) (*.f64 (sqrt.f64 (-.f64 z y)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 z y)) (/.f64 1 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (-.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 (-.f64 z y) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 (-.f64 z y) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) 2) 1) (/.f64 (cbrt.f64 (-.f64 z y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 z y)) 1) (/.f64 (sqrt.f64 (-.f64 z y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) 2) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 (/.f64 (-.f64 z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 z y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 (-.f64 z y)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 z y)) 2) (sqrt.f64 x)) (/.f64 (cbrt.f64 (-.f64 z y)) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 z y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 z y) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 z y) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 z y) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 z y) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 z y) x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 z y) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 z y) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 z y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 z y) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z (/.f64 1 x) (neg.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 z x) (neg.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 z x)) (cbrt.f64 (/.f64 z x))) (cbrt.f64 (/.f64 z x)) (neg.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 z x)) (sqrt.f64 (/.f64 z x)) (neg.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 z (cbrt.f64 x)) (neg.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 z (sqrt.f64 x)) (neg.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) 1) (/.f64 (cbrt.f64 z) x) (neg.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) 1) (/.f64 (sqrt.f64 z) x) (neg.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (cbrt.f64 z) (cbrt.f64 x)) (neg.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 z) (cbrt.f64 x)) (neg.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 z) 2) (sqrt.f64 x)) (/.f64 (cbrt.f64 z) (sqrt.f64 x)) (neg.f64 (/.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (/.f64 (sqrt.f64 z) (sqrt.f64 x)) (neg.f64 (/.f64 y x)))))))"]],"rules":[["egg-rr",169],["egg-rr",46],["egg-rr",33]],"stop":[["node limit",1]],"time":75.070068359375,"type":"rewrite"},{"count":[[356,321]],"egraph":[[2,3136,2305,0.018793126],[1,707,2648,0.005407042],[0,196,2828,0.000992]],"inputs":[["(/.f64 x (*.f64 y t))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (/.f64 x (*.f64 y t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (pow.f64 z 2))) (/.f64 x (*.f64 y t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (pow.f64 z 2))) (+.f64 (/.f64 x (*.f64 y t)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2))))) (*.f64 y t)))) (pow.f64 z 3))))))","(/.f64 x (pow.f64 z 2))","(+.f64 (/.f64 x (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4)))))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))))) (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 t x))))) (pow.f64 z 5))))))","(/.f64 x (pow.f64 z 2))","(+.f64 (/.f64 x (pow.f64 z 2)) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3))))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (+.f64 y t)) (pow.f64 z 5))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 t (*.f64 (+.f64 y t) x))) (pow.f64 z 5))) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3))))))","(/.f64 x (*.f64 (-.f64 z t) z))","(+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (-.f64 z t) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (-.f64 z t) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (+.f64 (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2))) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (-.f64 z t) (pow.f64 z 4))))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z t) (pow.f64 y 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3)))))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z t) (pow.f64 y 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3)))))))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z y) z))","(+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (-.f64 z y) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2)))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (-.f64 z y) (pow.f64 z 3))) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (-.f64 z y) (pow.f64 z 4))) (+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2))))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z y) (pow.f64 t 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3)))))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z y) (pow.f64 t 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3)))))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(*.f64 -1 (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(*.f64 -1 (/.f64 y x))","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(/.f64 z x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(/.f64 z x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(/.f64 z x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(*.f64 -1 (/.f64 y x))","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(*.f64 -1 (/.f64 y x))","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (*.f64 y t))","(/.f64 (/.f64 x y) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (/.f64 x (*.f64 y t)))","(fma.f64 -1 (*.f64 (/.f64 (fma.f64 -1 t (neg.f64 y)) (*.f64 y y)) (/.f64 (*.f64 x z) (*.f64 t t))) (/.f64 x (*.f64 y t)))","(-.f64 (/.f64 x (*.f64 y t)) (*.f64 (/.f64 (/.f64 (*.f64 x z) y) y) (/.f64 (-.f64 (neg.f64 t) y) (*.f64 t t))))","(+.f64 (/.f64 (/.f64 x y) t) (/.f64 (+.f64 y t) (/.f64 (*.f64 y y) (*.f64 (/.f64 x t) (/.f64 z t)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (pow.f64 z 2))) (/.f64 x (*.f64 y t))))","(fma.f64 -1 (*.f64 (/.f64 (fma.f64 -1 t (neg.f64 y)) (*.f64 y y)) (/.f64 (*.f64 x z) (*.f64 t t))) (fma.f64 -1 (*.f64 (fma.f64 -1 (*.f64 (/.f64 (pow.f64 (fma.f64 -1 t (neg.f64 y)) 2) (pow.f64 y 3)) (/.f64 x (pow.f64 t 3))) (/.f64 x (*.f64 (*.f64 y y) (*.f64 t t)))) (*.f64 z z)) (/.f64 x (*.f64 y t))))","(-.f64 (-.f64 (/.f64 x (*.f64 y t)) (*.f64 (-.f64 (/.f64 (/.f64 (/.f64 x t) t) (*.f64 y y)) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (-.f64 (neg.f64 t) y) 2) (pow.f64 y 3)))) (*.f64 z z))) (*.f64 (/.f64 (/.f64 (*.f64 x z) y) y) (/.f64 (-.f64 (neg.f64 t) y) (*.f64 t t))))","(+.f64 (/.f64 (/.f64 x y) t) (-.f64 (/.f64 (+.f64 y t) (/.f64 (*.f64 y y) (*.f64 (/.f64 x t) (/.f64 z t)))) (*.f64 (-.f64 (/.f64 x (*.f64 (*.f64 (*.f64 y y) t) t)) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (+.f64 y t) 2) (pow.f64 y 3)))) (*.f64 z z))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 z x)) (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2)))) (pow.f64 z 2))) (+.f64 (/.f64 x (*.f64 y t)) (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x) (*.f64 (pow.f64 y 3) (pow.f64 t 3)))) (/.f64 x (*.f64 (pow.f64 y 2) (pow.f64 t 2))))) (*.f64 y t)))) (pow.f64 z 3))))))","(fma.f64 -1 (*.f64 (/.f64 (fma.f64 -1 t (neg.f64 y)) (*.f64 y y)) (/.f64 (*.f64 x z) (*.f64 t t))) (+.f64 (fma.f64 -1 (*.f64 (fma.f64 -1 (*.f64 (/.f64 (pow.f64 (fma.f64 -1 t (neg.f64 y)) 2) (pow.f64 y 3)) (/.f64 x (pow.f64 t 3))) (/.f64 x (*.f64 (*.f64 y y) (*.f64 t t)))) (*.f64 z z)) (/.f64 x (*.f64 y t))) (neg.f64 (*.f64 (*.f64 -1 (+.f64 (*.f64 (/.f64 (fma.f64 -1 t (neg.f64 y)) (pow.f64 y 3)) (/.f64 x (pow.f64 t 3))) (*.f64 (/.f64 (fma.f64 -1 t (neg.f64 y)) y) (/.f64 (fma.f64 -1 (*.f64 (/.f64 (pow.f64 (fma.f64 -1 t (neg.f64 y)) 2) (pow.f64 y 3)) (/.f64 x (pow.f64 t 3))) (/.f64 x (*.f64 (*.f64 y y) (*.f64 t t)))) t)))) (pow.f64 z 3)))))","(-.f64 (-.f64 (fma.f64 (*.f64 1 (fma.f64 (/.f64 (-.f64 (neg.f64 t) y) (pow.f64 y 3)) (/.f64 x (pow.f64 t 3)) (*.f64 (/.f64 (-.f64 (neg.f64 t) y) (*.f64 y t)) (-.f64 (/.f64 (/.f64 (/.f64 x t) t) (*.f64 y y)) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (-.f64 (neg.f64 t) y) 2) (pow.f64 y 3))))))) (pow.f64 z 3) (/.f64 x (*.f64 y t))) (*.f64 (-.f64 (/.f64 (/.f64 (/.f64 x t) t) (*.f64 y y)) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (-.f64 (neg.f64 t) y) 2) (pow.f64 y 3)))) (*.f64 z z))) (*.f64 (/.f64 (/.f64 (*.f64 x z) y) y) (/.f64 (-.f64 (neg.f64 t) y) (*.f64 t t))))","(+.f64 (-.f64 (/.f64 (/.f64 x y) t) (*.f64 (fma.f64 (/.f64 (+.f64 y t) y) (/.f64 (-.f64 (/.f64 x (*.f64 (*.f64 (*.f64 y y) t) t)) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (+.f64 y t) 2) (pow.f64 y 3)))) t) (/.f64 (+.f64 y t) (*.f64 (/.f64 (pow.f64 y 3) x) (pow.f64 t 3)))) (pow.f64 z 3))) (-.f64 (/.f64 (+.f64 y t) (/.f64 (*.f64 y y) (*.f64 (/.f64 x t) (/.f64 z t)))) (*.f64 (-.f64 (/.f64 x (*.f64 (*.f64 (*.f64 y y) t) t)) (*.f64 (/.f64 x (pow.f64 t 3)) (/.f64 (pow.f64 (+.f64 y t) 2) (pow.f64 y 3)))) (*.f64 z z))))","(/.f64 x (pow.f64 z 2))","(/.f64 x (*.f64 z z))","(+.f64 (/.f64 x (pow.f64 z 2)) (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))))","(+.f64 (/.f64 x (*.f64 z z)) (neg.f64 (/.f64 (fma.f64 -1 t (neg.f64 y)) (/.f64 (pow.f64 z 3) x))))","(-.f64 (/.f64 x (*.f64 z z)) (/.f64 (*.f64 (neg.f64 x) (+.f64 y t)) (pow.f64 z 3)))","(*.f64 (+.f64 (/.f64 (+.f64 y t) z) 1) (/.f64 x (*.f64 z z)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4)))))","(+.f64 (/.f64 x (*.f64 z z)) (*.f64 -1 (+.f64 (/.f64 (fma.f64 -1 t (neg.f64 y)) (/.f64 (pow.f64 z 3) x)) (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (fma.f64 -1 t (neg.f64 y)) 2)) (*.f64 y (*.f64 x t))) (pow.f64 z 4)))))","(-.f64 (-.f64 (/.f64 x (*.f64 z z)) (/.f64 (*.f64 (neg.f64 x) (+.f64 y t)) (pow.f64 z 3))) (/.f64 (*.f64 x (+.f64 (neg.f64 (pow.f64 (-.f64 (neg.f64 t) y) 2)) (*.f64 y t))) (pow.f64 z 4)))","(-.f64 (*.f64 (+.f64 (/.f64 (+.f64 y t) z) 1) (/.f64 x (*.f64 z z))) (/.f64 (*.f64 x (-.f64 (*.f64 y t) (pow.f64 (+.f64 y t) 2))) (pow.f64 z 4)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) x) (pow.f64 z 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) 2) x)) (*.f64 y (*.f64 t x))))) (*.f64 -1 (*.f64 y (*.f64 (+.f64 (*.f64 -1 t) (*.f64 -1 y)) (*.f64 t x))))) (pow.f64 z 5))))))","(+.f64 (/.f64 x (*.f64 z z)) (fma.f64 -1 (/.f64 (fma.f64 -1 t (neg.f64 y)) (/.f64 (pow.f64 z 3) x)) (*.f64 -1 (+.f64 (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (fma.f64 -1 t (neg.f64 y)) 2)) (*.f64 y (*.f64 x t))) (pow.f64 z 4)) (/.f64 (*.f64 -1 (+.f64 (*.f64 (fma.f64 -1 t (neg.f64 y)) (fma.f64 -1 (*.f64 x (pow.f64 (fma.f64 -1 t (neg.f64 y)) 2)) (*.f64 y (*.f64 x t)))) (*.f64 y (*.f64 (fma.f64 -1 t (neg.f64 y)) (*.f64 x t))))) (pow.f64 z 5))))))","(+.f64 (/.f64 x (*.f64 z z)) (-.f64 (-.f64 (/.f64 (*.f64 (*.f64 1 (+.f64 y t)) x) (pow.f64 z 3)) (/.f64 (*.f64 x (+.f64 (neg.f64 (pow.f64 (-.f64 (neg.f64 t) y) 2)) (*.f64 y t))) (pow.f64 z 4))) (/.f64 (neg.f64 (fma.f64 (-.f64 (neg.f64 t) y) (*.f64 x (+.f64 (neg.f64 (pow.f64 (-.f64 (neg.f64 t) y) 2)) (*.f64 y t))) (*.f64 y (*.f64 t (*.f64 (neg.f64 x) (+.f64 y t)))))) (pow.f64 z 5))))","(+.f64 (*.f64 (+.f64 (/.f64 (+.f64 y t) z) 1) (/.f64 x (*.f64 z z))) (-.f64 (/.f64 (*.f64 (-.f64 (neg.f64 t) y) (+.f64 (*.f64 x (-.f64 (*.f64 y t) (pow.f64 (+.f64 y t) 2))) (*.f64 x (*.f64 y t)))) (pow.f64 z 5)) (/.f64 (*.f64 x (-.f64 (*.f64 y t) (pow.f64 (+.f64 y t) 2))) (pow.f64 z 4))))","(/.f64 x (pow.f64 z 2))","(/.f64 x (*.f64 z z))","(+.f64 (/.f64 x (pow.f64 z 2)) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3)))","(+.f64 (/.f64 x (*.f64 z z)) (neg.f64 (/.f64 (fma.f64 -1 t (neg.f64 y)) (/.f64 (pow.f64 z 3) x))))","(-.f64 (/.f64 x (*.f64 z z)) (/.f64 (*.f64 (neg.f64 x) (+.f64 y t)) (pow.f64 z 3)))","(*.f64 (+.f64 (/.f64 (+.f64 y t) z) 1) (/.f64 x (*.f64 z z)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3))))","(+.f64 (/.f64 x (*.f64 z z)) (*.f64 -1 (+.f64 (/.f64 (fma.f64 -1 t (neg.f64 y)) (/.f64 (pow.f64 z 3) x)) (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (fma.f64 -1 t (neg.f64 y)) 2)) (*.f64 y (*.f64 x t))) (pow.f64 z 4)))))","(-.f64 (-.f64 (/.f64 x (*.f64 z z)) (/.f64 (*.f64 (neg.f64 x) (+.f64 y t)) (pow.f64 z 3))) (/.f64 (*.f64 x (+.f64 (neg.f64 (pow.f64 (-.f64 (neg.f64 t) y) 2)) (*.f64 y t))) (pow.f64 z 4)))","(-.f64 (*.f64 (+.f64 (/.f64 (+.f64 y t) z) 1) (/.f64 x (*.f64 z z))) (/.f64 (*.f64 x (-.f64 (*.f64 y t) (pow.f64 (+.f64 y t) 2))) (pow.f64 z 4)))","(+.f64 (/.f64 x (pow.f64 z 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (+.f64 y t)) (pow.f64 z 5))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 (+.f64 y t) 2) x)) (*.f64 y (*.f64 t x))) (pow.f64 z 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 y (*.f64 t (*.f64 (+.f64 y t) x))) (pow.f64 z 5))) (/.f64 (*.f64 (+.f64 y t) x) (pow.f64 z 3))))))","(+.f64 (/.f64 x (*.f64 z z)) (fma.f64 -1 (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (+.f64 y t) 2)) (*.f64 y (*.f64 x t))) (/.f64 (pow.f64 z 5) (+.f64 y t))) (fma.f64 -1 (/.f64 (fma.f64 -1 (*.f64 x (pow.f64 (+.f64 y t) 2)) (*.f64 y (*.f64 x t))) (pow.f64 z 4)) (fma.f64 -1 (/.f64 y (/.f64 (pow.f64 z 5) (*.f64 t (*.f64 x (+.f64 y t))))) (/.f64 (+.f64 y t) (/.f64 (pow.f64 z 3) x))))))","(+.f64 (/.f64 x (*.f64 z z)) (-.f64 (-.f64 (-.f64 (/.f64 (+.f64 y t) (/.f64 (pow.f64 z 3) x)) (/.f64 (*.f64 y t) (/.f64 (pow.f64 z 5) (*.f64 x (+.f64 y t))))) (/.f64 (*.f64 x (+.f64 (*.f64 y t) (neg.f64 (pow.f64 (+.f64 y t) 2)))) (pow.f64 z 4))) (*.f64 (/.f64 (*.f64 x (+.f64 (*.f64 y t) (neg.f64 (pow.f64 (+.f64 y t) 2)))) (pow.f64 z 5)) (+.f64 y t))))","(+.f64 (/.f64 x (*.f64 z z)) (-.f64 (-.f64 (*.f64 (/.f64 x (pow.f64 z 3)) (+.f64 y t)) (*.f64 (/.f64 y (pow.f64 z 5)) (*.f64 x (*.f64 t (+.f64 y t))))) (+.f64 (*.f64 (/.f64 (*.f64 x (-.f64 (*.f64 y t) (pow.f64 (+.f64 y t) 2))) (pow.f64 z 5)) (+.f64 y t)) (/.f64 (*.f64 x (-.f64 (*.f64 y t) (pow.f64 (+.f64 y t) 2))) (pow.f64 z 4)))))","(/.f64 x (*.f64 (-.f64 z t) z))","(/.f64 x (*.f64 z (-.f64 z t)))","(/.f64 (/.f64 x z) (-.f64 z t))","(+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2))))","(+.f64 (/.f64 x (*.f64 z (-.f64 z t))) (/.f64 (/.f64 (*.f64 x y) (-.f64 z t)) (*.f64 z z)))","(fma.f64 (/.f64 y (-.f64 z t)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 z (-.f64 z t))))","(fma.f64 (/.f64 y (-.f64 z t)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x z) (-.f64 z t)))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (-.f64 z t) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2)))))","(+.f64 (+.f64 (/.f64 x (*.f64 z (-.f64 z t))) (/.f64 (/.f64 (*.f64 x y) (-.f64 z t)) (*.f64 z z))) (/.f64 (*.f64 x (*.f64 y y)) (*.f64 (pow.f64 z 3) (-.f64 z t))))","(fma.f64 (/.f64 y (/.f64 (-.f64 z t) y)) (/.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 y (-.f64 z t)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 z (-.f64 z t)))))","(+.f64 (/.f64 (/.f64 x z) (-.f64 z t)) (*.f64 (/.f64 x (-.f64 z t)) (+.f64 (/.f64 y (*.f64 z z)) (/.f64 (*.f64 y y) (pow.f64 z 3)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (*.f64 (-.f64 z t) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z t) z)) (+.f64 (/.f64 (*.f64 y x) (*.f64 (-.f64 z t) (pow.f64 z 2))) (/.f64 (*.f64 (pow.f64 y 3) x) (*.f64 (-.f64 z t) (pow.f64 z 4))))))","(+.f64 (/.f64 (*.f64 x (*.f64 y y)) (*.f64 (pow.f64 z 3) (-.f64 z t))) (+.f64 (/.f64 x (*.f64 z (-.f64 z t))) (+.f64 (/.f64 (/.f64 (*.f64 x y) (-.f64 z t)) (*.f64 z z)) (*.f64 (/.f64 (pow.f64 y 3) (-.f64 z t)) (/.f64 x (pow.f64 z 4))))))","(fma.f64 (/.f64 y (/.f64 (-.f64 z t) y)) (/.f64 x (pow.f64 z 3)) (+.f64 (/.f64 x (*.f64 z (-.f64 z t))) (fma.f64 (/.f64 y (-.f64 z t)) (/.f64 x (*.f64 z z)) (*.f64 (/.f64 (pow.f64 y 3) (-.f64 z t)) (/.f64 x (pow.f64 z 4))))))","(+.f64 (fma.f64 (/.f64 y (-.f64 z t)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x z) (-.f64 z t))) (*.f64 (/.f64 x (-.f64 z t)) (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 z 4)) (/.f64 (*.f64 y y) (pow.f64 z 3)))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)))","(neg.f64 (/.f64 x (*.f64 y (-.f64 z t))))","(/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))))","(*.f64 -1 (+.f64 (/.f64 x (*.f64 y (-.f64 z t))) (*.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)))))","(-.f64 (/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t)) (*.f64 (/.f64 x (-.f64 z t)) (/.f64 z (*.f64 y y))))","(*.f64 (/.f64 x (-.f64 z t)) (-.f64 (/.f64 -1 y) (/.f64 z (*.f64 y y))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3))))))","(fma.f64 -1 (/.f64 x (*.f64 y (-.f64 z t))) (fma.f64 -1 (*.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y))) (neg.f64 (/.f64 (*.f64 z z) (/.f64 (*.f64 (pow.f64 y 3) (-.f64 z t)) x)))))","(-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)) (/.f64 x (/.f64 (*.f64 (pow.f64 y 3) (-.f64 z t)) (*.f64 z z))))) (/.f64 x (*.f64 y (-.f64 z t))))","(-.f64 (/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t)) (*.f64 (/.f64 x (-.f64 z t)) (+.f64 (/.f64 z (*.f64 y y)) (/.f64 (*.f64 z z) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z t) (pow.f64 y 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3)))))))","(fma.f64 -1 (/.f64 (*.f64 x (pow.f64 z 3)) (*.f64 (-.f64 z t) (pow.f64 y 4))) (fma.f64 -1 (/.f64 x (*.f64 y (-.f64 z t))) (fma.f64 -1 (*.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y))) (neg.f64 (/.f64 (*.f64 z z) (/.f64 (*.f64 (pow.f64 y 3) (-.f64 z t)) x))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)) (/.f64 x (/.f64 (*.f64 (pow.f64 y 3) (-.f64 z t)) (*.f64 z z))))) (/.f64 x (*.f64 y (-.f64 z t)))) (*.f64 (/.f64 (pow.f64 z 3) (-.f64 z t)) (/.f64 x (pow.f64 y 4))))","(-.f64 (*.f64 (/.f64 -1 (-.f64 z t)) (+.f64 (/.f64 x y) (*.f64 (/.f64 x (pow.f64 y 4)) (pow.f64 z 3)))) (*.f64 (/.f64 x (-.f64 z t)) (+.f64 (/.f64 z (*.f64 y y)) (/.f64 (*.f64 z z) (pow.f64 y 3)))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y)))","(neg.f64 (/.f64 x (*.f64 y (-.f64 z t))))","(/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))))","(*.f64 -1 (+.f64 (/.f64 x (*.f64 y (-.f64 z t))) (*.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)))))","(-.f64 (/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t)) (*.f64 (/.f64 x (-.f64 z t)) (/.f64 z (*.f64 y y))))","(*.f64 (/.f64 x (-.f64 z t)) (-.f64 (/.f64 -1 y) (/.f64 z (*.f64 y y))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3))))))","(fma.f64 -1 (/.f64 x (*.f64 y (-.f64 z t))) (fma.f64 -1 (*.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y))) (neg.f64 (/.f64 (*.f64 z z) (/.f64 (*.f64 (pow.f64 y 3) (-.f64 z t)) x)))))","(-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)) (/.f64 x (/.f64 (*.f64 (pow.f64 y 3) (-.f64 z t)) (*.f64 z z))))) (/.f64 x (*.f64 y (-.f64 z t))))","(-.f64 (/.f64 (/.f64 (neg.f64 x) y) (-.f64 z t)) (*.f64 (/.f64 x (-.f64 z t)) (+.f64 (/.f64 z (*.f64 y y)) (/.f64 (*.f64 z z) (pow.f64 y 3)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z t) (pow.f64 y 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z t) y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z t) (pow.f64 y 2)))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z t) (pow.f64 y 3)))))))","(fma.f64 -1 (/.f64 (*.f64 x (pow.f64 z 3)) (*.f64 (-.f64 z t) (pow.f64 y 4))) (fma.f64 -1 (/.f64 x (*.f64 y (-.f64 z t))) (fma.f64 -1 (*.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y))) (neg.f64 (/.f64 (*.f64 z z) (/.f64 (*.f64 (pow.f64 y 3) (-.f64 z t)) x))))))","(-.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z t)) (/.f64 x (*.f64 y y)) (/.f64 x (/.f64 (*.f64 (pow.f64 y 3) (-.f64 z t)) (*.f64 z z))))) (/.f64 x (*.f64 y (-.f64 z t)))) (*.f64 (/.f64 (pow.f64 z 3) (-.f64 z t)) (/.f64 x (pow.f64 y 4))))","(-.f64 (*.f64 (/.f64 -1 (-.f64 z t)) (+.f64 (/.f64 x y) (*.f64 (/.f64 x (pow.f64 y 4)) (pow.f64 z 3)))) (*.f64 (/.f64 x (-.f64 z t)) (+.f64 (/.f64 z (*.f64 y y)) (/.f64 (*.f64 z z) (pow.f64 y 3)))))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 z y) z))","(/.f64 x (*.f64 z (-.f64 z y)))","(/.f64 (/.f64 x z) (-.f64 z y))","(+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2))))","(+.f64 (/.f64 x (*.f64 z (-.f64 z y))) (*.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z))))","(fma.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x z) (-.f64 z y)))","(fma.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 z (-.f64 z y))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (-.f64 z y) (pow.f64 z 3))) (+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2)))))","(+.f64 (+.f64 (/.f64 x (*.f64 z (-.f64 z y))) (*.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z)))) (*.f64 (/.f64 (*.f64 t t) (-.f64 z y)) (/.f64 x (pow.f64 z 3))))","(fma.f64 (/.f64 (*.f64 t t) (-.f64 z y)) (/.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x z) (-.f64 z y))))","(+.f64 (*.f64 (/.f64 x (-.f64 z y)) (+.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) (/.f64 t (*.f64 z z)))) (/.f64 x (*.f64 z (-.f64 z y))))","(+.f64 (/.f64 (*.f64 (pow.f64 t 2) x) (*.f64 (-.f64 z y) (pow.f64 z 3))) (+.f64 (/.f64 (*.f64 (pow.f64 t 3) x) (*.f64 (-.f64 z y) (pow.f64 z 4))) (+.f64 (/.f64 x (*.f64 (-.f64 z y) z)) (/.f64 (*.f64 t x) (*.f64 (-.f64 z y) (pow.f64 z 2))))))","(+.f64 (*.f64 (/.f64 (*.f64 t t) (-.f64 z y)) (/.f64 x (pow.f64 z 3))) (+.f64 (+.f64 (/.f64 x (*.f64 z (-.f64 z y))) (*.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z)))) (*.f64 (/.f64 (pow.f64 t 3) (-.f64 z y)) (/.f64 x (pow.f64 z 4)))))","(fma.f64 (/.f64 (*.f64 t t) (-.f64 z y)) (/.f64 x (pow.f64 z 3)) (fma.f64 (/.f64 (pow.f64 t 3) (-.f64 z y)) (/.f64 x (pow.f64 z 4)) (fma.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z)) (/.f64 (/.f64 x z) (-.f64 z y)))))","(+.f64 (fma.f64 (/.f64 t (-.f64 z y)) (/.f64 x (*.f64 z z)) (/.f64 x (*.f64 z (-.f64 z y)))) (*.f64 (/.f64 x (-.f64 z y)) (+.f64 (/.f64 (*.f64 t t) (pow.f64 z 3)) (/.f64 (pow.f64 t 3) (pow.f64 z 4)))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t)))","(neg.f64 (/.f64 x (*.f64 t (-.f64 z y))))","(/.f64 (neg.f64 x) (*.f64 t (-.f64 z y)))","(/.f64 (/.f64 (neg.f64 x) (-.f64 z y)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))))","(fma.f64 -1 (*.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t))) (neg.f64 (/.f64 x (*.f64 t (-.f64 z y)))))","(neg.f64 (fma.f64 (/.f64 z (-.f64 z y)) (/.f64 (/.f64 x t) t) (/.f64 x (*.f64 t (-.f64 z y)))))","(*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 z (*.f64 t t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3))))))","(fma.f64 -1 (*.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t))) (*.f64 -1 (+.f64 (/.f64 x (*.f64 t (-.f64 z y))) (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) (/.f64 x (pow.f64 t 3))))))","(-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z y)) (/.f64 (/.f64 x t) t) (/.f64 x (*.f64 t (-.f64 z y))))) (*.f64 (/.f64 x (-.f64 z y)) (/.f64 (*.f64 z z) (pow.f64 t 3))))","(-.f64 (*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 z (*.f64 t t)))) (*.f64 (/.f64 x (-.f64 z y)) (/.f64 (*.f64 z z) (pow.f64 t 3))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z y) (pow.f64 t 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3)))))))","(fma.f64 -1 (*.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t))) (fma.f64 -1 (*.f64 (/.f64 (pow.f64 z 3) (-.f64 z y)) (/.f64 x (pow.f64 t 4))) (*.f64 -1 (+.f64 (/.f64 x (*.f64 t (-.f64 z y))) (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) (/.f64 x (pow.f64 t 3)))))))","(+.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z y)) (/.f64 (/.f64 x t) t) (/.f64 x (*.f64 t (-.f64 z y))))) (*.f64 (/.f64 x (-.f64 z y)) (/.f64 (*.f64 z z) (pow.f64 t 3)))) (*.f64 (neg.f64 (/.f64 (pow.f64 z 3) (-.f64 z y))) (/.f64 x (pow.f64 t 4))))","(-.f64 (*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 (*.f64 z z) (pow.f64 t 3)))) (*.f64 (/.f64 x (-.f64 z y)) (+.f64 (/.f64 z (*.f64 t t)) (/.f64 (pow.f64 z 3) (pow.f64 t 4)))))","(*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t)))","(neg.f64 (/.f64 x (*.f64 t (-.f64 z y))))","(/.f64 (neg.f64 x) (*.f64 t (-.f64 z y)))","(/.f64 (/.f64 (neg.f64 x) (-.f64 z y)) t)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))))","(fma.f64 -1 (*.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t))) (neg.f64 (/.f64 x (*.f64 t (-.f64 z y)))))","(neg.f64 (fma.f64 (/.f64 z (-.f64 z y)) (/.f64 (/.f64 x t) t) (/.f64 x (*.f64 t (-.f64 z y)))))","(*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 z (*.f64 t t))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3))))))","(fma.f64 -1 (*.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t))) (*.f64 -1 (+.f64 (/.f64 x (*.f64 t (-.f64 z y))) (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) (/.f64 x (pow.f64 t 3))))))","(-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z y)) (/.f64 (/.f64 x t) t) (/.f64 x (*.f64 t (-.f64 z y))))) (*.f64 (/.f64 x (-.f64 z y)) (/.f64 (*.f64 z z) (pow.f64 t 3))))","(-.f64 (*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 z (*.f64 t t)))) (*.f64 (/.f64 x (-.f64 z y)) (/.f64 (*.f64 z z) (pow.f64 t 3))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (*.f64 (-.f64 z y) (pow.f64 t 2)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (*.f64 (-.f64 z y) (pow.f64 t 4)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (-.f64 z y) t))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (*.f64 (-.f64 z y) (pow.f64 t 3)))))))","(fma.f64 -1 (*.f64 (/.f64 z (-.f64 z y)) (/.f64 x (*.f64 t t))) (fma.f64 -1 (*.f64 (/.f64 (pow.f64 z 3) (-.f64 z y)) (/.f64 x (pow.f64 t 4))) (*.f64 -1 (+.f64 (/.f64 x (*.f64 t (-.f64 z y))) (*.f64 (/.f64 (*.f64 z z) (-.f64 z y)) (/.f64 x (pow.f64 t 3)))))))","(+.f64 (-.f64 (neg.f64 (fma.f64 (/.f64 z (-.f64 z y)) (/.f64 (/.f64 x t) t) (/.f64 x (*.f64 t (-.f64 z y))))) (*.f64 (/.f64 x (-.f64 z y)) (/.f64 (*.f64 z z) (pow.f64 t 3)))) (*.f64 (neg.f64 (/.f64 (pow.f64 z 3) (-.f64 z y))) (/.f64 x (pow.f64 t 4))))","(-.f64 (*.f64 (/.f64 x (-.f64 z y)) (-.f64 (/.f64 -1 t) (/.f64 (*.f64 z z) (pow.f64 t 3)))) (*.f64 (/.f64 x (-.f64 z y)) (+.f64 (/.f64 z (*.f64 t t)) (/.f64 (pow.f64 z 3) (pow.f64 t 4)))))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(/.f64 (neg.f64 x) y)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(*.f64 -1 (+.f64 (/.f64 z (/.f64 (*.f64 y y) x)) (/.f64 x y)))","(-.f64 (/.f64 (neg.f64 x) y) (/.f64 (/.f64 (*.f64 x z) y) y))","(*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (fma.f64 -1 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (neg.f64 (/.f64 x y))))","(-.f64 (-.f64 (/.f64 (neg.f64 x) y) (*.f64 (/.f64 (*.f64 z z) (pow.f64 y 3)) x)) (/.f64 (/.f64 (*.f64 x z) y) y))","(-.f64 (*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y))) (*.f64 (/.f64 x (pow.f64 y 3)) (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (fma.f64 -1 (/.f64 (*.f64 x (pow.f64 z 3)) (pow.f64 y 4)) (fma.f64 -1 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (neg.f64 (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 x) y) (*.f64 (/.f64 (*.f64 z z) (pow.f64 y 3)) x)) (*.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) x)) (/.f64 (/.f64 (*.f64 x z) y) y))","(+.f64 (neg.f64 (*.f64 x (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (/.f64 (*.f64 z z) (pow.f64 y 3))))) (*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y))))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 x z) (/.f64 (*.f64 x y) (*.f64 z z)))","(+.f64 (/.f64 x z) (/.f64 y (/.f64 z (/.f64 x z))))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 x y) (*.f64 z z)) (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))))","(+.f64 (/.f64 x z) (+.f64 (/.f64 y (/.f64 z (/.f64 x z))) (/.f64 y (/.f64 (/.f64 (pow.f64 z 3) x) y))))","(+.f64 (/.f64 x z) (*.f64 x (+.f64 (/.f64 y (*.f64 z z)) (/.f64 (*.f64 y y) (pow.f64 z 3)))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(+.f64 (/.f64 (*.f64 x y) (*.f64 z z)) (+.f64 (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 y (/.f64 z (/.f64 x z))) (+.f64 (/.f64 y (/.f64 (/.f64 (pow.f64 z 3) x) y)) (+.f64 (/.f64 x z) (/.f64 x (/.f64 (pow.f64 z 4) (pow.f64 y 3))))))","(+.f64 (*.f64 x (+.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z)))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 x z) (/.f64 (*.f64 x y) (*.f64 z z)))","(+.f64 (/.f64 x z) (/.f64 y (/.f64 z (/.f64 x z))))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 x y) (*.f64 z z)) (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))))","(+.f64 (/.f64 x z) (+.f64 (/.f64 y (/.f64 z (/.f64 x z))) (/.f64 y (/.f64 (/.f64 (pow.f64 z 3) x) y))))","(+.f64 (/.f64 x z) (*.f64 x (+.f64 (/.f64 y (*.f64 z z)) (/.f64 (*.f64 y y) (pow.f64 z 3)))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(+.f64 (/.f64 (*.f64 x y) (*.f64 z z)) (+.f64 (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 y (/.f64 z (/.f64 x z))) (+.f64 (/.f64 y (/.f64 (/.f64 (pow.f64 z 3) x) y)) (+.f64 (/.f64 x z) (/.f64 x (/.f64 (pow.f64 z 4) (pow.f64 y 3))))))","(+.f64 (*.f64 x (+.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z)))","(/.f64 x z)","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (/.f64 x z))","(+.f64 (/.f64 x z) (/.f64 (*.f64 x y) (*.f64 z z)))","(+.f64 (/.f64 x z) (/.f64 y (/.f64 z (/.f64 x z))))","(*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z)))","(+.f64 (/.f64 (*.f64 x y) (*.f64 z z)) (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))))","(+.f64 (/.f64 x z) (+.f64 (/.f64 y (/.f64 z (/.f64 x z))) (/.f64 y (/.f64 (/.f64 (pow.f64 z 3) x) y))))","(+.f64 (/.f64 x z) (*.f64 x (+.f64 (/.f64 y (*.f64 z z)) (/.f64 (*.f64 y y) (pow.f64 z 3)))))","(+.f64 (/.f64 (*.f64 y x) (pow.f64 z 2)) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) x) (pow.f64 z 4)) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) x) (pow.f64 z 3)) (/.f64 x z))))","(+.f64 (/.f64 (*.f64 x y) (*.f64 z z)) (+.f64 (+.f64 (/.f64 x z) (/.f64 (*.f64 y y) (/.f64 (pow.f64 z 3) x))) (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 z 4) x))))","(+.f64 (/.f64 y (/.f64 z (/.f64 x z))) (+.f64 (/.f64 y (/.f64 (/.f64 (pow.f64 z 3) x) y)) (+.f64 (/.f64 x z) (/.f64 x (/.f64 (pow.f64 z 4) (pow.f64 y 3))))))","(+.f64 (*.f64 x (+.f64 (/.f64 (*.f64 y y) (pow.f64 z 3)) (/.f64 (pow.f64 y 3) (pow.f64 z 4)))) (*.f64 (+.f64 (/.f64 y z) 1) (/.f64 x z)))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(/.f64 (neg.f64 x) y)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(*.f64 -1 (+.f64 (/.f64 z (/.f64 (*.f64 y y) x)) (/.f64 x y)))","(-.f64 (/.f64 (neg.f64 x) y) (/.f64 (/.f64 (*.f64 x z) y) y))","(*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (fma.f64 -1 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (neg.f64 (/.f64 x y))))","(-.f64 (-.f64 (/.f64 (neg.f64 x) y) (*.f64 (/.f64 (*.f64 z z) (pow.f64 y 3)) x)) (/.f64 (/.f64 (*.f64 x z) y) y))","(-.f64 (*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y))) (*.f64 (/.f64 x (pow.f64 y 3)) (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (fma.f64 -1 (/.f64 (*.f64 x (pow.f64 z 3)) (pow.f64 y 4)) (fma.f64 -1 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (neg.f64 (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 x) y) (*.f64 (/.f64 (*.f64 z z) (pow.f64 y 3)) x)) (*.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) x)) (/.f64 (/.f64 (*.f64 x z) y) y))","(+.f64 (neg.f64 (*.f64 x (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (/.f64 (*.f64 z z) (pow.f64 y 3))))) (*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y))))","(*.f64 -1 (/.f64 x y))","(neg.f64 (/.f64 x y))","(/.f64 (neg.f64 x) y)","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y)))","(*.f64 -1 (+.f64 (/.f64 z (/.f64 (*.f64 y y) x)) (/.f64 x y)))","(-.f64 (/.f64 (neg.f64 x) y) (/.f64 (/.f64 (*.f64 x z) y) y))","(*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y))))","(fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (fma.f64 -1 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (neg.f64 (/.f64 x y))))","(-.f64 (-.f64 (/.f64 (neg.f64 x) y) (*.f64 (/.f64 (*.f64 z z) (pow.f64 y 3)) x)) (/.f64 (/.f64 (*.f64 x z) y) y))","(-.f64 (*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y))) (*.f64 (/.f64 x (pow.f64 y 3)) (*.f64 z z)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 z x) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 3) x) (pow.f64 y 4))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 z 2) x) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))))","(fma.f64 -1 (/.f64 z (/.f64 (*.f64 y y) x)) (fma.f64 -1 (/.f64 (*.f64 x (pow.f64 z 3)) (pow.f64 y 4)) (fma.f64 -1 (/.f64 (*.f64 z z) (/.f64 (pow.f64 y 3) x)) (neg.f64 (/.f64 x y)))))","(-.f64 (-.f64 (-.f64 (/.f64 (neg.f64 x) y) (*.f64 (/.f64 (*.f64 z z) (pow.f64 y 3)) x)) (*.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) x)) (/.f64 (/.f64 (*.f64 x z) y) y))","(+.f64 (neg.f64 (*.f64 x (+.f64 (/.f64 (pow.f64 z 3) (pow.f64 y 4)) (/.f64 (*.f64 z z) (pow.f64 y 3))))) (*.f64 (/.f64 x y) (-.f64 -1 (/.f64 z y))))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(/.f64 x (-.f64 z y))","(*.f64 -1 (/.f64 y x))","(neg.f64 (/.f64 y x))","(/.f64 (neg.f64 y) x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (neg.f64 (/.f64 y x)) (/.f64 z x))","(-.f64 (/.f64 z x) (/.f64 y x))","(/.f64 (-.f64 z y) x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (neg.f64 (/.f64 y x)) (/.f64 z x))","(-.f64 (/.f64 z x) (/.f64 y x))","(/.f64 (-.f64 z y) x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (neg.f64 (/.f64 y x)) (/.f64 z x))","(-.f64 (/.f64 z x) (/.f64 y x))","(/.f64 (-.f64 z y) x)","(/.f64 z x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (neg.f64 (/.f64 y x)) (/.f64 z x))","(-.f64 (/.f64 z x) (/.f64 y x))","(/.f64 (-.f64 z y) x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (neg.f64 (/.f64 y x)) (/.f64 z x))","(-.f64 (/.f64 z x) (/.f64 y x))","(/.f64 (-.f64 z y) x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (neg.f64 (/.f64 y x)) (/.f64 z x))","(-.f64 (/.f64 z x) (/.f64 y x))","(/.f64 (-.f64 z y) x)","(/.f64 z x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (neg.f64 (/.f64 y x)) (/.f64 z x))","(-.f64 (/.f64 z x) (/.f64 y x))","(/.f64 (-.f64 z y) x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (neg.f64 (/.f64 y x)) (/.f64 z x))","(-.f64 (/.f64 z x) (/.f64 y x))","(/.f64 (-.f64 z y) x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (neg.f64 (/.f64 y x)) (/.f64 z x))","(-.f64 (/.f64 z x) (/.f64 y x))","(/.f64 (-.f64 z y) x)","(/.f64 z x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (neg.f64 (/.f64 y x)) (/.f64 z x))","(-.f64 (/.f64 z x) (/.f64 y x))","(/.f64 (-.f64 z y) x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (neg.f64 (/.f64 y x)) (/.f64 z x))","(-.f64 (/.f64 z x) (/.f64 y x))","(/.f64 (-.f64 z y) x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (neg.f64 (/.f64 y x)) (/.f64 z x))","(-.f64 (/.f64 z x) (/.f64 y x))","(/.f64 (-.f64 z y) x)","(*.f64 -1 (/.f64 y x))","(neg.f64 (/.f64 y x))","(/.f64 (neg.f64 y) x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (neg.f64 (/.f64 y x)) (/.f64 z x))","(-.f64 (/.f64 z x) (/.f64 y x))","(/.f64 (-.f64 z y) x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (neg.f64 (/.f64 y x)) (/.f64 z x))","(-.f64 (/.f64 z x) (/.f64 y x))","(/.f64 (-.f64 z y) x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (neg.f64 (/.f64 y x)) (/.f64 z x))","(-.f64 (/.f64 z x) (/.f64 y x))","(/.f64 (-.f64 z y) x)","(*.f64 -1 (/.f64 y x))","(neg.f64 (/.f64 y x))","(/.f64 (neg.f64 y) x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (neg.f64 (/.f64 y x)) (/.f64 z x))","(-.f64 (/.f64 z x) (/.f64 y x))","(/.f64 (-.f64 z y) x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (neg.f64 (/.f64 y x)) (/.f64 z x))","(-.f64 (/.f64 z x) (/.f64 y x))","(/.f64 (-.f64 z y) x)","(+.f64 (/.f64 z x) (*.f64 -1 (/.f64 y x)))","(+.f64 (neg.f64 (/.f64 y x)) (/.f64 z x))","(-.f64 (/.f64 z x) (/.f64 y x))","(/.f64 (-.f64 z y) x)"]],"stop":[["node limit",1]],"time":52.9248046875,"type":"simplify"},{"compiler":[[11490,4756]],"time":84.714111328125,"type":"eval"},{"alts":[["(/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (-.f64 z t))","done",2.2208930690948714],["(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","done",2.1756393093264297],["(*.f64 (/.f64 1 (-.f64 z y)) (*.f64 x (/.f64 1 (-.f64 z t))))","fresh",2.9118470442035918],["(*.f64 (pow.f64 (/.f64 (-.f64 z y) x) -1) (/.f64 1 (-.f64 z t)))","done",2.6175756966310564],["(*.f64 (/.f64 (/.f64 1 (-.f64 z y)) (-.f64 z t)) x)","fresh",9.963393342893895],["(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","fresh",10.389617560054827]],"compiler":[[15,10],[13,8],[17,12],[17,12],[15,10],[13,8]],"count":[[369,6]],"kept":[{"done":[2,2],"fresh":[3,3],"new":[363,0],"picked":[1,1]}],"min-error":[0],"time":140.056884765625,"type":"prune"},{"accuracy":[0.6958526242194227],"baseline":[2.1756393093264297],"branch":[["x",1.1268911943776754,2],["y",2.1756393093264292,1],["z",1.0022373400394684,2],["t",2.1756393093264292,1],["(/.f64 x (*.f64 (-.f64 y z) (-.f64 t z)))",1.1484375,2],["(*.f64 (-.f64 y z) (-.f64 t z))",0.6958526242194227,3]],"compiler":[[5,4],[5,4],[5,4],[5,4],[13,8],[11,7],[158,59]],"count":[[14,3]],"inputs":[["(*.f64 (/.f64 1 (-.f64 z y)) (*.f64 x (/.f64 1 (-.f64 z t))))","(*.f64 (/.f64 (/.f64 1 (-.f64 z y)) (-.f64 z t)) x)","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 x (*.f64 (-.f64 z y) (-.f64 z t)))","(/.f64 1 (/.f64 (-.f64 z y) (/.f64 x (-.f64 z t))))","(*.f64 (pow.f64 (/.f64 (-.f64 z y) x) -1) (/.f64 1 (-.f64 z t)))","(/.f64 (*.f64 (/.f64 1 (-.f64 z y)) x) (-.f64 z t))","(*.f64 (/.f64 x (-.f64 z y)) (/.f64 1 (-.f64 z t)))","(pow.f64 (/.f64 (*.f64 (-.f64 z y) (-.f64 z t)) x) -1)","(pow.f64 (*.f64 (/.f64 (-.f64 z y) x) (-.f64 z t)) -1)","(*.f64 (/.f64 x 1) (/.f64 (/.f64 1 (-.f64 z y)) (-.f64 z t)))","(*.f64 (/.f64 (sqrt.f64 x) (-.f64 z t)) (/.f64 (sqrt.f64 x) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))","(/.f64 x (*.f64 (-.f64 y z) (-.f64 t z)))"]],"link":["."],"name":["Data.Random.Distribution.Triangular:triangularCDF from random-fu-0.2.6.2, B"],"oracle":[37.52867427396498],"outputs":[["(pow.f64 (*.f64 (/.f64 (-.f64 z y) x) (-.f64 z t)) -1)","(/.f64 x (*.f64 (-.f64 z t) (-.f64 z y)))","(/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))"]],"time":60.656982421875,"times":[["x",16.2470703125],["y",5.551025390625],["z",10.923095703125],["t",5.77197265625],["(/.f64 x (*.f64 (-.f64 y z) (-.f64 t z)))",7.240966796875],["(*.f64 (-.f64 y z) (-.f64 t z))",12.2958984375]],"type":"regimes"},{"bstep":[[1.9754063391879477e+214,8.109207338887475e+218,0.031005859375],[-3.219916476796728e+225,-2.025008428397642e+218,0.10400390625]],"compiler":[[9,7],[11,7]],"method":["left-value","left-value"],"time":0.253173828125,"type":"bsearch"},{"compiler":[[53,23]],"egraph":[[4,55,72,0.000259625],[3,52,72,0.000200875],[2,46,72,0.000141958],[1,35,72,8.758299999999999e-5],[0,25,72,4.0125e-5]],"inputs":[["(if (<=.f64 (*.f64 (-.f64 y z) (-.f64 t z)) -1999999999999999856908446897273053991218829224892973825072790086090102342996835156604833180614213868754704018847177272268508969245882922355676436081259722717230056104357172387216661060317013292261774097833310920647333375901696) (pow.f64 (*.f64 (/.f64 (-.f64 z y) x) (-.f64 z t)) -1) (if (<=.f64 (*.f64 (-.f64 y z) (-.f64 t z)) 19999999999999999088892533902972076246934850801638156521986428846179361036904542766447520422260841212068416615187889431415480256613826681172330695228837644621737717981917473931530878670755986842785085156555654955008) (/.f64 x (*.f64 (-.f64 z t) (-.f64 z y))) (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (*.f64 (-.f64 y z) (-.f64 t z)) -1999999999999999856908446897273053991218829224892973825072790086090102342996835156604833180614213868754704018847177272268508969245882922355676436081259722717230056104357172387216661060317013292261774097833310920647333375901696) (pow.f64 (*.f64 (/.f64 (-.f64 z y) x) (-.f64 z t)) -1) (if (<=.f64 (*.f64 (-.f64 y z) (-.f64 t z)) 19999999999999999088892533902972076246934850801638156521986428846179361036904542766447520422260841212068416615187889431415480256613826681172330695228837644621737717981917473931530878670755986842785085156555654955008) (/.f64 x (*.f64 (-.f64 z t) (-.f64 z y))) (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))))","(if (<=.f64 (*.f64 (-.f64 y z) (-.f64 t z)) -1999999999999999856908446897273053991218829224892973825072790086090102342996835156604833180614213868754704018847177272268508969245882922355676436081259722717230056104357172387216661060317013292261774097833310920647333375901696) (pow.f64 (*.f64 (/.f64 (-.f64 z y) x) (-.f64 z t)) -1) (if (<=.f64 (*.f64 (-.f64 y z) (-.f64 t z)) 19999999999999999088892533902972076246934850801638156521986428846179361036904542766447520422260841212068416615187889431415480256613826681172330695228837644621737717981917473931530878670755986842785085156555654955008) (/.f64 x (*.f64 (-.f64 z y) (-.f64 z t))) (/.f64 (/.f64 x (-.f64 z y)) (-.f64 z t))))"]],"stop":[["fuel",1],["saturated",1]],"time":9.7958984375,"type":"simplify"},{"time":0.02001953125,"type":"soundness"},{"compiler":[[53,23],[53,23],[53,23]],"remove-preprocessing":[[]],"time":23.01611328125,"type":"end"}]