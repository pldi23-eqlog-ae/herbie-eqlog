[{"compiler":[[20,13]],"method":["search"],"sampling":[[12,0.046760670786183844,0.888452744937493,0.06478658427632311],[11,0.031173780524122563,0.9040396351995543,0.06478658427632311],[10,0.015586890262061281,0.9819740865098607,0.0024390232280779856],[9,0.0,0.997560976771922,0.0024390232280779856],[8,0.0,0.997560976771922,0.0024390232280779856],[7,0.0,0.997560976771922,0.0024390232280779856],[6,0.0,0.997560976771922,0.0024390232280779856],[5,0.0,0.997560976771922,0.0024390232280779856],[4,0.0,0.997560976771922,0.0024390232280779856],[3,0.0,0.997560976771922,0.0024390232280779856],[2,0.0,0.997560976771922,0.0024390232280779856],[1,0.0,0.997560976771922,0.0024390232280779856],[0,0.0,0.997560976771922,0.0024390232280779856]],"time":182.945068359375,"type":"analyze"},{"outcomes":[["body",256,"invalid",177.693603515625,3159],["body",256,"valid",488.120361328125,8256]],"time":675.794921875,"type":"sample"},{"compiler":[[19,12]],"egraph":[[1,5,5,1.0458e-5],[0,5,5,9.208e-6],[9,7502,231,0.045361291000000005],[8,5268,231,0.036672750000000004],[7,2806,231,0.025278250000000002],[6,1800,231,0.014750042],[5,1421,231,0.009242667],[4,1021,231,0.005976501],[3,674,231,0.003283251],[2,370,231,0.0017192089999999998],[1,171,231,0.000742084],[0,66,231,0.000231792]],"inputs":[["0","1","2","3","4"],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","(/.f64 (*.f64 (*.f64 y x) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","(/.f64 (*.f64 (*.f64 z y) x) (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 t a))))","(/.f64 (*.f64 (*.f64 t y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 x a))))","(/.f64 (*.f64 (*.f64 a y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t x))))","(/.f64 (*.f64 (*.f64 x z) y) (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 t a))))","(/.f64 (*.f64 (*.f64 x t) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 y a))))","(/.f64 (*.f64 (*.f64 x a) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t y))))","(/.f64 (*.f64 (*.f64 x y) t) (sqrt.f64 (-.f64 (*.f64 t t) (*.f64 z a))))","(/.f64 (*.f64 (*.f64 x y) a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 t z))))","(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","0","2","3","4","3"],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","(/.f64 (*.f64 x y) (/.f64 (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) z))","(/.f64 y (/.f64 (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (*.f64 x z)))","(*.f64 (/.f64 x (/.f64 (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) z)) y)","(*.f64 y (/.f64 x (/.f64 (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) z)))","(/.f64 (*.f64 (*.f64 y x) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","(/.f64 (*.f64 x y) (/.f64 (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) z))","(/.f64 y (/.f64 (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (*.f64 x z)))","(*.f64 (/.f64 x (/.f64 (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) z)) y)","(*.f64 y (/.f64 x (/.f64 (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) z)))","(/.f64 (*.f64 (*.f64 z y) x) (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 t a))))","(/.f64 (*.f64 x (*.f64 y z)) (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 t a))))","(/.f64 x (/.f64 (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 t a))) (*.f64 y z)))","(*.f64 (/.f64 (*.f64 x y) (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 t a)))) z)","(*.f64 z (/.f64 (*.f64 x y) (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 t a)))))","(*.f64 y (*.f64 x (/.f64 z (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 t a))))))","(*.f64 (*.f64 x y) (/.f64 z (sqrt.f64 (-.f64 (*.f64 x x) (*.f64 t a)))))","(/.f64 (*.f64 (*.f64 t y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 x a))))","(/.f64 (*.f64 z (*.f64 y t)) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 x a))))","(*.f64 (/.f64 (*.f64 y t) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 x a)))) z)","(*.f64 (/.f64 t (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 x a)))) (*.f64 y z))","(*.f64 (*.f64 y z) (/.f64 t (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 x a)))))","(*.f64 y (*.f64 z (/.f64 t (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 x a))))))","(*.f64 y (*.f64 z (/.f64 t (sqrt.f64 (fma.f64 x (neg.f64 a) (*.f64 z z))))))","(/.f64 (*.f64 (*.f64 a y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t x))))","(/.f64 (*.f64 z (*.f64 y a)) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 x t))))","(/.f64 y (/.f64 (/.f64 (sqrt.f64 (fma.f64 z z (*.f64 t (neg.f64 x)))) z) a))","(/.f64 y (/.f64 (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 x t))) (*.f64 z a)))","(*.f64 (/.f64 z (/.f64 (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 x t))) y)) a)","(/.f64 z (/.f64 (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 x t))) (*.f64 y a)))","(/.f64 (*.f64 y (*.f64 z a)) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 x t))))","(/.f64 (*.f64 (*.f64 x z) y) (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 t a))))","(/.f64 (*.f64 x z) (/.f64 (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 t a))) y))","(*.f64 (/.f64 (*.f64 x z) (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 t a)))) y)","(*.f64 (/.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 t a)))) (*.f64 y z))","(*.f64 z (*.f64 (/.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 t a)))) y))","(*.f64 z (*.f64 y (/.f64 x (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 t a))))))","(*.f64 x (*.f64 y (/.f64 z (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 t a))))))","(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 y y) (*.f64 t a)))))","(/.f64 (*.f64 (*.f64 x t) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 y a))))","(/.f64 (*.f64 x (*.f64 z t)) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 y a))))","(/.f64 x (/.f64 (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 y a))) (*.f64 z t)))","(/.f64 t (/.f64 (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 y a))) (*.f64 x z)))","(*.f64 (/.f64 (*.f64 x z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 y a)))) t)","(*.f64 x (/.f64 (*.f64 z t) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 y a)))))","(/.f64 (*.f64 (*.f64 x a) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t y))))","(/.f64 (*.f64 x (*.f64 z a)) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 y t))))","(*.f64 (/.f64 (*.f64 x a) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 y t)))) z)","(*.f64 (/.f64 z (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 y t)))) (*.f64 x a))","(*.f64 (*.f64 x a) (/.f64 z (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 y t)))))","(*.f64 x (*.f64 a (/.f64 z (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 y t))))))","(*.f64 x (*.f64 z (/.f64 a (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 y t))))))","(/.f64 (*.f64 (*.f64 x y) t) (sqrt.f64 (-.f64 (*.f64 t t) (*.f64 z a))))","(/.f64 (*.f64 x (*.f64 y t)) (sqrt.f64 (-.f64 (*.f64 t t) (*.f64 z a))))","(*.f64 (/.f64 (*.f64 y t) (sqrt.f64 (-.f64 (*.f64 t t) (*.f64 z a)))) x)","(*.f64 x (*.f64 t (/.f64 y (sqrt.f64 (fma.f64 z (neg.f64 a) (*.f64 t t))))))","(*.f64 (*.f64 y t) (/.f64 x (sqrt.f64 (-.f64 (*.f64 t t) (*.f64 z a)))))","(/.f64 (*.f64 (*.f64 x y) a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 t z))))","(/.f64 (*.f64 x y) (/.f64 (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 z t))) a))","(/.f64 x (/.f64 (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 z t))) (*.f64 y a)))","(/.f64 a (/.f64 (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 z t))) (*.f64 x y)))","(*.f64 x (/.f64 (*.f64 y a) (sqrt.f64 (fma.f64 z (neg.f64 t) (*.f64 a a)))))","(*.f64 x (/.f64 (*.f64 y a) (sqrt.f64 (-.f64 (*.f64 a a) (*.f64 z t)))))","(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))))","(/.f64 (*.f64 x y) (/.f64 (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) z))","(/.f64 y (/.f64 (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (*.f64 x z)))","(*.f64 (/.f64 x (/.f64 (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) z)) y)","(*.f64 y (/.f64 x (/.f64 (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) z)))"]],"stop":[["unsound",1],["node limit",1]],"symmetry":[["(sort x y)","(sort t a)"]],"time":73.748046875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[15,4410,21,0.051642792],[14,4410,21,0.043890833],[13,4330,21,0.037942],[12,4200,21,0.031964916999999995],[11,4086,21,0.025868791999999998],[10,2692,21,0.020039709],[9,1391,21,0.012146292],[8,604,21,0.006449667],[7,343,21,0.003597917],[6,267,21,0.0023410009999999997],[5,199,21,0.0015314589999999998],[4,143,21,0.000981292],[3,95,21,0.000578584],[2,56,21,0.000318334],[1,26,21,0.000157084],[0,13,21,5.2834e-5]],"inputs":[["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","(/.f64 (*.f64 x y) (/.f64 (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) z))","(/.f64 x (/.f64 (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (*.f64 y z)))","(*.f64 (/.f64 x (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (*.f64 y z))","(*.f64 (*.f64 y z) (/.f64 x (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (fma.f64 t (neg.f64 a) (*.f64 z z)))))","(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))"]],"stop":[["saturated",1]],"time":63.078125,"type":"simplify"},{"compiler":[[33,15]],"time":0.35693359375,"type":"eval"},{"alts":[["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","fresh",23.48835011319649],["(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","next",22.84624575509234]],"compiler":[[19,12],[19,12],[19,12],[19,12]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[19.729032288643882],"time":1.5458984375,"type":"prune"},{"compiler":[[60,12]],"locations":[["(-.f64 (*.f64 z z) (*.f64 t a))",0.41796875000000006,true],["(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))",1.530853810686621,true],["(/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))",7.868969524542509,true],["(sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))",23.216998017573008,true]],"time":9.108154296875,"type":"localize"},{"count":[[4,120]],"series":[["(-.f64 (*.f64 z z) (*.f64 t a))","a","-inf",0.22705078125],["(-.f64 (*.f64 z z) (*.f64 t a))","a","inf",0.223876953125],["(-.f64 (*.f64 z z) (*.f64 t a))","a","0",0.256103515625],["(-.f64 (*.f64 z z) (*.f64 t a))","t","-inf",0.2412109375],["(-.f64 (*.f64 z z) (*.f64 t a))","t","inf",0.22216796875],["(-.f64 (*.f64 z z) (*.f64 t a))","t","0",0.254150390625],["(-.f64 (*.f64 z z) (*.f64 t a))","z","-inf",0.1640625],["(-.f64 (*.f64 z z) (*.f64 t a))","z","inf",0.2880859375],["(-.f64 (*.f64 z z) (*.f64 t a))","z","0",0.234130859375],["(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","a","-inf",0.77490234375],["(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","a","inf",0.7939453125],["(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","a","0",0.592041015625],["(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","t","-inf",0.73193359375],["(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","t","inf",0.777099609375],["(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","t","0",0.55517578125],["(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","z","-inf",0.492919921875],["(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","z","inf",0.56494140625],["(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","z","0",1.029052734375],["(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","y","-inf",0.363037109375],["(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","y","inf",1.8349609375],["(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","y","0",0.6669921875],["(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","x","-inf",0.37890625],["(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","x","inf",0.5791015625],["(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","x","0",0.97119140625],["(/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","a","-inf",2.370849609375],["(/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","a","inf",1.16015625],["(/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","a","0",0.77685546875],["(/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","t","-inf",0.903076171875],["(/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","t","inf",1.11083984375],["(/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","t","0",0.734130859375],["(/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","z","-inf",0.5029296875],["(/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","z","inf",1.547119140625],["(/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","z","0",1.47900390625],["(/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","y","-inf",0.367919921875],["(/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","y","inf",0.450927734375],["(/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","y","0",1.31005859375],["(sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))","a","-inf",0.414794921875],["(sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))","a","inf",0.56005859375],["(sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))","a","0",0.389892578125],["(sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))","t","-inf",0.43310546875],["(sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))","t","inf",0.65087890625],["(sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))","t","0",0.405029296875],["(sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))","z","-inf",0.348876953125],["(sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))","z","inf",0.4990234375],["(sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))","z","0",0.8828125]],"time":31.201904296875,"type":"series"},{"count":[[4,354]],"egraph":[[2,4025,58,0.032223208999999996],[1,288,61,0.005472917],[0,13,61,0.000285375]],"inputs":[["(sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))","(/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","(-.f64 (*.f64 z z) (*.f64 t a))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))) (cbrt.f64 (exp.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))) (log.f64 (cbrt.f64 (exp.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))) (log.f64 (sqrt.f64 (exp.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) 2)) (sqrt.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) 2) 1/2) (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 z 6) (pow.f64 (*.f64 t a) 3))) (sqrt.f64 (fma.f64 (*.f64 t a) (fma.f64 t a (*.f64 z z)) (pow.f64 z 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (pow.f64 z 4) (pow.f64 (*.f64 t a) 2))) (hypot.f64 z (sqrt.f64 (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (sqrt.f64 (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (*.f64 t (neg.f64 a))) z)))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (fma.f64 t (neg.f64 a) (*.f64 t a))) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (*.f64 z z) (*.f64 t a))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z))) (cbrt.f64 (exp.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z))))) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z)))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (*.f64 y (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 z (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z y) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z)) (cbrt.f64 (/.f64 (pow.f64 (*.f64 z y) 2) (-.f64 (*.f64 z z) (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 z y) 2) (-.f64 (*.f64 z z) (*.f64 t a)))) (cbrt.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 z y)) 2) (*.f64 (cbrt.f64 (*.f64 z y)) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z)) (sqrt.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 z y)) (*.f64 (sqrt.f64 (*.f64 z y)) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 z (neg.f64 y)) (/.f64 1 (neg.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) -1/2) (*.f64 z y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z 1) (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y 1) (/.f64 z (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 z y)) 2) 1) (/.f64 (cbrt.f64 (*.f64 z y)) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 z y)) 1) (/.f64 (sqrt.f64 (*.f64 z y)) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (/.f64 y (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (/.f64 z (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (/.f64 (*.f64 z y) (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 z y)) 2) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (cbrt.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 z y)) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (/.f64 (sqrt.f64 (*.f64 z y)) (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)) (/.f64 y (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)) (/.f64 z (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)) (/.f64 (*.f64 z y) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 z y)) 2) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)) (/.f64 (cbrt.f64 (*.f64 z y)) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 z y) (neg.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (*.f64 z y) 2) (-.f64 (*.f64 z z) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 z y) 3) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y))))) (cbrt.f64 (exp.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 (*.f64 x y) z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 x y) z) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 x y) z)) (neg.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 x y) z) 1) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 x y) z) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 x y) z) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y x) (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z (neg.f64 y)) x) (neg.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x y) (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (*.f64 z (neg.f64 y))) (neg.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (*.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z z) (*.f64 t (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z z) (*.f64 (*.f64 t (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z z) (fma.f64 t (neg.f64 a) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 z z) (*.f64 t a)) (fma.f64 t (neg.f64 a) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 z z) (*.f64 t a)) (fma.f64 (*.f64 t (neg.f64 a)) 1 (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 z z) (*.f64 t a)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t a))) (pow.f64 (cbrt.f64 (*.f64 t a)) 2) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 z z) (*.f64 t a)) (*.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 z z) (*.f64 t a)) (+.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) (-.f64 (*.f64 z z) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t (neg.f64 a)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (*.f64 z z) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z z) 1 (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z z) 1 (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z z) 1 (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z z) 1 (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z z) 1 (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z z) 1 (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z z) 1 (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z z) 1 (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (cbrt.f64 (exp.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))) (log.f64 (cbrt.f64 (exp.f64 (-.f64 (*.f64 z z) (*.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 (*.f64 z z) (*.f64 t a))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 (*.f64 z z) (*.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (*.f64 z z) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (*.f64 (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) 2) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4) (*.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 z 6) (pow.f64 (*.f64 t a) 3)) (/.f64 1 (fma.f64 (*.f64 t a) (fma.f64 t a (*.f64 z z)) (pow.f64 z 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 z 4) (pow.f64 (*.f64 t a) 2)) (/.f64 1 (fma.f64 t a (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 z (sqrt.f64 (*.f64 t a))) (-.f64 z (sqrt.f64 (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 t a) (fma.f64 t a (*.f64 z z)) (pow.f64 z 4)) (-.f64 (pow.f64 z 6) (pow.f64 (*.f64 t a) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 t a (*.f64 z z)) (-.f64 (pow.f64 z 4) (pow.f64 (*.f64 t a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 z 6) (pow.f64 (*.f64 t a) 3)) (fma.f64 (*.f64 t a) (fma.f64 t a (*.f64 z z)) (pow.f64 z 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 z 4) (pow.f64 (*.f64 t a) 2)) (fma.f64 t a (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 z 6) (pow.f64 (*.f64 t a) 3))) (neg.f64 (fma.f64 (*.f64 t a) (fma.f64 t a (*.f64 z z)) (pow.f64 z 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 z 4) (pow.f64 (*.f64 t a) 2))) (neg.f64 (fma.f64 t a (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 z 6) (pow.f64 (*.f64 t (neg.f64 a)) 3)) (+.f64 (pow.f64 z 4) (-.f64 (*.f64 (*.f64 t (neg.f64 a)) (*.f64 t (neg.f64 a))) (*.f64 (*.f64 z z) (*.f64 t (neg.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 3) (pow.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) 3)) (+.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 2) (-.f64 (*.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) (fma.f64 t (neg.f64 a) (*.f64 t a))) (*.f64 (-.f64 (*.f64 z z) (*.f64 t a)) (fma.f64 t (neg.f64 a) (*.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 z 4) (*.f64 (*.f64 t (neg.f64 a)) (*.f64 t (neg.f64 a)))) (-.f64 (*.f64 z z) (*.f64 t (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 2) (*.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) (fma.f64 t (neg.f64 a) (*.f64 t a)))) (-.f64 (-.f64 (*.f64 z z) (*.f64 t a)) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (*.f64 z z) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 z z))) (pow.f64 (exp.f64 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 z) z) (+.f64 1 (expm1.f64 (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 z z))) (+.f64 1 (expm1.f64 (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 z z))) (exp.f64 (*.f64 t (neg.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 z) z) (/.f64 1 (pow.f64 (exp.f64 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 z z))) (/.f64 1 (pow.f64 (exp.f64 a) t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (exp.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 t (neg.f64 a) (*.f64 t a))) (exp.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 t (neg.f64 a) (*.f64 t a))) (+.f64 1 (expm1.f64 (-.f64 (*.f64 z z) (*.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 t (neg.f64 a))) (pow.f64 (exp.f64 z) z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (exp.f64 a) t)) (pow.f64 (exp.f64 z) z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 t (neg.f64 a))) (+.f64 1 (expm1.f64 (*.f64 z z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (exp.f64 a) t)) (+.f64 1 (expm1.f64 (*.f64 z z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (*.f64 z z) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (*.f64 z z) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (*.f64 z z) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (*.f64 z z) (*.f64 t a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z z (*.f64 t (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z z (*.f64 (*.f64 t (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z z (fma.f64 t (neg.f64 a) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z z (neg.f64 (-.f64 (*.f64 t a) (fma.f64 t (neg.f64 a) (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z z) 1 (*.f64 t (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z z) 1 (*.f64 (*.f64 t (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z z) 1 (fma.f64 t (neg.f64 a) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z z) 1 (neg.f64 (-.f64 (*.f64 t a) (fma.f64 t (neg.f64 a) (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (neg.f64 a) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (neg.f64 t) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1 (fma.f64 t (neg.f64 a) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1 (fma.f64 (*.f64 t (neg.f64 a)) 1 (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t a))) (pow.f64 (cbrt.f64 (*.f64 t a)) 2) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1 (*.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1 (+.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (fma.f64 t (neg.f64 a) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (fma.f64 (*.f64 t (neg.f64 a)) 1 (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t a))) (pow.f64 (cbrt.f64 (*.f64 t a)) 2) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (+.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z z) (*.f64 t (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z z) (*.f64 (*.f64 t (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z z) (fma.f64 t (neg.f64 a) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z z) (neg.f64 (-.f64 (*.f64 t a) (fma.f64 t (neg.f64 a) (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 z z) (*.f64 t a)) (fma.f64 t (neg.f64 a) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 z z) (*.f64 t a)) (fma.f64 (*.f64 t (neg.f64 a)) 1 (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 z z) (*.f64 t a)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t a))) (pow.f64 (cbrt.f64 (*.f64 t a)) 2) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 z z) (*.f64 t a)) (*.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 z z) (*.f64 t a)) (+.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 t (neg.f64 a) (*.f64 t a)) (-.f64 (*.f64 z z) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 t (neg.f64 a)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 t a)) 2) (neg.f64 (cbrt.f64 (*.f64 t a))) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (*.f64 t (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (*.f64 (*.f64 t (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (fma.f64 t (neg.f64 a) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (neg.f64 (-.f64 (*.f64 t a) (fma.f64 t (neg.f64 a) (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (*.f64 t (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (*.f64 (*.f64 t (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (fma.f64 t (neg.f64 a) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (-.f64 (*.f64 t a) (fma.f64 t (neg.f64 a) (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (*.f64 t (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (*.f64 (*.f64 t (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (fma.f64 t (neg.f64 a) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (neg.f64 (-.f64 (*.f64 t a) (fma.f64 t (neg.f64 a) (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) 2) (fma.f64 t (neg.f64 a) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) 2) (fma.f64 (*.f64 t (neg.f64 a)) 1 (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) 2) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t a))) (pow.f64 (cbrt.f64 (*.f64 t a)) 2) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) 2) (*.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) 2) (+.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (*.f64 (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (fma.f64 t (neg.f64 a) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (*.f64 (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (fma.f64 (*.f64 t (neg.f64 a)) 1 (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (*.f64 (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t a))) (pow.f64 (cbrt.f64 (*.f64 t a)) 2) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (*.f64 (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (*.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (*.f64 (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (+.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) 2) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (fma.f64 t (neg.f64 a) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) 2) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (fma.f64 (*.f64 t (neg.f64 a)) 1 (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) 2) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t a))) (pow.f64 (cbrt.f64 (*.f64 t a)) 2) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) 2) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (*.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) 2) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))) (+.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4) (*.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (fma.f64 t (neg.f64 a) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4) (*.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (fma.f64 (*.f64 t (neg.f64 a)) 1 (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4) (*.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t a))) (pow.f64 (cbrt.f64 (*.f64 t a)) 2) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4) (*.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (*.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4) (*.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4) (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (+.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (*.f64 t (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (*.f64 (*.f64 t (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (fma.f64 t (neg.f64 a) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (-.f64 (*.f64 t a) (fma.f64 t (neg.f64 a) (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 t a)) (neg.f64 (sqrt.f64 (*.f64 t a))) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 a) t (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 6) (pow.f64 (*.f64 t a) 3)) (/.f64 1 (fma.f64 (*.f64 t a) (fma.f64 t a (*.f64 z z)) (pow.f64 z 4))) (fma.f64 t (neg.f64 a) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 6) (pow.f64 (*.f64 t a) 3)) (/.f64 1 (fma.f64 (*.f64 t a) (fma.f64 t a (*.f64 z z)) (pow.f64 z 4))) (fma.f64 (*.f64 t (neg.f64 a)) 1 (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 6) (pow.f64 (*.f64 t a) 3)) (/.f64 1 (fma.f64 (*.f64 t a) (fma.f64 t a (*.f64 z z)) (pow.f64 z 4))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t a))) (pow.f64 (cbrt.f64 (*.f64 t a)) 2) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 6) (pow.f64 (*.f64 t a) 3)) (/.f64 1 (fma.f64 (*.f64 t a) (fma.f64 t a (*.f64 z z)) (pow.f64 z 4))) (*.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 6) (pow.f64 (*.f64 t a) 3)) (/.f64 1 (fma.f64 (*.f64 t a) (fma.f64 t a (*.f64 z z)) (pow.f64 z 4))) (+.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 4) (pow.f64 (*.f64 t a) 2)) (/.f64 1 (fma.f64 t a (*.f64 z z))) (fma.f64 t (neg.f64 a) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 4) (pow.f64 (*.f64 t a) 2)) (/.f64 1 (fma.f64 t a (*.f64 z z))) (fma.f64 (*.f64 t (neg.f64 a)) 1 (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 4) (pow.f64 (*.f64 t a) 2)) (/.f64 1 (fma.f64 t a (*.f64 z z))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t a))) (pow.f64 (cbrt.f64 (*.f64 t a)) 2) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 4) (pow.f64 (*.f64 t a) 2)) (/.f64 1 (fma.f64 t a (*.f64 z z))) (*.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 4) (pow.f64 (*.f64 t a) 2)) (/.f64 1 (fma.f64 t a (*.f64 z z))) (+.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 t) a (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4) (fma.f64 t (neg.f64 a) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4) (fma.f64 (*.f64 t (neg.f64 a)) 1 (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t a))) (pow.f64 (cbrt.f64 (*.f64 t a)) 2) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4) (*.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4) (+.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (*.f64 t (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (*.f64 (*.f64 t (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (fma.f64 t (neg.f64 a) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (-.f64 (*.f64 t a) (fma.f64 t (neg.f64 a) (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 t (neg.f64 a))) (cbrt.f64 (*.f64 t (neg.f64 a)))) (cbrt.f64 (*.f64 t (neg.f64 a))) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (fma.f64 t (neg.f64 a) (*.f64 t a))) (cbrt.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)))) (cbrt.f64 (fma.f64 t (neg.f64 a) (*.f64 t a))) (-.f64 (*.f64 z z) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 t (neg.f64 a))) (sqrt.f64 (*.f64 t (neg.f64 a))) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 t (neg.f64 a) (*.f64 t a))) (sqrt.f64 (fma.f64 t (neg.f64 a) (*.f64 t a))) (-.f64 (*.f64 z z) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (*.f64 t a))) (sqrt.f64 (*.f64 t a)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 t a) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 z (sqrt.f64 (*.f64 t a))) (-.f64 z (sqrt.f64 (*.f64 t a))) (fma.f64 t (neg.f64 a) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 z (sqrt.f64 (*.f64 t a))) (-.f64 z (sqrt.f64 (*.f64 t a))) (fma.f64 (*.f64 t (neg.f64 a)) 1 (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 z (sqrt.f64 (*.f64 t a))) (-.f64 z (sqrt.f64 (*.f64 t a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t a))) (pow.f64 (cbrt.f64 (*.f64 t a)) 2) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 z (sqrt.f64 (*.f64 t a))) (-.f64 z (sqrt.f64 (*.f64 t a))) (*.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 z (sqrt.f64 (*.f64 t a))) (-.f64 z (sqrt.f64 (*.f64 t a))) (+.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 t a)) 2)) (cbrt.f64 (*.f64 t a)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (*.f64 t (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (*.f64 (*.f64 t (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (fma.f64 t (neg.f64 a) (fma.f64 t (neg.f64 a) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (-.f64 (*.f64 t a) (fma.f64 t (neg.f64 a) (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 t) 1) a (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 t) (pow.f64 (cbrt.f64 a) 2)) (cbrt.f64 a) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 t) (sqrt.f64 a)) (sqrt.f64 a) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (fma.f64 t (neg.f64 a) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (fma.f64 (*.f64 t (neg.f64 a)) 1 (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t a))) (pow.f64 (cbrt.f64 (*.f64 t a)) 2) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (*.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (cbrt.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a))))) (+.f64 (fma.f64 t (neg.f64 a) (*.f64 t a)) (fma.f64 t (neg.f64 a) (*.f64 t a))))))))"]],"rules":[["egg-rr",247],["egg-rr",29],["egg-rr",46],["egg-rr",32]],"stop":[["node limit",1]],"time":84.257080078125,"type":"rewrite"},{"count":[[474,427]],"egraph":[[2,2761,2910,0.016435625000000002],[1,705,3174,0.005282625000000001],[0,213,3246,0.001084083]],"inputs":[["z","(+.f64 z (*.f64 -1/2 (/.f64 (*.f64 a t) z)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 t 2)) (pow.f64 z 3))) (+.f64 z (*.f64 -1/2 (/.f64 (*.f64 a t) z))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)) (pow.f64 z 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 t 2)) (pow.f64 z 3))) (+.f64 z (*.f64 -1/2 (/.f64 (*.f64 a t) z)))))","(*.f64 -1 z)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) z)) (*.f64 -1 z))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) z)) (+.f64 (*.f64 -1 z) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 t 2)) (pow.f64 z 3)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) z)) (+.f64 (*.f64 -1 z) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)) (pow.f64 z 5))) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 t 2)) (pow.f64 z 3))))))","z","(+.f64 z (*.f64 -1/2 (/.f64 (*.f64 a t) z)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 t 2)) (pow.f64 z 3))) (+.f64 z (*.f64 -1/2 (/.f64 (*.f64 a t) z))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)) (pow.f64 z 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 t 2)) (pow.f64 z 3))) (+.f64 z (*.f64 -1/2 (/.f64 (*.f64 a t) z)))))","z","(+.f64 z (*.f64 -1/2 (/.f64 (*.f64 a t) z)))","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 t 2)) (pow.f64 z 3))) (+.f64 z (*.f64 -1/2 (/.f64 (*.f64 a t) z))))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)) (pow.f64 z 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 t 2)) (pow.f64 z 3))) (+.f64 z (*.f64 -1/2 (/.f64 (*.f64 a t) z)))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","y","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y t)) (pow.f64 z 2))) y)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y t)) (pow.f64 z 2))) (+.f64 y (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) y) (pow.f64 z 4)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y t)) (pow.f64 z 2))) (+.f64 y (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t))) (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))))) (pow.f64 z 6))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) y) (pow.f64 z 4))))))","(*.f64 -1 y)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))) (*.f64 -1 y))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))) (+.f64 (*.f64 -1 y) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) y) (pow.f64 z 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))) (+.f64 (*.f64 -1 y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t))))) (pow.f64 z 6))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) y) (pow.f64 z 4))))))","y","(+.f64 y (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))))","(+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (+.f64 y (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2)))))","(+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) a) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 y (*.f64 (pow.f64 t 3) (pow.f64 z 2))))) (+.f64 y (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))))))","y","(+.f64 y (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))))","(+.f64 y (+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (pow.f64 z 2)))))))","(+.f64 y (+.f64 (*.f64 -1/2 (*.f64 y (*.f64 (pow.f64 a 3) (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))))))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (pow.f64 z 2))))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))))","(+.f64 (*.f64 y x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4)))))","(+.f64 (*.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t))) (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) x)) (pow.f64 z 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))))))","(*.f64 -1 (*.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1 (*.f64 y x)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))) (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t)))) x)) (pow.f64 z 6))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))) (*.f64 -1 (*.f64 y x)))))","(*.f64 y x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x))))) (*.f64 y x)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x))))) (+.f64 (*.f64 y x) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) a) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 y (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 2) x))))))))","(*.f64 y x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (*.f64 (pow.f64 z 2) x))))) (*.f64 y x)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (*.f64 (pow.f64 z 2) x))))) (+.f64 (*.f64 y x) (*.f64 -1/2 (*.f64 y (*.f64 (pow.f64 a 3) (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) x))))))))","(*.f64 -1 (*.f64 a t))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(pow.f64 z 2)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(pow.f64 z 2)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(pow.f64 z 2)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(*.f64 -1 (*.f64 a t))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(*.f64 -1 (*.f64 a t))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(pow.f64 z 2)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(*.f64 -1 (*.f64 a t))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(*.f64 -1 (*.f64 a t))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))"]],"method":["egg-herbie"],"outputs":[["z","(+.f64 z (*.f64 -1/2 (/.f64 (*.f64 a t) z)))","(+.f64 z (*.f64 -1/2 (/.f64 a (/.f64 z t))))","(fma.f64 -1/2 (*.f64 (/.f64 a z) t) z)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 t 2)) (pow.f64 z 3))) (+.f64 z (*.f64 -1/2 (/.f64 (*.f64 a t) z))))","(fma.f64 -1/8 (/.f64 (*.f64 a a) (/.f64 (pow.f64 z 3) (*.f64 t t))) (+.f64 z (*.f64 -1/2 (/.f64 a (/.f64 z t)))))","(fma.f64 -1/8 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 3)) (*.f64 t t)) (fma.f64 -1/2 (*.f64 (/.f64 a z) t) z))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)) (pow.f64 z 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 t 2)) (pow.f64 z 3))) (+.f64 z (*.f64 -1/2 (/.f64 (*.f64 a t) z)))))","(fma.f64 -1/16 (/.f64 (pow.f64 a 3) (/.f64 (pow.f64 z 5) (pow.f64 t 3))) (fma.f64 -1/8 (/.f64 (*.f64 a a) (/.f64 (pow.f64 z 3) (*.f64 t t))) (+.f64 z (*.f64 -1/2 (/.f64 a (/.f64 z t))))))","(fma.f64 -1/16 (/.f64 (pow.f64 a 3) (/.f64 (pow.f64 z 5) (pow.f64 t 3))) (fma.f64 -1/8 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 3)) (*.f64 t t)) (fma.f64 -1/2 (*.f64 (/.f64 a z) t) z)))","(fma.f64 -1/16 (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 5)) (pow.f64 a 3)) (fma.f64 -1/8 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 3)) (*.f64 t t)) (fma.f64 -1/2 (*.f64 (/.f64 a z) t) z)))","(*.f64 -1 z)","(neg.f64 z)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) z)) (*.f64 -1 z))","(fma.f64 1/2 (/.f64 a (/.f64 z t)) (neg.f64 z))","(-.f64 (*.f64 (*.f64 (/.f64 a z) t) 1/2) z)","(-.f64 (*.f64 (/.f64 1/2 (/.f64 z a)) t) z)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) z)) (+.f64 (*.f64 -1 z) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 t 2)) (pow.f64 z 3)))))","(fma.f64 1/2 (/.f64 a (/.f64 z t)) (fma.f64 -1 z (*.f64 (/.f64 (*.f64 a a) (/.f64 (pow.f64 z 3) (*.f64 t t))) 1/8)))","(fma.f64 (*.f64 (/.f64 a z) t) 1/2 (-.f64 (/.f64 1/8 (/.f64 (pow.f64 z 3) (*.f64 a (*.f64 a (*.f64 t t))))) z))","(fma.f64 (*.f64 (/.f64 a z) t) 1/2 (fma.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 3)) (*.f64 t t)) 1/8 (neg.f64 z)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) z)) (+.f64 (*.f64 -1 z) (+.f64 (*.f64 1/16 (/.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)) (pow.f64 z 5))) (*.f64 1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 t 2)) (pow.f64 z 3))))))","(fma.f64 1/2 (/.f64 a (/.f64 z t)) (fma.f64 -1 z (fma.f64 1/16 (/.f64 (pow.f64 a 3) (/.f64 (pow.f64 z 5) (pow.f64 t 3))) (*.f64 (/.f64 (*.f64 a a) (/.f64 (pow.f64 z 3) (*.f64 t t))) 1/8))))","(fma.f64 (*.f64 (/.f64 a z) t) 1/2 (-.f64 (fma.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 3)) (*.f64 t t)) 1/8 (*.f64 (/.f64 (pow.f64 a 3) (/.f64 (pow.f64 z 5) (pow.f64 t 3))) 1/16)) z))","(fma.f64 (*.f64 (/.f64 a z) t) 1/2 (-.f64 (fma.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 3)) (*.f64 t t)) 1/8 (*.f64 (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 5)) (pow.f64 a 3)) 1/16)) z))","z","(+.f64 z (*.f64 -1/2 (/.f64 (*.f64 a t) z)))","(+.f64 z (*.f64 -1/2 (/.f64 a (/.f64 z t))))","(fma.f64 -1/2 (*.f64 (/.f64 a z) t) z)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 t 2)) (pow.f64 z 3))) (+.f64 z (*.f64 -1/2 (/.f64 (*.f64 a t) z))))","(fma.f64 -1/8 (/.f64 (*.f64 a a) (/.f64 (pow.f64 z 3) (*.f64 t t))) (+.f64 z (*.f64 -1/2 (/.f64 a (/.f64 z t)))))","(fma.f64 -1/8 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 3)) (*.f64 t t)) (fma.f64 -1/2 (*.f64 (/.f64 a z) t) z))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)) (pow.f64 z 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 t 2)) (pow.f64 z 3))) (+.f64 z (*.f64 -1/2 (/.f64 (*.f64 a t) z)))))","(fma.f64 -1/16 (/.f64 (pow.f64 a 3) (/.f64 (pow.f64 z 5) (pow.f64 t 3))) (fma.f64 -1/8 (/.f64 (*.f64 a a) (/.f64 (pow.f64 z 3) (*.f64 t t))) (+.f64 z (*.f64 -1/2 (/.f64 a (/.f64 z t))))))","(fma.f64 -1/16 (/.f64 (pow.f64 a 3) (/.f64 (pow.f64 z 5) (pow.f64 t 3))) (fma.f64 -1/8 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 3)) (*.f64 t t)) (fma.f64 -1/2 (*.f64 (/.f64 a z) t) z)))","(fma.f64 -1/16 (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 5)) (pow.f64 a 3)) (fma.f64 -1/8 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 3)) (*.f64 t t)) (fma.f64 -1/2 (*.f64 (/.f64 a z) t) z)))","z","(+.f64 z (*.f64 -1/2 (/.f64 (*.f64 a t) z)))","(+.f64 z (*.f64 -1/2 (/.f64 a (/.f64 z t))))","(fma.f64 -1/2 (*.f64 (/.f64 a z) t) z)","(+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 t 2)) (pow.f64 z 3))) (+.f64 z (*.f64 -1/2 (/.f64 (*.f64 a t) z))))","(fma.f64 -1/8 (/.f64 (*.f64 a a) (/.f64 (pow.f64 z 3) (*.f64 t t))) (+.f64 z (*.f64 -1/2 (/.f64 a (/.f64 z t)))))","(fma.f64 -1/8 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 3)) (*.f64 t t)) (fma.f64 -1/2 (*.f64 (/.f64 a z) t) z))","(+.f64 (*.f64 -1/16 (/.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)) (pow.f64 z 5))) (+.f64 (*.f64 -1/8 (/.f64 (*.f64 (pow.f64 a 2) (pow.f64 t 2)) (pow.f64 z 3))) (+.f64 z (*.f64 -1/2 (/.f64 (*.f64 a t) z)))))","(fma.f64 -1/16 (/.f64 (pow.f64 a 3) (/.f64 (pow.f64 z 5) (pow.f64 t 3))) (fma.f64 -1/8 (/.f64 (*.f64 a a) (/.f64 (pow.f64 z 3) (*.f64 t t))) (+.f64 z (*.f64 -1/2 (/.f64 a (/.f64 z t))))))","(fma.f64 -1/16 (/.f64 (pow.f64 a 3) (/.f64 (pow.f64 z 5) (pow.f64 t 3))) (fma.f64 -1/8 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 3)) (*.f64 t t)) (fma.f64 -1/2 (*.f64 (/.f64 a z) t) z)))","(fma.f64 -1/16 (*.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 5)) (pow.f64 a 3)) (fma.f64 -1/8 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 3)) (*.f64 t t)) (fma.f64 -1/2 (*.f64 (/.f64 a z) t) z)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) y))","(*.f64 z (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) y))","y","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y t)) (pow.f64 z 2))) y)","(fma.f64 1/2 (/.f64 (*.f64 a (*.f64 t y)) (*.f64 z z)) y)","(fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t y) z)) y)","(fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 t (/.f64 z y))) y)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y t)) (pow.f64 z 2))) (+.f64 y (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) y) (pow.f64 z 4)))))","(+.f64 (fma.f64 1/2 (/.f64 (*.f64 a (*.f64 t y)) (*.f64 z z)) y) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 a t) 1/2) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) y))))","(fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t y) z)) (fma.f64 -1/2 (/.f64 (-.f64 (pow.f64 (*.f64 a (*.f64 t 1/2)) 2) (*.f64 a (*.f64 a (*.f64 t t)))) (/.f64 (pow.f64 z 4) y)) y))","(fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 t (/.f64 z y))) (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 (*.f64 a (*.f64 a (*.f64 t t))) -3/4) (pow.f64 z 4)) y) y))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y t)) (pow.f64 z 2))) (+.f64 y (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t))) (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))))) (pow.f64 z 6))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) y) (pow.f64 z 4))))))","(+.f64 (fma.f64 1/2 (/.f64 (*.f64 a (*.f64 t y)) (*.f64 z z)) y) (*.f64 -1/2 (+.f64 (/.f64 (*.f64 y (fma.f64 -1/2 (*.f64 (*.f64 a t) (+.f64 (pow.f64 (*.f64 (*.f64 a t) 1/2) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t))))) (neg.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3))))) (pow.f64 z 6)) (/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 a t) 1/2) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) y)))))","(fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t y) z)) (fma.f64 -1/2 (+.f64 (/.f64 (-.f64 (pow.f64 (*.f64 a (*.f64 t 1/2)) 2) (*.f64 a (*.f64 a (*.f64 t t)))) (/.f64 (pow.f64 z 4) y)) (*.f64 (/.f64 y (pow.f64 z 6)) (-.f64 (*.f64 -1/2 (*.f64 t (*.f64 a (-.f64 (pow.f64 (*.f64 a (*.f64 t 1/2)) 2) (*.f64 a (*.f64 a (*.f64 t t))))))) (*.f64 (pow.f64 a 3) (pow.f64 t 3))))) y))","(fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 t (/.f64 z y))) (fma.f64 -1/2 (+.f64 (*.f64 (/.f64 (*.f64 (*.f64 a (*.f64 a (*.f64 t t))) -3/4) (pow.f64 z 4)) y) (*.f64 (/.f64 y (pow.f64 z 6)) (fma.f64 -1/2 (*.f64 t (*.f64 a (*.f64 (*.f64 a (*.f64 a (*.f64 t t))) -3/4))) (*.f64 (pow.f64 a 3) (neg.f64 (pow.f64 t 3)))))) y))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))) (*.f64 -1 y))","(fma.f64 -1/2 (/.f64 y (/.f64 (*.f64 z z) (*.f64 a t))) (neg.f64 y))","(-.f64 (*.f64 -1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t y) z))) y)","(-.f64 (*.f64 (/.f64 -1/2 z) (/.f64 a (/.f64 z (*.f64 t y)))) y)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))) (+.f64 (*.f64 -1 y) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) y) (pow.f64 z 4)))))","(fma.f64 -1/2 (/.f64 y (/.f64 (*.f64 z z) (*.f64 a t))) (fma.f64 -1 y (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 a t) 1/2) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) y)))))","(fma.f64 -1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t y) z)) (fma.f64 1/2 (/.f64 (-.f64 (pow.f64 (*.f64 a (*.f64 t 1/2)) 2) (*.f64 a (*.f64 a (*.f64 t t)))) (/.f64 (pow.f64 z 4) y)) (neg.f64 y)))","(fma.f64 -1/2 (*.f64 (/.f64 a z) (/.f64 t (/.f64 z y))) (-.f64 (*.f64 (/.f64 (*.f64 1/2 (*.f64 (*.f64 a (*.f64 a (*.f64 t t))) -3/4)) (pow.f64 z 4)) y) y))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))) (+.f64 (*.f64 -1 y) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t))))) (pow.f64 z 6))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) y) (pow.f64 z 4))))))","(fma.f64 -1/2 (/.f64 y (/.f64 (*.f64 z z) (*.f64 a t))) (fma.f64 -1 y (*.f64 1/2 (+.f64 (/.f64 (*.f64 y (fma.f64 -1/2 (*.f64 (*.f64 a t) (+.f64 (pow.f64 (*.f64 (*.f64 a t) 1/2) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t))))) (neg.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3))))) (pow.f64 z 6)) (/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 a t) 1/2) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) y))))))","(fma.f64 -1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t y) z)) (-.f64 (*.f64 1/2 (+.f64 (/.f64 (-.f64 (pow.f64 (*.f64 a (*.f64 t 1/2)) 2) (*.f64 a (*.f64 a (*.f64 t t)))) (/.f64 (pow.f64 z 4) y)) (*.f64 (/.f64 y (pow.f64 z 6)) (-.f64 (*.f64 -1/2 (*.f64 t (*.f64 a (-.f64 (pow.f64 (*.f64 a (*.f64 t 1/2)) 2) (*.f64 a (*.f64 a (*.f64 t t))))))) (*.f64 (pow.f64 a 3) (pow.f64 t 3)))))) y))","(fma.f64 -1/2 (*.f64 (/.f64 a z) (/.f64 t (/.f64 z y))) (fma.f64 1/2 (+.f64 (*.f64 (/.f64 (*.f64 (*.f64 a (*.f64 a (*.f64 t t))) -3/4) (pow.f64 z 4)) y) (*.f64 (/.f64 y (pow.f64 z 6)) (fma.f64 -1/2 (*.f64 t (*.f64 a (*.f64 (*.f64 a (*.f64 a (*.f64 t t))) -3/4))) (*.f64 (pow.f64 a 3) (neg.f64 (pow.f64 t 3)))))) (neg.f64 y)))","y","(+.f64 y (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))))","(fma.f64 1/2 (/.f64 (*.f64 a (*.f64 t y)) (*.f64 z z)) y)","(fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t y) z)) y)","(fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 t (/.f64 z y))) y)","(+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (+.f64 y (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2)))))","(fma.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (*.f64 y (*.f64 (*.f64 t t) (*.f64 z z)))) (+.f64 y (*.f64 1/2 (/.f64 y (/.f64 (*.f64 z z) (*.f64 a t))))))","(fma.f64 -1/2 (*.f64 y (*.f64 (*.f64 (*.f64 t z) (*.f64 t z)) (-.f64 (*.f64 (/.f64 a (/.f64 (pow.f64 z 6) a)) 1/4) (/.f64 a (/.f64 (pow.f64 z 6) a))))) (fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t y) z)) y))","(fma.f64 -1/2 (*.f64 y (*.f64 (*.f64 z (*.f64 z (*.f64 t t))) (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4))) (fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 t (/.f64 z y))) y))","(+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) a) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 y (*.f64 (pow.f64 t 3) (pow.f64 z 2))))) (+.f64 y (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))))))","(fma.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (*.f64 y (*.f64 (*.f64 t t) (*.f64 z z)))) (fma.f64 -1/2 (*.f64 (fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (/.f64 (*.f64 z z) a)) (neg.f64 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 y (*.f64 (pow.f64 t 3) (*.f64 z z)))) (+.f64 y (*.f64 1/2 (/.f64 y (/.f64 (*.f64 z z) (*.f64 a t)))))))","(fma.f64 -1/2 (*.f64 y (*.f64 (*.f64 (*.f64 t z) (*.f64 t z)) (-.f64 (*.f64 (/.f64 a (/.f64 (pow.f64 z 6) a)) 1/4) (/.f64 a (/.f64 (pow.f64 z 6) a))))) (fma.f64 (*.f64 -1/2 (-.f64 (*.f64 -1/2 (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 a (/.f64 (pow.f64 z 6) a)) 1/4) (/.f64 a (/.f64 (pow.f64 z 6) a))) (*.f64 z z)) a)) (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 (pow.f64 t 3) (*.f64 z (*.f64 z y))) (fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t y) z)) y)))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 t (/.f64 z y))) y) (*.f64 -1/2 (*.f64 (*.f64 z z) (+.f64 (*.f64 (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4) (*.f64 (*.f64 t t) y)) (*.f64 (-.f64 (/.f64 -1/2 (/.f64 (*.f64 (/.f64 z a) z) (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4))) (/.f64 (pow.f64 a 3) (pow.f64 z 8))) (*.f64 (pow.f64 t 3) y))))))","y","(+.f64 y (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))))","(fma.f64 1/2 (/.f64 (*.f64 a (*.f64 t y)) (*.f64 z z)) y)","(fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t y) z)) y)","(fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 t (/.f64 z y))) y)","(+.f64 y (+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (pow.f64 z 2)))))))","(+.f64 y (fma.f64 1/2 (/.f64 y (/.f64 (*.f64 z z) (*.f64 a t))) (*.f64 (*.f64 -1/2 (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))) (*.f64 (*.f64 a a) (*.f64 (*.f64 z z) y)))))","(+.f64 y (fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t y) z)) (*.f64 (-.f64 (pow.f64 (/.f64 1/2 (/.f64 (pow.f64 z 3) t)) 2) (/.f64 (*.f64 t t) (pow.f64 z 6))) (*.f64 (*.f64 a (*.f64 a (*.f64 z (*.f64 z y)))) -1/2))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 t (/.f64 z y))) y) (*.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) -3/4) (*.f64 (*.f64 (*.f64 a a) (*.f64 z (*.f64 z y))) -1/2)))","(+.f64 y (+.f64 (*.f64 -1/2 (*.f64 y (*.f64 (pow.f64 a 3) (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))))))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (pow.f64 z 2))))))))","(+.f64 y (fma.f64 -1/2 (*.f64 y (*.f64 (pow.f64 a 3) (*.f64 (*.f64 z z) (fma.f64 -1/2 (/.f64 t (/.f64 (*.f64 z z) (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)))) (neg.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 8))))))) (fma.f64 1/2 (/.f64 y (/.f64 (*.f64 z z) (*.f64 a t))) (*.f64 (*.f64 -1/2 (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))) (*.f64 (*.f64 a a) (*.f64 (*.f64 z z) y))))))","(+.f64 y (fma.f64 -1/2 (*.f64 (pow.f64 a 3) (*.f64 (*.f64 z (*.f64 z (fma.f64 -1/2 (*.f64 (/.f64 t z) (/.f64 (-.f64 (pow.f64 (/.f64 1/2 (/.f64 (pow.f64 z 3) t)) 2) (/.f64 (*.f64 t t) (pow.f64 z 6))) z)) (neg.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))))) y)) (fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t y) z)) (*.f64 (-.f64 (pow.f64 (/.f64 1/2 (/.f64 (pow.f64 z 3) t)) 2) (/.f64 (*.f64 t t) (pow.f64 z 6))) (*.f64 (*.f64 a (*.f64 a (*.f64 z (*.f64 z y)))) -1/2)))))","(+.f64 y (fma.f64 -1/2 (*.f64 y (*.f64 (*.f64 z z) (*.f64 (fma.f64 (/.f64 -1/2 z) (/.f64 t (/.f64 z (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) -3/4))) (neg.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) (pow.f64 a 3)))) (fma.f64 -1/2 (*.f64 (*.f64 a a) (*.f64 (*.f64 z (*.f64 z y)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) -3/4))) (*.f64 (/.f64 1/2 (/.f64 z a)) (/.f64 t (/.f64 z y))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 a (neg.f64 t))))) (*.f64 z (*.f64 y x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z y) x))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))))","(fma.f64 y x (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (*.f64 z z))))","(fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t (*.f64 y x)) z)) (*.f64 y x))","(fma.f64 1/2 (/.f64 (/.f64 a (/.f64 z y)) (/.f64 (/.f64 z t) x)) (*.f64 y x))","(+.f64 (*.f64 y x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4)))))","(fma.f64 y x (fma.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (*.f64 z z)) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 a t) 1/2) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) (*.f64 y x))))))","(fma.f64 y x (fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t (*.f64 y x)) z)) (/.f64 (*.f64 (*.f64 -1/2 (-.f64 (pow.f64 (*.f64 a (*.f64 t 1/2)) 2) (*.f64 a (*.f64 a (*.f64 t t))))) (*.f64 y x)) (pow.f64 z 4))))","(fma.f64 y x (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 (*.f64 a (*.f64 a (*.f64 t t))) -3/4) (pow.f64 z 4)) (*.f64 y x)) (*.f64 1/2 (/.f64 (/.f64 a (/.f64 z y)) (/.f64 (/.f64 z t) x)))))","(+.f64 (*.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t))) (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) x)) (pow.f64 z 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))))))","(fma.f64 y x (fma.f64 -1/2 (/.f64 y (/.f64 (pow.f64 z 6) (*.f64 (fma.f64 -1/2 (*.f64 (*.f64 a t) (+.f64 (pow.f64 (*.f64 (*.f64 a t) 1/2) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t))))) (neg.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) x))) (fma.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (*.f64 z z)) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 a t) 1/2) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))))","(fma.f64 y x (fma.f64 -1/2 (*.f64 (/.f64 y (pow.f64 z 6)) (*.f64 (-.f64 (*.f64 -1/2 (*.f64 t (*.f64 a (-.f64 (pow.f64 (*.f64 a (*.f64 t 1/2)) 2) (*.f64 a (*.f64 a (*.f64 t t))))))) (*.f64 (pow.f64 a 3) (pow.f64 t 3))) x)) (fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t (*.f64 y x)) z)) (/.f64 (*.f64 (*.f64 -1/2 (-.f64 (pow.f64 (*.f64 a (*.f64 t 1/2)) 2) (*.f64 a (*.f64 a (*.f64 t t))))) (*.f64 y x)) (pow.f64 z 4)))))","(fma.f64 y x (fma.f64 -1/2 (*.f64 (*.f64 (/.f64 y (pow.f64 z 6)) (fma.f64 -1/2 (*.f64 t (*.f64 a (*.f64 (*.f64 a (*.f64 a (*.f64 t t))) -3/4))) (*.f64 (pow.f64 a 3) (neg.f64 (pow.f64 t 3))))) x) (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 (*.f64 a (*.f64 a (*.f64 t t))) -3/4) (pow.f64 z 4)) (*.f64 y x)) (*.f64 1/2 (/.f64 (/.f64 a (/.f64 z y)) (/.f64 (/.f64 z t) x))))))","(*.f64 -1 (*.f64 y x))","(*.f64 (neg.f64 y) x)","(*.f64 y (neg.f64 x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1 (*.f64 y x)))","(fma.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (*.f64 z z)) (*.f64 (neg.f64 y) x))","(-.f64 (*.f64 -1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t (*.f64 y x)) z))) (*.f64 y x))","(fma.f64 -1/2 (/.f64 (/.f64 a (/.f64 z y)) (/.f64 (/.f64 z t) x)) (*.f64 y (neg.f64 x)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))) (*.f64 -1 (*.f64 y x))))","(fma.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (*.f64 z z)) (fma.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 a t) 1/2) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) (*.f64 y x))) (*.f64 (neg.f64 y) x)))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t (*.f64 y x)) z)) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 (*.f64 a (*.f64 t 1/2)) 2) (*.f64 a (*.f64 a (*.f64 t t)))) (pow.f64 z 4)) (*.f64 y x)))) (*.f64 y x))","(fma.f64 -1/2 (/.f64 (/.f64 a (/.f64 z y)) (/.f64 (/.f64 z t) x)) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 (*.f64 a (*.f64 a (*.f64 t t))) -3/4) (pow.f64 z 4)) (*.f64 y x)) (*.f64 y (neg.f64 x))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t)))) x)) (pow.f64 z 6))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))) (*.f64 -1 (*.f64 y x)))))","(fma.f64 1/2 (/.f64 y (/.f64 (pow.f64 z 6) (*.f64 (fma.f64 -1/2 (*.f64 (*.f64 a t) (+.f64 (pow.f64 (*.f64 (*.f64 a t) 1/2) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t))))) (neg.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) x))) (fma.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (*.f64 z z)) (fma.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 a t) 1/2) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) (*.f64 y x))) (*.f64 (neg.f64 y) x))))","(fma.f64 1/2 (*.f64 (/.f64 y (pow.f64 z 6)) (*.f64 (-.f64 (*.f64 -1/2 (*.f64 t (*.f64 a (-.f64 (pow.f64 (*.f64 a (*.f64 t 1/2)) 2) (*.f64 a (*.f64 a (*.f64 t t))))))) (*.f64 (pow.f64 a 3) (pow.f64 t 3))) x)) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t (*.f64 y x)) z)) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 (*.f64 a (*.f64 t 1/2)) 2) (*.f64 a (*.f64 a (*.f64 t t)))) (pow.f64 z 4)) (*.f64 y x)))) (*.f64 y x)))","(fma.f64 1/2 (*.f64 (*.f64 (/.f64 y (pow.f64 z 6)) (fma.f64 -1/2 (*.f64 t (*.f64 a (*.f64 (*.f64 a (*.f64 a (*.f64 t t))) -3/4))) (*.f64 (pow.f64 a 3) (neg.f64 (pow.f64 t 3))))) x) (fma.f64 -1/2 (/.f64 (/.f64 a (/.f64 z y)) (/.f64 (/.f64 z t) x)) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 (*.f64 a (*.f64 a (*.f64 t t))) -3/4) (pow.f64 z 4)) (*.f64 y x)) (*.f64 y (neg.f64 x)))))","(*.f64 y x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 y x))","(fma.f64 y x (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (*.f64 z z))))","(fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t (*.f64 y x)) z)) (*.f64 y x))","(fma.f64 1/2 (/.f64 (/.f64 a (/.f64 z y)) (/.f64 (/.f64 z t) x)) (*.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x))))) (*.f64 y x)))","(fma.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (*.f64 z z)) (fma.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (*.f64 y (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) x)))) (*.f64 y x)))","(fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t (*.f64 y x)) z)) (fma.f64 y x (*.f64 (-.f64 (*.f64 (/.f64 a (/.f64 (pow.f64 z 6) a)) 1/4) (/.f64 a (/.f64 (pow.f64 z 6) a))) (*.f64 (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) (*.f64 y x))) -1/2))))","(fma.f64 1/2 (/.f64 (/.f64 a (/.f64 z y)) (/.f64 (/.f64 z t) x)) (*.f64 y (+.f64 x (*.f64 (*.f64 -1/2 (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4)) (*.f64 (*.f64 z z) (*.f64 (*.f64 t t) x))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x))))) (+.f64 (*.f64 y x) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) a) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 y (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 2) x))))))))","(fma.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (*.f64 z z)) (fma.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (*.f64 y (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) x)))) (fma.f64 y x (*.f64 -1/2 (*.f64 (fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (/.f64 (*.f64 z z) a)) (neg.f64 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 y (*.f64 (pow.f64 t 3) (*.f64 (*.f64 z z) x))))))))","(fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t (*.f64 y x)) z)) (fma.f64 -1/2 (*.f64 y (*.f64 (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) x)) (-.f64 (*.f64 (/.f64 a (/.f64 (pow.f64 z 6) a)) 1/4) (/.f64 a (/.f64 (pow.f64 z 6) a))))) (fma.f64 -1/2 (*.f64 y (*.f64 (*.f64 (pow.f64 t 3) (*.f64 (*.f64 z z) x)) (-.f64 (*.f64 -1/2 (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 a (/.f64 (pow.f64 z 6) a)) 1/4) (/.f64 a (/.f64 (pow.f64 z 6) a))) (*.f64 z z)) a)) (/.f64 (pow.f64 a 3) (pow.f64 z 8))))) (*.f64 y x))))","(fma.f64 1/2 (/.f64 (/.f64 a (/.f64 z y)) (/.f64 (/.f64 z t) x)) (+.f64 (*.f64 y x) (*.f64 (*.f64 z (*.f64 z x)) (+.f64 (*.f64 (*.f64 -1/2 (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4)) (*.f64 (*.f64 t t) y)) (*.f64 (+.f64 (/.f64 1/4 (/.f64 (*.f64 (/.f64 z a) z) (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4))) (/.f64 1/2 (/.f64 (pow.f64 z 8) (pow.f64 a 3)))) (*.f64 (pow.f64 t 3) y))))))","(*.f64 y x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 y x))","(fma.f64 y x (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (*.f64 z z))))","(fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t (*.f64 y x)) z)) (*.f64 y x))","(fma.f64 1/2 (/.f64 (/.f64 a (/.f64 z y)) (/.f64 (/.f64 z t) x)) (*.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (*.f64 (pow.f64 z 2) x))))) (*.f64 y x)))","(fma.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (*.f64 z z)) (fma.f64 -1/2 (*.f64 (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)) (*.f64 (*.f64 a a) (*.f64 y (*.f64 (*.f64 z z) x)))) (*.f64 y x)))","(fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t (*.f64 y x)) z)) (fma.f64 y x (*.f64 (-.f64 (pow.f64 (/.f64 1/2 (/.f64 (pow.f64 z 3) t)) 2) (/.f64 (*.f64 t t) (pow.f64 z 6))) (*.f64 (*.f64 (*.f64 a a) (*.f64 (*.f64 z z) (*.f64 y x))) -1/2))))","(fma.f64 1/2 (/.f64 (/.f64 a (/.f64 z y)) (/.f64 (/.f64 z t) x)) (fma.f64 -1/2 (*.f64 (*.f64 a a) (*.f64 (*.f64 (*.f64 z z) (*.f64 y x)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) -3/4))) (*.f64 y x)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (*.f64 (pow.f64 z 2) x))))) (+.f64 (*.f64 y x) (*.f64 -1/2 (*.f64 y (*.f64 (pow.f64 a 3) (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) x))))))))","(fma.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (*.f64 z z)) (fma.f64 -1/2 (*.f64 (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)) (*.f64 (*.f64 a a) (*.f64 y (*.f64 (*.f64 z z) x)))) (fma.f64 y x (*.f64 -1/2 (*.f64 y (*.f64 (pow.f64 a 3) (*.f64 (*.f64 z z) (*.f64 (fma.f64 -1/2 (/.f64 t (/.f64 (*.f64 z z) (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)))) (neg.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) x))))))))","(fma.f64 1/2 (*.f64 (/.f64 a z) (/.f64 (*.f64 t (*.f64 y x)) z)) (fma.f64 -1/2 (*.f64 (*.f64 a a) (*.f64 (*.f64 (*.f64 z z) (*.f64 y x)) (-.f64 (pow.f64 (/.f64 1/2 (/.f64 (pow.f64 z 3) t)) 2) (/.f64 (*.f64 t t) (pow.f64 z 6))))) (fma.f64 -1/2 (*.f64 (pow.f64 a 3) (*.f64 (*.f64 (fma.f64 -1/2 (*.f64 (/.f64 t z) (/.f64 (-.f64 (pow.f64 (/.f64 1/2 (/.f64 (pow.f64 z 3) t)) 2) (/.f64 (*.f64 t t) (pow.f64 z 6))) z)) (neg.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) (*.f64 (*.f64 z z) x)) y)) (*.f64 y x))))","(fma.f64 1/2 (/.f64 (/.f64 a (/.f64 z y)) (/.f64 (/.f64 z t) x)) (fma.f64 -1/2 (*.f64 (*.f64 a a) (*.f64 (*.f64 (*.f64 z z) (*.f64 y x)) (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) -3/4))) (*.f64 y (+.f64 x (*.f64 (*.f64 (*.f64 (*.f64 (pow.f64 a 3) (*.f64 z z)) x) (fma.f64 (/.f64 -1/2 z) (/.f64 t (/.f64 z (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) -3/4))) (neg.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 8))))) -1/2)))))","(*.f64 -1 (*.f64 a t))","(neg.f64 (*.f64 a t))","(*.f64 a (neg.f64 t))","(*.f64 t (neg.f64 a))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(pow.f64 z 2)","(*.f64 z z)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(pow.f64 z 2)","(*.f64 z z)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(pow.f64 z 2)","(*.f64 z z)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(*.f64 -1 (*.f64 a t))","(neg.f64 (*.f64 a t))","(*.f64 a (neg.f64 t))","(*.f64 t (neg.f64 a))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(*.f64 -1 (*.f64 a t))","(neg.f64 (*.f64 a t))","(*.f64 a (neg.f64 t))","(*.f64 t (neg.f64 a))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(pow.f64 z 2)","(*.f64 z z)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(*.f64 -1 (*.f64 a t))","(neg.f64 (*.f64 a t))","(*.f64 a (neg.f64 t))","(*.f64 t (neg.f64 a))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(*.f64 -1 (*.f64 a t))","(neg.f64 (*.f64 a t))","(*.f64 a (neg.f64 t))","(*.f64 t (neg.f64 a))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 a (neg.f64 t)))"]],"stop":[["node limit",1]],"time":58.221923828125,"type":"simplify"},{"compiler":[[12525,4023]],"time":77.570068359375,"type":"eval"},{"alts":[["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","fresh",23.48835011319649],["(*.f64 x (/.f64 (*.f64 y z) (fma.f64 -1/2 (*.f64 (/.f64 a z) t) z)))","fresh",34.45992659611243],["(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","fresh",24.075893619238915],["(*.f64 x (neg.f64 y))","fresh",34.76840568458675],["(/.f64 (/.f64 (*.f64 (*.f64 x y) z) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4))","fresh",23.609150162038702],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","next",22.875874455218312],["(*.f64 x (*.f64 (/.f64 y 1) (/.f64 z (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))","fresh",24.05044418653708],["(*.f64 y x)","fresh",36.41327140195092],["(*.f64 x (/.f64 (*.f64 y z) (-.f64 (*.f64 (/.f64 1/2 (/.f64 z a)) t) z)))","fresh",35.345655109579106],["(pow.f64 (cbrt.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y)))) 3)","fresh",27.012278537474522]],"compiler":[[19,12],[19,12],[21,15],[9,7],[30,16],[21,15],[20,14],[8,6],[20,13],[21,15],[19,12],[19,12],[21,15],[9,7],[30,16],[21,15],[20,14],[8,6],[20,13],[21,15]],"count":[[429,10]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[427,9],"picked":[1,0]}],"min-error":[3.8161027274605037],"time":176.849853515625,"type":"prune"},{"compiler":[[77,40]],"locations":[["(-.f64 (pow.f64 z 2) (*.f64 a t))",0.41796875000000006,true],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))",1.530853810686621,true],["(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))",7.96500448671379,true],["(sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t))))",22.910957984785806,true]],"time":16.982177734375,"type":"localize"},{"count":[[4,108]],"series":[["(-.f64 (pow.f64 z 2) (*.f64 a t))","t","-inf",0.14794921875],["(-.f64 (pow.f64 z 2) (*.f64 a t))","t","inf",0.14404296875],["(-.f64 (pow.f64 z 2) (*.f64 a t))","t","0",0.171875],["(-.f64 (pow.f64 z 2) (*.f64 a t))","a","-inf",0.14501953125],["(-.f64 (pow.f64 z 2) (*.f64 a t))","a","inf",0.14501953125],["(-.f64 (pow.f64 z 2) (*.f64 a t))","a","0",0.198974609375],["(-.f64 (pow.f64 z 2) (*.f64 a t))","z","-inf",0.278076171875],["(-.f64 (pow.f64 z 2) (*.f64 a t))","z","inf",0.259033203125],["(-.f64 (pow.f64 z 2) (*.f64 a t))","z","0",0.146240234375],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","y","-inf",0.197998046875],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","y","inf",0.171875],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","y","0",0.197998046875],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","t","-inf",0.346923828125],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","t","inf",0.357177734375],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","t","0",0.287841796875],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","a","-inf",0.3779296875],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","a","inf",0.735107421875],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","a","0",0.280029296875],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","z","-inf",0.47998046875],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","z","inf",0.260009765625],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","z","0",0.359130859375],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","x","-inf",0.173828125],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","x","inf",0.199951171875],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","x","0",0.175048828125],["(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","y","-inf",0.200927734375],["(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","y","inf",0.1728515625],["(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","y","0",0.193115234375],["(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","t","-inf",0.335205078125],["(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","t","inf",0.35498046875],["(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","t","0",0.262939453125],["(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","a","-inf",0.338134765625],["(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","a","inf",0.60791015625],["(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","a","0",0.26611328125],["(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","z","-inf",0.454833984375],["(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","z","inf",0.257080078125],["(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","z","0",0.342041015625],["(sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t))))","t","-inf",0.494140625],["(sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t))))","t","inf",0.512939453125],["(sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t))))","t","0",0.363037109375],["(sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t))))","a","-inf",0.518798828125],["(sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t))))","a","inf",0.5771484375],["(sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t))))","a","0",0.39404296875],["(sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t))))","z","-inf",0.4560546875],["(sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t))))","z","inf",0.506103515625],["(sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t))))","z","0",0.620849609375]],"time":15.519775390625,"type":"series"},{"count":[[4,252]],"egraph":[[2,4263,60,0.032733833],[1,338,62,0.006196208],[0,16,70,0.000395917]],"inputs":[["(sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z))","(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","(-.f64 (pow.f64 z 2) (*.f64 a t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2))) (cbrt.f64 (exp.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2)) (cbrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (cbrt.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2)) (sqrt.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -2))) (sqrt.f64 (cbrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -2)) 1/2) (pow.f64 (cbrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 -1) (sqrt.f64 (neg.f64 (-.f64 (*.f64 z z) (*.f64 a t)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 -1/2 (log.f64 (-.f64 (*.f64 z z) (*.f64 a t)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (-.f64 (*.f64 z z) (*.f64 a t)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 -1/2 (log.f64 (-.f64 (*.f64 z z) (*.f64 a t)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))) z)) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))) z)))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))) z))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))) z))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))) z))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 y (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))) z))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t))) 3/2) (pow.f64 (*.f64 z y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 z y) 3) (pow.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t))) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (*.f64 z y) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t))))))) (cbrt.f64 (pow.f64 (exp.f64 x) (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t))))))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 z y) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 z y) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 z y) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 z y) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t))))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (*.f64 z y) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t))))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (*.f64 z y) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (*.f64 z y) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 z y) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t))))) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (/.f64 (*.f64 z y) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t))))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (*.f64 z y) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (*.f64 z y) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (*.f64 z y) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (*.f64 z y) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t))))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z z) (*.f64 a (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z z) (*.f64 (*.f64 a (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 z z) (*.f64 a t)) (fma.f64 (*.f64 a (neg.f64 t)) 1 (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 z z) (*.f64 a t)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a t))) (pow.f64 (cbrt.f64 (*.f64 a t)) 2) (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 z z) (*.f64 a t)) (fma.f64 (neg.f64 a) t (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 z z) (*.f64 a t)) (fma.f64 -1 (*.f64 a t) (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 z z) (*.f64 a t)) (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a t)) 2)) (cbrt.f64 (*.f64 a t)) (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (*.f64 z z) (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (neg.f64 t)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z z) 1 (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (pow.f64 (cbrt.f64 a) 2) (*.f64 (*.f64 (cbrt.f64 a) t) (pow.f64 (cbrt.f64 a) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z z) 1 (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z z) 1 (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z z) 1 (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z z) 1 (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z z) 1 (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z z) 1 (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (pow.f64 (cbrt.f64 a) 2)) (*.f64 (cbrt.f64 a) (*.f64 t (pow.f64 (cbrt.f64 a) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z z) 1 (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (-.f64 (*.f64 z z) (*.f64 a t)))) (cbrt.f64 (exp.f64 (-.f64 (*.f64 z z) (*.f64 a t)))))) (log.f64 (cbrt.f64 (exp.f64 (-.f64 (*.f64 z z) (*.f64 a t))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 (*.f64 z z) (*.f64 a t))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 (*.f64 z z) (*.f64 a t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 z z) (*.f64 a t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))) 2) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 z 6) (pow.f64 (*.f64 a t) 3)) (/.f64 1 (fma.f64 (*.f64 a t) (fma.f64 z z (*.f64 a t)) (pow.f64 z 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 z 4) (pow.f64 (*.f64 a t) 2)) (/.f64 1 (fma.f64 z z (*.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 z (sqrt.f64 (*.f64 a t))) (-.f64 z (sqrt.f64 (*.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 a t) (fma.f64 z z (*.f64 a t)) (pow.f64 z 4)) (-.f64 (pow.f64 z 6) (pow.f64 (*.f64 a t) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 z z (*.f64 a t)) (-.f64 (pow.f64 z 4) (pow.f64 (*.f64 a t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 z z) (*.f64 a t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))) 2) (cbrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))) (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 z z) (*.f64 a t))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 z 6) (pow.f64 (*.f64 a t) 3)) (fma.f64 (*.f64 a t) (fma.f64 z z (*.f64 a t)) (pow.f64 z 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 z 4) (pow.f64 (*.f64 a t) 2)) (fma.f64 z z (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 z 6) (pow.f64 (*.f64 a t) 3))) (neg.f64 (fma.f64 (*.f64 a t) (fma.f64 z z (*.f64 a t)) (pow.f64 z 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 z 4) (pow.f64 (*.f64 a t) 2))) (neg.f64 (fma.f64 z z (*.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 z 6) (pow.f64 (*.f64 a (neg.f64 t)) 3)) (+.f64 (pow.f64 z 4) (-.f64 (*.f64 (*.f64 a (neg.f64 t)) (*.f64 a (neg.f64 t))) (*.f64 (*.f64 z z) (*.f64 a (neg.f64 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 z 4) (*.f64 (*.f64 a (neg.f64 t)) (*.f64 a (neg.f64 t)))) (-.f64 (*.f64 z z) (*.f64 a (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (*.f64 z z) (*.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (*.f64 z z) (*.f64 a t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 z z))) (pow.f64 (exp.f64 t) a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 z) z) (+.f64 1 (expm1.f64 (*.f64 a t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 z z))) (+.f64 1 (expm1.f64 (*.f64 a t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 z z))) (exp.f64 (*.f64 a (neg.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 z) z) (/.f64 1 (pow.f64 (exp.f64 t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 z z))) (/.f64 1 (pow.f64 (exp.f64 t) a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 a (neg.f64 t))) (pow.f64 (exp.f64 z) z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (exp.f64 t) a)) (pow.f64 (exp.f64 z) z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 a (neg.f64 t))) (+.f64 1 (expm1.f64 (*.f64 z z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (pow.f64 (exp.f64 t) a)) (+.f64 1 (expm1.f64 (*.f64 z z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 a t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (*.f64 z z) (*.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (*.f64 z z) (*.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (*.f64 z z) (*.f64 a t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (*.f64 z z) (*.f64 a t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z z) (*.f64 a (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 z z) (*.f64 (*.f64 a (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)) (fma.f64 (*.f64 a (neg.f64 t)) 1 (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a t))) (pow.f64 (cbrt.f64 (*.f64 a t)) 2) (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)) (fma.f64 (neg.f64 a) t (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a (neg.f64 t)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z z (*.f64 a (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 z z (*.f64 (*.f64 a (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z z) 1 (*.f64 a (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z z) 1 (*.f64 (*.f64 a (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (neg.f64 t) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (neg.f64 a) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 z z) (*.f64 a t)) 1 (fma.f64 (*.f64 a (neg.f64 t)) 1 (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 z z) (*.f64 a t)) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a t))) (pow.f64 (cbrt.f64 (*.f64 a t)) 2) (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 z z) (*.f64 a t)) 1 (fma.f64 (neg.f64 a) t (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))) 2) (fma.f64 (*.f64 a (neg.f64 t)) 1 (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))) 2) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a t))) (pow.f64 (cbrt.f64 (*.f64 a t)) 2) (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))) 2) (fma.f64 (neg.f64 a) t (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))) 2) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))) (fma.f64 (*.f64 a (neg.f64 t)) 1 (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))) 2) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a t))) (pow.f64 (cbrt.f64 (*.f64 a t)) 2) (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))) 2) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 a t))) (fma.f64 (neg.f64 a) t (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 a t)) 2) (neg.f64 (cbrt.f64 (*.f64 a t))) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (*.f64 a (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z z)) (cbrt.f64 (pow.f64 z 4)) (*.f64 (*.f64 a (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (*.f64 a (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (*.f64 (*.f64 a (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (*.f64 a (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 z 4)) (cbrt.f64 (*.f64 z z)) (*.f64 (*.f64 a (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))) (fma.f64 (*.f64 a (neg.f64 t)) 1 (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a t))) (pow.f64 (cbrt.f64 (*.f64 a t)) 2) (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))) (hypot.f64 z (sqrt.f64 (*.f64 a (neg.f64 t)))) (fma.f64 (neg.f64 a) t (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (*.f64 a (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (*.f64 (*.f64 a (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 a t)) (neg.f64 (sqrt.f64 (*.f64 a t))) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 a t) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 6) (pow.f64 (*.f64 a t) 3)) (/.f64 1 (fma.f64 (*.f64 a t) (fma.f64 z z (*.f64 a t)) (pow.f64 z 4))) (fma.f64 (*.f64 a (neg.f64 t)) 1 (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 6) (pow.f64 (*.f64 a t) 3)) (/.f64 1 (fma.f64 (*.f64 a t) (fma.f64 z z (*.f64 a t)) (pow.f64 z 4))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a t))) (pow.f64 (cbrt.f64 (*.f64 a t)) 2) (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 6) (pow.f64 (*.f64 a t) 3)) (/.f64 1 (fma.f64 (*.f64 a t) (fma.f64 z z (*.f64 a t)) (pow.f64 z 4))) (fma.f64 (neg.f64 a) t (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 4) (pow.f64 (*.f64 a t) 2)) (/.f64 1 (fma.f64 z z (*.f64 a t))) (fma.f64 (*.f64 a (neg.f64 t)) 1 (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 4) (pow.f64 (*.f64 a t) 2)) (/.f64 1 (fma.f64 z z (*.f64 a t))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a t))) (pow.f64 (cbrt.f64 (*.f64 a t)) 2) (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 z 4) (pow.f64 (*.f64 a t) 2)) (/.f64 1 (fma.f64 z z (*.f64 a t))) (fma.f64 (neg.f64 a) t (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 a) t (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (*.f64 a (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (*.f64 (*.f64 a (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 a (neg.f64 t))) (cbrt.f64 (*.f64 a (neg.f64 t)))) (cbrt.f64 (*.f64 a (neg.f64 t))) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 a (neg.f64 t))) (sqrt.f64 (*.f64 a (neg.f64 t))) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 t) a (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (*.f64 a t))) (sqrt.f64 (*.f64 a t)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 z (sqrt.f64 (*.f64 a t))) (-.f64 z (sqrt.f64 (*.f64 a t))) (fma.f64 (*.f64 a (neg.f64 t)) 1 (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 z (sqrt.f64 (*.f64 a t))) (-.f64 z (sqrt.f64 (*.f64 a t))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a t))) (pow.f64 (cbrt.f64 (*.f64 a t)) 2) (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 z (sqrt.f64 (*.f64 a t))) (-.f64 z (sqrt.f64 (*.f64 a t))) (fma.f64 (neg.f64 a) t (*.f64 a t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 a t)) 2)) (cbrt.f64 (*.f64 a t)) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (*.f64 a (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (*.f64 (*.f64 a (neg.f64 t)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 a) 1) t (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 a) (pow.f64 (cbrt.f64 t) 2)) (cbrt.f64 t) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 a) (sqrt.f64 t)) (sqrt.f64 t) (*.f64 z z))))))"]],"rules":[["egg-rr",183],["egg-rr",18],["egg-rr",19],["egg-rr",32]],"stop":[["node limit",1]],"time":75.711181640625,"type":"rewrite"},{"count":[[360,330]],"egraph":[[2,3120,2876,0.017775166000000002],[1,804,3270,0.005852125],[0,238,3350,0.0011605]],"inputs":[["(/.f64 1 z)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (/.f64 1 z))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (pow.f64 z 5))) (/.f64 1 z)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t)))) (pow.f64 z 7))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (pow.f64 z 5))) (/.f64 1 z))))","(/.f64 -1 z)","(-.f64 (*.f64 -1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (/.f64 1 z))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (pow.f64 z 5))) (*.f64 -1/2 (/.f64 (*.f64 a t) (pow.f64 z 3)))) (/.f64 1 z))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (pow.f64 z 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t)))) (pow.f64 z 7))))) (/.f64 1 z))","(/.f64 1 z)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (/.f64 1 z))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (*.f64 z (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))))) (/.f64 1 z)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (*.f64 z (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) t) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) (*.f64 (pow.f64 a 3) z))) (/.f64 1 z))))","(/.f64 1 z)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (/.f64 1 z))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 (pow.f64 t 2) z))) (/.f64 1 z)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 (pow.f64 t 2) z))) (+.f64 (/.f64 1 z) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) a) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 (pow.f64 t 3) z))))))","y","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y t)) (pow.f64 z 2))) y)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y t)) (pow.f64 z 2))) (+.f64 y (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) y) (pow.f64 z 4)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y t)) (pow.f64 z 2))) (+.f64 y (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t))) (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))))) (pow.f64 z 6))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) y) (pow.f64 z 4))))))","(*.f64 -1 y)","(+.f64 (*.f64 -1 y) (*.f64 -1/2 (/.f64 (*.f64 a (*.f64 y t)) (pow.f64 z 2))))","(+.f64 (*.f64 -1 y) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 a (*.f64 y t)) (pow.f64 z 2))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) y) (pow.f64 z 4)))))","(+.f64 (*.f64 -1 y) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 a (*.f64 y t)) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t))))) (pow.f64 z 6))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) y) (pow.f64 z 4))))))","y","(+.f64 y (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))))","(+.f64 y (+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (pow.f64 z 2)))))))","(+.f64 y (+.f64 (*.f64 -1/2 (*.f64 y (*.f64 (pow.f64 a 3) (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))))))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (pow.f64 z 2))))))))","y","(+.f64 y (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))))","(+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (+.f64 y (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2)))))","(+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) a) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 y (*.f64 (pow.f64 t 3) (pow.f64 z 2))))) (+.f64 y (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))))","(+.f64 (*.f64 y x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4)))))","(+.f64 (*.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t))) (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) x)) (pow.f64 z 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))))))","(*.f64 -1 (*.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1 (*.f64 y x)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))) (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t)))) x)) (pow.f64 z 6))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))) (*.f64 -1 (*.f64 y x)))))","(*.f64 y x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (*.f64 (pow.f64 z 2) x))))) (*.f64 y x)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (*.f64 (pow.f64 z 2) x))))) (+.f64 (*.f64 y x) (*.f64 -1/2 (*.f64 y (*.f64 (pow.f64 a 3) (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) x))))))))","(*.f64 y x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x))))) (*.f64 y x)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x))))) (+.f64 (*.f64 y x) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) a) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 y (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 2) x))))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 -1 (*.f64 a t))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(pow.f64 z 2)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(pow.f64 z 2)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(pow.f64 z 2)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(*.f64 -1 (*.f64 a t))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(*.f64 -1 (*.f64 a t))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(pow.f64 z 2)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(*.f64 -1 (*.f64 a t))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(*.f64 -1 (*.f64 a t))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 z)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (/.f64 1 z))","(fma.f64 1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (/.f64 1 z))","(fma.f64 1/2 (*.f64 (/.f64 a (pow.f64 z 3)) t) (/.f64 1 z))","(fma.f64 1/2 (*.f64 (/.f64 t (pow.f64 z 3)) a) (/.f64 1 z))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (pow.f64 z 5))) (/.f64 1 z)))","(fma.f64 1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (pow.f64 z 5)) (/.f64 1 z)))","(fma.f64 1/2 (*.f64 (/.f64 a (pow.f64 z 3)) t) (fma.f64 -1/2 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 (*.f64 a t) (*.f64 a t))) (pow.f64 z 5)) (/.f64 1 z)))","(fma.f64 1/2 (*.f64 (/.f64 t (pow.f64 z 3)) a) (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4) (pow.f64 z 5)) (/.f64 1 z)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t)))) (pow.f64 z 7))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (pow.f64 z 5))) (/.f64 1 z))))","(fma.f64 1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (fma.f64 -1/2 (/.f64 (fma.f64 -1/2 (*.f64 (*.f64 a t) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t))))) (neg.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) (pow.f64 z 7)) (fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (pow.f64 z 5)) (/.f64 1 z))))","(fma.f64 1/2 (*.f64 (/.f64 a (pow.f64 z 3)) t) (fma.f64 -1/2 (/.f64 (-.f64 (*.f64 (*.f64 a t) (*.f64 -1/2 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 (*.f64 a t) (*.f64 a t))))) (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (pow.f64 z 7)) (fma.f64 -1/2 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 (*.f64 a t) (*.f64 a t))) (pow.f64 z 5)) (/.f64 1 z))))","(fma.f64 1/2 (*.f64 (/.f64 t (pow.f64 z 3)) a) (fma.f64 -1/2 (/.f64 (fma.f64 (*.f64 a t) (*.f64 -1/2 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (*.f64 (pow.f64 a 3) (neg.f64 (pow.f64 t 3)))) (pow.f64 z 7)) (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4) (pow.f64 z 5)) (/.f64 1 z))))","(/.f64 -1 z)","(-.f64 (*.f64 -1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (/.f64 1 z))","(-.f64 (/.f64 (*.f64 -1/2 (*.f64 a t)) (pow.f64 z 3)) (/.f64 1 z))","(fma.f64 (*.f64 (/.f64 a (pow.f64 z 3)) t) -1/2 (/.f64 -1 z))","(fma.f64 (*.f64 (/.f64 t (pow.f64 z 3)) a) -1/2 (/.f64 -1 z))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (pow.f64 z 5))) (*.f64 -1/2 (/.f64 (*.f64 a t) (pow.f64 z 3)))) (/.f64 1 z))","(-.f64 (fma.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (pow.f64 z 5)) (/.f64 (*.f64 -1/2 (*.f64 a t)) (pow.f64 z 3))) (/.f64 1 z))","(fma.f64 1/2 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 (*.f64 a t) (*.f64 a t))) (pow.f64 z 5)) (fma.f64 (*.f64 (/.f64 a (pow.f64 z 3)) t) -1/2 (/.f64 -1 z)))","(fma.f64 1/2 (/.f64 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4) (pow.f64 z 5)) (fma.f64 (*.f64 (/.f64 t (pow.f64 z 3)) a) -1/2 (/.f64 -1 z)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (pow.f64 z 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t)))) (pow.f64 z 7))))) (/.f64 1 z))","(-.f64 (fma.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (pow.f64 z 5)) (fma.f64 -1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (*.f64 1/2 (/.f64 (fma.f64 -1/2 (*.f64 (*.f64 a t) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t))))) (neg.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) (pow.f64 z 7))))) (/.f64 1 z))","(+.f64 (fma.f64 1/2 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 (*.f64 a t) (*.f64 a t))) (pow.f64 z 5)) (fma.f64 1/2 (/.f64 (-.f64 (*.f64 (*.f64 a t) (*.f64 -1/2 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 (*.f64 a t) (*.f64 a t))))) (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (pow.f64 z 7)) (*.f64 (*.f64 (/.f64 a (pow.f64 z 3)) t) -1/2))) (/.f64 -1 z))","(+.f64 (fma.f64 (*.f64 (/.f64 t (pow.f64 z 3)) a) -1/2 (*.f64 (/.f64 1/2 (pow.f64 z 5)) (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4))) (fma.f64 1/2 (/.f64 (fma.f64 (*.f64 a t) (*.f64 -1/2 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (*.f64 (pow.f64 a 3) (neg.f64 (pow.f64 t 3)))) (pow.f64 z 7)) (/.f64 -1 z)))","(/.f64 1 z)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (/.f64 1 z))","(fma.f64 1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (/.f64 1 z))","(fma.f64 1/2 (*.f64 (/.f64 a (pow.f64 z 3)) t) (/.f64 1 z))","(fma.f64 1/2 (*.f64 (/.f64 t (pow.f64 z 3)) a) (/.f64 1 z))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (*.f64 z (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))))) (/.f64 1 z)))","(fma.f64 1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (fma.f64 -1/2 (*.f64 (*.f64 a a) (*.f64 z (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)))) (/.f64 1 z)))","(fma.f64 1/2 (*.f64 (/.f64 a (pow.f64 z 3)) t) (fma.f64 -1/2 (*.f64 z (*.f64 (*.f64 a a) (-.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 t t) (pow.f64 z 6))))) (/.f64 1 z)))","(fma.f64 1/2 (*.f64 (/.f64 t (pow.f64 z 3)) a) (fma.f64 -1/2 (*.f64 (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4) (*.f64 z (*.f64 a a))) (/.f64 1 z)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (*.f64 z (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) t) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) (*.f64 (pow.f64 a 3) z))) (/.f64 1 z))))","(fma.f64 1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (fma.f64 -1/2 (*.f64 (*.f64 a a) (*.f64 z (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)))) (fma.f64 -1/2 (*.f64 (*.f64 z (pow.f64 a 3)) (fma.f64 -1/2 (/.f64 t (/.f64 (*.f64 z z) (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)))) (neg.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 8))))) (/.f64 1 z))))","(fma.f64 1/2 (*.f64 (/.f64 a (pow.f64 z 3)) t) (fma.f64 -1/2 (*.f64 z (*.f64 (*.f64 a a) (-.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 t t) (pow.f64 z 6))))) (fma.f64 -1/2 (*.f64 z (*.f64 (pow.f64 a 3) (-.f64 (/.f64 (*.f64 -1/2 (*.f64 t (-.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 t t) (pow.f64 z 6))))) (*.f64 z z)) (/.f64 (pow.f64 t 3) (pow.f64 z 8))))) (/.f64 1 z))))","(+.f64 (*.f64 -1/2 (*.f64 z (+.f64 (*.f64 (*.f64 a a) (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4)) (*.f64 (pow.f64 a 3) (-.f64 (*.f64 (/.f64 -1/2 (*.f64 z z)) (*.f64 t (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4))) (/.f64 (pow.f64 t 3) (pow.f64 z 8))))))) (fma.f64 1/2 (*.f64 (/.f64 t (pow.f64 z 3)) a) (/.f64 1 z)))","(/.f64 1 z)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (/.f64 1 z))","(fma.f64 1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (/.f64 1 z))","(fma.f64 1/2 (*.f64 (/.f64 a (pow.f64 z 3)) t) (/.f64 1 z))","(fma.f64 1/2 (*.f64 (/.f64 t (pow.f64 z 3)) a) (/.f64 1 z))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 (pow.f64 t 2) z))) (/.f64 1 z)))","(fma.f64 1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (fma.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (*.f64 z (*.f64 t t))) (/.f64 1 z)))","(fma.f64 1/2 (*.f64 (/.f64 a (pow.f64 z 3)) t) (fma.f64 -1/2 (*.f64 (*.f64 t t) (*.f64 z (-.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 a a) (pow.f64 z 6))))) (/.f64 1 z)))","(fma.f64 1/2 (*.f64 (/.f64 t (pow.f64 z 3)) a) (fma.f64 -1/2 (*.f64 (*.f64 t t) (*.f64 z (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4))) (/.f64 1 z)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 (pow.f64 t 2) z))) (+.f64 (/.f64 1 z) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) a) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 (pow.f64 t 3) z))))))","(fma.f64 1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (+.f64 (fma.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (*.f64 z (*.f64 t t))) (/.f64 1 z)) (*.f64 -1/2 (*.f64 (fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (/.f64 (*.f64 z z) a)) (neg.f64 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 z (pow.f64 t 3))))))","(fma.f64 1/2 (*.f64 (/.f64 a (pow.f64 z 3)) t) (fma.f64 -1/2 (*.f64 (*.f64 t t) (*.f64 z (-.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 a a) (pow.f64 z 6))))) (fma.f64 (*.f64 -1/2 (fma.f64 -1/2 (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 a a) (pow.f64 z 6))) (*.f64 z z)) a) (/.f64 (neg.f64 (pow.f64 a 3)) (pow.f64 z 8)))) (*.f64 z (pow.f64 t 3)) (/.f64 1 z))))","(fma.f64 1/2 (*.f64 (/.f64 t (pow.f64 z 3)) a) (+.f64 (/.f64 1 z) (*.f64 (*.f64 z -1/2) (+.f64 (*.f64 (pow.f64 t 3) (-.f64 (/.f64 (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4) (/.f64 (*.f64 (/.f64 z a) z) -1/2)) (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 (*.f64 t t) (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4))))))","y","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y t)) (pow.f64 z 2))) y)","(fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t y))) y)","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 a y) z) (/.f64 t z)) y)","(fma.f64 1/2 (*.f64 (/.f64 a (/.f64 z (/.f64 t z))) y) y)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y t)) (pow.f64 z 2))) (+.f64 y (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) y) (pow.f64 z 4)))))","(+.f64 (fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t y))) y) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) y))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 a y) z) (/.f64 t z)) (fma.f64 -1/2 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 (*.f64 a t) (*.f64 a t))) (/.f64 (pow.f64 z 4) y)) y))","(fma.f64 1/2 (*.f64 (/.f64 a (/.f64 z (/.f64 t z))) y) (fma.f64 -1/2 (*.f64 (/.f64 y (pow.f64 z 4)) (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) y))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y t)) (pow.f64 z 2))) (+.f64 y (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t))) (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))))) (pow.f64 z 6))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) y) (pow.f64 z 4))))))","(+.f64 (fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t y))) y) (*.f64 -1/2 (+.f64 (/.f64 y (/.f64 (pow.f64 z 6) (fma.f64 -1/2 (*.f64 (*.f64 a t) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t))))) (neg.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))))) (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) y)))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 a y) z) (/.f64 t z)) (fma.f64 -1/2 (+.f64 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 (*.f64 a t) (*.f64 a t))) (/.f64 (pow.f64 z 4) y)) (*.f64 (/.f64 y (pow.f64 z 6)) (-.f64 (*.f64 (*.f64 a t) (*.f64 -1/2 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 (*.f64 a t) (*.f64 a t))))) (*.f64 (pow.f64 a 3) (pow.f64 t 3))))) y))","(fma.f64 1/2 (*.f64 (/.f64 a (/.f64 z (/.f64 t z))) y) (fma.f64 -1/2 (+.f64 (*.f64 (/.f64 y (pow.f64 z 4)) (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (*.f64 (/.f64 y (pow.f64 z 6)) (fma.f64 (*.f64 a t) (*.f64 -1/2 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (*.f64 (pow.f64 a 3) (neg.f64 (pow.f64 t 3)))))) y))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 -1 y) (*.f64 -1/2 (/.f64 (*.f64 a (*.f64 y t)) (pow.f64 z 2))))","(fma.f64 -1 y (*.f64 -1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t y)))))","(fma.f64 -1/2 (*.f64 (/.f64 (*.f64 a y) z) (/.f64 t z)) (neg.f64 y))","(-.f64 (*.f64 (/.f64 (*.f64 (*.f64 -1/2 a) t) (*.f64 z z)) y) y)","(+.f64 (*.f64 -1 y) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 a (*.f64 y t)) (pow.f64 z 2))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) y) (pow.f64 z 4)))))","(fma.f64 -1 y (fma.f64 -1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t y))) (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) y)))))","(-.f64 (fma.f64 1/2 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 (*.f64 a t) (*.f64 a t))) (/.f64 (pow.f64 z 4) y)) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 a y) z) (/.f64 t z)))) y)","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 y (pow.f64 z 4)) (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (*.f64 (/.f64 (*.f64 (*.f64 -1/2 a) t) (*.f64 z z)) y)) y)","(+.f64 (*.f64 -1 y) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 a (*.f64 y t)) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t))))) (pow.f64 z 6))) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) y) (pow.f64 z 4))))))","(fma.f64 -1 y (fma.f64 -1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t y))) (*.f64 1/2 (+.f64 (/.f64 y (/.f64 (pow.f64 z 6) (fma.f64 -1/2 (*.f64 (*.f64 a t) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t))))) (neg.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))))) (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) y))))))","(-.f64 (fma.f64 1/2 (+.f64 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 (*.f64 a t) (*.f64 a t))) (/.f64 (pow.f64 z 4) y)) (*.f64 (/.f64 y (pow.f64 z 6)) (-.f64 (*.f64 (*.f64 a t) (*.f64 -1/2 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 (*.f64 a t) (*.f64 a t))))) (*.f64 (pow.f64 a 3) (pow.f64 t 3))))) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 a y) z) (/.f64 t z)))) y)","(-.f64 (fma.f64 1/2 (+.f64 (*.f64 (/.f64 y (pow.f64 z 4)) (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (*.f64 (/.f64 y (pow.f64 z 6)) (fma.f64 (*.f64 a t) (*.f64 -1/2 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (*.f64 (pow.f64 a 3) (neg.f64 (pow.f64 t 3)))))) (*.f64 (/.f64 (*.f64 (*.f64 -1/2 a) t) (*.f64 z z)) y)) y)","y","(+.f64 y (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))))","(fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t y))) y)","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 a y) z) (/.f64 t z)) y)","(fma.f64 1/2 (*.f64 (/.f64 a (/.f64 z (/.f64 t z))) y) y)","(+.f64 y (+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (pow.f64 z 2)))))))","(+.f64 y (fma.f64 1/2 (/.f64 (*.f64 (*.f64 a t) y) (*.f64 z z)) (*.f64 -1/2 (*.f64 (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)) (*.f64 (*.f64 a a) (*.f64 (*.f64 z z) y))))))","(+.f64 y (fma.f64 1/2 (*.f64 (/.f64 (*.f64 a y) z) (/.f64 t z)) (*.f64 (-.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 t t) (pow.f64 z 6))) (*.f64 (*.f64 a (*.f64 a (*.f64 z (*.f64 z y)))) -1/2))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 a (/.f64 z (/.f64 t z))) y) y) (*.f64 (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4) (*.f64 (*.f64 y (*.f64 (*.f64 z a) (*.f64 z a))) -1/2)))","(+.f64 y (+.f64 (*.f64 -1/2 (*.f64 y (*.f64 (pow.f64 a 3) (*.f64 (pow.f64 z 2) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))))))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (pow.f64 z 2))))))))","(+.f64 y (fma.f64 -1/2 (*.f64 y (*.f64 (pow.f64 a 3) (*.f64 (*.f64 z z) (fma.f64 -1/2 (/.f64 t (/.f64 (*.f64 z z) (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)))) (neg.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 8))))))) (fma.f64 1/2 (/.f64 (*.f64 (*.f64 a t) y) (*.f64 z z)) (*.f64 -1/2 (*.f64 (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)) (*.f64 (*.f64 a a) (*.f64 (*.f64 z z) y)))))))","(+.f64 y (fma.f64 -1/2 (*.f64 y (*.f64 (pow.f64 a 3) (*.f64 z (*.f64 z (-.f64 (/.f64 (*.f64 -1/2 (*.f64 t (-.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 t t) (pow.f64 z 6))))) (*.f64 z z)) (/.f64 (pow.f64 t 3) (pow.f64 z 8))))))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 a y) z) (/.f64 t z)) (*.f64 (-.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 t t) (pow.f64 z 6))) (*.f64 (*.f64 a (*.f64 a (*.f64 z (*.f64 z y)))) -1/2)))))","(+.f64 y (fma.f64 -1/2 (*.f64 y (*.f64 (-.f64 (*.f64 (/.f64 -1/2 (*.f64 z z)) (*.f64 t (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4))) (/.f64 (pow.f64 t 3) (pow.f64 z 8))) (*.f64 (pow.f64 a 3) (*.f64 z z)))) (fma.f64 1/2 (*.f64 (/.f64 a (/.f64 z (/.f64 t z))) y) (*.f64 (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4) (*.f64 (*.f64 y (*.f64 (*.f64 z a) (*.f64 z a))) -1/2)))))","y","(+.f64 y (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))))","(fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t y))) y)","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 a y) z) (/.f64 t z)) y)","(fma.f64 1/2 (*.f64 (/.f64 a (/.f64 z (/.f64 t z))) y) y)","(+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (+.f64 y (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2)))))","(fma.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (*.f64 y (*.f64 (*.f64 t t) (*.f64 z z)))) (+.f64 y (*.f64 1/2 (/.f64 (*.f64 (*.f64 a t) y) (*.f64 z z)))))","(fma.f64 -1/2 (*.f64 (-.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 a a) (pow.f64 z 6))) (*.f64 (*.f64 t t) (*.f64 z (*.f64 z y)))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 a y) z) (/.f64 t z)) y))","(fma.f64 -1/2 (*.f64 (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4) (*.f64 (*.f64 t t) (*.f64 z (*.f64 z y)))) (fma.f64 1/2 (*.f64 (/.f64 a (/.f64 z (/.f64 t z))) y) y))","(+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (pow.f64 z 2))))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) a) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 y (*.f64 (pow.f64 t 3) (pow.f64 z 2))))) (+.f64 y (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a t)) (pow.f64 z 2))))))","(fma.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (*.f64 y (*.f64 (*.f64 t t) (*.f64 z z)))) (fma.f64 -1/2 (*.f64 (fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (/.f64 (*.f64 z z) a)) (neg.f64 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 y (*.f64 (pow.f64 t 3) (*.f64 z z)))) (+.f64 y (*.f64 1/2 (/.f64 (*.f64 (*.f64 a t) y) (*.f64 z z))))))","(fma.f64 -1/2 (*.f64 (-.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 a a) (pow.f64 z 6))) (*.f64 (*.f64 t t) (*.f64 z (*.f64 z y)))) (fma.f64 -1/2 (*.f64 (fma.f64 -1/2 (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 a a) (pow.f64 z 6))) (*.f64 z z)) a) (/.f64 (neg.f64 (pow.f64 a 3)) (pow.f64 z 8))) (*.f64 (pow.f64 t 3) (*.f64 z (*.f64 z y)))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 a y) z) (/.f64 t z)) y)))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 a (/.f64 z (/.f64 t z))) y) y) (*.f64 -1/2 (*.f64 (*.f64 z z) (+.f64 (*.f64 (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4) (*.f64 (*.f64 t t) y)) (*.f64 (-.f64 (/.f64 (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4) (/.f64 (*.f64 (/.f64 z a) z) -1/2)) (/.f64 (pow.f64 a 3) (pow.f64 z 8))) (*.f64 (pow.f64 t 3) y))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))))","(fma.f64 y x (*.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 y (*.f64 t x))))))","(fma.f64 1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x))) (*.f64 y x))","(+.f64 (*.f64 y x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4)))))","(fma.f64 y x (fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 y (*.f64 t x)))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) (*.f64 y x))))))","(fma.f64 y x (fma.f64 1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x))) (*.f64 -1/2 (*.f64 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 (*.f64 a t) (*.f64 a t))) (pow.f64 z 4)) (*.f64 y x)))))","(fma.f64 y x (fma.f64 1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x))) (*.f64 (/.f64 -1/2 (pow.f64 z 4)) (*.f64 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4) (*.f64 y x)))))","(+.f64 (*.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t))) (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) x)) (pow.f64 z 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))))))","(fma.f64 y x (fma.f64 -1/2 (/.f64 (*.f64 y (*.f64 (fma.f64 -1/2 (*.f64 (*.f64 a t) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t))))) (neg.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) x)) (pow.f64 z 6)) (fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 y (*.f64 t x)))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))))","(fma.f64 y x (fma.f64 -1/2 (/.f64 y (/.f64 (/.f64 (pow.f64 z 6) x) (-.f64 (*.f64 (*.f64 a t) (*.f64 -1/2 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 (*.f64 a t) (*.f64 a t))))) (*.f64 (pow.f64 a 3) (pow.f64 t 3))))) (fma.f64 1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x))) (*.f64 -1/2 (*.f64 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 (*.f64 a t) (*.f64 a t))) (pow.f64 z 4)) (*.f64 y x))))))","(fma.f64 y x (fma.f64 -1/2 (*.f64 (/.f64 y (/.f64 (pow.f64 z 6) x)) (fma.f64 (*.f64 a t) (*.f64 -1/2 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (*.f64 (pow.f64 a 3) (neg.f64 (pow.f64 t 3))))) (fma.f64 1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x))) (*.f64 (/.f64 -1/2 (pow.f64 z 4)) (*.f64 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4) (*.f64 y x))))))","(*.f64 -1 (*.f64 y x))","(neg.f64 (*.f64 y x))","(*.f64 y (neg.f64 x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1 (*.f64 y x)))","(fma.f64 -1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 y (*.f64 t x)))) (neg.f64 (*.f64 y x)))","(-.f64 (*.f64 -1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x)))) (*.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))) (*.f64 -1 (*.f64 y x))))","(fma.f64 -1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 y (*.f64 t x)))) (fma.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) (*.f64 y x))) (neg.f64 (*.f64 y x))))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x))) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 (*.f64 a t) (*.f64 a t))) (pow.f64 z 4)) (*.f64 y x)))) (*.f64 y x))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x))) (*.f64 (/.f64 1/2 (pow.f64 z 4)) (*.f64 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4) (*.f64 y x)))) (*.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t)))) x)) (pow.f64 z 6))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))) (*.f64 -1 (*.f64 y x)))))","(fma.f64 1/2 (/.f64 (*.f64 y (*.f64 (fma.f64 -1/2 (*.f64 (*.f64 a t) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t))))) (neg.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) x)) (pow.f64 z 6)) (fma.f64 -1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 y (*.f64 t x)))) (fma.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) (*.f64 y x))) (neg.f64 (*.f64 y x)))))","(fma.f64 1/2 (/.f64 y (/.f64 (/.f64 (pow.f64 z 6) x) (-.f64 (*.f64 (*.f64 a t) (*.f64 -1/2 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 (*.f64 a t) (*.f64 a t))))) (*.f64 (pow.f64 a 3) (pow.f64 t 3))))) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x))) (*.f64 1/2 (*.f64 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 (*.f64 a t) (*.f64 a t))) (pow.f64 z 4)) (*.f64 y x)))) (*.f64 y x)))","(fma.f64 1/2 (*.f64 (/.f64 y (/.f64 (pow.f64 z 6) x)) (fma.f64 (*.f64 a t) (*.f64 -1/2 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (*.f64 (pow.f64 a 3) (neg.f64 (pow.f64 t 3))))) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x))) (*.f64 (/.f64 1/2 (pow.f64 z 4)) (*.f64 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4) (*.f64 y x)))) (*.f64 y x)))","(*.f64 y x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 y x))","(fma.f64 y x (*.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 y (*.f64 t x))))))","(fma.f64 1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x))) (*.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (*.f64 (pow.f64 z 2) x))))) (*.f64 y x)))","(fma.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (*.f64 z z)) (fma.f64 -1/2 (*.f64 (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)) (*.f64 (*.f64 a a) (*.f64 y (*.f64 (*.f64 z z) x)))) (*.f64 y x)))","(fma.f64 1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x))) (fma.f64 -1/2 (*.f64 (-.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 t t) (pow.f64 z 6))) (*.f64 (*.f64 a a) (*.f64 (*.f64 z (*.f64 z y)) x))) (*.f64 y x)))","(fma.f64 1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x))) (fma.f64 -1/2 (*.f64 (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4) (*.f64 (*.f64 z (*.f64 z y)) (*.f64 x (*.f64 a a)))) (*.f64 y x)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (*.f64 (pow.f64 z 2) x))))) (+.f64 (*.f64 y x) (*.f64 -1/2 (*.f64 y (*.f64 (pow.f64 a 3) (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) x))))))))","(fma.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (*.f64 z z)) (fma.f64 -1/2 (*.f64 (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)) (*.f64 (*.f64 a a) (*.f64 y (*.f64 (*.f64 z z) x)))) (fma.f64 y x (*.f64 -1/2 (*.f64 y (*.f64 (pow.f64 a 3) (*.f64 (*.f64 z z) (*.f64 (fma.f64 -1/2 (/.f64 t (/.f64 (*.f64 z z) (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)))) (neg.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) x))))))))","(fma.f64 1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x))) (fma.f64 -1/2 (*.f64 (-.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 t t) (pow.f64 z 6))) (*.f64 (*.f64 a a) (*.f64 (*.f64 z (*.f64 z y)) x))) (fma.f64 y x (*.f64 (*.f64 (*.f64 -1/2 y) (*.f64 (pow.f64 a 3) (*.f64 z z))) (*.f64 (-.f64 (/.f64 (*.f64 -1/2 (*.f64 t (-.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 t t) (pow.f64 z 6))))) (*.f64 z z)) (/.f64 (pow.f64 t 3) (pow.f64 z 8))) x)))))","(fma.f64 1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x))) (fma.f64 -1/2 (*.f64 (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4) (*.f64 (*.f64 z (*.f64 z y)) (*.f64 x (*.f64 a a)))) (*.f64 y (+.f64 x (*.f64 (*.f64 (pow.f64 a 3) (*.f64 (-.f64 (*.f64 (/.f64 -1/2 (*.f64 z z)) (*.f64 t (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4))) (/.f64 (pow.f64 t 3) (pow.f64 z 8))) (*.f64 z (*.f64 z x)))) -1/2)))))","(*.f64 y x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 y x))","(fma.f64 y x (*.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 y (*.f64 t x))))))","(fma.f64 1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x))) (*.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x))))) (*.f64 y x)))","(fma.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (*.f64 z z)) (fma.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (*.f64 y (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) x)))) (*.f64 y x)))","(fma.f64 1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x))) (fma.f64 y x (*.f64 (-.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 a a) (pow.f64 z 6))) (*.f64 (*.f64 (*.f64 t t) (*.f64 (*.f64 z (*.f64 z y)) x)) -1/2))))","(fma.f64 1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x))) (*.f64 y (+.f64 x (*.f64 (*.f64 -1/2 (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4)) (*.f64 t (*.f64 t (*.f64 z (*.f64 z x))))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x))))) (+.f64 (*.f64 y x) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) a) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 y (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 2) x))))))))","(fma.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (*.f64 z z)) (fma.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (*.f64 y (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) x)))) (fma.f64 y x (*.f64 -1/2 (*.f64 (fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (/.f64 (*.f64 z z) a)) (neg.f64 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 y (*.f64 (pow.f64 t 3) (*.f64 (*.f64 z z) x))))))))","(fma.f64 1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x))) (fma.f64 -1/2 (*.f64 (-.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 a a) (pow.f64 z 6))) (*.f64 (*.f64 t t) (*.f64 (*.f64 z (*.f64 z y)) x))) (fma.f64 -1/2 (*.f64 (fma.f64 -1/2 (*.f64 (/.f64 (-.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 a a) (pow.f64 z 6))) (*.f64 z z)) a) (/.f64 (neg.f64 (pow.f64 a 3)) (pow.f64 z 8))) (*.f64 (pow.f64 t 3) (*.f64 (*.f64 z (*.f64 z y)) x))) (*.f64 y x))))","(fma.f64 1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 t (*.f64 y x))) (+.f64 (*.f64 y x) (*.f64 (*.f64 z (*.f64 z x)) (+.f64 (*.f64 (*.f64 -1/2 (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4)) (*.f64 (*.f64 t t) y)) (*.f64 (+.f64 (/.f64 1/4 (/.f64 z (/.f64 a (/.f64 z (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4))))) (/.f64 1/2 (/.f64 (pow.f64 z 8) (pow.f64 a 3)))) (*.f64 (pow.f64 t 3) y))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 z (*.f64 y x)))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 -1 (*.f64 a t))","(neg.f64 (*.f64 a t))","(*.f64 t (neg.f64 a))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(pow.f64 z 2)","(*.f64 z z)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(pow.f64 z 2)","(*.f64 z z)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(pow.f64 z 2)","(*.f64 z z)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(*.f64 -1 (*.f64 a t))","(neg.f64 (*.f64 a t))","(*.f64 t (neg.f64 a))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(*.f64 -1 (*.f64 a t))","(neg.f64 (*.f64 a t))","(*.f64 t (neg.f64 a))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(pow.f64 z 2)","(*.f64 z z)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(*.f64 -1 (*.f64 a t))","(neg.f64 (*.f64 a t))","(*.f64 t (neg.f64 a))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(*.f64 -1 (*.f64 a t))","(neg.f64 (*.f64 a t))","(*.f64 t (neg.f64 a))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 z z (*.f64 t (neg.f64 a)))"]],"stop":[["node limit",1]],"time":55.326904296875,"type":"simplify"},{"compiler":[[10525,4321]],"time":76.343017578125,"type":"eval"},{"alts":[["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","fresh",23.48835011319649],["(*.f64 x (/.f64 (*.f64 y z) (fma.f64 -1/2 (*.f64 (/.f64 a z) t) z)))","fresh",34.45992659611243],["(/.f64 (/.f64 (*.f64 (*.f64 x y) z) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4))","fresh",23.609150162038702],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","done",22.875874455218312],["(*.f64 x (*.f64 (/.f64 -1 z) (*.f64 y z)))","fresh",38.40670039212504],["(*.f64 x (*.f64 (/.f64 y 1) (/.f64 z (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))","fresh",24.05044418653708],["(*.f64 x (/.f64 (*.f64 y z) (-.f64 (*.f64 (/.f64 1/2 (/.f64 z a)) t) z)))","fresh",35.345655109579106],["(*.f64 x (neg.f64 y))","fresh",34.76840568458675],["(*.f64 y x)","fresh",36.41327140195092],["(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","next",23.272201376903617]],"compiler":[[19,12],[19,12],[30,16],[21,15],[14,10],[20,14],[20,13],[9,7],[8,6],[21,14],[19,12],[19,12],[30,16],[14,10],[20,14],[20,13],[9,7],[8,6],[21,14]],"count":[[340,10]],"kept":[{"done":[0,0],"fresh":[9,6],"new":[330,3],"picked":[1,1]}],"min-error":[3.8161027274605037],"time":112.06591796875,"type":"prune"},{"compiler":[[76,24]],"locations":[["(fma.f64 z z (*.f64 t (neg.f64 a)))",0.5078069952111204,true],["(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))",2.903184909372768,true],["(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a))))))",6.486916030588145,true],["(sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))",22.910957984785806,true]],"time":12.6201171875,"type":"localize"},{"count":[[4,120]],"series":[["(fma.f64 z z (*.f64 t (neg.f64 a)))","a","-inf",0.18212890625],["(fma.f64 z z (*.f64 t (neg.f64 a)))","a","inf",0.14892578125],["(fma.f64 z z (*.f64 t (neg.f64 a)))","a","0",0.259033203125],["(fma.f64 z z (*.f64 t (neg.f64 a)))","t","-inf",0.15185546875],["(fma.f64 z z (*.f64 t (neg.f64 a)))","t","inf",0.14990234375],["(fma.f64 z z (*.f64 t (neg.f64 a)))","t","0",0.26708984375],["(fma.f64 z z (*.f64 t (neg.f64 a)))","z","-inf",0.18408203125],["(fma.f64 z z (*.f64 t (neg.f64 a)))","z","inf",0.2080078125],["(fma.f64 z z (*.f64 t (neg.f64 a)))","z","0",0.233154296875],["(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","a","-inf",0.384033203125],["(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","a","inf",0.382080078125],["(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","a","0",0.28515625],["(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","t","-inf",0.674072265625],["(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","t","inf",0.968994140625],["(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","t","0",0.257080078125],["(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","x","-inf",0.3740234375],["(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","x","inf",0.325927734375],["(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","x","0",0.326904296875],["(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","z","-inf",0.287841796875],["(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","z","inf",0.28515625],["(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","z","0",0.35498046875],["(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","y","-inf",0.367919921875],["(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","y","inf",0.330078125],["(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","y","0",0.680908203125],["(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a))))))","a","-inf",1.98095703125],["(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a))))))","a","inf",0.615966796875],["(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a))))))","a","0",0.491943359375],["(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a))))))","t","-inf",0.672119140625],["(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a))))))","t","inf",0.7099609375],["(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a))))))","t","0",0.47900390625],["(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a))))))","x","-inf",0.36279296875],["(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a))))))","x","inf",0.420166015625],["(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a))))))","x","0",0.973876953125],["(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a))))))","z","-inf",0.51611328125],["(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a))))))","z","inf",0.518798828125],["(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a))))))","z","0",0.9169921875],["(sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))","a","-inf",0.35595703125],["(sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))","a","inf",0.385986328125],["(sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))","a","0",0.308837890625],["(sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))","t","-inf",0.360107421875],["(sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))","t","inf",0.388916015625],["(sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))","t","0",0.31396484375],["(sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))","z","-inf",0.2900390625],["(sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))","z","inf",0.348876953125],["(sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))","z","0",0.550048828125]],"time":20.715087890625,"type":"series"},{"count":[[4,200]],"egraph":[[2,3736,52,0.028098041],[1,302,52,0.005150083],[0,15,70,0.000347208]],"inputs":[["(sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a))))))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(fma.f64 z z (*.f64 t (neg.f64 a)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (fma.f64 t a (*.f64 z z)))) (cbrt.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2)) (/.f64 1 (cbrt.f64 (fma.f64 t a (*.f64 z z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2)) (sqrt.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -2))) (sqrt.f64 (/.f64 1 (cbrt.f64 (fma.f64 t a (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (hypot.f64 z (sqrt.f64 (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (hypot.f64 z (sqrt.f64 (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 -1) (sqrt.f64 (neg.f64 (fma.f64 t a (*.f64 z z)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 t a (*.f64 z z)) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 t a (*.f64 z z))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 z (sqrt.f64 (*.f64 t a))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t a))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 -1/2 (log.f64 (fma.f64 t a (*.f64 z z)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 t a (*.f64 z z)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 -1/2 (log.f64 (fma.f64 t a (*.f64 z z)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 z (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 z) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 z) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 z) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 z) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 z (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 z x) (hypot.f64 z (sqrt.f64 (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 z (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2) 3) (pow.f64 (*.f64 z x) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 z x) 3) (pow.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 z (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 z) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 z (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 z (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2) 3) (pow.f64 (*.f64 z x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 z x) 3) (pow.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 z (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 z (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 z (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 z (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 z (*.f64 (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 y) z) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))))) 2)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 y) z) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 y) z) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))))) (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 y) z) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 z (*.f64 (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))) y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 z x) y) (hypot.f64 z (sqrt.f64 (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (*.f64 z x) y) 1) (hypot.f64 z (sqrt.f64 (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 z (*.f64 (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))) y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (*.f64 (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))) y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 z (*.f64 (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))) y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 z (*.f64 (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))) y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 z (*.f64 (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))) y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (*.f64 z (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))) 3) (pow.f64 y 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 y 3) (pow.f64 (*.f64 z (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 z (*.f64 (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 y) z) (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 z (*.f64 (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 z (*.f64 (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))) y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 z (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 y 3) (pow.f64 (*.f64 z (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a))))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 z (*.f64 (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 z (*.f64 (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 z (*.f64 (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))) y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 z (*.f64 (/.f64 x (hypot.f64 z (sqrt.f64 (*.f64 t a)))) y))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t a) (*.f64 z z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t a (*.f64 z z)) (fma.f64 (*.f64 t a) 1 (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t a (*.f64 z z)) (fma.f64 a t (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t a (*.f64 z z)) (fma.f64 (neg.f64 t) a (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t a (*.f64 z z)) (fma.f64 -1 (*.f64 t a) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t a (*.f64 z z)) (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 t a)) 2)) (cbrt.f64 (*.f64 t a)) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t a (*.f64 z z)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t a))) (pow.f64 (cbrt.f64 (*.f64 t a)) 2) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t a (*.f64 z z)) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 t a))) (sqrt.f64 (*.f64 t a)) (*.f64 t a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 t a (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 z z) (*.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 z z) 1) (*.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (cbrt.f64 (*.f64 a a))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 (cbrt.f64 a) t) (cbrt.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (cbrt.f64 (*.f64 a a))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 (cbrt.f64 a) t) (cbrt.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (cbrt.f64 (*.f64 a a))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 (cbrt.f64 a) t) (cbrt.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (cbrt.f64 (*.f64 a a))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 (cbrt.f64 a) t) (cbrt.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (cbrt.f64 (*.f64 a a))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 (cbrt.f64 a) t) (cbrt.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 z z)) 2) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (cbrt.f64 (*.f64 a a))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 (cbrt.f64 a) t) (cbrt.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (cbrt.f64 (*.f64 a a))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 (cbrt.f64 a) t) (cbrt.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 z z)) 2) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2)))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 t) a)) (pow.f64 (cbrt.f64 t) 2) (*.f64 (*.f64 (cbrt.f64 t) a) (pow.f64 (cbrt.f64 t) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 z z)) 2) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) t)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) t) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 z z)) 2) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 t) a)) (sqrt.f64 t) (*.f64 (*.f64 (sqrt.f64 t) a) (sqrt.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (*.f64 t a) -1))) (fma.f64 (*.f64 t a) -1 (*.f64 (*.f64 t a) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (*.f64 t a) -1))) (fma.f64 (*.f64 t a) -1 (*.f64 (*.f64 t a) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (*.f64 t a) -1))) (fma.f64 (*.f64 t a) -1 (*.f64 (*.f64 t a) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (*.f64 t a) -1))) (fma.f64 (*.f64 t a) -1 (*.f64 (*.f64 t a) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (*.f64 t a) -1))) (fma.f64 (*.f64 t a) -1 (*.f64 (*.f64 t a) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 z z)) 2) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (*.f64 t a) -1))) (fma.f64 (*.f64 t a) -1 (*.f64 (*.f64 t a) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (*.f64 t a) -1))) (fma.f64 (*.f64 t a) -1 (*.f64 (*.f64 t a) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 a (neg.f64 t)))) (fma.f64 a (neg.f64 t) (*.f64 a (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 a (neg.f64 t)))) (fma.f64 a (neg.f64 t) (*.f64 a (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 a (neg.f64 t)))) (fma.f64 a (neg.f64 t) (*.f64 a (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 a (neg.f64 t)))) (fma.f64 a (neg.f64 t) (*.f64 a (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 a (neg.f64 t)))) (fma.f64 a (neg.f64 t) (*.f64 a (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 z z)) 2) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 a (neg.f64 t)))) (fma.f64 a (neg.f64 t) (*.f64 a (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 a (neg.f64 t)))) (fma.f64 a (neg.f64 t) (*.f64 a (neg.f64 t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 t (cbrt.f64 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 t (cbrt.f64 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 t (cbrt.f64 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 t (cbrt.f64 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 t (cbrt.f64 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 z z)) 2) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 t (cbrt.f64 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 t (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 t (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 t (cbrt.f64 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 z z)) 2) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 t (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 t (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 a (*.f64 t -1)))) (fma.f64 a (*.f64 t -1) (*.f64 a (*.f64 t -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 a (*.f64 t -1)))) (fma.f64 a (*.f64 t -1) (*.f64 a (*.f64 t -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 a (*.f64 t -1)))) (fma.f64 a (*.f64 t -1) (*.f64 a (*.f64 t -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 a (*.f64 t -1)))) (fma.f64 a (*.f64 t -1) (*.f64 a (*.f64 t -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 a (*.f64 t -1)))) (fma.f64 a (*.f64 t -1) (*.f64 a (*.f64 t -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 z z)) 2) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 a (*.f64 t -1)))) (fma.f64 a (*.f64 t -1) (*.f64 a (*.f64 t -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 a (*.f64 t -1)))) (fma.f64 a (*.f64 t -1) (*.f64 a (*.f64 t -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 z z)) 2) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2))))) (fma.f64 (neg.f64 (cbrt.f64 t)) (*.f64 a (pow.f64 (cbrt.f64 t) 2)) (*.f64 (cbrt.f64 t) (*.f64 a (pow.f64 (cbrt.f64 t) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 z z) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 z z (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 z) (*.f64 (sqrt.f64 z) z) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (sqrt.f64 z)) (sqrt.f64 z) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (*.f64 z z)) 2) (cbrt.f64 (*.f64 z z)) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 z (cbrt.f64 (*.f64 z z))) (cbrt.f64 z) (neg.f64 (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t))))) (fma.f64 (neg.f64 (sqrt.f64 t)) (*.f64 a (sqrt.f64 t)) (*.f64 (sqrt.f64 t) (*.f64 a (sqrt.f64 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 t a (*.f64 z z)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 t a (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 t a (*.f64 z z))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 t a (*.f64 z z))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 z z) (*.f64 t a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 t a (*.f64 z z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 t a (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 t a (*.f64 z z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 t a (*.f64 z z))) (cbrt.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) 2)) (cbrt.f64 (fma.f64 t a (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 z (sqrt.f64 (*.f64 t a))) (hypot.f64 z (sqrt.f64 (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (fma.f64 t a (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 t a (*.f64 z z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) 2)) (/.f64 1 (cbrt.f64 (fma.f64 t a (*.f64 z z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (hypot.f64 z (sqrt.f64 (*.f64 t a))) (pow.f64 (fma.f64 t a (*.f64 z z)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 t a (*.f64 z z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 z z) 3) (pow.f64 (*.f64 t a) 3)) (+.f64 (pow.f64 (*.f64 z z) 2) (-.f64 (pow.f64 (*.f64 t a) 2) (*.f64 (*.f64 z z) (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 z z) 2) (pow.f64 (*.f64 t a) 2)) (fma.f64 t a (*.f64 z z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 t a (*.f64 z z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 t a (*.f64 z z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 t a (*.f64 z z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 z (sqrt.f64 (*.f64 t a))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 t a (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 t a (*.f64 z z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 z z)) (pow.f64 (exp.f64 a) t)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 z z)) (+.f64 1 (expm1.f64 (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 a) t) (exp.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 t a))) (exp.f64 (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 z z)) (+.f64 1 (expm1.f64 (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 t a (*.f64 z z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 t a (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 t a (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 t a (*.f64 z z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 t a (*.f64 z z))) 1))))))"]],"rules":[["egg-rr",123],["egg-rr",23],["egg-rr",22],["egg-rr",32]],"stop":[["node limit",1]],"time":65.261962890625,"type":"rewrite"},{"count":[[320,280]],"egraph":[[2,2847,3108,0.017400875],[1,744,3520,0.005448792],[0,218,3717,0.001133625]],"inputs":[["(/.f64 1 z)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (/.f64 1 z))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (pow.f64 z 5))) (/.f64 1 z)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t)))) (pow.f64 z 7))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (pow.f64 z 5))) (/.f64 1 z))))","(/.f64 -1 z)","(-.f64 (*.f64 -1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (/.f64 1 z))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (pow.f64 z 5))) (*.f64 -1/2 (/.f64 (*.f64 a t) (pow.f64 z 3)))) (/.f64 1 z))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (pow.f64 z 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t)))) (pow.f64 z 7))))) (/.f64 1 z))","(/.f64 1 z)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (/.f64 1 z))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 (pow.f64 t 2) z))) (/.f64 1 z)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 (pow.f64 t 2) z))) (+.f64 (/.f64 1 z) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) a) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 (pow.f64 t 3) z))))))","(/.f64 1 z)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (/.f64 1 z))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (*.f64 z (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))))) (/.f64 1 z)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (*.f64 z (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) t) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) (*.f64 (pow.f64 a 3) z))) (/.f64 1 z))))","x","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) x)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) x) (pow.f64 z 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) x) (pow.f64 z 4))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t))) (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) x) (pow.f64 z 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) x)))","(*.f64 -1 x)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) (*.f64 -1 x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 x) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) x) (pow.f64 z 4)))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t)))) x) (pow.f64 z 6))) (+.f64 (*.f64 -1 x) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) x) (pow.f64 z 4))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","x","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) x)","(+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) x))","(+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) a) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 2) x)))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) x)))","x","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) x)","(+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 z 2) x)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) x))","(+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 z 2) x)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 3) (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) x)))) x)))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))))","(+.f64 (*.f64 y x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4)))))","(+.f64 (*.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t))) (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) x)) (pow.f64 z 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))))))","(*.f64 -1 (*.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1 (*.f64 y x)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))) (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t)))) x)) (pow.f64 z 6))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))) (*.f64 -1 (*.f64 y x)))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 y x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x))))) (*.f64 y x)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x))))) (+.f64 (*.f64 y x) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) a) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 y (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 2) x))))))))","(*.f64 y x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (*.f64 (pow.f64 z 2) x))))) (*.f64 y x)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (*.f64 (pow.f64 z 2) x))))) (+.f64 (*.f64 y x) (*.f64 -1/2 (*.f64 y (*.f64 (pow.f64 a 3) (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) x))))))))","(*.f64 -1 (*.f64 a t))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(pow.f64 z 2)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(pow.f64 z 2)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(pow.f64 z 2)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(*.f64 -1 (*.f64 a t))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(*.f64 -1 (*.f64 a t))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(pow.f64 z 2)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(*.f64 -1 (*.f64 a t))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(*.f64 -1 (*.f64 a t))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1 z)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (/.f64 1 z))","(fma.f64 1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (/.f64 1 z))","(fma.f64 1/2 (/.f64 t (/.f64 (pow.f64 z 3) a)) (/.f64 1 z))","(fma.f64 1/2 (*.f64 (/.f64 a (pow.f64 z 3)) t) (/.f64 1 z))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (pow.f64 z 5))) (/.f64 1 z)))","(fma.f64 1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (pow.f64 z 5)) (/.f64 1 z)))","(fma.f64 1/2 (/.f64 t (/.f64 (pow.f64 z 3) a)) (fma.f64 -1/2 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 t (*.f64 t (*.f64 a a)))) (pow.f64 z 5)) (/.f64 1 z)))","(fma.f64 1/2 (*.f64 (/.f64 a (pow.f64 z 3)) t) (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4) (pow.f64 z 5)) (/.f64 1 z)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t)))) (pow.f64 z 7))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (pow.f64 z 5))) (/.f64 1 z))))","(fma.f64 1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (fma.f64 -1/2 (/.f64 (fma.f64 -1/2 (*.f64 (*.f64 a t) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t))))) (neg.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) (pow.f64 z 7)) (fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (pow.f64 z 5)) (/.f64 1 z))))","(fma.f64 1/2 (/.f64 t (/.f64 (pow.f64 z 3) a)) (fma.f64 -1/2 (/.f64 (fma.f64 (*.f64 -1/2 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 t (*.f64 t (*.f64 a a))))) (*.f64 a t) (*.f64 (pow.f64 t 3) (neg.f64 (pow.f64 a 3)))) (pow.f64 z 7)) (fma.f64 -1/2 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 t (*.f64 t (*.f64 a a)))) (pow.f64 z 5)) (/.f64 1 z))))","(fma.f64 1/2 (*.f64 (/.f64 a (pow.f64 z 3)) t) (fma.f64 -1/2 (/.f64 (-.f64 (*.f64 (*.f64 a t) (*.f64 -1/2 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4))) (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (pow.f64 z 7)) (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4) (pow.f64 z 5)) (/.f64 1 z))))","(/.f64 -1 z)","(-.f64 (*.f64 -1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (/.f64 1 z))","(-.f64 (/.f64 (*.f64 -1/2 (*.f64 a t)) (pow.f64 z 3)) (/.f64 1 z))","(fma.f64 (/.f64 t (/.f64 (pow.f64 z 3) a)) -1/2 (/.f64 -1 z))","(fma.f64 (*.f64 (/.f64 a (pow.f64 z 3)) t) -1/2 (/.f64 -1 z))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (pow.f64 z 5))) (*.f64 -1/2 (/.f64 (*.f64 a t) (pow.f64 z 3)))) (/.f64 1 z))","(-.f64 (fma.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (pow.f64 z 5)) (/.f64 (*.f64 -1/2 (*.f64 a t)) (pow.f64 z 3))) (/.f64 1 z))","(fma.f64 1/2 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 t (*.f64 t (*.f64 a a)))) (pow.f64 z 5)) (fma.f64 (/.f64 t (/.f64 (pow.f64 z 3) a)) -1/2 (/.f64 -1 z)))","(fma.f64 1/2 (/.f64 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4) (pow.f64 z 5)) (fma.f64 (*.f64 (/.f64 a (pow.f64 z 3)) t) -1/2 (/.f64 -1 z)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (pow.f64 z 5))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t)))) (pow.f64 z 7))))) (/.f64 1 z))","(-.f64 (fma.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (pow.f64 z 5)) (fma.f64 -1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (*.f64 1/2 (/.f64 (fma.f64 -1/2 (*.f64 (*.f64 a t) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t))))) (neg.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) (pow.f64 z 7))))) (/.f64 1 z))","(+.f64 (fma.f64 1/2 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 t (*.f64 t (*.f64 a a)))) (pow.f64 z 5)) (fma.f64 1/2 (/.f64 (fma.f64 (*.f64 -1/2 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 t (*.f64 t (*.f64 a a))))) (*.f64 a t) (*.f64 (pow.f64 t 3) (neg.f64 (pow.f64 a 3)))) (pow.f64 z 7)) (*.f64 (/.f64 t (/.f64 (pow.f64 z 3) a)) -1/2))) (/.f64 -1 z))","(+.f64 (*.f64 1/2 (+.f64 (/.f64 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4) (pow.f64 z 5)) (/.f64 (-.f64 (*.f64 (*.f64 a t) (*.f64 -1/2 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4))) (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (pow.f64 z 7)))) (fma.f64 (*.f64 (/.f64 a (pow.f64 z 3)) t) -1/2 (/.f64 -1 z)))","(/.f64 1 z)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (/.f64 1 z))","(fma.f64 1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (/.f64 1 z))","(fma.f64 1/2 (/.f64 t (/.f64 (pow.f64 z 3) a)) (/.f64 1 z))","(fma.f64 1/2 (*.f64 (/.f64 a (pow.f64 z 3)) t) (/.f64 1 z))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 (pow.f64 t 2) z))) (/.f64 1 z)))","(fma.f64 1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (fma.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (*.f64 z (*.f64 t t))) (/.f64 1 z)))","(fma.f64 1/2 (/.f64 t (/.f64 (pow.f64 z 3) a)) (fma.f64 -1/2 (*.f64 z (*.f64 (*.f64 t t) (-.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 a a) (pow.f64 z 6))))) (/.f64 1 z)))","(fma.f64 1/2 (*.f64 (/.f64 a (pow.f64 z 3)) t) (fma.f64 -1/2 (*.f64 z (*.f64 (*.f64 t t) (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4))) (/.f64 1 z)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 (pow.f64 t 2) z))) (+.f64 (/.f64 1 z) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) a) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 (pow.f64 t 3) z))))))","(fma.f64 1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (+.f64 (fma.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (*.f64 z (*.f64 t t))) (/.f64 1 z)) (*.f64 -1/2 (*.f64 (fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (/.f64 (*.f64 z z) a)) (neg.f64 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 z (pow.f64 t 3))))))","(fma.f64 1/2 (/.f64 t (/.f64 (pow.f64 z 3) a)) (fma.f64 -1/2 (*.f64 z (*.f64 (*.f64 t t) (-.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 a a) (pow.f64 z 6))))) (fma.f64 -1/2 (*.f64 z (*.f64 (pow.f64 t 3) (-.f64 (*.f64 -1/2 (*.f64 (/.f64 a z) (/.f64 (-.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 a a) (pow.f64 z 6))) z))) (/.f64 (pow.f64 a 3) (pow.f64 z 8))))) (/.f64 1 z))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 a (pow.f64 z 3)) t) (/.f64 1 z)) (*.f64 (*.f64 z -1/2) (+.f64 (*.f64 (*.f64 t t) (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4)) (*.f64 (pow.f64 t 3) (-.f64 (*.f64 -1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4))) (/.f64 (pow.f64 a 3) (pow.f64 z 8)))))))","(/.f64 1 z)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (/.f64 1 z))","(fma.f64 1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (/.f64 1 z))","(fma.f64 1/2 (/.f64 t (/.f64 (pow.f64 z 3) a)) (/.f64 1 z))","(fma.f64 1/2 (*.f64 (/.f64 a (pow.f64 z 3)) t) (/.f64 1 z))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (*.f64 z (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))))) (/.f64 1 z)))","(fma.f64 1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (fma.f64 -1/2 (*.f64 (*.f64 a a) (*.f64 z (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)))) (/.f64 1 z)))","(fma.f64 1/2 (/.f64 t (/.f64 (pow.f64 z 3) a)) (fma.f64 -1/2 (*.f64 z (*.f64 (*.f64 a a) (-.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 t t) (pow.f64 z 6))))) (/.f64 1 z)))","(fma.f64 1/2 (*.f64 (/.f64 a (pow.f64 z 3)) t) (fma.f64 -1/2 (*.f64 (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4) (*.f64 z (*.f64 a a))) (/.f64 1 z)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a t) (pow.f64 z 3))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 2) (*.f64 z (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) t) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) (*.f64 (pow.f64 a 3) z))) (/.f64 1 z))))","(fma.f64 1/2 (/.f64 a (/.f64 (pow.f64 z 3) t)) (fma.f64 -1/2 (*.f64 (*.f64 a a) (*.f64 z (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)))) (fma.f64 -1/2 (*.f64 (fma.f64 -1/2 (/.f64 t (/.f64 (*.f64 z z) (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)))) (neg.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) (*.f64 z (pow.f64 a 3))) (/.f64 1 z))))","(fma.f64 1/2 (/.f64 t (/.f64 (pow.f64 z 3) a)) (fma.f64 -1/2 (*.f64 z (*.f64 (*.f64 a a) (-.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 t t) (pow.f64 z 6))))) (fma.f64 -1/2 (*.f64 z (*.f64 (pow.f64 a 3) (fma.f64 -1/2 (*.f64 (/.f64 t z) (/.f64 (-.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 t t) (pow.f64 z 6))) z)) (/.f64 (neg.f64 (pow.f64 t 3)) (pow.f64 z 8))))) (/.f64 1 z))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 a (pow.f64 z 3)) t) (/.f64 1 z)) (*.f64 -1/2 (*.f64 z (+.f64 (*.f64 (*.f64 a a) (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4)) (*.f64 (pow.f64 a 3) (-.f64 (*.f64 -1/2 (*.f64 (/.f64 t (*.f64 z z)) (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4))) (/.f64 (pow.f64 t 3) (pow.f64 z 8))))))))","x","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) x)","(fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t x))) x)","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 a t) z) (/.f64 x z)) x)","(fma.f64 1/2 (*.f64 (/.f64 a (/.f64 z t)) (/.f64 x z)) x)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) x) (pow.f64 z 4))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) x))","(fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) x)) (fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t x))) x))","(fma.f64 -1/2 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 t (*.f64 t (*.f64 a a)))) (/.f64 (pow.f64 z 4) x)) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 a t) z) (/.f64 x z)) x))","(fma.f64 -1/2 (*.f64 (/.f64 x (pow.f64 z 4)) (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (fma.f64 1/2 (*.f64 (/.f64 a (/.f64 z t)) (/.f64 x z)) x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) x) (pow.f64 z 4))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t))) (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) x) (pow.f64 z 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) x)))","(fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) x)) (fma.f64 -1/2 (/.f64 (fma.f64 -1/2 (*.f64 (*.f64 a t) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t))))) (neg.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) (/.f64 (pow.f64 z 6) x)) (fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t x))) x)))","(fma.f64 -1/2 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 t (*.f64 t (*.f64 a a)))) (/.f64 (pow.f64 z 4) x)) (fma.f64 -1/2 (/.f64 (fma.f64 (*.f64 -1/2 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 t (*.f64 t (*.f64 a a))))) (*.f64 a t) (*.f64 (pow.f64 t 3) (neg.f64 (pow.f64 a 3)))) (/.f64 (pow.f64 z 6) x)) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 a t) z) (/.f64 x z)) x)))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 a (/.f64 z t)) (/.f64 x z)) x) (*.f64 -1/2 (*.f64 x (+.f64 (/.f64 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4) (pow.f64 z 4)) (/.f64 (-.f64 (*.f64 (*.f64 a t) (*.f64 -1/2 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4))) (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (pow.f64 z 6))))))","(*.f64 -1 x)","(neg.f64 x)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) (*.f64 -1 x))","(fma.f64 -1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t x))) (neg.f64 x))","(-.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 a t) z) (/.f64 x z))) x)","(-.f64 (*.f64 (/.f64 -1/2 z) (/.f64 t (/.f64 z (*.f64 a x)))) x)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) (+.f64 (*.f64 -1 x) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) x) (pow.f64 z 4)))))","(fma.f64 -1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t x))) (fma.f64 -1 x (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) x)))))","(fma.f64 -1/2 (*.f64 (/.f64 (*.f64 a t) z) (/.f64 x z)) (-.f64 (/.f64 (*.f64 1/2 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 t (*.f64 t (*.f64 a a))))) (/.f64 (pow.f64 z 4) x)) x))","(fma.f64 -1/2 (*.f64 (/.f64 a (/.f64 z t)) (/.f64 x z)) (-.f64 (*.f64 (/.f64 (*.f64 1/2 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (pow.f64 z 4)) x) x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t)))) x) (pow.f64 z 6))) (+.f64 (*.f64 -1 x) (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) x) (pow.f64 z 4))))))","(fma.f64 -1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t x))) (fma.f64 1/2 (/.f64 (fma.f64 -1/2 (*.f64 (*.f64 a t) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t))))) (neg.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) (/.f64 (pow.f64 z 6) x)) (fma.f64 -1 x (*.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) x))))))","(fma.f64 -1/2 (*.f64 (/.f64 (*.f64 a t) z) (/.f64 x z)) (fma.f64 1/2 (/.f64 (fma.f64 (*.f64 -1/2 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 t (*.f64 t (*.f64 a a))))) (*.f64 a t) (*.f64 (pow.f64 t 3) (neg.f64 (pow.f64 a 3)))) (/.f64 (pow.f64 z 6) x)) (-.f64 (/.f64 (*.f64 1/2 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 t (*.f64 t (*.f64 a a))))) (/.f64 (pow.f64 z 4) x)) x)))","(fma.f64 -1/2 (*.f64 (/.f64 a (/.f64 z t)) (/.f64 x z)) (-.f64 (*.f64 1/2 (*.f64 x (+.f64 (/.f64 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4) (pow.f64 z 4)) (/.f64 (-.f64 (*.f64 (*.f64 a t) (*.f64 -1/2 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4))) (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (pow.f64 z 6))))) x))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t))))))","(*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z))))))","x","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) x)","(fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t x))) x)","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 a t) z) (/.f64 x z)) x)","(fma.f64 1/2 (*.f64 (/.f64 a (/.f64 z t)) (/.f64 x z)) x)","(+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) x))","(fma.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) x))) (fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t x))) x))","(fma.f64 -1/2 (*.f64 (*.f64 t t) (*.f64 (*.f64 z (*.f64 z x)) (-.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 a a) (pow.f64 z 6))))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 a t) z) (/.f64 x z)) x))","(fma.f64 -1/2 (*.f64 (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4) (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) x))) (fma.f64 1/2 (*.f64 (/.f64 a (/.f64 z t)) (/.f64 x z)) x))","(+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) a) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 2) x)))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) x)))","(fma.f64 -1/2 (*.f64 (fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (/.f64 (*.f64 z z) a)) (neg.f64 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 (pow.f64 t 3) (*.f64 (*.f64 z z) x))) (fma.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) x))) (fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t x))) x)))","(fma.f64 -1/2 (*.f64 (-.f64 (*.f64 -1/2 (*.f64 (/.f64 a z) (/.f64 (-.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 a a) (pow.f64 z 6))) z))) (/.f64 (pow.f64 a 3) (pow.f64 z 8))) (*.f64 (pow.f64 t 3) (*.f64 z (*.f64 z x)))) (fma.f64 -1/2 (*.f64 (*.f64 t t) (*.f64 (*.f64 z (*.f64 z x)) (-.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 a a) (pow.f64 z 6))))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 a t) z) (/.f64 x z)) x)))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 a (/.f64 z t)) (/.f64 x z)) x) (*.f64 -1/2 (*.f64 (*.f64 (*.f64 z z) x) (+.f64 (*.f64 (pow.f64 t 3) (-.f64 (*.f64 -1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4))) (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 (*.f64 t t) (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4))))))","x","(+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) x)","(fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t x))) x)","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 a t) z) (/.f64 x z)) x)","(fma.f64 1/2 (*.f64 (/.f64 a (/.f64 z t)) (/.f64 x z)) x)","(+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 z 2) x)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) x))","(fma.f64 -1/2 (*.f64 (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)) (*.f64 (*.f64 a a) (*.f64 (*.f64 z z) x))) (fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t x))) x))","(fma.f64 -1/2 (*.f64 (-.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 t t) (pow.f64 z 6))) (*.f64 (*.f64 z z) (*.f64 x (*.f64 a a)))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 a t) z) (/.f64 x z)) x))","(fma.f64 -1/2 (*.f64 (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4) (*.f64 a (*.f64 a (*.f64 (*.f64 z z) x)))) (fma.f64 1/2 (*.f64 (/.f64 a (/.f64 z t)) (/.f64 x z)) x))","(+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 (pow.f64 z 2) x)))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 t x)) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (pow.f64 a 3) (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) x)))) x)))","(fma.f64 -1/2 (*.f64 (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)) (*.f64 (*.f64 a a) (*.f64 (*.f64 z z) x))) (fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 t x))) (fma.f64 -1/2 (*.f64 (pow.f64 a 3) (*.f64 (*.f64 z z) (*.f64 (fma.f64 -1/2 (/.f64 t (/.f64 (*.f64 z z) (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)))) (neg.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) x))) x)))","(fma.f64 -1/2 (*.f64 (-.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 t t) (pow.f64 z 6))) (*.f64 (*.f64 z z) (*.f64 x (*.f64 a a)))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 a t) z) (/.f64 x z)) (fma.f64 -1/2 (*.f64 (pow.f64 a 3) (*.f64 z (*.f64 z (*.f64 (fma.f64 -1/2 (*.f64 (/.f64 t z) (/.f64 (-.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 t t) (pow.f64 z 6))) z)) (/.f64 (neg.f64 (pow.f64 t 3)) (pow.f64 z 8))) x)))) x)))","(fma.f64 -1/2 (*.f64 (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4) (*.f64 a (*.f64 a (*.f64 (*.f64 z z) x)))) (fma.f64 1/2 (*.f64 (/.f64 a (/.f64 z t)) (/.f64 x z)) (fma.f64 -1/2 (*.f64 (*.f64 z z) (*.f64 (*.f64 (-.f64 (*.f64 -1/2 (*.f64 (/.f64 t (*.f64 z z)) (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4))) (/.f64 (pow.f64 t 3) (pow.f64 z 8))) x) (pow.f64 a 3))) x)))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 y x)","(*.f64 x y)","(+.f64 (*.f64 y x) (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))))","(fma.f64 y x (*.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 (*.f64 t x) y)))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 t (*.f64 a x)) z) (/.f64 y z)) (*.f64 x y))","(fma.f64 1/2 (*.f64 (/.f64 t (/.f64 z (*.f64 a x))) (/.f64 y z)) (*.f64 x y))","(+.f64 (*.f64 y x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4)))))","(fma.f64 y x (fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 (*.f64 t x) y))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) (*.f64 x y))))))","(fma.f64 x y (fma.f64 1/2 (*.f64 (/.f64 (*.f64 t (*.f64 a x)) z) (/.f64 y z)) (*.f64 -1/2 (*.f64 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 t (*.f64 t (*.f64 a a)))) (pow.f64 z 4)) (*.f64 x y)))))","(fma.f64 x y (fma.f64 1/2 (*.f64 (/.f64 t (/.f64 z (*.f64 a x))) (/.f64 y z)) (*.f64 (/.f64 -1/2 (pow.f64 z 4)) (*.f64 (*.f64 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4) x) y))))","(+.f64 (*.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t))) (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) x)) (pow.f64 z 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))))))","(fma.f64 y x (fma.f64 -1/2 (/.f64 y (/.f64 (pow.f64 z 6) (*.f64 (fma.f64 -1/2 (*.f64 (*.f64 a t) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t))))) (neg.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) x))) (fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 (*.f64 t x) y))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) (*.f64 x y)))))))","(fma.f64 x y (fma.f64 -1/2 (*.f64 (/.f64 y (pow.f64 z 6)) (*.f64 (fma.f64 (*.f64 -1/2 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 t (*.f64 t (*.f64 a a))))) (*.f64 a t) (*.f64 (pow.f64 t 3) (neg.f64 (pow.f64 a 3)))) x)) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 t (*.f64 a x)) z) (/.f64 y z)) (*.f64 -1/2 (*.f64 (/.f64 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 t (*.f64 t (*.f64 a a)))) (pow.f64 z 4)) (*.f64 x y))))))","(fma.f64 x y (fma.f64 -1/2 (*.f64 (*.f64 (/.f64 x (pow.f64 z 6)) (-.f64 (*.f64 (*.f64 a t) (*.f64 -1/2 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4))) (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) y) (fma.f64 1/2 (*.f64 (/.f64 t (/.f64 z (*.f64 a x))) (/.f64 y z)) (*.f64 (/.f64 -1/2 (pow.f64 z 4)) (*.f64 (*.f64 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4) x) y)))))","(*.f64 -1 (*.f64 y x))","(neg.f64 (*.f64 x y))","(*.f64 x (neg.f64 y))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1 (*.f64 y x)))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 a (*.f64 t x)) y) (*.f64 z z)) (neg.f64 (*.f64 x y)))","(-.f64 (*.f64 -1/2 (*.f64 (/.f64 (*.f64 t (*.f64 a x)) z) (/.f64 y z))) (*.f64 x y))","(-.f64 (/.f64 (*.f64 -1/2 (*.f64 t (*.f64 a x))) (/.f64 z (/.f64 y z))) (*.f64 x y))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))) (*.f64 -1 (*.f64 y x))))","(fma.f64 -1/2 (/.f64 (*.f64 (*.f64 a (*.f64 t x)) y) (*.f64 z z)) (fma.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) (*.f64 x y))) (neg.f64 (*.f64 x y))))","(fma.f64 -1/2 (*.f64 (/.f64 (*.f64 t (*.f64 a x)) z) (/.f64 y z)) (-.f64 (/.f64 (*.f64 1/2 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 t (*.f64 t (*.f64 a a))))) (/.f64 (pow.f64 z 4) (*.f64 x y))) (*.f64 x y)))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 t (/.f64 z (*.f64 a x))) (/.f64 y z)) (*.f64 (*.f64 (/.f64 (*.f64 1/2 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (pow.f64 z 4)) x) y)) (*.f64 x y))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t)))) x)) (pow.f64 z 6))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))) (*.f64 -1 (*.f64 y x)))))","(fma.f64 1/2 (/.f64 y (/.f64 (pow.f64 z 6) (*.f64 (fma.f64 -1/2 (*.f64 (*.f64 a t) (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t))))) (neg.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) x))) (fma.f64 -1/2 (/.f64 (*.f64 (*.f64 a (*.f64 t x)) y) (*.f64 z z)) (fma.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) (*.f64 x y))) (neg.f64 (*.f64 x y)))))","(fma.f64 1/2 (*.f64 (/.f64 y (pow.f64 z 6)) (*.f64 (fma.f64 (*.f64 -1/2 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 t (*.f64 t (*.f64 a a))))) (*.f64 a t) (*.f64 (pow.f64 t 3) (neg.f64 (pow.f64 a 3)))) x)) (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 t (*.f64 a x)) z) (/.f64 y z)) (-.f64 (/.f64 (*.f64 1/2 (-.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 t (*.f64 t (*.f64 a a))))) (/.f64 (pow.f64 z 4) (*.f64 x y))) (*.f64 x y))))","(fma.f64 1/2 (*.f64 (*.f64 (/.f64 x (pow.f64 z 6)) (-.f64 (*.f64 (*.f64 a t) (*.f64 -1/2 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4))) (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) y) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 t (/.f64 z (*.f64 a x))) (/.f64 y z)) (*.f64 (*.f64 (/.f64 (*.f64 1/2 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (pow.f64 z 4)) x) y)) (*.f64 x y)))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (/.f64 1 (+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t))))))","(*.f64 (sqrt.f64 (/.f64 1 (+.f64 (*.f64 z z) (neg.f64 (*.f64 a t))))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 (*.f64 z x) y))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))) (*.f64 (*.f64 z x) y))","(*.f64 y x)","(*.f64 x y)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 y x))","(fma.f64 y x (*.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 (*.f64 t x) y)))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 t (*.f64 a x)) z) (/.f64 y z)) (*.f64 x y))","(fma.f64 1/2 (*.f64 (/.f64 t (/.f64 z (*.f64 a x))) (/.f64 y z)) (*.f64 x y))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x))))) (*.f64 y x)))","(fma.f64 1/2 (/.f64 (*.f64 (*.f64 a (*.f64 t x)) y) (*.f64 z z)) (fma.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (*.f64 (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) x)) y)) (*.f64 x y)))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 t (*.f64 a x)) z) (/.f64 y z)) (fma.f64 -1/2 (*.f64 (-.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 a a) (pow.f64 z 6))) (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) (*.f64 x y)))) (*.f64 x y)))","(fma.f64 1/2 (*.f64 (/.f64 t (/.f64 z (*.f64 a x))) (/.f64 y z)) (*.f64 y (+.f64 x (*.f64 -1/2 (*.f64 (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4) (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) x)))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x))))) (+.f64 (*.f64 y x) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) a) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 y (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 2) x))))))))","(fma.f64 1/2 (/.f64 (*.f64 (*.f64 a (*.f64 t x)) y) (*.f64 z z)) (fma.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (*.f64 (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) x)) y)) (fma.f64 y x (*.f64 -1/2 (*.f64 (fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (/.f64 (*.f64 z z) a)) (neg.f64 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 (*.f64 (pow.f64 t 3) (*.f64 (*.f64 z z) x)) y))))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 t (*.f64 a x)) z) (/.f64 y z)) (fma.f64 -1/2 (*.f64 (-.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 a a) (pow.f64 z 6))) (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) (*.f64 x y)))) (fma.f64 -1/2 (*.f64 (-.f64 (*.f64 -1/2 (*.f64 (/.f64 a z) (/.f64 (-.f64 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 a a) (pow.f64 z 6))) z))) (/.f64 (pow.f64 a 3) (pow.f64 z 8))) (*.f64 (pow.f64 t 3) (*.f64 (*.f64 z z) (*.f64 x y)))) (*.f64 x y))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 t (/.f64 z (*.f64 a x))) (/.f64 y z)) (*.f64 x y)) (*.f64 y (*.f64 -1/2 (*.f64 (*.f64 (*.f64 z z) x) (+.f64 (*.f64 (pow.f64 t 3) (-.f64 (*.f64 -1/2 (*.f64 (/.f64 a (*.f64 z z)) (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4))) (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 (*.f64 t t) (*.f64 (*.f64 (/.f64 a (pow.f64 z 6)) a) -3/4)))))))","(*.f64 y x)","(*.f64 x y)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 y x))","(fma.f64 y x (*.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 (*.f64 t x) y)))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 t (*.f64 a x)) z) (/.f64 y z)) (*.f64 x y))","(fma.f64 1/2 (*.f64 (/.f64 t (/.f64 z (*.f64 a x))) (/.f64 y z)) (*.f64 x y))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (*.f64 (pow.f64 z 2) x))))) (*.f64 y x)))","(fma.f64 1/2 (/.f64 (*.f64 (*.f64 a (*.f64 t x)) y) (*.f64 z z)) (fma.f64 -1/2 (*.f64 (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)) (*.f64 (*.f64 a a) (*.f64 (*.f64 (*.f64 z z) x) y))) (*.f64 x y)))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 t (*.f64 a x)) z) (/.f64 y z)) (fma.f64 -1/2 (*.f64 (-.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 t t) (pow.f64 z 6))) (*.f64 (*.f64 a a) (*.f64 (*.f64 z z) (*.f64 x y)))) (*.f64 x y)))","(fma.f64 1/2 (*.f64 (/.f64 t (/.f64 z (*.f64 a x))) (/.f64 y z)) (fma.f64 -1/2 (*.f64 (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4) (*.f64 (*.f64 (*.f64 z z) y) (*.f64 x (*.f64 a a)))) (*.f64 x y)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (*.f64 (pow.f64 z 2) x))))) (+.f64 (*.f64 y x) (*.f64 -1/2 (*.f64 y (*.f64 (pow.f64 a 3) (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) x))))))))","(fma.f64 1/2 (/.f64 (*.f64 (*.f64 a (*.f64 t x)) y) (*.f64 z z)) (fma.f64 -1/2 (*.f64 (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)) (*.f64 (*.f64 a a) (*.f64 (*.f64 (*.f64 z z) x) y))) (fma.f64 y x (*.f64 -1/2 (*.f64 (*.f64 (pow.f64 a 3) (*.f64 (*.f64 z z) (*.f64 (fma.f64 -1/2 (/.f64 t (/.f64 (*.f64 z z) (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)))) (neg.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) x))) y)))))","(fma.f64 1/2 (*.f64 (/.f64 (*.f64 t (*.f64 a x)) z) (/.f64 y z)) (fma.f64 -1/2 (*.f64 (-.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 t t) (pow.f64 z 6))) (*.f64 (*.f64 a a) (*.f64 (*.f64 z z) (*.f64 x y)))) (fma.f64 -1/2 (*.f64 (*.f64 z (*.f64 z (*.f64 (fma.f64 -1/2 (*.f64 (/.f64 t z) (/.f64 (-.f64 (*.f64 (/.f64 (*.f64 t t) (pow.f64 z 6)) 1/4) (/.f64 (*.f64 t t) (pow.f64 z 6))) z)) (/.f64 (neg.f64 (pow.f64 t 3)) (pow.f64 z 8))) x))) (*.f64 (pow.f64 a 3) y)) (*.f64 x y))))","(fma.f64 1/2 (*.f64 (/.f64 t (/.f64 z (*.f64 a x))) (/.f64 y z)) (fma.f64 -1/2 (*.f64 (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4) (*.f64 (*.f64 (*.f64 z z) y) (*.f64 x (*.f64 a a)))) (*.f64 y (fma.f64 -1/2 (*.f64 (*.f64 z z) (*.f64 (*.f64 (-.f64 (*.f64 -1/2 (*.f64 (/.f64 t (*.f64 z z)) (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4))) (/.f64 (pow.f64 t 3) (pow.f64 z 8))) x) (pow.f64 a 3))) x))))","(*.f64 -1 (*.f64 a t))","(neg.f64 (*.f64 a t))","(*.f64 a (neg.f64 t))","(*.f64 t (neg.f64 a))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(pow.f64 z 2)","(*.f64 z z)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(pow.f64 z 2)","(*.f64 z z)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(pow.f64 z 2)","(*.f64 z z)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(*.f64 -1 (*.f64 a t))","(neg.f64 (*.f64 a t))","(*.f64 a (neg.f64 t))","(*.f64 t (neg.f64 a))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(*.f64 -1 (*.f64 a t))","(neg.f64 (*.f64 a t))","(*.f64 a (neg.f64 t))","(*.f64 t (neg.f64 a))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(pow.f64 z 2)","(*.f64 z z)","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(*.f64 -1 (*.f64 a t))","(neg.f64 (*.f64 a t))","(*.f64 a (neg.f64 t))","(*.f64 t (neg.f64 a))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(*.f64 -1 (*.f64 a t))","(neg.f64 (*.f64 a t))","(*.f64 a (neg.f64 t))","(*.f64 t (neg.f64 a))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))","(+.f64 (pow.f64 z 2) (*.f64 -1 (*.f64 a t)))","(+.f64 (*.f64 z z) (neg.f64 (*.f64 a t)))","(-.f64 (*.f64 z z) (*.f64 a t))","(fma.f64 (neg.f64 a) t (*.f64 z z))"]],"stop":[["node limit",1]],"time":56.390869140625,"type":"simplify"},{"compiler":[[8712,3604]],"time":61.98193359375,"type":"eval"},{"alts":[["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","next",23.48835011319649],["(*.f64 x (/.f64 (*.f64 y z) (fma.f64 -1/2 (*.f64 (/.f64 a z) t) z)))","fresh",34.45992659611243],["(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (cbrt.f64 (*.f64 a a))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 (cbrt.f64 a) t) (cbrt.f64 (*.f64 a a)))))))))","fresh",32.69596064290836],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","done",22.875874455218312],["(*.f64 x (*.f64 (/.f64 -1 z) (*.f64 y z)))","fresh",38.40670039212504],["(*.f64 y (*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))))))","fresh",23.504752240785507],["(*.f64 x (*.f64 (/.f64 y 1) (/.f64 z (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))","fresh",24.05044418653708],["(*.f64 x (/.f64 (*.f64 y z) (-.f64 (*.f64 (/.f64 1/2 (/.f64 z a)) t) z)))","fresh",35.345655109579106],["(*.f64 x (neg.f64 y))","fresh",34.76840568458675],["(*.f64 y (*.f64 (*.f64 z x) (/.f64 1 z)))","fresh",36.819947477518745]],"compiler":[[19,12],[19,12],[53,25],[21,15],[14,10],[21,14],[20,14],[20,13],[9,7],[14,10],[19,12],[19,12],[53,25],[14,10],[21,14],[20,14],[20,13],[9,7],[14,10]],"count":[[290,10]],"kept":[{"done":[1,1],"fresh":[8,6],"new":[280,3],"picked":[1,0]}],"min-error":[3.8121964774605037],"time":80.543212890625,"type":"prune"},{"compiler":[[53,12]],"locations":[["(-.f64 (*.f64 z z) (*.f64 t a))",0.41796875000000006,false],["(*.f64 (*.f64 x y) z)",4.937458241391091,true],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))",7.190771928268955,true],["(sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))",23.216998017573008,false]],"time":9.0048828125,"type":"localize"},{"count":[[2,76]],"series":[["(*.f64 (*.f64 x y) z)","z","-inf",0.280029296875],["(*.f64 (*.f64 x y) z)","z","inf",0.328125],["(*.f64 (*.f64 x y) z)","z","0",0.369140625],["(*.f64 (*.f64 x y) z)","y","-inf",0.26708984375],["(*.f64 (*.f64 x y) z)","y","inf",0.140869140625],["(*.f64 (*.f64 x y) z)","y","0",0.153076171875],["(*.f64 (*.f64 x y) z)","x","-inf",3.525146484375],["(*.f64 (*.f64 x y) z)","x","inf",0.14208984375],["(*.f64 (*.f64 x y) z)","x","0",0.173828125],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","a","-inf",0.35791015625],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","a","inf",0.3798828125],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","a","0",0.277099609375],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","t","-inf",0.35791015625],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","t","inf",0.3759765625],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","t","0",0.283935546875],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","z","-inf",0.262939453125],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","z","inf",0.2861328125],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","z","0",0.3720703125],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","y","-inf",0.196044921875],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","y","inf",0.219970703125],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","y","0",0.173828125],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","x","-inf",0.197998046875],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","x","inf",0.22509765625],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","x","0",0.239013671875]],"time":9.9150390625,"type":"series"},{"count":[[2,68]],"egraph":[[2,4035,27,0.031927042],[1,288,28,0.005467667],[0,13,28,0.000281125]],"inputs":[["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","(*.f64 (*.f64 x y) z)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a))))))) (cbrt.f64 (exp.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a))))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 (*.f64 y z) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x y) (/.f64 1 (/.f64 (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))) z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x y) (*.f64 z (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 z (*.f64 (*.f64 x y) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (*.f64 y z)) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 y z))) 2) (*.f64 (cbrt.f64 (*.f64 x (*.f64 y z))) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))) (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (*.f64 y z)) 2) (-.f64 (*.f64 z z) (*.f64 t a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (*.f64 x (*.f64 y z)) 2) (-.f64 (*.f64 z z) (*.f64 t a)))) (cbrt.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 x (*.f64 y z))) (*.f64 (sqrt.f64 (*.f64 x (*.f64 y z))) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))) (sqrt.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 x) (*.f64 y z)) (/.f64 1 (neg.f64 (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) -1/2) (*.f64 x (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x 1) (/.f64 (*.f64 y z) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) 1) (/.f64 z (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z 1) (/.f64 (*.f64 x y) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a))))) z)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 y z))) 2) 1) (/.f64 (cbrt.f64 (*.f64 x (*.f64 y z))) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 x (*.f64 y z))) 1) (/.f64 (sqrt.f64 (*.f64 x (*.f64 y z))) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (/.f64 (*.f64 y z) (cbrt.f64 (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (/.f64 z (cbrt.f64 (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (/.f64 (*.f64 x y) (cbrt.f64 (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (/.f64 (*.f64 x (*.f64 y z)) (cbrt.f64 (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 y z))) 2) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (cbrt.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 x (*.f64 y z))) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (/.f64 (sqrt.f64 (*.f64 x (*.f64 y z))) (cbrt.f64 (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)) (/.f64 (*.f64 y z) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 x y) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)) (/.f64 z (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 z (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)) (/.f64 (*.f64 x y) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)) (/.f64 (*.f64 x (*.f64 y z)) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 x (*.f64 y z))) 2) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)) (/.f64 (cbrt.f64 (*.f64 x (*.f64 y z))) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))) (*.f64 x (*.f64 y z))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 x (*.f64 y z)) (neg.f64 (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (*.f64 x (*.f64 y z)) 2) (-.f64 (*.f64 z z) (*.f64 t a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a))))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 x (*.f64 y z)) 3) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (*.f64 x (*.f64 y z)) (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 x (*.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 z) (*.f64 x y))) (cbrt.f64 (pow.f64 (exp.f64 z) (*.f64 x y))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 z) (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 z) (*.f64 x y)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 z) (*.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 x (*.f64 y z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (*.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (*.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (*.f64 y z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (*.f64 y z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 z) (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 x (*.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (*.f64 y z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 x y) 3) (pow.f64 z 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 z 3) (pow.f64 (*.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (*.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (*.f64 y z))) 1))))))"]],"rules":[["egg-rr",18],["egg-rr",50]],"stop":[["node limit",1]],"time":55.346923828125,"type":"rewrite"},{"count":[[144,96]],"egraph":[[3,7295,1580,0.025726666000000002],[2,1682,1580,0.012547208],[1,424,1716,0.0030873330000000003],[0,129,1737,0.000650583]],"inputs":[["(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))))","(+.f64 (*.f64 y x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4)))))","(+.f64 (*.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t))) (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) x)) (pow.f64 z 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))))))","(*.f64 -1 (*.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1 (*.f64 y x)))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))) (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t)))) x)) (pow.f64 z 6))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))) (*.f64 -1 (*.f64 y x)))))","(*.f64 y x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x))))) (*.f64 y x)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x))))) (+.f64 (*.f64 y x) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) a) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 y (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 2) x))))))))","(*.f64 y x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (*.f64 (pow.f64 z 2) x))))) (*.f64 y x)))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (*.f64 (pow.f64 z 2) x))))) (+.f64 (*.f64 y x) (*.f64 -1/2 (*.f64 y (*.f64 (pow.f64 a 3) (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) x))))))))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))","(*.f64 y (*.f64 z x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (*.f64 z z) (*.f64 a t)))) (*.f64 x (*.f64 z y)))","(*.f64 (sqrt.f64 (/.f64 1 (fma.f64 t (neg.f64 a) (*.f64 z z)))) (*.f64 x (*.f64 z y)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))))","(fma.f64 y x (*.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 y (*.f64 t x))))))","(fma.f64 y x (*.f64 (/.f64 1/2 z) (/.f64 (*.f64 (*.f64 t y) (*.f64 x a)) z)))","(fma.f64 y x (*.f64 (/.f64 1/2 z) (/.f64 (*.f64 a t) (/.f64 z (*.f64 y x)))))","(+.f64 (*.f64 y x) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4)))))","(fma.f64 y x (fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 y (*.f64 t x)))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 a t) 1/2) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) (*.f64 y x))))))","(fma.f64 y x (fma.f64 -1/2 (/.f64 (*.f64 y x) (/.f64 (pow.f64 z 4) (-.f64 (pow.f64 (*.f64 a (*.f64 t 1/2)) 2) (*.f64 t (*.f64 t (*.f64 a a)))))) (*.f64 (/.f64 1/2 z) (/.f64 (*.f64 (*.f64 t y) (*.f64 x a)) z))))","(fma.f64 1/2 (*.f64 (*.f64 t (*.f64 a x)) (/.f64 y (*.f64 z z))) (fma.f64 y x (/.f64 -1/2 (/.f64 (/.f64 (pow.f64 z 4) (*.f64 y x)) (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)))))","(+.f64 (*.f64 y x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t))) (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))) x)) (pow.f64 z 6))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 a (*.f64 y (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))))))","(fma.f64 y x (fma.f64 -1/2 (/.f64 (*.f64 y (*.f64 x (fma.f64 -1/2 (*.f64 (*.f64 a t) (+.f64 (pow.f64 (*.f64 (*.f64 a t) 1/2) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t))))) (neg.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))))) (pow.f64 z 6)) (fma.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 y (*.f64 t x)))) (*.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 a t) 1/2) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) (*.f64 y x)))))))","(fma.f64 y x (fma.f64 -1/2 (*.f64 (/.f64 y (pow.f64 z 6)) (*.f64 x (fma.f64 -1/2 (*.f64 (*.f64 a t) (-.f64 (pow.f64 (*.f64 a (*.f64 t 1/2)) 2) (*.f64 t (*.f64 t (*.f64 a a))))) (*.f64 (pow.f64 a 3) (neg.f64 (pow.f64 t 3)))))) (fma.f64 -1/2 (/.f64 (*.f64 y x) (/.f64 (pow.f64 z 4) (-.f64 (pow.f64 (*.f64 a (*.f64 t 1/2)) 2) (*.f64 t (*.f64 t (*.f64 a a)))))) (*.f64 (/.f64 1/2 z) (/.f64 (*.f64 (*.f64 t y) (*.f64 x a)) z)))))","(fma.f64 y x (fma.f64 1/2 (*.f64 (*.f64 t (*.f64 a x)) (/.f64 y (*.f64 z z))) (*.f64 -1/2 (+.f64 (*.f64 (*.f64 x (fma.f64 (*.f64 a t) (*.f64 -1/2 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (*.f64 (pow.f64 a 3) (neg.f64 (pow.f64 t 3))))) (/.f64 y (pow.f64 z 6))) (*.f64 (/.f64 (*.f64 y x) (pow.f64 z 4)) (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4))))))","(fma.f64 y x (fma.f64 1/2 (*.f64 (*.f64 t (*.f64 a x)) (/.f64 y (*.f64 z z))) (*.f64 -1/2 (+.f64 (*.f64 (*.f64 x (*.f64 a (fma.f64 t (*.f64 -1/2 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (neg.f64 (*.f64 (*.f64 a a) (pow.f64 t 3)))))) (/.f64 y (pow.f64 z 6))) (*.f64 (/.f64 (*.f64 y x) (pow.f64 z 4)) (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4))))))","(*.f64 -1 (*.f64 y x))","(neg.f64 (*.f64 y x))","(*.f64 y (neg.f64 x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 -1 (*.f64 y x)))","(fma.f64 -1/2 (/.f64 y (/.f64 (*.f64 z z) (*.f64 a (*.f64 t x)))) (neg.f64 (*.f64 y x)))","(-.f64 (*.f64 (/.f64 -1/2 z) (/.f64 (*.f64 (*.f64 t y) (*.f64 x a)) z)) (*.f64 y x))","(-.f64 (*.f64 (/.f64 y (/.f64 (/.f64 z a) t)) (/.f64 -1/2 (/.f64 z x))) (*.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))) (*.f64 -1 (*.f64 y x))))","(fma.f64 -1/2 (/.f64 y (/.f64 (*.f64 z z) (*.f64 a (*.f64 t x)))) (fma.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 a t) 1/2) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) (*.f64 y x))) (neg.f64 (*.f64 y x))))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 z z)) (*.f64 a (*.f64 t x))) (/.f64 (*.f64 (*.f64 1/2 (*.f64 y x)) (-.f64 (pow.f64 (*.f64 a (*.f64 t 1/2)) 2) (*.f64 t (*.f64 t (*.f64 a a))))) (pow.f64 z 4))) (*.f64 y x))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 (*.f64 y x) (pow.f64 z 4)) (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (*.f64 (/.f64 y (/.f64 (/.f64 z a) t)) (/.f64 -1/2 (/.f64 z x)))) (*.f64 y x))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 (+.f64 (*.f64 -1 (*.f64 (pow.f64 a 3) (pow.f64 t 3))) (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 a t)))) x)) (pow.f64 z 6))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (*.f64 a t)) 2) (*.f64 -1 (*.f64 (pow.f64 a 2) (pow.f64 t 2)))) (*.f64 y x)) (pow.f64 z 4))) (*.f64 -1 (*.f64 y x)))))","(fma.f64 1/2 (/.f64 (*.f64 y (*.f64 x (fma.f64 -1/2 (*.f64 (*.f64 a t) (+.f64 (pow.f64 (*.f64 (*.f64 a t) 1/2) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t))))) (neg.f64 (*.f64 (pow.f64 a 3) (pow.f64 t 3)))))) (pow.f64 z 6)) (fma.f64 -1/2 (/.f64 y (/.f64 (*.f64 z z) (*.f64 a (*.f64 t x)))) (fma.f64 1/2 (/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 a t) 1/2) 2) (neg.f64 (*.f64 (*.f64 a a) (*.f64 t t)))) (/.f64 (pow.f64 z 4) (*.f64 y x))) (neg.f64 (*.f64 y x)))))","(fma.f64 1/2 (*.f64 (/.f64 y (pow.f64 z 6)) (*.f64 x (fma.f64 -1/2 (*.f64 (*.f64 a t) (-.f64 (pow.f64 (*.f64 a (*.f64 t 1/2)) 2) (*.f64 t (*.f64 t (*.f64 a a))))) (*.f64 (pow.f64 a 3) (neg.f64 (pow.f64 t 3)))))) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 y (*.f64 z z)) (*.f64 a (*.f64 t x))) (/.f64 (*.f64 (*.f64 1/2 (*.f64 y x)) (-.f64 (pow.f64 (*.f64 a (*.f64 t 1/2)) 2) (*.f64 t (*.f64 t (*.f64 a a))))) (pow.f64 z 4))) (*.f64 y x)))","(-.f64 (fma.f64 1/2 (*.f64 (*.f64 x (fma.f64 (*.f64 a t) (*.f64 -1/2 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (*.f64 (pow.f64 a 3) (neg.f64 (pow.f64 t 3))))) (/.f64 y (pow.f64 z 6))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 y x) (pow.f64 z 4)) (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (*.f64 (/.f64 y (/.f64 (/.f64 z a) t)) (/.f64 -1/2 (/.f64 z x))))) (*.f64 y x))","(-.f64 (fma.f64 1/2 (*.f64 (*.f64 x (*.f64 a (fma.f64 t (*.f64 -1/2 (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (neg.f64 (*.f64 (*.f64 a a) (pow.f64 t 3)))))) (/.f64 y (pow.f64 z 6))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 y x) (pow.f64 z 4)) (*.f64 (*.f64 t (*.f64 t (*.f64 a a))) -3/4)) (*.f64 (/.f64 y (/.f64 (/.f64 z a) t)) (/.f64 -1/2 (/.f64 z x))))) (*.f64 y x))","(*.f64 y x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 y x))","(fma.f64 y x (*.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 y (*.f64 t x))))))","(fma.f64 y x (*.f64 (/.f64 1/2 z) (/.f64 (*.f64 (*.f64 t y) (*.f64 x a)) z)))","(fma.f64 y x (*.f64 (/.f64 1/2 z) (/.f64 (*.f64 a t) (/.f64 z (*.f64 y x)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x))))) (*.f64 y x)))","(fma.f64 1/2 (/.f64 y (/.f64 (*.f64 z z) (*.f64 a (*.f64 t x)))) (fma.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (*.f64 y (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) x)))) (*.f64 y x)))","(fma.f64 1/2 (*.f64 (/.f64 y (*.f64 z z)) (*.f64 a (*.f64 t x))) (fma.f64 y x (*.f64 (-.f64 (*.f64 (/.f64 a (/.f64 (pow.f64 z 6) a)) 1/4) (/.f64 a (/.f64 (pow.f64 z 6) a))) (*.f64 (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) (*.f64 y x))) -1/2))))","(fma.f64 1/2 (*.f64 (*.f64 t (*.f64 a x)) (/.f64 y (*.f64 z z))) (*.f64 y (+.f64 x (*.f64 (*.f64 x (*.f64 (*.f64 z z) (*.f64 t t))) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) -3/4))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) (*.f64 y (*.f64 (pow.f64 t 2) (*.f64 (pow.f64 z 2) x))))) (+.f64 (*.f64 y x) (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 a 2) (pow.f64 z 6)))) a) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 y (*.f64 (pow.f64 t 3) (*.f64 (pow.f64 z 2) x))))))))","(fma.f64 1/2 (/.f64 y (/.f64 (*.f64 z z) (*.f64 a (*.f64 t x)))) (fma.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (*.f64 y (*.f64 (*.f64 t t) (*.f64 (*.f64 z z) x)))) (fma.f64 y x (*.f64 (*.f64 -1/2 (fma.f64 -1/2 (/.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 a (pow.f64 z 3))) 2) (neg.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)))) (/.f64 (*.f64 z z) a)) (neg.f64 (/.f64 (pow.f64 a 3) (pow.f64 z 8))))) (*.f64 y (*.f64 (pow.f64 t 3) (*.f64 (*.f64 z z) x)))))))","(fma.f64 1/2 (*.f64 (/.f64 y (*.f64 z z)) (*.f64 a (*.f64 t x))) (fma.f64 -1/2 (*.f64 y (*.f64 (*.f64 (*.f64 z z) (*.f64 x (*.f64 t t))) (-.f64 (*.f64 (/.f64 a (/.f64 (pow.f64 z 6) a)) 1/4) (/.f64 a (/.f64 (pow.f64 z 6) a))))) (fma.f64 (*.f64 -1/2 (-.f64 (/.f64 (*.f64 -1/2 (-.f64 (*.f64 (/.f64 a (/.f64 (pow.f64 z 6) a)) 1/4) (/.f64 a (/.f64 (pow.f64 z 6) a)))) (/.f64 (*.f64 z z) a)) (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 (pow.f64 t 3) (*.f64 (*.f64 z z) (*.f64 y x))) (*.f64 y x))))","(fma.f64 1/2 (*.f64 (*.f64 t (*.f64 a x)) (/.f64 y (*.f64 z z))) (fma.f64 y x (*.f64 (*.f64 z (*.f64 z x)) (+.f64 (*.f64 (*.f64 t (*.f64 t y)) (*.f64 -1/2 (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) -3/4))) (*.f64 (*.f64 -1/2 (-.f64 (*.f64 (/.f64 -1/2 (*.f64 z z)) (*.f64 a (*.f64 (/.f64 (*.f64 a a) (pow.f64 z 6)) -3/4))) (/.f64 (pow.f64 a 3) (pow.f64 z 8)))) (*.f64 y (pow.f64 t 3)))))))","(*.f64 y x)","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (*.f64 y x))","(fma.f64 y x (*.f64 1/2 (/.f64 a (/.f64 (*.f64 z z) (*.f64 y (*.f64 t x))))))","(fma.f64 y x (*.f64 (/.f64 1/2 z) (/.f64 (*.f64 (*.f64 t y) (*.f64 x a)) z)))","(fma.f64 y x (*.f64 (/.f64 1/2 z) (/.f64 (*.f64 a t) (/.f64 z (*.f64 y x)))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (*.f64 (pow.f64 z 2) x))))) (*.f64 y x)))","(fma.f64 1/2 (/.f64 y (/.f64 (*.f64 z z) (*.f64 a (*.f64 t x)))) (fma.f64 -1/2 (*.f64 (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)) (*.f64 (*.f64 a a) (*.f64 y (*.f64 (*.f64 z z) x)))) (*.f64 y x)))","(fma.f64 1/2 (*.f64 (/.f64 y (*.f64 z z)) (*.f64 a (*.f64 t x))) (fma.f64 (*.f64 -1/2 (-.f64 (*.f64 (/.f64 t (/.f64 (pow.f64 z 6) t)) 1/4) (/.f64 t (/.f64 (pow.f64 z 6) t)))) (*.f64 (*.f64 (*.f64 a a) (*.f64 (*.f64 z z) y)) x) (*.f64 y x)))","(fma.f64 y x (fma.f64 1/2 (*.f64 (*.f64 t (*.f64 a x)) (/.f64 y (*.f64 z z))) (*.f64 (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4) (*.f64 -1/2 (*.f64 x (*.f64 (*.f64 a a) (*.f64 z (*.f64 z y))))))))","(+.f64 (*.f64 1/2 (/.f64 (*.f64 y (*.f64 a (*.f64 t x))) (pow.f64 z 2))) (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2) (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6)))) (*.f64 (pow.f64 a 2) (*.f64 y (*.f64 (pow.f64 z 2) x))))) (+.f64 (*.f64 y x) (*.f64 -1/2 (*.f64 y (*.f64 (pow.f64 a 3) (*.f64 (pow.f64 z 2) (*.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 t (+.f64 (*.f64 -1 (/.f64 (pow.f64 t 2) (pow.f64 z 6))) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2))) (pow.f64 z 2))) (*.f64 -1 (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) x))))))))","(fma.f64 1/2 (/.f64 y (/.f64 (*.f64 z z) (*.f64 a (*.f64 t x)))) (fma.f64 -1/2 (*.f64 (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)) (*.f64 (*.f64 a a) (*.f64 y (*.f64 (*.f64 z z) x)))) (fma.f64 y x (*.f64 -1/2 (*.f64 y (*.f64 (pow.f64 a 3) (*.f64 (*.f64 z z) (*.f64 x (fma.f64 -1/2 (/.f64 t (/.f64 (*.f64 z z) (fma.f64 -1 (/.f64 (*.f64 t t) (pow.f64 z 6)) (pow.f64 (*.f64 1/2 (/.f64 t (pow.f64 z 3))) 2)))) (neg.f64 (/.f64 (pow.f64 t 3) (pow.f64 z 8))))))))))))","(fma.f64 1/2 (*.f64 (/.f64 y (*.f64 z z)) (*.f64 a (*.f64 t x))) (fma.f64 -1/2 (*.f64 (*.f64 a a) (*.f64 (*.f64 (*.f64 z z) (*.f64 y x)) (-.f64 (*.f64 (/.f64 t (/.f64 (pow.f64 z 6) t)) 1/4) (/.f64 t (/.f64 (pow.f64 z 6) t))))) (fma.f64 -1/2 (*.f64 (*.f64 (*.f64 z (*.f64 z x)) (-.f64 (*.f64 (/.f64 -1/2 z) (/.f64 (*.f64 t (-.f64 (*.f64 (/.f64 t (/.f64 (pow.f64 z 6) t)) 1/4) (/.f64 t (/.f64 (pow.f64 z 6) t)))) z)) (/.f64 (pow.f64 t 3) (pow.f64 z 8)))) (*.f64 y (pow.f64 a 3))) (*.f64 y x))))","(fma.f64 1/2 (*.f64 (*.f64 t (*.f64 a x)) (/.f64 y (*.f64 z z))) (fma.f64 y x (*.f64 -1/2 (+.f64 (*.f64 (*.f64 (*.f64 z (*.f64 z x)) (fma.f64 (/.f64 -1/2 z) (/.f64 (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4) (/.f64 z t)) (/.f64 (neg.f64 (pow.f64 t 3)) (pow.f64 z 8)))) (*.f64 y (pow.f64 a 3))) (*.f64 (*.f64 a a) (*.f64 (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4) (*.f64 x (*.f64 z (*.f64 z y)))))))))","(fma.f64 1/2 (*.f64 (*.f64 t (*.f64 a x)) (/.f64 y (*.f64 z z))) (fma.f64 y x (*.f64 -1/2 (+.f64 (*.f64 (*.f64 (*.f64 z (*.f64 z x)) (fma.f64 (/.f64 -1/2 (*.f64 z z)) (*.f64 t (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4)) (/.f64 (neg.f64 (pow.f64 t 3)) (pow.f64 z 8)))) (*.f64 y (pow.f64 a 3))) (*.f64 (*.f64 a a) (*.f64 (*.f64 (*.f64 (/.f64 t (pow.f64 z 6)) t) -3/4) (*.f64 x (*.f64 z (*.f64 z y)))))))))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))","(*.f64 y (*.f64 z x))","(*.f64 x (*.f64 z y))"]],"stop":[["node limit",1]],"time":52.156005859375,"type":"simplify"},{"compiler":[[11416,3092]],"time":67.22412109375,"type":"eval"},{"alts":[["(/.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","fresh",24.062553629007358],["(*.f64 x (/.f64 (*.f64 y z) (fma.f64 -1/2 (*.f64 (/.f64 a z) t) z)))","fresh",34.45992659611243],["(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","done",22.875874455218312],["(*.f64 x (*.f64 (/.f64 -1 z) (*.f64 y z)))","fresh",38.40670039212504],["(*.f64 (/.f64 (*.f64 x y) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (/.f64 z (cbrt.f64 (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))))","fresh",33.65871178856307],["(*.f64 z (*.f64 (*.f64 x y) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) -1/2)))","fresh",23.074244809681762],["(*.f64 x (/.f64 (*.f64 y z) (-.f64 (*.f64 (/.f64 1/2 (/.f64 z a)) t) z)))","fresh",35.345655109579106],["(*.f64 x (neg.f64 y))","fresh",34.76840568458675],["(*.f64 y (*.f64 (*.f64 z x) (/.f64 1 z)))","fresh",36.819947477518745],["(/.f64 (*.f64 (*.f64 x y) z) (fma.f64 -1/2 (*.f64 (/.f64 a z) t) z))","fresh",34.41570741933623],["(/.f64 (*.f64 x (*.f64 z y)) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","fresh",24.575119374057618]],"compiler":[[19,12],[19,12],[21,15],[14,10],[28,17],[20,13],[20,13],[9,7],[14,10],[19,12],[19,12]],"count":[[406,11]],"kept":[{"done":[1,1],"fresh":[8,5],"new":[396,5],"picked":[1,0]}],"min-error":[3.8121672370224435],"time":164.384033203125,"type":"prune"},{"accuracy":[5.988572423846555],"baseline":[22.84624575509234],"branch":[["x",18.548827398727372,3],["y",19.157445095019064,4],["z",5.988572423846555,3],["t",15.344631935582775,5],["a",15.679976223710028,4],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))",12.509773374792845,5],["(*.f64 x y)",16.412952463857597,5],["(*.f64 x y)",16.412952463857597,5],["(*.f64 t a)",11.63670940908744,3],["(*.f64 t a)",11.63670940908744,3]],"compiler":[[6,5],[6,5],[6,5],[6,5],[6,5],[19,12],[8,6],[8,6],[8,6],[8,6],[338,127]],"count":[[22,3]],"inputs":[["(/.f64 (*.f64 y (*.f64 z x)) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","(*.f64 (/.f64 (*.f64 x y) (cbrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))) (/.f64 z (cbrt.f64 (hypot.f64 z (sqrt.f64 (neg.f64 (*.f64 t a)))))))","(*.f64 z (*.f64 (*.f64 x y) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) -1/2)))","(/.f64 (*.f64 (*.f64 x y) z) (fma.f64 -1/2 (*.f64 (/.f64 a z) t) z))","(/.f64 (*.f64 x (*.f64 z y)) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (+.f64 (fma.f64 (cbrt.f64 (*.f64 z z)) (*.f64 (cbrt.f64 z) z) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) t) (cbrt.f64 (*.f64 a a))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) t)) (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 (cbrt.f64 a) t) (cbrt.f64 (*.f64 a a)))))))))","(*.f64 y (*.f64 z (*.f64 x (sqrt.f64 (/.f64 1 (fma.f64 (neg.f64 a) t (*.f64 z z)))))))","(*.f64 y (*.f64 (*.f64 z x) (/.f64 1 z)))","(*.f64 x (*.f64 (/.f64 -1 z) (*.f64 y z)))","(*.f64 y x)","(*.f64 y (*.f64 (*.f64 z x) (sqrt.f64 (/.f64 1 (fma.f64 z z (*.f64 t (neg.f64 a)))))))","(*.f64 x (/.f64 (*.f64 y z) (fma.f64 -1/2 (*.f64 (/.f64 a z) t) z)))","(*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y (*.f64 z x)))","(*.f64 x (neg.f64 y))","(/.f64 (/.f64 (*.f64 (*.f64 x y) z) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4)) (pow.f64 (-.f64 (*.f64 z z) (*.f64 t a)) 1/4))","(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (-.f64 (pow.f64 z 2) (*.f64 a t)))) (*.f64 y z)))","(*.f64 x (*.f64 (/.f64 y 1) (/.f64 z (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))))))","(*.f64 y x)","(*.f64 x (/.f64 (*.f64 y z) (-.f64 (*.f64 (/.f64 1/2 (/.f64 z a)) t) z)))","(pow.f64 (cbrt.f64 (/.f64 x (/.f64 (hypot.f64 z (sqrt.f64 (*.f64 t (neg.f64 a)))) (*.f64 z y)))) 3)","(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))"]],"link":["."],"name":["Statistics.Math.RootFinding:ridders from math-functions-0.1.5.2"],"oracle":[58.37332244751577],"outputs":[["(*.f64 x (neg.f64 y))","(*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a)))))","(*.f64 y x)"]],"time":279.351806640625,"times":[["x",20.907958984375],["y",34.22705078125],["z",21.072998046875],["t",34.90185546875],["a",35.088134765625],["(/.f64 (*.f64 (*.f64 x y) z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))",20.110107421875],["(*.f64 x y)",35.9912109375],["(*.f64 x y)",37.14404296875],["(*.f64 t a)",16.8369140625],["(*.f64 t a)",16.921875]],"type":"regimes"},{"bstep":[[3.035675077955773e+68,3.425578513586948e+69,12.29296875],[-2.3465727487740706e+125,-1.3237092225838332e+124,12.717041015625]],"compiler":[[21,14],[6,5]],"method":["binary-search","binary-search"],"time":25.198974609375,"type":"bsearch"},{"compiler":[[34,21]],"egraph":[[5,76,43,0.00048512600000000006],[4,74,43,0.00039525100000000005],[3,67,43,0.00028620900000000005],[2,56,43,0.00019733400000000002],[1,39,43,0.000115376],[0,23,43,4.9792e-5]],"inputs":[["(if (<=.f64 z -234657274877407057525844999651015835941198512006977628055782683917251032262118101470802979198748445369995624138032983341793280) (*.f64 x (neg.f64 y)) (if (<=.f64 z 303567507795577302976106119540021091093605100012919128728696386486272) (*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))) (*.f64 y x)))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 z -234657274877407057525844999651015835941198512006977628055782683917251032262118101470802979198748445369995624138032983341793280) (*.f64 x (neg.f64 y)) (if (<=.f64 z 303567507795577302976106119540021091093605100012919128728696386486272) (*.f64 x (/.f64 (*.f64 y z) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))) (*.f64 y x)))","(if (<=.f64 z -234657274877407057525844999651015835941198512006977628055782683917251032262118101470802979198748445369995624138032983341793280) (*.f64 x (neg.f64 y)) (if (<=.f64 z 303567507795577302976106119540021091093605100012919128728696386486272) (*.f64 x (/.f64 (*.f64 z y) (sqrt.f64 (-.f64 (*.f64 z z) (*.f64 t a))))) (*.f64 x y)))"]],"stop":[["fuel",1],["saturated",1]],"time":9.56103515625,"type":"simplify"},{"time":0.024169921875,"type":"soundness"},{"compiler":[[34,21],[34,21],[34,21],[34,21],[34,21],[34,21],[34,21]],"remove-preprocessing":[["(sort t a)"]],"time":24.06689453125,"type":"end"}]