[{"compiler":[[17,12]],"method":["search"],"sampling":[[12,0.4680636897137447,0.4514864340363829,0.08044987624987243],[11,0.41345625924714113,0.5246213855541555,0.06192235519870337],[10,0.34324670579007943,0.6201843888707117,0.03656890533920887],[9,0.2496339678473305,0.7254987190563043,0.02486731309636525],[8,0.18722547588549787,0.8113103955038241,0.0014641286106780171],[7,0.12481698392366525,0.8737188874656567,0.0014641286106780171],[6,0.0,0.998535871389322,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":99.18896484375,"type":"analyze"},{"outcomes":[["body",256,"invalid",62.576171875,1405],["body",512,"valid",0.9208984375,12],["body",1024,"valid",1.493896484375,13],["body",256,"valid",366.6669921875,8231]],"time":440.0400390625,"type":"sample"},{"compiler":[[16,11]],"egraph":[[1,3,3,5.917e-6],[0,3,3,5.084e-6],[6,1147,40,0.00710925],[5,1117,40,0.005601875],[4,896,40,0.004048375],[3,490,40,0.0023193750000000003],[2,171,40,0.0010405],[1,62,56,0.000352583],[0,28,68,0.000110458]],"inputs":[["0","1","2"],["(+.f64 (+.f64 (*.f64 d1 d2) (*.f64 (+.f64 d3 5) d1)) (*.f64 d1 32))","(+.f64 (+.f64 (*.f64 d2 d1) (*.f64 (+.f64 d3 5) d2)) (*.f64 d2 32))","(+.f64 (+.f64 (*.f64 d3 d2) (*.f64 (+.f64 d1 5) d3)) (*.f64 d3 32))","(+.f64 (+.f64 (*.f64 d1 d3) (*.f64 (+.f64 d2 5) d1)) (*.f64 d1 32))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","1"],["(+.f64 (+.f64 (*.f64 d1 d2) (*.f64 (+.f64 d3 5) d1)) (*.f64 d1 32))","(+.f64 (fma.f64 d1 d2 (*.f64 d1 (+.f64 d3 5))) (*.f64 d1 32))","(fma.f64 d1 d2 (*.f64 d1 (+.f64 (+.f64 d3 5) 32)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 37)))","(+.f64 (+.f64 (*.f64 d2 d1) (*.f64 (+.f64 d3 5) d2)) (*.f64 d2 32))","(+.f64 (fma.f64 d2 d1 (*.f64 d2 (+.f64 d3 5))) (*.f64 d2 32))","(fma.f64 d1 d2 (*.f64 d2 (+.f64 (+.f64 d3 5) 32)))","(*.f64 d2 (+.f64 d1 (+.f64 d3 37)))","(+.f64 (+.f64 (*.f64 d3 d2) (*.f64 (+.f64 d1 5) d3)) (*.f64 d3 32))","(+.f64 (fma.f64 d3 d2 (*.f64 d3 (+.f64 d1 5))) (*.f64 d3 32))","(fma.f64 d2 d3 (*.f64 d3 (+.f64 (+.f64 d1 5) 32)))","(*.f64 d3 (+.f64 d2 (+.f64 d1 37)))","(*.f64 d3 (+.f64 d1 (+.f64 d2 37)))","(+.f64 (+.f64 (*.f64 d1 d3) (*.f64 (+.f64 d2 5) d1)) (*.f64 d1 32))","(+.f64 (fma.f64 d1 d2 (*.f64 d1 (+.f64 d3 5))) (*.f64 d1 32))","(fma.f64 d1 d2 (*.f64 d1 (+.f64 (+.f64 d3 5) 32)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 37)))"]],"stop":[["unsound",1],["saturated",1]],"symmetry":[["(sort d2 d3)"]],"time":31.010009765625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[6,428,10,0.002493042],[5,416,10,0.001941458],[4,315,10,0.001388208],[3,167,10,0.000770917],[2,51,10,0.00035587499999999996],[1,21,14,0.000135709],[0,12,17,4.9125e-5]],"inputs":[["(+.f64 (+.f64 (*.f64 d1 d2) (*.f64 (+.f64 d3 5) d1)) (*.f64 d1 32))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (+.f64 (*.f64 d1 d2) (*.f64 (+.f64 d3 5) d1)) (*.f64 d1 32))","(+.f64 (fma.f64 d1 d2 (*.f64 d1 (+.f64 d3 5))) (*.f64 d1 32))","(fma.f64 d1 d2 (*.f64 d1 (+.f64 (+.f64 d3 5) 32)))","(*.f64 d1 (+.f64 d2 (+.f64 d3 37)))","(*.f64 d1 (+.f64 d3 (+.f64 37 d2)))"]],"stop":[["saturated",1]],"time":12.875,"type":"simplify"},{"compiler":[[23,15]],"time":0.386962890625,"type":"eval"},{"alts":[["(*.f64 d1 (+.f64 d3 (+.f64 37 d2)))","next",0.0234375],["(+.f64 (+.f64 (*.f64 d1 d2) (*.f64 (+.f64 d3 5) d1)) (*.f64 d1 32))","fresh",0.03125]],"compiler":[[10,7],[16,11],[10,7],[16,11]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.0078125],"time":1.298095703125,"type":"prune"},{"compiler":[[22,13]],"locations":[["(*.f64 d1 (+.f64 d3 (+.f64 37 d2)))",0.0234375,true]],"time":5.414794921875,"type":"localize"},{"count":[[1,36]],"series":[["(*.f64 d1 (+.f64 d3 (+.f64 37 d2)))","d2","-inf",0.278076171875],["(*.f64 d1 (+.f64 d3 (+.f64 37 d2)))","d2","inf",0.31396484375],["(*.f64 d1 (+.f64 d3 (+.f64 37 d2)))","d2","0",0.269775390625],["(*.f64 d1 (+.f64 d3 (+.f64 37 d2)))","d3","-inf",0.254150390625],["(*.f64 d1 (+.f64 d3 (+.f64 37 d2)))","d3","inf",0.514892578125],["(*.f64 d1 (+.f64 d3 (+.f64 37 d2)))","d3","0",0.260009765625],["(*.f64 d1 (+.f64 d3 (+.f64 37 d2)))","d1","-inf",0.39990234375],["(*.f64 d1 (+.f64 d3 (+.f64 37 d2)))","d1","inf",0.35986328125],["(*.f64 d1 (+.f64 d3 (+.f64 37 d2)))","d1","0",0.47119140625]],"time":3.235107421875,"type":"series"},{"count":[[1,58]],"egraph":[[2,2777,10,0.024218584],[1,187,10,0.0035444170000000002],[0,8,10,0.000230417]],"inputs":[["(*.f64 d1 (+.f64 d3 (+.f64 37 d2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 d1 (+.f64 d3 (+.f64 37 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 d3 37) d1) (*.f64 d2 d1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d1 d3) 1) (*.f64 (*.f64 d1 (+.f64 37 d2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 d3 37)) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 d1) (+.f64 d3 (+.f64 37 d2)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 d1) (+.f64 d3 (+.f64 37 d2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 d1) (+.f64 d3 (+.f64 37 d2))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 d1) (+.f64 d3 (+.f64 37 d2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 d1 (+.f64 d3 (+.f64 37 d2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 d1 d3) 3) (pow.f64 (*.f64 d1 (+.f64 37 d2)) 3)) (+.f64 (pow.f64 (*.f64 d1 d3) 2) (-.f64 (pow.f64 (*.f64 d1 (+.f64 37 d2)) 2) (*.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 37 d2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 d1 d3) 2) (pow.f64 (*.f64 d1 (+.f64 37 d2)) 2)) (-.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 37 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 d3 3) (pow.f64 (+.f64 37 d2) 3)) d1) (fma.f64 (+.f64 37 d2) (-.f64 (+.f64 37 d2) d3) (*.f64 d3 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 d3 d3) (pow.f64 (+.f64 37 d2) 2)) d1) (-.f64 d3 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (+.f64 (pow.f64 d3 3) (pow.f64 (+.f64 37 d2) 3))) (fma.f64 (+.f64 37 d2) (-.f64 (+.f64 37 d2) d3) (*.f64 d3 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 d1 (-.f64 (*.f64 d3 d3) (pow.f64 (+.f64 37 d2) 2))) (-.f64 d3 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 d1 (+.f64 d3 (+.f64 37 d2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 d3 (+.f64 37 d2))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 d3 (+.f64 37 d2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 d3 (+.f64 37 d2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 d1 (+.f64 d3 (+.f64 37 d2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 d1 (+.f64 d3 (+.f64 37 d2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 d1) (+.f64 d3 (+.f64 37 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 d1 (+.f64 d3 (+.f64 37 d2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 d1 (+.f64 37 d2))) (exp.f64 (*.f64 d1 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 d3 (+.f64 37 d2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 d1 (+.f64 d3 (+.f64 37 d2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 d1 (+.f64 d3 (+.f64 37 d2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 d1 (+.f64 d3 (+.f64 37 d2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 d1 (+.f64 d3 (+.f64 37 d2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 d3 (*.f64 d1 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d1 (+.f64 d3 37) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 d3 d1 (*.f64 d1 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 37 d2) d1 (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 d3) (*.f64 d1 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) d3) (*.f64 d1 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 d1) 2) (*.f64 (cbrt.f64 d1) (+.f64 37 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2) (*.f64 (cbrt.f64 (+.f64 37 d2)) d1) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 d3) 2) (*.f64 (cbrt.f64 d3) d1) (*.f64 d1 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 d1) (*.f64 (sqrt.f64 d1) d3) (*.f64 d1 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 d1) (*.f64 (sqrt.f64 d1) (+.f64 37 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 37 d2)) (*.f64 (sqrt.f64 (+.f64 37 d2)) d1) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 d3) (*.f64 (sqrt.f64 d3) d1) (*.f64 d1 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 d3) 1 (*.f64 (*.f64 d1 (+.f64 37 d2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 d3 37) d1 (*.f64 d2 d1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 d1 d3)) 2) (cbrt.f64 (*.f64 d1 d3)) (*.f64 d1 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 37 d2))) 2) (cbrt.f64 (*.f64 d1 (+.f64 37 d2))) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 d1 d3)) (sqrt.f64 (*.f64 d1 d3)) (*.f64 d1 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 d1 (+.f64 37 d2))) (sqrt.f64 (*.f64 d1 (+.f64 37 d2))) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 d3) 2)) (cbrt.f64 d3) (*.f64 d1 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (sqrt.f64 d3)) (sqrt.f64 d3) (*.f64 d1 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d3 (pow.f64 (cbrt.f64 d1) 2)) (cbrt.f64 d1) (*.f64 d1 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d3 (sqrt.f64 d1)) (sqrt.f64 d1) (*.f64 d1 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)) (cbrt.f64 (+.f64 37 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 d1 (sqrt.f64 (+.f64 37 d2))) (sqrt.f64 (+.f64 37 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 37 d2) (pow.f64 (cbrt.f64 d1) 2)) (cbrt.f64 d1) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 37 d2) (sqrt.f64 d1)) (sqrt.f64 d1) (*.f64 d1 d3))))))"]],"rules":[["egg-rr",58]],"stop":[["node limit",1]],"time":43.0029296875,"type":"rewrite"},{"count":[[94,69]],"egraph":[[3,85,330,0.000643042],[2,73,330,0.000455459],[1,46,330,0.000266292],[0,18,330,0.000103084]],"inputs":[["(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 37))","(+.f64 (*.f64 d1 (+.f64 d2 37)) (*.f64 d1 d3))","(+.f64 (*.f64 d1 (+.f64 d2 37)) (*.f64 d1 d3))","(+.f64 (*.f64 d1 (+.f64 d2 37)) (*.f64 d1 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 d1 (+.f64 d2 37)) (*.f64 d1 d3))","(+.f64 (*.f64 d1 (+.f64 d2 37)) (*.f64 d1 d3))","(+.f64 (*.f64 d1 (+.f64 d2 37)) (*.f64 d1 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 d1 (+.f64 d2 37)) (*.f64 d1 d3))","(+.f64 (*.f64 d1 (+.f64 d2 37)) (*.f64 d1 d3))","(+.f64 (*.f64 d1 (+.f64 d2 37)) (*.f64 d1 d3))","(*.f64 (+.f64 37 d3) d1)","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))"]],"method":["egg-herbie"],"outputs":[["(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 37))","(*.f64 d1 (+.f64 37 d2))","(+.f64 (*.f64 d1 (+.f64 d2 37)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 d2 37)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 d2 37)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 d1 (+.f64 d2 37)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 d2 37)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 d2 37)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 d1 (+.f64 d2 37)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 d2 37)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d1 (+.f64 d2 37)) (*.f64 d1 d3))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 (+.f64 37 d3) d1)","(*.f64 d1 (+.f64 37 d3))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d2 d1)","(*.f64 d1 d2)","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d2 d1)","(*.f64 d1 d2)","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))"]],"stop":[["saturated",1]],"time":14.72509765625,"type":"simplify"},{"compiler":[[820,460]],"time":10.282958984375,"type":"eval"},{"alts":[["(fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)) (cbrt.f64 (+.f64 37 d2)) (*.f64 d1 d3))","fresh",0.3428688965266303],["(fma.f64 d1 (+.f64 d3 37) (*.f64 d1 d2))","next",0.0234375]],"compiler":[[19,14],[11,7],[19,14],[11,7]],"count":[[71,2]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[69,2],"picked":[1,0]}],"min-error":[0],"time":12.875,"type":"prune"},{"compiler":[[21,10]],"locations":[["(fma.f64 d1 (+.f64 d3 37) (*.f64 d1 d2))",0.0234375,true]],"time":4.779052734375,"type":"localize"},{"count":[[1,36]],"series":[["(fma.f64 d1 (+.f64 d3 37) (*.f64 d1 d2))","d2","-inf",0.2138671875],["(fma.f64 d1 (+.f64 d3 37) (*.f64 d1 d2))","d2","inf",0.27001953125],["(fma.f64 d1 (+.f64 d3 37) (*.f64 d1 d2))","d2","0",0.2939453125],["(fma.f64 d1 (+.f64 d3 37) (*.f64 d1 d2))","d3","-inf",0.243896484375],["(fma.f64 d1 (+.f64 d3 37) (*.f64 d1 d2))","d3","inf",0.26806640625],["(fma.f64 d1 (+.f64 d3 37) (*.f64 d1 d2))","d3","0",0.2900390625],["(fma.f64 d1 (+.f64 d3 37) (*.f64 d1 d2))","d1","-inf",0.60009765625],["(fma.f64 d1 (+.f64 d3 37) (*.f64 d1 d2))","d1","inf",0.802001953125],["(fma.f64 d1 (+.f64 d3 37) (*.f64 d1 d2))","d1","0",0.530029296875]],"time":3.64404296875,"type":"series"},{"count":[[1,22]],"egraph":[[2,2128,10,0.019960833],[1,170,10,0.0029415],[0,8,11,0.000227125]],"inputs":[["(fma.f64 d1 (+.f64 d3 37) (*.f64 d1 d2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d2) (*.f64 d1 (+.f64 d3 37)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 d3 37)) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d1 (+.f64 d3 37)) 1) (*.f64 d1 d2))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (*.f64 d1 (+.f64 (+.f64 d3 37) d2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 d1 (+.f64 (+.f64 d3 37) d2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 d1 (+.f64 (+.f64 d3 37) d2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 d1 (+.f64 (+.f64 d3 37) d2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 d1 (+.f64 (+.f64 d3 37) d2))) (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 (+.f64 d3 37) d2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 (+.f64 d3 37) d2))) 2) (cbrt.f64 (*.f64 d1 (+.f64 (+.f64 d3 37) d2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 d1 (+.f64 (+.f64 d3 37) d2))) (sqrt.f64 (*.f64 d1 (+.f64 (+.f64 d3 37) d2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 d1 (+.f64 d3 37)) 3) (pow.f64 (*.f64 d1 d2) 3)) (+.f64 (*.f64 (*.f64 d1 (+.f64 d3 37)) (*.f64 d1 (+.f64 d3 37))) (-.f64 (pow.f64 (*.f64 d1 d2) 2) (*.f64 (*.f64 d1 (+.f64 d3 37)) (*.f64 d1 d2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 d1 (+.f64 d3 37)) (*.f64 d1 (+.f64 d3 37))) (pow.f64 (*.f64 d1 d2) 2)) (-.f64 (*.f64 d1 (+.f64 d3 37)) (*.f64 d1 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 d1 (+.f64 (+.f64 d3 37) d2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 d1 (+.f64 (+.f64 d3 37) d2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 d1 (+.f64 (+.f64 d3 37) d2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 d1 (+.f64 (+.f64 d3 37) d2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 d1 (+.f64 (+.f64 d3 37) d2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 d1 (+.f64 (+.f64 d3 37) d2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 d1 (+.f64 (+.f64 d3 37) d2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 d1 (+.f64 (+.f64 d3 37) d2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 d1 (+.f64 (+.f64 d3 37) d2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 d1 (+.f64 (+.f64 d3 37) d2))))))))"]],"rules":[["egg-rr",22]],"stop":[["node limit",1]],"time":37.6279296875,"type":"rewrite"},{"count":[[58,34]],"egraph":[[7,1941,330,0.021628291],[6,1936,330,0.017383208],[5,1610,330,0.012885916],[4,1202,330,0.007201916],[3,441,330,0.003623375],[2,154,330,0.001379],[1,70,330,0.000470667],[0,23,330,0.0001495]],"inputs":[["(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 37 d3)) (*.f64 -1 d2)) d1))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 37 d3)) (*.f64 -1 d2)) d1))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 37 d3)) (*.f64 -1 d2)) d1))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 37 d3)) (*.f64 -1 d2)) d1))","(+.f64 (*.f64 37 d1) (*.f64 d2 d1))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 (+.f64 37 d3) d1)","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d2 d1)","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))"]],"method":["egg-herbie"],"outputs":[["(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 37 d3)) (*.f64 -1 d2)) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 37 d3)) (*.f64 -1 d2)) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 37 d3)) (*.f64 -1 d2)) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 (+.f64 37 d3)) (*.f64 -1 d2)) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 37 d1) (*.f64 d2 d1))","(*.f64 d1 (+.f64 37 d2))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 37 d1) (+.f64 (*.f64 d2 d1) (*.f64 d1 d3)))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 (+.f64 37 d3) d1)","(*.f64 d1 (+.f64 37 d3))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d2 d1)","(*.f64 d1 d2)","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d2 d1)","(*.f64 d1 d2)","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 d2 d1) (*.f64 (+.f64 37 d3) d1))","(*.f64 d1 (+.f64 37 (+.f64 d2 d3)))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))"]],"stop":[["saturated",1]],"time":38.322998046875,"type":"simplify"},{"compiler":[[365,224]],"time":4.623046875,"type":"eval"},{"alts":[["(fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)) (cbrt.f64 (+.f64 37 d2)) (*.f64 d1 d3))","next",0.3428688965266303],["(fma.f64 d1 (+.f64 d3 37) (*.f64 d1 d2))","done",0.0234375]],"compiler":[[19,14],[11,7],[19,14]],"count":[[36,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[34,0],"picked":[1,1]}],"min-error":[0],"time":5.6689453125,"type":"prune"},{"compiler":[[48,32]],"locations":[["(cbrt.f64 (+.f64 37 d2))",0.0390625,true],["(fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)) (cbrt.f64 (+.f64 37 d2)) (*.f64 d1 d3))",0.16796875,true],["(*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2))",0.1796875,true],["(pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)",0.197597509768442,true]],"time":12.94091796875,"type":"localize"},{"count":[[4,54]],"series":[["(cbrt.f64 (+.f64 37 d2))","d2","-inf",0.219970703125],["(cbrt.f64 (+.f64 37 d2))","d2","inf",0.24609375],["(cbrt.f64 (+.f64 37 d2))","d2","0",0.319091796875],["(fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)) (cbrt.f64 (+.f64 37 d2)) (*.f64 d1 d3))","d3","-inf",0.236083984375],["(fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)) (cbrt.f64 (+.f64 37 d2)) (*.f64 d1 d3))","d3","inf",0.240966796875],["(fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)) (cbrt.f64 (+.f64 37 d2)) (*.f64 d1 d3))","d3","0",1.0810546875],["(fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)) (cbrt.f64 (+.f64 37 d2)) (*.f64 d1 d3))","d2","-inf",0.267822265625],["(fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)) (cbrt.f64 (+.f64 37 d2)) (*.f64 d1 d3))","d2","inf",0.39794921875],["(fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)) (cbrt.f64 (+.f64 37 d2)) (*.f64 d1 d3))","d2","0",1.474853515625],["(fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)) (cbrt.f64 (+.f64 37 d2)) (*.f64 d1 d3))","d1","-inf",0.447998046875],["(fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)) (cbrt.f64 (+.f64 37 d2)) (*.f64 d1 d3))","d1","inf",0.421142578125],["(fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)) (cbrt.f64 (+.f64 37 d2)) (*.f64 d1 d3))","d1","0",1.5],["(*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2))","d2","-inf",0.317138671875],["(*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2))","d2","inf",0.826904296875],["(*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2))","d2","0",0.93994140625],["(*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2))","d1","-inf",0.325927734375],["(*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2))","d1","inf",0.27099609375],["(*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2))","d1","0",1.89990234375],["(pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)","d2","-inf",0.372802734375],["(pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)","d2","inf",1.22802734375],["(pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)","d2","0",1.14208984375]],"time":14.52001953125,"type":"series"},{"count":[[4,119]],"egraph":[[2,2972,38,0.025505376],[1,252,40,0.0043201260000000005],[0,12,51,0.000346209]],"inputs":[["(pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)","(*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2))","(fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)) (cbrt.f64 (+.f64 37 d2)) (*.f64 d1 d3))","(cbrt.f64 (+.f64 37 d2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 37 d2)) (cbrt.f64 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 37 d2))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 37 d2))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 37 d2))) 4) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 37 d2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 37 d2) 1/6) (sqrt.f64 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 37 d2)) (pow.f64 (+.f64 37 d2) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 37 d2))) 5) (cbrt.f64 (cbrt.f64 (+.f64 37 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 37 d2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2/3 (log.f64 (+.f64 37 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (+.f64 37 d2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 37 d2)) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (+.f64 37 d2))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (*.f64 2/3 (log.f64 (+.f64 37 d2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (+.f64 37 d2)) 1) 2/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (+.f64 37 d2)) 1/3) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (+.f64 37 d2))) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2/3 (log.f64 (+.f64 37 d2))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2) d1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 d1) (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 d1) (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 d1) (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 d1) (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2) d1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2) d1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (cbrt.f64 (+.f64 37 d2)) (sqrt.f64 d1)) 4) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 d1 3) (pow.f64 (+.f64 37 d2) 2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2) d1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (+.f64 37 d2)) (sqrt.f64 d1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (cbrt.f64 (+.f64 37 d2)) (sqrt.f64 d1)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 d1) (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2) d1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 d1 3) (pow.f64 (+.f64 37 d2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2) d1)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2) d1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (+.f64 (log.f64 d1) (*.f64 2/3 (log.f64 (+.f64 37 d2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (+.f64 (log.f64 d1) (*.f64 2/3 (log.f64 (+.f64 37 d2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (pow.f64 d1 3) (pow.f64 (+.f64 37 d2) 2))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2) d1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (cbrt.f64 (+.f64 37 d2)) (sqrt.f64 d1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (+.f64 (log.f64 d1) (*.f64 2/3 (log.f64 (+.f64 37 d2)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 d3) (*.f64 d1 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 d1 (+.f64 37 d2)) 1) (*.f64 d1 d3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3))) (pow.f64 (cbrt.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3))) 2) (cbrt.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3))) (sqrt.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 d1 (+.f64 37 d2)) 3) (pow.f64 (*.f64 d1 d3) 3)) (+.f64 (pow.f64 (*.f64 d1 (+.f64 37 d2)) 2) (-.f64 (pow.f64 (*.f64 d1 d3) 2) (*.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 d1 (+.f64 37 d2)) 2) (pow.f64 (*.f64 d1 d3) 2)) (-.f64 (*.f64 d1 (+.f64 37 d2)) (*.f64 d1 d3)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 d1) d3) (exp.f64 (*.f64 d1 (+.f64 37 d2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 d1 d3))) (exp.f64 (*.f64 d1 (+.f64 37 d2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 d1 (+.f64 37 d2))) (+.f64 1 (expm1.f64 (*.f64 d1 d3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 d1 (+.f64 37 d2) (*.f64 d1 d3))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (+.f64 37 d2)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (+.f64 37 d2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (+.f64 37 d2))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (+.f64 37 d2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (+.f64 37 d2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 37 d2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (+.f64 37 d2))) (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 37 d2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 37 d2))) 2) (cbrt.f64 (cbrt.f64 (+.f64 37 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 37 d2) 1/6) (pow.f64 (+.f64 37 d2) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 37 d2))) 4)) (sqrt.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 37 d2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (-.f64 1369 (*.f64 d2 d2))) (cbrt.f64 (-.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (+.f64 50653 (pow.f64 d2 3))) (cbrt.f64 (fma.f64 d2 (-.f64 d2 37) 1369)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 37 d2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 37 d2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 37 d2) 2) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 37 d2) 3) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 37 d2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 37 d2))) 2) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 37 d2) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 37 d2)) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (cbrt.f64 (+.f64 37 d2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (+.f64 37 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (+.f64 37 d2)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (+.f64 37 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (+.f64 37 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (+.f64 37 d2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 37 d2)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (+.f64 37 d2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (+.f64 37 d2))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (cbrt.f64 (+.f64 37 d2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/6 (log.f64 (+.f64 37 d2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (+.f64 37 d2)) 1) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (+.f64 37 d2)) 1/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (cbrt.f64 (+.f64 37 d2))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 2/3 (log.f64 (+.f64 37 d2))) 1) 1/2))))))"]],"rules":[["egg-rr",37],["egg-rr",34],["egg-rr",21],["egg-rr",27]],"stop":[["node limit",1]],"time":51.179931640625,"type":"rewrite"},{"count":[[173,159]],"egraph":[[3,7003,1340,0.030171335],[2,2238,1343,0.014671501],[1,607,1491,0.004375751],[0,183,1660,0.000990334]],"inputs":[["(pow.f64 (cbrt.f64 37) 2)","(+.f64 (pow.f64 (cbrt.f64 37) 2) (*.f64 2/3 (*.f64 d2 (pow.f64 (*.f64 1 (cbrt.f64 37)) 1/3))))","(+.f64 (pow.f64 (cbrt.f64 37) 2) (+.f64 (*.f64 (pow.f64 d2 2) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 4)) 1/3)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 4)) 1/3)))) (*.f64 2/3 (*.f64 d2 (pow.f64 (*.f64 1 (cbrt.f64 37)) 1/3)))))","(+.f64 (pow.f64 (cbrt.f64 37) 2) (+.f64 (*.f64 (pow.f64 d2 2) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 4)) 1/3)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 4)) 1/3)))) (+.f64 (*.f64 2/3 (*.f64 d2 (pow.f64 (*.f64 1 (cbrt.f64 37)) 1/3))) (*.f64 (pow.f64 d2 3) (+.f64 (*.f64 -2/999 (pow.f64 1 1/3)) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (*.f64 1/27 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (cbrt.f64 37))))))))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 d2 37) 2)) 1/3) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 d2 37) 2)) 1/3) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 d2 37) 2)) 1/3) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 d2 37) 2)) 1/3) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 d2 37) 2)) 1/3) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 d2 37) 2)) 1/3) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 d2 37) 2)) 1/3) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 d2 37) 2)) 1/3) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 37 d2) 2)) 1/3) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 37 d2) 2)) 1/3) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 37 d2) 2)) 1/3) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 37 d2) 2)) 1/3) d1)","(*.f64 (cbrt.f64 1369) d1)","(+.f64 (*.f64 74/3 (*.f64 (*.f64 d2 d1) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)) 1/3))) (*.f64 (cbrt.f64 1369) d1))","(+.f64 (*.f64 74/3 (*.f64 (*.f64 d2 d1) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)) 1/3))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 d2 2) (*.f64 d1 (-.f64 1 (*.f64 5476/3 (pow.f64 (/.f64 1 (cbrt.f64 1369)) 1/3))))) (pow.f64 (cbrt.f64 1369) 2))) (*.f64 (cbrt.f64 1369) d1)))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 d2 3) (*.f64 d1 (+.f64 (*.f64 405224/27 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2))) (*.f64 148/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 5)) 1/3) (-.f64 1 (*.f64 5476/3 (pow.f64 (/.f64 1 (cbrt.f64 1369)) 1/3)))))))) (pow.f64 (cbrt.f64 1369) 2))) (+.f64 (*.f64 74/3 (*.f64 (*.f64 d2 d1) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)) 1/3))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 d2 2) (*.f64 d1 (-.f64 1 (*.f64 5476/3 (pow.f64 (/.f64 1 (cbrt.f64 1369)) 1/3))))) (pow.f64 (cbrt.f64 1369) 2))) (*.f64 (cbrt.f64 1369) d1))))","(*.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2)) 1/3) d3) d1)","(*.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2)) 1/3) d3) d1)","(*.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2)) 1/3) d3) d1)","(*.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2)) 1/3) d3) d1)","(*.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2)) 1/3) d3) d1)","(*.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2)) 1/3) d3) d1)","(*.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2)) 1/3) d3) d1)","(*.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2)) 1/3) d3) d1)","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 d3) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (+.f64 37 d2))))))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 d3) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (+.f64 37 d2))))))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 d3) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (+.f64 37 d2))))))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 d3) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (+.f64 37 d2))))))","(+.f64 (*.f64 (cbrt.f64 1369) (*.f64 d1 (cbrt.f64 37))) (*.f64 d1 d3))","(+.f64 (*.f64 d2 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) 1/3) (*.f64 (cbrt.f64 1369) d1))) (*.f64 74/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)) 1/3) (*.f64 d1 (cbrt.f64 37)))))) (+.f64 (*.f64 (cbrt.f64 1369) (*.f64 d1 (cbrt.f64 37))) (*.f64 d1 d3)))","(+.f64 (*.f64 d2 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) 1/3) (*.f64 (cbrt.f64 1369) d1))) (*.f64 74/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)) 1/3) (*.f64 d1 (cbrt.f64 37)))))) (+.f64 (*.f64 (cbrt.f64 1369) (*.f64 d1 (cbrt.f64 37))) (+.f64 (*.f64 (pow.f64 d2 2) (+.f64 (*.f64 74/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1369) 2) (pow.f64 (cbrt.f64 37) 2))) 1/3) d1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7)) 1/3) (*.f64 (cbrt.f64 1369) d1))) (*.f64 1/3 (/.f64 (*.f64 d1 (*.f64 (cbrt.f64 37) (-.f64 1 (*.f64 5476/3 (pow.f64 (/.f64 1 (cbrt.f64 1369)) 1/3))))) (pow.f64 (cbrt.f64 1369) 2)))))) (*.f64 d1 d3))))","(+.f64 (*.f64 d2 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) 1/3) (*.f64 (cbrt.f64 1369) d1))) (*.f64 74/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)) 1/3) (*.f64 d1 (cbrt.f64 37)))))) (+.f64 (*.f64 (cbrt.f64 1369) (*.f64 d1 (cbrt.f64 37))) (+.f64 (*.f64 (pow.f64 d2 2) (+.f64 (*.f64 74/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1369) 2) (pow.f64 (cbrt.f64 37) 2))) 1/3) d1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7)) 1/3) (*.f64 (cbrt.f64 1369) d1))) (*.f64 1/3 (/.f64 (*.f64 d1 (*.f64 (cbrt.f64 37) (-.f64 1 (*.f64 5476/3 (pow.f64 (/.f64 1 (cbrt.f64 1369)) 1/3))))) (pow.f64 (cbrt.f64 1369) 2)))))) (+.f64 (*.f64 d1 d3) (*.f64 (pow.f64 d2 3) (+.f64 (*.f64 -74/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1369) 2) (pow.f64 (cbrt.f64 37) 7))) 1/3) d1)) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) 1/3) (/.f64 (*.f64 d1 (-.f64 1 (*.f64 5476/3 (pow.f64 (/.f64 1 (cbrt.f64 1369)) 1/3)))) (pow.f64 (cbrt.f64 1369) 2)))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (*.f64 1/27 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (*.f64 (cbrt.f64 1369) d1)) (pow.f64 (cbrt.f64 37) 2))) (*.f64 -1/3 (/.f64 (*.f64 d1 (*.f64 (cbrt.f64 37) (+.f64 (*.f64 405224/27 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2))) (*.f64 148/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 5)) 1/3) (-.f64 1 (*.f64 5476/3 (pow.f64 (/.f64 1 (cbrt.f64 1369)) 1/3)))))))) (pow.f64 (cbrt.f64 1369) 2)))))))))))","(*.f64 d1 d3)","(*.f64 d1 d3)","(*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1)","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1) (*.f64 d1 d3))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1) (*.f64 d1 d3))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1) (*.f64 d1 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1) (*.f64 d1 d3))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1) (*.f64 d1 d3))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1) (*.f64 d1 d3))","(*.f64 d1 d3)","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1) (*.f64 d1 d3))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1) (*.f64 d1 d3))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1) (*.f64 d1 d3))","(cbrt.f64 37)","(+.f64 (*.f64 1/3 (*.f64 d2 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) 1/3))) (cbrt.f64 37))","(+.f64 (*.f64 1/3 (*.f64 d2 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) 1/3))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 d2 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7)) 1/3))) (cbrt.f64 37)))","(+.f64 (*.f64 1/3 (*.f64 d2 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) 1/3))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 d2 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7)) 1/3))) (+.f64 (cbrt.f64 37) (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (*.f64 1/27 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (pow.f64 d2 3)) (pow.f64 (cbrt.f64 37) 2))))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (cbrt.f64 37) 2)","(+.f64 (pow.f64 (cbrt.f64 37) 2) (*.f64 2/3 (*.f64 d2 (pow.f64 (*.f64 1 (cbrt.f64 37)) 1/3))))","(+.f64 (pow.f64 (cbrt.f64 37) 2) (*.f64 2/3 (*.f64 d2 (cbrt.f64 (cbrt.f64 37)))))","(fma.f64 2/3 (*.f64 d2 (cbrt.f64 (cbrt.f64 37))) (pow.f64 (cbrt.f64 37) 2))","(+.f64 (pow.f64 (cbrt.f64 37) 2) (+.f64 (*.f64 (pow.f64 d2 2) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 4)) 1/3)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 4)) 1/3)))) (*.f64 2/3 (*.f64 d2 (pow.f64 (*.f64 1 (cbrt.f64 37)) 1/3)))))","(+.f64 (pow.f64 (cbrt.f64 37) 2) (fma.f64 (*.f64 d2 d2) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 4))) -1/9) (*.f64 2/3 (*.f64 d2 (cbrt.f64 (cbrt.f64 37))))))","(+.f64 (pow.f64 (cbrt.f64 37) 2) (fma.f64 2/3 (*.f64 d2 (cbrt.f64 (cbrt.f64 37))) (*.f64 d2 (*.f64 d2 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 4))) -1/9)))))","(+.f64 (pow.f64 (cbrt.f64 37) 2) (*.f64 d2 (+.f64 (*.f64 2/3 (cbrt.f64 (cbrt.f64 37))) (*.f64 (*.f64 (cbrt.f64 (/.f64 1/37 (cbrt.f64 37))) -1/9) d2))))","(+.f64 (pow.f64 (cbrt.f64 37) 2) (+.f64 (*.f64 (pow.f64 d2 2) (+.f64 (*.f64 -2/9 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 4)) 1/3)) (*.f64 1/9 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 4)) 1/3)))) (+.f64 (*.f64 2/3 (*.f64 d2 (pow.f64 (*.f64 1 (cbrt.f64 37)) 1/3))) (*.f64 (pow.f64 d2 3) (+.f64 (*.f64 -2/999 (pow.f64 1 1/3)) (*.f64 -2/3 (/.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (*.f64 1/27 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (cbrt.f64 37))))))))","(+.f64 (pow.f64 (cbrt.f64 37) 2) (fma.f64 (*.f64 d2 d2) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 4))) -1/9) (fma.f64 2/3 (*.f64 d2 (cbrt.f64 (cbrt.f64 37))) (*.f64 (pow.f64 d2 3) (+.f64 -2/999 (*.f64 -2/3 (/.f64 (fma.f64 -2/9 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) (/.f64 1/27 (pow.f64 (cbrt.f64 37) 2))) (cbrt.f64 37))))))))","(+.f64 (pow.f64 (cbrt.f64 37) 2) (fma.f64 (*.f64 d2 d2) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 4))) -1/9) (fma.f64 2/3 (*.f64 d2 (cbrt.f64 (cbrt.f64 37))) (*.f64 (pow.f64 d2 3) (fma.f64 -2/3 (/.f64 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) -5/27) (cbrt.f64 37)) -2/999)))))","(+.f64 (fma.f64 2/3 (*.f64 d2 (cbrt.f64 (cbrt.f64 37))) (pow.f64 (cbrt.f64 37) 2)) (*.f64 (*.f64 d2 d2) (+.f64 (*.f64 (cbrt.f64 (/.f64 1/37 (cbrt.f64 37))) -1/9) (*.f64 d2 (fma.f64 -2/3 (/.f64 (/.f64 -5/27 (pow.f64 (cbrt.f64 37) 2)) (cbrt.f64 37)) -2/999)))))","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 d2 37) 2)) 1/3) d1)","(*.f64 (cbrt.f64 (pow.f64 (+.f64 37 d2) 2)) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 d2 37) 2)) 1/3) d1)","(*.f64 (cbrt.f64 (pow.f64 (+.f64 37 d2) 2)) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 d2 37) 2)) 1/3) d1)","(*.f64 (cbrt.f64 (pow.f64 (+.f64 37 d2) 2)) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 d2 37) 2)) 1/3) d1)","(*.f64 (cbrt.f64 (pow.f64 (+.f64 37 d2) 2)) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 d2 37) 2)) 1/3) d1)","(*.f64 (cbrt.f64 (pow.f64 (+.f64 37 d2) 2)) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 d2 37) 2)) 1/3) d1)","(*.f64 (cbrt.f64 (pow.f64 (+.f64 37 d2) 2)) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 d2 37) 2)) 1/3) d1)","(*.f64 (cbrt.f64 (pow.f64 (+.f64 37 d2) 2)) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 d2 37) 2)) 1/3) d1)","(*.f64 (cbrt.f64 (pow.f64 (+.f64 37 d2) 2)) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 37 d2) 2)) 1/3) d1)","(*.f64 (cbrt.f64 (pow.f64 (+.f64 37 d2) 2)) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 37 d2) 2)) 1/3) d1)","(*.f64 (cbrt.f64 (pow.f64 (+.f64 37 d2) 2)) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 37 d2) 2)) 1/3) d1)","(*.f64 (cbrt.f64 (pow.f64 (+.f64 37 d2) 2)) d1)","(*.f64 (pow.f64 (*.f64 1 (pow.f64 (+.f64 37 d2) 2)) 1/3) d1)","(*.f64 (cbrt.f64 (pow.f64 (+.f64 37 d2) 2)) d1)","(*.f64 (cbrt.f64 1369) d1)","(*.f64 d1 (cbrt.f64 1369))","(+.f64 (*.f64 74/3 (*.f64 (*.f64 d2 d1) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)) 1/3))) (*.f64 (cbrt.f64 1369) d1))","(fma.f64 74/3 (*.f64 (*.f64 d2 d1) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)))) (*.f64 d1 (cbrt.f64 1369)))","(fma.f64 d1 (cbrt.f64 1369) (*.f64 74/3 (*.f64 d1 (*.f64 d2 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)))))))","(fma.f64 d1 (cbrt.f64 1369) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2))) (*.f64 74/3 (*.f64 d2 d1))))","(+.f64 (*.f64 74/3 (*.f64 (*.f64 d2 d1) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)) 1/3))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 d2 2) (*.f64 d1 (-.f64 1 (*.f64 5476/3 (pow.f64 (/.f64 1 (cbrt.f64 1369)) 1/3))))) (pow.f64 (cbrt.f64 1369) 2))) (*.f64 (cbrt.f64 1369) d1)))","(fma.f64 74/3 (*.f64 (*.f64 d2 d1) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)))) (fma.f64 1/3 (/.f64 (*.f64 d2 d2) (/.f64 (pow.f64 (cbrt.f64 1369) 2) (*.f64 d1 (+.f64 1 (*.f64 -5476/3 (cbrt.f64 (/.f64 1 (cbrt.f64 1369)))))))) (*.f64 d1 (cbrt.f64 1369))))","(fma.f64 74/3 (*.f64 d1 (*.f64 d2 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2))))) (fma.f64 d1 (cbrt.f64 1369) (/.f64 (*.f64 (*.f64 1/3 (*.f64 d2 (*.f64 d2 d1))) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3))) (pow.f64 (cbrt.f64 1369) 2))))","(fma.f64 74/3 (*.f64 d1 (*.f64 d2 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2))))) (fma.f64 1/3 (*.f64 (*.f64 (/.f64 d1 (pow.f64 (cbrt.f64 1369) 2)) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3))) (*.f64 d2 d2)) (*.f64 d1 (cbrt.f64 1369))))","(fma.f64 74/3 (*.f64 d1 (*.f64 d2 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2))))) (*.f64 d1 (+.f64 (cbrt.f64 1369) (/.f64 (*.f64 (*.f64 d2 d2) 1/3) (/.f64 (pow.f64 (cbrt.f64 1369) 2) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3)))))))","(+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 d2 3) (*.f64 d1 (+.f64 (*.f64 405224/27 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2))) (*.f64 148/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 5)) 1/3) (-.f64 1 (*.f64 5476/3 (pow.f64 (/.f64 1 (cbrt.f64 1369)) 1/3)))))))) (pow.f64 (cbrt.f64 1369) 2))) (+.f64 (*.f64 74/3 (*.f64 (*.f64 d2 d1) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)) 1/3))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 d2 2) (*.f64 d1 (-.f64 1 (*.f64 5476/3 (pow.f64 (/.f64 1 (cbrt.f64 1369)) 1/3))))) (pow.f64 (cbrt.f64 1369) 2))) (*.f64 (cbrt.f64 1369) d1))))","(fma.f64 -1/3 (/.f64 (pow.f64 d2 3) (/.f64 (pow.f64 (cbrt.f64 1369) 2) (*.f64 d1 (+.f64 (/.f64 405224/27 (pow.f64 (cbrt.f64 1369) 2)) (*.f64 148/3 (*.f64 (+.f64 1 (*.f64 -5476/3 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))))) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 5))))))))) (fma.f64 74/3 (*.f64 (*.f64 d2 d1) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)))) (fma.f64 1/3 (/.f64 (*.f64 d2 d2) (/.f64 (pow.f64 (cbrt.f64 1369) 2) (*.f64 d1 (+.f64 1 (*.f64 -5476/3 (cbrt.f64 (/.f64 1 (cbrt.f64 1369)))))))) (*.f64 d1 (cbrt.f64 1369)))))","(fma.f64 -1/3 (*.f64 (/.f64 (pow.f64 d2 3) (pow.f64 (cbrt.f64 1369) 2)) (*.f64 d1 (fma.f64 (*.f64 148/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 5)))) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3)) (/.f64 405224/27 (pow.f64 (cbrt.f64 1369) 2))))) (fma.f64 74/3 (*.f64 d1 (*.f64 d2 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2))))) (fma.f64 d1 (cbrt.f64 1369) (/.f64 (*.f64 (*.f64 1/3 (*.f64 d2 (*.f64 d2 d1))) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3))) (pow.f64 (cbrt.f64 1369) 2)))))","(fma.f64 -1/3 (*.f64 (/.f64 (pow.f64 d2 3) (pow.f64 (cbrt.f64 1369) 2)) (*.f64 d1 (fma.f64 (*.f64 148/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 5)))) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3)) (/.f64 405224/27 (pow.f64 (cbrt.f64 1369) 2))))) (fma.f64 74/3 (*.f64 d1 (*.f64 d2 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2))))) (fma.f64 1/3 (*.f64 (*.f64 (/.f64 d1 (pow.f64 (cbrt.f64 1369) 2)) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3))) (*.f64 d2 d2)) (*.f64 d1 (cbrt.f64 1369)))))","(fma.f64 -1/3 (*.f64 (/.f64 (pow.f64 d2 3) (pow.f64 (cbrt.f64 1369) 2)) (*.f64 d1 (fma.f64 (*.f64 148/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 5)))) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3)) (/.f64 405224/27 (pow.f64 (cbrt.f64 1369) 2))))) (fma.f64 74/3 (*.f64 d1 (*.f64 d2 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2))))) (*.f64 d1 (+.f64 (cbrt.f64 1369) (/.f64 (*.f64 (*.f64 d2 d2) 1/3) (/.f64 (pow.f64 (cbrt.f64 1369) 2) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3))))))))","(*.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2)) 1/3) d3) d1)","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2)) 1/3) d3) d1)","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2)) 1/3) d3) d1)","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2)) 1/3) d3) d1)","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2)) 1/3) d3) d1)","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2)) 1/3) d3) d1)","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2)) 1/3) d3) d1)","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2)) 1/3) d3) d1)","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 d3) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (+.f64 37 d2))))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 d3) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (+.f64 37 d2))))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 d3) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (+.f64 37 d2))))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 -1 (*.f64 d1 (+.f64 (*.f64 -1 d3) (*.f64 -1 (*.f64 (pow.f64 1 1/3) (+.f64 37 d2))))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 (cbrt.f64 1369) (*.f64 d1 (cbrt.f64 37))) (*.f64 d1 d3))","(fma.f64 (cbrt.f64 1369) (*.f64 (cbrt.f64 37) d1) (*.f64 d1 d3))","(fma.f64 (*.f64 d1 (cbrt.f64 1369)) (cbrt.f64 37) (*.f64 d1 d3))","(*.f64 d1 (+.f64 (*.f64 (cbrt.f64 1369) (cbrt.f64 37)) d3))","(+.f64 (*.f64 d2 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) 1/3) (*.f64 (cbrt.f64 1369) d1))) (*.f64 74/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)) 1/3) (*.f64 d1 (cbrt.f64 37)))))) (+.f64 (*.f64 (cbrt.f64 1369) (*.f64 d1 (cbrt.f64 37))) (*.f64 d1 d3)))","(fma.f64 d2 (fma.f64 1/3 (*.f64 (*.f64 d1 (cbrt.f64 1369)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (*.f64 74/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2))) (*.f64 (cbrt.f64 37) d1)))) (fma.f64 (cbrt.f64 1369) (*.f64 (cbrt.f64 37) d1) (*.f64 d1 d3)))","(fma.f64 d2 (fma.f64 1/3 (*.f64 (cbrt.f64 1369) (*.f64 d1 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2))))) (*.f64 74/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2))) (*.f64 (cbrt.f64 37) d1)))) (fma.f64 (*.f64 d1 (cbrt.f64 1369)) (cbrt.f64 37) (*.f64 d1 d3)))","(fma.f64 d2 (*.f64 d1 (+.f64 (*.f64 1/3 (*.f64 (cbrt.f64 1369) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2))))) (*.f64 (*.f64 74/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)))) (cbrt.f64 37)))) (*.f64 d1 (+.f64 (*.f64 (cbrt.f64 1369) (cbrt.f64 37)) d3)))","(+.f64 (*.f64 d2 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) 1/3) (*.f64 (cbrt.f64 1369) d1))) (*.f64 74/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)) 1/3) (*.f64 d1 (cbrt.f64 37)))))) (+.f64 (*.f64 (cbrt.f64 1369) (*.f64 d1 (cbrt.f64 37))) (+.f64 (*.f64 (pow.f64 d2 2) (+.f64 (*.f64 74/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1369) 2) (pow.f64 (cbrt.f64 37) 2))) 1/3) d1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7)) 1/3) (*.f64 (cbrt.f64 1369) d1))) (*.f64 1/3 (/.f64 (*.f64 d1 (*.f64 (cbrt.f64 37) (-.f64 1 (*.f64 5476/3 (pow.f64 (/.f64 1 (cbrt.f64 1369)) 1/3))))) (pow.f64 (cbrt.f64 1369) 2)))))) (*.f64 d1 d3))))","(fma.f64 d2 (fma.f64 1/3 (*.f64 (*.f64 d1 (cbrt.f64 1369)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (*.f64 74/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2))) (*.f64 (cbrt.f64 37) d1)))) (fma.f64 (cbrt.f64 1369) (*.f64 (cbrt.f64 37) d1) (fma.f64 (*.f64 d2 d2) (fma.f64 74/9 (*.f64 d1 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 37) 2) (pow.f64 (cbrt.f64 1369) 2))))) (fma.f64 -1/9 (*.f64 (*.f64 d1 (cbrt.f64 1369)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7)))) (*.f64 1/3 (/.f64 d1 (/.f64 (pow.f64 (cbrt.f64 1369) 2) (*.f64 (cbrt.f64 37) (+.f64 1 (*.f64 -5476/3 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))))))))))) (*.f64 d1 d3))))","(fma.f64 d2 (fma.f64 1/3 (*.f64 (cbrt.f64 1369) (*.f64 d1 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2))))) (*.f64 74/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2))) (*.f64 (cbrt.f64 37) d1)))) (fma.f64 (cbrt.f64 1369) (*.f64 (cbrt.f64 37) d1) (fma.f64 (*.f64 d2 d2) (fma.f64 74/9 (*.f64 d1 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 37) 2) (pow.f64 (cbrt.f64 1369) 2))))) (fma.f64 1/3 (*.f64 (/.f64 d1 (pow.f64 (cbrt.f64 1369) 2)) (*.f64 (cbrt.f64 37) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3)))) (*.f64 -1/9 (*.f64 d1 (*.f64 (cbrt.f64 1369) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7)))))))) (*.f64 d1 d3))))","(fma.f64 d2 (*.f64 d1 (+.f64 (*.f64 1/3 (*.f64 (cbrt.f64 1369) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2))))) (*.f64 (*.f64 74/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)))) (cbrt.f64 37)))) (fma.f64 (cbrt.f64 1369) (*.f64 (cbrt.f64 37) d1) (fma.f64 (*.f64 d2 d2) (fma.f64 74/9 (*.f64 d1 (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) (pow.f64 (cbrt.f64 1369) 2)))) (fma.f64 1/3 (*.f64 (/.f64 d1 (/.f64 (pow.f64 (cbrt.f64 1369) 2) (cbrt.f64 37))) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7))) (*.f64 (*.f64 d1 (cbrt.f64 1369)) -1/9)))) (*.f64 d1 d3))))","(+.f64 (+.f64 (*.f64 d1 d3) (*.f64 (*.f64 d1 (cbrt.f64 1369)) (fma.f64 1/3 (*.f64 d2 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (cbrt.f64 37)))) (*.f64 d2 (+.f64 (*.f64 74/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2))) (*.f64 (cbrt.f64 37) d1))) (*.f64 (fma.f64 74/9 (*.f64 d1 (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) (pow.f64 (cbrt.f64 1369) 2)))) (fma.f64 1/3 (*.f64 (/.f64 d1 (/.f64 (pow.f64 (cbrt.f64 1369) 2) (cbrt.f64 37))) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7))) (*.f64 (*.f64 d1 (cbrt.f64 1369)) -1/9)))) d2))))","(+.f64 (*.f64 d2 (+.f64 (*.f64 1/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) 1/3) (*.f64 (cbrt.f64 1369) d1))) (*.f64 74/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)) 1/3) (*.f64 d1 (cbrt.f64 37)))))) (+.f64 (*.f64 (cbrt.f64 1369) (*.f64 d1 (cbrt.f64 37))) (+.f64 (*.f64 (pow.f64 d2 2) (+.f64 (*.f64 74/9 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1369) 2) (pow.f64 (cbrt.f64 37) 2))) 1/3) d1)) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7)) 1/3) (*.f64 (cbrt.f64 1369) d1))) (*.f64 1/3 (/.f64 (*.f64 d1 (*.f64 (cbrt.f64 37) (-.f64 1 (*.f64 5476/3 (pow.f64 (/.f64 1 (cbrt.f64 1369)) 1/3))))) (pow.f64 (cbrt.f64 1369) 2)))))) (+.f64 (*.f64 d1 d3) (*.f64 (pow.f64 d2 3) (+.f64 (*.f64 -74/27 (*.f64 (pow.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1369) 2) (pow.f64 (cbrt.f64 37) 7))) 1/3) d1)) (+.f64 (*.f64 1/9 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) 1/3) (/.f64 (*.f64 d1 (-.f64 1 (*.f64 5476/3 (pow.f64 (/.f64 1 (cbrt.f64 1369)) 1/3)))) (pow.f64 (cbrt.f64 1369) 2)))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (*.f64 1/27 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (*.f64 (cbrt.f64 1369) d1)) (pow.f64 (cbrt.f64 37) 2))) (*.f64 -1/3 (/.f64 (*.f64 d1 (*.f64 (cbrt.f64 37) (+.f64 (*.f64 405224/27 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2))) (*.f64 148/3 (*.f64 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 5)) 1/3) (-.f64 1 (*.f64 5476/3 (pow.f64 (/.f64 1 (cbrt.f64 1369)) 1/3)))))))) (pow.f64 (cbrt.f64 1369) 2)))))))))))","(fma.f64 d2 (fma.f64 1/3 (*.f64 (*.f64 d1 (cbrt.f64 1369)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (*.f64 74/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2))) (*.f64 (cbrt.f64 37) d1)))) (fma.f64 (cbrt.f64 1369) (*.f64 (cbrt.f64 37) d1) (fma.f64 (*.f64 d2 d2) (fma.f64 74/9 (*.f64 d1 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 37) 2) (pow.f64 (cbrt.f64 1369) 2))))) (fma.f64 -1/9 (*.f64 (*.f64 d1 (cbrt.f64 1369)) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7)))) (*.f64 1/3 (/.f64 d1 (/.f64 (pow.f64 (cbrt.f64 1369) 2) (*.f64 (cbrt.f64 37) (+.f64 1 (*.f64 -5476/3 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))))))))))) (fma.f64 d1 d3 (*.f64 (pow.f64 d2 3) (fma.f64 -74/27 (*.f64 d1 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1369) 2) (pow.f64 (cbrt.f64 37) 7))))) (fma.f64 1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2))) (/.f64 d1 (/.f64 (pow.f64 (cbrt.f64 1369) 2) (+.f64 1 (*.f64 -5476/3 (cbrt.f64 (/.f64 1 (cbrt.f64 1369)))))))) (*.f64 -1/3 (+.f64 (/.f64 (fma.f64 -2/9 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) (/.f64 1/27 (pow.f64 (cbrt.f64 37) 2))) (/.f64 (pow.f64 (cbrt.f64 37) 2) (*.f64 d1 (cbrt.f64 1369)))) (/.f64 (*.f64 (*.f64 (cbrt.f64 37) d1) (+.f64 (/.f64 405224/27 (pow.f64 (cbrt.f64 1369) 2)) (*.f64 148/3 (*.f64 (+.f64 1 (*.f64 -5476/3 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))))) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 5))))))) (pow.f64 (cbrt.f64 1369) 2)))))))))))","(fma.f64 d2 (fma.f64 1/3 (*.f64 (cbrt.f64 1369) (*.f64 d1 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2))))) (*.f64 74/3 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2))) (*.f64 (cbrt.f64 37) d1)))) (fma.f64 (cbrt.f64 1369) (*.f64 (cbrt.f64 37) d1) (fma.f64 (*.f64 d2 d2) (fma.f64 74/9 (*.f64 d1 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 37) 2) (pow.f64 (cbrt.f64 1369) 2))))) (fma.f64 1/3 (*.f64 (/.f64 d1 (pow.f64 (cbrt.f64 1369) 2)) (*.f64 (cbrt.f64 37) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3)))) (*.f64 -1/9 (*.f64 d1 (*.f64 (cbrt.f64 1369) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7)))))))) (fma.f64 (pow.f64 d2 3) (fma.f64 -74/27 (*.f64 d1 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1369) 2) (pow.f64 (cbrt.f64 37) 7))))) (fma.f64 -1/3 (+.f64 (*.f64 (/.f64 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) -5/27) (pow.f64 (cbrt.f64 37) 2)) (*.f64 d1 (cbrt.f64 1369))) (/.f64 d1 (/.f64 (/.f64 (pow.f64 (cbrt.f64 1369) 2) (cbrt.f64 37)) (fma.f64 (*.f64 148/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 5)))) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3)) (/.f64 405224/27 (pow.f64 (cbrt.f64 1369) 2)))))) (*.f64 1/9 (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2))) (*.f64 (/.f64 d1 (pow.f64 (cbrt.f64 1369) 2)) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3))))))) (*.f64 d1 d3)))))","(+.f64 (fma.f64 d2 (*.f64 d1 (+.f64 (*.f64 1/3 (*.f64 (cbrt.f64 1369) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2))))) (*.f64 (*.f64 74/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)))) (cbrt.f64 37)))) (*.f64 d1 (+.f64 (*.f64 (cbrt.f64 1369) (cbrt.f64 37)) d3))) (*.f64 (*.f64 d2 d2) (+.f64 (fma.f64 74/9 (*.f64 d1 (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) (pow.f64 (cbrt.f64 1369) 2)))) (fma.f64 1/3 (*.f64 (/.f64 d1 (/.f64 (pow.f64 (cbrt.f64 1369) 2) (cbrt.f64 37))) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7))) (*.f64 (*.f64 d1 (cbrt.f64 1369)) -1/9)))) (*.f64 d2 (fma.f64 -74/27 (*.f64 d1 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1369) 2) (pow.f64 (cbrt.f64 37) 7))))) (fma.f64 -1/3 (+.f64 (*.f64 (*.f64 (/.f64 1/37 (cbrt.f64 37)) -5/27) (*.f64 d1 (cbrt.f64 1369))) (*.f64 (/.f64 d1 (/.f64 (pow.f64 (cbrt.f64 1369) 2) (cbrt.f64 37))) (fma.f64 (*.f64 148/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 5)))) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3)) (/.f64 405224/27 (pow.f64 (cbrt.f64 1369) 2))))) (*.f64 (*.f64 (/.f64 d1 (pow.f64 (cbrt.f64 1369) 2)) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3))) (*.f64 1/9 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))))))))))","(+.f64 (fma.f64 d2 (*.f64 d1 (+.f64 (*.f64 1/3 (*.f64 (cbrt.f64 1369) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2))))) (*.f64 (*.f64 74/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 2)))) (cbrt.f64 37)))) (*.f64 d1 (+.f64 (*.f64 (cbrt.f64 1369) (cbrt.f64 37)) d3))) (*.f64 (*.f64 d2 d2) (+.f64 (fma.f64 74/9 (*.f64 d1 (cbrt.f64 (/.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) (pow.f64 (cbrt.f64 1369) 2)))) (fma.f64 1/3 (*.f64 (/.f64 d1 (/.f64 (pow.f64 (cbrt.f64 1369) 2) (cbrt.f64 37))) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3))) (*.f64 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7))) (*.f64 (*.f64 d1 (cbrt.f64 1369)) -1/9)))) (*.f64 d2 (fma.f64 -74/27 (*.f64 d1 (cbrt.f64 (/.f64 1 (*.f64 (pow.f64 (cbrt.f64 1369) 2) (pow.f64 (cbrt.f64 37) 7))))) (fma.f64 -1/3 (+.f64 (*.f64 (*.f64 d1 (cbrt.f64 1369)) (*.f64 (/.f64 1/37 (cbrt.f64 37)) -5/27)) (*.f64 (/.f64 d1 (/.f64 (pow.f64 (cbrt.f64 1369) 2) (cbrt.f64 37))) (fma.f64 (*.f64 148/3 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 1369) 5)))) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3)) (/.f64 405224/27 (pow.f64 (cbrt.f64 1369) 2))))) (*.f64 (*.f64 (/.f64 d1 (pow.f64 (cbrt.f64 1369) 2)) (+.f64 1 (*.f64 (cbrt.f64 (/.f64 1 (cbrt.f64 1369))) -5476/3))) (*.f64 1/9 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))))))))))","(*.f64 d1 d3)","(*.f64 d1 d3)","(*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1)","(*.f64 d1 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2))))","(*.f64 d1 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3)))","(*.f64 d1 (+.f64 37 d2))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(*.f64 d1 d3)","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(+.f64 (*.f64 (pow.f64 (*.f64 1 (*.f64 (pow.f64 (+.f64 d2 37) 2) (+.f64 37 d2))) 1/3) d1) (*.f64 d1 d3))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (*.f64 (pow.f64 (+.f64 37 d2) 2) (+.f64 37 d2)))))","(*.f64 d1 (+.f64 d3 (cbrt.f64 (pow.f64 (+.f64 37 d2) 3))))","(*.f64 d1 (+.f64 d2 (+.f64 37 d3)))","(cbrt.f64 37)","(+.f64 (*.f64 1/3 (*.f64 d2 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) 1/3))) (cbrt.f64 37))","(fma.f64 1/3 (*.f64 d2 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (cbrt.f64 37))","(+.f64 (*.f64 1/3 (*.f64 d2 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) 1/3))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 d2 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7)) 1/3))) (cbrt.f64 37)))","(fma.f64 1/3 (*.f64 d2 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (fma.f64 -1/9 (*.f64 (*.f64 d2 d2) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7)))) (cbrt.f64 37)))","(+.f64 (*.f64 1/3 (*.f64 d2 (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) 1/3))) (+.f64 (*.f64 -1/9 (*.f64 (pow.f64 d2 2) (pow.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7)) 1/3))) (+.f64 (cbrt.f64 37) (*.f64 -1/3 (/.f64 (*.f64 (+.f64 (*.f64 -2/9 (*.f64 (pow.f64 1 1/3) (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (*.f64 1/27 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (pow.f64 d2 3)) (pow.f64 (cbrt.f64 37) 2))))))","(fma.f64 1/3 (*.f64 d2 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (+.f64 (fma.f64 -1/9 (*.f64 (*.f64 d2 d2) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7)))) (cbrt.f64 37)) (*.f64 -1/3 (/.f64 (fma.f64 -2/9 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) (/.f64 1/27 (pow.f64 (cbrt.f64 37) 2))) (/.f64 (pow.f64 (cbrt.f64 37) 2) (pow.f64 d2 3))))))","(fma.f64 1/3 (*.f64 d2 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (fma.f64 -1/9 (*.f64 (*.f64 d2 d2) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7)))) (fma.f64 -1/3 (/.f64 (*.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)) -5/27) (/.f64 (pow.f64 (cbrt.f64 37) 2) (pow.f64 d2 3))) (cbrt.f64 37))))","(fma.f64 1/3 (*.f64 d2 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (fma.f64 -1/9 (*.f64 (*.f64 d2 d2) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7)))) (fma.f64 -1/3 (*.f64 (*.f64 (/.f64 1/37 (cbrt.f64 37)) -5/27) (pow.f64 d2 3)) (cbrt.f64 37))))","(fma.f64 1/3 (*.f64 d2 (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 2)))) (fma.f64 -1/9 (*.f64 (*.f64 d2 d2) (cbrt.f64 (/.f64 1 (pow.f64 (cbrt.f64 37) 7)))) (fma.f64 -1/3 (*.f64 (pow.f64 d2 3) (*.f64 (/.f64 1/37 (cbrt.f64 37)) -5/27)) (cbrt.f64 37))))"]],"stop":[["node limit",1]],"time":57.2060546875,"type":"simplify"},{"compiler":[[5017,3701]],"time":64.613037109375,"type":"eval"},{"alts":[["(fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)) (cbrt.f64 (+.f64 37 d2)) (*.f64 d1 d3))","done",0.3428688965266303],["(fma.f64 d1 (+.f64 d3 37) (*.f64 d1 d2))","done",0.0234375]],"compiler":[[19,14],[11,7]],"count":[[205,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[203,0],"picked":[1,1]}],"min-error":[0],"time":51.4130859375,"type":"prune"},{"accuracy":[0.0234375],"baseline":[0.0234375],"branch":[["d1",0.0234375,1],["d2",0.0234375,1],["d3",0.0234375,1],["(+.f64 (+.f64 (*.f64 d1 d2) (*.f64 (+.f64 d3 5) d1)) (*.f64 d1 32))",0.0234375,1],["(+.f64 d3 5)",0.0234375,1]],"compiler":[[4,3],[4,3],[4,3],[16,11],[6,5],[47,29]],"count":[[4,1]],"inputs":[["(fma.f64 (*.f64 d1 (pow.f64 (cbrt.f64 (+.f64 37 d2)) 2)) (cbrt.f64 (+.f64 37 d2)) (*.f64 d1 d3))","(fma.f64 d1 (+.f64 d3 37) (*.f64 d1 d2))","(*.f64 d1 (+.f64 d3 (+.f64 37 d2)))","(+.f64 (+.f64 (*.f64 d1 d2) (*.f64 (+.f64 d3 5) d1)) (*.f64 d1 32))"]],"link":["."],"name":["FastMath dist3"],"oracle":[0.3780251465266303],"outputs":[["(fma.f64 d1 (+.f64 d3 37) (*.f64 d1 d2))"]],"time":16.6669921875,"times":[["d1",3.202880859375],["d2",3.27392578125],["d3",3.48095703125],["(+.f64 (+.f64 (*.f64 d1 d2) (*.f64 (+.f64 d3 5) d1)) (*.f64 d1 32))",3.511962890625],["(+.f64 d3 5)",2.10498046875]],"type":"regimes"},{"compiler":[[11,7]],"egraph":[[1,10,11,3.0209e-5],[0,8,11,1.8292e-5]],"inputs":[["(fma.f64 d1 (+.f64 d3 37) (*.f64 d1 d2))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 d1 (+.f64 d3 37) (*.f64 d1 d2))"]],"stop":[["done",1],["saturated",1]],"time":8.391845703125,"type":"simplify"},{"time":0.01318359375,"type":"soundness"},{"compiler":[[11,7],[11,7],[11,7]],"remove-preprocessing":[["(sort d2 d3)"]],"time":8.784912109375,"type":"end"}]