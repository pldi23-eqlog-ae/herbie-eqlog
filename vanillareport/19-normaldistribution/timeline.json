[{"compiler":[[36,30]],"method":["search"],"sampling":[[12,0.06140333320945501,0.0009746560826897621,0.9376220107078552],[11,0.06042867712676525,0.0019493121653795242,0.9376220107078552],[10,0.06042867712676525,0.0019493121653795242,0.9376220107078552],[9,0.05847936496138573,0.0038986243307590485,0.9376220107078552],[8,0.05847936496138573,0.0038986243307590485,0.9376220107078552],[7,0.05458074063062668,0.007797248661518097,0.9376220107078552],[6,0.05458074063062668,0.007797248661518097,0.9376220107078552],[5,0.04678349196910858,0.015594497323036194,0.9376220107078552],[4,0.04678349196910858,0.015594497323036194,0.9376220107078552],[3,0.031188994646072388,0.031188994646072388,0.9376220107078552],[2,0.031188994646072388,0.031188994646072388,0.9376220107078552],[1,0.0,0.062377989292144775,0.9376220107078552],[0,0.0,0.062377989292144775,0.9376220107078552]],"time":17.635986328125,"type":"analyze"},{"outcomes":[["body",256,"valid",845.89111328125,8256]],"time":853.190185546875,"type":"sample"},{"compiler":[[21,19]],"egraph":[[0,2,2,1.834e-6],[18,7721,48,0.101380373],[17,7323,48,0.09142328999999999],[16,6839,48,0.08200516499999999],[15,6333,48,0.07307570699999999],[14,5397,48,0.063955874],[13,4646,48,0.054044291],[12,4046,48,0.045325707],[11,3586,48,0.037659916],[10,3254,48,0.030091416],[9,3035,48,0.023900332],[8,2862,48,0.018846582],[7,2745,48,0.014443874000000002],[6,2100,48,0.010053916000000001],[5,1548,48,0.006798833000000001],[4,483,48,0.003693458],[3,205,48,0.001462667],[2,110,48,0.0007214999999999999],[1,59,48,0.000346959],[0,28,48,0.00013325]],"inputs":[["0","1"],["(+.f64 (*.f64 (*.f64 (/.f64 1 6) (pow.f64 (*.f64 -2 (log.f64 u1)) 1/2)) (cos.f64 (*.f64 (*.f64 2 (PI.f64)) u2))) 1/2)","(+.f64 (*.f64 (*.f64 (/.f64 1 6) (pow.f64 (*.f64 -2 (log.f64 u2)) 1/2)) (cos.f64 (*.f64 (*.f64 2 (PI.f64)) u1))) 1/2)"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(+.f64 (*.f64 (*.f64 (/.f64 1 6) (pow.f64 (*.f64 -2 (log.f64 u1)) 1/2)) (cos.f64 (*.f64 (*.f64 2 (PI.f64)) u2))) 1/2)","(fma.f64 (*.f64 1/6 (sqrt.f64 (*.f64 -2 (log.f64 u1)))) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 1/2)","(fma.f64 1/6 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","(+.f64 (*.f64 (*.f64 (/.f64 1 6) (pow.f64 (*.f64 -2 (log.f64 u2)) 1/2)) (cos.f64 (*.f64 (*.f64 2 (PI.f64)) u1))) 1/2)","(fma.f64 (*.f64 1/6 (sqrt.f64 (*.f64 -2 (log.f64 u2)))) (cos.f64 (*.f64 u1 (*.f64 2 (PI.f64)))) 1/2)","(fma.f64 1/6 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u2))) (cos.f64 (*.f64 u1 (*.f64 2 (PI.f64))))) 1/2)","(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u2))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 u1 (PI.f64))))) 1/2)"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":126.953857421875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[19,7778,24,0.083038707],[18,7216,24,0.073754291],[17,6659,24,0.065162874],[16,5997,24,0.056737290999999995],[15,5139,24,0.048434623999999996],[14,4461,24,0.040724166],[13,3894,24,0.034434624],[12,3466,24,0.028468582],[11,3159,24,0.023940081999999998],[10,2953,24,0.019742581999999998],[9,2793,24,0.015766290999999998],[8,2691,24,0.012215582],[7,1407,24,0.008673707],[6,1077,24,0.005391832],[5,804,24,0.0035689989999999998],[4,261,24,0.001970332],[3,116,24,0.000845791],[2,65,24,0.000446416],[1,38,24,0.000229583],[0,20,24,9.2083e-5]],"inputs":[["(+.f64 (*.f64 (*.f64 (/.f64 1 6) (pow.f64 (*.f64 -2 (log.f64 u1)) 1/2)) (cos.f64 (*.f64 (*.f64 2 (PI.f64)) u2))) 1/2)"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 (*.f64 (/.f64 1 6) (pow.f64 (*.f64 -2 (log.f64 u1)) 1/2)) (cos.f64 (*.f64 (*.f64 2 (PI.f64)) u2))) 1/2)","(fma.f64 (*.f64 1/6 (sqrt.f64 (*.f64 -2 (log.f64 u1)))) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 1/2)","(fma.f64 1/6 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)"]],"stop":[["node limit",1]],"time":94.91796875,"type":"simplify"},{"compiler":[[36,30]],"time":0.625,"type":"eval"},{"alts":[["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","next",0.35546875],["(+.f64 (*.f64 (*.f64 (/.f64 1 6) (pow.f64 (*.f64 -2 (log.f64 u1)) 1/2)) (cos.f64 (*.f64 (*.f64 2 (PI.f64)) u2))) 1/2)","fresh",0.36328125]],"compiler":[[17,15],[21,19],[17,15],[21,19]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.34765625],"time":1.780029296875,"type":"prune"},{"compiler":[[57,34]],"locations":[["(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))",0.01171875,true],["(sqrt.f64 (*.f64 -2 (log.f64 u1)))",0.1328125,true],["(*.f64 (PI.f64) u2)",0.21875,true],["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)",0.36328125,true]],"time":13.39697265625,"type":"localize"},{"count":[[4,24]],"series":[["(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))","u2","-inf",0.14990234375],["(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))","u2","inf",0.18310546875],["(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))","u2","0",0.23095703125],["(sqrt.f64 (*.f64 -2 (log.f64 u1)))","u1","-inf",0.251953125],["(sqrt.f64 (*.f64 -2 (log.f64 u1)))","u1","inf",0.1669921875],["(sqrt.f64 (*.f64 -2 (log.f64 u1)))","u1","0",0.17822265625],["(*.f64 (PI.f64) u2)","u2","-inf",0.243896484375],["(*.f64 (PI.f64) u2)","u2","inf",0.306884765625],["(*.f64 (PI.f64) u2)","u2","0",0.248046875],["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","u2","-inf",0.592041015625],["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","u2","inf",6.93310546875],["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","u2","0",1.01904296875],["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","u1","-inf",10.255126953125],["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","u1","inf",6.222900390625],["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","u1","0",15.00390625]],"time":42.233154296875,"type":"series"},{"count":[[4,90]],"egraph":[[2,3619,50,0.02888075],[1,324,50,0.005262625],[0,16,50,0.00047525]],"inputs":[["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","(*.f64 (PI.f64) u2)","(sqrt.f64 (*.f64 -2 (log.f64 u1)))","(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/6) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/6) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/6) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) (pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) 2) (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) (sqrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/6) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3) 1/8) (+.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/6) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 2) (-.f64 1/4 (*.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/6) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/6) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 2) 1/4) (fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/6) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (PI.f64) u2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (PI.f64)) u2)) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (PI.f64)) u2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (PI.f64)) u2))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (PI.f64)) u2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) u2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (PI.f64) u2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (PI.f64) u2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (PI.f64) u2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (PI.f64) u2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 u2 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 u2 3) (pow.f64 (PI.f64) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (PI.f64) u2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (PI.f64)) u2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (PI.f64) u2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (PI.f64) u2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 u2 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 u2 3) (pow.f64 (PI.f64) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (PI.f64) u2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (PI.f64) u2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (PI.f64) u2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (PI.f64) u2)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (*.f64 -2 (log.f64 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (*.f64 -2 (log.f64 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))) (cbrt.f64 (*.f64 -2 (log.f64 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 -2 (log.f64 u1))) (cbrt.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 1/4) (pow.f64 (*.f64 -2 (log.f64 u1)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 -2) (sqrt.f64 (log.f64 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 u1)) (sqrt.f64 -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (*.f64 -2 (log.f64 u1))) 2)) (sqrt.f64 (cbrt.f64 (*.f64 -2 (log.f64 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (*.f64 -2 (log.f64 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 -2 (log.f64 u1))) 2) 1/2) (pow.f64 (cbrt.f64 (*.f64 -2 (log.f64 u1))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -2 (log.f64 u1)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 -2 (log.f64 u1))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/6)) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/6))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/6))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 2) 1/36))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1))))))"]],"rules":[["egg-rr",16],["egg-rr",28],["egg-rr",20],["egg-rr",26]],"stop":[["node limit",1]],"time":58.163818359375,"type":"rewrite"},{"count":[[114,100]],"egraph":[[19,7937,234,0.137616542],[18,7067,234,0.125781209],[17,6282,234,0.110547917],[16,6168,234,0.098245876],[15,6026,234,0.089768001],[14,5858,234,0.081222293],[13,5636,234,0.072309626],[12,5378,234,0.06373416800000001],[11,4745,234,0.055112751],[10,4222,234,0.046010209],[9,3794,234,0.03791175],[8,3474,234,0.030611042],[7,3230,234,0.024152459],[6,3005,234,0.018582417],[5,2694,243,0.013769292],[4,2185,246,0.009398876],[3,874,252,0.005146292],[2,211,252,0.001729001],[1,77,254,0.000565417],[0,31,258,0.000172542]],"inputs":[["(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","1/6","(+.f64 1/6 (*.f64 -1/3 (*.f64 (pow.f64 u2 2) (pow.f64 (PI.f64) 2))))","(+.f64 (*.f64 1/9 (*.f64 (pow.f64 u2 4) (pow.f64 (PI.f64) 4))) (+.f64 1/6 (*.f64 -1/3 (*.f64 (pow.f64 u2 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (*.f64 1/9 (*.f64 (pow.f64 u2 4) (pow.f64 (PI.f64) 4))) (+.f64 1/6 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 u2 2) (pow.f64 (PI.f64) 2))) (*.f64 -2/135 (*.f64 (pow.f64 u2 6) (pow.f64 (PI.f64) 6))))))","(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","(*.f64 u2 (PI.f64))","1/6","(+.f64 1/6 (*.f64 -1/3 (*.f64 (pow.f64 u2 2) (pow.f64 (PI.f64) 2))))","(+.f64 1/6 (*.f64 -1/3 (*.f64 (*.f64 u2 u2) (pow.f64 (PI.f64) 2))))","(fma.f64 -1/3 (*.f64 (*.f64 u2 u2) (pow.f64 (PI.f64) 2)) 1/6)","(fma.f64 -1/3 (*.f64 u2 (*.f64 u2 (pow.f64 (PI.f64) 2))) 1/6)","(fma.f64 u2 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 u2 -1/3)) 1/6)","(fma.f64 -1/3 (pow.f64 (*.f64 u2 (PI.f64)) 2) 1/6)","(+.f64 (*.f64 1/9 (*.f64 (pow.f64 u2 4) (pow.f64 (PI.f64) 4))) (+.f64 1/6 (*.f64 -1/3 (*.f64 (pow.f64 u2 2) (pow.f64 (PI.f64) 2)))))","(fma.f64 1/9 (*.f64 (pow.f64 u2 4) (pow.f64 (PI.f64) 4)) (+.f64 1/6 (*.f64 -1/3 (*.f64 (*.f64 u2 u2) (pow.f64 (PI.f64) 2)))))","(fma.f64 1/9 (*.f64 (pow.f64 u2 4) (pow.f64 (PI.f64) 4)) (fma.f64 -1/3 (*.f64 (*.f64 u2 u2) (pow.f64 (PI.f64) 2)) 1/6))","(fma.f64 -1/3 (*.f64 (*.f64 u2 u2) (pow.f64 (PI.f64) 2)) (fma.f64 1/9 (*.f64 (pow.f64 u2 4) (pow.f64 (PI.f64) 4)) 1/6))","(fma.f64 (pow.f64 (PI.f64) 2) (*.f64 u2 (*.f64 u2 -1/3)) (fma.f64 1/9 (*.f64 (pow.f64 u2 4) (pow.f64 (PI.f64) 4)) 1/6))","(fma.f64 u2 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 u2 -1/3)) (fma.f64 1/9 (pow.f64 (*.f64 u2 (PI.f64)) 4) 1/6))","(fma.f64 -1/3 (pow.f64 (*.f64 u2 (PI.f64)) 2) (fma.f64 1/9 (pow.f64 (*.f64 u2 (PI.f64)) 4) 1/6))","(+.f64 (*.f64 1/9 (*.f64 (pow.f64 u2 4) (pow.f64 (PI.f64) 4))) (+.f64 1/6 (+.f64 (*.f64 -1/3 (*.f64 (pow.f64 u2 2) (pow.f64 (PI.f64) 2))) (*.f64 -2/135 (*.f64 (pow.f64 u2 6) (pow.f64 (PI.f64) 6))))))","(fma.f64 1/9 (*.f64 (pow.f64 u2 4) (pow.f64 (PI.f64) 4)) (+.f64 1/6 (fma.f64 -1/3 (*.f64 (*.f64 u2 u2) (pow.f64 (PI.f64) 2)) (*.f64 -2/135 (*.f64 (pow.f64 u2 6) (pow.f64 (PI.f64) 6))))))","(+.f64 (fma.f64 1/9 (*.f64 (pow.f64 u2 4) (pow.f64 (PI.f64) 4)) (fma.f64 -1/3 (*.f64 (*.f64 u2 u2) (pow.f64 (PI.f64) 2)) 1/6)) (*.f64 -2/135 (*.f64 (pow.f64 u2 6) (pow.f64 (PI.f64) 6))))","(fma.f64 1/9 (*.f64 (pow.f64 u2 4) (pow.f64 (PI.f64) 4)) (fma.f64 -1/3 (*.f64 (*.f64 u2 u2) (pow.f64 (PI.f64) 2)) (fma.f64 -2/135 (*.f64 (pow.f64 u2 6) (pow.f64 (PI.f64) 6)) 1/6)))","(fma.f64 u2 (*.f64 -1/3 (*.f64 u2 (pow.f64 (PI.f64) 2))) (fma.f64 -2/135 (*.f64 (pow.f64 u2 6) (pow.f64 (PI.f64) 6)) (fma.f64 1/9 (*.f64 (pow.f64 u2 4) (pow.f64 (PI.f64) 4)) 1/6)))","(fma.f64 u2 (*.f64 -1/3 (*.f64 u2 (pow.f64 (PI.f64) 2))) (fma.f64 -2/135 (*.f64 (pow.f64 u2 6) (pow.f64 (PI.f64) 6)) (fma.f64 1/9 (pow.f64 (*.f64 u2 (PI.f64)) 4) 1/6)))","(fma.f64 u2 (*.f64 -1/3 (*.f64 u2 (pow.f64 (PI.f64) 2))) (fma.f64 -2/135 (pow.f64 (*.f64 u2 (PI.f64)) 6) (fma.f64 1/9 (pow.f64 (*.f64 u2 (PI.f64)) 4) 1/6)))","(fma.f64 -1/3 (pow.f64 (*.f64 u2 (PI.f64)) 2) (fma.f64 -2/135 (pow.f64 (*.f64 u2 (PI.f64)) 6) (fma.f64 1/9 (pow.f64 (*.f64 u2 (PI.f64)) 4) 1/6)))","(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 1/6 (cos.f64 (*.f64 (*.f64 u2 (PI.f64)) 2)))","(*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))))","(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 1/6 (cos.f64 (*.f64 (*.f64 u2 (PI.f64)) 2)))","(*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))))","(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 1/6 (cos.f64 (*.f64 (*.f64 u2 (PI.f64)) 2)))","(*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))))","(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 1/6 (cos.f64 (*.f64 (*.f64 u2 (PI.f64)) 2)))","(*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))))","(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 1/6 (cos.f64 (*.f64 (*.f64 u2 (PI.f64)) 2)))","(*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))))","(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 1/6 (cos.f64 (*.f64 (*.f64 u2 (PI.f64)) 2)))","(*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))))","(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 1/6 (cos.f64 (*.f64 (*.f64 u2 (PI.f64)) 2)))","(*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))))","(*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 1/6 (cos.f64 (*.f64 (*.f64 u2 (PI.f64)) 2)))","(*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))))"]],"stop":[["node limit",1]],"time":159.656005859375,"type":"simplify"},{"compiler":[[2042,1466]],"time":26.003173828125,"type":"eval"},{"alts":[["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3) 1/3) 1/2)","next",0.34375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) 2) (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","fresh",0.6281015137479347],["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (exp.f64 (log.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))) 1/2)","fresh",0.606796289073768],["(expm1.f64 (log1p.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","fresh",0.5333176758319564]],"compiler":[[21,19],[37,30],[19,17],[19,17],[21,19],[37,30],[19,17],[19,17]],"count":[[102,4]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[100,4],"picked":[1,0]}],"min-error":[0],"time":23.885986328125,"type":"prune"},{"compiler":[[85,56]],"locations":[["(*.f64 (PI.f64) u2)",0.21875,false],["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3) 1/3) 1/2)",0.36328125,true],["(pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3)",0.984375,true],["(pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3) 1/3)",0.98828125,true]],"time":21.804931640625,"type":"localize"},{"count":[[3,24]],"series":[["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3) 1/3) 1/2)","u2","-inf",0.4189453125],["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3) 1/3) 1/2)","u2","inf",0.39599609375],["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3) 1/3) 1/2)","u2","0",1.913818359375],["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3) 1/3) 1/2)","u1","-inf",0.4072265625],["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3) 1/3) 1/2)","u1","inf",0.409912109375],["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3) 1/3) 1/2)","u1","0",1.5419921875],["(pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3)","u2","-inf",0.19189453125],["(pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3)","u2","inf",0.405029296875],["(pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3)","u2","0",0.3759765625],["(pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3) 1/3)","u2","-inf",1.36083984375],["(pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3) 1/3)","u2","inf",1.56201171875],["(pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3) 1/3)","u2","0",2.208984375]],"time":11.489013671875,"type":"series"},{"count":[[3,84]],"egraph":[[2,4369,53,0.032479458],[1,424,53,0.006864458],[0,20,53,0.000657167]],"inputs":[["(pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3) 1/3)","(pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3)","(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3) 1/3) 1/2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 1/6) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) (cbrt.f64 (pow.f64 (exp.f64 1/6) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 1/6) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 1/6) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 1/6) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 2)) (*.f64 (cbrt.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) (pow.f64 (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) (pow.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 2) 1/36) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 2) (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (*.f64 (sqrt.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 2) 1/36) 1/3) (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1/216 1/3) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3/2) 1/3) (pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3/2) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/6 (cbrt.f64 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 2))) (cbrt.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/6 (sqrt.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) (sqrt.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 2) 1/36))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 1/6) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 1/216) (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 3))) (cbrt.f64 (pow.f64 (exp.f64 1/216) (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 3))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 1/216) (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 1/216) (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 3)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 1/216) (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/6 (*.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) (*.f64 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 2) 1/36)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) (*.f64 1/6 (*.f64 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 2) 1/36)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (*.f64 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 2) 1/36))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 2) 1/36) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 2) (*.f64 (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) (*.f64 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 2) 1/36)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) (*.f64 (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) (*.f64 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 2) 1/36)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 3) 1/216)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3/2) (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 2) 3) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 3) (pow.f64 (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 2) 1/36) 1/6) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 2) 1/36) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 2) 1/36) 1) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 2) 1/36) (pow.f64 (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 2)) (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 2) 1/36) (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))) (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 6))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 1/216) (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 3 (log.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1)))) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2))) (cbrt.f64 (exp.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)) (pow.f64 (cbrt.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)) 2) (cbrt.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)) (sqrt.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1)))) 3) 1/8) (fma.f64 (*.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1)))) (*.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1)))) (-.f64 1/4 (*.f64 (*.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1)))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1)))) (*.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1)))) -1/4) (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)) 1))))))"]],"rules":[["egg-rr",26],["egg-rr",30],["egg-rr",28]],"stop":[["node limit",1]],"time":58.947998046875,"type":"rewrite"},{"count":[[108,102]],"egraph":[[3,7544,568,0.02742175],[2,1156,574,0.011623833],[1,309,674,0.0023870000000000002],[0,96,729,0.000555542]],"inputs":[["(cbrt.f64 1/216)","(+.f64 (cbrt.f64 1/216) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 u2 2) (+.f64 (*.f64 -1/54 (pow.f64 (PI.f64) 2)) (*.f64 -1/108 (pow.f64 (PI.f64) 2)))) (pow.f64 (cbrt.f64 1/216) 2))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 1/9 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/324 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4)))) (*.f64 72 (pow.f64 (+.f64 (*.f64 -1/108 (pow.f64 (PI.f64) 2)) (*.f64 -1/54 (pow.f64 (PI.f64) 2))) 2))) (pow.f64 u2 4)) (pow.f64 (cbrt.f64 1/216) 2))) (+.f64 (cbrt.f64 1/216) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 u2 2) (+.f64 (*.f64 -1/54 (pow.f64 (PI.f64) 2)) (*.f64 -1/108 (pow.f64 (PI.f64) 2)))) (pow.f64 (cbrt.f64 1/216) 2)))))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 1/9 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/324 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4)))) (*.f64 72 (pow.f64 (+.f64 (*.f64 -1/108 (pow.f64 (PI.f64) 2)) (*.f64 -1/54 (pow.f64 (PI.f64) 2))) 2))) (pow.f64 u2 4)) (pow.f64 (cbrt.f64 1/216) 2))) (+.f64 (cbrt.f64 1/216) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 u2 2) (+.f64 (*.f64 -1/54 (pow.f64 (PI.f64) 2)) (*.f64 -1/108 (pow.f64 (PI.f64) 2)))) (pow.f64 (cbrt.f64 1/216) 2))) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 u2 6) (-.f64 (+.f64 (*.f64 -1/81 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/2430 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -2/27 (pow.f64 (PI.f64) 6)) (*.f64 -2/405 (pow.f64 (PI.f64) 6)))) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4))) (pow.f64 (PI.f64) 2)))))) (+.f64 (*.f64 144 (*.f64 (+.f64 (*.f64 -1/108 (pow.f64 (PI.f64) 2)) (*.f64 -1/54 (pow.f64 (PI.f64) 2))) (-.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 1/9 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/27 (pow.f64 (PI.f64) 4)) (*.f64 1/324 (pow.f64 (PI.f64) 4)))) (*.f64 72 (pow.f64 (+.f64 (*.f64 -1/54 (pow.f64 (PI.f64) 2)) (*.f64 -1/108 (pow.f64 (PI.f64) 2))) 2))))) (*.f64 1/27 (/.f64 (pow.f64 (+.f64 (*.f64 -1/108 (pow.f64 (PI.f64) 2)) (*.f64 -1/54 (pow.f64 (PI.f64) 2))) 3) (pow.f64 (cbrt.f64 1/216) 6)))))) (pow.f64 (cbrt.f64 1/216) 2))))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","1/216","(+.f64 (*.f64 (pow.f64 u2 2) (+.f64 (*.f64 -1/54 (pow.f64 (PI.f64) 2)) (*.f64 -1/108 (pow.f64 (PI.f64) 2)))) 1/216)","(+.f64 (*.f64 (pow.f64 u2 2) (+.f64 (*.f64 -1/54 (pow.f64 (PI.f64) 2)) (*.f64 -1/108 (pow.f64 (PI.f64) 2)))) (+.f64 1/216 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 1/9 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/324 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4)))) (pow.f64 u2 4))))","(+.f64 (*.f64 (pow.f64 u2 2) (+.f64 (*.f64 -1/54 (pow.f64 (PI.f64) 2)) (*.f64 -1/108 (pow.f64 (PI.f64) 2)))) (+.f64 1/216 (+.f64 (*.f64 (pow.f64 u2 6) (+.f64 (*.f64 -1/81 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/2430 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -2/27 (pow.f64 (PI.f64) 6)) (*.f64 -2/405 (pow.f64 (PI.f64) 6)))) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4))) (pow.f64 (PI.f64) 2))))))) (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 1/9 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/324 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4)))) (pow.f64 u2 4)))))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) 3))"]],"method":["egg-herbie"],"outputs":[["(cbrt.f64 1/216)","(+.f64 (cbrt.f64 1/216) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 u2 2) (+.f64 (*.f64 -1/54 (pow.f64 (PI.f64) 2)) (*.f64 -1/108 (pow.f64 (PI.f64) 2)))) (pow.f64 (cbrt.f64 1/216) 2))))","(+.f64 (cbrt.f64 1/216) (*.f64 1/3 (/.f64 (*.f64 u2 u2) (/.f64 (pow.f64 (cbrt.f64 1/216) 2) (*.f64 (pow.f64 (PI.f64) 2) -1/36)))))","(fma.f64 1/3 (*.f64 (/.f64 (*.f64 u2 u2) (pow.f64 (cbrt.f64 1/216) 2)) (*.f64 (pow.f64 (PI.f64) 2) -1/36)) (cbrt.f64 1/216))","(+.f64 (cbrt.f64 1/216) (/.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 u2 (*.f64 u2 -1/108))) (pow.f64 (cbrt.f64 1/216) 2)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 1/9 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/324 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4)))) (*.f64 72 (pow.f64 (+.f64 (*.f64 -1/108 (pow.f64 (PI.f64) 2)) (*.f64 -1/54 (pow.f64 (PI.f64) 2))) 2))) (pow.f64 u2 4)) (pow.f64 (cbrt.f64 1/216) 2))) (+.f64 (cbrt.f64 1/216) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 u2 2) (+.f64 (*.f64 -1/54 (pow.f64 (PI.f64) 2)) (*.f64 -1/108 (pow.f64 (PI.f64) 2)))) (pow.f64 (cbrt.f64 1/216) 2)))))","(fma.f64 1/3 (/.f64 (+.f64 (fma.f64 1/6 (*.f64 (pow.f64 (PI.f64) 4) 4/27) (*.f64 (pow.f64 (PI.f64) 4) 13/324)) (*.f64 -72 (pow.f64 (*.f64 (pow.f64 (PI.f64) 2) -1/36) 2))) (/.f64 (pow.f64 (cbrt.f64 1/216) 2) (pow.f64 u2 4))) (+.f64 (cbrt.f64 1/216) (*.f64 1/3 (/.f64 (*.f64 u2 u2) (/.f64 (pow.f64 (cbrt.f64 1/216) 2) (*.f64 (pow.f64 (PI.f64) 2) -1/36))))))","(fma.f64 1/3 (/.f64 (pow.f64 u2 4) (/.f64 (pow.f64 (cbrt.f64 1/216) 2) (+.f64 (fma.f64 (pow.f64 (PI.f64) 4) 13/324 (*.f64 (pow.f64 (PI.f64) 4) 2/81)) (*.f64 (*.f64 (pow.f64 (PI.f64) 4) 1/1296) -72)))) (fma.f64 1/3 (*.f64 (/.f64 (*.f64 u2 u2) (pow.f64 (cbrt.f64 1/216) 2)) (*.f64 (pow.f64 (PI.f64) 2) -1/36)) (cbrt.f64 1/216)))","(+.f64 (/.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 u2 (*.f64 u2 -1/108))) (pow.f64 (cbrt.f64 1/216) 2)) (fma.f64 1/3 (*.f64 (/.f64 (pow.f64 u2 4) (pow.f64 (cbrt.f64 1/216) 2)) (+.f64 (*.f64 (pow.f64 (PI.f64) 4) 7/108) (*.f64 (pow.f64 (PI.f64) 4) -1/18))) (cbrt.f64 1/216)))","(+.f64 (/.f64 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 u2 (*.f64 u2 -1/108))) (pow.f64 (cbrt.f64 1/216) 2)) (fma.f64 1/3 (*.f64 (/.f64 (pow.f64 u2 4) (pow.f64 (cbrt.f64 1/216) 2)) (fma.f64 (pow.f64 (PI.f64) 4) 7/108 (*.f64 (pow.f64 (PI.f64) 4) -1/18))) (cbrt.f64 1/216)))","(+.f64 (*.f64 1/3 (/.f64 (*.f64 (-.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 1/9 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/324 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4)))) (*.f64 72 (pow.f64 (+.f64 (*.f64 -1/108 (pow.f64 (PI.f64) 2)) (*.f64 -1/54 (pow.f64 (PI.f64) 2))) 2))) (pow.f64 u2 4)) (pow.f64 (cbrt.f64 1/216) 2))) (+.f64 (cbrt.f64 1/216) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 u2 2) (+.f64 (*.f64 -1/54 (pow.f64 (PI.f64) 2)) (*.f64 -1/108 (pow.f64 (PI.f64) 2)))) (pow.f64 (cbrt.f64 1/216) 2))) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 u2 6) (-.f64 (+.f64 (*.f64 -1/81 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/2430 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -2/27 (pow.f64 (PI.f64) 6)) (*.f64 -2/405 (pow.f64 (PI.f64) 6)))) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4))) (pow.f64 (PI.f64) 2)))))) (+.f64 (*.f64 144 (*.f64 (+.f64 (*.f64 -1/108 (pow.f64 (PI.f64) 2)) (*.f64 -1/54 (pow.f64 (PI.f64) 2))) (-.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 1/9 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/27 (pow.f64 (PI.f64) 4)) (*.f64 1/324 (pow.f64 (PI.f64) 4)))) (*.f64 72 (pow.f64 (+.f64 (*.f64 -1/54 (pow.f64 (PI.f64) 2)) (*.f64 -1/108 (pow.f64 (PI.f64) 2))) 2))))) (*.f64 1/27 (/.f64 (pow.f64 (+.f64 (*.f64 -1/108 (pow.f64 (PI.f64) 2)) (*.f64 -1/54 (pow.f64 (PI.f64) 2))) 3) (pow.f64 (cbrt.f64 1/216) 6)))))) (pow.f64 (cbrt.f64 1/216) 2))))))","(fma.f64 1/3 (/.f64 (+.f64 (fma.f64 1/6 (*.f64 (pow.f64 (PI.f64) 4) 4/27) (*.f64 (pow.f64 (PI.f64) 4) 13/324)) (*.f64 -72 (pow.f64 (*.f64 (pow.f64 (PI.f64) 2) -1/36) 2))) (/.f64 (pow.f64 (cbrt.f64 1/216) 2) (pow.f64 u2 4))) (+.f64 (cbrt.f64 1/216) (*.f64 1/3 (+.f64 (/.f64 (*.f64 u2 u2) (/.f64 (pow.f64 (cbrt.f64 1/216) 2) (*.f64 (pow.f64 (PI.f64) 2) -1/36))) (/.f64 (pow.f64 u2 6) (/.f64 (pow.f64 (cbrt.f64 1/216) 2) (-.f64 (fma.f64 -1/81 (pow.f64 (PI.f64) 6) (fma.f64 -1/2430 (pow.f64 (PI.f64) 6) (fma.f64 1/6 (*.f64 (pow.f64 (PI.f64) 6) -32/405) (*.f64 -1/3 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 (PI.f64) 4) 4/27)))))) (fma.f64 144 (*.f64 (*.f64 (pow.f64 (PI.f64) 2) -1/36) (+.f64 (fma.f64 1/6 (*.f64 (pow.f64 (PI.f64) 4) 4/27) (*.f64 (pow.f64 (PI.f64) 4) 13/324)) (*.f64 -72 (pow.f64 (*.f64 (pow.f64 (PI.f64) 2) -1/36) 2)))) (*.f64 1/27 (/.f64 (pow.f64 (*.f64 (pow.f64 (PI.f64) 2) -1/36) 3) (pow.f64 (cbrt.f64 1/216) 6)))))))))))","(fma.f64 1/3 (/.f64 (pow.f64 u2 4) (/.f64 (pow.f64 (cbrt.f64 1/216) 2) (+.f64 (fma.f64 (pow.f64 (PI.f64) 4) 13/324 (*.f64 (pow.f64 (PI.f64) 4) 2/81)) (*.f64 (*.f64 (pow.f64 (PI.f64) 4) 1/1296) -72)))) (fma.f64 1/3 (+.f64 (*.f64 (/.f64 (*.f64 u2 u2) (pow.f64 (cbrt.f64 1/216) 2)) (*.f64 (pow.f64 (PI.f64) 2) -1/36)) (*.f64 (/.f64 (pow.f64 u2 6) (pow.f64 (cbrt.f64 1/216) 2)) (+.f64 (*.f64 (pow.f64 (PI.f64) 6) -31/2430) (-.f64 (fma.f64 -1/3 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 (PI.f64) 4) 4/27)) (*.f64 (pow.f64 (PI.f64) 6) -16/1215)) (fma.f64 (*.f64 (*.f64 (pow.f64 (PI.f64) 2) -1/36) 144) (+.f64 (fma.f64 (pow.f64 (PI.f64) 4) 13/324 (*.f64 (pow.f64 (PI.f64) 4) 2/81)) (*.f64 (*.f64 (pow.f64 (PI.f64) 4) 1/1296) -72)) (*.f64 1/27 (/.f64 (*.f64 (pow.f64 (pow.f64 (PI.f64) 2) 3) -1/46656) 1/46656))))))) (cbrt.f64 1/216)))","(fma.f64 1/3 (fma.f64 (/.f64 (*.f64 u2 u2) (pow.f64 (cbrt.f64 1/216) 2)) (*.f64 (pow.f64 (PI.f64) 2) -1/36) (*.f64 (+.f64 (*.f64 (pow.f64 (PI.f64) 6) -7/270) (-.f64 (*.f64 (pow.f64 (PI.f64) 6) -4/81) (fma.f64 (+.f64 (*.f64 (pow.f64 (PI.f64) 4) 7/108) (*.f64 (pow.f64 (PI.f64) 4) -1/18)) (*.f64 (pow.f64 (PI.f64) 2) -4) (*.f64 8 (/.f64 (pow.f64 (PI.f64) 6) -216))))) (/.f64 (pow.f64 u2 6) (pow.f64 (cbrt.f64 1/216) 2)))) (fma.f64 1/3 (*.f64 (/.f64 (pow.f64 u2 4) (pow.f64 (cbrt.f64 1/216) 2)) (+.f64 (*.f64 (pow.f64 (PI.f64) 4) 7/108) (*.f64 (pow.f64 (PI.f64) 4) -1/18))) (cbrt.f64 1/216)))","(fma.f64 1/3 (fma.f64 (/.f64 (*.f64 u2 u2) (pow.f64 (cbrt.f64 1/216) 2)) (*.f64 (pow.f64 (PI.f64) 2) -1/36) (*.f64 (+.f64 (*.f64 (pow.f64 (PI.f64) 6) -7/270) (-.f64 (*.f64 (pow.f64 (PI.f64) 6) -4/81) (fma.f64 (fma.f64 (pow.f64 (PI.f64) 4) 7/108 (*.f64 (pow.f64 (PI.f64) 4) -1/18)) (*.f64 (pow.f64 (PI.f64) 2) -4) (*.f64 8 (/.f64 (pow.f64 (PI.f64) 6) -216))))) (/.f64 (pow.f64 u2 6) (pow.f64 (cbrt.f64 1/216) 2)))) (fma.f64 1/3 (*.f64 (/.f64 (pow.f64 u2 4) (pow.f64 (cbrt.f64 1/216) 2)) (fma.f64 (pow.f64 (PI.f64) 4) 7/108 (*.f64 (pow.f64 (PI.f64) 4) -1/18))) (cbrt.f64 1/216)))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))))","(*.f64 (cbrt.f64 1/216) (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))","1/216","(+.f64 (*.f64 (pow.f64 u2 2) (+.f64 (*.f64 -1/54 (pow.f64 (PI.f64) 2)) (*.f64 -1/108 (pow.f64 (PI.f64) 2)))) 1/216)","(fma.f64 (*.f64 u2 u2) (*.f64 (pow.f64 (PI.f64) 2) -1/36) 1/216)","(fma.f64 u2 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 -1/36 u2)) 1/216)","(+.f64 (*.f64 (pow.f64 u2 2) (+.f64 (*.f64 -1/54 (pow.f64 (PI.f64) 2)) (*.f64 -1/108 (pow.f64 (PI.f64) 2)))) (+.f64 1/216 (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 1/9 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/324 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4)))) (pow.f64 u2 4))))","(+.f64 (fma.f64 (*.f64 u2 u2) (*.f64 (pow.f64 (PI.f64) 2) -1/36) 1/216) (*.f64 (fma.f64 1/6 (*.f64 (pow.f64 (PI.f64) 4) 4/27) (*.f64 (pow.f64 (PI.f64) 4) 13/324)) (pow.f64 u2 4)))","(fma.f64 (*.f64 u2 u2) (*.f64 (pow.f64 (PI.f64) 2) -1/36) (fma.f64 (fma.f64 (pow.f64 (PI.f64) 4) 13/324 (*.f64 (pow.f64 (PI.f64) 4) 2/81)) (pow.f64 u2 4) 1/216))","(fma.f64 (*.f64 (pow.f64 (PI.f64) 4) 7/108) (pow.f64 u2 4) (fma.f64 u2 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 -1/36 u2)) 1/216))","(+.f64 (*.f64 (pow.f64 u2 2) (+.f64 (*.f64 -1/54 (pow.f64 (PI.f64) 2)) (*.f64 -1/108 (pow.f64 (PI.f64) 2)))) (+.f64 1/216 (+.f64 (*.f64 (pow.f64 u2 6) (+.f64 (*.f64 -1/81 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 -1/2430 (pow.f64 (PI.f64) 6)) (+.f64 (*.f64 1/6 (+.f64 (*.f64 -2/27 (pow.f64 (PI.f64) 6)) (*.f64 -2/405 (pow.f64 (PI.f64) 6)))) (*.f64 -1/3 (*.f64 (+.f64 (*.f64 1/9 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4))) (pow.f64 (PI.f64) 2))))))) (*.f64 (+.f64 (*.f64 1/6 (+.f64 (*.f64 1/9 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4)))) (+.f64 (*.f64 1/324 (pow.f64 (PI.f64) 4)) (*.f64 1/27 (pow.f64 (PI.f64) 4)))) (pow.f64 u2 4)))))","(+.f64 (fma.f64 (*.f64 u2 u2) (*.f64 (pow.f64 (PI.f64) 2) -1/36) 1/216) (fma.f64 (pow.f64 u2 6) (fma.f64 -1/81 (pow.f64 (PI.f64) 6) (fma.f64 -1/2430 (pow.f64 (PI.f64) 6) (fma.f64 1/6 (*.f64 (pow.f64 (PI.f64) 6) -32/405) (*.f64 -1/3 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 (PI.f64) 4) 4/27)))))) (*.f64 (fma.f64 1/6 (*.f64 (pow.f64 (PI.f64) 4) 4/27) (*.f64 (pow.f64 (PI.f64) 4) 13/324)) (pow.f64 u2 4))))","(+.f64 (fma.f64 (*.f64 u2 u2) (*.f64 (pow.f64 (PI.f64) 2) -1/36) 1/216) (fma.f64 (pow.f64 u2 6) (+.f64 (fma.f64 -1/3 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 (PI.f64) 4) 4/27)) (*.f64 (pow.f64 (PI.f64) 6) -16/1215)) (*.f64 (pow.f64 (PI.f64) 6) -31/2430)) (*.f64 (fma.f64 (pow.f64 (PI.f64) 4) 13/324 (*.f64 (pow.f64 (PI.f64) 4) 2/81)) (pow.f64 u2 4))))","(fma.f64 u2 (*.f64 (pow.f64 (PI.f64) 2) (*.f64 -1/36 u2)) (fma.f64 (*.f64 (pow.f64 (PI.f64) 4) 7/108) (pow.f64 u2 4) (fma.f64 (pow.f64 u2 6) (+.f64 (*.f64 (pow.f64 (PI.f64) 6) -4/81) (*.f64 (pow.f64 (PI.f64) 6) -7/270)) 1/216)))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 u2 (*.f64 (PI.f64) 2))) 3))","(*.f64 1/216 (pow.f64 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))) 3))"]],"stop":[["node limit",1]],"time":46.208984375,"type":"simplify"},{"compiler":[[3437,2596]],"time":47.029052734375,"type":"eval"},{"alts":[["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3) 1/3) 1/2)","done",0.34375],["(*.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)) 2) (cbrt.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)))","fresh",0.6281015137479347],["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 (pow.f64 1/216 1/3) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","fresh",0.5950775390737681],["(expm1.f64 (log1p.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","next",0.5333176758319564]],"compiler":[[21,19],[37,30],[19,17],[19,17],[37,30],[19,17],[19,17]],"count":[[127,4]],"kept":[{"done":[0,0],"fresh":[3,1],"new":[123,2],"picked":[1,1]}],"min-error":[0],"time":26.35205078125,"type":"prune"},{"compiler":[[90,57]],"locations":[["(sqrt.f64 (*.f64 -2 (log.f64 u1)))",0.1328125,false],["(*.f64 (PI.f64) u2)",0.21875,false],["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)",0.36328125,false],["(expm1.f64 (log1p.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))",0.4082413086106521,true]],"time":22.19287109375,"type":"localize"},{"count":[[1,0]],"series":[["(expm1.f64 (log1p.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","u2","-inf",0.22998046875],["(expm1.f64 (log1p.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","u2","inf",0.201904296875],["(expm1.f64 (log1p.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","u2","0",0.26806640625],["(expm1.f64 (log1p.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","u1","-inf",0.220947265625],["(expm1.f64 (log1p.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","u1","inf",0.258056640625],["(expm1.f64 (log1p.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","u1","0",0.260986328125]],"time":1.554931640625,"type":"series"},{"count":[[1,45]],"egraph":[[2,3828,24,0.030006166],[1,345,24,0.005595458],[0,18,24,0.000509375]],"inputs":[["(expm1.f64 (log1p.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2))) (cbrt.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2)) (pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2)) 2) (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2)) (sqrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2) 1) 3) 1) (fma.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2) 1) (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2) 1) (+.f64 1 (*.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2) 1) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))) 3) 1/8) (fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))) (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))) (-.f64 1/4 (*.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2) 1) (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2) 1) -1) (+.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))) (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))) -1/4) (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 1/4) (*.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 1/4) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 -2) (*.f64 (sqrt.f64 (log.f64 u1)) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))) 1 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2) 1)) (cbrt.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2) 1))) (cbrt.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))))) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))))) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 1 (sqrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2))) (hypot.f64 1 (sqrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))))) (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 1/4) (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))))) (*.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 1/4) (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/6) (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))) 1/6 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (pow.f64 (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))) 2)) (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64))))))) (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 u2 (*.f64 2 (PI.f64)))))) 1/2)))))"]],"rules":[["egg-rr",45]],"stop":[["node limit",1]],"time":51.044189453125,"type":"rewrite"},{"count":[[45,45]],"egraph":[[0,0,0,2.0292e-5]],"inputs":[[]],"method":["egg-herbie"],"outputs":[[]],"stop":[["saturated",1]],"time":10.699951171875,"type":"simplify"},{"compiler":[[2907,2189]],"time":37.350830078125,"type":"eval"},{"alts":[["(expm1.f64 (log1p.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","next",0.5209351562950724],["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3) 1/3) 1/2)","done",0.34375],["(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 (pow.f64 1/216 1/3) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","fresh",0.5950775390737681]],"compiler":[[21,19],[21,19],[19,17],[21,19],[19,17]],"count":[[124,3]],"kept":[{"done":[1,1],"fresh":[2,1],"new":[120,1],"picked":[1,0]}],"min-error":[0],"time":25.483154296875,"type":"prune"},{"compiler":[[105,70]],"locations":[["(*.f64 (PI.f64) u2)",0.21875,false],["(fma.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)",0.36328125,true],["(pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)",0.3828125,true],["(expm1.f64 (log1p.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))",0.4082413086106521,true]],"time":35.0400390625,"type":"localize"},{"count":[[3,12]],"series":[["(fma.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","u2","-inf",0.199951171875],["(fma.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","u2","inf",0.176025390625],["(fma.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","u2","0",0.25390625],["(fma.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","u1","-inf",0.19091796875],["(fma.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","u1","inf",0.211181640625],["(fma.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","u1","0",0.18603515625],["(pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)","u1","-inf",8.589111328125],["(pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)","u1","inf",7.43505859375],["(pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)","u1","0",16.951904296875],["(expm1.f64 (log1p.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","u2","-inf",0.343017578125],["(expm1.f64 (log1p.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","u2","inf",0.40380859375],["(expm1.f64 (log1p.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","u2","0",0.30517578125],["(expm1.f64 (log1p.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","u1","-inf",0.613037109375],["(expm1.f64 (log1p.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","u1","inf",0.7041015625],["(expm1.f64 (log1p.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","u1","0",0.677001953125]],"time":37.517822265625,"type":"series"},{"count":[[3,97]],"egraph":[[2,4368,57,0.032630041],[1,390,57,0.006811457999999999],[0,20,63,0.000612458]],"inputs":[["(expm1.f64 (log1p.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","(pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)","(fma.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2))) (cbrt.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) (pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) 2) (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) (sqrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) 3) 1) (fma.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) (+.f64 1 (*.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 3) 1/8) (fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) (-.f64 1/4 (*.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) -1) (+.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) -1/4) (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))) (*.f64 (sqrt.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))))) (cbrt.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1)) (cbrt.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1))) (cbrt.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))) (sqrt.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1)) (sqrt.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))) (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))) (*.f64 (sqrt.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))) (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/6) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/6 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (pow.f64 (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 2)) (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))) (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1/2)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2))) (cbrt.f64 (exp.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -2 (log.f64 u1)) (sqrt.f64 (*.f64 -2 (log.f64 u1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 -2 (log.f64 u1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 -2 3/2) (pow.f64 (log.f64 u1) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (log.f64 u1) 3/2) (pow.f64 -2 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/4) (pow.f64 (*.f64 -2 (log.f64 u1)) 3/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 3/2) (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 -2 (log.f64 u1))) 2) 3/2) (pow.f64 (cbrt.f64 (*.f64 -2 (log.f64 u1))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) 3/2) (pow.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -2 (log.f64 u1)) (cbrt.f64 (*.f64 -2 (log.f64 u1)))) (cbrt.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 -2 (log.f64 u1)) (sqrt.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))))) (sqrt.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1/2 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2))) (cbrt.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) (pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) 2) (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) (sqrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) 3) 1) (fma.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) (+.f64 1 (*.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 3) 1/8) (fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) (-.f64 1/4 (*.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) -1) (+.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) -1/4) (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) 1))))))"]],"rules":[["egg-rr",29],["egg-rr",24],["egg-rr",44]],"stop":[["node limit",1]],"time":65.072998046875,"type":"rewrite"},{"count":[[109,73]],"egraph":[[10,7155,268,0.047116457],[9,5764,276,0.038495207000000004],[8,3832,276,0.027455124000000004],[7,2233,276,0.016554415000000003],[6,1254,276,0.00893929],[5,721,276,0.005304499000000001],[4,354,276,0.003004249],[3,213,276,0.001560124],[2,102,276,0.000736749],[1,51,284,0.00033633299999999997],[0,25,300,0.000133333]],"inputs":[["(+.f64 1/2 (*.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (log.f64 (/.f64 1 u1))))))","(+.f64 1/2 (*.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (log.f64 (/.f64 1 u1))))))","(+.f64 1/2 (*.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (log.f64 (/.f64 1 u1))))))","(+.f64 1/2 (*.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (log.f64 (/.f64 1 u1))))))","(*.f64 (sqrt.f64 (pow.f64 (log.f64 (/.f64 1 u1)) 3)) (sqrt.f64 8))","(*.f64 (sqrt.f64 (pow.f64 (log.f64 (/.f64 1 u1)) 3)) (sqrt.f64 8))","(*.f64 (sqrt.f64 (pow.f64 (log.f64 (/.f64 1 u1)) 3)) (sqrt.f64 8))","(*.f64 (sqrt.f64 (pow.f64 (log.f64 (/.f64 1 u1)) 3)) (sqrt.f64 8))","(+.f64 1/2 (*.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (log.f64 (/.f64 1 u1))))))","(+.f64 1/2 (*.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (log.f64 (/.f64 1 u1))))))","(+.f64 1/2 (*.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (log.f64 (/.f64 1 u1))))))","(+.f64 1/2 (*.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (log.f64 (/.f64 1 u1))))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 1/2 (*.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (log.f64 (/.f64 1 u1))))))","(+.f64 1/2 (*.f64 1/6 (*.f64 (sqrt.f64 2) (*.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (sqrt.f64 (neg.f64 (log.f64 u1)))))))","(fma.f64 (*.f64 1/6 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))) (sqrt.f64 (neg.f64 (log.f64 u1))) 1/2)","(fma.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))) 1/2)","(fma.f64 1/6 (*.f64 (sqrt.f64 2) (*.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (sqrt.f64 (neg.f64 (log.f64 u1))))) 1/2)","(fma.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (neg.f64 (log.f64 u1)))) 1/2)","(fma.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (*.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (sqrt.f64 2))) 1/2)","(+.f64 1/2 (*.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (log.f64 (/.f64 1 u1))))))","(+.f64 1/2 (*.f64 1/6 (*.f64 (sqrt.f64 2) (*.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (sqrt.f64 (neg.f64 (log.f64 u1)))))))","(fma.f64 (*.f64 1/6 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))) (sqrt.f64 (neg.f64 (log.f64 u1))) 1/2)","(fma.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))) 1/2)","(fma.f64 1/6 (*.f64 (sqrt.f64 2) (*.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (sqrt.f64 (neg.f64 (log.f64 u1))))) 1/2)","(fma.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (neg.f64 (log.f64 u1)))) 1/2)","(fma.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (*.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (sqrt.f64 2))) 1/2)","(+.f64 1/2 (*.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (log.f64 (/.f64 1 u1))))))","(+.f64 1/2 (*.f64 1/6 (*.f64 (sqrt.f64 2) (*.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (sqrt.f64 (neg.f64 (log.f64 u1)))))))","(fma.f64 (*.f64 1/6 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))) (sqrt.f64 (neg.f64 (log.f64 u1))) 1/2)","(fma.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))) 1/2)","(fma.f64 1/6 (*.f64 (sqrt.f64 2) (*.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (sqrt.f64 (neg.f64 (log.f64 u1))))) 1/2)","(fma.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (neg.f64 (log.f64 u1)))) 1/2)","(fma.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (*.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (sqrt.f64 2))) 1/2)","(+.f64 1/2 (*.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (log.f64 (/.f64 1 u1))))))","(+.f64 1/2 (*.f64 1/6 (*.f64 (sqrt.f64 2) (*.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (sqrt.f64 (neg.f64 (log.f64 u1)))))))","(fma.f64 (*.f64 1/6 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))) (sqrt.f64 (neg.f64 (log.f64 u1))) 1/2)","(fma.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))) 1/2)","(fma.f64 1/6 (*.f64 (sqrt.f64 2) (*.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (sqrt.f64 (neg.f64 (log.f64 u1))))) 1/2)","(fma.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (neg.f64 (log.f64 u1)))) 1/2)","(fma.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (*.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (sqrt.f64 2))) 1/2)","(*.f64 (sqrt.f64 (pow.f64 (log.f64 (/.f64 1 u1)) 3)) (sqrt.f64 8))","(*.f64 (sqrt.f64 (pow.f64 (neg.f64 (log.f64 u1)) 3)) (sqrt.f64 8))","(*.f64 (sqrt.f64 8) (pow.f64 (neg.f64 (log.f64 u1)) 3/2))","(*.f64 (sqrt.f64 8) (pow.f64 (log.f64 u1) 3/2))","(*.f64 (sqrt.f64 (pow.f64 (log.f64 (/.f64 1 u1)) 3)) (sqrt.f64 8))","(*.f64 (sqrt.f64 (pow.f64 (neg.f64 (log.f64 u1)) 3)) (sqrt.f64 8))","(*.f64 (sqrt.f64 8) (pow.f64 (neg.f64 (log.f64 u1)) 3/2))","(*.f64 (sqrt.f64 8) (pow.f64 (log.f64 u1) 3/2))","(*.f64 (sqrt.f64 (pow.f64 (log.f64 (/.f64 1 u1)) 3)) (sqrt.f64 8))","(*.f64 (sqrt.f64 (pow.f64 (neg.f64 (log.f64 u1)) 3)) (sqrt.f64 8))","(*.f64 (sqrt.f64 8) (pow.f64 (neg.f64 (log.f64 u1)) 3/2))","(*.f64 (sqrt.f64 8) (pow.f64 (log.f64 u1) 3/2))","(*.f64 (sqrt.f64 (pow.f64 (log.f64 (/.f64 1 u1)) 3)) (sqrt.f64 8))","(*.f64 (sqrt.f64 (pow.f64 (neg.f64 (log.f64 u1)) 3)) (sqrt.f64 8))","(*.f64 (sqrt.f64 8) (pow.f64 (neg.f64 (log.f64 u1)) 3/2))","(*.f64 (sqrt.f64 8) (pow.f64 (log.f64 u1) 3/2))","(+.f64 1/2 (*.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (log.f64 (/.f64 1 u1))))))","(+.f64 1/2 (*.f64 1/6 (*.f64 (sqrt.f64 2) (*.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (sqrt.f64 (neg.f64 (log.f64 u1)))))))","(fma.f64 (*.f64 1/6 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))) (sqrt.f64 (neg.f64 (log.f64 u1))) 1/2)","(fma.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))) 1/2)","(fma.f64 1/6 (*.f64 (sqrt.f64 2) (*.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (sqrt.f64 (neg.f64 (log.f64 u1))))) 1/2)","(fma.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (neg.f64 (log.f64 u1)))) 1/2)","(fma.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (*.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (sqrt.f64 2))) 1/2)","(+.f64 1/2 (*.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (log.f64 (/.f64 1 u1))))))","(+.f64 1/2 (*.f64 1/6 (*.f64 (sqrt.f64 2) (*.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (sqrt.f64 (neg.f64 (log.f64 u1)))))))","(fma.f64 (*.f64 1/6 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))) (sqrt.f64 (neg.f64 (log.f64 u1))) 1/2)","(fma.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))) 1/2)","(fma.f64 1/6 (*.f64 (sqrt.f64 2) (*.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (sqrt.f64 (neg.f64 (log.f64 u1))))) 1/2)","(fma.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (neg.f64 (log.f64 u1)))) 1/2)","(fma.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (*.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (sqrt.f64 2))) 1/2)","(+.f64 1/2 (*.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (log.f64 (/.f64 1 u1))))))","(+.f64 1/2 (*.f64 1/6 (*.f64 (sqrt.f64 2) (*.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (sqrt.f64 (neg.f64 (log.f64 u1)))))))","(fma.f64 (*.f64 1/6 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))) (sqrt.f64 (neg.f64 (log.f64 u1))) 1/2)","(fma.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))) 1/2)","(fma.f64 1/6 (*.f64 (sqrt.f64 2) (*.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (sqrt.f64 (neg.f64 (log.f64 u1))))) 1/2)","(fma.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (neg.f64 (log.f64 u1)))) 1/2)","(fma.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (*.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (sqrt.f64 2))) 1/2)","(+.f64 1/2 (*.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (log.f64 (/.f64 1 u1))))))","(+.f64 1/2 (*.f64 1/6 (*.f64 (sqrt.f64 2) (*.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (sqrt.f64 (neg.f64 (log.f64 u1)))))))","(fma.f64 (*.f64 1/6 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))) (sqrt.f64 (neg.f64 (log.f64 u1))) 1/2)","(fma.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))))) 1/2)","(fma.f64 1/6 (*.f64 (sqrt.f64 2) (*.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (sqrt.f64 (neg.f64 (log.f64 u1))))) 1/2)","(fma.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (neg.f64 (log.f64 u1)))) 1/2)","(fma.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (*.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (sqrt.f64 2))) 1/2)"]],"stop":[["node limit",1]],"time":65.522216796875,"type":"simplify"},{"compiler":[[2369,1745]],"time":29.352783203125,"type":"eval"},{"alts":[["(fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (pow.f64 (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 2)) (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1/2)","fresh",0.334980029305326],["(expm1.f64 (log1p.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","done",0.5209351562950724],["(fma.f64 (cbrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1/2)","fresh",0.42710878907376815],["(/.f64 (fma.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) -1) (+.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) 1))","fresh",0.5033188476844203],["(fma.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (*.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (sqrt.f64 2))) 1/2)","fresh",0.2578125],["(+.f64 1/2 (*.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (log.f64 (/.f64 1 u1))))))","fresh",0.34765625],["(fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))) (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1/2)","fresh",0.29296875]],"compiler":[[30,25],[21,19],[24,20],[58,46],[19,17],[21,19],[28,23]],"count":[[97,7]],"kept":[{"done":[1,0],"fresh":[1,0],"new":[94,6],"picked":[1,1]}],"min-error":[0],"time":26.358154296875,"type":"prune"},{"accuracy":[0.2578125],"baseline":[0.2578125],"branch":[["u1",0.2578125,1],["u2",0.2578125,1],["(+.f64 (*.f64 (*.f64 (/.f64 1 6) (pow.f64 (*.f64 -2 (log.f64 u1)) 1/2)) (cos.f64 (*.f64 (*.f64 2 (PI.f64)) u2))) 1/2)",0.2578125,1],["(*.f64 (*.f64 (/.f64 1 6) (pow.f64 (*.f64 -2 (log.f64 u1)) 1/2)) (cos.f64 (*.f64 (*.f64 2 (PI.f64)) u2)))",0.2578125,1],["(*.f64 (/.f64 1 6) (pow.f64 (*.f64 -2 (log.f64 u1)) 1/2))",0.2578125,1],["(pow.f64 (*.f64 -2 (log.f64 u1)) 1/2)",0.2578125,1],["(*.f64 -2 (log.f64 u1))",0.2578125,1],["(*.f64 -2 (log.f64 u1))",0.2578125,1],["(log.f64 u1)",0.2578125,1],["(cos.f64 (*.f64 (*.f64 2 (PI.f64)) u2))",0.2578125,1],["(*.f64 (*.f64 2 (PI.f64)) u2)",0.2578125,1]],"compiler":[[3,2],[3,2],[21,19],[19,17],[12,11],[8,7],[6,5],[6,5],[4,3],[8,7],[7,6],[363,266]],"count":[[15,1]],"inputs":[["(fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (pow.f64 (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 2)) (cbrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1/2)","(fma.f64 (cbrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 (cbrt.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1)))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1/2)","(/.f64 (fma.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) -1) (+.f64 (+.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2) 1) 1))","(fma.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (*.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (sqrt.f64 2))) 1/2)","(+.f64 1/2 (*.f64 1/6 (*.f64 (*.f64 (sqrt.f64 2) (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64))))) (sqrt.f64 (log.f64 (/.f64 1 u1))))))","(fma.f64 (*.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))) (sqrt.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2))))) 1/2)","(expm1.f64 (log1p.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 -2 (log.f64 u1)) 3/2)) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","(*.f64 (pow.f64 (cbrt.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)) 2) (cbrt.f64 (fma.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) (sqrt.f64 (*.f64 -2 (log.f64 u1))) 1/2)))","(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 (pow.f64 1/216 1/3) (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (pow.f64 (pow.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 3) 1/3) 1/2)","(*.f64 (pow.f64 (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)) 2) (cbrt.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (exp.f64 (log.f64 (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))))) 1/2)","(expm1.f64 (log1p.f64 (fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)))","(fma.f64 (sqrt.f64 (*.f64 -2 (log.f64 u1))) (*.f64 1/6 (cos.f64 (*.f64 2 (*.f64 (PI.f64) u2)))) 1/2)","(+.f64 (*.f64 (*.f64 (/.f64 1 6) (pow.f64 (*.f64 -2 (log.f64 u1)) 1/2)) (cos.f64 (*.f64 (*.f64 2 (PI.f64)) u2))) 1/2)"]],"link":["."],"name":["normal distribution"],"oracle":[1.1230968263380794],"outputs":[["(fma.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (*.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (sqrt.f64 2))) 1/2)"]],"time":69.39990234375,"times":[["u1",5.713134765625],["u2",5.85595703125],["(+.f64 (*.f64 (*.f64 (/.f64 1 6) (pow.f64 (*.f64 -2 (log.f64 u1)) 1/2)) (cos.f64 (*.f64 (*.f64 2 (PI.f64)) u2))) 1/2)",6.289794921875],["(*.f64 (*.f64 (/.f64 1 6) (pow.f64 (*.f64 -2 (log.f64 u1)) 1/2)) (cos.f64 (*.f64 (*.f64 2 (PI.f64)) u2)))",6.242919921875],["(*.f64 (/.f64 1 6) (pow.f64 (*.f64 -2 (log.f64 u1)) 1/2))",5.9609375],["(pow.f64 (*.f64 -2 (log.f64 u1)) 1/2)",6.041015625],["(*.f64 -2 (log.f64 u1))",6.041015625],["(*.f64 -2 (log.f64 u1))",5.9599609375],["(log.f64 u1)",5.794921875],["(cos.f64 (*.f64 (*.f64 2 (PI.f64)) u2))",2.255126953125],["(*.f64 (*.f64 2 (PI.f64)) u2)",5.885986328125]],"type":"regimes"},{"compiler":[[19,17]],"egraph":[[3,28,28,0.000130375],[2,27,28,9.925e-5],[1,25,28,6.7833e-5],[0,17,28,3.6208e-5]],"inputs":[["(fma.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (*.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (sqrt.f64 2))) 1/2)"]],"method":["egg-herbie"],"outputs":[["(fma.f64 (cos.f64 (*.f64 2 (*.f64 u2 (PI.f64)))) (*.f64 (sqrt.f64 (neg.f64 (log.f64 u1))) (*.f64 1/6 (sqrt.f64 2))) 1/2)"]],"stop":[["fuel",1],["saturated",1]],"time":8.906005859375,"type":"simplify"},{"time":0.01806640625,"type":"soundness"},{"compiler":[[19,17]],"remove-preprocessing":[[]],"time":11.85595703125,"type":"end"}]