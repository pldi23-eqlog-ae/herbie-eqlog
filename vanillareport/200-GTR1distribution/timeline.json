[{"compiler":[[41,27]],"method":["search"],"sampling":[[12,0.0007892705887556076,2.5460341572761527e-5,0.9991852690696716],[11,0.0007892705887556076,2.5460341572761527e-5,0.9991852690696716],[10,0.0007638102471828461,5.092068314552307e-5,0.9991852690696716],[9,0.0007638102471828461,5.092068314552307e-5,0.9991852690696716],[8,0.000712889564037323,0.00010184136629104614,0.9991852690696715],[7,0.000712889564037323,0.00010184136629104614,0.9991852690696715],[6,0.0006110481977462768,0.0002036827325820923,0.9991852690696716],[5,0.0006110481977462768,0.0002036827325820923,0.9991852690696716],[4,0.0004073654651641846,0.0004073654651641846,0.9991852690696716],[3,0.0004073654651641846,0.0004073654651641846,0.9991852690696716],[2,0.0,0.0008147309303283692,0.9991852690696716],[1,0.0,0.0008147309303283692,0.9991852690696716],[0,0.0,0.0008147309303283692,0.9991852690696716]],"time":15.990966796875,"type":"analyze"},{"outcomes":[["body",256,"valid",605.72705078125,8256]],"time":613.14111328125,"type":"sample"},{"compiler":[[26,16]],"egraph":[[0,2,2,2.042e-6],[4,6872,62,0.022429417],[3,1615,62,0.011135625],[2,317,62,0.0025651249999999997],[1,79,62,0.0005573749999999999],[0,23,66,0.000135125]],"inputs":[["0","1"],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","(/.f64 (-.f64 (*.f64 cosTheta cosTheta) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 cosTheta cosTheta))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 cosTheta cosTheta) 1) alpha) alpha))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","(/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (*.f64 (log.f64 (*.f64 alpha alpha)) (+.f64 1 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))))))","(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (*.f64 (log.f64 alpha) 2))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))","(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))","(/.f64 (-.f64 (*.f64 cosTheta cosTheta) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 cosTheta cosTheta))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 cosTheta cosTheta) 1) alpha) alpha))))","(/.f64 (fma.f64 cosTheta cosTheta -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 cosTheta cosTheta))) (+.f64 1 (*.f64 (fma.f64 cosTheta cosTheta -1) (*.f64 alpha alpha)))))","(/.f64 (/.f64 (/.f64 (fma.f64 cosTheta cosTheta -1) (PI.f64)) (*.f64 2 (log.f64 cosTheta))) (fma.f64 alpha (*.f64 alpha (fma.f64 cosTheta cosTheta -1)) 1))","(/.f64 (/.f64 (fma.f64 cosTheta cosTheta -1) (fma.f64 (*.f64 alpha alpha) (fma.f64 cosTheta cosTheta -1) 1)) (*.f64 (PI.f64) (*.f64 (log.f64 cosTheta) 2)))","(/.f64 (/.f64 (fma.f64 cosTheta cosTheta -1) (PI.f64)) (*.f64 (*.f64 (log.f64 cosTheta) 2) (fma.f64 alpha (*.f64 alpha (fma.f64 cosTheta cosTheta -1)) 1)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":46.58984375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[4,4306,31,0.018589],[3,822,31,0.006860791],[2,166,31,0.0013577910000000001],[1,45,31,0.00031920799999999997],[0,14,33,9.2125e-5]],"inputs":[["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)))))","(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 (log.f64 alpha) 2)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))"]],"stop":[["node limit",1]],"time":30.071044921875,"type":"simplify"},{"compiler":[[47,29]],"time":0.60693359375,"type":"eval"},{"alts":[["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))","fresh",0.44817252900649757],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","next",0.44664003907376815]],"compiler":[[23,16],[26,16],[23,16],[26,16]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.272480029305326],"time":1.718017578125,"type":"prune"},{"compiler":[[93,39]],"locations":[["(log.f64 (*.f64 alpha alpha))",0.11748756092597981,true],["(*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta)",0.23046875,true],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))",0.30859375,true],["(*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))",0.35546875,true]],"time":17.424072265625,"type":"localize"},{"count":[[4,72]],"series":[["(log.f64 (*.f64 alpha alpha))","alpha","-inf",0.15185546875],["(log.f64 (*.f64 alpha alpha))","alpha","inf",0.177001953125],["(log.f64 (*.f64 alpha alpha))","alpha","0",0.166015625],["(*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta)","cosTheta","-inf",0.325927734375],["(*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta)","cosTheta","inf",0.3349609375],["(*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta)","cosTheta","0",0.46484375],["(*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta)","alpha","-inf",0.1708984375],["(*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta)","alpha","inf",0.287109375],["(*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta)","alpha","0",0.26318359375],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","cosTheta","-inf",0.381103515625],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","cosTheta","inf",0.825927734375],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","cosTheta","0",1.169189453125],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","alpha","-inf",0.820068359375],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","alpha","inf",1.242919921875],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","alpha","0",1.33203125],["(*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))","alpha","-inf",0.224853515625],["(*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))","alpha","inf",5.669921875],["(*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))","alpha","0",13.908935546875]],"time":28.279052734375,"type":"series"},{"count":[[4,162]],"egraph":[[2,4669,55,0.034587793],[1,311,55,0.006232250999999999],[0,14,57,0.000357834]],"inputs":[["(*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))","(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","(*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta)","(log.f64 (*.f64 alpha alpha))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 alpha) (PI.f64)) (*.f64 (log.f64 alpha) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) (log.f64 alpha)) (*.f64 (PI.f64) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (cbrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))))) (log.f64 (cbrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (log.f64 (sqrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 (*.f64 2 (log.f64 alpha)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 2 (log.f64 alpha)) 3) (pow.f64 (PI.f64) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (PI.f64) (log.f64 alpha) (*.f64 (PI.f64) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 alpha) (PI.f64) (*.f64 (log.f64 alpha) (PI.f64)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (/.f64 (*.f64 alpha alpha) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (exp.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (/.f64 (*.f64 alpha alpha) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 alpha alpha -1) (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (pow.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2) (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) 2) (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (sqrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 alpha alpha -1)) (/.f64 1 (*.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (fma.f64 alpha alpha -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 alpha 1) (*.f64 (+.f64 alpha -1) (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (PI.f64)) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 2 (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) 2) (PI.f64)) (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (*.f64 2 (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (PI.f64)) (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (*.f64 2 (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 alpha 1) (PI.f64)) (/.f64 (+.f64 alpha -1) (*.f64 (*.f64 2 (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) 2) 1) (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) 1) (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 alpha 1) 1) (/.f64 (+.f64 alpha -1) (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) 2) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 alpha 1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (/.f64 (+.f64 alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) 2) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 alpha 1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (+.f64 alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2))) (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) 2) (cbrt.f64 (pow.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2))) (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2))) (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (cbrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 alpha 1) (cbrt.f64 (pow.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2))) (/.f64 (+.f64 alpha -1) (cbrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (/.f64 (fma.f64 alpha alpha -1) (sqrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) 2) (sqrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (sqrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 alpha 1) (sqrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (/.f64 (+.f64 alpha -1) (sqrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (+.f64 1 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) 3))) (fma.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (-.f64 1 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) 2))) (-.f64 1 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 alpha alpha) (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (/.f64 (*.f64 alpha alpha) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 (/.f64 (*.f64 alpha alpha) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (/.f64 (/.f64 (*.f64 alpha alpha) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (/.f64 (/.f64 (*.f64 alpha alpha) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (/.f64 (*.f64 alpha alpha) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (sqrt.f64 (/.f64 (/.f64 (*.f64 alpha alpha) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (PI.f64)) (/.f64 (*.f64 alpha alpha) (*.f64 (*.f64 2 (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (/.f64 (*.f64 alpha alpha) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (*.f64 alpha alpha) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2))) (/.f64 (*.f64 alpha alpha) (cbrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (/.f64 (*.f64 alpha alpha) (sqrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 alpha (PI.f64)) (/.f64 alpha (*.f64 (*.f64 2 (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 alpha 4)) (PI.f64)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (*.f64 (*.f64 2 (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 alpha (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (/.f64 alpha (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 alpha (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 alpha (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 alpha 4)) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 alpha 1) (/.f64 alpha (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 alpha 4)) 1) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 alpha 4)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 alpha (cbrt.f64 (pow.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2))) (/.f64 alpha (cbrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 alpha 4)) (cbrt.f64 (pow.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (cbrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 alpha (sqrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (/.f64 alpha (sqrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 alpha 4)) (sqrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (/.f64 (pow.f64 (cbrt.f64 alpha) 2) (sqrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (neg.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (fma.f64 alpha alpha -1) cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 alpha alpha) cosTheta) (*.f64 -1 cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 cosTheta (*.f64 alpha alpha)) (*.f64 cosTheta -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 cosTheta) (fma.f64 alpha alpha -1))) (cbrt.f64 (pow.f64 (exp.f64 cosTheta) (fma.f64 alpha alpha -1))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 cosTheta) (fma.f64 alpha alpha -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 cosTheta) (fma.f64 alpha alpha -1)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 cosTheta) (fma.f64 alpha alpha -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 alpha 6) -1) cosTheta) (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 alpha 4) -1) cosTheta) (fma.f64 alpha alpha 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 cosTheta (+.f64 (pow.f64 alpha 6) -1)) (+.f64 (pow.f64 alpha 4) (fma.f64 alpha alpha 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 cosTheta (+.f64 (pow.f64 alpha 4) -1)) (fma.f64 alpha alpha 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 cosTheta) (fma.f64 alpha alpha -1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 cosTheta 3) (pow.f64 (fma.f64 alpha alpha -1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (fma.f64 alpha alpha -1) cosTheta)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 alpha alpha) cosTheta (*.f64 -1 cosTheta))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 cosTheta (*.f64 alpha alpha) (*.f64 cosTheta -1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (log.f64 alpha)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 alpha) (log.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 2 (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (cbrt.f64 (pow.f64 alpha 4))) (*.f64 2 (log.f64 (cbrt.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (cbrt.f64 (pow.f64 alpha 4))) (log.f64 (*.f64 (pow.f64 (cbrt.f64 alpha) 2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (log.f64 (cbrt.f64 alpha))) (log.f64 (cbrt.f64 (pow.f64 alpha 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (log.f64 (cbrt.f64 alpha))) (log.f64 (*.f64 (cbrt.f64 alpha) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 alpha)) (log.f64 (*.f64 (sqrt.f64 alpha) alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 alpha) 1) (*.f64 (log.f64 alpha) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 alpha (sqrt.f64 alpha))) (log.f64 (sqrt.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 alpha (pow.f64 (cbrt.f64 alpha) 2))) (log.f64 (cbrt.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 2 (log.f64 alpha)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (log.f64 alpha)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 2 (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 2 (log.f64 alpha))) (pow.f64 (cbrt.f64 (*.f64 2 (log.f64 alpha))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 2 (log.f64 alpha))) 2) (cbrt.f64 (*.f64 2 (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 2 (log.f64 alpha))) (sqrt.f64 (*.f64 2 (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (log.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 2 (log.f64 (cbrt.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (*.f64 6 (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (log.f64 alpha) 3) (pow.f64 (log.f64 alpha) 3)) (fma.f64 (log.f64 alpha) (log.f64 alpha) (-.f64 (*.f64 (log.f64 alpha) (log.f64 alpha)) (*.f64 (log.f64 alpha) (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (log.f64 alpha) (log.f64 alpha)) (*.f64 (log.f64 alpha) (log.f64 alpha))) (log.f64 (/.f64 alpha alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2 (log.f64 alpha)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 2 (log.f64 alpha)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 2 (log.f64 alpha))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 2 (log.f64 alpha))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 2 (log.f64 alpha)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 2 (log.f64 alpha)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 2 (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (fma.f64 alpha alpha -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 2 (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 2 (log.f64 alpha))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (log.f64 alpha) (log.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 alpha) 1 (*.f64 (log.f64 alpha) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (log.f64 alpha)) (cbrt.f64 (log.f64 alpha))) (cbrt.f64 (log.f64 alpha)) (log.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log.f64 alpha)) (sqrt.f64 (log.f64 alpha)) (log.f64 alpha))))))"]],"rules":[["egg-rr",36],["egg-rr",26],["egg-rr",78],["egg-rr",22]],"stop":[["node limit",1]],"time":69.245849609375,"type":"rewrite"},{"count":[[234,216]],"egraph":[[2,2525,2307,0.015787749],[1,586,2478,0.004328333],[0,178,2777,0.000877291]],"inputs":[["(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))","(-.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(/.f64 -1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (/.f64 1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (PI.f64))))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (PI.f64)))))) (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(/.f64 -1/2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(-.f64 (/.f64 1/2 (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 4) (pow.f64 cosTheta 6)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))","(*.f64 -1 cosTheta)","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(*.f64 cosTheta (pow.f64 alpha 2))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(*.f64 cosTheta (pow.f64 alpha 2))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(*.f64 2 (log.f64 alpha))","(*.f64 2 (log.f64 alpha))","(*.f64 2 (log.f64 alpha))","(*.f64 2 (log.f64 alpha))","(*.f64 -2 (log.f64 (/.f64 1 alpha)))","(*.f64 -2 (log.f64 (/.f64 1 alpha)))","(*.f64 -2 (log.f64 (/.f64 1 alpha)))","(*.f64 -2 (log.f64 (/.f64 1 alpha)))","(*.f64 -2 (log.f64 (/.f64 -1 alpha)))","(*.f64 -2 (log.f64 (/.f64 -1 alpha)))","(*.f64 -2 (log.f64 (/.f64 -1 alpha)))","(*.f64 -2 (log.f64 (/.f64 -1 alpha)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))","(*.f64 (log.f64 alpha) (*.f64 (PI.f64) 2))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))","(*.f64 (log.f64 alpha) (*.f64 (PI.f64) 2))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))","(*.f64 (log.f64 alpha) (*.f64 (PI.f64) 2))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))","(*.f64 (log.f64 alpha) (*.f64 (PI.f64) 2))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))","(*.f64 (log.f64 alpha) (*.f64 (PI.f64) 2))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))","(*.f64 (log.f64 alpha) (*.f64 (PI.f64) 2))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))","(*.f64 (log.f64 alpha) (*.f64 (PI.f64) 2))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))","(*.f64 (log.f64 alpha) (*.f64 (PI.f64) 2))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 (PI.f64) (*.f64 -2 (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 (PI.f64) (*.f64 -2 (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 (PI.f64) (*.f64 -2 (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 (PI.f64) (*.f64 -2 (log.f64 (/.f64 -1 alpha))))","(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))","(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))","(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta)))))","(/.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta)))","(-.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (*.f64 (-.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 -1/2 (/.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2)))))) (*.f64 alpha alpha)) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))))","(fma.f64 (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (/.f64 (*.f64 1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))))) (*.f64 alpha alpha) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))))","(fma.f64 alpha (*.f64 alpha (fma.f64 1/2 (*.f64 (/.f64 cosTheta (*.f64 (*.f64 (log.f64 alpha) (PI.f64)) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))) cosTheta) (/.f64 1/2 (*.f64 (PI.f64) (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta))))))) (/.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (fma.f64 (-.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 -1/2 (/.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2)))))) (*.f64 alpha alpha) (neg.f64 (/.f64 (-.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 -1/2 (/.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2)))))) (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 cosTheta cosTheta) (pow.f64 alpha 4)))))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))))","(fma.f64 (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (/.f64 (*.f64 1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))))) (*.f64 alpha alpha) (fma.f64 -1 (*.f64 (/.f64 (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (/.f64 (*.f64 1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 cosTheta cosTheta) (pow.f64 alpha 4))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta)))))))","(fma.f64 alpha (*.f64 alpha (fma.f64 1/2 (*.f64 (/.f64 cosTheta (*.f64 (*.f64 (log.f64 alpha) (PI.f64)) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))) cosTheta) (/.f64 1/2 (*.f64 (PI.f64) (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta))))))) (fma.f64 -1 (*.f64 (/.f64 (*.f64 (*.f64 cosTheta cosTheta) (pow.f64 alpha 4)) (-.f64 1 (*.f64 cosTheta cosTheta))) (fma.f64 1/2 (*.f64 (/.f64 cosTheta (*.f64 (*.f64 (log.f64 alpha) (PI.f64)) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))) cosTheta) (/.f64 1/2 (*.f64 (PI.f64) (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta))))))) (/.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta)))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (fma.f64 (-.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 -1/2 (/.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2)))))) (*.f64 alpha alpha) (+.f64 (neg.f64 (/.f64 (-.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 -1/2 (/.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2)))))) (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 cosTheta cosTheta) (pow.f64 alpha 4))))) (/.f64 (-.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 -1/2 (/.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2)))))) (/.f64 (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4)))))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))))","(+.f64 (-.f64 (/.f64 (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (/.f64 (*.f64 1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))))) (/.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4)))) (*.f64 (/.f64 (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (/.f64 (*.f64 1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 cosTheta cosTheta) (pow.f64 alpha 4)))) (fma.f64 (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (/.f64 (*.f64 1/2 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))))) (*.f64 alpha alpha) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta)))))))","(+.f64 (*.f64 (/.f64 (fma.f64 1/2 (*.f64 (/.f64 cosTheta (*.f64 (*.f64 (log.f64 alpha) (PI.f64)) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))) cosTheta) (/.f64 1/2 (*.f64 (PI.f64) (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta)))))) (-.f64 1 (*.f64 cosTheta cosTheta))) (-.f64 (/.f64 (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4)) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 cosTheta cosTheta) (pow.f64 alpha 4)))) (fma.f64 alpha (*.f64 alpha (fma.f64 1/2 (*.f64 (/.f64 cosTheta (*.f64 (*.f64 (log.f64 alpha) (PI.f64)) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))) cosTheta) (/.f64 1/2 (*.f64 (PI.f64) (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta))))))) (/.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta)))))","(/.f64 -1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 -1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))))","(/.f64 (/.f64 -1/2 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (neg.f64 (log.f64 alpha)))","(-.f64 (/.f64 1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(-.f64 (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))))) (fma.f64 -1/2 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (pow.f64 cosTheta 4))))) (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))))))","(-.f64 (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 alpha (*.f64 alpha (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)))))) (fma.f64 -1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) alpha) alpha))) (/.f64 (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta))) (PI.f64))))","(+.f64 (/.f64 (fma.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (PI.f64) (neg.f64 (*.f64 (pow.f64 cosTheta 4) (log.f64 alpha))))) (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))))) (*.f64 alpha alpha)) (/.f64 -1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (PI.f64))))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(-.f64 (fma.f64 -1 (*.f64 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 cosTheta cosTheta)) (/.f64 (+.f64 (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)))) (*.f64 1/2 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))) (pow.f64 alpha 4))) (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (PI.f64) (*.f64 alpha alpha)))))) (fma.f64 -1/2 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (pow.f64 cosTheta 4))))) (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))))))","(-.f64 (-.f64 (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 alpha (*.f64 alpha (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 cosTheta cosTheta)) (/.f64 (+.f64 (/.f64 (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta))) (PI.f64)) (*.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))) (pow.f64 alpha 4)))) (fma.f64 -1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) alpha) alpha))) (/.f64 (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta))) (PI.f64))))","(+.f64 (fma.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 cosTheta cosTheta)) (/.f64 (neg.f64 (fma.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (PI.f64) (neg.f64 (*.f64 (pow.f64 cosTheta 4) (log.f64 alpha))))) (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)))))) (pow.f64 alpha 4)) (/.f64 (fma.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (PI.f64) (neg.f64 (*.f64 (pow.f64 cosTheta 4) (log.f64 alpha))))) (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))))) (*.f64 alpha alpha))) (/.f64 -1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (PI.f64)))))) (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))))","(-.f64 (+.f64 (fma.f64 -1 (*.f64 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 cosTheta cosTheta)) (/.f64 (+.f64 (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)))) (*.f64 1/2 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))) (pow.f64 alpha 4))) (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (PI.f64) (*.f64 alpha alpha)))))) (*.f64 (/.f64 (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2) (pow.f64 cosTheta 4)) (/.f64 (+.f64 (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)))) (*.f64 1/2 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))) (pow.f64 alpha 6)))) (fma.f64 -1/2 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (pow.f64 cosTheta 4))))) (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))))))","(-.f64 (-.f64 (fma.f64 (/.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (pow.f64 cosTheta 4)) (/.f64 (+.f64 (/.f64 (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta))) (PI.f64)) (*.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))) (pow.f64 alpha 6)) (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 alpha (*.f64 alpha (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))))))) (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 cosTheta cosTheta)) (/.f64 (+.f64 (/.f64 (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta))) (PI.f64)) (*.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))) (pow.f64 alpha 4)))) (fma.f64 -1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) alpha) alpha))) (/.f64 (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta))) (PI.f64))))","(-.f64 (fma.f64 (/.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (pow.f64 cosTheta 4)) (/.f64 (fma.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (PI.f64) (neg.f64 (*.f64 (pow.f64 cosTheta 4) (log.f64 alpha))))) (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))))) (pow.f64 alpha 6)) (+.f64 (/.f64 (fma.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (PI.f64) (neg.f64 (*.f64 (pow.f64 cosTheta 4) (log.f64 alpha))))) (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))))) (*.f64 alpha alpha)) (/.f64 -1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 cosTheta cosTheta)) (/.f64 (fma.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (PI.f64) (neg.f64 (*.f64 (pow.f64 cosTheta 4) (log.f64 alpha))))) (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))))) (pow.f64 alpha 4))))","(/.f64 -1/2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(/.f64 -1/2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (*.f64 cosTheta cosTheta)))","(/.f64 (/.f64 -1/2 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (log.f64 (/.f64 -1 alpha)))","(/.f64 (/.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(-.f64 (/.f64 1/2 (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(-.f64 (/.f64 1/2 (*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (*.f64 cosTheta cosTheta)))) (fma.f64 -1/2 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (pow.f64 cosTheta 4)))) (/.f64 1/2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (*.f64 cosTheta cosTheta)))))","(-.f64 (/.f64 1/2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (*.f64 alpha (*.f64 alpha (*.f64 cosTheta cosTheta))))) (fma.f64 -1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 alpha (*.f64 alpha (*.f64 (log.f64 (/.f64 -1 alpha)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))) (/.f64 (/.f64 1/2 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (log.f64 (/.f64 -1 alpha)))))","(+.f64 (/.f64 (fma.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (PI.f64) (*.f64 (log.f64 (/.f64 -1 alpha)) (pow.f64 cosTheta 4)))) (/.f64 (/.f64 1/2 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (log.f64 (/.f64 -1 alpha)))) (*.f64 alpha alpha)) (/.f64 (/.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(+.f64 (/.f64 1/2 (*.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (-.f64 (neg.f64 (*.f64 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 cosTheta cosTheta)) (/.f64 (+.f64 (/.f64 1/2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (*.f64 cosTheta cosTheta))) (*.f64 1/2 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (pow.f64 cosTheta 4))))) (pow.f64 alpha 4)))) (fma.f64 -1/2 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (pow.f64 cosTheta 4)))) (/.f64 1/2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (*.f64 cosTheta cosTheta))))))","(-.f64 (-.f64 (/.f64 1/2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (*.f64 alpha (*.f64 alpha (*.f64 cosTheta cosTheta))))) (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 cosTheta cosTheta)) (/.f64 (+.f64 (/.f64 (/.f64 1/2 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (log.f64 (/.f64 -1 alpha))) (*.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 (/.f64 -1 alpha)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))) (pow.f64 alpha 4)))) (fma.f64 -1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 alpha (*.f64 alpha (*.f64 (log.f64 (/.f64 -1 alpha)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))) (/.f64 (/.f64 1/2 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (log.f64 (/.f64 -1 alpha)))))","(+.f64 (fma.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 cosTheta cosTheta)) (/.f64 (neg.f64 (fma.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (PI.f64) (*.f64 (log.f64 (/.f64 -1 alpha)) (pow.f64 cosTheta 4)))) (/.f64 (/.f64 1/2 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (log.f64 (/.f64 -1 alpha))))) (pow.f64 alpha 4)) (/.f64 (fma.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (PI.f64) (*.f64 (log.f64 (/.f64 -1 alpha)) (pow.f64 cosTheta 4)))) (/.f64 (/.f64 1/2 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (log.f64 (/.f64 -1 alpha)))) (*.f64 alpha alpha))) (/.f64 (/.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))) (+.f64 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6))) (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(-.f64 (+.f64 (/.f64 1/2 (*.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (+.f64 (neg.f64 (*.f64 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 cosTheta cosTheta)) (/.f64 (+.f64 (/.f64 1/2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (*.f64 cosTheta cosTheta))) (*.f64 1/2 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (pow.f64 cosTheta 4))))) (pow.f64 alpha 4)))) (*.f64 (/.f64 (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2) (pow.f64 cosTheta 4)) (/.f64 (+.f64 (/.f64 1/2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (*.f64 cosTheta cosTheta))) (*.f64 1/2 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (pow.f64 cosTheta 4))))) (pow.f64 alpha 6))))) (fma.f64 -1/2 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (pow.f64 cosTheta 4)))) (/.f64 1/2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (*.f64 cosTheta cosTheta)))))","(-.f64 (-.f64 (+.f64 (/.f64 1/2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (*.f64 alpha (*.f64 alpha (*.f64 cosTheta cosTheta))))) (*.f64 (/.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (+.f64 (/.f64 (/.f64 1/2 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (log.f64 (/.f64 -1 alpha))) (*.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 (/.f64 -1 alpha)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))))) (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 cosTheta cosTheta)) (/.f64 (+.f64 (/.f64 (/.f64 1/2 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (log.f64 (/.f64 -1 alpha))) (*.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 (/.f64 -1 alpha)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))) (pow.f64 alpha 4)))) (fma.f64 -1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 alpha (*.f64 alpha (*.f64 (log.f64 (/.f64 -1 alpha)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))) (/.f64 (/.f64 1/2 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (log.f64 (/.f64 -1 alpha)))))","(+.f64 (+.f64 (*.f64 (fma.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (PI.f64) (*.f64 (log.f64 (/.f64 -1 alpha)) (pow.f64 cosTheta 4)))) (/.f64 (/.f64 1/2 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (log.f64 (/.f64 -1 alpha)))) (-.f64 (/.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 cosTheta cosTheta) (pow.f64 alpha 4))))) (/.f64 (fma.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (PI.f64) (*.f64 (log.f64 (/.f64 -1 alpha)) (pow.f64 cosTheta 4)))) (/.f64 (/.f64 1/2 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (log.f64 (/.f64 -1 alpha)))) (*.f64 alpha alpha))) (/.f64 (/.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))","(/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))","(/.f64 (+.f64 (*.f64 alpha alpha) -1) (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))","(/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) 2)))","(/.f64 (fma.f64 alpha alpha -1) (*.f64 2 (*.f64 (log.f64 alpha) (PI.f64))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(+.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (-.f64 (neg.f64 (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2) (*.f64 2 (log.f64 alpha))) (/.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 1 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (*.f64 cosTheta cosTheta) (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 (log.f64 alpha) (PI.f64)))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) 2))))","(fma.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (/.f64 cosTheta (PI.f64)) cosTheta)) (/.f64 (fma.f64 alpha alpha -1) (*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(+.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (-.f64 (fma.f64 -1 (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2) (*.f64 2 (log.f64 alpha))) (/.f64 (*.f64 cosTheta cosTheta) (PI.f64))) (/.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 3) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (pow.f64 cosTheta 4)))) (/.f64 1 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))","(+.f64 (fma.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (*.f64 2 (log.f64 alpha))) (/.f64 (pow.f64 cosTheta 4) (PI.f64)) (*.f64 -1/2 (/.f64 (*.f64 (*.f64 cosTheta cosTheta) (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 (log.f64 alpha) (PI.f64))))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) 2))))","(+.f64 (*.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (*.f64 2 (log.f64 alpha))) (/.f64 (pow.f64 cosTheta 4) (PI.f64))) (fma.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (/.f64 cosTheta (PI.f64)) cosTheta)) (/.f64 (fma.f64 alpha alpha -1) (*.f64 2 (*.f64 (log.f64 alpha) (PI.f64))))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 4) (pow.f64 cosTheta 6)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(-.f64 (+.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (fma.f64 -1 (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2) (*.f64 2 (log.f64 alpha))) (/.f64 (*.f64 cosTheta cosTheta) (PI.f64))) (fma.f64 -1 (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 4) (*.f64 2 (log.f64 alpha))) (/.f64 (pow.f64 cosTheta 6) (PI.f64))) (/.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 3) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (pow.f64 cosTheta 4)))))) (/.f64 1 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))))","(+.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (*.f64 cosTheta cosTheta) (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 (log.f64 alpha) (PI.f64)))) (fma.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (*.f64 2 (log.f64 alpha))) (/.f64 (pow.f64 cosTheta 4) (PI.f64)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 4) (pow.f64 cosTheta 6)) (*.f64 (log.f64 alpha) (PI.f64)))))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) 2))))","(+.f64 (fma.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (*.f64 2 (log.f64 alpha))) (/.f64 (pow.f64 cosTheta 4) (PI.f64)) (*.f64 (/.f64 -1/2 (log.f64 alpha)) (+.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (/.f64 cosTheta (PI.f64)) cosTheta)) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 4) (/.f64 (pow.f64 cosTheta 6) (PI.f64)))))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 1 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (*.f64 2 (log.f64 alpha))))","(/.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (PI.f64))) (*.f64 cosTheta cosTheta))","(/.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (PI.f64))))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (/.f64 1 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (*.f64 2 (log.f64 alpha)))) (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (+.f64 (*.f64 alpha alpha) -1)))))","(-.f64 (/.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (PI.f64))) (*.f64 cosTheta cosTheta)) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 cosTheta 4) (fma.f64 alpha alpha -1)))))","(+.f64 (/.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (PI.f64)))) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 cosTheta 4) (fma.f64 alpha alpha -1)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(+.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2) (*.f64 (PI.f64) (pow.f64 cosTheta 6))))) (-.f64 (/.f64 1 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (*.f64 2 (log.f64 alpha)))) (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (+.f64 (*.f64 alpha alpha) -1))))))","(+.f64 (/.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (PI.f64))) (*.f64 cosTheta cosTheta)) (-.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 cosTheta 6)))) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 cosTheta 4) (fma.f64 alpha alpha -1))))))","(+.f64 (/.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (PI.f64)))) (-.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 cosTheta 6)))) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 cosTheta 4) (fma.f64 alpha alpha -1))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (*.f64 2 (log.f64 alpha)))) (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2) (*.f64 (PI.f64) (pow.f64 cosTheta 6)))))) (+.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (+.f64 (*.f64 alpha alpha) -1)))) (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 3) (*.f64 (PI.f64) (pow.f64 cosTheta 8)))))))","(+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 cosTheta 6)))) (-.f64 (/.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (PI.f64))) (*.f64 cosTheta cosTheta)) (+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 cosTheta 4) (fma.f64 alpha alpha -1)))) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 8)))))))","(+.f64 (+.f64 (/.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (PI.f64)))) (-.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 cosTheta 6)))) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 cosTheta 4) (fma.f64 alpha alpha -1)))))) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 8)))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 1 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (*.f64 2 (log.f64 alpha))))","(/.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (PI.f64))) (*.f64 cosTheta cosTheta))","(/.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (PI.f64))))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (/.f64 1 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (*.f64 2 (log.f64 alpha)))) (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (+.f64 (*.f64 alpha alpha) -1)))))","(-.f64 (/.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (PI.f64))) (*.f64 cosTheta cosTheta)) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 cosTheta 4) (fma.f64 alpha alpha -1)))))","(+.f64 (/.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (PI.f64)))) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 cosTheta 4) (fma.f64 alpha alpha -1)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(+.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2) (*.f64 (PI.f64) (pow.f64 cosTheta 6))))) (-.f64 (/.f64 1 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (*.f64 2 (log.f64 alpha)))) (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (+.f64 (*.f64 alpha alpha) -1))))))","(+.f64 (/.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (PI.f64))) (*.f64 cosTheta cosTheta)) (-.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 cosTheta 6)))) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 cosTheta 4) (fma.f64 alpha alpha -1))))))","(+.f64 (/.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (PI.f64)))) (-.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 cosTheta 6)))) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 cosTheta 4) (fma.f64 alpha alpha -1))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (*.f64 2 (log.f64 alpha)))) (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2) (*.f64 (PI.f64) (pow.f64 cosTheta 6)))))) (+.f64 (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (+.f64 (*.f64 alpha alpha) -1)))) (/.f64 1 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 3) (*.f64 (PI.f64) (pow.f64 cosTheta 8)))))))","(+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 cosTheta 6)))) (-.f64 (/.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (PI.f64))) (*.f64 cosTheta cosTheta)) (+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 cosTheta 4) (fma.f64 alpha alpha -1)))) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 8)))))))","(+.f64 (+.f64 (/.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (PI.f64)))) (-.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (pow.f64 cosTheta 6)))) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 cosTheta 4) (fma.f64 alpha alpha -1)))))) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 8)))))","(*.f64 -1 cosTheta)","(neg.f64 cosTheta)","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(*.f64 cosTheta (pow.f64 alpha 2))","(*.f64 cosTheta (*.f64 alpha alpha))","(*.f64 alpha (*.f64 alpha cosTheta))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(*.f64 cosTheta (pow.f64 alpha 2))","(*.f64 cosTheta (*.f64 alpha alpha))","(*.f64 alpha (*.f64 alpha cosTheta))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(+.f64 (*.f64 -1 cosTheta) (*.f64 cosTheta (pow.f64 alpha 2)))","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(*.f64 (-.f64 (pow.f64 alpha 2) 1) cosTheta)","(fma.f64 -1 cosTheta (*.f64 cosTheta (*.f64 alpha alpha)))","(*.f64 cosTheta (fma.f64 alpha alpha -1))","(*.f64 2 (log.f64 alpha))","(*.f64 2 (log.f64 alpha))","(*.f64 2 (log.f64 alpha))","(*.f64 2 (log.f64 alpha))","(*.f64 -2 (log.f64 (/.f64 1 alpha)))","(*.f64 2 (log.f64 alpha))","(*.f64 -2 (log.f64 (/.f64 1 alpha)))","(*.f64 2 (log.f64 alpha))","(*.f64 -2 (log.f64 (/.f64 1 alpha)))","(*.f64 2 (log.f64 alpha))","(*.f64 -2 (log.f64 (/.f64 1 alpha)))","(*.f64 2 (log.f64 alpha))","(*.f64 -2 (log.f64 (/.f64 -1 alpha)))","(*.f64 -2 (log.f64 (/.f64 -1 alpha)))","(*.f64 -2 (log.f64 (/.f64 -1 alpha)))","(*.f64 -2 (log.f64 (/.f64 -1 alpha)))"]],"stop":[["node limit",1]],"time":49.55517578125,"type":"simplify"},{"compiler":[[8031,4507]],"time":74.700927734375,"type":"eval"},{"alts":[["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (+.f64 (log.f64 (*.f64 alpha (pow.f64 (cbrt.f64 alpha) 2))) (log.f64 (cbrt.f64 alpha)))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.5926085949913559],["(*.f64 (/.f64 1 (PI.f64)) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 2 (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","fresh",0.5299100778487078],["(+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (exp.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))","fresh",4.446882639502381],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))","fresh",0.44817252900649757],["(*.f64 (/.f64 (+.f64 alpha 1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (+.f64 alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))))","fresh",0.5361964476841682],["(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","fresh",0.5439985341171091],["(pow.f64 (/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1)","next",0.44657639138884375],["(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","fresh",0.9436053469121758],["(*.f64 (/.f64 1 (cbrt.f64 (pow.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2))) (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))","fresh",0.5098801758319564],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (cbrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))))) (log.f64 (cbrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.5033188476844203],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (/.f64 (+.f64 (pow.f64 (log.f64 alpha) 3) (pow.f64 (log.f64 alpha) 3)) (fma.f64 (log.f64 alpha) (log.f64 alpha) (-.f64 (*.f64 (log.f64 alpha) (log.f64 alpha)) (*.f64 (log.f64 alpha) (log.f64 alpha)))))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.6097514281472842],["(exp.f64 (log.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","fresh",0.769102941895219]],"compiler":[[33,22],[25,18],[75,41],[23,16],[26,18],[172,136],[25,17],[61,49],[46,31],[42,20],[48,25],[25,17],[33,22],[25,18],[75,41],[23,16],[26,18],[172,136],[25,17],[61,49],[46,31],[42,20],[48,25],[25,17]],"count":[[218,12]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[216,11],"picked":[1,0]}],"min-error":[0.00390625],"time":53.592041015625,"type":"prune"},{"compiler":[[95,40]],"locations":[["(log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))",0.0234375,true],["(pow.f64 (/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1)",0.25,true],["(/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))",0.32421875,true],["(pow.f64 (*.f64 alpha alpha) (PI.f64))",2.8545669179727393,true]],"time":22.549072265625,"type":"localize"},{"count":[[4,72]],"series":[["(log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))","alpha","-inf",0.18212890625],["(log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))","alpha","inf",16.14892578125],["(log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))","alpha","0",8.89599609375],["(pow.f64 (/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1)","cosTheta","-inf",0.263916015625],["(pow.f64 (/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1)","cosTheta","inf",0.368896484375],["(pow.f64 (/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1)","cosTheta","0",0.39697265625],["(pow.f64 (/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1)","alpha","-inf",1.44287109375],["(pow.f64 (/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1)","alpha","inf",1.755126953125],["(pow.f64 (/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1)","alpha","0",1.552978515625],["(/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","cosTheta","-inf",0.22509765625],["(/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","cosTheta","inf",0.653076171875],["(/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","cosTheta","0",9.05908203125],["(/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","alpha","-inf",0.73193359375],["(/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","alpha","inf",1.346923828125],["(/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","alpha","0",1.0],["(pow.f64 (*.f64 alpha alpha) (PI.f64))","alpha","-inf",0.2041015625],["(pow.f64 (*.f64 alpha alpha) (PI.f64))","alpha","inf",0.40380859375],["(pow.f64 (*.f64 alpha alpha) (PI.f64))","alpha","0",0.427001953125]],"time":45.561767578125,"type":"series"},{"count":[[4,177]],"egraph":[[2,3979,80,0.033198375],[1,309,80,0.005405167000000001],[0,15,83,0.000382292]],"inputs":[["(pow.f64 (*.f64 alpha alpha) (PI.f64))","(/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","(pow.f64 (/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1)","(log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (*.f64 alpha alpha) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (*.f64 alpha alpha) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 alpha (PI.f64))) 2) (cbrt.f64 (pow.f64 (pow.f64 alpha 4) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (pow.f64 alpha 4) (PI.f64))) (pow.f64 (cbrt.f64 (pow.f64 alpha (PI.f64))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 alpha (PI.f64)) (pow.f64 alpha (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 (PI.f64)) (pow.f64 (*.f64 alpha alpha) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 alpha 4)) (PI.f64)) (pow.f64 (pow.f64 (cbrt.f64 alpha) 2) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (E.f64) (*.f64 (PI.f64) (log.f64 alpha))) (pow.f64 (E.f64) (*.f64 (PI.f64) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (E.f64) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 alpha 4) (PI.f64))))) (pow.f64 (E.f64) (log.f64 (pow.f64 (cbrt.f64 (pow.f64 alpha (PI.f64))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 (PI.f64)) (log.f64 alpha)) (pow.f64 (exp.f64 (PI.f64)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 (PI.f64)) (log.f64 (cbrt.f64 (pow.f64 alpha 4)))) (pow.f64 (exp.f64 (PI.f64)) (*.f64 2 (log.f64 (cbrt.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (pow.f64 alpha 4) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1))) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))) (*.f64 (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)) (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (fma.f64 alpha alpha -1)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)) (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (fma.f64 alpha alpha -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)) (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (fma.f64 alpha alpha -1))))) (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)) (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (fma.f64 alpha alpha -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 (*.f64 2 (log.f64 alpha)) (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (fma.f64 alpha alpha -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (fma.f64 alpha alpha -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 2)) (*.f64 (cbrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (fma.f64 alpha alpha -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)))) (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1))) 2)) (cbrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (*.f64 (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (fma.f64 alpha alpha -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)))) (sqrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (neg.f64 (*.f64 2 (log.f64 alpha)))) (/.f64 1 (/.f64 (neg.f64 (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (fma.f64 alpha alpha -1)) (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) 1) (/.f64 (*.f64 2 (log.f64 alpha)) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 2)) 1) (/.f64 (cbrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) 1) (/.f64 (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (fma.f64 alpha alpha -1)) (/.f64 (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) (fma.f64 alpha alpha -1)) (/.f64 (*.f64 2 (log.f64 alpha)) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 alpha alpha -1)) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 2)) (fma.f64 alpha alpha -1)) (/.f64 (cbrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2)) (/.f64 (*.f64 2 (log.f64 alpha)) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2)) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 2)) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2)) (cbrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2)) (/.f64 (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (PI.f64) (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 (*.f64 2 (log.f64 alpha)) (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 2)) (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (/.f64 (cbrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)) 1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 1) (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (fma.f64 alpha alpha -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (neg.f64 (fma.f64 alpha alpha -1))) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)) (pow.f64 (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 2)) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)) (hypot.f64 1 (*.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) cosTheta))) (hypot.f64 1 (*.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) cosTheta)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 3) (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (/.f64 (neg.f64 (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)) (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (fma.f64 alpha alpha -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)) (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (fma.f64 alpha alpha -1))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 3) (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)) (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (fma.f64 alpha alpha -1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) (*.f64 (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 1 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) 2) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)) (/.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 2 (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (PI.f64)) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 2 (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2) (PI.f64)) (/.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 2 (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (PI.f64)) (/.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 2 (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) 1) (/.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2) 1) (/.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1) (/.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 2))) (/.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 2))) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 2))) (/.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 2))) (/.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (cbrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))) (/.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2) (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))) (/.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))) (/.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (PI.f64) (neg.f64 (*.f64 2 (log.f64 alpha))))) (/.f64 (neg.f64 (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1))) 2))) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 alpha alpha -1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 alpha alpha -1)) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (neg.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (neg.f64 (fma.f64 alpha alpha -1)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 (PI.f64) (neg.f64 (*.f64 2 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (sqrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))) (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 1) (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (fma.f64 alpha alpha -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (PI.f64)) (*.f64 2 (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 2))) (cbrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (cbrt.f64 (pow.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1))) 2))) (cbrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 alpha alpha -1))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 3) (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (PI.f64) (log.f64 alpha)) (*.f64 (PI.f64) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 alpha (PI.f64))) 2)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 alpha 4) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (cbrt.f64 (pow.f64 (pow.f64 alpha 4) (PI.f64)))) (log.f64 (pow.f64 (cbrt.f64 (pow.f64 alpha (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 1 (PI.f64))) (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 alpha 4)) (PI.f64))) (log.f64 (pow.f64 (pow.f64 (cbrt.f64 alpha) 2) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (log.f64 alpha)) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 2)) (cbrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (log.f64 (pow.f64 (*.f64 alpha alpha) (pow.f64 (cbrt.f64 (PI.f64)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (*.f64 (cbrt.f64 (PI.f64)) (*.f64 2 (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (PI.f64)) (*.f64 (sqrt.f64 (PI.f64)) (*.f64 2 (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (PI.f64)) (log.f64 (pow.f64 (*.f64 alpha alpha) (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 (PI.f64) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (PI.f64) 1/2) (*.f64 4 (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 alpha (PI.f64))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (*.f64 3 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (*.f64 (PI.f64) 1/2)) (*.f64 2 (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 2 (PI.f64)) (log.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (PI.f64) (PI.f64)) (log.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (PI.f64) 1/2 (*.f64 (PI.f64) 1/2)) (*.f64 2 (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 2 (log.f64 alpha)) 1) (PI.f64))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (pow.f64 (cbrt.f64 (PI.f64)) 2)) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (sqrt.f64 (PI.f64))) (sqrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) 1))))))"]],"rules":[["egg-rr",41],["egg-rr",56],["egg-rr",58],["egg-rr",22]],"stop":[["node limit",1]],"time":75.939208984375,"type":"rewrite"},{"count":[[249,258]],"egraph":[[2,4871,4791,0.02348725],[1,982,4870,0.008385],[0,264,5621,0.001541041]],"inputs":[["(exp.f64 (*.f64 2 (*.f64 (log.f64 alpha) (PI.f64))))","(exp.f64 (*.f64 2 (*.f64 (log.f64 alpha) (PI.f64))))","(exp.f64 (*.f64 2 (*.f64 (log.f64 alpha) (PI.f64))))","(exp.f64 (*.f64 2 (*.f64 (log.f64 alpha) (PI.f64))))","(exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))))","(exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))))","(exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))))","(exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))))","(exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))","(+.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (pow.f64 alpha 2)) (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))))","(+.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (pow.f64 alpha 2)) (+.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (pow.f64 alpha 4))))","(+.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (pow.f64 alpha 6)) (+.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (pow.f64 alpha 2)) (+.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (pow.f64 alpha 4)))))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))) (pow.f64 alpha 2))) (*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 2 (/.f64 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))) (pow.f64 alpha 2))))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))) (pow.f64 alpha 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))) (pow.f64 alpha 4))) (*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))) (+.f64 (*.f64 2 (/.f64 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))) (pow.f64 alpha 2))) (*.f64 2 (/.f64 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))) (pow.f64 alpha 4)))))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))) (pow.f64 alpha 6))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))) (pow.f64 alpha 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))) (pow.f64 alpha 4))) (*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))) (+.f64 (*.f64 2 (/.f64 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))) (pow.f64 alpha 6))) (+.f64 (*.f64 2 (/.f64 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))) (pow.f64 alpha 2))) (*.f64 2 (/.f64 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))) (pow.f64 alpha 4))))))","(*.f64 -2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 2))) (*.f64 -2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))) (*.f64 2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 2))))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 4))) (*.f64 -2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 4)))))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 6))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 4))) (*.f64 -2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 2))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 6))) (*.f64 2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 4))))))","(/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1))","(+.f64 (/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1)) (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(+.f64 (/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1)) (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(+.f64 (/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1)) (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))","(+.f64 (/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1)) (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(+.f64 (/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1)) (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(+.f64 (/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1)) (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))","(+.f64 (/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1)) (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(+.f64 (/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1)) (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(+.f64 (/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1)) (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))","(-.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (pow.f64 alpha 2)) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (pow.f64 (PI.f64) 2))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) 2) (*.f64 (pow.f64 (log.f64 alpha) 3) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 3) (pow.f64 (PI.f64) 3))))) (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (pow.f64 (PI.f64) 2)))))) (pow.f64 alpha 4))) (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (pow.f64 alpha 2)) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (pow.f64 (PI.f64) 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) 2) (*.f64 (pow.f64 (log.f64 alpha) 3) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 3) (pow.f64 (PI.f64) 3))))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) 2) (*.f64 (pow.f64 (log.f64 alpha) 3) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 3) (pow.f64 (PI.f64) 3))))) (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (pow.f64 (PI.f64) 2))))))) (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (pow.f64 (PI.f64) 2))))))) (pow.f64 alpha 6))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) 2) (*.f64 (pow.f64 (log.f64 alpha) 3) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 3) (pow.f64 (PI.f64) 3))))) (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (pow.f64 (PI.f64) 2)))))) (pow.f64 alpha 4))) (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (pow.f64 alpha 2)) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (pow.f64 (PI.f64) 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(/.f64 -1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (*.f64 -1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 2) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (PI.f64) 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (PI.f64) 2))))) (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) 2) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 3) (*.f64 (pow.f64 cosTheta 6) (pow.f64 (PI.f64) 3)))))) (pow.f64 alpha 4))) (*.f64 -1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 2) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (PI.f64) 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (PI.f64) 2))))) (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) 2) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 3) (*.f64 (pow.f64 cosTheta 6) (pow.f64 (PI.f64) 3)))))) (pow.f64 alpha 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (PI.f64) 2))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) 2) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 3) (*.f64 (pow.f64 cosTheta 6) (pow.f64 (PI.f64) 3))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (PI.f64) 2))))) (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) 2) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 3) (*.f64 (pow.f64 cosTheta 6) (pow.f64 (PI.f64) 3))))))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))) (pow.f64 alpha 6))) (*.f64 -1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 2) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (PI.f64) 2)))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))","(/.f64 -1/2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(-.f64 (*.f64 -1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) 2) (*.f64 (pow.f64 cosTheta 6) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))))) (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2)))))) (pow.f64 alpha 4))) (*.f64 -1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) 2) (*.f64 (pow.f64 cosTheta 6) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))))) (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2)))))) (pow.f64 alpha 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) 2) (*.f64 (pow.f64 cosTheta 6) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))))) (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2))))))) (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) 2) (*.f64 (pow.f64 cosTheta 6) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))))) (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2))))))) (pow.f64 alpha 6))) (*.f64 -1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2)))))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))","(/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 4) (pow.f64 cosTheta 6)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))"]],"method":["egg-herbie"],"outputs":[["(exp.f64 (*.f64 2 (*.f64 (log.f64 alpha) (PI.f64))))","(exp.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))","(pow.f64 (*.f64 alpha alpha) (PI.f64))","(pow.f64 alpha (*.f64 (PI.f64) 2))","(exp.f64 (*.f64 2 (*.f64 (log.f64 alpha) (PI.f64))))","(exp.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))","(pow.f64 (*.f64 alpha alpha) (PI.f64))","(pow.f64 alpha (*.f64 (PI.f64) 2))","(exp.f64 (*.f64 2 (*.f64 (log.f64 alpha) (PI.f64))))","(exp.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))","(pow.f64 (*.f64 alpha alpha) (PI.f64))","(pow.f64 alpha (*.f64 (PI.f64) 2))","(exp.f64 (*.f64 2 (*.f64 (log.f64 alpha) (PI.f64))))","(exp.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))","(pow.f64 (*.f64 alpha alpha) (PI.f64))","(pow.f64 alpha (*.f64 (PI.f64) 2))","(exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))))","(pow.f64 (exp.f64 -2) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))","(pow.f64 (/.f64 1 alpha) (*.f64 (PI.f64) -2))","(exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))))","(pow.f64 (exp.f64 -2) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))","(pow.f64 (/.f64 1 alpha) (*.f64 (PI.f64) -2))","(exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))))","(pow.f64 (exp.f64 -2) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))","(pow.f64 (/.f64 1 alpha) (*.f64 (PI.f64) -2))","(exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))))","(pow.f64 (exp.f64 -2) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))","(pow.f64 (/.f64 1 alpha) (*.f64 (PI.f64) -2))","(exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(pow.f64 (exp.f64 -2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(pow.f64 (/.f64 -1 alpha) (*.f64 (PI.f64) -2))","(exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(pow.f64 (exp.f64 -2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(pow.f64 (/.f64 -1 alpha) (*.f64 (PI.f64) -2))","(exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(pow.f64 (exp.f64 -2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(pow.f64 (/.f64 -1 alpha) (*.f64 (PI.f64) -2))","(exp.f64 (*.f64 -2 (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(pow.f64 (exp.f64 -2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(pow.f64 (/.f64 -1 alpha) (*.f64 (PI.f64) -2))","(*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))","(*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))","(*.f64 -2 (*.f64 (PI.f64) (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta)))))","(+.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (pow.f64 alpha 2)) (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))))","(fma.f64 (+.f64 (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 alpha alpha) (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))","(fma.f64 -2 (*.f64 (PI.f64) (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 (*.f64 (*.f64 (log.f64 alpha) -2) (+.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 alpha alpha)))","(+.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (pow.f64 alpha 2)) (+.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (pow.f64 alpha 4))))","(fma.f64 (+.f64 (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 alpha alpha) (fma.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (*.f64 (+.f64 (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (pow.f64 alpha 4))))","(fma.f64 (*.f64 (*.f64 (log.f64 alpha) -2) (+.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 alpha alpha) (fma.f64 (*.f64 (*.f64 (log.f64 alpha) -2) (+.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (pow.f64 alpha 4) (*.f64 -2 (*.f64 (PI.f64) (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta)))))))","(+.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (pow.f64 alpha 6)) (+.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (pow.f64 alpha 2)) (+.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (pow.f64 alpha 4)))))","(fma.f64 (+.f64 (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (pow.f64 alpha 6) (fma.f64 (+.f64 (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 alpha alpha) (fma.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (*.f64 (+.f64 (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (pow.f64 alpha 4)))))","(+.f64 (fma.f64 (*.f64 (*.f64 (log.f64 alpha) -2) (+.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (pow.f64 alpha 4) (*.f64 -2 (*.f64 (PI.f64) (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (*.f64 (*.f64 (log.f64 alpha) -2) (+.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (+.f64 (pow.f64 alpha 6) (*.f64 alpha alpha))))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(*.f64 -2 (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))","(*.f64 -2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))","(*.f64 2 (*.f64 (log.f64 alpha) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))) (pow.f64 alpha 2))) (*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 2 (/.f64 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))) (pow.f64 alpha 2))))","(+.f64 (*.f64 -2 (+.f64 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))) (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))) (*.f64 -2 (/.f64 (neg.f64 (log.f64 alpha)) (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))))))","(*.f64 -2 (+.f64 (+.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 alpha alpha)) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))) (/.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (/.f64 (*.f64 alpha alpha) (neg.f64 (log.f64 alpha))))))","(*.f64 -2 (-.f64 (-.f64 (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 alpha alpha)) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (*.f64 (log.f64 alpha) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))) (/.f64 (log.f64 alpha) (*.f64 (/.f64 alpha (PI.f64)) (/.f64 alpha (*.f64 cosTheta cosTheta))))))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))) (pow.f64 alpha 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))) (pow.f64 alpha 4))) (*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))) (+.f64 (*.f64 2 (/.f64 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))) (pow.f64 alpha 2))) (*.f64 2 (/.f64 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))) (pow.f64 alpha 4)))))","(-.f64 (fma.f64 -2 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))) (*.f64 -2 (+.f64 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (/.f64 (pow.f64 alpha 4) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))) (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64))))) (*.f64 2 (+.f64 (/.f64 (neg.f64 (log.f64 alpha)) (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)))) (/.f64 (neg.f64 (log.f64 alpha)) (/.f64 (pow.f64 alpha 4) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)))))))","(fma.f64 -2 (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 alpha alpha)) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (fma.f64 -2 (+.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (pow.f64 alpha 4)) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))) (*.f64 -2 (+.f64 (/.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (/.f64 (*.f64 alpha alpha) (neg.f64 (log.f64 alpha)))) (*.f64 (/.f64 (neg.f64 (log.f64 alpha)) (pow.f64 alpha 4)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))))))","(fma.f64 -2 (+.f64 (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 alpha alpha)) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (-.f64 (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (pow.f64 alpha 4)) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (*.f64 (log.f64 alpha) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) (*.f64 2 (+.f64 (/.f64 (log.f64 alpha) (*.f64 (/.f64 alpha (PI.f64)) (/.f64 alpha (*.f64 cosTheta cosTheta)))) (/.f64 (log.f64 alpha) (/.f64 (pow.f64 alpha 4) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))))))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))) (pow.f64 alpha 6))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))) (pow.f64 alpha 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64))) (pow.f64 alpha 4))) (*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))) (+.f64 (*.f64 2 (/.f64 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))) (pow.f64 alpha 6))) (+.f64 (*.f64 2 (/.f64 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))) (pow.f64 alpha 2))) (*.f64 2 (/.f64 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))) (pow.f64 alpha 4))))))","(-.f64 (fma.f64 -2 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (/.f64 (pow.f64 alpha 6) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))) (fma.f64 -2 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))) (*.f64 -2 (+.f64 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (/.f64 (pow.f64 alpha 4) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))) (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))))) (fma.f64 2 (/.f64 (neg.f64 (log.f64 alpha)) (/.f64 (pow.f64 alpha 6) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)))) (*.f64 2 (+.f64 (/.f64 (neg.f64 (log.f64 alpha)) (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)))) (/.f64 (neg.f64 (log.f64 alpha)) (/.f64 (pow.f64 alpha 4) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))))))))","(-.f64 (fma.f64 -2 (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (pow.f64 alpha 6)) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (*.f64 -2 (+.f64 (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 alpha alpha)) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (+.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (pow.f64 alpha 4)) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))))))) (*.f64 2 (+.f64 (+.f64 (/.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (/.f64 (*.f64 alpha alpha) (neg.f64 (log.f64 alpha)))) (*.f64 (/.f64 (neg.f64 (log.f64 alpha)) (pow.f64 alpha 4)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))) (/.f64 (neg.f64 (log.f64 alpha)) (/.f64 (pow.f64 alpha 6) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))))))","(fma.f64 -2 (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (pow.f64 alpha 6)) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (+.f64 (fma.f64 -2 (+.f64 (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 alpha alpha)) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (-.f64 (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (pow.f64 alpha 4)) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (*.f64 (log.f64 alpha) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) (*.f64 2 (+.f64 (/.f64 (log.f64 alpha) (*.f64 (/.f64 alpha (PI.f64)) (/.f64 alpha (*.f64 cosTheta cosTheta)))) (/.f64 (log.f64 alpha) (/.f64 (pow.f64 alpha 4) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))))) (*.f64 (/.f64 (log.f64 alpha) (/.f64 (pow.f64 alpha 6) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))) 2)))","(*.f64 -2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(*.f64 -2 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))))","(*.f64 (*.f64 -2 (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (log.f64 (/.f64 -1 alpha)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 2))) (*.f64 -2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))) (*.f64 2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 2))))","(+.f64 (*.f64 -2 (+.f64 (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (*.f64 alpha alpha)) (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))))) (*.f64 -2 (/.f64 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))) (*.f64 alpha alpha))))","(*.f64 -2 (+.f64 (+.f64 (*.f64 (log.f64 (/.f64 -1 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (/.f64 (/.f64 (*.f64 alpha alpha) (PI.f64)) (log.f64 (/.f64 -1 alpha))))) (*.f64 (/.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) alpha) (/.f64 (log.f64 (/.f64 -1 alpha)) alpha))))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 4))) (*.f64 -2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64)))))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 2))) (*.f64 2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 4)))))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (*.f64 alpha alpha)) (*.f64 -2 (+.f64 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (/.f64 (pow.f64 alpha 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha)))))) (*.f64 2 (+.f64 (/.f64 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))) (*.f64 alpha alpha)) (/.f64 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))) (pow.f64 alpha 4)))))","(fma.f64 -2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (/.f64 (/.f64 (*.f64 alpha alpha) (PI.f64)) (log.f64 (/.f64 -1 alpha)))) (fma.f64 -2 (+.f64 (*.f64 (log.f64 (/.f64 -1 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (pow.f64 alpha 4)) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 -2 (+.f64 (*.f64 (/.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) alpha) (/.f64 (log.f64 (/.f64 -1 alpha)) alpha)) (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 alpha 4)) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))))))","(fma.f64 -2 (+.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (/.f64 (/.f64 (*.f64 alpha alpha) (PI.f64)) (log.f64 (/.f64 -1 alpha)))) (+.f64 (*.f64 (log.f64 (/.f64 -1 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (pow.f64 alpha 4)) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 -2 (+.f64 (*.f64 (/.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) alpha) (/.f64 (log.f64 (/.f64 -1 alpha)) alpha)) (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 alpha 4)) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 2))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 6))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 4))) (*.f64 -2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 2))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 6))) (*.f64 2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))) (pow.f64 alpha 4))))))","(-.f64 (fma.f64 -2 (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (*.f64 alpha alpha)) (fma.f64 -2 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (/.f64 (pow.f64 alpha 6) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 -2 (+.f64 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (/.f64 (pow.f64 alpha 4) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))))))) (fma.f64 2 (/.f64 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))) (*.f64 alpha alpha)) (*.f64 2 (+.f64 (/.f64 (*.f64 cosTheta cosTheta) (/.f64 (pow.f64 alpha 6) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (/.f64 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))) (pow.f64 alpha 4))))))","(-.f64 (fma.f64 -2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (/.f64 (/.f64 (*.f64 alpha alpha) (PI.f64)) (log.f64 (/.f64 -1 alpha)))) (*.f64 -2 (+.f64 (+.f64 (*.f64 (log.f64 (/.f64 -1 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (pow.f64 alpha 4)) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (/.f64 (/.f64 (pow.f64 alpha 6) (log.f64 (/.f64 -1 alpha))) (PI.f64)))))) (*.f64 2 (+.f64 (+.f64 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 alpha 4)) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))) (/.f64 (*.f64 cosTheta cosTheta) (/.f64 (/.f64 (pow.f64 alpha 6) (log.f64 (/.f64 -1 alpha))) (PI.f64)))) (*.f64 (/.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) alpha) (/.f64 (log.f64 (/.f64 -1 alpha)) alpha)))))","(+.f64 (fma.f64 -2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (/.f64 (/.f64 (*.f64 alpha alpha) (PI.f64)) (log.f64 (/.f64 -1 alpha)))) (*.f64 -2 (+.f64 (+.f64 (*.f64 (log.f64 (/.f64 -1 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (pow.f64 alpha 4)) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (/.f64 (/.f64 (pow.f64 alpha 6) (log.f64 (/.f64 -1 alpha))) (PI.f64)))))) (*.f64 -2 (+.f64 (*.f64 (/.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) alpha) (/.f64 (log.f64 (/.f64 -1 alpha)) alpha)) (+.f64 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 alpha 4)) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))) (/.f64 (*.f64 cosTheta cosTheta) (/.f64 (/.f64 (pow.f64 alpha 6) (log.f64 (/.f64 -1 alpha))) (PI.f64)))))))","(/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1))","(/.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 (*.f64 alpha alpha) -1))","(*.f64 (/.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 alpha alpha -1)) (PI.f64))","(+.f64 (/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1)) (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(+.f64 (/.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 (*.f64 alpha alpha) -1)) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))","(fma.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (log.f64 (*.f64 alpha alpha)) (*.f64 (/.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 alpha alpha -1)) (PI.f64)))","(+.f64 (/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1)) (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(+.f64 (/.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 (*.f64 alpha alpha) -1)) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))","(fma.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (log.f64 (*.f64 alpha alpha)) (*.f64 (/.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 alpha alpha -1)) (PI.f64)))","(+.f64 (/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1)) (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(+.f64 (/.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 (*.f64 alpha alpha) -1)) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))","(fma.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (log.f64 (*.f64 alpha alpha)) (*.f64 (/.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 alpha alpha -1)) (PI.f64)))","(*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))","(*.f64 -2 (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))","(*.f64 -2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))","(*.f64 2 (*.f64 (log.f64 alpha) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))","(+.f64 (/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1)) (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(+.f64 (/.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 (*.f64 alpha alpha) -1)) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))","(fma.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (log.f64 (*.f64 alpha alpha)) (*.f64 (/.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 alpha alpha -1)) (PI.f64)))","(+.f64 (/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1)) (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(+.f64 (/.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 (*.f64 alpha alpha) -1)) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))","(fma.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (log.f64 (*.f64 alpha alpha)) (*.f64 (/.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 alpha alpha -1)) (PI.f64)))","(+.f64 (/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1)) (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(+.f64 (/.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 (*.f64 alpha alpha) -1)) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))","(fma.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (log.f64 (*.f64 alpha alpha)) (*.f64 (/.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 alpha alpha -1)) (PI.f64)))","(*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))","(*.f64 -2 (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))","(*.f64 -2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))","(*.f64 2 (*.f64 (log.f64 alpha) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))","(+.f64 (/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1)) (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(+.f64 (/.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 (*.f64 alpha alpha) -1)) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))","(fma.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (log.f64 (*.f64 alpha alpha)) (*.f64 (/.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 alpha alpha -1)) (PI.f64)))","(+.f64 (/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1)) (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(+.f64 (/.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 (*.f64 alpha alpha) -1)) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))","(fma.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (log.f64 (*.f64 alpha alpha)) (*.f64 (/.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 alpha alpha -1)) (PI.f64)))","(+.f64 (/.f64 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)) (-.f64 (pow.f64 alpha 2) 1)) (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(+.f64 (/.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 (*.f64 alpha alpha) -1)) (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))","(fma.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (log.f64 (*.f64 alpha alpha)) (*.f64 (/.f64 (log.f64 (*.f64 alpha alpha)) (fma.f64 alpha alpha -1)) (PI.f64)))","(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))","(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))","(/.f64 -1/2 (*.f64 (PI.f64) (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta)))))","(-.f64 (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (pow.f64 alpha 2)) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (pow.f64 (PI.f64) 2))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(fma.f64 -1/4 (*.f64 (/.f64 (+.f64 (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (pow.f64 (log.f64 alpha) 2)) (/.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2) (pow.f64 (PI.f64) 2)))) (neg.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))))","(fma.f64 -1/4 (*.f64 (/.f64 (*.f64 (*.f64 (log.f64 alpha) -2) (+.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (pow.f64 (log.f64 alpha) 2)) (*.f64 (/.f64 alpha (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2)) (/.f64 alpha (pow.f64 (PI.f64) 2)))) (/.f64 -1/2 (*.f64 (PI.f64) (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta))))))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) 2) (*.f64 (pow.f64 (log.f64 alpha) 3) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 3) (pow.f64 (PI.f64) 3))))) (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (pow.f64 (PI.f64) 2)))))) (pow.f64 alpha 4))) (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (pow.f64 alpha 2)) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (pow.f64 (PI.f64) 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (fma.f64 -1 (*.f64 (pow.f64 alpha 4) (fma.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) 2) (*.f64 (pow.f64 (log.f64 alpha) 3) (*.f64 (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 3) (pow.f64 (PI.f64) 3)))) (*.f64 1/4 (/.f64 (+.f64 (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2) (pow.f64 (PI.f64) 2))))))) (*.f64 -1/4 (*.f64 (/.f64 (+.f64 (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (pow.f64 (log.f64 alpha) 2)) (/.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2) (pow.f64 (PI.f64) 2)))))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))))","(fma.f64 (neg.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 (*.f64 (log.f64 alpha) -2) (+.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) 2) (*.f64 (pow.f64 (log.f64 alpha) 3) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 3) (pow.f64 (PI.f64) 3)))) (*.f64 (/.f64 1/4 (pow.f64 (log.f64 alpha) 2)) (/.f64 (*.f64 (*.f64 (log.f64 alpha) -2) (+.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (pow.f64 (PI.f64) 2)))))) (pow.f64 alpha 4) (fma.f64 -1/4 (*.f64 (/.f64 (*.f64 (*.f64 (log.f64 alpha) -2) (+.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (pow.f64 (log.f64 alpha) 2)) (*.f64 (/.f64 alpha (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2)) (/.f64 alpha (pow.f64 (PI.f64) 2)))) (/.f64 -1/2 (*.f64 (PI.f64) (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta)))))))","(-.f64 (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) 2) (*.f64 (pow.f64 (log.f64 alpha) 3) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 3) (pow.f64 (PI.f64) 3))))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) 2) (*.f64 (pow.f64 (log.f64 alpha) 3) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 3) (pow.f64 (PI.f64) 3))))) (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (pow.f64 (PI.f64) 2))))))) (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (pow.f64 (PI.f64) 2))))))) (pow.f64 alpha 6))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) 2) (*.f64 (pow.f64 (log.f64 alpha) 3) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 3) (pow.f64 (PI.f64) 3))))) (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (pow.f64 (PI.f64) 2)))))) (pow.f64 alpha 4))) (*.f64 -1/4 (/.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (pow.f64 alpha 2)) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (pow.f64 (PI.f64) 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (fma.f64 -1 (*.f64 (pow.f64 alpha 6) (fma.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) 2) (*.f64 (pow.f64 (log.f64 alpha) 3) (*.f64 (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 3) (pow.f64 (PI.f64) 3)))) (fma.f64 1/2 (/.f64 (+.f64 (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (/.f64 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (fma.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) 2) (*.f64 (pow.f64 (log.f64 alpha) 3) (*.f64 (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 3) (pow.f64 (PI.f64) 3)))) (*.f64 1/4 (/.f64 (+.f64 (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2) (pow.f64 (PI.f64) 2)))))))) (*.f64 1/4 (/.f64 (+.f64 (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2) (pow.f64 (PI.f64) 2)))))))) (fma.f64 -1 (*.f64 (pow.f64 alpha 4) (fma.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) 2) (*.f64 (pow.f64 (log.f64 alpha) 3) (*.f64 (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 3) (pow.f64 (PI.f64) 3)))) (*.f64 1/4 (/.f64 (+.f64 (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2) (pow.f64 (PI.f64) 2))))))) (*.f64 -1/4 (*.f64 (/.f64 (+.f64 (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 -2 (log.f64 alpha)) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (pow.f64 (log.f64 alpha) 2)) (/.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2) (pow.f64 (PI.f64) 2))))))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))))","(fma.f64 (neg.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 (*.f64 (log.f64 alpha) -2) (+.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) 2) (*.f64 (pow.f64 (log.f64 alpha) 3) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 3) (pow.f64 (PI.f64) 3)))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 (*.f64 (log.f64 alpha) -2) (+.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (log.f64 alpha)) (/.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 (*.f64 (log.f64 alpha) -2) (+.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) 2) (*.f64 (pow.f64 (log.f64 alpha) 3) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 3) (pow.f64 (PI.f64) 3)))) (*.f64 (/.f64 1/4 (pow.f64 (log.f64 alpha) 2)) (/.f64 (*.f64 (*.f64 (log.f64 alpha) -2) (+.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (pow.f64 (PI.f64) 2))))) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 (/.f64 1/4 (pow.f64 (log.f64 alpha) 2)) (/.f64 (*.f64 (*.f64 (log.f64 alpha) -2) (+.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (pow.f64 (PI.f64) 2))))))) (pow.f64 alpha 6) (fma.f64 (neg.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 (*.f64 (log.f64 alpha) -2) (+.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) 2) (*.f64 (pow.f64 (log.f64 alpha) 3) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 3) (pow.f64 (PI.f64) 3)))) (*.f64 (/.f64 1/4 (pow.f64 (log.f64 alpha) 2)) (/.f64 (*.f64 (*.f64 (log.f64 alpha) -2) (+.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (pow.f64 (PI.f64) 2)))))) (pow.f64 alpha 4) (fma.f64 -1/4 (*.f64 (/.f64 (*.f64 (*.f64 (log.f64 alpha) -2) (+.f64 (*.f64 cosTheta (*.f64 cosTheta (PI.f64))) (*.f64 (PI.f64) (-.f64 1 (*.f64 cosTheta cosTheta))))) (pow.f64 (log.f64 alpha) 2)) (*.f64 (/.f64 alpha (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2)) (/.f64 alpha (pow.f64 (PI.f64) 2)))) (/.f64 -1/2 (*.f64 (PI.f64) (*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta))))))))","(/.f64 -1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 -1/2 (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))","(/.f64 -1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))","(-.f64 (*.f64 -1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 2) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (PI.f64) 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))","(fma.f64 -1/4 (/.f64 (+.f64 (*.f64 (*.f64 -2 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (*.f64 -2 (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))) (*.f64 (pow.f64 (neg.f64 (log.f64 alpha)) 2) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 cosTheta 4))))) (neg.f64 (/.f64 1/2 (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))))","(fma.f64 -1/4 (/.f64 (*.f64 -2 (+.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 cosTheta 4))))) (/.f64 -1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))))","(fma.f64 (/.f64 -1/4 (*.f64 (pow.f64 cosTheta 4) (*.f64 (*.f64 alpha alpha) (pow.f64 (PI.f64) 2)))) (/.f64 (*.f64 -2 (-.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (log.f64 alpha) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) (pow.f64 (log.f64 alpha) 2)) (/.f64 -1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (PI.f64) 2))))) (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) 2) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 3) (*.f64 (pow.f64 cosTheta 6) (pow.f64 (PI.f64) 3)))))) (pow.f64 alpha 4))) (*.f64 -1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 2) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (PI.f64) 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))","(-.f64 (fma.f64 -1 (/.f64 (fma.f64 1/4 (/.f64 (+.f64 (*.f64 (*.f64 -2 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (*.f64 -2 (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))) (*.f64 (pow.f64 (neg.f64 (log.f64 alpha)) 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 cosTheta 4)))) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 (*.f64 -2 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (*.f64 -2 (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))) 2) (*.f64 (pow.f64 (neg.f64 (log.f64 alpha)) 3) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 cosTheta 6)))))) (pow.f64 alpha 4)) (*.f64 -1/4 (/.f64 (+.f64 (*.f64 (*.f64 -2 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (*.f64 -2 (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))) (*.f64 (pow.f64 (neg.f64 (log.f64 alpha)) 2) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 cosTheta 4))))))) (/.f64 1/2 (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64))))","(fma.f64 -1 (/.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 -2 (+.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) 2) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 (neg.f64 (log.f64 alpha)) 3) (pow.f64 cosTheta 6)))) (*.f64 (/.f64 1/4 (pow.f64 (log.f64 alpha) 2)) (/.f64 (*.f64 -2 (+.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 cosTheta 4))))) (pow.f64 alpha 4)) (fma.f64 -1/4 (/.f64 (*.f64 -2 (+.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 cosTheta 4))))) (/.f64 -1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))))","(-.f64 (fma.f64 (/.f64 -1/4 (*.f64 (pow.f64 cosTheta 4) (*.f64 (*.f64 alpha alpha) (pow.f64 (PI.f64) 2)))) (/.f64 (*.f64 -2 (-.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (log.f64 alpha) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) (pow.f64 (log.f64 alpha) 2)) (/.f64 -1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) (/.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 -2 (-.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (log.f64 alpha) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) 2) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 (neg.f64 (log.f64 alpha)) 3) (pow.f64 cosTheta 6)))) (*.f64 (/.f64 1/4 (pow.f64 (log.f64 alpha) 2)) (/.f64 (*.f64 -2 (-.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (log.f64 alpha) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 cosTheta 4))))) (pow.f64 alpha 4)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (PI.f64) 2))))) (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) 2) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 3) (*.f64 (pow.f64 cosTheta 6) (pow.f64 (PI.f64) 3)))))) (pow.f64 alpha 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (PI.f64) 2))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) 2) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 3) (*.f64 (pow.f64 cosTheta 6) (pow.f64 (PI.f64) 3))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (PI.f64) 2))))) (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) 2) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 3) (*.f64 (pow.f64 cosTheta 6) (pow.f64 (PI.f64) 3))))))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))) (pow.f64 alpha 6))) (*.f64 -1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))) (*.f64 2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 (pow.f64 (log.f64 (/.f64 1 alpha)) 2) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (PI.f64) 2)))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))","(-.f64 (fma.f64 -1 (/.f64 (fma.f64 1/4 (/.f64 (+.f64 (*.f64 (*.f64 -2 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (*.f64 -2 (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))) (*.f64 (pow.f64 (neg.f64 (log.f64 alpha)) 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 cosTheta 4)))) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 (*.f64 -2 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (*.f64 -2 (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))) 2) (*.f64 (pow.f64 (neg.f64 (log.f64 alpha)) 3) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 cosTheta 6)))))) (pow.f64 alpha 4)) (fma.f64 -1 (/.f64 (fma.f64 1/4 (/.f64 (+.f64 (*.f64 (*.f64 -2 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (*.f64 -2 (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))) (*.f64 (pow.f64 (neg.f64 (log.f64 alpha)) 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 cosTheta 4)))) (fma.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 (*.f64 -2 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (*.f64 -2 (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))) 2) (*.f64 (pow.f64 (neg.f64 (log.f64 alpha)) 3) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 cosTheta 6)))) (*.f64 1/2 (*.f64 (/.f64 (+.f64 (*.f64 (*.f64 -2 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (*.f64 -2 (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))) (neg.f64 (log.f64 alpha))) (/.f64 (fma.f64 1/4 (/.f64 (+.f64 (*.f64 (*.f64 -2 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (*.f64 -2 (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))) (*.f64 (pow.f64 (neg.f64 (log.f64 alpha)) 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 cosTheta 4)))) (*.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 (*.f64 -2 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (*.f64 -2 (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))) 2) (*.f64 (pow.f64 (neg.f64 (log.f64 alpha)) 3) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 cosTheta 6)))))) (*.f64 (PI.f64) (*.f64 cosTheta cosTheta))))))) (pow.f64 alpha 6)) (*.f64 -1/4 (/.f64 (+.f64 (*.f64 (*.f64 -2 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (*.f64 -2 (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))) (*.f64 (pow.f64 (neg.f64 (log.f64 alpha)) 2) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 cosTheta 4)))))))) (/.f64 1/2 (*.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64))))","(+.f64 (-.f64 (-.f64 (*.f64 (/.f64 -1/4 (*.f64 (pow.f64 cosTheta 4) (*.f64 (*.f64 alpha alpha) (pow.f64 (PI.f64) 2)))) (/.f64 (*.f64 -2 (+.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) (pow.f64 (log.f64 alpha) 2))) (/.f64 (fma.f64 1/4 (/.f64 (*.f64 -2 (+.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 cosTheta 4)))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 -2 (+.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) (neg.f64 (log.f64 alpha))) (/.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 -2 (+.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) 2) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 (neg.f64 (log.f64 alpha)) 3) (pow.f64 cosTheta 6)))) (*.f64 (/.f64 1/4 (pow.f64 (log.f64 alpha) 2)) (/.f64 (*.f64 -2 (+.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 cosTheta 4))))) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))) (*.f64 1/8 (/.f64 (pow.f64 (*.f64 -2 (+.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) 2) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 (neg.f64 (log.f64 alpha)) 3) (pow.f64 cosTheta 6))))))) (pow.f64 alpha 6))) (/.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 -2 (+.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) 2) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 (neg.f64 (log.f64 alpha)) 3) (pow.f64 cosTheta 6)))) (*.f64 (/.f64 1/4 (pow.f64 (log.f64 alpha) 2)) (/.f64 (*.f64 -2 (+.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 cosTheta 4))))) (pow.f64 alpha 4))) (/.f64 -1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))))","(+.f64 (-.f64 (*.f64 (/.f64 -1/4 (*.f64 (pow.f64 cosTheta 4) (*.f64 (*.f64 alpha alpha) (pow.f64 (PI.f64) 2)))) (/.f64 (*.f64 -2 (-.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (log.f64 alpha) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) (pow.f64 (log.f64 alpha) 2))) (+.f64 (/.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 -2 (-.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (log.f64 alpha) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) 2) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 (neg.f64 (log.f64 alpha)) 3) (pow.f64 cosTheta 6)))) (*.f64 (/.f64 1/4 (pow.f64 (log.f64 alpha) 2)) (/.f64 (*.f64 -2 (-.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (log.f64 alpha) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 cosTheta 4))))) (pow.f64 alpha 4)) (/.f64 (fma.f64 1/4 (/.f64 (*.f64 -2 (-.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (log.f64 alpha) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) (*.f64 (pow.f64 (log.f64 alpha) 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 cosTheta 4)))) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 -2 (-.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (log.f64 alpha) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) (neg.f64 (log.f64 alpha))) (/.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 -2 (-.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (log.f64 alpha) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) 2) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 (neg.f64 (log.f64 alpha)) 3) (pow.f64 cosTheta 6)))) (*.f64 (/.f64 1/4 (pow.f64 (log.f64 alpha) 2)) (/.f64 (*.f64 -2 (-.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (log.f64 alpha) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 cosTheta 4))))) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))) (*.f64 1/8 (/.f64 (pow.f64 (*.f64 -2 (-.f64 (*.f64 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (log.f64 alpha) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))) 2) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 (pow.f64 (neg.f64 (log.f64 alpha)) 3) (pow.f64 cosTheta 6))))))) (pow.f64 alpha 6)))) (/.f64 -1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))))","(/.f64 -1/2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 (/.f64 -1 alpha)) (PI.f64))))","(/.f64 -1/2 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))))","(/.f64 (/.f64 (/.f64 (/.f64 -1/2 cosTheta) cosTheta) (PI.f64)) (log.f64 (/.f64 -1 alpha)))","(-.f64 (*.f64 -1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))","(fma.f64 -1/4 (/.f64 (+.f64 (*.f64 -2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (*.f64 -2 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (*.f64 (*.f64 alpha alpha) (pow.f64 (PI.f64) 2)) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2)))) (neg.f64 (/.f64 1/2 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))))))","(fma.f64 -1/4 (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (-.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 2 cosTheta) cosTheta))) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2))))) (/.f64 (/.f64 (/.f64 (/.f64 -1/2 cosTheta) cosTheta) (PI.f64)) (log.f64 (/.f64 -1 alpha))))","(fma.f64 -1/4 (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 -2 (*.f64 cosTheta cosTheta)))) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2))))) (/.f64 (/.f64 (/.f64 (/.f64 -1/2 cosTheta) cosTheta) (PI.f64)) (log.f64 (/.f64 -1 alpha))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) 2) (*.f64 (pow.f64 cosTheta 6) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))))) (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2)))))) (pow.f64 alpha 4))) (*.f64 -1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))","(-.f64 (fma.f64 -1 (/.f64 (fma.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (*.f64 -2 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))))) 2) (*.f64 (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 cosTheta 6)) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))) (*.f64 1/4 (/.f64 (+.f64 (*.f64 -2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (*.f64 -2 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2)))))) (pow.f64 alpha 4)) (*.f64 -1/4 (/.f64 (+.f64 (*.f64 -2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (*.f64 -2 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (*.f64 (*.f64 alpha alpha) (pow.f64 (PI.f64) 2)) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2)))))) (/.f64 1/2 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha)))))","(fma.f64 -1 (/.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (-.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 2 cosTheta) cosTheta))) 2) (*.f64 (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 cosTheta 6)) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))) (*.f64 1/4 (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (-.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 2 cosTheta) cosTheta))) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2)))))) (pow.f64 alpha 4)) (fma.f64 -1/4 (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (-.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 2 cosTheta) cosTheta))) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2))))) (/.f64 (/.f64 (/.f64 (/.f64 -1/2 cosTheta) cosTheta) (PI.f64)) (log.f64 (/.f64 -1 alpha)))))","(-.f64 (fma.f64 -1/4 (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 -2 (*.f64 cosTheta cosTheta)))) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2))))) (/.f64 (/.f64 (/.f64 (/.f64 -1/2 cosTheta) cosTheta) (PI.f64)) (log.f64 (/.f64 -1 alpha)))) (/.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 -2 (*.f64 cosTheta cosTheta)))) 2) (*.f64 (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 cosTheta 6)) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))) (*.f64 1/4 (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 -2 (*.f64 cosTheta cosTheta)))) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2)))))) (pow.f64 alpha 4)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) 2) (*.f64 (pow.f64 cosTheta 6) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))))) (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2)))))) (pow.f64 alpha 4))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) 2) (*.f64 (pow.f64 cosTheta 6) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))))) (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2))))))) (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (+.f64 (*.f64 1/8 (/.f64 (pow.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) 2) (*.f64 (pow.f64 cosTheta 6) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))))) (*.f64 1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2))))))) (pow.f64 alpha 6))) (*.f64 -1/4 (/.f64 (-.f64 (*.f64 -2 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (*.f64 2 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2)))))))) (*.f64 1/2 (/.f64 1 (*.f64 (pow.f64 cosTheta 2) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha)))))))","(-.f64 (fma.f64 -1 (/.f64 (fma.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (*.f64 -2 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))))) 2) (*.f64 (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 cosTheta 6)) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))) (*.f64 1/4 (/.f64 (+.f64 (*.f64 -2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (*.f64 -2 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2)))))) (pow.f64 alpha 4)) (fma.f64 -1 (/.f64 (fma.f64 1/2 (*.f64 (/.f64 (+.f64 (*.f64 -2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (*.f64 -2 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))))) (*.f64 cosTheta cosTheta)) (/.f64 (fma.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (*.f64 -2 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))))) 2) (*.f64 (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 cosTheta 6)) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))) (*.f64 1/4 (/.f64 (+.f64 (*.f64 -2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (*.f64 -2 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2)))))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (fma.f64 1/8 (/.f64 (pow.f64 (+.f64 (*.f64 -2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (*.f64 -2 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))))) 2) (*.f64 (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 cosTheta 6)) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))) (*.f64 1/4 (/.f64 (+.f64 (*.f64 -2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (*.f64 -2 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 (PI.f64) 2) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2))))))) (pow.f64 alpha 6)) (*.f64 -1/4 (/.f64 (+.f64 (*.f64 -2 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (*.f64 -2 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha))))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (*.f64 (*.f64 alpha alpha) (pow.f64 (PI.f64) 2)) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2))))))) (/.f64 1/2 (*.f64 (*.f64 (PI.f64) (*.f64 cosTheta cosTheta)) (log.f64 (/.f64 -1 alpha)))))","(+.f64 (-.f64 (/.f64 (neg.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (-.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 2 cosTheta) cosTheta))) 2) (*.f64 (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 cosTheta 6)) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))) (*.f64 1/4 (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (-.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 2 cosTheta) cosTheta))) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2))))))) (pow.f64 alpha 4)) (/.f64 (fma.f64 1/2 (*.f64 (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (-.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 2 cosTheta) cosTheta))) (*.f64 cosTheta cosTheta)) (/.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (-.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 2 cosTheta) cosTheta))) 2) (*.f64 (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 cosTheta 6)) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))) (*.f64 1/4 (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (-.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 2 cosTheta) cosTheta))) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2)))))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (-.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 2 cosTheta) cosTheta))) 2) (*.f64 (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 cosTheta 6)) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))) (*.f64 1/4 (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (-.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 2 cosTheta) cosTheta))) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2))))))) (pow.f64 alpha 6))) (fma.f64 -1/4 (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (-.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 2 cosTheta) cosTheta))) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2))))) (/.f64 (/.f64 (/.f64 (/.f64 -1/2 cosTheta) cosTheta) (PI.f64)) (log.f64 (/.f64 -1 alpha)))))","(+.f64 (-.f64 (/.f64 (neg.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 -2 (*.f64 cosTheta cosTheta)))) 2) (*.f64 (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 cosTheta 6)) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))) (*.f64 1/4 (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 -2 (*.f64 cosTheta cosTheta)))) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2))))))) (pow.f64 alpha 4)) (/.f64 (fma.f64 1/2 (*.f64 (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 -2 (*.f64 cosTheta cosTheta)))) (*.f64 cosTheta cosTheta)) (/.f64 (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 -2 (*.f64 cosTheta cosTheta)))) 2) (*.f64 (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 cosTheta 6)) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))) (*.f64 1/4 (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 -2 (*.f64 cosTheta cosTheta)))) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2)))))) (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))) (fma.f64 1/8 (/.f64 (pow.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 -2 (*.f64 cosTheta cosTheta)))) 2) (*.f64 (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 cosTheta 6)) (pow.f64 (log.f64 (/.f64 -1 alpha)) 3))) (*.f64 1/4 (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 -2 (*.f64 cosTheta cosTheta)))) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2))))))) (pow.f64 alpha 6))) (fma.f64 -1/4 (/.f64 (*.f64 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))) (+.f64 (*.f64 -2 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 -2 (*.f64 cosTheta cosTheta)))) (*.f64 (*.f64 alpha alpha) (*.f64 (pow.f64 (PI.f64) 2) (*.f64 (pow.f64 cosTheta 4) (pow.f64 (log.f64 (/.f64 -1 alpha)) 2))))) (/.f64 (/.f64 (/.f64 (/.f64 -1/2 cosTheta) cosTheta) (PI.f64)) (log.f64 (/.f64 -1 alpha)))))","(/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))","(/.f64 (+.f64 (*.f64 alpha alpha) -1) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))","(/.f64 (fma.f64 alpha alpha -1) (*.f64 2 (*.f64 (log.f64 alpha) (PI.f64))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(+.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (-.f64 (neg.f64 (/.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2) (/.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (*.f64 cosTheta cosTheta)))) (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 cosTheta (*.f64 cosTheta (pow.f64 (fma.f64 alpha alpha -1) 2))) (*.f64 (log.f64 alpha) (PI.f64)))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(+.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (-.f64 (fma.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2) (/.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (*.f64 cosTheta cosTheta))) (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 3) (log.f64 (*.f64 alpha alpha))) (/.f64 (pow.f64 cosTheta 4) (PI.f64)))) (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))","(+.f64 (fma.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (log.f64 (*.f64 alpha alpha))) (/.f64 (pow.f64 cosTheta 4) (PI.f64)) (*.f64 -1/2 (/.f64 (*.f64 cosTheta (*.f64 cosTheta (pow.f64 (fma.f64 alpha alpha -1) 2))) (*.f64 (log.f64 alpha) (PI.f64))))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))))","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 4) (pow.f64 cosTheta 6)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(+.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))) (-.f64 (fma.f64 -1 (/.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2) (/.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (*.f64 cosTheta cosTheta))) (fma.f64 -1 (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 4) (log.f64 (*.f64 alpha alpha))) (/.f64 (pow.f64 cosTheta 6) (PI.f64))) (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 3) (log.f64 (*.f64 alpha alpha))) (/.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))))))","(+.f64 (-.f64 (fma.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (log.f64 (*.f64 alpha alpha))) (/.f64 (pow.f64 cosTheta 4) (PI.f64)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 cosTheta 6) (pow.f64 (fma.f64 alpha alpha -1) 4)) (*.f64 (log.f64 alpha) (PI.f64))))) (*.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))) (*.f64 cosTheta cosTheta))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))))","(+.f64 (+.f64 (*.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (log.f64 (*.f64 alpha alpha))) (/.f64 (pow.f64 cosTheta 4) (PI.f64))) (fma.f64 (/.f64 -1/2 (log.f64 alpha)) (/.f64 (*.f64 cosTheta (*.f64 cosTheta (pow.f64 (fma.f64 alpha alpha -1) 2))) (PI.f64)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 cosTheta 6) (pow.f64 (fma.f64 alpha alpha -1) 4)) (*.f64 (log.f64 alpha) (PI.f64)))))) (/.f64 (fma.f64 alpha alpha -1) (*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 1 (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))","(/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (/.f64 1 (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta)) (PI.f64))) (/.f64 1 (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (+.f64 (*.f64 alpha alpha) -1)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))","(-.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4)))))","(+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2) (*.f64 (PI.f64) (pow.f64 cosTheta 6)))) (-.f64 (/.f64 1 (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta)) (PI.f64))) (/.f64 1 (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (+.f64 (*.f64 alpha alpha) -1)) (*.f64 (PI.f64) (pow.f64 cosTheta 4))))))","(+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (-.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 cosTheta 6) (pow.f64 (fma.f64 alpha alpha -1) 2)))) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))","(+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2) (*.f64 (PI.f64) (pow.f64 cosTheta 6)))) (-.f64 (/.f64 1 (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta)) (PI.f64))) (+.f64 (/.f64 1 (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (+.f64 (*.f64 alpha alpha) -1)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))) (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 3) (*.f64 (PI.f64) (pow.f64 cosTheta 8)))))))","(-.f64 (+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (-.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 cosTheta 6) (pow.f64 (fma.f64 alpha alpha -1) 2)))) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4)))))) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 8)))))","(+.f64 (+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (-.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 cosTheta 6) (pow.f64 (fma.f64 alpha alpha -1) 2)))) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4)))))) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 8)))))","(/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 1 (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)))","(/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))","(-.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(-.f64 (/.f64 1 (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta)) (PI.f64))) (/.f64 1 (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (+.f64 (*.f64 alpha alpha) -1)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))","(-.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4)))))","(+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4)))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2) (*.f64 (PI.f64) (pow.f64 cosTheta 6)))) (-.f64 (/.f64 1 (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta)) (PI.f64))) (/.f64 1 (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (+.f64 (*.f64 alpha alpha) -1)) (*.f64 (PI.f64) (pow.f64 cosTheta 4))))))","(+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (-.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 cosTheta 6) (pow.f64 (fma.f64 alpha alpha -1) 2)))) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4))))))","(-.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (+.f64 (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))))","(+.f64 (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2) (*.f64 (PI.f64) (pow.f64 cosTheta 6)))) (-.f64 (/.f64 1 (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (*.f64 cosTheta cosTheta)) (PI.f64))) (+.f64 (/.f64 1 (*.f64 (*.f64 (log.f64 (*.f64 alpha alpha)) (+.f64 (*.f64 alpha alpha) -1)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))) (/.f64 (/.f64 1 (log.f64 (*.f64 alpha alpha))) (*.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 3) (*.f64 (PI.f64) (pow.f64 cosTheta 8)))))))","(-.f64 (+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (-.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 cosTheta 6) (pow.f64 (fma.f64 alpha alpha -1) 2)))) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4)))))) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 8)))))","(+.f64 (+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (-.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 cosTheta 6) (pow.f64 (fma.f64 alpha alpha -1) 2)))) (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 4)))))) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (PI.f64) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 cosTheta 8)))))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))","(*.f64 2 (*.f64 (log.f64 alpha) (PI.f64)))","(*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))","(*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) -2))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))","(*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) -2))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))","(*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) -2))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (PI.f64)))","(*.f64 -2 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))","(*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) -2))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 (*.f64 -2 (PI.f64)) (log.f64 (/.f64 -1 alpha)))","(*.f64 (PI.f64) (*.f64 -2 (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 (*.f64 -2 (PI.f64)) (log.f64 (/.f64 -1 alpha)))","(*.f64 (PI.f64) (*.f64 -2 (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 (*.f64 -2 (PI.f64)) (log.f64 (/.f64 -1 alpha)))","(*.f64 (PI.f64) (*.f64 -2 (log.f64 (/.f64 -1 alpha))))","(*.f64 -2 (*.f64 (PI.f64) (log.f64 (/.f64 -1 alpha))))","(*.f64 (*.f64 -2 (PI.f64)) (log.f64 (/.f64 -1 alpha)))","(*.f64 (PI.f64) (*.f64 -2 (log.f64 (/.f64 -1 alpha))))"]],"stop":[["node limit",1]],"time":76.995849609375,"type":"simplify"},{"compiler":[[11367,7128]],"time":116.18798828125,"type":"eval"},{"alts":[["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))","next",0.44817252900649757],["(/.f64 (/.f64 1 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (fma.f64 alpha alpha -1)))","fresh",0.5678101562950724],["(pow.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (*.f64 (cbrt.f64 (PI.f64)) (*.f64 2 (log.f64 alpha)))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1)","fresh",1.0990019165693854],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (cbrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))))) (log.f64 (cbrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.5033188476844203],["(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","fresh",0.9436053469121758],["(*.f64 (/.f64 1 (PI.f64)) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 2 (log.f64 alpha))))","fresh",0.524107629305074],["(pow.f64 (/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1)","done",0.44657639138884375],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (/.f64 (+.f64 (pow.f64 (log.f64 alpha) 3) (pow.f64 (log.f64 alpha) 3)) (fma.f64 (log.f64 alpha) (log.f64 alpha) (-.f64 (*.f64 (log.f64 alpha) (log.f64 alpha)) (*.f64 (log.f64 alpha) (log.f64 alpha)))))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.6097514281472842],["(*.f64 (/.f64 1 (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 2))) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))","fresh",0.5098801758319564]],"compiler":[[23,16],[25,18],[31,22],[42,20],[61,49],[25,18],[25,17],[48,25],[36,26],[23,16],[25,18],[31,22],[42,20],[61,49],[25,18],[48,25],[36,26]],"count":[[270,9]],"kept":[{"done":[0,0],"fresh":[11,4],"new":[258,4],"picked":[1,1]}],"min-error":[0.00390625],"time":61.97216796875,"type":"prune"},{"compiler":[[70,37]],"locations":[["(fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)",0.0078125,true],["(*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))",0.01171875,true],["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))",0.234375,true],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))",0.34994125976844204,true]],"time":22.156005859375,"type":"localize"},{"count":[[4,84]],"series":[["(fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)","cosTheta","-inf",0.1640625],["(fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)","cosTheta","inf",0.1640625],["(fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)","cosTheta","0",0.181884765625],["(fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)","alpha","-inf",0.179931640625],["(fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)","alpha","inf",0.200927734375],["(fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)","alpha","0",0.177001953125],["(*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))","cosTheta","-inf",0.18408203125],["(*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))","cosTheta","inf",0.291015625],["(*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))","cosTheta","0",2.297119140625],["(*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))","alpha","-inf",2.347900390625],["(*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))","alpha","inf",2.39599609375],["(*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))","alpha","0",1.680908203125],["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))","alpha","-inf",0.4208984375],["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))","alpha","inf",0.493896484375],["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))","alpha","0",0.485107421875],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))","cosTheta","-inf",0.31396484375],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))","cosTheta","inf",0.762939453125],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))","cosTheta","0",0.879150390625],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))","alpha","-inf",2.176025390625],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))","alpha","inf",1.200927734375],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))","alpha","0",1.263916015625]],"time":18.726806640625,"type":"series"},{"count":[[4,155]],"egraph":[[2,3983,72,0.030496375],[1,301,72,0.005271417],[0,15,72,0.000414833]],"inputs":[["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))","(/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))","(*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))","(fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 alpha alpha -1) (/.f64 1 (*.f64 (*.f64 (PI.f64) 2) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 1 (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (/.f64 (/.f64 1 (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2)) (cbrt.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) 2) (*.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) (/.f64 (/.f64 1 (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (sqrt.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) (*.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) (/.f64 (/.f64 1 (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (fma.f64 alpha alpha -1)) (/.f64 1/2 (PI.f64))) (/.f64 1 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (neg.f64 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 1 (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 1/2 (PI.f64)))) (/.f64 1 (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) 2) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))) (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))) (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) 1) (/.f64 (/.f64 1/2 (PI.f64)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) 2) 1) (/.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) 1) (/.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (/.f64 1/2 (PI.f64)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) 2) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) (log.f64 alpha)) (/.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (log.f64 alpha)) (/.f64 (fma.f64 alpha alpha -1) (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (/.f64 1/2 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) 2) (log.f64 alpha)) (/.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (pow.f64 (cbrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))) 2)) (/.f64 (/.f64 1/2 (PI.f64)) (cbrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))) 2)) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (cbrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) 2) (pow.f64 (cbrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))) 2)) (cbrt.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) (pow.f64 (cbrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))) 2)) (/.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) (cbrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (sqrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))) (/.f64 (/.f64 1/2 (PI.f64)) (sqrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (sqrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) 2) (sqrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))) (/.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) (sqrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)) (/.f64 (PI.f64) (/.f64 (fma.f64 alpha alpha -1) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) 3) (pow.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (PI.f64) (/.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (*.f64 (PI.f64) 2) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))) (fma.f64 alpha alpha -1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)) (/.f64 (PI.f64) (/.f64 (fma.f64 alpha alpha -1) 2))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (neg.f64 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) 3) (pow.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64))))) 2)) (log.f64 (cbrt.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))))) (log.f64 (sqrt.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) 2) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) 2) (*.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (/.f64 1/2 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (/.f64 1/2 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 alpha alpha -1)) (/.f64 1 (*.f64 (PI.f64) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 (PI.f64)) (fma.f64 alpha alpha -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (PI.f64)) (/.f64 (fma.f64 alpha alpha -1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) 2) (PI.f64)) (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (PI.f64)) (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) 2) (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) 2) 2) (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) 2) 1) (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) 1) (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 2)) 2)) (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) 2) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 2)) 2)) (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (pow.f64 (cbrt.f64 (*.f64 (PI.f64) 2)) 2)) (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (cbrt.f64 (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (*.f64 (PI.f64) 2))) (/.f64 (fma.f64 alpha alpha -1) (sqrt.f64 (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) 2) (sqrt.f64 (*.f64 (PI.f64) 2))) (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (sqrt.f64 (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)) 2) 4) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (PI.f64) (/.f64 (fma.f64 alpha alpha -1) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 (*.f64 (PI.f64) 2) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (PI.f64) (/.f64 (fma.f64 alpha alpha -1) 2)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)) 2) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (pow.f64 (*.f64 (PI.f64) 2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) (log.f64 alpha)) (log.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))) (log.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 alpha (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2)) (log.f64 (cbrt.f64 (pow.f64 alpha (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 alpha (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (pow.f64 alpha (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 3) (pow.f64 (log.f64 alpha) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (log.f64 alpha) 3) (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 alpha (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 alpha (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 3) (pow.f64 (log.f64 alpha) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (log.f64 alpha) 3) (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 alpha (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 alpha) (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) (log.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) (log.f64 alpha) (log.f64 alpha))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2)) (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 1 (*.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) cosTheta)) (hypot.f64 1 (*.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) cosTheta)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) 3) 1) (+.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) 2) (-.f64 1 (*.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta)) 2) 1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 1 (*.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) cosTheta)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta))) 1))))))"]],"rules":[["egg-rr",27],["egg-rr",25],["egg-rr",46],["egg-rr",57]],"stop":[["node limit",1]],"time":63.672119140625,"type":"rewrite"},{"count":[[239,225]],"egraph":[[2,2508,2650,0.016849208],[1,619,2731,0.00472],[0,176,3212,0.000988459]],"inputs":[["(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))","(-.f64 (*.f64 1/2 (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 4) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 alpha 6) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 4) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(/.f64 -1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (pow.f64 alpha 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (pow.f64 alpha 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))","(/.f64 1/2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 4) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 4) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 6) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(*.f64 1/2 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (PI.f64))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (PI.f64)))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 alpha) (PI.f64)))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (PI.f64)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 alpha) (PI.f64)))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 alpha) (PI.f64))))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (PI.f64)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 alpha) (PI.f64)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 4) (pow.f64 cosTheta 6)) (*.f64 (log.f64 alpha) (PI.f64)))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 alpha) (PI.f64)))))))","(/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))))","(/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))))","(/.f64 -1/2 (PI.f64))","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64))) (*.f64 1/2 (/.f64 1 (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64))) (*.f64 1/2 (/.f64 1 (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64))) (*.f64 1/2 (/.f64 1 (PI.f64))))","(*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64)))","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64))) (*.f64 1/2 (/.f64 1 (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64))) (*.f64 1/2 (/.f64 1 (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64))) (*.f64 1/2 (/.f64 1 (PI.f64))))","(*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64)))","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64))) (*.f64 1/2 (/.f64 1 (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64))) (*.f64 1/2 (/.f64 1 (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64))) (*.f64 1/2 (/.f64 1 (PI.f64))))","(*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))","(+.f64 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))","(+.f64 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))","(+.f64 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (log.f64 (/.f64 1 alpha)))) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (log.f64 (/.f64 1 alpha)))) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (log.f64 (/.f64 1 alpha)))) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2)))))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2)))","(+.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))))","(+.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))))","(+.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))))","(log.f64 alpha)","(+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))))","(+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))))","(+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))))","(*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))))","(+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))))","(+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))))","(*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))))","(+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))))","(+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))))","(+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))","(+.f64 1 (+.f64 (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2)) (*.f64 -1 (pow.f64 cosTheta 2))))","(+.f64 1 (+.f64 (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2)) (*.f64 -1 (pow.f64 cosTheta 2))))","(+.f64 1 (+.f64 (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2)) (*.f64 -1 (pow.f64 cosTheta 2))))","(*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 cosTheta 2)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2))))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 cosTheta 2)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2))))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 cosTheta 2)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2))))","(*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 cosTheta 2)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2))))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 cosTheta 2)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2))))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 cosTheta 2)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2))))","1","(+.f64 1 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(+.f64 1 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(+.f64 1 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))","(+.f64 1 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(+.f64 1 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(+.f64 1 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))","(+.f64 1 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(+.f64 1 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(+.f64 1 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))","(/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (PI.f64))))","(/.f64 (/.f64 (/.f64 -1/2 (log.f64 alpha)) (PI.f64)) (-.f64 1 (*.f64 cosTheta cosTheta)))","(/.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta)))","(-.f64 (*.f64 1/2 (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (*.f64 1/2 (*.f64 (*.f64 alpha alpha) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (PI.f64)))) (/.f64 (neg.f64 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2))))))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (PI.f64)))))","(fma.f64 (*.f64 1/2 (*.f64 alpha alpha)) (+.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta))) (/.f64 cosTheta (/.f64 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))) cosTheta))) (/.f64 (/.f64 (/.f64 -1/2 (log.f64 alpha)) (PI.f64)) (-.f64 1 (*.f64 cosTheta cosTheta))))","(fma.f64 (*.f64 alpha alpha) (*.f64 (fma.f64 (/.f64 cosTheta (log.f64 alpha)) (/.f64 cosTheta (*.f64 (PI.f64) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))) (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2) (/.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta))))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 4) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (fma.f64 1/2 (*.f64 (*.f64 alpha alpha) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (PI.f64)))) (/.f64 (neg.f64 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2)))))) (*.f64 -1/2 (/.f64 (*.f64 cosTheta cosTheta) (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (PI.f64)))) (/.f64 (neg.f64 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2))))) (pow.f64 alpha 4)))))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (PI.f64)))))","(fma.f64 1/2 (*.f64 (*.f64 alpha alpha) (+.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta))) (/.f64 cosTheta (/.f64 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))) cosTheta)))) (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (+.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta))) (/.f64 cosTheta (/.f64 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))) cosTheta))) (pow.f64 alpha 4))) (/.f64 (/.f64 (/.f64 -1/2 (log.f64 alpha)) (PI.f64)) (-.f64 1 (*.f64 cosTheta cosTheta)))))","(fma.f64 -1/2 (*.f64 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (-.f64 1 (*.f64 cosTheta cosTheta))) (pow.f64 alpha 4)) (fma.f64 (/.f64 cosTheta (log.f64 alpha)) (/.f64 cosTheta (*.f64 (PI.f64) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))) (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta))))) (fma.f64 (*.f64 alpha alpha) (*.f64 (fma.f64 (/.f64 cosTheta (log.f64 alpha)) (/.f64 cosTheta (*.f64 (PI.f64) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))) (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2) (/.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta)))))","(-.f64 (+.f64 (*.f64 1/2 (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 cosTheta 4) (*.f64 (pow.f64 alpha 6) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 alpha 4) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64)))) (*.f64 -1 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(-.f64 (fma.f64 1/2 (*.f64 (*.f64 alpha alpha) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (PI.f64)))) (/.f64 (neg.f64 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2)))))) (fma.f64 1/2 (/.f64 (pow.f64 cosTheta 4) (/.f64 (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2) (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (PI.f64)))) (/.f64 (neg.f64 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2))))) (pow.f64 alpha 6)))) (*.f64 -1/2 (/.f64 (*.f64 cosTheta cosTheta) (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (PI.f64)))) (/.f64 (neg.f64 (*.f64 cosTheta cosTheta)) (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2))))) (pow.f64 alpha 4))))))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (PI.f64)))))","(+.f64 (*.f64 1/2 (+.f64 (*.f64 (*.f64 alpha alpha) (+.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta))) (/.f64 cosTheta (/.f64 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))) cosTheta)))) (*.f64 (/.f64 (pow.f64 cosTheta 4) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2)) (*.f64 (+.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta))) (/.f64 cosTheta (/.f64 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))) cosTheta))) (pow.f64 alpha 6))))) (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (+.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta))) (/.f64 cosTheta (/.f64 (*.f64 (log.f64 alpha) (*.f64 (PI.f64) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))) cosTheta))) (pow.f64 alpha 4))) (/.f64 (/.f64 (/.f64 -1/2 (log.f64 alpha)) (PI.f64)) (-.f64 1 (*.f64 cosTheta cosTheta)))))","(fma.f64 1/2 (fma.f64 alpha (*.f64 alpha (fma.f64 (/.f64 cosTheta (log.f64 alpha)) (/.f64 cosTheta (*.f64 (PI.f64) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))) (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 (*.f64 (/.f64 (pow.f64 cosTheta 4) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2)) (pow.f64 alpha 6)) (fma.f64 (/.f64 cosTheta (log.f64 alpha)) (/.f64 cosTheta (*.f64 (PI.f64) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))) (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta)))))) (fma.f64 -1/2 (*.f64 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (-.f64 1 (*.f64 cosTheta cosTheta))) (pow.f64 alpha 4)) (fma.f64 (/.f64 cosTheta (log.f64 alpha)) (/.f64 cosTheta (*.f64 (PI.f64) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2))) (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta))))) (/.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (-.f64 1 (*.f64 cosTheta cosTheta)))))","(/.f64 -1/2 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 -1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))","(/.f64 -1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))","(/.f64 (/.f64 -1/2 (neg.f64 (log.f64 alpha))) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (pow.f64 alpha 2))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))","(-.f64 (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (neg.f64 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))) (*.f64 alpha alpha))) (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))))","(fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))))) (*.f64 alpha alpha)) (/.f64 -1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))))","(fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta (neg.f64 cosTheta)) (PI.f64)))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))))) (*.f64 alpha alpha)) (/.f64 (/.f64 -1/2 (neg.f64 (log.f64 alpha))) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (pow.f64 alpha 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))","(-.f64 (fma.f64 1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (neg.f64 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))) (*.f64 alpha alpha)) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (neg.f64 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))) (/.f64 (*.f64 (*.f64 cosTheta cosTheta) (pow.f64 alpha 4)) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))) (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))))","(fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))))) (*.f64 alpha alpha)) (fma.f64 -1/2 (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 cosTheta cosTheta)) (/.f64 (+.f64 (/.f64 1 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))))) (pow.f64 alpha 4))) (/.f64 -1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))))))","(fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta (neg.f64 cosTheta)) (PI.f64)))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))))) (*.f64 alpha alpha)) (fma.f64 -1/2 (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 cosTheta cosTheta)) (/.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta (neg.f64 cosTheta)) (PI.f64)))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))))) (pow.f64 alpha 4))) (/.f64 (/.f64 -1/2 (neg.f64 (log.f64 alpha))) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6)))) (+.f64 (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (pow.f64 alpha 2))) (*.f64 -1/2 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 4)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))","(-.f64 (fma.f64 1/2 (*.f64 (/.f64 (-.f64 (/.f64 1 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (neg.f64 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))) (pow.f64 cosTheta 4)) (/.f64 (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2) (pow.f64 alpha 6))) (fma.f64 1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (neg.f64 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))) (*.f64 alpha alpha)) (*.f64 -1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (neg.f64 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (pow.f64 cosTheta 4)))))) (/.f64 (*.f64 (*.f64 cosTheta cosTheta) (pow.f64 alpha 4)) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))))) (/.f64 1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))))","(fma.f64 1/2 (*.f64 (/.f64 (+.f64 (/.f64 1 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))))) (*.f64 (pow.f64 cosTheta 4) (pow.f64 alpha 6))) (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2)) (fma.f64 1/2 (/.f64 (+.f64 (/.f64 1 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))))) (*.f64 alpha alpha)) (fma.f64 -1/2 (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 cosTheta cosTheta)) (/.f64 (+.f64 (/.f64 1 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))))) (pow.f64 alpha 4))) (/.f64 -1/2 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))))))","(fma.f64 1/2 (fma.f64 (-.f64 (/.f64 (/.f64 1 (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))) (pow.f64 cosTheta 6)) (/.f64 (/.f64 (+.f64 -1 (*.f64 cosTheta cosTheta)) (neg.f64 (log.f64 alpha))) (*.f64 (PI.f64) (pow.f64 cosTheta 8)))) (/.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (pow.f64 alpha 6)) (/.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta (neg.f64 cosTheta)) (PI.f64)))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))))) (*.f64 alpha alpha))) (fma.f64 -1/2 (*.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 cosTheta cosTheta)) (/.f64 (+.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta (neg.f64 cosTheta)) (PI.f64)))) (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))))) (pow.f64 alpha 4))) (/.f64 (/.f64 -1/2 (neg.f64 (log.f64 alpha))) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))))","(/.f64 1/2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 (/.f64 1/2 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha))))) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))","(/.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (PI.f64) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha))))))","(/.f64 (/.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))) (*.f64 cosTheta (*.f64 cosTheta (PI.f64))))","(-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(-.f64 (/.f64 (/.f64 1/2 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha))))) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))) (/.f64 1/2 (*.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha)))) (*.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (pow.f64 cosTheta 4))))))","(+.f64 (/.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (PI.f64) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))))) (/.f64 -1/2 (*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))))))","(+.f64 (/.f64 (/.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (/.f64 (/.f64 -1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (*.f64 alpha alpha)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 4) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 2) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(-.f64 (fma.f64 1/2 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 4) (*.f64 (PI.f64) (pow.f64 cosTheta 6))))) (/.f64 (/.f64 1/2 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha))))) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))) (/.f64 1/2 (*.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha)))) (*.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (pow.f64 cosTheta 4))))))","(+.f64 (fma.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 alpha 4) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 6)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))))) (/.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (PI.f64) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha))))))) (/.f64 -1/2 (*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))))))","(+.f64 (/.f64 (/.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (fma.f64 1/2 (/.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 6) (*.f64 (PI.f64) (pow.f64 alpha 4)))) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))) (/.f64 (/.f64 -1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (*.f64 alpha alpha))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 4) (*.f64 (pow.f64 cosTheta 6) (PI.f64)))))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 6) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))))) (*.f64 1/2 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(-.f64 (fma.f64 1/2 (/.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) (*.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 4) (*.f64 (PI.f64) (pow.f64 cosTheta 6))))) (fma.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))) 2) (*.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 6) (*.f64 (PI.f64) (pow.f64 cosTheta 8))))) (/.f64 (/.f64 1/2 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha))))) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))))) (/.f64 1/2 (*.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha)))) (*.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (pow.f64 cosTheta 4))))))","(+.f64 (fma.f64 1/2 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 alpha 4) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 6)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))))) (fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (*.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha))) (*.f64 (pow.f64 alpha 6) (*.f64 (PI.f64) (pow.f64 cosTheta 8))))) (/.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (PI.f64) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))))))) (/.f64 -1/2 (*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))))))","(fma.f64 1/2 (/.f64 (/.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) (*.f64 (pow.f64 cosTheta 6) (*.f64 (PI.f64) (pow.f64 alpha 4)))) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))) (+.f64 (/.f64 (/.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))) (*.f64 cosTheta (*.f64 cosTheta (PI.f64)))) (fma.f64 -1/2 (/.f64 (/.f64 (pow.f64 (-.f64 1 (*.f64 cosTheta cosTheta)) 2) (*.f64 (PI.f64) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 8)))) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))) (/.f64 (/.f64 -1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (*.f64 alpha alpha)))))))","(*.f64 1/2 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (PI.f64))))","(*.f64 1/2 (/.f64 (+.f64 (*.f64 alpha alpha) -1) (*.f64 (log.f64 alpha) (PI.f64))))","(*.f64 1/2 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 alpha) (PI.f64))))","(*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (PI.f64)))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 alpha) (PI.f64)))))","(fma.f64 1/2 (/.f64 (+.f64 (*.f64 alpha alpha) -1) (*.f64 (log.f64 alpha) (PI.f64))) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2) (/.f64 (*.f64 (log.f64 alpha) (PI.f64)) (*.f64 cosTheta cosTheta)))))","(fma.f64 -1/2 (*.f64 (/.f64 cosTheta (/.f64 (log.f64 alpha) cosTheta)) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (PI.f64))) (*.f64 1/2 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 alpha) (PI.f64)))))","(fma.f64 -1/2 (/.f64 (*.f64 cosTheta cosTheta) (/.f64 (log.f64 alpha) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (PI.f64)))) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (PI.f64)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 alpha) (PI.f64)))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 alpha) (PI.f64))))))","(fma.f64 1/2 (/.f64 (+.f64 (*.f64 alpha alpha) -1) (*.f64 (log.f64 alpha) (PI.f64))) (fma.f64 -1/2 (/.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2) (/.f64 (*.f64 (log.f64 alpha) (PI.f64)) (*.f64 cosTheta cosTheta))) (*.f64 1/2 (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 3) (log.f64 alpha)) (/.f64 (pow.f64 cosTheta 4) (PI.f64))))))","(fma.f64 1/2 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 alpha) (PI.f64))) (fma.f64 -1/2 (*.f64 (/.f64 cosTheta (/.f64 (log.f64 alpha) cosTheta)) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (PI.f64))) (*.f64 1/2 (/.f64 (pow.f64 cosTheta 4) (/.f64 (*.f64 (log.f64 alpha) (PI.f64)) (pow.f64 (fma.f64 alpha alpha -1) 3))))))","(fma.f64 -1/2 (/.f64 (*.f64 cosTheta cosTheta) (/.f64 (log.f64 alpha) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (PI.f64)))) (*.f64 (/.f64 1/2 (log.f64 alpha)) (+.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)) (/.f64 (pow.f64 cosTheta 4) (/.f64 (PI.f64) (pow.f64 (fma.f64 alpha alpha -1) 3))))))","(+.f64 (*.f64 1/2 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (PI.f64)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 alpha) (PI.f64)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 4) (pow.f64 cosTheta 6)) (*.f64 (log.f64 alpha) (PI.f64)))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 alpha) (PI.f64)))))))","(fma.f64 1/2 (/.f64 (+.f64 (*.f64 alpha alpha) -1) (*.f64 (log.f64 alpha) (PI.f64))) (fma.f64 -1/2 (/.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2) (/.f64 (*.f64 (log.f64 alpha) (PI.f64)) (*.f64 cosTheta cosTheta))) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 4) (log.f64 alpha)) (/.f64 (pow.f64 cosTheta 6) (PI.f64))) (*.f64 1/2 (*.f64 (/.f64 (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 3) (log.f64 alpha)) (/.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(fma.f64 1/2 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 alpha) (PI.f64))) (fma.f64 -1/2 (*.f64 (/.f64 cosTheta (/.f64 (log.f64 alpha) cosTheta)) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (PI.f64))) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 cosTheta 6) (log.f64 alpha)) (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 4) (PI.f64))) (*.f64 1/2 (/.f64 (pow.f64 cosTheta 4) (/.f64 (*.f64 (log.f64 alpha) (PI.f64)) (pow.f64 (fma.f64 alpha alpha -1) 3)))))))","(+.f64 (*.f64 (/.f64 -1/2 (log.f64 alpha)) (+.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (/.f64 cosTheta (PI.f64)) cosTheta)) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 4) (/.f64 (pow.f64 cosTheta 6) (PI.f64))))) (*.f64 (/.f64 1/2 (log.f64 alpha)) (+.f64 (/.f64 (pow.f64 cosTheta 4) (/.f64 (PI.f64) (pow.f64 (fma.f64 alpha alpha -1) 3))) (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))))","(/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))","(/.f64 1/2 (*.f64 (PI.f64) (*.f64 (*.f64 (log.f64 alpha) cosTheta) cosTheta)))","(/.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64))","(-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(-.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (+.f64 (*.f64 alpha alpha) -1)))))","(+.f64 (/.f64 1/2 (*.f64 (PI.f64) (*.f64 (*.f64 (log.f64 alpha) cosTheta) cosTheta))) (/.f64 -1/2 (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (*.f64 (log.f64 alpha) (fma.f64 alpha alpha -1)))))","(+.f64 (/.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (fma.f64 alpha alpha -1)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(-.f64 (+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 6)) (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2))))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (+.f64 (*.f64 alpha alpha) -1)))))","(+.f64 (/.f64 1/2 (*.f64 (PI.f64) (*.f64 (*.f64 (log.f64 alpha) cosTheta) cosTheta))) (+.f64 (/.f64 1/2 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 6)) (log.f64 alpha)))) (/.f64 -1/2 (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (*.f64 (log.f64 alpha) (fma.f64 alpha alpha -1))))))","(+.f64 (/.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)) (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (PI.f64)) (pow.f64 cosTheta 6)))) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (fma.f64 alpha alpha -1))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))))","(-.f64 (+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 6)) (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2))))) (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (+.f64 (*.f64 alpha alpha) -1)))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 8)) (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 3))))))","(+.f64 (+.f64 (/.f64 1/2 (*.f64 (PI.f64) (*.f64 (*.f64 (log.f64 alpha) cosTheta) cosTheta))) (-.f64 (/.f64 1/2 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 6)) (log.f64 alpha)))) (/.f64 1/2 (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 8)) (*.f64 (log.f64 alpha) (pow.f64 (fma.f64 alpha alpha -1) 3)))))) (/.f64 -1/2 (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (*.f64 (log.f64 alpha) (fma.f64 alpha alpha -1)))))","(+.f64 (/.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)) (+.f64 (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (PI.f64)) (pow.f64 cosTheta 6)))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 8) (*.f64 (PI.f64) (pow.f64 (fma.f64 alpha alpha -1) 3)))))) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (fma.f64 alpha alpha -1))))))","(/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))","(/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64)))","(/.f64 1/2 (*.f64 (PI.f64) (*.f64 (*.f64 (log.f64 alpha) cosTheta) cosTheta)))","(/.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64))","(-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(-.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (+.f64 (*.f64 alpha alpha) -1)))))","(+.f64 (/.f64 1/2 (*.f64 (PI.f64) (*.f64 (*.f64 (log.f64 alpha) cosTheta) cosTheta))) (/.f64 -1/2 (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (*.f64 (log.f64 alpha) (fma.f64 alpha alpha -1)))))","(+.f64 (/.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (fma.f64 alpha alpha -1)))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64)))))))","(-.f64 (+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 6)) (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2))))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (+.f64 (*.f64 alpha alpha) -1)))))","(+.f64 (/.f64 1/2 (*.f64 (PI.f64) (*.f64 (*.f64 (log.f64 alpha) cosTheta) cosTheta))) (+.f64 (/.f64 1/2 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 6)) (log.f64 alpha)))) (/.f64 -1/2 (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (*.f64 (log.f64 alpha) (fma.f64 alpha alpha -1))))))","(+.f64 (/.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)) (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (PI.f64)) (pow.f64 cosTheta 6)))) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (fma.f64 alpha alpha -1))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 2) (PI.f64))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (*.f64 (pow.f64 cosTheta 6) (PI.f64))))))) (+.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (pow.f64 cosTheta 8) (PI.f64)))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (pow.f64 cosTheta 4) (PI.f64))))))))","(-.f64 (+.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (PI.f64))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 6)) (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 2))))) (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (+.f64 (*.f64 alpha alpha) -1)))) (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 8)) (pow.f64 (+.f64 (*.f64 alpha alpha) -1) 3))))))","(+.f64 (+.f64 (/.f64 1/2 (*.f64 (PI.f64) (*.f64 (*.f64 (log.f64 alpha) cosTheta) cosTheta))) (-.f64 (/.f64 1/2 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 6)) (log.f64 alpha)))) (/.f64 1/2 (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 8)) (*.f64 (log.f64 alpha) (pow.f64 (fma.f64 alpha alpha -1) 3)))))) (/.f64 -1/2 (*.f64 (*.f64 (PI.f64) (pow.f64 cosTheta 4)) (*.f64 (log.f64 alpha) (fma.f64 alpha alpha -1)))))","(+.f64 (/.f64 (/.f64 (/.f64 1/2 (log.f64 alpha)) (*.f64 cosTheta cosTheta)) (PI.f64)) (+.f64 (+.f64 (/.f64 1/2 (*.f64 (log.f64 alpha) (*.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (PI.f64)) (pow.f64 cosTheta 6)))) (/.f64 -1/2 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 8) (*.f64 (PI.f64) (pow.f64 (fma.f64 alpha alpha -1) 3)))))) (/.f64 (/.f64 -1/2 (log.f64 alpha)) (*.f64 (pow.f64 cosTheta 4) (*.f64 (PI.f64) (fma.f64 alpha alpha -1))))))","(/.f64 -1/2 (PI.f64))","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64))) (*.f64 1/2 (/.f64 1 (PI.f64))))","(fma.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)) (neg.f64 (/.f64 1/2 (PI.f64))))","(fma.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)) (/.f64 -1/2 (PI.f64)))","(*.f64 1/2 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64))) (*.f64 1/2 (/.f64 1 (PI.f64))))","(fma.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)) (neg.f64 (/.f64 1/2 (PI.f64))))","(fma.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)) (/.f64 -1/2 (PI.f64)))","(*.f64 1/2 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64))) (*.f64 1/2 (/.f64 1 (PI.f64))))","(fma.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)) (neg.f64 (/.f64 1/2 (PI.f64))))","(fma.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)) (/.f64 -1/2 (PI.f64)))","(*.f64 1/2 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))","(*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64)))","(*.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)))","(*.f64 1/2 (*.f64 (/.f64 alpha (PI.f64)) alpha))","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64))) (*.f64 1/2 (/.f64 1 (PI.f64))))","(fma.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)) (neg.f64 (/.f64 1/2 (PI.f64))))","(fma.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)) (/.f64 -1/2 (PI.f64)))","(*.f64 1/2 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64))) (*.f64 1/2 (/.f64 1 (PI.f64))))","(fma.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)) (neg.f64 (/.f64 1/2 (PI.f64))))","(fma.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)) (/.f64 -1/2 (PI.f64)))","(*.f64 1/2 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64))) (*.f64 1/2 (/.f64 1 (PI.f64))))","(fma.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)) (neg.f64 (/.f64 1/2 (PI.f64))))","(fma.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)) (/.f64 -1/2 (PI.f64)))","(*.f64 1/2 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))","(*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64)))","(*.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)))","(*.f64 1/2 (*.f64 (/.f64 alpha (PI.f64)) alpha))","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64))) (*.f64 1/2 (/.f64 1 (PI.f64))))","(fma.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)) (neg.f64 (/.f64 1/2 (PI.f64))))","(fma.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)) (/.f64 -1/2 (PI.f64)))","(*.f64 1/2 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64))) (*.f64 1/2 (/.f64 1 (PI.f64))))","(fma.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)) (neg.f64 (/.f64 1/2 (PI.f64))))","(fma.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)) (/.f64 -1/2 (PI.f64)))","(*.f64 1/2 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))","(-.f64 (*.f64 1/2 (/.f64 (pow.f64 alpha 2) (PI.f64))) (*.f64 1/2 (/.f64 1 (PI.f64))))","(fma.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)) (neg.f64 (/.f64 1/2 (PI.f64))))","(fma.f64 1/2 (/.f64 (*.f64 alpha alpha) (PI.f64)) (/.f64 -1/2 (PI.f64)))","(*.f64 1/2 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))","(*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))","(*.f64 (log.f64 alpha) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))","(*.f64 (log.f64 alpha) (-.f64 1 (*.f64 cosTheta cosTheta)))","(+.f64 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))","(*.f64 (log.f64 alpha) (+.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))","(*.f64 (log.f64 alpha) (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))","(+.f64 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))","(*.f64 (log.f64 alpha) (+.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))","(*.f64 (log.f64 alpha) (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))","(+.f64 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (*.f64 (log.f64 alpha) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))","(*.f64 (log.f64 alpha) (+.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))","(*.f64 (log.f64 alpha) (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))","(*.f64 -1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2))))","(neg.f64 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha))))","(*.f64 (neg.f64 (log.f64 alpha)) (neg.f64 (*.f64 (*.f64 cosTheta alpha) (*.f64 cosTheta alpha))))","(*.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (*.f64 alpha alpha)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (log.f64 (/.f64 1 alpha)))) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2)))))","(*.f64 (log.f64 alpha) (+.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))","(*.f64 (log.f64 alpha) (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))","(+.f64 (*.f64 -1 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (log.f64 (/.f64 1 alpha)))) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2)))))","(*.f64 (log.f64 alpha) (+.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))","(*.f64 (log.f64 alpha) (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))","(+.f64 (*.f64 -1 (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (log.f64 (/.f64 1 alpha)))) (*.f64 -1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2)))))","(*.f64 (log.f64 alpha) (+.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))","(*.f64 (log.f64 alpha) (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))","(*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2)))","(*.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha)))) (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)))","(*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 cosTheta cosTheta) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))))","(+.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))))","(*.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha)))) (+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta)))))","(*.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha))) (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))","(+.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))))","(*.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha)))) (+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta)))))","(*.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha))) (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))","(+.f64 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))))","(*.f64 (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha)))) (+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta)))))","(*.f64 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha))) (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))","(log.f64 alpha)","(+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))))","(*.f64 (log.f64 alpha) (+.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))","(*.f64 (log.f64 alpha) (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))","(+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))))","(*.f64 (log.f64 alpha) (+.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))","(*.f64 (log.f64 alpha) (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))","(+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))))","(*.f64 (log.f64 alpha) (+.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))","(*.f64 (log.f64 alpha) (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))","(*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (+.f64 (*.f64 alpha alpha) -1)))","(*.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (log.f64 alpha) cosTheta) cosTheta))","(*.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (fma.f64 alpha alpha -1)))","(+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))))","(*.f64 (log.f64 alpha) (+.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))","(*.f64 (log.f64 alpha) (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))","(+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))))","(*.f64 (log.f64 alpha) (+.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))","(*.f64 (log.f64 alpha) (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))","(+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))))","(*.f64 (log.f64 alpha) (+.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))","(*.f64 (log.f64 alpha) (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))","(*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (+.f64 (*.f64 alpha alpha) -1)))","(*.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (log.f64 alpha) cosTheta) cosTheta))","(*.f64 (*.f64 cosTheta cosTheta) (*.f64 (log.f64 alpha) (fma.f64 alpha alpha -1)))","(+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))))","(*.f64 (log.f64 alpha) (+.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))","(*.f64 (log.f64 alpha) (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))","(+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))))","(*.f64 (log.f64 alpha) (+.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))","(*.f64 (log.f64 alpha) (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))","(+.f64 (log.f64 alpha) (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))))","(*.f64 (log.f64 alpha) (+.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))","(*.f64 (log.f64 alpha) (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))","(+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))","(+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))","(-.f64 1 (*.f64 cosTheta cosTheta))","(+.f64 1 (+.f64 (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2)) (*.f64 -1 (pow.f64 cosTheta 2))))","(+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)","(+.f64 1 (+.f64 (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2)) (*.f64 -1 (pow.f64 cosTheta 2))))","(+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)","(+.f64 1 (+.f64 (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2)) (*.f64 -1 (pow.f64 cosTheta 2))))","(+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)","(*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2))","(*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha))","(*.f64 (*.f64 cosTheta alpha) (*.f64 cosTheta alpha))","(*.f64 alpha (*.f64 alpha (*.f64 cosTheta cosTheta)))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 cosTheta 2)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2))))","(+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 cosTheta 2)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2))))","(+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 cosTheta 2)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2))))","(+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)","(*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2))","(*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha))","(*.f64 (*.f64 cosTheta alpha) (*.f64 cosTheta alpha))","(*.f64 alpha (*.f64 alpha (*.f64 cosTheta cosTheta)))","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 cosTheta 2)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2))))","(+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 cosTheta 2)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2))))","(+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)","(+.f64 1 (+.f64 (*.f64 -1 (pow.f64 cosTheta 2)) (*.f64 (pow.f64 cosTheta 2) (pow.f64 alpha 2))))","(+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)","1","(+.f64 1 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)","(+.f64 1 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)","(+.f64 1 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))","(*.f64 (*.f64 cosTheta cosTheta) (+.f64 (*.f64 alpha alpha) -1))","(*.f64 cosTheta (*.f64 cosTheta (fma.f64 alpha alpha -1)))","(+.f64 1 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)","(+.f64 1 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)","(+.f64 1 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)","(*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))","(*.f64 (*.f64 cosTheta cosTheta) (+.f64 (*.f64 alpha alpha) -1))","(*.f64 cosTheta (*.f64 cosTheta (fma.f64 alpha alpha -1)))","(+.f64 1 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)","(+.f64 1 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)","(+.f64 1 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))","(+.f64 1 (fma.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha) (neg.f64 (*.f64 cosTheta cosTheta))))","(fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)"]],"stop":[["node limit",1]],"time":53.432861328125,"type":"simplify"},{"compiler":[[7231,4438]],"time":77.55517578125,"type":"eval"},{"alts":[["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha)))","next",0.43882753907376804],["(/.f64 (/.f64 1 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (fma.f64 alpha alpha -1)))","fresh",0.5678101562950724],["(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","fresh",0.9436053469121758],["(pow.f64 (/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1)","done",0.44657639138884375],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (cbrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))))) (log.f64 (cbrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.5033188476844203],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (/.f64 (+.f64 (pow.f64 (log.f64 alpha) 3) (pow.f64 (log.f64 alpha) 3)) (fma.f64 (log.f64 alpha) (log.f64 alpha) (-.f64 (*.f64 (log.f64 alpha) (log.f64 alpha)) (*.f64 (log.f64 alpha) (log.f64 alpha)))))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.6097514281472842],["(*.f64 (/.f64 1 (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 2))) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))","fresh",0.5098801758319564],["(*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","fresh",0.5243825876171498],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (+.f64 (log.f64 (sqrt.f64 (pow.f64 alpha (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (pow.f64 alpha (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))","fresh",0.49851534203813186]],"compiler":[[39,27],[25,18],[61,49],[25,17],[42,20],[48,25],[36,26],[23,16],[38,25],[39,27],[25,18],[61,49],[42,20],[48,25],[36,26],[23,16],[38,25]],"count":[[234,9]],"kept":[{"done":[1,1],"fresh":[7,5],"new":[225,3],"picked":[1,0]}],"min-error":[0],"time":47.3779296875,"type":"prune"},{"compiler":[[160,92]],"locations":[["(*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha))",0.01171875,true],["(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))",0.015625,true],["(/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2))",0.234375,false],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha)))",0.34994125976844204,true]],"time":45.47998046875,"type":"localize"},{"count":[[3,72]],"series":[["(*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha))","cosTheta","-inf",0.194091796875],["(*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha))","cosTheta","inf",0.52197265625],["(*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha))","cosTheta","0",1.140869140625],["(*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha))","alpha","-inf",5.06787109375],["(*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha))","alpha","inf",3.51708984375],["(*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha))","alpha","0",1.009033203125],["(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","cosTheta","-inf",0.183837890625],["(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","cosTheta","inf",0.172119140625],["(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","cosTheta","0",0.679931640625],["(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","alpha","-inf",27.844970703125],["(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","alpha","inf",9.05419921875],["(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","alpha","0",0.60009765625],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha)))","cosTheta","-inf",0.274169921875],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha)))","cosTheta","inf",14.530029296875],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha)))","cosTheta","0",5.95703125],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha)))","alpha","-inf",4.264892578125],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha)))","alpha","inf",4.33984375],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha)))","alpha","0",4.638916015625]],"time":84.6708984375,"type":"series"},{"count":[[3,110]],"egraph":[[2,4970,39,0.034980541],[1,384,39,0.007036208],[0,19,66,0.000479625]],"inputs":[["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha)))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))) (/.f64 (/.f64 0 0) (log.f64 alpha)))) (cbrt.f64 (pow.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))) (/.f64 (/.f64 0 0) (log.f64 alpha)))))) (log.f64 (cbrt.f64 (pow.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))) (/.f64 (/.f64 0 0) (log.f64 alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))) (/.f64 (/.f64 0 0) (log.f64 alpha))))) (log.f64 (sqrt.f64 (pow.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))) (/.f64 (/.f64 0 0) (log.f64 alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 alpha alpha -1) (/.f64 1 (*.f64 (*.f64 (PI.f64) 2) (*.f64 (/.f64 0 0) (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64))) (/.f64 (/.f64 0 0) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 0 0) (/.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64))) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) 2) (*.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) (/.f64 (/.f64 0 0) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha))))) (pow.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha))))) 2) (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) (*.f64 (sqrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) (/.f64 (/.f64 0 0) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha))))) (sqrt.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (neg.f64 (fma.f64 alpha alpha -1)) (/.f64 1/2 (PI.f64))) (/.f64 1 (*.f64 (/.f64 0 0) (neg.f64 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (/.f64 0 0) (log.f64 alpha)) (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64))) (/.f64 0 0)) (/.f64 1 (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) 1) (/.f64 (/.f64 1/2 (PI.f64)) (*.f64 (/.f64 0 0) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) 2) 1) (/.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) (*.f64 (/.f64 0 0) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) 1) (/.f64 (sqrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) (*.f64 (/.f64 0 0) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) (/.f64 0 0)) (/.f64 (sqrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) 2) (*.f64 (/.f64 0 0) (log.f64 alpha))) (/.f64 (cbrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (/.f64 0 0) (log.f64 alpha))) (/.f64 (sqrt.f64 (fma.f64 alpha alpha -1)) (*.f64 (PI.f64) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (/.f64 0 0)) (/.f64 (/.f64 1/2 (PI.f64)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) 2) (/.f64 0 0)) (/.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) (log.f64 alpha)) (/.f64 (sqrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) (/.f64 0 0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (/.f64 0 0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (log.f64 alpha)) (*.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64))) (/.f64 0 0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) 2) (log.f64 alpha)) (/.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) (/.f64 0 0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (pow.f64 (*.f64 (/.f64 0 0) (cbrt.f64 (log.f64 alpha))) 2)) (/.f64 (/.f64 1/2 (PI.f64)) (*.f64 (/.f64 0 0) (cbrt.f64 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (*.f64 (/.f64 0 0) (cbrt.f64 (log.f64 alpha))) 2)) (/.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64))) (*.f64 (/.f64 0 0) (cbrt.f64 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) 2) (pow.f64 (*.f64 (/.f64 0 0) (cbrt.f64 (log.f64 alpha))) 2)) (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) (pow.f64 (*.f64 (/.f64 0 0) (cbrt.f64 (log.f64 alpha))) 2)) (/.f64 (sqrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) (*.f64 (/.f64 0 0) (cbrt.f64 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 0 0) (sqrt.f64 (log.f64 alpha)))) (/.f64 (/.f64 1/2 (PI.f64)) (*.f64 (/.f64 0 0) (sqrt.f64 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (/.f64 0 0) (sqrt.f64 (log.f64 alpha)))) (/.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64))) (*.f64 (/.f64 0 0) (sqrt.f64 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) 2) (*.f64 (/.f64 0 0) (sqrt.f64 (log.f64 alpha)))) (/.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64)))) (*.f64 (/.f64 0 0) (sqrt.f64 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (/.f64 0 0) (log.f64 alpha)) (*.f64 2 (/.f64 (PI.f64) (fma.f64 alpha alpha -1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64))) (*.f64 (/.f64 0 0) (neg.f64 (log.f64 alpha)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 alpha alpha -1) (PI.f64)))) (/.f64 (/.f64 0 0) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (fma.f64 alpha alpha -1) (/.f64 1/2 (PI.f64))) 3) (pow.f64 (*.f64 (/.f64 0 0) (log.f64 alpha)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (fma.f64 alpha alpha -1) (*.f64 (/.f64 1/2 (PI.f64)) (/.f64 (/.f64 0 0) (log.f64 alpha))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 0 0)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 1/2 (/.f64 0 0)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/4 (/.f64 0 0)) (*.f64 1/4 (/.f64 0 0)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (*.f64 1/2 (/.f64 0 0))) (*.f64 1/3 (/.f64 0 0)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (/.f64 0 0)) (*.f64 1/3 (*.f64 1/2 (/.f64 0 0))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 0 0))) 2))) (log.f64 (sqrt.f64 (cbrt.f64 (exp.f64 (/.f64 0 0))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 1 1/2)) (*.f64 1/2 (/.f64 0 0)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 0 0))) 2) 1/2)) (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 0 0))) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 1/2 (/.f64 0 0)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 1/4 (/.f64 0 0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 1/2 (/.f64 0 0)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (/.f64 0 0)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/2 (/.f64 0 0))) (pow.f64 (cbrt.f64 (*.f64 1/2 (/.f64 0 0))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 1/2 (/.f64 0 0))) 2) (cbrt.f64 (*.f64 1/2 (/.f64 0 0))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 1/2 (/.f64 0 0))) (sqrt.f64 (*.f64 1/2 (/.f64 0 0))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (/.f64 0 0))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 1/3 (*.f64 1/2 (/.f64 0 0))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (*.f64 3/2 (/.f64 0 0)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/2 (/.f64 0 0)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/2 (/.f64 0 0))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 1/2 (/.f64 0 0))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 1/2 (/.f64 0 0)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 1/2 (/.f64 0 0)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 1/2 (/.f64 0 0)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 1/2 (/.f64 0 0))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 1/2 (/.f64 0 0))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 1/2 (/.f64 0 0))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 1/2 (/.f64 0 0))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 0 0) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/2 (/.f64 0 0)) (log.f64 alpha)) (*.f64 (*.f64 1/2 (/.f64 0 0)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 (/.f64 0 0) 1) (log.f64 alpha)) (log.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 alpha) (*.f64 1/2 (/.f64 0 0))) (*.f64 (log.f64 alpha) (*.f64 1/2 (/.f64 0 0))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (log.f64 alpha) (-.f64 (/.f64 0 0) 1)) (log.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 alpha (/.f64 0 0))) (cbrt.f64 (pow.f64 alpha (/.f64 0 0))))) (log.f64 (cbrt.f64 (pow.f64 alpha (/.f64 0 0)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 alpha (/.f64 0 0)))) (log.f64 (sqrt.f64 (pow.f64 alpha (/.f64 0 0)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 0 0) (log.f64 alpha)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 2 (pow.f64 (*.f64 1/2 (/.f64 0 0)) 3)) (log.f64 alpha)) (+.f64 0 (pow.f64 (*.f64 1/2 (/.f64 0 0)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 0 (log.f64 alpha)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log.f64 alpha) (*.f64 2 (pow.f64 (*.f64 1/2 (/.f64 0 0)) 3))) (+.f64 0 (pow.f64 (*.f64 1/2 (/.f64 0 0)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (log.f64 alpha) 0) 0)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 0 0) (log.f64 alpha)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 0 0) (log.f64 alpha)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 0 0) (cbrt.f64 (log.f64 alpha))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 0 0) (sqrt.f64 (log.f64 alpha))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (/.f64 0 0) (pow.f64 (log.f64 alpha) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 alpha (/.f64 0 0)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (-.f64 (pow.f64 alpha (/.f64 0 0)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 0 0) (log.f64 alpha)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (/.f64 0 0) (pow.f64 (log.f64 alpha) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (log.f64 alpha) 3) (/.f64 0 0)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 0 0) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (pow.f64 alpha (/.f64 0 0)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 0 0) (log.f64 alpha))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 0 0) (log.f64 alpha))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (/.f64 0 0)) (log.f64 alpha) (*.f64 (*.f64 1/2 (/.f64 0 0)) (log.f64 alpha)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 alpha) (*.f64 1/2 (/.f64 0 0)) (*.f64 (log.f64 alpha) (*.f64 1/2 (/.f64 0 0))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (log.f64 alpha) (-.f64 (/.f64 0 0) 1) (log.f64 alpha))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 0 0) 1) (log.f64 alpha) (log.f64 alpha))))))"]],"rules":[["egg-rr",30],["egg-rr",28],["egg-rr",52]],"stop":[["node limit",1]],"time":68.201171875,"type":"rewrite"},{"count":[[182,175]],"egraph":[[3,7592,5077,0.035743168000000006],[2,4498,5231,0.021495126000000003],[1,1059,5361,0.008390417],[0,311,5855,0.001832125]],"inputs":[["(/.f64 -1/4 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 (log.f64 alpha) (PI.f64))))","(-.f64 (*.f64 1/4 (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (PI.f64)))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (PI.f64)))))))) (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (PI.f64))))))","(-.f64 (+.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 -1/24 (/.f64 (+.f64 (*.f64 -3 (pow.f64 cosTheta 4)) (*.f64 12 (/.f64 (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2)) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (PI.f64))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 (log.f64 alpha) (PI.f64)))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (*.f64 (log.f64 alpha) (PI.f64)))))) (pow.f64 cosTheta 2)) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))))) (pow.f64 alpha 4))) (*.f64 1/4 (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (PI.f64)))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (PI.f64))))))))) (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (PI.f64))))))","(-.f64 (+.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 1/24 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 (log.f64 alpha) (PI.f64)))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (*.f64 (log.f64 alpha) (PI.f64)))))) (+.f64 (*.f64 -3 (pow.f64 cosTheta 4)) (*.f64 12 (/.f64 (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2)) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/24 (/.f64 (+.f64 (*.f64 -3 (pow.f64 cosTheta 4)) (*.f64 12 (/.f64 (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2)) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (*.f64 (log.f64 alpha) (PI.f64))))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (PI.f64)))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (PI.f64))))))) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))))) (pow.f64 cosTheta 2)) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))) (*.f64 -1/720 (/.f64 (+.f64 (*.f64 360 (/.f64 (-.f64 (*.f64 1/6 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 6))) (*.f64 1/2 (*.f64 (pow.f64 cosTheta 2) (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2))))) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (+.f64 (*.f64 30 (pow.f64 cosTheta 6)) (*.f64 -180 (/.f64 (*.f64 (pow.f64 cosTheta 2) (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2))) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (PI.f64))))))) (pow.f64 alpha 6))) (+.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 -1/24 (/.f64 (+.f64 (*.f64 -3 (pow.f64 cosTheta 4)) (*.f64 12 (/.f64 (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2)) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (PI.f64))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 (log.f64 alpha) (PI.f64)))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (*.f64 (log.f64 alpha) (PI.f64)))))) (pow.f64 cosTheta 2)) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))))) (pow.f64 alpha 4))) (*.f64 1/4 (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (PI.f64)))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (PI.f64)))))))))) (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (PI.f64))))))","(*.f64 -1/4 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(+.f64 (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))) (*.f64 -1/4 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))))","(+.f64 (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))) (*.f64 -1/4 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))))","(+.f64 (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))) (*.f64 -1/4 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))))","(*.f64 1/4 (/.f64 (pow.f64 alpha 2) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(-.f64 (*.f64 1/4 (/.f64 (pow.f64 alpha 2) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))) (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))))","(-.f64 (*.f64 1/4 (/.f64 (pow.f64 alpha 2) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))) (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))))","(-.f64 (*.f64 1/4 (/.f64 (pow.f64 alpha 2) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))) (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))))","(*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (PI.f64)))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 (exp.f64 1) (E.f64))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64))))))) (*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (PI.f64))))))","(+.f64 (*.f64 -1/4 (*.f64 (pow.f64 cosTheta 4) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 1))) 2) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64)))))) (*.f64 1/24 (/.f64 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (+.f64 (*.f64 12 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)))) (*.f64 -3 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1)) (E.f64))))) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64))))))))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 (exp.f64 1) (E.f64))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64))))))) (*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (PI.f64)))))))","(+.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 -1/48 (*.f64 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (+.f64 (*.f64 12 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)))) (*.f64 -3 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1)) (E.f64))))) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 1))) 2) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64))))) (sqrt.f64 (/.f64 (E.f64) (exp.f64 1))))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 (exp.f64 1) (E.f64))) (/.f64 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2) (PI.f64)))))) (*.f64 1/24 (/.f64 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (+.f64 (*.f64 12 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/2 (*.f64 (E.f64) (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (E.f64))) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (exp.f64 1)))) 2)))) (*.f64 -3 (/.f64 (*.f64 (E.f64) (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2)) (exp.f64 1))))) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64)))))))) (log.f64 (sqrt.f64 (exp.f64 1)))))) (*.f64 1/720 (/.f64 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (+.f64 (*.f64 -180 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)) (-.f64 (pow.f64 alpha 2) 1)) (E.f64))) (+.f64 (*.f64 360 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/6 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (exp.f64 1))) (*.f64 1/2 (/.f64 (*.f64 (E.f64) (*.f64 (-.f64 (*.f64 1/2 (*.f64 (E.f64) (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (E.f64))) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (exp.f64 1)))) 2)) (-.f64 (pow.f64 alpha 2) 1))) (exp.f64 1)))))) (*.f64 30 (*.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 1) 3) (pow.f64 (E.f64) 3))) (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3)))))) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64)))))))) (pow.f64 cosTheta 6))) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 cosTheta 4) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 1))) 2) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64)))))) (*.f64 1/24 (/.f64 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (+.f64 (*.f64 12 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)))) (*.f64 -3 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1)) (E.f64))))) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64))))))))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 (exp.f64 1) (E.f64))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64))))))) (*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (PI.f64))))))))","(*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))","(+.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 1/2 (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))))","(+.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (*.f64 1/24 (*.f64 (pow.f64 alpha 4) (+.f64 (*.f64 -3 (pow.f64 cosTheta 4)) (*.f64 12 (/.f64 (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2)) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))))))","(+.f64 (*.f64 1/720 (*.f64 (pow.f64 alpha 6) (+.f64 (*.f64 360 (/.f64 (-.f64 (*.f64 1/6 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 6))) (*.f64 1/2 (*.f64 (pow.f64 cosTheta 2) (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2))))) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (+.f64 (*.f64 30 (pow.f64 cosTheta 6)) (*.f64 -180 (/.f64 (*.f64 (pow.f64 cosTheta 2) (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2))) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))))) (+.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (*.f64 1/24 (*.f64 (pow.f64 alpha 4) (+.f64 (*.f64 -3 (pow.f64 cosTheta 4)) (*.f64 12 (/.f64 (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2)) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))))))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 1)))","(+.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 (exp.f64 1) (E.f64))) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))))","(+.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 (exp.f64 1) (E.f64))) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))) (*.f64 1/24 (*.f64 (pow.f64 cosTheta 4) (+.f64 (*.f64 12 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)))) (*.f64 -3 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1)) (E.f64))))))))","(+.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (+.f64 (*.f64 1/720 (*.f64 (+.f64 (*.f64 -180 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)) (-.f64 (pow.f64 alpha 2) 1)) (E.f64))) (+.f64 (*.f64 360 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/6 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (exp.f64 1))) (*.f64 1/2 (/.f64 (*.f64 (E.f64) (*.f64 (-.f64 (*.f64 1/2 (*.f64 (E.f64) (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (E.f64))) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (exp.f64 1)))) 2)) (-.f64 (pow.f64 alpha 2) 1))) (exp.f64 1)))))) (*.f64 30 (*.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 1) 3) (pow.f64 (E.f64) 3))) (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3))))) (pow.f64 cosTheta 6))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 (exp.f64 1) (E.f64))) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))) (*.f64 1/24 (*.f64 (pow.f64 cosTheta 4) (+.f64 (*.f64 12 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)))) (*.f64 -3 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1)) (E.f64)))))))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))) (+.f64 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (*.f64 1/12 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 4) (+.f64 (*.f64 -3 (pow.f64 cosTheta 4)) (*.f64 12 (/.f64 (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2)) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))))))))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))) (+.f64 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (+.f64 (*.f64 1/360 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 6) (+.f64 (*.f64 360 (/.f64 (-.f64 (*.f64 1/6 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 6))) (*.f64 1/2 (*.f64 (pow.f64 cosTheta 2) (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2))))) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (+.f64 (*.f64 30 (pow.f64 cosTheta 6)) (*.f64 -180 (/.f64 (*.f64 (pow.f64 cosTheta 2) (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2))) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))))))) (*.f64 1/12 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 4) (+.f64 (*.f64 -3 (pow.f64 cosTheta 4)) (*.f64 12 (/.f64 (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2)) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))))))))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 1)))))","(+.f64 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (sqrt.f64 (/.f64 (exp.f64 1) (E.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 1))))))","(+.f64 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (sqrt.f64 (/.f64 (exp.f64 1) (E.f64)))) (+.f64 (*.f64 1/12 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 4) (+.f64 (*.f64 12 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)))) (*.f64 -3 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1)) (E.f64))))))) (*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 1)))))))","(+.f64 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (sqrt.f64 (/.f64 (exp.f64 1) (E.f64)))) (+.f64 (*.f64 1/360 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 6) (+.f64 (*.f64 -180 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)) (-.f64 (pow.f64 alpha 2) 1)) (E.f64))) (+.f64 (*.f64 360 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/6 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (exp.f64 1))) (*.f64 1/2 (/.f64 (*.f64 (E.f64) (*.f64 (-.f64 (*.f64 1/2 (*.f64 (E.f64) (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (E.f64))) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (exp.f64 1)))) 2)) (-.f64 (pow.f64 alpha 2) 1))) (exp.f64 1)))))) (*.f64 30 (*.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 1) 3) (pow.f64 (E.f64) 3))) (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3)))))))) (+.f64 (*.f64 1/12 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 4) (+.f64 (*.f64 12 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)))) (*.f64 -3 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1)) (E.f64))))))) (*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 1))))))))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 -1/4 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 (log.f64 alpha) (PI.f64))))","(/.f64 -1/4 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 (log.f64 alpha) (PI.f64))))","(/.f64 -1/4 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 (log.f64 alpha) (PI.f64))))","(-.f64 (*.f64 1/4 (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (PI.f64)))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (PI.f64)))))))) (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (PI.f64))))))","(-.f64 (*.f64 (*.f64 1/4 (*.f64 alpha alpha)) (-.f64 (/.f64 1 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 (log.f64 alpha) (PI.f64)))) (/.f64 (*.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (log.f64 alpha) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) 2)) (PI.f64))))) (/.f64 1/4 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 (log.f64 alpha) (PI.f64)))))","(fma.f64 (*.f64 1/4 (*.f64 alpha alpha)) (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))) (/.f64 -1/4 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 (log.f64 alpha) (PI.f64)))))","(*.f64 1/4 (fma.f64 (*.f64 alpha alpha) (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))) (/.f64 -1 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 (log.f64 alpha) (PI.f64))))))","(-.f64 (+.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 -1/24 (/.f64 (+.f64 (*.f64 -3 (pow.f64 cosTheta 4)) (*.f64 12 (/.f64 (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2)) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (PI.f64))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 (log.f64 alpha) (PI.f64)))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (*.f64 (log.f64 alpha) (PI.f64)))))) (pow.f64 cosTheta 2)) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))))) (pow.f64 alpha 4))) (*.f64 1/4 (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (PI.f64)))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (PI.f64))))))))) (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (PI.f64))))))","(-.f64 (fma.f64 -1/4 (*.f64 (fma.f64 -1/24 (/.f64 (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 12 (/.f64 (-.f64 (*.f64 (*.f64 1/2 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (pow.f64 cosTheta 4)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))) 2)) (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))) (*.f64 (*.f64 (log.f64 alpha) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) 2)) (PI.f64))) (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 (log.f64 alpha) (PI.f64)))) (/.f64 (*.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (log.f64 alpha) (PI.f64)) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) 2)))) (/.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 cosTheta cosTheta))))) (pow.f64 alpha 4)) (*.f64 (*.f64 1/4 (*.f64 alpha alpha)) (-.f64 (/.f64 1 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 (log.f64 alpha) (PI.f64)))) (/.f64 (*.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (log.f64 alpha) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) 2)) (PI.f64)))))) (/.f64 1/4 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 (log.f64 alpha) (PI.f64)))))","(fma.f64 -1/4 (*.f64 (pow.f64 alpha 4) (fma.f64 -1/24 (/.f64 (fma.f64 12 (/.f64 (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 -3 (pow.f64 cosTheta 4))) (*.f64 (PI.f64) (*.f64 (log.f64 alpha) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))))))) (fma.f64 (*.f64 1/4 (*.f64 alpha alpha)) (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))) (/.f64 -1/4 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 (log.f64 alpha) (PI.f64))))))","(fma.f64 -1/4 (*.f64 (pow.f64 alpha 4) (fma.f64 -1/24 (/.f64 (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 (/.f64 12 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)))) (*.f64 (PI.f64) (*.f64 (log.f64 alpha) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))))))) (*.f64 1/4 (fma.f64 (*.f64 alpha alpha) (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))) (/.f64 -1 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 (log.f64 alpha) (PI.f64)))))))","(fma.f64 -1/4 (*.f64 (pow.f64 alpha 4) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2))))) (*.f64 (/.f64 -1/24 (log.f64 alpha)) (/.f64 (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 (/.f64 12 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 (pow.f64 cosTheta 4) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/2) (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/4))))) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))))) (*.f64 1/4 (fma.f64 (*.f64 alpha alpha) (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))) (/.f64 -1 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 (log.f64 alpha) (PI.f64)))))))","(-.f64 (+.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 1/24 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 (log.f64 alpha) (PI.f64)))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (*.f64 (log.f64 alpha) (PI.f64)))))) (+.f64 (*.f64 -3 (pow.f64 cosTheta 4)) (*.f64 12 (/.f64 (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2)) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (+.f64 (*.f64 -1/24 (/.f64 (+.f64 (*.f64 -3 (pow.f64 cosTheta 4)) (*.f64 12 (/.f64 (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2)) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (*.f64 (log.f64 alpha) (PI.f64))))) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 cosTheta 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (PI.f64)))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (PI.f64))))))) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))))) (pow.f64 cosTheta 2)) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))) (*.f64 -1/720 (/.f64 (+.f64 (*.f64 360 (/.f64 (-.f64 (*.f64 1/6 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 6))) (*.f64 1/2 (*.f64 (pow.f64 cosTheta 2) (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2))))) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (+.f64 (*.f64 30 (pow.f64 cosTheta 6)) (*.f64 -180 (/.f64 (*.f64 (pow.f64 cosTheta 2) (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2))) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (PI.f64))))))) (pow.f64 alpha 6))) (+.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 -1/24 (/.f64 (+.f64 (*.f64 -3 (pow.f64 cosTheta 4)) (*.f64 12 (/.f64 (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2)) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (PI.f64))))) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 (log.f64 alpha) (PI.f64)))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (*.f64 (log.f64 alpha) (PI.f64)))))) (pow.f64 cosTheta 2)) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))))) (pow.f64 alpha 4))) (*.f64 1/4 (*.f64 (pow.f64 alpha 2) (-.f64 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (PI.f64)))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) 2) (PI.f64)))))))))) (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (PI.f64))))))","(-.f64 (fma.f64 -1/4 (*.f64 (fma.f64 1/24 (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 (log.f64 alpha) (PI.f64)))) (/.f64 (*.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (log.f64 alpha) (PI.f64)) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) 2)))) (/.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 12 (/.f64 (-.f64 (*.f64 (*.f64 1/2 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (pow.f64 cosTheta 4)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))) 2)) (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))))) (fma.f64 -1/2 (/.f64 (fma.f64 -1/24 (/.f64 (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 12 (/.f64 (-.f64 (*.f64 (*.f64 1/2 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (pow.f64 cosTheta 4)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))) 2)) (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))) (*.f64 (*.f64 (log.f64 alpha) (PI.f64)) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) 2))) (*.f64 1/2 (/.f64 (*.f64 cosTheta cosTheta) (/.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (-.f64 (/.f64 1 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 (log.f64 alpha) (PI.f64)))) (/.f64 (*.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (log.f64 alpha) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) 2)) (PI.f64)))))))) (/.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 cosTheta cosTheta))) (/.f64 (*.f64 -1/720 (fma.f64 360 (/.f64 (-.f64 (*.f64 1/6 (*.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (pow.f64 cosTheta 6))) (*.f64 (*.f64 1/2 (*.f64 cosTheta cosTheta)) (-.f64 (*.f64 (*.f64 1/2 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (pow.f64 cosTheta 4)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))) 2)))) (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (fma.f64 30 (pow.f64 cosTheta 6) (*.f64 -180 (/.f64 (*.f64 cosTheta cosTheta) (/.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (-.f64 (*.f64 (*.f64 1/2 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (pow.f64 cosTheta 4)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))) 2)))))))) (*.f64 (*.f64 (log.f64 alpha) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) 2)) (PI.f64))))) (pow.f64 alpha 6)) (fma.f64 -1/4 (*.f64 (fma.f64 -1/24 (/.f64 (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 12 (/.f64 (-.f64 (*.f64 (*.f64 1/2 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (pow.f64 cosTheta 4)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))) 2)) (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))) (*.f64 (*.f64 (log.f64 alpha) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) 2)) (PI.f64))) (*.f64 1/2 (/.f64 (-.f64 (/.f64 1 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 (log.f64 alpha) (PI.f64)))) (/.f64 (*.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (log.f64 alpha) (PI.f64)) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) 2)))) (/.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 cosTheta cosTheta))))) (pow.f64 alpha 4)) (*.f64 (*.f64 1/4 (*.f64 alpha alpha)) (-.f64 (/.f64 1 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 (log.f64 alpha) (PI.f64)))) (/.f64 (*.f64 -1/2 (*.f64 cosTheta cosTheta)) (*.f64 (*.f64 (log.f64 alpha) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) 2)) (PI.f64))))))) (/.f64 1/4 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 (log.f64 alpha) (PI.f64)))))","(fma.f64 -1/4 (*.f64 (fma.f64 1/24 (*.f64 (/.f64 (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (fma.f64 12 (/.f64 (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 -3 (pow.f64 cosTheta 4)))) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 -1/24 (/.f64 (fma.f64 12 (/.f64 (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 -3 (pow.f64 cosTheta 4))) (*.f64 (PI.f64) (*.f64 (log.f64 alpha) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2))))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 cosTheta cosTheta)) (*.f64 (/.f64 -1/720 (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2))) (/.f64 (fma.f64 360 (/.f64 (fma.f64 1/6 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (pow.f64 cosTheta 6)) (*.f64 (*.f64 (*.f64 cosTheta cosTheta) -1/2) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)))) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (fma.f64 -180 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2))) (*.f64 (pow.f64 cosTheta 6) 30))) (log.f64 alpha))))) (pow.f64 alpha 6)) (fma.f64 -1/4 (*.f64 (pow.f64 alpha 4) (fma.f64 -1/24 (/.f64 (fma.f64 12 (/.f64 (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 -3 (pow.f64 cosTheta 4))) (*.f64 (PI.f64) (*.f64 (log.f64 alpha) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))))))) (fma.f64 (*.f64 1/4 (*.f64 alpha alpha)) (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))) (/.f64 -1/4 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 (log.f64 alpha) (PI.f64)))))))","(fma.f64 -1/4 (*.f64 (fma.f64 1/24 (*.f64 (/.f64 (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 (/.f64 12 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2))))) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 -1/24 (/.f64 (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 (/.f64 12 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)))) (*.f64 (PI.f64) (*.f64 (log.f64 alpha) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2))))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 cosTheta cosTheta)) (*.f64 (/.f64 -1/720 (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2))) (/.f64 (fma.f64 360 (/.f64 (fma.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 6) 1/6) (*.f64 (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)) (*.f64 (*.f64 cosTheta cosTheta) -1/2))) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (fma.f64 (pow.f64 cosTheta 6) 30 (*.f64 (/.f64 (*.f64 (*.f64 cosTheta cosTheta) -180) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2))))) (log.f64 alpha))))) (pow.f64 alpha 6)) (fma.f64 -1/4 (*.f64 (pow.f64 alpha 4) (fma.f64 -1/24 (/.f64 (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 (/.f64 12 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)))) (*.f64 (PI.f64) (*.f64 (log.f64 alpha) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))) (*.f64 1/2 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))))))) (*.f64 1/4 (fma.f64 (*.f64 alpha alpha) (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))) (/.f64 -1 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 (log.f64 alpha) (PI.f64))))))))","(fma.f64 -1/4 (*.f64 (fma.f64 1/24 (*.f64 (/.f64 (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 (/.f64 12 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 (pow.f64 cosTheta 4) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/2) (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/4)))))) (fma.f64 -1/2 (*.f64 (/.f64 (fma.f64 1/2 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2))))) (*.f64 (/.f64 -1/24 (log.f64 alpha)) (/.f64 (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 (/.f64 12 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 (pow.f64 cosTheta 4) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/2) (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/4))))) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 cosTheta cosTheta)) (*.f64 (/.f64 -1/720 (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2))) (/.f64 (fma.f64 360 (/.f64 (fma.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 6) 1/6) (*.f64 (*.f64 (pow.f64 cosTheta 4) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/2) (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/4))) (*.f64 (*.f64 cosTheta cosTheta) -1/2))) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (fma.f64 (pow.f64 cosTheta 6) 30 (*.f64 (/.f64 (*.f64 (*.f64 cosTheta cosTheta) -180) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 (pow.f64 cosTheta 4) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/2) (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/4)))))) (log.f64 alpha))))) (pow.f64 alpha 6)) (fma.f64 -1/4 (*.f64 (pow.f64 alpha 4) (fma.f64 1/2 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2))))) (*.f64 (/.f64 -1/24 (log.f64 alpha)) (/.f64 (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 (/.f64 12 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 (pow.f64 cosTheta 4) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/2) (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/4))))) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))))) (*.f64 1/4 (fma.f64 (*.f64 alpha alpha) (-.f64 (/.f64 (/.f64 1 (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))) (*.f64 (/.f64 -1/2 (*.f64 (log.f64 alpha) (PI.f64))) (/.f64 (*.f64 cosTheta cosTheta) (pow.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2)))) (/.f64 -1 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 (log.f64 alpha) (PI.f64))))))))","(*.f64 -1/4 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(*.f64 -1/4 (/.f64 (/.f64 (*.f64 alpha alpha) (neg.f64 (log.f64 alpha))) (*.f64 (PI.f64) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))","(/.f64 (*.f64 -1/4 (*.f64 alpha alpha)) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha)))))","(*.f64 (/.f64 -1/4 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))) (*.f64 alpha alpha))","(+.f64 (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))) (*.f64 -1/4 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))))","(+.f64 (*.f64 -1/4 (/.f64 (/.f64 (*.f64 alpha alpha) (neg.f64 (log.f64 alpha))) (*.f64 (PI.f64) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (/.f64 1/4 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))","(fma.f64 -1/4 (*.f64 (/.f64 alpha (*.f64 (neg.f64 (log.f64 alpha)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))))) (/.f64 alpha (PI.f64))) (/.f64 1/4 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))))","(fma.f64 -1/4 (*.f64 (/.f64 alpha (*.f64 (log.f64 alpha) (neg.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))) (/.f64 alpha (PI.f64))) (/.f64 1/4 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))))","(+.f64 (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))) (*.f64 -1/4 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))))","(+.f64 (*.f64 -1/4 (/.f64 (/.f64 (*.f64 alpha alpha) (neg.f64 (log.f64 alpha))) (*.f64 (PI.f64) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (/.f64 1/4 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))","(fma.f64 -1/4 (*.f64 (/.f64 alpha (*.f64 (neg.f64 (log.f64 alpha)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))))) (/.f64 alpha (PI.f64))) (/.f64 1/4 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))))","(fma.f64 -1/4 (*.f64 (/.f64 alpha (*.f64 (log.f64 alpha) (neg.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))) (/.f64 alpha (PI.f64))) (/.f64 1/4 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))))","(+.f64 (*.f64 1/4 (/.f64 1 (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))) (*.f64 -1/4 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (/.f64 1 alpha)) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))))","(+.f64 (*.f64 -1/4 (/.f64 (/.f64 (*.f64 alpha alpha) (neg.f64 (log.f64 alpha))) (*.f64 (PI.f64) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))) (/.f64 1/4 (*.f64 (neg.f64 (log.f64 alpha)) (*.f64 (PI.f64) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))))","(fma.f64 -1/4 (*.f64 (/.f64 alpha (*.f64 (neg.f64 (log.f64 alpha)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))))) (/.f64 alpha (PI.f64))) (/.f64 1/4 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))))","(fma.f64 -1/4 (*.f64 (/.f64 alpha (*.f64 (log.f64 alpha) (neg.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))) (/.f64 alpha (PI.f64))) (/.f64 1/4 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (PI.f64) (neg.f64 (log.f64 alpha))))))","(*.f64 1/4 (/.f64 (pow.f64 alpha 2) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(/.f64 (*.f64 1/4 (*.f64 alpha alpha)) (*.f64 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha))))) (PI.f64)))","(*.f64 1/4 (/.f64 (/.f64 (/.f64 (*.f64 alpha alpha) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))) (PI.f64)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))","(*.f64 1/4 (/.f64 (/.f64 (*.f64 alpha alpha) (*.f64 (PI.f64) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))","(-.f64 (*.f64 1/4 (/.f64 (pow.f64 alpha 2) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))) (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))))","(-.f64 (/.f64 (*.f64 1/4 (*.f64 alpha alpha)) (*.f64 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha))))) (PI.f64))) (/.f64 1/4 (*.f64 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha))))) (PI.f64))))","(fma.f64 1/4 (/.f64 (/.f64 (/.f64 (*.f64 alpha alpha) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))) (PI.f64)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))) (/.f64 -1/4 (*.f64 (PI.f64) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))))))","(*.f64 1/4 (fma.f64 (/.f64 alpha (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha))))) (/.f64 alpha (PI.f64)) (/.f64 -1 (*.f64 (PI.f64) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha))))))))","(-.f64 (*.f64 1/4 (/.f64 (pow.f64 alpha 2) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))) (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))))","(-.f64 (/.f64 (*.f64 1/4 (*.f64 alpha alpha)) (*.f64 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha))))) (PI.f64))) (/.f64 1/4 (*.f64 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha))))) (PI.f64))))","(fma.f64 1/4 (/.f64 (/.f64 (/.f64 (*.f64 alpha alpha) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))) (PI.f64)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))) (/.f64 -1/4 (*.f64 (PI.f64) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))))))","(*.f64 1/4 (fma.f64 (/.f64 alpha (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha))))) (/.f64 alpha (PI.f64)) (/.f64 -1 (*.f64 (PI.f64) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha))))))))","(-.f64 (*.f64 1/4 (/.f64 (pow.f64 alpha 2) (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))) (*.f64 1/4 (/.f64 1 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64))))))","(-.f64 (/.f64 (*.f64 1/4 (*.f64 alpha alpha)) (*.f64 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha))))) (PI.f64))) (/.f64 1/4 (*.f64 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha))))) (PI.f64))))","(fma.f64 1/4 (/.f64 (/.f64 (/.f64 (*.f64 alpha alpha) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))) (PI.f64)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))) (/.f64 -1/4 (*.f64 (PI.f64) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))))))","(*.f64 1/4 (fma.f64 (/.f64 alpha (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha))))) (/.f64 alpha (PI.f64)) (/.f64 -1 (*.f64 (PI.f64) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha))))))))","(*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (PI.f64)))))","(/.f64 (*.f64 1/4 (fma.f64 alpha alpha -1)) (*.f64 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (E.f64)))) (PI.f64)))","(/.f64 (*.f64 1/4 (fma.f64 alpha alpha -1)) (*.f64 (*.f64 (log.f64 alpha) (PI.f64)) (log.f64 (sqrt.f64 (E.f64)))))","(+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 (exp.f64 1) (E.f64))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64))))))) (*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (PI.f64))))))","(fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 (E.f64) (E.f64))) (/.f64 (/.f64 (*.f64 (*.f64 cosTheta cosTheta) (pow.f64 (fma.f64 alpha alpha -1) 2)) (log.f64 alpha)) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2)))) (/.f64 (*.f64 1/4 (fma.f64 alpha alpha -1)) (*.f64 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (E.f64)))) (PI.f64))))","(fma.f64 1/4 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (log.f64 alpha) (PI.f64)) (log.f64 (sqrt.f64 (E.f64))))) (*.f64 (*.f64 -1/8 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (log.f64 alpha))) (/.f64 (/.f64 (*.f64 cosTheta cosTheta) (PI.f64)) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2))))","(+.f64 (*.f64 -1/4 (*.f64 (pow.f64 cosTheta 4) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 1))) 2) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64)))))) (*.f64 1/24 (/.f64 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (+.f64 (*.f64 12 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)))) (*.f64 -3 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1)) (E.f64))))) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64))))))))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 (exp.f64 1) (E.f64))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64))))))) (*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (PI.f64)))))))","(fma.f64 -1/4 (*.f64 (pow.f64 cosTheta 4) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (log.f64 alpha)) (*.f64 (*.f64 (PI.f64) (log.f64 (sqrt.f64 (E.f64)))) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2))) (*.f64 1/24 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (fma.f64 12 (*.f64 (sqrt.f64 (/.f64 (exp.f64 -1) (E.f64))) (-.f64 (*.f64 (*.f64 1/2 (E.f64)) (pow.f64 (fma.f64 alpha alpha -1) 2)) (pow.f64 (*.f64 (*.f64 1/2 (*.f64 (fma.f64 alpha alpha -1) (E.f64))) (sqrt.f64 (exp.f64 -1))) 2))) (*.f64 -3 (/.f64 (E.f64) (/.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2))))) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2))))))) (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 (E.f64) (E.f64))) (/.f64 (/.f64 (*.f64 (*.f64 cosTheta cosTheta) (pow.f64 (fma.f64 alpha alpha -1) 2)) (log.f64 alpha)) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2)))) (/.f64 (*.f64 1/4 (fma.f64 alpha alpha -1)) (*.f64 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (E.f64)))) (PI.f64)))))","(fma.f64 -1/4 (*.f64 (pow.f64 cosTheta 4) (fma.f64 1/24 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2))) (/.f64 (fma.f64 12 (*.f64 (sqrt.f64 (exp.f64 -2)) (-.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 1/2 (E.f64))) (pow.f64 (*.f64 (sqrt.f64 (exp.f64 -1)) (*.f64 (*.f64 1/2 (E.f64)) (fma.f64 alpha alpha -1))) 2))) (*.f64 -3 (*.f64 1 (pow.f64 (fma.f64 alpha alpha -1) 2)))) (log.f64 alpha))) (/.f64 (*.f64 -1/4 (pow.f64 (fma.f64 alpha alpha -1) 3)) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 3) (*.f64 (log.f64 alpha) (PI.f64)))))) (fma.f64 1/4 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (log.f64 alpha) (PI.f64)) (log.f64 (sqrt.f64 (E.f64))))) (*.f64 (*.f64 -1/8 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (log.f64 alpha))) (/.f64 (/.f64 (*.f64 cosTheta cosTheta) (PI.f64)) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2)))))","(fma.f64 -1/4 (*.f64 (pow.f64 cosTheta 4) (fma.f64 1/24 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2))) (/.f64 (fma.f64 12 (*.f64 (sqrt.f64 (exp.f64 -2)) (fma.f64 1/2 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 -1/4 (*.f64 (exp.f64 -1) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (exp.f64 2)))))) (*.f64 -3 (pow.f64 (fma.f64 alpha alpha -1) 2))) (log.f64 alpha))) (/.f64 (*.f64 -1/4 (pow.f64 (fma.f64 alpha alpha -1) 3)) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 3) (*.f64 (log.f64 alpha) (PI.f64)))))) (fma.f64 1/4 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (log.f64 alpha) (PI.f64)) (log.f64 (sqrt.f64 (E.f64))))) (*.f64 (*.f64 -1/8 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (log.f64 alpha))) (/.f64 (/.f64 (*.f64 cosTheta cosTheta) (PI.f64)) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2)))))","(+.f64 (*.f64 -1/4 (*.f64 (+.f64 (*.f64 -1/48 (*.f64 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (+.f64 (*.f64 12 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)))) (*.f64 -3 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1)) (E.f64))))) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 1))) 2) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64))))) (sqrt.f64 (/.f64 (E.f64) (exp.f64 1))))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 (exp.f64 1) (E.f64))) (/.f64 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2) (PI.f64)))))) (*.f64 1/24 (/.f64 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (+.f64 (*.f64 12 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/2 (*.f64 (E.f64) (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (E.f64))) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (exp.f64 1)))) 2)))) (*.f64 -3 (/.f64 (*.f64 (E.f64) (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2)) (exp.f64 1))))) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64)))))))) (log.f64 (sqrt.f64 (exp.f64 1)))))) (*.f64 1/720 (/.f64 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (+.f64 (*.f64 -180 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)) (-.f64 (pow.f64 alpha 2) 1)) (E.f64))) (+.f64 (*.f64 360 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/6 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (exp.f64 1))) (*.f64 1/2 (/.f64 (*.f64 (E.f64) (*.f64 (-.f64 (*.f64 1/2 (*.f64 (E.f64) (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (E.f64))) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (exp.f64 1)))) 2)) (-.f64 (pow.f64 alpha 2) 1))) (exp.f64 1)))))) (*.f64 30 (*.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 1) 3) (pow.f64 (E.f64) 3))) (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3)))))) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64)))))))) (pow.f64 cosTheta 6))) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 cosTheta 4) (+.f64 (*.f64 -1/4 (/.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (exp.f64 1))) 2) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64)))))) (*.f64 1/24 (/.f64 (*.f64 (-.f64 (pow.f64 alpha 2) 1) (+.f64 (*.f64 12 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)))) (*.f64 -3 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1)) (E.f64))))) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64))))))))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 (exp.f64 1) (E.f64))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (*.f64 (log.f64 (sqrt.f64 (E.f64))) (PI.f64))))))) (*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (PI.f64))))))))","(fma.f64 -1/4 (*.f64 (pow.f64 cosTheta 6) (fma.f64 -1/48 (*.f64 (sqrt.f64 (/.f64 (E.f64) (E.f64))) (*.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (log.f64 alpha)) (/.f64 (fma.f64 12 (*.f64 (sqrt.f64 (/.f64 (exp.f64 -1) (E.f64))) (-.f64 (*.f64 (*.f64 1/2 (E.f64)) (pow.f64 (fma.f64 alpha alpha -1) 2)) (pow.f64 (*.f64 (*.f64 1/2 (*.f64 (fma.f64 alpha alpha -1) (E.f64))) (sqrt.f64 (exp.f64 -1))) 2))) (*.f64 -3 (/.f64 (E.f64) (/.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2))))) (*.f64 (*.f64 (PI.f64) (log.f64 (sqrt.f64 (E.f64)))) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2))))) (fma.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 (E.f64) (E.f64))) (/.f64 (fma.f64 alpha alpha -1) (/.f64 (log.f64 (sqrt.f64 (E.f64))) (fma.f64 -1/4 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (*.f64 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (E.f64)))) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2)))) (*.f64 1/24 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (fma.f64 12 (*.f64 (sqrt.f64 (/.f64 (exp.f64 -1) (E.f64))) (-.f64 (*.f64 (*.f64 1/2 (E.f64)) (pow.f64 (fma.f64 alpha alpha -1) 2)) (pow.f64 (*.f64 (*.f64 1/2 (*.f64 (fma.f64 alpha alpha -1) (E.f64))) (sqrt.f64 (exp.f64 -1))) 2))) (*.f64 -3 (/.f64 (E.f64) (/.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2))))) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2))))))))) (*.f64 1/720 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (fma.f64 -180 (/.f64 (-.f64 (*.f64 (*.f64 1/2 (E.f64)) (pow.f64 (fma.f64 alpha alpha -1) 2)) (pow.f64 (*.f64 (*.f64 1/2 (*.f64 (fma.f64 alpha alpha -1) (E.f64))) (sqrt.f64 (exp.f64 -1))) 2)) (/.f64 (E.f64) (fma.f64 alpha alpha -1))) (fma.f64 360 (*.f64 (sqrt.f64 (/.f64 (exp.f64 -1) (E.f64))) (+.f64 (*.f64 1/6 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 3))) (*.f64 -1/2 (/.f64 (E.f64) (/.f64 (E.f64) (*.f64 (fma.f64 alpha alpha -1) (-.f64 (*.f64 (*.f64 1/2 (E.f64)) (pow.f64 (fma.f64 alpha alpha -1) 2)) (pow.f64 (*.f64 (*.f64 1/2 (*.f64 (fma.f64 alpha alpha -1) (E.f64))) (sqrt.f64 (exp.f64 -1))) 2)))))))) (*.f64 (*.f64 30 (sqrt.f64 (/.f64 (pow.f64 (E.f64) 3) (pow.f64 (E.f64) 3)))) (pow.f64 (fma.f64 alpha alpha -1) 3)))) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2)))))))) (fma.f64 -1/4 (*.f64 (pow.f64 cosTheta 4) (fma.f64 -1/4 (/.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 3) (log.f64 alpha)) (*.f64 (*.f64 (PI.f64) (log.f64 (sqrt.f64 (E.f64)))) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2))) (*.f64 1/24 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (fma.f64 12 (*.f64 (sqrt.f64 (/.f64 (exp.f64 -1) (E.f64))) (-.f64 (*.f64 (*.f64 1/2 (E.f64)) (pow.f64 (fma.f64 alpha alpha -1) 2)) (pow.f64 (*.f64 (*.f64 1/2 (*.f64 (fma.f64 alpha alpha -1) (E.f64))) (sqrt.f64 (exp.f64 -1))) 2))) (*.f64 -3 (/.f64 (E.f64) (/.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2))))) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2))))))) (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 (E.f64) (E.f64))) (/.f64 (/.f64 (*.f64 (*.f64 cosTheta cosTheta) (pow.f64 (fma.f64 alpha alpha -1) 2)) (log.f64 alpha)) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2)))) (/.f64 (*.f64 1/4 (fma.f64 alpha alpha -1)) (*.f64 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (E.f64)))) (PI.f64))))))","(fma.f64 -1/4 (*.f64 (pow.f64 cosTheta 6) (+.f64 (*.f64 -1/48 (*.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (log.f64 alpha)) (/.f64 (fma.f64 12 (*.f64 (sqrt.f64 (exp.f64 -2)) (-.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 1/2 (E.f64))) (pow.f64 (*.f64 (sqrt.f64 (exp.f64 -1)) (*.f64 (*.f64 1/2 (E.f64)) (fma.f64 alpha alpha -1))) 2))) (*.f64 -3 (*.f64 1 (pow.f64 (fma.f64 alpha alpha -1) 2)))) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 3))))) (fma.f64 1/720 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (fma.f64 -180 (*.f64 (/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 1/2 (E.f64))) (pow.f64 (*.f64 (sqrt.f64 (exp.f64 -1)) (*.f64 (*.f64 1/2 (E.f64)) (fma.f64 alpha alpha -1))) 2)) (E.f64)) (fma.f64 alpha alpha -1)) (fma.f64 360 (*.f64 (sqrt.f64 (exp.f64 -2)) (fma.f64 1/6 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 3)) (*.f64 -1/2 (*.f64 1 (*.f64 (fma.f64 alpha alpha -1) (-.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 1/2 (E.f64))) (pow.f64 (*.f64 (sqrt.f64 (exp.f64 -1)) (*.f64 (*.f64 1/2 (E.f64)) (fma.f64 alpha alpha -1))) 2))))))) (*.f64 30 (pow.f64 (fma.f64 alpha alpha -1) 3)))) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2)))) (*.f64 -1/2 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (sqrt.f64 (E.f64)))) (fma.f64 1/24 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2))) (/.f64 (fma.f64 12 (*.f64 (sqrt.f64 (exp.f64 -2)) (-.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 1/2 (E.f64))) (pow.f64 (*.f64 (sqrt.f64 (exp.f64 -1)) (*.f64 (*.f64 1/2 (E.f64)) (fma.f64 alpha alpha -1))) 2))) (*.f64 -3 (*.f64 1 (pow.f64 (fma.f64 alpha alpha -1) 2)))) (log.f64 alpha))) (/.f64 (*.f64 -1/4 (pow.f64 (fma.f64 alpha alpha -1) 3)) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 3) (*.f64 (log.f64 alpha) (PI.f64)))))))))) (fma.f64 -1/4 (*.f64 (pow.f64 cosTheta 4) (fma.f64 1/24 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2))) (/.f64 (fma.f64 12 (*.f64 (sqrt.f64 (exp.f64 -2)) (-.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 1/2 (E.f64))) (pow.f64 (*.f64 (sqrt.f64 (exp.f64 -1)) (*.f64 (*.f64 1/2 (E.f64)) (fma.f64 alpha alpha -1))) 2))) (*.f64 -3 (*.f64 1 (pow.f64 (fma.f64 alpha alpha -1) 2)))) (log.f64 alpha))) (/.f64 (*.f64 -1/4 (pow.f64 (fma.f64 alpha alpha -1) 3)) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 3) (*.f64 (log.f64 alpha) (PI.f64)))))) (fma.f64 1/4 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (log.f64 alpha) (PI.f64)) (log.f64 (sqrt.f64 (E.f64))))) (*.f64 (*.f64 -1/8 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (log.f64 alpha))) (/.f64 (/.f64 (*.f64 cosTheta cosTheta) (PI.f64)) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2))))))","(fma.f64 -1/4 (*.f64 (pow.f64 cosTheta 6) (fma.f64 -1/48 (*.f64 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (log.f64 alpha)) (/.f64 (fma.f64 12 (*.f64 (sqrt.f64 (exp.f64 -2)) (fma.f64 1/2 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 -1/4 (*.f64 (exp.f64 -1) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (exp.f64 2)))))) (*.f64 -3 (pow.f64 (fma.f64 alpha alpha -1) 2))) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 3)))) (fma.f64 1/720 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (fma.f64 -180 (*.f64 (/.f64 (fma.f64 1/2 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 -1/4 (*.f64 (exp.f64 -1) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (exp.f64 2))))) (E.f64)) (fma.f64 alpha alpha -1)) (fma.f64 360 (*.f64 (sqrt.f64 (exp.f64 -2)) (fma.f64 1/6 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 3)) (*.f64 -1/2 (*.f64 (fma.f64 alpha alpha -1) (fma.f64 1/2 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 -1/4 (*.f64 (exp.f64 -1) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (exp.f64 2))))))))) (*.f64 30 (pow.f64 (fma.f64 alpha alpha -1) 3)))) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2)))) (*.f64 (/.f64 (*.f64 -1/2 (fma.f64 alpha alpha -1)) (log.f64 (sqrt.f64 (E.f64)))) (fma.f64 1/24 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2))) (/.f64 (fma.f64 12 (*.f64 (sqrt.f64 (exp.f64 -2)) (fma.f64 1/2 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 -1/4 (*.f64 (exp.f64 -1) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (exp.f64 2)))))) (*.f64 -3 (pow.f64 (fma.f64 alpha alpha -1) 2))) (log.f64 alpha))) (/.f64 (*.f64 -1/4 (pow.f64 (fma.f64 alpha alpha -1) 3)) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 3) (*.f64 (log.f64 alpha) (PI.f64))))))))) (fma.f64 -1/4 (*.f64 (pow.f64 cosTheta 4) (fma.f64 1/24 (*.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2))) (/.f64 (fma.f64 12 (*.f64 (sqrt.f64 (exp.f64 -2)) (fma.f64 1/2 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 -1/4 (*.f64 (exp.f64 -1) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (exp.f64 2)))))) (*.f64 -3 (pow.f64 (fma.f64 alpha alpha -1) 2))) (log.f64 alpha))) (/.f64 (*.f64 -1/4 (pow.f64 (fma.f64 alpha alpha -1) 3)) (*.f64 (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 3) (*.f64 (log.f64 alpha) (PI.f64)))))) (fma.f64 1/4 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 (log.f64 alpha) (PI.f64)) (log.f64 (sqrt.f64 (E.f64))))) (*.f64 (*.f64 -1/8 (/.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (log.f64 alpha))) (/.f64 (/.f64 (*.f64 cosTheta cosTheta) (PI.f64)) (pow.f64 (log.f64 (sqrt.f64 (E.f64))) 2))))))","(*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(*.f64 1/4 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (*.f64 (PI.f64) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))","(*.f64 1/4 (/.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (PI.f64)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))","(*.f64 1/4 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))","(*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(*.f64 1/4 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (*.f64 (PI.f64) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))","(*.f64 1/4 (/.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (PI.f64)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))","(*.f64 1/4 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))","(*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(*.f64 1/4 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (*.f64 (PI.f64) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))","(*.f64 1/4 (/.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (PI.f64)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))","(*.f64 1/4 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))","(*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(*.f64 1/4 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (*.f64 (PI.f64) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))","(*.f64 1/4 (/.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (PI.f64)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))","(*.f64 1/4 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))","(*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(*.f64 1/4 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (*.f64 (PI.f64) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))","(*.f64 1/4 (/.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (PI.f64)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))","(*.f64 1/4 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))","(*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(*.f64 1/4 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (*.f64 (PI.f64) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))","(*.f64 1/4 (/.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (PI.f64)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))","(*.f64 1/4 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))","(*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(*.f64 1/4 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (*.f64 (PI.f64) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))","(*.f64 1/4 (/.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (PI.f64)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))","(*.f64 1/4 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))","(*.f64 1/4 (/.f64 (-.f64 (pow.f64 alpha 2) 1) (*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1)))) (PI.f64)))))","(*.f64 1/4 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (*.f64 (PI.f64) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))))","(*.f64 1/4 (/.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (PI.f64)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))","(*.f64 1/4 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (log.f64 alpha) (PI.f64))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))))","(log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))","(log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))","(log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))","(+.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (*.f64 1/2 (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))))","(+.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (*.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha))))","(fma.f64 1/2 (*.f64 alpha (*.f64 alpha (*.f64 cosTheta cosTheta))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))))","(+.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (*.f64 1/24 (*.f64 (pow.f64 alpha 4) (+.f64 (*.f64 -3 (pow.f64 cosTheta 4)) (*.f64 12 (/.f64 (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2)) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))))))","(+.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (fma.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (*.f64 (*.f64 1/24 (pow.f64 alpha 4)) (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 12 (/.f64 (-.f64 (*.f64 (*.f64 1/2 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (pow.f64 cosTheta 4)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))) 2)) (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))))))","(+.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) (fma.f64 (*.f64 (pow.f64 alpha 4) 1/24) (fma.f64 12 (/.f64 (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 -3 (pow.f64 cosTheta 4))) (*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 cosTheta cosTheta) 1/2))))","(+.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) (fma.f64 (*.f64 (pow.f64 alpha 4) 1/24) (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 (/.f64 12 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)))) (*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 cosTheta cosTheta) 1/2))))","(+.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) (fma.f64 (*.f64 (pow.f64 alpha 4) 1/24) (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 (/.f64 12 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 (pow.f64 cosTheta 4) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/2) (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/4))))) (*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 cosTheta cosTheta) 1/2))))","(+.f64 (*.f64 1/720 (*.f64 (pow.f64 alpha 6) (+.f64 (*.f64 360 (/.f64 (-.f64 (*.f64 1/6 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 6))) (*.f64 1/2 (*.f64 (pow.f64 cosTheta 2) (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2))))) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (+.f64 (*.f64 30 (pow.f64 cosTheta 6)) (*.f64 -180 (/.f64 (*.f64 (pow.f64 cosTheta 2) (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2))) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))))) (+.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (*.f64 1/24 (*.f64 (pow.f64 alpha 4) (+.f64 (*.f64 -3 (pow.f64 cosTheta 4)) (*.f64 12 (/.f64 (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2)) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))))))))","(fma.f64 1/720 (*.f64 (fma.f64 360 (/.f64 (-.f64 (*.f64 1/6 (*.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (pow.f64 cosTheta 6))) (*.f64 (*.f64 1/2 (*.f64 cosTheta cosTheta)) (-.f64 (*.f64 (*.f64 1/2 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (pow.f64 cosTheta 4)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))) 2)))) (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (fma.f64 30 (pow.f64 cosTheta 6) (*.f64 -180 (/.f64 (*.f64 cosTheta cosTheta) (/.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (-.f64 (*.f64 (*.f64 1/2 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (pow.f64 cosTheta 4)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))) 2))))))) (pow.f64 alpha 6)) (+.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (fma.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (*.f64 (*.f64 1/24 (pow.f64 alpha 4)) (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 12 (/.f64 (-.f64 (*.f64 (*.f64 1/2 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (pow.f64 cosTheta 4)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))) 2)) (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))))))))","(+.f64 (fma.f64 (*.f64 (pow.f64 alpha 4) 1/24) (fma.f64 12 (/.f64 (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 -3 (pow.f64 cosTheta 4))) (*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 cosTheta cosTheta) 1/2))) (fma.f64 (*.f64 (pow.f64 alpha 6) 1/720) (fma.f64 360 (/.f64 (fma.f64 1/6 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (pow.f64 cosTheta 6)) (*.f64 (*.f64 (*.f64 cosTheta cosTheta) -1/2) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)))) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (fma.f64 -180 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2))) (*.f64 (pow.f64 cosTheta 6) 30))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))))","(+.f64 (fma.f64 (*.f64 (pow.f64 alpha 4) 1/24) (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 (/.f64 12 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)))) (*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 cosTheta cosTheta) 1/2))) (fma.f64 (*.f64 (pow.f64 alpha 6) 1/720) (fma.f64 360 (/.f64 (fma.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 6) 1/6) (*.f64 (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)) (*.f64 (*.f64 cosTheta cosTheta) -1/2))) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (fma.f64 (pow.f64 cosTheta 6) 30 (*.f64 (/.f64 (*.f64 (*.f64 cosTheta cosTheta) -180) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))))","(+.f64 (fma.f64 (*.f64 (pow.f64 alpha 4) 1/24) (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 (/.f64 12 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 (pow.f64 cosTheta 4) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/2) (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/4))))) (*.f64 (*.f64 alpha alpha) (*.f64 (*.f64 cosTheta cosTheta) 1/2))) (fma.f64 (*.f64 (pow.f64 alpha 6) 1/720) (fma.f64 360 (/.f64 (fma.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 6) 1/6) (*.f64 (*.f64 (pow.f64 cosTheta 4) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/2) (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/4))) (*.f64 (*.f64 cosTheta cosTheta) -1/2))) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (fma.f64 (pow.f64 cosTheta 6) 30 (*.f64 (/.f64 (*.f64 (*.f64 cosTheta cosTheta) -180) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 (pow.f64 cosTheta 4) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/2) (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/4)))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))","(log.f64 (sqrt.f64 (exp.f64 1)))","(log.f64 (sqrt.f64 (E.f64)))","(+.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 (exp.f64 1) (E.f64))) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))))","(+.f64 (log.f64 (sqrt.f64 (E.f64))) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 (E.f64) (E.f64))) (*.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1)))))","(fma.f64 1/2 (*.f64 cosTheta (*.f64 cosTheta (fma.f64 alpha alpha -1))) (log.f64 (sqrt.f64 (E.f64))))","(+.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 (exp.f64 1) (E.f64))) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))) (*.f64 1/24 (*.f64 (pow.f64 cosTheta 4) (+.f64 (*.f64 12 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)))) (*.f64 -3 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1)) (E.f64))))))))","(+.f64 (log.f64 (sqrt.f64 (E.f64))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 (E.f64) (E.f64))) (*.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1))) (*.f64 (*.f64 1/24 (pow.f64 cosTheta 4)) (fma.f64 12 (*.f64 (sqrt.f64 (/.f64 (exp.f64 -1) (E.f64))) (-.f64 (*.f64 (*.f64 1/2 (E.f64)) (pow.f64 (fma.f64 alpha alpha -1) 2)) (pow.f64 (*.f64 (*.f64 1/2 (*.f64 (fma.f64 alpha alpha -1) (E.f64))) (sqrt.f64 (exp.f64 -1))) 2))) (*.f64 -3 (/.f64 (E.f64) (/.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2))))))))","(+.f64 (log.f64 (sqrt.f64 (E.f64))) (fma.f64 (*.f64 (pow.f64 cosTheta 4) 1/24) (fma.f64 12 (*.f64 (sqrt.f64 (exp.f64 -2)) (-.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 1/2 (E.f64))) (pow.f64 (*.f64 (sqrt.f64 (exp.f64 -1)) (*.f64 (*.f64 1/2 (E.f64)) (fma.f64 alpha alpha -1))) 2))) (*.f64 -3 (*.f64 1 (pow.f64 (fma.f64 alpha alpha -1) 2)))) (*.f64 1/2 (*.f64 cosTheta (*.f64 cosTheta (fma.f64 alpha alpha -1))))))","(+.f64 (log.f64 (sqrt.f64 (E.f64))) (fma.f64 (*.f64 (pow.f64 cosTheta 4) 1/24) (fma.f64 12 (*.f64 (sqrt.f64 (exp.f64 -2)) (fma.f64 1/2 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 -1/4 (*.f64 (exp.f64 -1) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (exp.f64 2)))))) (*.f64 -3 (pow.f64 (fma.f64 alpha alpha -1) 2))) (*.f64 1/2 (*.f64 cosTheta (*.f64 cosTheta (fma.f64 alpha alpha -1))))))","(+.f64 (log.f64 (sqrt.f64 (exp.f64 1))) (+.f64 (*.f64 1/720 (*.f64 (+.f64 (*.f64 -180 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)) (-.f64 (pow.f64 alpha 2) 1)) (E.f64))) (+.f64 (*.f64 360 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/6 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (exp.f64 1))) (*.f64 1/2 (/.f64 (*.f64 (E.f64) (*.f64 (-.f64 (*.f64 1/2 (*.f64 (E.f64) (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (E.f64))) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (exp.f64 1)))) 2)) (-.f64 (pow.f64 alpha 2) 1))) (exp.f64 1)))))) (*.f64 30 (*.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 1) 3) (pow.f64 (E.f64) 3))) (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3))))) (pow.f64 cosTheta 6))) (+.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 (exp.f64 1) (E.f64))) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2)))) (*.f64 1/24 (*.f64 (pow.f64 cosTheta 4) (+.f64 (*.f64 12 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)))) (*.f64 -3 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1)) (E.f64)))))))))","(+.f64 (log.f64 (sqrt.f64 (E.f64))) (fma.f64 1/720 (*.f64 (pow.f64 cosTheta 6) (fma.f64 -180 (/.f64 (-.f64 (*.f64 (*.f64 1/2 (E.f64)) (pow.f64 (fma.f64 alpha alpha -1) 2)) (pow.f64 (*.f64 (*.f64 1/2 (*.f64 (fma.f64 alpha alpha -1) (E.f64))) (sqrt.f64 (exp.f64 -1))) 2)) (/.f64 (E.f64) (fma.f64 alpha alpha -1))) (fma.f64 360 (*.f64 (sqrt.f64 (/.f64 (exp.f64 -1) (E.f64))) (+.f64 (*.f64 1/6 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 3))) (*.f64 -1/2 (/.f64 (E.f64) (/.f64 (E.f64) (*.f64 (fma.f64 alpha alpha -1) (-.f64 (*.f64 (*.f64 1/2 (E.f64)) (pow.f64 (fma.f64 alpha alpha -1) 2)) (pow.f64 (*.f64 (*.f64 1/2 (*.f64 (fma.f64 alpha alpha -1) (E.f64))) (sqrt.f64 (exp.f64 -1))) 2)))))))) (*.f64 (*.f64 30 (sqrt.f64 (/.f64 (pow.f64 (E.f64) 3) (pow.f64 (E.f64) 3)))) (pow.f64 (fma.f64 alpha alpha -1) 3))))) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 (E.f64) (E.f64))) (*.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1))) (*.f64 (*.f64 1/24 (pow.f64 cosTheta 4)) (fma.f64 12 (*.f64 (sqrt.f64 (/.f64 (exp.f64 -1) (E.f64))) (-.f64 (*.f64 (*.f64 1/2 (E.f64)) (pow.f64 (fma.f64 alpha alpha -1) 2)) (pow.f64 (*.f64 (*.f64 1/2 (*.f64 (fma.f64 alpha alpha -1) (E.f64))) (sqrt.f64 (exp.f64 -1))) 2))) (*.f64 -3 (/.f64 (E.f64) (/.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2)))))))))","(+.f64 (log.f64 (sqrt.f64 (E.f64))) (fma.f64 1/720 (*.f64 (pow.f64 cosTheta 6) (fma.f64 -180 (*.f64 (/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 1/2 (E.f64))) (pow.f64 (*.f64 (sqrt.f64 (exp.f64 -1)) (*.f64 (*.f64 1/2 (E.f64)) (fma.f64 alpha alpha -1))) 2)) (E.f64)) (fma.f64 alpha alpha -1)) (fma.f64 360 (*.f64 (sqrt.f64 (exp.f64 -2)) (fma.f64 1/6 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 3)) (*.f64 -1/2 (*.f64 1 (*.f64 (fma.f64 alpha alpha -1) (-.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 1/2 (E.f64))) (pow.f64 (*.f64 (sqrt.f64 (exp.f64 -1)) (*.f64 (*.f64 1/2 (E.f64)) (fma.f64 alpha alpha -1))) 2))))))) (*.f64 30 (pow.f64 (fma.f64 alpha alpha -1) 3))))) (fma.f64 (*.f64 (pow.f64 cosTheta 4) 1/24) (fma.f64 12 (*.f64 (sqrt.f64 (exp.f64 -2)) (-.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 1/2 (E.f64))) (pow.f64 (*.f64 (sqrt.f64 (exp.f64 -1)) (*.f64 (*.f64 1/2 (E.f64)) (fma.f64 alpha alpha -1))) 2))) (*.f64 -3 (*.f64 1 (pow.f64 (fma.f64 alpha alpha -1) 2)))) (*.f64 1/2 (*.f64 cosTheta (*.f64 cosTheta (fma.f64 alpha alpha -1)))))))","(+.f64 (log.f64 (sqrt.f64 (E.f64))) (fma.f64 1/720 (*.f64 (pow.f64 cosTheta 6) (fma.f64 -180 (*.f64 (/.f64 (fma.f64 1/2 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 -1/4 (*.f64 (exp.f64 -1) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (exp.f64 2))))) (E.f64)) (fma.f64 alpha alpha -1)) (fma.f64 360 (*.f64 (sqrt.f64 (exp.f64 -2)) (fma.f64 1/6 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 3)) (*.f64 -1/2 (*.f64 (fma.f64 alpha alpha -1) (fma.f64 1/2 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 -1/4 (*.f64 (exp.f64 -1) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (exp.f64 2))))))))) (*.f64 30 (pow.f64 (fma.f64 alpha alpha -1) 3))))) (fma.f64 (*.f64 (pow.f64 cosTheta 4) 1/24) (fma.f64 12 (*.f64 (sqrt.f64 (exp.f64 -2)) (fma.f64 1/2 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 -1/4 (*.f64 (exp.f64 -1) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (exp.f64 2)))))) (*.f64 -3 (pow.f64 (fma.f64 alpha alpha -1) 2))) (*.f64 1/2 (*.f64 cosTheta (*.f64 cosTheta (fma.f64 alpha alpha -1)))))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1))))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))))","(*.f64 (*.f64 2 (log.f64 alpha)) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 2 (log.f64 alpha)))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))))","(fma.f64 2 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (log.f64 alpha)) (*.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha))))","(fma.f64 (log.f64 alpha) (*.f64 alpha (*.f64 alpha (*.f64 cosTheta cosTheta))) (*.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) (*.f64 2 (log.f64 alpha))))","(*.f64 (log.f64 alpha) (+.f64 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2) (*.f64 alpha (*.f64 alpha (*.f64 cosTheta cosTheta)))))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))) (+.f64 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (*.f64 1/12 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 4) (+.f64 (*.f64 -3 (pow.f64 cosTheta 4)) (*.f64 12 (/.f64 (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2)) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))))))))","(fma.f64 2 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (log.f64 alpha)) (fma.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (*.f64 1/12 (*.f64 (*.f64 (log.f64 alpha) (pow.f64 alpha 4)) (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 12 (/.f64 (-.f64 (*.f64 (*.f64 1/2 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (pow.f64 cosTheta 4)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))) 2)) (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))))))))","(fma.f64 2 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) (log.f64 alpha)) (fma.f64 (log.f64 alpha) (*.f64 alpha (*.f64 alpha (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 1/12 (*.f64 (log.f64 alpha) (pow.f64 alpha 4))) (fma.f64 12 (/.f64 (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 -3 (pow.f64 cosTheta 4))))))","(fma.f64 2 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) (log.f64 alpha)) (*.f64 (log.f64 alpha) (+.f64 (*.f64 alpha (*.f64 alpha (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 (/.f64 12 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)))) (pow.f64 alpha 4)) 1/12))))","(fma.f64 2 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) (log.f64 alpha)) (*.f64 (log.f64 alpha) (+.f64 (*.f64 alpha (*.f64 alpha (*.f64 cosTheta cosTheta))) (*.f64 (*.f64 (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 (/.f64 12 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 (pow.f64 cosTheta 4) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/2) (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/4))))) (pow.f64 alpha 4)) 1/12))))","(+.f64 (*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))) (+.f64 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 2) (pow.f64 cosTheta 2))) (+.f64 (*.f64 1/360 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 6) (+.f64 (*.f64 360 (/.f64 (-.f64 (*.f64 1/6 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 6))) (*.f64 1/2 (*.f64 (pow.f64 cosTheta 2) (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2))))) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))) (+.f64 (*.f64 30 (pow.f64 cosTheta 6)) (*.f64 -180 (/.f64 (*.f64 (pow.f64 cosTheta 2) (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2))) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))))))) (*.f64 1/12 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 alpha 4) (+.f64 (*.f64 -3 (pow.f64 cosTheta 4)) (*.f64 12 (/.f64 (-.f64 (*.f64 1/2 (*.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))) (pow.f64 cosTheta 4))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))) (pow.f64 cosTheta 2))) 2)) (exp.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2)))))))))))))","(fma.f64 2 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))))) (log.f64 alpha)) (fma.f64 (log.f64 alpha) (*.f64 (*.f64 cosTheta cosTheta) (*.f64 alpha alpha)) (fma.f64 1/360 (*.f64 (log.f64 alpha) (*.f64 (fma.f64 360 (/.f64 (-.f64 (*.f64 1/6 (*.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (pow.f64 cosTheta 6))) (*.f64 (*.f64 1/2 (*.f64 cosTheta cosTheta)) (-.f64 (*.f64 (*.f64 1/2 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (pow.f64 cosTheta 4)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))) 2)))) (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (fma.f64 30 (pow.f64 cosTheta 6) (*.f64 -180 (/.f64 (*.f64 cosTheta cosTheta) (/.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta)))) (-.f64 (*.f64 (*.f64 1/2 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (pow.f64 cosTheta 4)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))) 2))))))) (pow.f64 alpha 6))) (*.f64 1/12 (*.f64 (*.f64 (log.f64 alpha) (pow.f64 alpha 4)) (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 12 (/.f64 (-.f64 (*.f64 (*.f64 1/2 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))) (pow.f64 cosTheta 4)) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 cosTheta cosTheta) (sqrt.f64 (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))) 2)) (exp.f64 (+.f64 1 (neg.f64 (*.f64 cosTheta cosTheta))))))))))))","(fma.f64 2 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) (log.f64 alpha)) (fma.f64 (log.f64 alpha) (*.f64 alpha (*.f64 alpha (*.f64 cosTheta cosTheta))) (fma.f64 1/12 (*.f64 (fma.f64 12 (/.f64 (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 -3 (pow.f64 cosTheta 4))) (*.f64 (log.f64 alpha) (pow.f64 alpha 4))) (*.f64 (*.f64 1/360 (*.f64 (log.f64 alpha) (pow.f64 alpha 6))) (fma.f64 360 (/.f64 (fma.f64 1/6 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (pow.f64 cosTheta 6)) (*.f64 (*.f64 (*.f64 cosTheta cosTheta) -1/2) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)))) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (fma.f64 -180 (*.f64 (/.f64 (*.f64 cosTheta cosTheta) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2))) (*.f64 (pow.f64 cosTheta 6) 30)))))))","(+.f64 (*.f64 (log.f64 alpha) (+.f64 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2) (*.f64 alpha (*.f64 alpha (*.f64 cosTheta cosTheta))))) (*.f64 (log.f64 alpha) (+.f64 (*.f64 1/12 (*.f64 (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 (/.f64 12 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)))) (pow.f64 alpha 4))) (*.f64 1/360 (*.f64 (fma.f64 360 (/.f64 (fma.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 6) 1/6) (*.f64 (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2)) (*.f64 (*.f64 cosTheta cosTheta) -1/2))) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (fma.f64 (pow.f64 cosTheta 6) 30 (*.f64 (/.f64 (*.f64 (*.f64 cosTheta cosTheta) -180) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 4) 1/2)) (pow.f64 (*.f64 (*.f64 cosTheta cosTheta) (*.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) 1/2)) 2))))) (pow.f64 alpha 6))))))","(+.f64 (*.f64 (log.f64 alpha) (+.f64 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))))) 2) (*.f64 alpha (*.f64 alpha (*.f64 cosTheta cosTheta))))) (*.f64 (log.f64 alpha) (+.f64 (*.f64 1/12 (*.f64 (fma.f64 -3 (pow.f64 cosTheta 4) (*.f64 (/.f64 12 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 (pow.f64 cosTheta 4) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/2) (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/4))))) (pow.f64 alpha 4))) (*.f64 1/360 (*.f64 (fma.f64 360 (/.f64 (fma.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) (*.f64 (pow.f64 cosTheta 6) 1/6) (*.f64 (*.f64 (pow.f64 cosTheta 4) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/2) (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/4))) (*.f64 (*.f64 cosTheta cosTheta) -1/2))) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (fma.f64 (pow.f64 cosTheta 6) 30 (*.f64 (/.f64 (*.f64 (*.f64 cosTheta cosTheta) -180) (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta)))) (*.f64 (pow.f64 cosTheta 4) (-.f64 (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/2) (*.f64 (exp.f64 (-.f64 1 (*.f64 cosTheta cosTheta))) 1/4)))))) (pow.f64 alpha 6))))))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 (*.f64 -2 (neg.f64 (log.f64 alpha))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (neg.f64 (log.f64 alpha)) -2))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 2 (log.f64 alpha)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 (*.f64 -2 (neg.f64 (log.f64 alpha))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (neg.f64 (log.f64 alpha)) -2))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 2 (log.f64 alpha)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 (*.f64 -2 (neg.f64 (log.f64 alpha))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (neg.f64 (log.f64 alpha)) -2))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 2 (log.f64 alpha)))","(*.f64 -2 (*.f64 (log.f64 (/.f64 1 alpha)) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 (*.f64 -2 (neg.f64 (log.f64 alpha))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (neg.f64 (log.f64 alpha)) -2))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 2 (log.f64 alpha)))","(*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 2 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha))))))","(*.f64 2 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))))","(*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 2 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha))))))","(*.f64 2 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))))","(*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 2 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha))))))","(*.f64 2 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))))","(*.f64 2 (*.f64 (+.f64 (log.f64 -1) (*.f64 -1 (log.f64 (/.f64 -1 alpha)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 2 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (+.f64 (log.f64 -1) (neg.f64 (log.f64 (/.f64 -1 alpha))))))","(*.f64 2 (*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 alpha)))))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 1)))))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (E.f64)))))","(*.f64 (log.f64 alpha) (*.f64 (log.f64 (sqrt.f64 (E.f64))) 2))","(+.f64 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (sqrt.f64 (/.f64 (exp.f64 1) (E.f64)))) (*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 1))))))","(fma.f64 (*.f64 (*.f64 (log.f64 alpha) (fma.f64 alpha alpha -1)) (*.f64 cosTheta cosTheta)) (sqrt.f64 (/.f64 (E.f64) (E.f64))) (*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (E.f64))))))","(fma.f64 (*.f64 2 (log.f64 alpha)) (log.f64 (sqrt.f64 (E.f64))) (*.f64 (log.f64 alpha) (*.f64 (*.f64 1 (*.f64 cosTheta cosTheta)) (fma.f64 alpha alpha -1))))","(*.f64 (log.f64 alpha) (+.f64 (*.f64 2 (log.f64 (sqrt.f64 (E.f64)))) (*.f64 cosTheta (*.f64 cosTheta (fma.f64 alpha alpha -1)))))","(+.f64 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (sqrt.f64 (/.f64 (exp.f64 1) (E.f64)))) (+.f64 (*.f64 1/12 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 4) (+.f64 (*.f64 12 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)))) (*.f64 -3 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1)) (E.f64))))))) (*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 1)))))))","(fma.f64 (*.f64 (*.f64 (log.f64 alpha) (fma.f64 alpha alpha -1)) (*.f64 cosTheta cosTheta)) (sqrt.f64 (/.f64 (E.f64) (E.f64))) (fma.f64 1/12 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 4) (fma.f64 12 (*.f64 (sqrt.f64 (/.f64 (exp.f64 -1) (E.f64))) (-.f64 (*.f64 (*.f64 1/2 (E.f64)) (pow.f64 (fma.f64 alpha alpha -1) 2)) (pow.f64 (*.f64 (*.f64 1/2 (*.f64 (fma.f64 alpha alpha -1) (E.f64))) (sqrt.f64 (exp.f64 -1))) 2))) (*.f64 -3 (/.f64 (E.f64) (/.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2))))))) (*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (E.f64)))))))","(fma.f64 (log.f64 alpha) (*.f64 (*.f64 1 (*.f64 cosTheta cosTheta)) (fma.f64 alpha alpha -1)) (fma.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (E.f64)))) (*.f64 (*.f64 (log.f64 alpha) (pow.f64 cosTheta 4)) (*.f64 (fma.f64 12 (*.f64 (sqrt.f64 (exp.f64 -2)) (-.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 1/2 (E.f64))) (pow.f64 (*.f64 (sqrt.f64 (exp.f64 -1)) (*.f64 (*.f64 1/2 (E.f64)) (fma.f64 alpha alpha -1))) 2))) (*.f64 -3 (*.f64 1 (pow.f64 (fma.f64 alpha alpha -1) 2)))) 1/12))))","(fma.f64 (log.f64 alpha) (*.f64 cosTheta (*.f64 cosTheta (fma.f64 alpha alpha -1))) (*.f64 (log.f64 alpha) (+.f64 (*.f64 2 (log.f64 (sqrt.f64 (E.f64)))) (*.f64 1/12 (*.f64 (pow.f64 cosTheta 4) (fma.f64 12 (*.f64 (sqrt.f64 (exp.f64 -2)) (fma.f64 1/2 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 -1/4 (*.f64 (exp.f64 -1) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (exp.f64 2)))))) (*.f64 -3 (pow.f64 (fma.f64 alpha alpha -1) 2))))))))","(+.f64 (*.f64 (*.f64 (log.f64 alpha) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (pow.f64 cosTheta 2))) (sqrt.f64 (/.f64 (exp.f64 1) (E.f64)))) (+.f64 (*.f64 1/360 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 6) (+.f64 (*.f64 -180 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)) (-.f64 (pow.f64 alpha 2) 1)) (E.f64))) (+.f64 (*.f64 360 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/6 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (exp.f64 1))) (*.f64 1/2 (/.f64 (*.f64 (E.f64) (*.f64 (-.f64 (*.f64 1/2 (*.f64 (E.f64) (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2))) (pow.f64 (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (E.f64))) (*.f64 (-.f64 (pow.f64 alpha 2) 1) (exp.f64 1)))) 2)) (-.f64 (pow.f64 alpha 2) 1))) (exp.f64 1)))))) (*.f64 30 (*.f64 (sqrt.f64 (/.f64 (pow.f64 (exp.f64 1) 3) (pow.f64 (E.f64) 3))) (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3)))))))) (+.f64 (*.f64 1/12 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 4) (+.f64 (*.f64 12 (*.f64 (sqrt.f64 (/.f64 1 (*.f64 (E.f64) (exp.f64 1)))) (-.f64 (*.f64 1/2 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1))) (pow.f64 (*.f64 1/2 (*.f64 (*.f64 (E.f64) (-.f64 (pow.f64 alpha 2) 1)) (sqrt.f64 (/.f64 1 (exp.f64 1))))) 2)))) (*.f64 -3 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (exp.f64 1)) (E.f64))))))) (*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 1))))))))","(fma.f64 (*.f64 (*.f64 (log.f64 alpha) (fma.f64 alpha alpha -1)) (*.f64 cosTheta cosTheta)) (sqrt.f64 (/.f64 (E.f64) (E.f64))) (fma.f64 1/360 (*.f64 (*.f64 (log.f64 alpha) (pow.f64 cosTheta 6)) (fma.f64 -180 (/.f64 (-.f64 (*.f64 (*.f64 1/2 (E.f64)) (pow.f64 (fma.f64 alpha alpha -1) 2)) (pow.f64 (*.f64 (*.f64 1/2 (*.f64 (fma.f64 alpha alpha -1) (E.f64))) (sqrt.f64 (exp.f64 -1))) 2)) (/.f64 (E.f64) (fma.f64 alpha alpha -1))) (fma.f64 360 (*.f64 (sqrt.f64 (/.f64 (exp.f64 -1) (E.f64))) (+.f64 (*.f64 1/6 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 3))) (*.f64 -1/2 (/.f64 (E.f64) (/.f64 (E.f64) (*.f64 (fma.f64 alpha alpha -1) (-.f64 (*.f64 (*.f64 1/2 (E.f64)) (pow.f64 (fma.f64 alpha alpha -1) 2)) (pow.f64 (*.f64 (*.f64 1/2 (*.f64 (fma.f64 alpha alpha -1) (E.f64))) (sqrt.f64 (exp.f64 -1))) 2)))))))) (*.f64 (*.f64 30 (sqrt.f64 (/.f64 (pow.f64 (E.f64) 3) (pow.f64 (E.f64) 3)))) (pow.f64 (fma.f64 alpha alpha -1) 3))))) (fma.f64 1/12 (*.f64 (log.f64 alpha) (*.f64 (pow.f64 cosTheta 4) (fma.f64 12 (*.f64 (sqrt.f64 (/.f64 (exp.f64 -1) (E.f64))) (-.f64 (*.f64 (*.f64 1/2 (E.f64)) (pow.f64 (fma.f64 alpha alpha -1) 2)) (pow.f64 (*.f64 (*.f64 1/2 (*.f64 (fma.f64 alpha alpha -1) (E.f64))) (sqrt.f64 (exp.f64 -1))) 2))) (*.f64 -3 (/.f64 (E.f64) (/.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2))))))) (*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (E.f64))))))))","(fma.f64 (log.f64 alpha) (*.f64 (*.f64 1 (*.f64 cosTheta cosTheta)) (fma.f64 alpha alpha -1)) (fma.f64 1/360 (*.f64 (fma.f64 -180 (*.f64 (/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 1/2 (E.f64))) (pow.f64 (*.f64 (sqrt.f64 (exp.f64 -1)) (*.f64 (*.f64 1/2 (E.f64)) (fma.f64 alpha alpha -1))) 2)) (E.f64)) (fma.f64 alpha alpha -1)) (fma.f64 360 (*.f64 (sqrt.f64 (exp.f64 -2)) (fma.f64 1/6 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 3)) (*.f64 -1/2 (*.f64 1 (*.f64 (fma.f64 alpha alpha -1) (-.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 1/2 (E.f64))) (pow.f64 (*.f64 (sqrt.f64 (exp.f64 -1)) (*.f64 (*.f64 1/2 (E.f64)) (fma.f64 alpha alpha -1))) 2))))))) (*.f64 30 (pow.f64 (fma.f64 alpha alpha -1) 3)))) (*.f64 (log.f64 alpha) (pow.f64 cosTheta 6))) (fma.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (E.f64)))) (*.f64 (*.f64 (log.f64 alpha) (pow.f64 cosTheta 4)) (*.f64 (fma.f64 12 (*.f64 (sqrt.f64 (exp.f64 -2)) (-.f64 (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (*.f64 1/2 (E.f64))) (pow.f64 (*.f64 (sqrt.f64 (exp.f64 -1)) (*.f64 (*.f64 1/2 (E.f64)) (fma.f64 alpha alpha -1))) 2))) (*.f64 -3 (*.f64 1 (pow.f64 (fma.f64 alpha alpha -1) 2)))) 1/12)))))","(+.f64 (*.f64 (log.f64 alpha) (+.f64 (*.f64 2 (log.f64 (sqrt.f64 (E.f64)))) (*.f64 cosTheta (*.f64 cosTheta (fma.f64 alpha alpha -1))))) (*.f64 (log.f64 alpha) (+.f64 (*.f64 1/12 (*.f64 (pow.f64 cosTheta 4) (fma.f64 12 (*.f64 (sqrt.f64 (exp.f64 -2)) (fma.f64 1/2 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 -1/4 (*.f64 (exp.f64 -1) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (exp.f64 2)))))) (*.f64 -3 (pow.f64 (fma.f64 alpha alpha -1) 2))))) (*.f64 1/360 (*.f64 (pow.f64 cosTheta 6) (fma.f64 -180 (*.f64 (/.f64 (fma.f64 1/2 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 -1/4 (*.f64 (exp.f64 -1) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (exp.f64 2))))) (E.f64)) (fma.f64 alpha alpha -1)) (fma.f64 360 (*.f64 (sqrt.f64 (exp.f64 -2)) (fma.f64 1/6 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 3)) (*.f64 -1/2 (*.f64 (fma.f64 alpha alpha -1) (fma.f64 1/2 (*.f64 (E.f64) (pow.f64 (fma.f64 alpha alpha -1) 2)) (*.f64 -1/4 (*.f64 (exp.f64 -1) (*.f64 (pow.f64 (fma.f64 alpha alpha -1) 2) (exp.f64 2))))))))) (*.f64 30 (pow.f64 (fma.f64 alpha alpha -1) 3)))))))))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 (*.f64 -2 (neg.f64 (log.f64 alpha))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (neg.f64 (log.f64 alpha)) -2))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 2 (log.f64 alpha)))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 (*.f64 -2 (neg.f64 (log.f64 alpha))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (neg.f64 (log.f64 alpha)) -2))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 2 (log.f64 alpha)))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 (*.f64 -2 (neg.f64 (log.f64 alpha))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (neg.f64 (log.f64 alpha)) -2))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 2 (log.f64 alpha)))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 (*.f64 -2 (neg.f64 (log.f64 alpha))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (neg.f64 (log.f64 alpha)) -2))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 2 (log.f64 alpha)))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 (*.f64 -2 (neg.f64 (log.f64 alpha))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (neg.f64 (log.f64 alpha)) -2))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 2 (log.f64 alpha)))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 (*.f64 -2 (neg.f64 (log.f64 alpha))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (neg.f64 (log.f64 alpha)) -2))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 2 (log.f64 alpha)))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 (*.f64 -2 (neg.f64 (log.f64 alpha))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (neg.f64 (log.f64 alpha)) -2))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 2 (log.f64 alpha)))","(*.f64 2 (*.f64 (log.f64 alpha) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (pow.f64 cosTheta 2) 1))))))","(*.f64 (*.f64 -2 (neg.f64 (log.f64 alpha))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 (neg.f64 (log.f64 alpha)) -2))","(*.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (*.f64 cosTheta cosTheta) (fma.f64 alpha alpha -1) 1)))) (*.f64 2 (log.f64 alpha)))"]],"stop":[["node limit",1]],"time":99.47900390625,"type":"simplify"},{"compiler":[[13758,9783]],"time":154.929931640625,"type":"eval"},{"alts":[["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha)))","done",0.43882753907376804],["(/.f64 (/.f64 1 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (fma.f64 alpha alpha -1)))","fresh",0.5678101562950724],["(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","fresh",0.9436053469121758],["(pow.f64 (/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1)","done",0.44657639138884375],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (cbrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))))) (log.f64 (cbrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.5033188476844203],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (/.f64 (+.f64 (pow.f64 (log.f64 alpha) 3) (pow.f64 (log.f64 alpha) 3)) (fma.f64 (log.f64 alpha) (log.f64 alpha) (-.f64 (*.f64 (log.f64 alpha) (log.f64 alpha)) (*.f64 (log.f64 alpha) (log.f64 alpha)))))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","fresh",0.6097514281472842],["(*.f64 (/.f64 1 (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 2))) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))","fresh",0.5098801758319564],["(*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","fresh",0.5243825876171498],["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (+.f64 (log.f64 (sqrt.f64 (pow.f64 alpha (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (pow.f64 alpha (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))","fresh",0.49851534203813186]],"compiler":[[39,27],[25,18],[61,49],[25,17],[42,20],[48,25],[36,26],[23,16],[38,25]],"count":[[280,9]],"kept":[{"done":[1,1],"fresh":[7,7],"new":[271,0],"picked":[1,1]}],"min-error":[0],"time":45.303955078125,"type":"prune"},{"accuracy":[0.43882753907376804],"baseline":[0.43882753907376804],"branch":[["cosTheta",0.43882753907376804,1],["alpha",0.43882753907376804,1],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))",0.43882753907376804,1],["(*.f64 alpha alpha)",0.43882753907376804,1],["(*.f64 alpha alpha)",0.43882753907376804,1]],"compiler":[[3,2],[3,2],[26,16],[5,3],[5,3],[806,484]],"count":[[20,1]],"inputs":[["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha)))","(*.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 alpha)) (/.f64 (/.f64 1/2 (PI.f64)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))","(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (+.f64 (log.f64 (sqrt.f64 (pow.f64 alpha (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (pow.f64 alpha (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))","(/.f64 (/.f64 1 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha)))) (/.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (fma.f64 alpha alpha -1)))","(pow.f64 (/.f64 (*.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) (*.f64 (cbrt.f64 (PI.f64)) (*.f64 2 (log.f64 alpha)))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1)","(*.f64 (/.f64 1 (PI.f64)) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (*.f64 2 (log.f64 alpha))))","(*.f64 (/.f64 1 (cbrt.f64 (pow.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))) 2))) (/.f64 (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (cbrt.f64 (*.f64 (PI.f64) (*.f64 2 (log.f64 alpha))))))","(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (+.f64 (log.f64 (*.f64 alpha (pow.f64 (cbrt.f64 alpha) 2))) (log.f64 (cbrt.f64 alpha)))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","(*.f64 (/.f64 1 (PI.f64)) (/.f64 (fma.f64 alpha alpha -1) (*.f64 (*.f64 2 (log.f64 alpha)) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (cbrt.f64 (exp.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))","(*.f64 (/.f64 (+.f64 alpha 1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)) (/.f64 (+.f64 alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))))","(-.f64 (+.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (pow.f64 alpha 2)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 6) (pow.f64 cosTheta 4))) (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2)) (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))) (*.f64 -1/2 (/.f64 (pow.f64 cosTheta 2) (*.f64 (log.f64 alpha) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) 2) (PI.f64)))))) (*.f64 (pow.f64 alpha 4) (pow.f64 cosTheta 2))) (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))))))) (*.f64 1/2 (/.f64 1 (*.f64 (log.f64 alpha) (*.f64 (+.f64 1 (*.f64 -1 (pow.f64 cosTheta 2))) (PI.f64))))))","(pow.f64 (/.f64 (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (/.f64 (fma.f64 alpha alpha -1) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) -1)","(-.f64 (+.f64 (/.f64 (pow.f64 alpha 2) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 2) (pow.f64 cosTheta 2)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64)))) (/.f64 (*.f64 (pow.f64 (-.f64 (pow.f64 alpha 2) 1) 3) (pow.f64 cosTheta 4)) (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))) (/.f64 1 (*.f64 (log.f64 (pow.f64 alpha 2)) (PI.f64))))","(*.f64 (/.f64 1 (cbrt.f64 (pow.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))) 2))) (/.f64 (fma.f64 alpha alpha -1) (cbrt.f64 (*.f64 (*.f64 2 (log.f64 alpha)) (*.f64 (PI.f64) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))))","(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (+.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))) (cbrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))))) (log.f64 (cbrt.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64))))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (/.f64 (+.f64 (pow.f64 (log.f64 alpha) 3) (pow.f64 (log.f64 alpha) 3)) (fma.f64 (log.f64 alpha) (log.f64 alpha) (-.f64 (*.f64 (log.f64 alpha) (log.f64 alpha)) (*.f64 (log.f64 alpha) (log.f64 alpha)))))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))","(exp.f64 (log.f64 (/.f64 (/.f64 (fma.f64 alpha alpha -1) (log.f64 (pow.f64 (*.f64 alpha alpha) (PI.f64)))) (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))","(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1) (log.f64 alpha)))","(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))"]],"link":["."],"name":["GTR1 distribution"],"oracle":[4.92972150864904],"outputs":[["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha)))"]],"time":52.193115234375,"times":[["cosTheta",7.650146484375],["alpha",7.7509765625],["(/.f64 (-.f64 (*.f64 alpha alpha) 1) (*.f64 (*.f64 (PI.f64) (log.f64 (*.f64 alpha alpha))) (+.f64 1 (*.f64 (*.f64 (-.f64 (*.f64 alpha alpha) 1) cosTheta) cosTheta))))",7.93798828125],["(*.f64 alpha alpha)",7.85986328125],["(*.f64 alpha alpha)",7.469970703125]],"type":"regimes"},{"compiler":[[39,27]],"egraph":[[1,23,57,6.308400000000001e-5],[0,19,57,3.6667e-5]],"inputs":[["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (/.f64 (fma.f64 alpha alpha -1) (*.f64 (PI.f64) 2)) (*.f64 (+.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (fma.f64 alpha alpha -1) (*.f64 cosTheta cosTheta) 1))))) (log.f64 alpha)))"]],"stop":[["fuel",1],["saturated",1]],"time":8.950927734375,"type":"simplify"},{"time":0.01611328125,"type":"soundness"},{"compiler":[[39,27]],"remove-preprocessing":[[]],"time":17.31201171875,"type":"end"}]