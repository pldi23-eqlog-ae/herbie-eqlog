[{"compiler":[[14,10]],"method":["search"],"sampling":[[12,0.21442444053719867,0.7836238645086715,0.0019516949541298345],[11,0.1403505428970755,0.8576977621487947,0.0019516949541298345],[10,0.09356702859805033,0.9044812764478198,0.0019516949541298345],[9,0.062378019065366885,0.9356702859805033,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":136.2509765625,"type":"analyze"},{"outcomes":[["body",256,"invalid",138.420654296875,3079],["body",256,"valid",375.30224609375,8256]],"time":523.804931640625,"type":"sample"},{"compiler":[[13,9]],"egraph":[[1,4,4,6.999e-6],[0,4,4,5.833e-6],[6,3982,91,0.027353251],[5,1772,91,0.013285542],[4,781,91,0.004965499999999999],[3,364,91,0.002042875],[2,214,91,0.000907125],[1,96,91,0.000397042],[0,30,91,0.00012825]],"inputs":[["0","1","2","3"],["(/.f64 (-.f64 (+.f64 x y) z) (*.f64 t 2))","(/.f64 (-.f64 (+.f64 y x) z) (*.f64 t 2))","(/.f64 (-.f64 (+.f64 z y) x) (*.f64 t 2))","(/.f64 (-.f64 (+.f64 t y) z) (*.f64 x 2))","(/.f64 (-.f64 (+.f64 x z) y) (*.f64 t 2))","(/.f64 (-.f64 (+.f64 x t) z) (*.f64 y 2))","(/.f64 (-.f64 (+.f64 x y) t) (*.f64 z 2))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","0","2","3"],["(/.f64 (-.f64 (+.f64 x y) z) (*.f64 t 2))","(/.f64 (+.f64 x (-.f64 y z)) (*.f64 t 2))","(*.f64 -1/2 (/.f64 (-.f64 (-.f64 z x) y) t))","(/.f64 (-.f64 (+.f64 y x) z) (*.f64 t 2))","(/.f64 (-.f64 (+.f64 x y) z) (*.f64 t 2))","(/.f64 (+.f64 x (-.f64 y z)) (*.f64 t 2))","(*.f64 -1/2 (/.f64 (-.f64 (-.f64 z x) y) t))","(/.f64 (-.f64 (+.f64 z y) x) (*.f64 t 2))","(/.f64 (+.f64 z (-.f64 y x)) (*.f64 t 2))","(/.f64 (+.f64 y (-.f64 z x)) (*.f64 t 2))","(*.f64 -1/2 (/.f64 (-.f64 (-.f64 x y) z) t))","(*.f64 -1/2 (/.f64 (-.f64 (-.f64 x z) y) t))","(/.f64 (-.f64 (+.f64 t y) z) (*.f64 x 2))","(/.f64 (+.f64 t (-.f64 y z)) (*.f64 x 2))","(/.f64 (-.f64 y (-.f64 z t)) (*.f64 x 2))","(/.f64 (/.f64 (+.f64 t (-.f64 y z)) x) 2)","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y t)) x))","(/.f64 (-.f64 (+.f64 x z) y) (*.f64 t 2))","(/.f64 (+.f64 x (-.f64 z y)) (*.f64 t 2))","(/.f64 (+.f64 z (-.f64 x y)) (*.f64 t 2))","(*.f64 -1/2 (/.f64 (-.f64 (-.f64 y z) x) t))","(/.f64 (/.f64 (-.f64 (+.f64 x z) y) 2) t)","(/.f64 (-.f64 (+.f64 x t) z) (*.f64 y 2))","(/.f64 (+.f64 x (-.f64 t z)) (*.f64 y 2))","(/.f64 (-.f64 x (-.f64 z t)) (*.f64 y 2))","(*.f64 -1/2 (/.f64 (-.f64 (-.f64 z x) t) y))","(/.f64 (-.f64 (+.f64 x y) t) (*.f64 z 2))","(/.f64 (+.f64 x (-.f64 y t)) (*.f64 z 2))","(*.f64 (/.f64 -1/2 z) (-.f64 t (+.f64 x y)))"]],"stop":[["unsound",1],["node limit",1]],"symmetry":[["(sort x y)"]],"time":52.251953125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[18,7458,13,0.154072082],[17,7458,13,0.135402207],[16,7458,13,0.121267249],[15,7290,13,0.10850170699999999],[14,6098,13,0.09313537399999999],[13,6098,13,0.07293633199999999],[12,6097,13,0.064363249],[11,6085,13,0.055769874],[10,6011,13,0.047098957],[9,5285,13,0.037520207],[8,2691,13,0.024157416],[7,1314,13,0.011199875],[6,611,13,0.004843666],[5,299,13,0.002104791],[4,155,13,0.001048375],[3,74,13,0.0005065],[2,45,13,0.00024450000000000003],[1,21,13,0.000124541],[0,10,13,4.55e-5]],"inputs":[["(/.f64 (-.f64 (+.f64 x y) z) (*.f64 t 2))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 (+.f64 x y) z) (*.f64 t 2))","(/.f64 (+.f64 x (-.f64 y z)) (*.f64 t 2))","(/.f64 (/.f64 (+.f64 x (-.f64 y z)) 2) t)","(*.f64 -1/2 (/.f64 (-.f64 (-.f64 z x) y) t))","(*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))"]],"stop":[["saturated",1]],"time":166.1259765625,"type":"simplify"},{"compiler":[[22,14]],"time":0.416015625,"type":"eval"},{"alts":[["(*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))","next",0.23046875],["(/.f64 (-.f64 (+.f64 x y) z) (*.f64 t 2))","fresh",0.2535330431922998]],"compiler":[[13,9],[13,9],[13,9],[13,9]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.01171875],"time":1.30810546875,"type":"prune"},{"compiler":[[29,12]],"locations":[["(*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))",0.23046875,true]],"time":6.382080078125,"type":"localize"},{"count":[[1,48]],"series":[["(*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))","t","-inf",0.280029296875],["(*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))","t","inf",0.455078125],["(*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))","t","0",0.526123046875],["(*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))","y","-inf",0.358154296875],["(*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))","y","inf",0.761962890625],["(*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))","y","0",0.393798828125],["(*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))","x","-inf",0.385009765625],["(*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))","x","inf",0.4541015625],["(*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))","x","0",0.56689453125],["(*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))","z","-inf",0.4189453125],["(*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))","z","inf",0.51806640625],["(*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))","z","0",0.534912109375]],"time":5.822998046875,"type":"series"},{"count":[[1,47]],"egraph":[[2,3343,13,0.026201709],[1,231,13,0.004280125],[0,10,13,0.000281958]],"inputs":[["(*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 z x) (/.f64 -1/2 t)) (*.f64 (neg.f64 y) (/.f64 -1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 -1/2 t) (-.f64 z x)) (*.f64 (/.f64 -1/2 t) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 -1/2 t)) (-.f64 (-.f64 z x) y))) (cbrt.f64 (pow.f64 (exp.f64 (/.f64 -1/2 t)) (-.f64 (-.f64 z x) y))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 -1/2 t)) (-.f64 (-.f64 z x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 -1/2 t)) (-.f64 (-.f64 z x) y)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 -1/2 t)) (-.f64 (-.f64 z x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (-.f64 z x) y) (*.f64 t -2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 t (*.f64 (-.f64 (-.f64 z x) y) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (-.f64 z x) 3) (pow.f64 y 3)) (*.f64 (*.f64 t -2) (fma.f64 y (+.f64 (-.f64 z x) y) (pow.f64 (-.f64 z x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (-.f64 z x) 2) (*.f64 y y)) (*.f64 (*.f64 t -2) (+.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (-.f64 z x) y) -1/2) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (-.f64 (-.f64 z x) y) -1/2)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (-.f64 z x) 3) (pow.f64 y 3)) -1/2) (*.f64 (fma.f64 y (+.f64 (-.f64 z x) y) (pow.f64 (-.f64 z x) 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (-.f64 z x) 2) (*.f64 y y)) -1/2) (*.f64 (+.f64 (-.f64 z x) y) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (-.f64 z x) 3) (pow.f64 y 3)) 1) (*.f64 (fma.f64 y (+.f64 (-.f64 z x) y) (pow.f64 (-.f64 z x) 2)) (*.f64 t -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (-.f64 z x) 2) (*.f64 y y)) 1) (*.f64 (+.f64 (-.f64 z x) y) (*.f64 t -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (-.f64 z x) 3) (pow.f64 y 3)) 1/2) (*.f64 (fma.f64 y (+.f64 (-.f64 z x) y) (pow.f64 (-.f64 z x) 2)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (-.f64 z x) 2) (*.f64 y y)) 1/2) (*.f64 (+.f64 (-.f64 z x) y) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (-.f64 (pow.f64 (-.f64 z x) 3) (pow.f64 y 3))) (*.f64 t (fma.f64 y (+.f64 (-.f64 z x) y) (pow.f64 (-.f64 z x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (-.f64 (pow.f64 (-.f64 z x) 3) (pow.f64 y 3))) (*.f64 (neg.f64 t) (fma.f64 y (+.f64 (-.f64 z x) y) (pow.f64 (-.f64 z x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1/2 (-.f64 (pow.f64 (-.f64 z x) 2) (*.f64 y y))) (*.f64 t (+.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (-.f64 (pow.f64 (-.f64 z x) 2) (*.f64 y y))) (*.f64 (neg.f64 t) (+.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (-.f64 z x) y) -1/2) 1) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (-.f64 z x) y) -1/2) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (-.f64 (-.f64 z x) y) -1/2) (sqrt.f64 t)) (sqrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (-.f64 z x) 3) (pow.f64 y 3)) (/.f64 -1/2 t)) (fma.f64 y (+.f64 (-.f64 z x) y) (pow.f64 (-.f64 z x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (-.f64 z x) 2) (*.f64 y y)) (/.f64 -1/2 t)) (+.f64 (-.f64 z x) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (-.f64 (-.f64 z x) y)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (-.f64 z x) y) 1/2) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1/2 t) (-.f64 (pow.f64 (-.f64 z x) 3) (pow.f64 y 3))) (fma.f64 y (+.f64 (-.f64 z x) y) (pow.f64 (-.f64 z x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 -1/2 t) (-.f64 (pow.f64 (-.f64 z x) 2) (*.f64 y y))) (+.f64 (-.f64 z x) y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 -1/2 t)) (-.f64 (-.f64 z x) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 (-.f64 z x) y) 3) (pow.f64 (/.f64 -1/2 t) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 -1/2 t) 3) (pow.f64 (-.f64 (-.f64 z x) y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z x) (/.f64 -1/2 t) (*.f64 (neg.f64 y) (/.f64 -1/2 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1/2 t) (-.f64 z x) (*.f64 (/.f64 -1/2 t) (neg.f64 y)))))))"]],"rules":[["egg-rr",47]],"stop":[["node limit",1]],"time":45.385009765625,"type":"rewrite"},{"count":[[95,66]],"egraph":[[17,6555,579,0.16051191599999998],[16,6555,579,0.145608999],[15,6555,579,0.13013108299999998],[14,6555,579,0.11762562399999997],[13,6434,579,0.10606820799999997],[12,6154,579,0.09191524899999998],[11,5453,579,0.07886554099999998],[10,5453,579,0.06526937399999999],[9,5445,579,0.055456041],[8,5326,579,0.045471124],[7,4653,579,0.034325874],[6,2983,579,0.022115666],[5,1489,579,0.010995833],[4,816,579,0.0053138330000000004],[3,378,579,0.002532625],[2,187,735,0.001205417],[1,88,735,0.0005395],[0,38,735,0.000195875]],"inputs":[["(*.f64 1/2 (/.f64 (+.f64 y x) t))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (*.f64 1/2 (/.f64 (+.f64 y x) t)))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (*.f64 1/2 (/.f64 (+.f64 y x) t)))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (*.f64 1/2 (/.f64 (+.f64 y x) t)))","(*.f64 -1/2 (/.f64 z t))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 y x) t)) (*.f64 -1/2 (/.f64 z t)))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 y x) t)) (*.f64 -1/2 (/.f64 z t)))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 y x) t)) (*.f64 -1/2 (/.f64 z t)))","(*.f64 -1/2 (/.f64 z t))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (*.f64 1/2 (+.f64 (/.f64 y t) (/.f64 x t))))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (*.f64 1/2 (+.f64 (/.f64 y t) (/.f64 x t))))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (*.f64 1/2 (+.f64 (/.f64 y t) (/.f64 x t))))","(*.f64 -1/2 (/.f64 (-.f64 z y) t))","(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","(*.f64 1/2 (/.f64 x t))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 y t))) (*.f64 1/2 (/.f64 x t)))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 y t))) (*.f64 1/2 (/.f64 x t)))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 y t))) (*.f64 1/2 (/.f64 x t)))","(*.f64 1/2 (/.f64 x t))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 y t))) (*.f64 1/2 (/.f64 x t)))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 y t))) (*.f64 1/2 (/.f64 x t)))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 y t))) (*.f64 1/2 (/.f64 x t)))","(*.f64 -1/2 (/.f64 (-.f64 z x) t))","(+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 -1/2 (/.f64 (-.f64 z x) t)))","(+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 -1/2 (/.f64 (-.f64 z x) t)))","(+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 -1/2 (/.f64 (-.f64 z x) t)))","(*.f64 1/2 (/.f64 y t))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 x t))) (*.f64 1/2 (/.f64 y t)))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 x t))) (*.f64 1/2 (/.f64 y t)))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 x t))) (*.f64 1/2 (/.f64 y t)))","(*.f64 1/2 (/.f64 y t))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 x t))) (*.f64 1/2 (/.f64 y t)))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 x t))) (*.f64 1/2 (/.f64 y t)))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 x t))) (*.f64 1/2 (/.f64 y t)))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 (/.f64 (+.f64 y x) t))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (*.f64 1/2 (/.f64 (+.f64 y x) t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (*.f64 1/2 (/.f64 (+.f64 y x) t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (*.f64 1/2 (/.f64 (+.f64 y x) t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 -1/2 (/.f64 z t))","(*.f64 (/.f64 -1/2 t) z)","(*.f64 z (/.f64 -1/2 t))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 y x) t)) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 y x) t)) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 y x) t)) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 -1/2 (/.f64 z t))","(*.f64 (/.f64 -1/2 t) z)","(*.f64 z (/.f64 -1/2 t))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (*.f64 1/2 (+.f64 (/.f64 y t) (/.f64 x t))))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (*.f64 1/2 (+.f64 (/.f64 y t) (/.f64 x t))))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (*.f64 1/2 (+.f64 (/.f64 y t) (/.f64 x t))))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 -1/2 (/.f64 (-.f64 z y) t))","(*.f64 (/.f64 -1/2 t) (-.f64 z y))","(*.f64 (-.f64 z y) (/.f64 -1/2 t))","(*.f64 1/2 (/.f64 (-.f64 y z) t))","(/.f64 (-.f64 y z) (/.f64 t 1/2))","(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 1/2 (/.f64 x t))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 y t))) (*.f64 1/2 (/.f64 x t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 y t))) (*.f64 1/2 (/.f64 x t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 y t))) (*.f64 1/2 (/.f64 x t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 1/2 (/.f64 x t))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 y t))) (*.f64 1/2 (/.f64 x t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 y t))) (*.f64 1/2 (/.f64 x t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 y t))) (*.f64 1/2 (/.f64 x t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 -1/2 (/.f64 (-.f64 z x) t))","(*.f64 (/.f64 -1/2 t) (-.f64 z x))","(*.f64 (-.f64 z x) (/.f64 -1/2 t))","(*.f64 1/2 (/.f64 (-.f64 x z) t))","(+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 -1/2 (/.f64 (-.f64 z x) t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 -1/2 (/.f64 (-.f64 z x) t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 -1/2 (/.f64 (-.f64 z x) t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 1/2 (/.f64 y t))","(/.f64 (*.f64 1/2 y) t)","(/.f64 y (/.f64 t 1/2))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 x t))) (*.f64 1/2 (/.f64 y t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 x t))) (*.f64 1/2 (/.f64 y t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 x t))) (*.f64 1/2 (/.f64 y t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 1/2 (/.f64 y t))","(/.f64 (*.f64 1/2 y) t)","(/.f64 y (/.f64 t 1/2))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 x t))) (*.f64 1/2 (/.f64 y t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 x t))) (*.f64 1/2 (/.f64 y t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(+.f64 (*.f64 -1/2 (-.f64 (/.f64 z t) (/.f64 x t))) (*.f64 1/2 (/.f64 y t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))","(*.f64 -1/2 (/.f64 (-.f64 z (+.f64 y x)) t))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 1/2 (/.f64 (+.f64 y x) t) (*.f64 (/.f64 -1/2 t) z))","(*.f64 (-.f64 z (+.f64 y x)) (/.f64 -1/2 t))"]],"stop":[["saturated",1]],"time":191.77685546875,"type":"simplify"},{"compiler":[[956,439]],"time":9.4931640625,"type":"eval"},{"alts":[["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","next",0.015625],["(*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))","done",0.23046875]],"compiler":[[17,12],[13,9],[17,12]],"count":[[68,2]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[66,1],"picked":[1,1]}],"min-error":[0],"time":12.348876953125,"type":"prune"},{"compiler":[[46,18]],"locations":[["(*.f64 1/2 (/.f64 x t))",0.00390625,true],["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))",0.015625,true]],"time":8.31005859375,"type":"localize"},{"count":[[2,45]],"series":[["(*.f64 1/2 (/.f64 x t))","t","-inf",0.142822265625],["(*.f64 1/2 (/.f64 x t))","t","inf",0.155029296875],["(*.f64 1/2 (/.f64 x t))","t","0",0.143798828125],["(*.f64 1/2 (/.f64 x t))","x","-inf",0.305908203125],["(*.f64 1/2 (/.f64 x t))","x","inf",0.35400390625],["(*.f64 1/2 (/.f64 x t))","x","0",0.26904296875],["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","y","-inf",0.364013671875],["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","y","inf",0.381103515625],["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","y","0",0.4619140625],["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","z","-inf",0.375],["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","z","inf",0.388916015625],["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","z","0",0.547119140625],["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","t","-inf",0.433837890625],["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","t","inf",0.7060546875],["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","t","0",1.43603515625],["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","x","-inf",0.197998046875],["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","x","inf",0.388916015625],["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","x","0",0.534912109375]],"time":7.81591796875,"type":"series"},{"count":[[2,92]],"egraph":[[2,4367,24,0.031767251],[1,297,24,0.005755792],[0,13,24,0.000370917]],"inputs":[["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","(*.f64 1/2 (/.f64 x t))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (/.f64 1/2 (/.f64 t x)) 2) (/.f64 (-.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)) (/.f64 (*.f64 (pow.f64 (/.f64 (-.f64 z y) t) 2) 1/4) (/.f64 (-.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x)))) (pow.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x)))) 2) (cbrt.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x)))) (sqrt.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 (/.f64 (-.f64 z y) t) 3) -1/8 (pow.f64 (/.f64 1/2 (/.f64 t x)) 3)) (/.f64 1 (fma.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t)) (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (neg.f64 (/.f64 1/2 (/.f64 t x)))) (pow.f64 (/.f64 1/2 (/.f64 t x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (/.f64 1/2 (/.f64 t x)) 2) (*.f64 (pow.f64 (/.f64 (-.f64 z y) t) 2) 1/4)) (/.f64 1 (/.f64 (-.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t)) (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (neg.f64 (/.f64 1/2 (/.f64 t x)))) (pow.f64 (/.f64 1/2 (/.f64 t x)) 2)) (fma.f64 (pow.f64 (/.f64 (-.f64 z y) t) 3) -1/8 (pow.f64 (/.f64 1/2 (/.f64 t x)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (-.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t) (-.f64 (pow.f64 (/.f64 1/2 (/.f64 t x)) 2) (*.f64 (pow.f64 (/.f64 (-.f64 z y) t) 2) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 (/.f64 (-.f64 z y) t) 3) -1/8 (pow.f64 (/.f64 1/2 (/.f64 t x)) 3)) (fma.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t)) (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (neg.f64 (/.f64 1/2 (/.f64 t x)))) (pow.f64 (/.f64 1/2 (/.f64 t x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 (/.f64 (-.f64 z y) t) 3) -1/8 (pow.f64 (/.f64 1/2 (/.f64 t x)) 3)) (fma.f64 (pow.f64 (/.f64 (-.f64 z y) t) 2) 1/4 (-.f64 (pow.f64 (/.f64 1/2 (/.f64 t x)) 2) (*.f64 (/.f64 1/2 (/.f64 t x)) (*.f64 -1/2 (/.f64 (-.f64 z y) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 1/2 (/.f64 t x)) 2) (*.f64 (pow.f64 (/.f64 (-.f64 z y) t) 2) 1/4)) (/.f64 (-.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (pow.f64 (/.f64 (-.f64 z y) t) 3) -1/8 (pow.f64 (/.f64 1/2 (/.f64 t x)) 3))) (neg.f64 (fma.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t)) (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (neg.f64 (/.f64 1/2 (/.f64 t x)))) (pow.f64 (/.f64 1/2 (/.f64 t x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 1/2 (/.f64 t x)) 2) (*.f64 (pow.f64 (/.f64 (-.f64 z y) t) 2) 1/4))) (neg.f64 (/.f64 (-.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 1/2 x) t (*.f64 t (*.f64 -1/2 (-.f64 z y)))) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 -1/2 (-.f64 z y)) t (*.f64 t (*.f64 1/2 x))) (*.f64 t t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 (/.f64 (-.f64 z y) t) 2) 1/4 (neg.f64 (pow.f64 (/.f64 1/2 (/.f64 t x)) 2))) (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (neg.f64 (/.f64 1/2 (/.f64 t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1/2 (/.f64 t x)))) (pow.f64 (exp.f64 -1/2) (/.f64 (-.f64 z y) t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 1/2 (/.f64 t x))) (+.f64 1 (expm1.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1/2 (/.f64 t x)))) (+.f64 1 (expm1.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t)))) (exp.f64 (/.f64 1/2 (/.f64 t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 -1/2) (/.f64 (-.f64 z y) t)) (+.f64 1 (expm1.f64 (/.f64 1/2 (/.f64 t x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t)))) (+.f64 1 (expm1.f64 (/.f64 1/2 (/.f64 t x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (/.f64 x t) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 (/.f64 1 t) 1/2) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x t) 1/2 (*.f64 -1/2 (/.f64 (-.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1/2 (/.f64 t x)) 1 (*.f64 -1/2 (/.f64 (-.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (/.f64 (-.f64 z y) t) (/.f64 1/2 (/.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 z y) (*.f64 (/.f64 1 t) -1/2) (/.f64 1/2 (/.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 z y) t) -1/2 (/.f64 1/2 (/.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t)) 1 (/.f64 1/2 (/.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1/2 (/.f64 t x)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -1/2 (/.f64 (-.f64 z y) t)) (/.f64 1/2 (/.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) t)) 2) (*.f64 (cbrt.f64 (/.f64 (-.f64 z y) t)) -1/2) (/.f64 1/2 (/.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x t)) 2) (*.f64 (cbrt.f64 (/.f64 x t)) 1/2) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t))) (pow.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t))) 2) (/.f64 1/2 (/.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t))) 2) (cbrt.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t))) (/.f64 1/2 (/.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1/2 (/.f64 t x))) (pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 t x))) 2) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 t x))) 2) (cbrt.f64 (/.f64 1/2 (/.f64 t x))) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 z y) t)) (*.f64 (sqrt.f64 (/.f64 (-.f64 z y) t)) -1/2) (/.f64 1/2 (/.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x t)) (*.f64 (sqrt.f64 (/.f64 x t)) 1/2) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t))) (sqrt.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t))) (/.f64 1/2 (/.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 1/2 (/.f64 t x))) (sqrt.f64 (/.f64 1/2 (/.f64 t x))) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 x) (/.f64 1 t) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/2 (-.f64 z y)) (/.f64 1 t) (/.f64 1/2 (/.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1/2 (pow.f64 (cbrt.f64 t) 2)) (/.f64 (-.f64 z y) (cbrt.f64 t)) (/.f64 1/2 (/.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1/2 (sqrt.f64 t)) (/.f64 (-.f64 z y) (sqrt.f64 t)) (/.f64 1/2 (/.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1/2 (pow.f64 (cbrt.f64 t) 2)) (/.f64 x (cbrt.f64 t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1/2 (sqrt.f64 t)) (/.f64 x (sqrt.f64 t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/2 (pow.f64 (cbrt.f64 (/.f64 (-.f64 z y) t)) 2)) (cbrt.f64 (/.f64 (-.f64 z y) t)) (/.f64 1/2 (/.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/2 (sqrt.f64 (/.f64 (-.f64 z y) t))) (sqrt.f64 (/.f64 (-.f64 z y) t)) (/.f64 1/2 (/.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (pow.f64 (cbrt.f64 (/.f64 x t)) 2)) (cbrt.f64 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/2 (sqrt.f64 (/.f64 x t))) (sqrt.f64 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1/2 (/.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 1/2 (/.f64 t x)))) (cbrt.f64 (exp.f64 (/.f64 1/2 (/.f64 t x)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 1/2 (/.f64 t x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 1/2 (/.f64 t x))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 1/2 (/.f64 t x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1/2 (/.f64 t x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1/2 (/.f64 t x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 t (*.f64 1/2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 x) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 1/2 x)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/2 x) 1) t)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/2 x) (pow.f64 (cbrt.f64 t) 2)) (cbrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 1/2 x) (sqrt.f64 t)) (sqrt.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) 1/2) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 1/2 (neg.f64 x)) (neg.f64 t))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1/2 (/.f64 t x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1/2 (/.f64 t x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 1/2 (/.f64 t x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 1/2 (/.f64 t x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 1/2 (/.f64 t x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1/2 (/.f64 t x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1/2 (/.f64 t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 1/2 (/.f64 t x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1/2 (/.f64 t x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1/2 (/.f64 t x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 1/2 (/.f64 t x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 1/2 (/.f64 t x))) 1))))))"]],"rules":[["egg-rr",25],["egg-rr",67]],"stop":[["node limit",1]],"time":55.30615234375,"type":"rewrite"},{"count":[[137,109]],"egraph":[[17,6220,540,0.15914004199999998],[16,6220,540,0.144138625],[15,6220,540,0.128499209],[14,6220,540,0.115819959],[13,6163,540,0.10416325],[12,6023,540,0.091249375],[11,5315,540,0.078221292],[10,5315,540,0.06469104199999999],[9,5312,540,0.054841208999999995],[8,5249,540,0.044998791999999996],[7,4747,540,0.034128292],[6,3009,540,0.021753458],[5,1239,540,0.009868458],[4,532,541,0.004109042],[3,249,688,0.0018994580000000001],[2,141,691,0.001002125],[1,67,691,0.000479917],[0,30,691,0.000172375]],"inputs":[["(*.f64 -1/2 (/.f64 (-.f64 z y) t))","(*.f64 1/2 (/.f64 x t))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t)) (*.f64 1/2 (/.f64 x t)))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t)) (*.f64 1/2 (/.f64 x t)))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t)) (*.f64 1/2 (/.f64 x t)))","(*.f64 1/2 (/.f64 x t))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t)) (*.f64 1/2 (/.f64 x t)))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t)) (*.f64 1/2 (/.f64 x t)))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t)) (*.f64 1/2 (/.f64 x t)))","(/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)","(/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)","(/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)","(/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)","(/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)","(/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)","(/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)","(/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 x) (*.f64 1/2 (-.f64 z y))) t))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 x) (*.f64 1/2 (-.f64 z y))) t))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 x) (*.f64 1/2 (-.f64 z y))) t))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 x) (*.f64 1/2 (-.f64 z y))) t))","(+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t)))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(*.f64 -1/2 (/.f64 z t))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(*.f64 -1/2 (/.f64 z t))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (*.f64 1/2 (/.f64 x t)))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(*.f64 1/2 (/.f64 y t))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(*.f64 1/2 (/.f64 y t))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1/2 (/.f64 (-.f64 z y) t))","(*.f64 (-.f64 z y) (/.f64 -1/2 t))","(*.f64 1/2 (/.f64 x t))","(*.f64 x (/.f64 1/2 t))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t)) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t)) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t)) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(*.f64 1/2 (/.f64 x t))","(*.f64 x (/.f64 1/2 t))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t)) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t)) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(+.f64 (*.f64 -1/2 (/.f64 (-.f64 z y) t)) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 (-.f64 z y))) t)","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 x) (*.f64 1/2 (-.f64 z y))) t))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 x) (*.f64 1/2 (-.f64 z y))) t))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 x) (*.f64 1/2 (-.f64 z y))) t))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 x) (*.f64 1/2 (-.f64 z y))) t))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t)))","(*.f64 1/2 (+.f64 (/.f64 y t) (/.f64 x t)))","(*.f64 1/2 (+.f64 (/.f64 x t) (/.f64 y t)))","(*.f64 (/.f64 1/2 t) (+.f64 x y))","(*.f64 (/.f64 1/2 t) (+.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(*.f64 -1/2 (/.f64 z t))","(/.f64 z (/.f64 t -1/2))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(*.f64 -1/2 (/.f64 z t))","(/.f64 z (/.f64 t -1/2))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 z t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 1/2 (/.f64 x t) (*.f64 -1/2 (/.f64 z t)))","(fma.f64 -1/2 (/.f64 z t) (*.f64 x (/.f64 1/2 t)))","(/.f64 (fma.f64 -1/2 z (*.f64 1/2 x)) t)","(/.f64 1/2 (/.f64 t (-.f64 x z)))","(*.f64 (/.f64 1/2 t) (-.f64 x z))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(*.f64 1/2 (/.f64 y t))","(/.f64 (*.f64 1/2 y) t)","(/.f64 (*.f64 y 1/2) t)","(*.f64 y (/.f64 1/2 t))","(/.f64 y (/.f64 t 1/2))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(*.f64 1/2 (/.f64 y t))","(/.f64 (*.f64 1/2 y) t)","(/.f64 (*.f64 y 1/2) t)","(*.f64 y (/.f64 1/2 t))","(/.f64 y (/.f64 t 1/2))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))","(+.f64 (*.f64 -1/2 (/.f64 z t)) (+.f64 (*.f64 1/2 (/.f64 y t)) (*.f64 1/2 (/.f64 x t))))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 1/2 (/.f64 x t)))","(fma.f64 -1/2 (/.f64 (-.f64 z y) t) (*.f64 x (/.f64 1/2 t)))","(/.f64 1/2 (/.f64 t (+.f64 x (-.f64 y z))))","(*.f64 (/.f64 1/2 t) (+.f64 y (-.f64 x z)))"]],"stop":[["saturated",1]],"time":190.02978515625,"type":"simplify"},{"compiler":[[1964,937]],"time":20.08203125,"type":"eval"},{"alts":[["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","done",0.015625],["(*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))","done",0.23046875]],"compiler":[[17,12],[13,9]],"count":[[111,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[109,0],"picked":[1,1]}],"min-error":[0],"time":23.1669921875,"type":"prune"},{"accuracy":[0.015625],"baseline":[0.015625],"branch":[["x",0.015625,1],["y",0.015625,1],["z",0.015625,1],["t",0.015625,1],["(/.f64 (-.f64 (+.f64 x y) z) (*.f64 t 2))",0.015625,1],["(-.f64 (+.f64 x y) z)",0.015625,1],["(+.f64 x y)",0.015625,1],["(*.f64 t 2)",0.015625,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[13,9],[9,6],[7,5],[7,6],[35,22]],"count":[[3,1]],"inputs":[["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))","(*.f64 (-.f64 (-.f64 z x) y) (/.f64 -1/2 t))","(/.f64 (-.f64 (+.f64 x y) z) (*.f64 t 2))"]],"link":["."],"name":["Optimisation.CirclePacking:place from circle-packing-0.1.0.4, B"],"oracle":[0.4840017931922998],"outputs":[["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))"]],"time":25.2099609375,"times":[["x",2.97802734375],["y",2.972900390625],["z",2.9560546875],["t",3.0810546875],["(/.f64 (-.f64 (+.f64 x y) z) (*.f64 t 2))",3.0390625],["(-.f64 (+.f64 x y) z)",3.01904296875],["(+.f64 x y)",3.013916015625],["(*.f64 t 2)",3.1650390625]],"type":"regimes"},{"compiler":[[17,12]],"egraph":[[4,26,19,0.00012375],[3,25,19,9.9333e-5],[2,23,19,7.4583e-5],[1,18,19,5.0375e-5],[0,13,19,2.4291e-5]],"inputs":[["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 1/2 (/.f64 x t)) (*.f64 -1/2 (/.f64 (-.f64 z y) t)))"]],"stop":[["done",1],["saturated",1]],"time":8.41015625,"type":"simplify"},{"time":0.012939453125,"type":"soundness"},{"compiler":[[17,12],[17,12],[17,12]],"remove-preprocessing":[["(sort x y)"]],"time":10.14306640625,"type":"end"}]