[{"compiler":[[24,16]],"method":["search"],"sampling":[[1,2.938735877055719e-39,0.0,1.0],[0,0.0,2.938735877055719e-39,1.0]],"time":0.1708984375,"type":"analyze"},{"outcomes":[["body",256,"valid",389.679931640625,8256]],"time":397.111083984375,"type":"sample"},{"compiler":[[17,11]],"egraph":[[0,2,2,2.209e-6],[7,7547,40,0.045417543],[6,6126,40,0.033044918],[5,3251,40,0.018372001],[4,1010,40,0.008153708999999999],[3,430,40,0.0029607089999999997],[2,148,40,0.001131334],[1,49,40,0.000378584],[0,18,40,0.000126917]],"inputs":[["0","1"],["(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (-.f64 (*.f64 y y) 2)))","(-.f64 (*.f64 9 (pow.f64 y 4)) (*.f64 (*.f64 x x) (-.f64 (*.f64 x x) 2)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (-.f64 (*.f64 y y) 2)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (*.f64 y (fma.f64 y y -2))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (fma.f64 y y -2)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (fma.f64 y -2 (pow.f64 y 3))))","(-.f64 (*.f64 9 (pow.f64 y 4)) (*.f64 (*.f64 x x) (-.f64 (*.f64 x x) 2)))","(-.f64 (*.f64 9 (pow.f64 y 4)) (*.f64 x (*.f64 x (fma.f64 x x -2))))","(-.f64 (*.f64 9 (pow.f64 y 4)) (*.f64 (*.f64 x x) (fma.f64 x x -2)))","(fma.f64 9 (pow.f64 y 4) (*.f64 (*.f64 x (fma.f64 x x -2)) (neg.f64 x)))","(fma.f64 9 (pow.f64 y 4) (*.f64 x (-.f64 (*.f64 x 2) (pow.f64 x 3))))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":70.115966796875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[12,6618,20,0.08953646000000001],[11,6216,20,0.07247479300000001],[10,5890,20,0.060765334000000004],[9,5591,20,0.048581167],[8,4834,20,0.038420792],[7,3962,20,0.027237875],[6,2188,20,0.014519250000000001],[5,1116,20,0.00721925],[4,493,20,0.0034895],[3,237,20,0.0015357090000000001],[2,82,20,0.000624792],[1,29,20,0.000222584],[0,12,20,7.475e-5]],"inputs":[["(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (-.f64 (*.f64 y y) 2)))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (-.f64 (*.f64 y y) 2)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (*.f64 y (fma.f64 y y -2))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (fma.f64 y y -2)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (fma.f64 y -2 (pow.f64 y 3))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))"]],"stop":[["node limit",1]],"time":102.89892578125,"type":"simplify"},{"compiler":[[31,21]],"time":0.610107421875,"type":"eval"},{"alts":[["(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))","next",61.99859042974503]],"compiler":[[16,12],[16,12]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[61.99859042974503],"time":0.885009765625,"type":"prune"},{"compiler":[[43,30]],"locations":[["(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))",61.99859042974503,true]],"time":13.8359375,"type":"localize"},{"count":[[1,24]],"series":[["(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))","y","-inf",0.49609375],["(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))","y","inf",0.5],["(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))","y","0",0.613037109375],["(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))","x","-inf",0.25390625],["(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))","x","inf",0.591064453125],["(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))","x","0",1.135009765625]],"time":3.72900390625,"type":"series"},{"count":[[1,106]],"egraph":[[2,3116,20,0.027073124],[1,262,20,0.004584791],[0,12,20,0.000422375]],"inputs":[["(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 9 (pow.f64 x 4)) (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (fma.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 2) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (+.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (fma.f64 -1 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 2)) (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (*.f64 9 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) 2) (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (sqrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 (pow.f64 (pow.f64 x 4) 3) 729) (pow.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) 3)) (/.f64 1 (fma.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) (fma.f64 9 (pow.f64 x 4) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (*.f64 (pow.f64 x 8) 81))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 (pow.f64 x 8) 81) (pow.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) 2)) (/.f64 1 (fma.f64 9 (pow.f64 x 4) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (*.f64 x x) 3 (sqrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (-.f64 (*.f64 (*.f64 x x) 3) (sqrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) (fma.f64 9 (pow.f64 x 4) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (*.f64 (pow.f64 x 8) 81)) (-.f64 (*.f64 (pow.f64 (pow.f64 x 4) 3) 729) (pow.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 9 (pow.f64 x 4) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (-.f64 (*.f64 (pow.f64 x 8) 81) (pow.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (pow.f64 x 4) 3) 729) (pow.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) 3)) (fma.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) (fma.f64 9 (pow.f64 x 4) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (*.f64 (pow.f64 x 8) 81)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 x 8) 81) (pow.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) 2)) (fma.f64 9 (pow.f64 x 4) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 (pow.f64 (pow.f64 x 4) 3) 729) (pow.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) 3))) (neg.f64 (fma.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) (fma.f64 9 (pow.f64 x 4) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (*.f64 (pow.f64 x 8) 81))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 (pow.f64 x 8) 81) (pow.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) 2))) (neg.f64 (fma.f64 9 (pow.f64 x 4) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 (pow.f64 x 4) 3) 729 (pow.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 3)) (fma.f64 (pow.f64 x 8) 81 (-.f64 (pow.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 2) (*.f64 (*.f64 9 (pow.f64 x 4)) (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 x 8) 81) (pow.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 2)) (-.f64 (*.f64 9 (pow.f64 x 4)) (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) (fma.f64 9 (pow.f64 x 4) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (*.f64 (pow.f64 x 8) 81)) (-.f64 (*.f64 (pow.f64 (pow.f64 x 4) 3) 729) (pow.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 9 (pow.f64 x 4) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (-.f64 (*.f64 (pow.f64 x 8) 81) (pow.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 9 (pow.f64 x 4)))) (exp.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 (pow.f64 x 4)) 9) (+.f64 1 (expm1.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 9 (pow.f64 x 4)))) (+.f64 1 (expm1.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 9 (pow.f64 x 4)))) (exp.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (pow.f64 x 4)) 9) (/.f64 1 (exp.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 9 (pow.f64 x 4)))) (/.f64 1 (exp.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (pow.f64 (exp.f64 (pow.f64 x 4)) 9)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (pow.f64 (exp.f64 (pow.f64 x 4)) 9)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (+.f64 1 (expm1.f64 (*.f64 9 (pow.f64 x 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (+.f64 1 (expm1.f64 (*.f64 9 (pow.f64 x 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 9 (pow.f64 x 4) (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 9 (pow.f64 x 4) (*.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 4) 9 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x 4) 9 (*.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 9 (pow.f64 x 4)) 1 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 9 (pow.f64 x 4)) 1 (*.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1 (fma.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1 (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 2) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1 (+.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 9 (pow.f64 x 4)) (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 9 (pow.f64 x 4)) (*.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (fma.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 2) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (+.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (*.f64 9 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) (*.f64 (*.f64 x x) 9) (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x x) (*.f64 (*.f64 x x) 9) (*.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 2) (neg.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (*.f64 9 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x 8)) (*.f64 (cbrt.f64 (pow.f64 x 4)) 9) (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 x 8)) (*.f64 (cbrt.f64 (pow.f64 x 4)) 9) (*.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) 2) (fma.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) 2) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 2) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) 2) (+.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) 2) (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (fma.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) 2) (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 2) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) 2) (cbrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (+.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 9 (pow.f64 x 4))) (cbrt.f64 (*.f64 (pow.f64 x 8) 81)) (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 9 (pow.f64 x 4))) (cbrt.f64 (*.f64 (pow.f64 x 8) 81)) (*.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 x 8) 81)) (cbrt.f64 (*.f64 9 (pow.f64 x 4))) (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 x 8) 81)) (cbrt.f64 (*.f64 9 (pow.f64 x 4))) (*.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (neg.f64 (sqrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (*.f64 9 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (sqrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (fma.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (sqrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 2) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (sqrt.f64 (-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (+.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 x x) 3) (*.f64 (*.f64 x x) 3) (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 x x) 3) (*.f64 (*.f64 x x) 3) (*.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 (pow.f64 (pow.f64 x 4) 3) 729) (pow.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) 3)) (/.f64 1 (fma.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) (fma.f64 9 (pow.f64 x 4) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (*.f64 (pow.f64 x 8) 81))) (fma.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 (pow.f64 (pow.f64 x 4) 3) 729) (pow.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) 3)) (/.f64 1 (fma.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) (fma.f64 9 (pow.f64 x 4) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (*.f64 (pow.f64 x 8) 81))) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 2) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 (pow.f64 (pow.f64 x 4) 3) 729) (pow.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) 3)) (/.f64 1 (fma.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) (fma.f64 9 (pow.f64 x 4) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (*.f64 (pow.f64 x 8) 81))) (+.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 (pow.f64 x 8) 81) (pow.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) 2)) (/.f64 1 (fma.f64 9 (pow.f64 x 4) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (fma.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 (pow.f64 x 8) 81) (pow.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) 2)) (/.f64 1 (fma.f64 9 (pow.f64 x 4) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 2) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 (pow.f64 x 8) 81) (pow.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) 2)) (/.f64 1 (fma.f64 9 (pow.f64 x 4) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (+.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) 2) (cbrt.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (*.f64 9 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (sqrt.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (*.f64 9 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (sqrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (*.f64 9 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)) (*.f64 9 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (*.f64 x x) 3 (sqrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (-.f64 (*.f64 (*.f64 x x) 3) (sqrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (fma.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (*.f64 x x) 3 (sqrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (-.f64 (*.f64 (*.f64 x x) 3) (sqrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (fma.f64 (neg.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 2) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (*.f64 x x) 3 (sqrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (-.f64 (*.f64 (*.f64 x x) 3) (sqrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))) (+.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 2)) (cbrt.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) (*.f64 9 (pow.f64 x 4)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 9 (cbrt.f64 (pow.f64 x 8))) (cbrt.f64 (pow.f64 x 4)) (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 9 (cbrt.f64 (pow.f64 x 8))) (cbrt.f64 (pow.f64 x 4)) (*.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 9 (*.f64 x x)) (*.f64 x x) (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 9 (*.f64 x x)) (*.f64 x x) (*.f64 (neg.f64 (fma.f64 y (*.f64 y -2) (pow.f64 y 4))) 1))))))"]],"rules":[["egg-rr",106]],"stop":[["node limit",1]],"time":57.285888671875,"type":"rewrite"},{"count":[[130,117]],"egraph":[[10,7719,346,0.08524525],[9,7340,386,0.07342479099999999],[8,6997,386,0.060194915999999994],[7,6096,386,0.046912831999999995],[6,5147,386,0.032130123999999996],[5,3011,386,0.017641248999999998],[4,1206,386,0.008706874],[3,386,386,0.002902791],[2,125,386,0.00104475],[1,52,386,0.00042779199999999997],[0,21,422,0.000131]],"inputs":[["(*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2))))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2)))))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2)))))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2)))))","(*.f64 9 (pow.f64 x 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2)))))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2)))))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2)))))","(*.f64 9 (pow.f64 x 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2)))))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2)))))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2)))))","(*.f64 9 (pow.f64 x 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 2 (pow.f64 y 2)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (+.f64 (*.f64 2 (pow.f64 y 2)) (*.f64 -1 (pow.f64 y 4))))","(+.f64 (*.f64 9 (pow.f64 x 4)) (+.f64 (*.f64 2 (pow.f64 y 2)) (*.f64 -1 (pow.f64 y 4))))","(*.f64 -1 (pow.f64 y 4))","(+.f64 (*.f64 2 (pow.f64 y 2)) (*.f64 -1 (pow.f64 y 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (+.f64 (*.f64 2 (pow.f64 y 2)) (*.f64 -1 (pow.f64 y 4))))","(+.f64 (*.f64 9 (pow.f64 x 4)) (+.f64 (*.f64 2 (pow.f64 y 2)) (*.f64 -1 (pow.f64 y 4))))","(*.f64 -1 (pow.f64 y 4))","(+.f64 (*.f64 2 (pow.f64 y 2)) (*.f64 -1 (pow.f64 y 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (+.f64 (*.f64 2 (pow.f64 y 2)) (*.f64 -1 (pow.f64 y 4))))","(+.f64 (*.f64 9 (pow.f64 x 4)) (+.f64 (*.f64 2 (pow.f64 y 2)) (*.f64 -1 (pow.f64 y 4))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2))))","(neg.f64 (+.f64 (pow.f64 y 4) (*.f64 -2 (*.f64 y y))))","(-.f64 (*.f64 y (*.f64 y 2)) (pow.f64 y 4))","(*.f64 y (*.f64 y (-.f64 2 (*.f64 y y))))","(*.f64 (*.f64 y y) (-.f64 2 (*.f64 y y)))","(*.f64 y (*.f64 y (fma.f64 y y -2)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2)))))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (+.f64 (pow.f64 y 4) (*.f64 -2 (*.f64 y y)))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 -2 (*.f64 y y) (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (*.f64 y (fma.f64 y y -2))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (fma.f64 y y -2)))","(fma.f64 y (*.f64 y (fma.f64 y y -2)) (*.f64 9 (pow.f64 x 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2)))))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (+.f64 (pow.f64 y 4) (*.f64 -2 (*.f64 y y)))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 -2 (*.f64 y y) (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (*.f64 y (fma.f64 y y -2))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (fma.f64 y y -2)))","(fma.f64 y (*.f64 y (fma.f64 y y -2)) (*.f64 9 (pow.f64 x 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2)))))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (+.f64 (pow.f64 y 4) (*.f64 -2 (*.f64 y y)))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 -2 (*.f64 y y) (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (*.f64 y (fma.f64 y y -2))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (fma.f64 y y -2)))","(fma.f64 y (*.f64 y (fma.f64 y y -2)) (*.f64 9 (pow.f64 x 4)))","(*.f64 9 (pow.f64 x 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2)))))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (+.f64 (pow.f64 y 4) (*.f64 -2 (*.f64 y y)))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 -2 (*.f64 y y) (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (*.f64 y (fma.f64 y y -2))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (fma.f64 y y -2)))","(fma.f64 y (*.f64 y (fma.f64 y y -2)) (*.f64 9 (pow.f64 x 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2)))))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (+.f64 (pow.f64 y 4) (*.f64 -2 (*.f64 y y)))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 -2 (*.f64 y y) (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (*.f64 y (fma.f64 y y -2))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (fma.f64 y y -2)))","(fma.f64 y (*.f64 y (fma.f64 y y -2)) (*.f64 9 (pow.f64 x 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2)))))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (+.f64 (pow.f64 y 4) (*.f64 -2 (*.f64 y y)))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 -2 (*.f64 y y) (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (*.f64 y (fma.f64 y y -2))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (fma.f64 y y -2)))","(fma.f64 y (*.f64 y (fma.f64 y y -2)) (*.f64 9 (pow.f64 x 4)))","(*.f64 9 (pow.f64 x 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2)))))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (+.f64 (pow.f64 y 4) (*.f64 -2 (*.f64 y y)))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 -2 (*.f64 y y) (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (*.f64 y (fma.f64 y y -2))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (fma.f64 y y -2)))","(fma.f64 y (*.f64 y (fma.f64 y y -2)) (*.f64 9 (pow.f64 x 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2)))))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (+.f64 (pow.f64 y 4) (*.f64 -2 (*.f64 y y)))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 -2 (*.f64 y y) (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (*.f64 y (fma.f64 y y -2))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (fma.f64 y y -2)))","(fma.f64 y (*.f64 y (fma.f64 y y -2)) (*.f64 9 (pow.f64 x 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 -1 (+.f64 (pow.f64 y 4) (*.f64 -2 (pow.f64 y 2)))))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (+.f64 (pow.f64 y 4) (*.f64 -2 (*.f64 y y)))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 -2 (*.f64 y y) (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (*.f64 y (fma.f64 y y -2))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (fma.f64 y y -2)))","(fma.f64 y (*.f64 y (fma.f64 y y -2)) (*.f64 9 (pow.f64 x 4)))","(*.f64 9 (pow.f64 x 4))","(+.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 2 (pow.f64 y 2)))","(fma.f64 9 (pow.f64 x 4) (*.f64 2 (*.f64 y y)))","(fma.f64 9 (pow.f64 x 4) (*.f64 y (*.f64 y 2)))","(fma.f64 9 (pow.f64 x 4) (*.f64 y (*.f64 y -2)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (+.f64 (*.f64 2 (pow.f64 y 2)) (*.f64 -1 (pow.f64 y 4))))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (+.f64 (pow.f64 y 4) (*.f64 -2 (*.f64 y y)))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 -2 (*.f64 y y) (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (*.f64 y (fma.f64 y y -2))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (fma.f64 y y -2)))","(fma.f64 y (*.f64 y (fma.f64 y y -2)) (*.f64 9 (pow.f64 x 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (+.f64 (*.f64 2 (pow.f64 y 2)) (*.f64 -1 (pow.f64 y 4))))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (+.f64 (pow.f64 y 4) (*.f64 -2 (*.f64 y y)))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 -2 (*.f64 y y) (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (*.f64 y (fma.f64 y y -2))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (fma.f64 y y -2)))","(fma.f64 y (*.f64 y (fma.f64 y y -2)) (*.f64 9 (pow.f64 x 4)))","(*.f64 -1 (pow.f64 y 4))","(neg.f64 (pow.f64 y 4))","(pow.f64 y 4)","(+.f64 (*.f64 2 (pow.f64 y 2)) (*.f64 -1 (pow.f64 y 4)))","(neg.f64 (+.f64 (pow.f64 y 4) (*.f64 -2 (*.f64 y y))))","(-.f64 (*.f64 y (*.f64 y 2)) (pow.f64 y 4))","(*.f64 y (*.f64 y (-.f64 2 (*.f64 y y))))","(*.f64 (*.f64 y y) (-.f64 2 (*.f64 y y)))","(*.f64 y (*.f64 y (fma.f64 y y -2)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (+.f64 (*.f64 2 (pow.f64 y 2)) (*.f64 -1 (pow.f64 y 4))))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (+.f64 (pow.f64 y 4) (*.f64 -2 (*.f64 y y)))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 -2 (*.f64 y y) (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (*.f64 y (fma.f64 y y -2))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (fma.f64 y y -2)))","(fma.f64 y (*.f64 y (fma.f64 y y -2)) (*.f64 9 (pow.f64 x 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (+.f64 (*.f64 2 (pow.f64 y 2)) (*.f64 -1 (pow.f64 y 4))))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (+.f64 (pow.f64 y 4) (*.f64 -2 (*.f64 y y)))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 -2 (*.f64 y y) (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (*.f64 y (fma.f64 y y -2))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (fma.f64 y y -2)))","(fma.f64 y (*.f64 y (fma.f64 y y -2)) (*.f64 9 (pow.f64 x 4)))","(*.f64 -1 (pow.f64 y 4))","(neg.f64 (pow.f64 y 4))","(pow.f64 y 4)","(+.f64 (*.f64 2 (pow.f64 y 2)) (*.f64 -1 (pow.f64 y 4)))","(neg.f64 (+.f64 (pow.f64 y 4) (*.f64 -2 (*.f64 y y))))","(-.f64 (*.f64 y (*.f64 y 2)) (pow.f64 y 4))","(*.f64 y (*.f64 y (-.f64 2 (*.f64 y y))))","(*.f64 (*.f64 y y) (-.f64 2 (*.f64 y y)))","(*.f64 y (*.f64 y (fma.f64 y y -2)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (+.f64 (*.f64 2 (pow.f64 y 2)) (*.f64 -1 (pow.f64 y 4))))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (+.f64 (pow.f64 y 4) (*.f64 -2 (*.f64 y y)))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 -2 (*.f64 y y) (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (*.f64 y (fma.f64 y y -2))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (fma.f64 y y -2)))","(fma.f64 y (*.f64 y (fma.f64 y y -2)) (*.f64 9 (pow.f64 x 4)))","(+.f64 (*.f64 9 (pow.f64 x 4)) (+.f64 (*.f64 2 (pow.f64 y 2)) (*.f64 -1 (pow.f64 y 4))))","(fma.f64 9 (pow.f64 x 4) (neg.f64 (+.f64 (pow.f64 y 4) (*.f64 -2 (*.f64 y y)))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 -2 (*.f64 y y) (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 y (*.f64 y (fma.f64 y y -2))))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (fma.f64 y y -2)))","(fma.f64 y (*.f64 y (fma.f64 y y -2)) (*.f64 9 (pow.f64 x 4)))"]],"stop":[["node limit",1]],"time":108.64697265625,"type":"simplify"},{"compiler":[[3358,2452]],"time":45.68408203125,"type":"eval"},{"alts":[["(fma.f64 9 (pow.f64 x 4) (*.f64 y (*.f64 y -2)))","next",57.82629144711741]],"compiler":[[12,9],[12,9]],"count":[[118,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[117,1],"picked":[1,0]}],"min-error":[57.82629144711741],"time":8.950927734375,"type":"prune"},{"compiler":[[28,19]],"time":7.609130859375,"type":"localize"},{"compiler":[[2,2]],"time":0.0888671875,"type":"eval"},{"alts":[["(fma.f64 9 (pow.f64 x 4) (*.f64 y (*.f64 y -2)))","done",57.82629144711741]],"compiler":[[12,9]],"count":[[1,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[0,0],"picked":[1,1]}],"min-error":[57.82629144711741],"time":0.34716796875,"type":"prune"},{"accuracy":[57.82629144711741],"baseline":[57.82629144711741],"branch":[["x",57.82629144711741,1],["y",57.82629144711741,1],["(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (-.f64 (*.f64 y y) 2)))",57.82629144711741,1],["(*.f64 9 (pow.f64 x 4))",57.82629144711741,1],["(*.f64 9 (pow.f64 x 4))",57.82629144711741,1],["(pow.f64 x 4)",57.82629144711741,1],["(*.f64 (*.f64 y y) (-.f64 (*.f64 y y) 2))",57.82629144711741,1],["(*.f64 y y)",57.82629144711741,1]],"compiler":[[3,2],[3,2],[17,11],[7,6],[7,6],[5,4],[11,6],[5,3],[41,28]],"count":[[3,1]],"inputs":[["(fma.f64 9 (pow.f64 x 4) (*.f64 y (*.f64 y -2)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (fma.f64 y (*.f64 y -2) (pow.f64 y 4)))","(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (-.f64 (*.f64 y y) 2)))"]],"link":["."],"name":["From Rump in a 1983 paper, rewritten"],"oracle":[61.99859042974503],"outputs":[["(fma.f64 9 (pow.f64 x 4) (*.f64 y (*.f64 y -2)))"]],"time":15.75390625,"times":[["x",1.68896484375],["y",1.77392578125],["(-.f64 (*.f64 9 (pow.f64 x 4)) (*.f64 (*.f64 y y) (-.f64 (*.f64 y y) 2)))",1.970947265625],["(*.f64 9 (pow.f64 x 4))",1.809814453125],["(*.f64 9 (pow.f64 x 4))",1.962158203125],["(pow.f64 x 4)",1.774169921875],["(*.f64 (*.f64 y y) (-.f64 (*.f64 y y) 2))",1.828125],["(*.f64 y y)",1.762939453125]],"type":"regimes"},{"compiler":[[12,9]],"egraph":[[1,12,14,3.4250000000000006e-5],[0,10,14,2.0958e-5]],"inputs":[["(fma.f64 9 (pow.f64 x 4) (*.f64 y (*.f64 y -2)))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 9 (pow.f64 x 4) (*.f64 y (*.f64 y -2)))"]],"stop":[["done",1],["saturated",1]],"time":8.3310546875,"type":"simplify"},{"time":0.01806640625,"type":"soundness"},{"compiler":[[12,9]],"remove-preprocessing":[[]],"time":9.137939453125,"type":"end"}]