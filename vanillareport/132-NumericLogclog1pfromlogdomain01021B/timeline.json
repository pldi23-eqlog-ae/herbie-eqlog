[{"compiler":[[10,8]],"method":["search"],"sampling":[[12,0.7486577033996582,0.0009760856628417969,0.2503662109375],[11,0.7476816177368164,0.0019521713256835938,0.2503662109375],[10,0.7457294464111328,0.0039043426513671875,0.2503662109375],[9,0.7418251037597656,0.007808685302734375,0.2503662109375],[8,0.7340164184570313,0.01561737060546875,0.2503662109375],[7,0.7183990478515625,0.0312347412109375,0.2503662109375],[6,0.687164306640625,0.062469482421875,0.2503662109375],[5,0.62469482421875,0.12493896484375,0.2503662109375],[4,0.499755859375,0.2498779296875,0.2503662109375],[3,0.2498779296875,0.499755859375,0.2503662109375],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":1.514892578125,"type":"analyze"},{"outcomes":[["body",256,"invalid",0.05908203125,2],["body",256,"valid",275.831787109375,8256]],"time":283.3271484375,"type":"sample"},{"compiler":[[9,7]],"egraph":[[0,1,1,1.042e-6],[1,11,12,7.0042e-5],[0,7,12,4.2375e-5]],"inputs":[["0"],["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":21.384033203125,"type":"preprocess"},{"count":[[1,1]],"egraph":[[1,11,12,6.6709e-5],[0,7,12,3.9167e-5]],"inputs":[["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))"]],"stop":[["saturated",1]],"time":10.048828125,"type":"simplify"},{"compiler":[[9,7]],"time":0.802001953125,"type":"eval"},{"alts":[["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))","next",0.171875]],"compiler":[[9,7],[9,7]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[0.171875],"time":0.711181640625,"type":"prune"},{"compiler":[[24,18]],"locations":[["(sqrt.f64 (+.f64 x 1))",0.0078125,true],["(+.f64 1 (sqrt.f64 (+.f64 x 1)))",0.01171875,true],["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))",0.171875,true]],"time":5.935791015625,"type":"localize"},{"count":[[3,12]],"series":[["(sqrt.f64 (+.f64 x 1))","x","-inf",0.260986328125],["(sqrt.f64 (+.f64 x 1))","x","inf",0.262939453125],["(sqrt.f64 (+.f64 x 1))","x","0",0.157958984375],["(+.f64 1 (sqrt.f64 (+.f64 x 1)))","x","-inf",0.303955078125],["(+.f64 1 (sqrt.f64 (+.f64 x 1)))","x","inf",0.2939453125],["(+.f64 1 (sqrt.f64 (+.f64 x 1)))","x","0",0.178955078125],["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))","x","-inf",0.988037109375],["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))","x","inf",1.368896484375],["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))","x","0",0.380126953125]],"time":4.32421875,"type":"series"},{"count":[[3,86]],"egraph":[[2,2282,27,0.020364874999999998],[1,157,27,0.002953083],[0,7,27,0.000203208]],"inputs":[["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))","(+.f64 1 (sqrt.f64 (+.f64 x 1)))","(sqrt.f64 (+.f64 x 1))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) 2) (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (sqrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (+.f64 (neg.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2)) (/.f64 x (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2)) (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4))) (/.f64 x (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4))) (/.f64 (cbrt.f64 x) (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))) (+.f64 1 (+.f64 1 (-.f64 x (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (neg.f64 x)) (-.f64 1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (+.f64 (neg.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 x) (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (-.f64 1 (sqrt.f64 (+.f64 x 1)))) (/.f64 (+.f64 x 1) (-.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) (pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2) (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4)) (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (/.f64 1 (+.f64 1 (+.f64 1 (-.f64 x (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (-.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (-.f64 (sqrt.f64 (+.f64 x 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (+.f64 1 (-.f64 x (sqrt.f64 (+.f64 x 1))))) (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1))) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (+.f64 1 (+.f64 1 (-.f64 x (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (+.f64 (+.f64 x 1) (-.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (-.f64 1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))) (neg.f64 (+.f64 1 (+.f64 1 (-.f64 x (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 x)) (neg.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x 1) 1/4) (pow.f64 (+.f64 x 1) 1/4) 1)))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) (cbrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x 1)) (cbrt.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x 1) 1/4) (pow.f64 (+.f64 x 1) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (+.f64 x 1)) 2)) (sqrt.f64 (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 x 1)) 2) 1/2) (pow.f64 (cbrt.f64 (+.f64 x 1)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (+.f64 1 (pow.f64 x 3))) (sqrt.f64 (fma.f64 x x (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 x x -1)) (sqrt.f64 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (+.f64 x 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x 1) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 x 1) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 1 (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 x) 1/2))))))"]],"rules":[["egg-rr",23],["egg-rr",30],["egg-rr",33]],"stop":[["node limit",1]],"time":44.23779296875,"type":"rewrite"},{"count":[[98,107]],"egraph":[[12,7708,109,0.07852808400000001],[11,7161,109,0.07067683400000001],[10,6151,109,0.057574626000000004],[9,5410,109,0.046196918000000003],[8,5041,109,0.036426084000000004],[7,4777,109,0.028252792000000002],[6,4634,109,0.020961459],[5,2655,109,0.013822875],[4,1652,109,0.007502292],[3,601,109,0.0037475],[2,210,130,0.001526125],[1,92,132,0.0005877079999999999],[0,33,136,0.000164625]],"inputs":[["(*.f64 1/2 x)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/2 x))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (*.f64 1/16 (pow.f64 x 3))))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 -5/128 (pow.f64 x 4)) (*.f64 1/16 (pow.f64 x 3)))))","2","(+.f64 (*.f64 1/2 x) 2)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 2))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 2 (*.f64 1/16 (pow.f64 x 3)))))","1","(+.f64 (*.f64 1/2 x) 1)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 1))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 1 (*.f64 1/16 (pow.f64 x 3)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 x)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/2 x))","(fma.f64 -1/8 (*.f64 x x) (*.f64 1/2 x))","(fma.f64 1/2 x (*.f64 x (*.f64 x -1/8)))","(*.f64 x (+.f64 1/2 (*.f64 x -1/8)))","(*.f64 x (fma.f64 x -1/8 1/2))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 1/2 x (*.f64 (*.f64 x x) (+.f64 -1/8 (*.f64 x 1/16))))","(*.f64 x (+.f64 1/2 (*.f64 x (fma.f64 x 1/16 -1/8))))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 -5/128 (pow.f64 x 4)) (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (fma.f64 -5/128 (pow.f64 x 4) (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (fma.f64 1/16 (pow.f64 x 3) (*.f64 -5/128 (pow.f64 x 4)))))","(fma.f64 x (*.f64 x -1/8) (fma.f64 1/16 (pow.f64 x 3) (fma.f64 -5/128 (pow.f64 x 4) (*.f64 1/2 x))))","(fma.f64 x (fma.f64 x -1/8 1/2) (*.f64 (pow.f64 x 3) (+.f64 1/16 (*.f64 x -5/128))))","2","(+.f64 (*.f64 1/2 x) 2)","(fma.f64 1/2 x 2)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 2))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x 2))","(fma.f64 1/2 x (fma.f64 x (*.f64 x -1/8) 2))","(fma.f64 x (fma.f64 x -1/8 1/2) 2)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 2 (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (+.f64 (fma.f64 1/2 x 2) (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (fma.f64 1/16 (pow.f64 x 3) 2)))","(fma.f64 1/2 x (fma.f64 x (*.f64 x -1/8) (fma.f64 1/16 (pow.f64 x 3) 2)))","(fma.f64 (*.f64 x x) (fma.f64 x 1/16 -1/8) (fma.f64 1/2 x 2))","(fma.f64 1/2 x (fma.f64 x (*.f64 x (fma.f64 x 1/16 -1/8)) 2))","(fma.f64 x (*.f64 x (fma.f64 x 1/16 -1/8)) (fma.f64 1/2 x 2))","1","(+.f64 (*.f64 1/2 x) 1)","(fma.f64 1/2 x 1)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 1))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x 1))","(fma.f64 1/2 x (fma.f64 x (*.f64 x -1/8) 1))","(fma.f64 x (fma.f64 x -1/8 1/2) 1)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 1 (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (+.f64 (fma.f64 1/2 x 1) (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (fma.f64 1/16 (pow.f64 x 3) 1)))","(fma.f64 1/2 x (fma.f64 x (*.f64 x -1/8) (fma.f64 1/16 (pow.f64 x 3) 1)))","(fma.f64 1/2 x (fma.f64 x (*.f64 x (fma.f64 x 1/16 -1/8)) 1))"]],"stop":[["node limit",1]],"time":92.91015625,"type":"simplify"},{"compiler":[[1387,1086]],"time":20.02001953125,"type":"eval"},{"alts":[["(/.f64 x (/.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (+.f64 1 (+.f64 1 (-.f64 x (sqrt.f64 (+.f64 x 1)))))))","fresh",4.743001271972126],["(/.f64 x (+.f64 1 (pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2)))","next",0.205410009768442],["(pow.f64 (/.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) x) -1)","fresh",0.29296875],["(*.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))","fresh",21.197597509768443]],"compiler":[[21,17],[12,10],[11,9],[15,11],[21,17],[12,10],[11,9],[15,11]],"count":[[108,4]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[107,4],"picked":[1,0]}],"min-error":[0.00390625],"time":24.3759765625,"type":"prune"},{"compiler":[[40,33]],"locations":[["(pow.f64 (+.f64 x 1) 1/4)",0.0078125,true],["(+.f64 1 (pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2))",0.01171875,true],["(/.f64 x (+.f64 1 (pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2)))",0.171875,true],["(pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2)",0.1796875,true]],"time":14.94482421875,"type":"localize"},{"count":[[4,48]],"series":[["(pow.f64 (+.f64 x 1) 1/4)","x","-inf",0.34912109375],["(pow.f64 (+.f64 x 1) 1/4)","x","inf",0.337890625],["(pow.f64 (+.f64 x 1) 1/4)","x","0",0.173828125],["(+.f64 1 (pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2))","x","-inf",0.336181640625],["(+.f64 1 (pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2))","x","inf",0.213134765625],["(+.f64 1 (pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2))","x","0",0.169921875],["(/.f64 x (+.f64 1 (pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2)))","x","-inf",2.9931640625],["(/.f64 x (+.f64 1 (pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2)))","x","inf",1.7109375],["(/.f64 x (+.f64 1 (pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2)))","x","0",0.198974609375],["(pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2)","x","-inf",1.0380859375],["(pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2)","x","inf",0.719970703125],["(pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2)","x","0",0.34716796875]],"time":8.857177734375,"type":"series"},{"count":[[4,159]],"egraph":[[2,2912,34,0.025047042],[1,230,34,0.004167208],[0,10,37,0.000374]],"inputs":[["(pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2)","(/.f64 x (+.f64 1 (pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2)))","(+.f64 1 (pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2))","(pow.f64 (+.f64 x 1) 1/4)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (+.f64 x 1)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (+.f64 x 1))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x 1) 1/4) (pow.f64 (+.f64 x 1) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x 1) 1/6) (cbrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x 1)) (pow.f64 (+.f64 x 1) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x 1) 1/8) (pow.f64 (+.f64 x 1) 3/8))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x 1) 3/8) (pow.f64 (+.f64 x 1) 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (+.f64 x 1)) 5/6) (pow.f64 (+.f64 x 1) 1/12))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 x x -1)) (sqrt.f64 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (hypot.f64 1 (pow.f64 x 3/2)) (hypot.f64 x (sqrt.f64 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (+.f64 x 1))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 x 1) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 1 (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (*.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 1/2 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 x) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/2 (log1p.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log1p.f64 x)) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (*.f64 1/2 (log1p.f64 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3/2 (log1p.f64 x)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 x) 1) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 1/4 (log1p.f64 x)) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 x) 1/2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 1/2 (log1p.f64 x)) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 1/2 (log1p.f64 x)) 3) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 2)) (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4)) (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (/.f64 1 (-.f64 (+.f64 1 (+.f64 x 1)) (sqrt.f64 (+.f64 x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (+.f64 x 1)) (/.f64 1 (-.f64 1 (sqrt.f64 (+.f64 x 1)))) -1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (cbrt.f64 x) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) 2) (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (sqrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (+.f64 (neg.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) 1) (/.f64 (cbrt.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) -2) (/.f64 x (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 2))) (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 2))) (/.f64 (sqrt.f64 x) (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) -1/2) (/.f64 x (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4))) (/.f64 (cbrt.f64 x) (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))) (-.f64 (+.f64 1 (+.f64 x 1)) (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 1 (+.f64 x 1))) (-.f64 1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (+.f64 (neg.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 x) (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (log.f64 x) (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (-.f64 (log.f64 x) (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (-.f64 (log.f64 x) (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/2 (-.f64 (log.f64 x) (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))) (log.f64 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (-.f64 (log.f64 x) (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (-.f64 1 (sqrt.f64 (+.f64 x 1)))) (/.f64 (+.f64 x 1) (-.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) (cbrt.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 2)) (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4)) (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (/.f64 1 (-.f64 (+.f64 1 (+.f64 x 1)) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (+.f64 x 1)) (/.f64 1 (-.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (+.f64 1 (+.f64 x 1)) (sqrt.f64 (+.f64 x 1))) (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1))) (-.f64 1 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (-.f64 (+.f64 1 (+.f64 x 1)) (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (+.f64 (+.f64 x 1) (-.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (+.f64 x 1)) (-.f64 1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))) (neg.f64 (-.f64 (+.f64 1 (+.f64 x 1)) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (+.f64 x 1))) (neg.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (+.f64 1 (+.f64 x 1)) (sqrt.f64 (+.f64 x 1))) (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1))) (-.f64 1 (+.f64 x 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/2 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x 1) 1/4) (pow.f64 (+.f64 x 1) 1/4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 x 1)) 1 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x 1) 1/6) (cbrt.f64 (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x 1)) (pow.f64 (+.f64 x 1) 1/6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x 1) 1/8) (pow.f64 (+.f64 x 1) 3/8) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x 1) 3/8) (pow.f64 (+.f64 x 1) 1/8) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 (+.f64 x 1)) 5/6) (pow.f64 (+.f64 x 1) 1/12) 1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (+.f64 x 1) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 x 1) 1/4))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 x 1) 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 x 1) 1/4)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 x 1) 1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (+.f64 x 1) 1/4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 x 1) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x 1) 1/4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x 1) 1/6) (pow.f64 (+.f64 x 1) 1/12))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x 1) 1/12) (pow.f64 (+.f64 x 1) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x 1) 1/8) (pow.f64 (+.f64 x 1) 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (pow.f64 (+.f64 x 1) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (+.f64 x 1) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (+.f64 x 1) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 x 1) 3/4))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (+.f64 x 1) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (+.f64 x 1) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 1/4 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/4 (log1p.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/2 (log1p.f64 x)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3/4 (log1p.f64 x)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log1p.f64 x)) 1/8))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (*.f64 1/4 (log1p.f64 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/8 (log1p.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 x) 1) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 1/4 (log1p.f64 x)) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 x) 1/2) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 1/2 (log1p.f64 x)) 1) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 x) 1/8) 2))))))"]],"rules":[["egg-rr",28],["egg-rr",44],["egg-rr",46],["egg-rr",41]],"stop":[["node limit",1]],"time":52.22900390625,"type":"rewrite"},{"count":[[207,246]],"egraph":[[2,2300,1847,0.016812124],[1,668,2182,0.004855499],[0,219,2343,0.001042291]],"inputs":[["1","(+.f64 (*.f64 1/2 x) 1)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 1))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 1 (*.f64 1/16 (pow.f64 x 3)))))","(sqrt.f64 x)","(+.f64 (sqrt.f64 x) (*.f64 1/2 (sqrt.f64 (/.f64 1 x))))","(+.f64 (*.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (+.f64 (sqrt.f64 x) (+.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 -3/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))))","(+.f64 (*.f64 7/64 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 (*.f64 -3/64 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 (*.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (+.f64 (sqrt.f64 x) (+.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 -3/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))))))","(pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) x)) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) x)) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (+.f64 (*.f64 -3/16 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 2))) (*.f64 1/16 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 2))))))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) x)) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -7/64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) (*.f64 3/64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (pow.f64 x 3))) (+.f64 (*.f64 -3/16 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 2))) (*.f64 1/16 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 2)))))))","(*.f64 1/2 x)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/2 x))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (*.f64 1/16 (pow.f64 x 3))))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 -5/128 (pow.f64 x 4)) (*.f64 1/16 (pow.f64 x 3)))))","(/.f64 x (+.f64 1 (sqrt.f64 x)))","(+.f64 (/.f64 x (+.f64 1 (sqrt.f64 x))) (*.f64 -1/2 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 x))))","(-.f64 (+.f64 (/.f64 x (+.f64 1 (sqrt.f64 x))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 3))) (*.f64 -1/2 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 x))))) (+.f64 (*.f64 -3/16 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 (/.f64 1 x)))) (*.f64 1/16 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 (/.f64 1 x))))))","(-.f64 (+.f64 (/.f64 x (+.f64 1 (sqrt.f64 x))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 1/4 (/.f64 x (pow.f64 (+.f64 1 (sqrt.f64 x)) 3))) (+.f64 (*.f64 -3/16 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 x))) (*.f64 1/16 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 x))))) (+.f64 1 (sqrt.f64 x))) (sqrt.f64 x))) (+.f64 (*.f64 -3/64 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 x))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 (+.f64 (*.f64 -3/16 (sqrt.f64 x)) (*.f64 1/16 (sqrt.f64 x))) (pow.f64 (+.f64 1 (sqrt.f64 x)) 3)) (sqrt.f64 x))) (*.f64 7/64 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 x)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 x))) (*.f64 1/4 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 3)))))) (+.f64 (*.f64 -3/16 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 (/.f64 1 x)))) (*.f64 1/16 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 (/.f64 1 x))))))","(/.f64 x (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)))","(+.f64 (/.f64 x (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (*.f64 -1/2 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 2))))","(+.f64 (/.f64 x (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) (*.f64 -3/16 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (*.f64 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 2) x))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 4) (*.f64 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 3) x))) (*.f64 -1/2 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 2))))))","(+.f64 (/.f64 x (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) (*.f64 -3/16 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (*.f64 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 2) x))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 4) (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) (*.f64 -3/16 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 2))))) (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -7/64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) (*.f64 3/64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (+.f64 (*.f64 1/16 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) (*.f64 -3/16 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)))) (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 3))))) (pow.f64 x 2))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 4) (*.f64 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 3) x))) (*.f64 -1/2 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 2)))))))","2","(+.f64 (*.f64 1/2 x) 2)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 2))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 2 (*.f64 1/16 (pow.f64 x 3)))))","(+.f64 1 (sqrt.f64 x))","(+.f64 1 (+.f64 (sqrt.f64 x) (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))))","(+.f64 1 (+.f64 (*.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (+.f64 (sqrt.f64 x) (+.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 -3/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))))))","(+.f64 (*.f64 7/64 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 1 (+.f64 (*.f64 -3/64 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 (*.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (+.f64 (sqrt.f64 x) (+.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 -3/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))))))))","(+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) x)) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) 1))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) x)) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (+.f64 1 (+.f64 (*.f64 -3/16 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 2))) (*.f64 1/16 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 2)))))))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) x)) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -7/64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) (*.f64 3/64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (pow.f64 x 3))) (+.f64 (*.f64 -3/16 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 2))) (*.f64 1/16 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 2))))))))","1","(+.f64 1 (*.f64 1/4 x))","(+.f64 1 (+.f64 (*.f64 -3/32 (pow.f64 x 2)) (*.f64 1/4 x)))","(+.f64 1 (+.f64 (*.f64 7/128 (pow.f64 x 3)) (+.f64 (*.f64 -3/32 (pow.f64 x 2)) (*.f64 1/4 x))))","(pow.f64 x 1/4)","(+.f64 (pow.f64 x 1/4) (*.f64 1/4 (pow.f64 (/.f64 1 (pow.f64 x 3)) 1/4)))","(+.f64 (pow.f64 x 1/4) (+.f64 (*.f64 1/4 (pow.f64 (/.f64 1 (pow.f64 x 3)) 1/4)) (*.f64 -3/32 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/4))))","(+.f64 (*.f64 7/128 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/4)) (+.f64 (pow.f64 x 1/4) (+.f64 (*.f64 1/4 (pow.f64 (/.f64 1 (pow.f64 x 3)) 1/4)) (*.f64 -3/32 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/4)))))","(exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(+.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/4 (/.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))","(+.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/4 (/.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (*.f64 -3/32 (/.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))))","(+.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 7/128 (/.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (*.f64 1/4 (/.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (*.f64 -3/32 (/.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 1/2 x) 1)","(fma.f64 1/2 x 1)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 1))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x 1))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 1 (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (+.f64 (fma.f64 1/2 x 1) (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (fma.f64 1/16 (pow.f64 x 3) 1)))","(sqrt.f64 x)","(+.f64 (sqrt.f64 x) (*.f64 1/2 (sqrt.f64 (/.f64 1 x))))","(fma.f64 1/2 (sqrt.f64 (/.f64 1 x)) (sqrt.f64 x))","(+.f64 (*.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (+.f64 (sqrt.f64 x) (+.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 -3/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))))","(fma.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (+.f64 (sqrt.f64 x) (fma.f64 1/2 (sqrt.f64 (/.f64 1 x)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) -3/16))))","(+.f64 (fma.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) -3/16 (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))) (fma.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (sqrt.f64 x)))","(+.f64 (fma.f64 1/2 (sqrt.f64 (/.f64 1 x)) (sqrt.f64 x)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) -1/8))","(+.f64 (*.f64 7/64 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 (*.f64 -3/64 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 (*.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (+.f64 (sqrt.f64 x) (+.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 -3/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))))))","(fma.f64 7/64 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) (fma.f64 -3/64 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) (fma.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (+.f64 (sqrt.f64 x) (fma.f64 1/2 (sqrt.f64 (/.f64 1 x)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) -3/16))))))","(+.f64 (+.f64 (fma.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) -3/16 (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))) (fma.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (sqrt.f64 x))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) 1/16))","(+.f64 (+.f64 (fma.f64 1/2 (sqrt.f64 (/.f64 1 x)) (sqrt.f64 x)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) -1/8)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) 1/16))","(pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)","(pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)","(pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)","(pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) x)) (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))","(fma.f64 1/2 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) x) (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2))","(fma.f64 1/2 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) x) (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2))","(fma.f64 1/2 (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2) x) (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) x)) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (+.f64 (*.f64 -3/16 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 2))) (*.f64 1/16 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 2))))))","(+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) x) (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) (*.f64 x x)) -1/8))","(fma.f64 1/2 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) x) (fma.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) (*.f64 x x)) -1/8 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)))","(fma.f64 1/2 (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2) x) (fma.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2) (*.f64 x x)) -1/8 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) x)) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -7/64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) (*.f64 3/64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (pow.f64 x 3))) (+.f64 (*.f64 -3/16 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 2))) (*.f64 1/16 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 2)))))))","(+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) x) (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)) (fma.f64 -1 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) -1/16) (pow.f64 x 3)) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) (*.f64 x x)) -1/8)))","(+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) x) (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)) (-.f64 (*.f64 -1/8 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) (*.f64 x x))) (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) (/.f64 (pow.f64 x 3) -1/16))))","(+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2) x) (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)) (*.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2) (*.f64 x x)) (-.f64 -1/8 (/.f64 -1/16 x))))","(*.f64 1/2 x)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/2 x))","(fma.f64 -1/8 (*.f64 x x) (*.f64 1/2 x))","(*.f64 x (+.f64 1/2 (*.f64 x -1/8)))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/16 (pow.f64 x 3) (*.f64 1/2 x)))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 -5/128 (pow.f64 x 4)) (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (fma.f64 -5/128 (pow.f64 x 4) (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (fma.f64 1/16 (pow.f64 x 3) (*.f64 -5/128 (pow.f64 x 4)))))","(/.f64 x (+.f64 1 (sqrt.f64 x)))","(+.f64 (/.f64 x (+.f64 1 (sqrt.f64 x))) (*.f64 -1/2 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 x))))","(+.f64 (/.f64 x (+.f64 1 (sqrt.f64 x))) (*.f64 -1/2 (*.f64 (sqrt.f64 x) (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)))))","(fma.f64 (/.f64 -1/2 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 x) (/.f64 x (+.f64 1 (sqrt.f64 x))))","(fma.f64 -1/2 (/.f64 (sqrt.f64 x) (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (/.f64 x (+.f64 1 (sqrt.f64 x))))","(-.f64 (+.f64 (/.f64 x (+.f64 1 (sqrt.f64 x))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 3))) (*.f64 -1/2 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 x))))) (+.f64 (*.f64 -3/16 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 (/.f64 1 x)))) (*.f64 1/16 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 (/.f64 1 x))))))","(+.f64 (/.f64 x (+.f64 1 (sqrt.f64 x))) (-.f64 (fma.f64 -1/2 (*.f64 (sqrt.f64 x) (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2))) (/.f64 1/4 (pow.f64 (+.f64 1 (sqrt.f64 x)) 3))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2))) -1/8)))","(+.f64 (/.f64 x (+.f64 1 (sqrt.f64 x))) (+.f64 (fma.f64 -1/2 (/.f64 (sqrt.f64 x) (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (/.f64 1/4 (pow.f64 (+.f64 1 (sqrt.f64 x)) 3))) (*.f64 (/.f64 (sqrt.f64 (/.f64 1 x)) (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) 1/8)))","(+.f64 (+.f64 (/.f64 x (+.f64 1 (sqrt.f64 x))) (/.f64 1/4 (pow.f64 (+.f64 1 (sqrt.f64 x)) 3))) (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (-.f64 (*.f64 (sqrt.f64 x) -1/2) (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8))))","(-.f64 (+.f64 (/.f64 x (+.f64 1 (sqrt.f64 x))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 1/4 (/.f64 x (pow.f64 (+.f64 1 (sqrt.f64 x)) 3))) (+.f64 (*.f64 -3/16 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 x))) (*.f64 1/16 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 x))))) (+.f64 1 (sqrt.f64 x))) (sqrt.f64 x))) (+.f64 (*.f64 -3/64 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 x))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 (+.f64 (*.f64 -3/16 (sqrt.f64 x)) (*.f64 1/16 (sqrt.f64 x))) (pow.f64 (+.f64 1 (sqrt.f64 x)) 3)) (sqrt.f64 x))) (*.f64 7/64 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 x)))))) (pow.f64 x 2))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 x))) (*.f64 1/4 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 3)))))) (+.f64 (*.f64 -3/16 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 (/.f64 1 x)))) (*.f64 1/16 (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (sqrt.f64 (/.f64 1 x))))))","(+.f64 (/.f64 x (+.f64 1 (sqrt.f64 x))) (-.f64 (fma.f64 -1 (/.f64 (fma.f64 1/2 (*.f64 (sqrt.f64 x) (/.f64 (-.f64 (/.f64 (*.f64 x 1/4) (pow.f64 (+.f64 1 (sqrt.f64 x)) 3)) (*.f64 (*.f64 (sqrt.f64 x) (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2))) -1/8)) (+.f64 1 (sqrt.f64 x)))) (fma.f64 -3/64 (*.f64 (sqrt.f64 x) (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2))) (fma.f64 -1/2 (*.f64 (sqrt.f64 x) (/.f64 (*.f64 (sqrt.f64 x) -1/8) (pow.f64 (+.f64 1 (sqrt.f64 x)) 3))) (*.f64 7/64 (*.f64 (sqrt.f64 x) (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2))))))) (*.f64 x x)) (fma.f64 -1/2 (*.f64 (sqrt.f64 x) (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2))) (/.f64 1/4 (pow.f64 (+.f64 1 (sqrt.f64 x)) 3)))) (*.f64 (*.f64 (sqrt.f64 (/.f64 1 x)) (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2))) -1/8)))","(+.f64 (/.f64 x (+.f64 1 (sqrt.f64 x))) (+.f64 (-.f64 (fma.f64 -1/2 (/.f64 (sqrt.f64 x) (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (/.f64 1/4 (pow.f64 (+.f64 1 (sqrt.f64 x)) 3))) (/.f64 (+.f64 (*.f64 (sqrt.f64 x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 -1/8 (sqrt.f64 x)) (pow.f64 (+.f64 1 (sqrt.f64 x)) 3))) (/.f64 7/64 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)))) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 1/2 (/.f64 (fma.f64 1/4 (/.f64 x (pow.f64 (+.f64 1 (sqrt.f64 x)) 3)) (*.f64 (/.f64 (sqrt.f64 x) (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) 1/8)) (+.f64 1 (sqrt.f64 x)))) (/.f64 -3/64 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2))))) (*.f64 x x))) (*.f64 (/.f64 (sqrt.f64 (/.f64 1 x)) (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) 1/8)))","(+.f64 (-.f64 (/.f64 x (+.f64 1 (sqrt.f64 x))) (/.f64 (fma.f64 1/2 (/.f64 (sqrt.f64 x) (/.f64 (+.f64 1 (sqrt.f64 x)) (fma.f64 1/4 (/.f64 x (pow.f64 (+.f64 1 (sqrt.f64 x)) 3)) (*.f64 (/.f64 (sqrt.f64 x) (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) 1/8)))) (+.f64 (*.f64 1/16 (/.f64 (sqrt.f64 x) (pow.f64 (+.f64 1 (sqrt.f64 x)) 2))) (/.f64 (*.f64 x 1/16) (pow.f64 (+.f64 1 (sqrt.f64 x)) 3)))) (*.f64 x x))) (+.f64 (/.f64 1/4 (pow.f64 (+.f64 1 (sqrt.f64 x)) 3)) (*.f64 (/.f64 1 (pow.f64 (+.f64 1 (sqrt.f64 x)) 2)) (-.f64 (*.f64 (sqrt.f64 x) -1/2) (*.f64 (sqrt.f64 (/.f64 1 x)) -1/8)))))","(/.f64 x (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)))","(/.f64 x (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)))","(/.f64 x (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)))","(/.f64 x (+.f64 1 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)))","(+.f64 (/.f64 x (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (*.f64 -1/2 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 2))))","(+.f64 (/.f64 x (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2))) (*.f64 -1/2 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)) 2))))","(fma.f64 -1/2 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)) 2)) (/.f64 x (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2))))","(fma.f64 -1/2 (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2) (pow.f64 (+.f64 1 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)) 2)) (/.f64 x (+.f64 1 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2))))","(+.f64 (/.f64 x (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) (*.f64 -3/16 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (*.f64 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 2) x))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 4) (*.f64 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 3) x))) (*.f64 -1/2 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 2))))))","(+.f64 (/.f64 x (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2))) (fma.f64 -1 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) -1/8) (*.f64 x (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)) 2))) (fma.f64 1/4 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 4) (*.f64 x (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)) 3))) (*.f64 -1/2 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)) 2))))))","(+.f64 (/.f64 x (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2))) (-.f64 (fma.f64 1/4 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 4) (*.f64 x (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)) 3))) (*.f64 -1/2 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)) 2)))) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) x) (/.f64 -1/8 (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)) 2)))))","(+.f64 (fma.f64 1/4 (/.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 4) x) (pow.f64 (+.f64 1 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)) 3)) (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2) (/.f64 (pow.f64 (+.f64 1 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)) 2) -1/2))) (-.f64 (/.f64 x (+.f64 1 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2))) (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2) (/.f64 (pow.f64 (+.f64 1 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)) 2) (/.f64 -1/8 x)))))","(+.f64 (/.f64 x (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) (*.f64 -3/16 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (*.f64 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 2) x))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 4) (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 3))) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) (*.f64 -3/16 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 2))))) (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -7/64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) (*.f64 3/64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 2))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (+.f64 (*.f64 1/16 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) (*.f64 -3/16 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)))) (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 3))))) (pow.f64 x 2))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 4) (*.f64 (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 3) x))) (*.f64 -1/2 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 (+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) 2)))))))","(+.f64 (/.f64 x (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2))) (fma.f64 -1 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) -1/8) (*.f64 x (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)) 2))) (fma.f64 -1 (/.f64 (fma.f64 1/2 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) (/.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)) (fma.f64 1/4 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 4) (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)) 3)) (neg.f64 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) -1/8) (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)) 2)))))) (fma.f64 -1 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) -1/16) (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)) 2)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) (*.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) -1/8)) (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)) 3))))) (*.f64 x x)) (fma.f64 1/4 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 4) (*.f64 x (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)) 3))) (*.f64 -1/2 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)) 2)))))))","(+.f64 (/.f64 x (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2))) (-.f64 (-.f64 (fma.f64 1/4 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 4) (*.f64 x (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)) 3))) (*.f64 -1/2 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)) 2)))) (/.f64 (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2))) (-.f64 (*.f64 1/4 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 4) (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)) 3))) (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) (/.f64 (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)) 2) -1/8)))) (-.f64 (/.f64 (*.f64 -1/2 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 4) -1/8)) (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)) 3)) (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) (/.f64 (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)) 2) -1/16)))) (*.f64 x x))) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) x) (/.f64 -1/8 (pow.f64 (+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)) 2)))))","(+.f64 (/.f64 x (+.f64 1 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2))) (+.f64 (fma.f64 1/4 (/.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 4) x) (pow.f64 (+.f64 1 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)) 3)) (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2) (/.f64 (pow.f64 (+.f64 1 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)) 2) -1/2))) (*.f64 (/.f64 -1 x) (+.f64 (/.f64 (*.f64 -1/8 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)) (pow.f64 (+.f64 1 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)) 2)) (/.f64 (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2) (+.f64 1 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2))) (fma.f64 1/4 (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 4) (pow.f64 (+.f64 1 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)) 3)) (/.f64 (*.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2) 1/8) (pow.f64 (+.f64 1 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)) 2)))) (+.f64 (/.f64 (*.f64 1/16 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)) (pow.f64 (+.f64 1 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)) 2)) (/.f64 (*.f64 1/16 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 4)) (pow.f64 (+.f64 1 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)) 3)))) x)))))","2","(+.f64 (*.f64 1/2 x) 2)","(fma.f64 1/2 x 2)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 2))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x 2))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 2 (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (+.f64 (fma.f64 1/2 x 2) (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (fma.f64 1/16 (pow.f64 x 3) 2)))","(+.f64 1 (sqrt.f64 x))","(+.f64 1 (+.f64 (sqrt.f64 x) (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))))","(+.f64 (+.f64 1 (sqrt.f64 x)) (*.f64 1/2 (sqrt.f64 (/.f64 1 x))))","(+.f64 1 (fma.f64 1/2 (sqrt.f64 (/.f64 1 x)) (sqrt.f64 x)))","(+.f64 1 (+.f64 (*.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (+.f64 (sqrt.f64 x) (+.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 -3/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))))))","(+.f64 1 (fma.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (+.f64 (sqrt.f64 x) (fma.f64 1/2 (sqrt.f64 (/.f64 1 x)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) -3/16)))))","(+.f64 1 (+.f64 (fma.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) -3/16 (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))) (fma.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (sqrt.f64 x))))","(+.f64 1 (+.f64 (fma.f64 1/2 (sqrt.f64 (/.f64 1 x)) (sqrt.f64 x)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) -1/8)))","(+.f64 (*.f64 7/64 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 1 (+.f64 (*.f64 -3/64 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 (*.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (+.f64 (sqrt.f64 x) (+.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 x))) (*.f64 -3/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3))))))))))","(fma.f64 7/64 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) (+.f64 1 (fma.f64 -3/64 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) (fma.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (+.f64 (sqrt.f64 x) (fma.f64 1/2 (sqrt.f64 (/.f64 1 x)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) -3/16)))))))","(+.f64 1 (+.f64 (+.f64 (fma.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) -3/16 (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))) (fma.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (sqrt.f64 x))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) 1/16)))","(+.f64 1 (+.f64 (+.f64 (fma.f64 1/2 (sqrt.f64 (/.f64 1 x)) (sqrt.f64 x)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) -1/8)) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) 1/16)))","(+.f64 1 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))","(+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2))","(+.f64 1 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2))","(+.f64 1 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) x)) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) 1))","(+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) x) (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)) 1)","(+.f64 1 (fma.f64 1/2 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) x) (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)))","(+.f64 1 (fma.f64 1/2 (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2) x) (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) x)) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (+.f64 1 (+.f64 (*.f64 -3/16 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 2))) (*.f64 1/16 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 2)))))))","(+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) x) (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)) (+.f64 1 (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) (*.f64 x x)) -1/8)))","(+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) x) (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2)) (fma.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) (*.f64 x x)) -1/8 1))","(+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2) x) (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)) (fma.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2) (*.f64 x x)) -1/8 1))","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) x)) (+.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -7/64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2)) (*.f64 3/64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2))) (pow.f64 x 3))) (+.f64 (*.f64 -3/16 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 2))) (*.f64 1/16 (/.f64 (pow.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 x 2))))))))","(+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) x) (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2)) (+.f64 1 (fma.f64 -1 (/.f64 (*.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) -1/16) (pow.f64 x 3)) (*.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) (*.f64 x x)) -1/8))))","(fma.f64 1/2 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) x) (+.f64 (-.f64 1 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) (/.f64 (pow.f64 x 3) -1/16))) (fma.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) (*.f64 x x)) -1/8 (pow.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2))))","(+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2) x) (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2)) (+.f64 1 (*.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) 2) (*.f64 x x)) (-.f64 -1/8 (/.f64 -1/16 x)))))","1","(+.f64 1 (*.f64 1/4 x))","(+.f64 1 (*.f64 x 1/4))","(fma.f64 x 1/4 1)","(+.f64 1 (+.f64 (*.f64 -3/32 (pow.f64 x 2)) (*.f64 1/4 x)))","(+.f64 1 (fma.f64 -3/32 (*.f64 x x) (*.f64 x 1/4)))","(+.f64 1 (fma.f64 x 1/4 (*.f64 x (*.f64 x -3/32))))","(+.f64 1 (*.f64 x (+.f64 1/4 (*.f64 -3/32 x))))","(+.f64 1 (+.f64 (*.f64 7/128 (pow.f64 x 3)) (+.f64 (*.f64 -3/32 (pow.f64 x 2)) (*.f64 1/4 x))))","(+.f64 1 (fma.f64 7/128 (pow.f64 x 3) (fma.f64 -3/32 (*.f64 x x) (*.f64 x 1/4))))","(+.f64 1 (fma.f64 (pow.f64 x 3) 7/128 (fma.f64 x 1/4 (*.f64 x (*.f64 x -3/32)))))","(+.f64 (*.f64 (*.f64 x x) (+.f64 -3/32 (*.f64 x 7/128))) (fma.f64 x 1/4 1))","(pow.f64 x 1/4)","(+.f64 (pow.f64 x 1/4) (*.f64 1/4 (pow.f64 (/.f64 1 (pow.f64 x 3)) 1/4)))","(fma.f64 1/4 (pow.f64 (/.f64 1 (pow.f64 x 3)) 1/4) (pow.f64 x 1/4))","(+.f64 (pow.f64 x 1/4) (+.f64 (*.f64 1/4 (pow.f64 (/.f64 1 (pow.f64 x 3)) 1/4)) (*.f64 -3/32 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/4))))","(+.f64 (pow.f64 x 1/4) (fma.f64 1/4 (pow.f64 (/.f64 1 (pow.f64 x 3)) 1/4) (*.f64 -3/32 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/4))))","(+.f64 (fma.f64 1/4 (pow.f64 (/.f64 1 (pow.f64 x 3)) 1/4) (pow.f64 x 1/4)) (*.f64 -3/32 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/4)))","(+.f64 (*.f64 7/128 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/4)) (+.f64 (pow.f64 x 1/4) (+.f64 (*.f64 1/4 (pow.f64 (/.f64 1 (pow.f64 x 3)) 1/4)) (*.f64 -3/32 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/4)))))","(fma.f64 7/128 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/4) (+.f64 (pow.f64 x 1/4) (fma.f64 1/4 (pow.f64 (/.f64 1 (pow.f64 x 3)) 1/4) (*.f64 -3/32 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/4)))))","(+.f64 (fma.f64 1/4 (pow.f64 (/.f64 1 (pow.f64 x 3)) 1/4) (*.f64 -3/32 (pow.f64 (/.f64 1 (pow.f64 x 7)) 1/4))) (fma.f64 7/128 (pow.f64 (/.f64 1 (pow.f64 x 11)) 1/4) (pow.f64 x 1/4)))","(exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))","(pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))","(*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4))","(+.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 1/4 (/.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))","(+.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (*.f64 1/4 (/.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) x)))","(fma.f64 1/4 (/.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) x) (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))","(fma.f64 1/4 (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) x) (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)))","(+.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/4 (/.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (*.f64 -3/32 (/.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))))","(+.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (fma.f64 1/4 (/.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) x) (*.f64 -3/32 (/.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (*.f64 x x)))))","(+.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (fma.f64 1/4 (/.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) x) (*.f64 -3/32 (/.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (*.f64 x x)))))","(+.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) x) (+.f64 1/4 (/.f64 -3/32 x))))","(+.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 7/128 (/.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (*.f64 1/4 (/.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (*.f64 -3/32 (/.f64 (exp.f64 (*.f64 1/4 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))))))","(+.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (fma.f64 7/128 (/.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (pow.f64 x 3)) (fma.f64 1/4 (/.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) x) (*.f64 -3/32 (/.f64 (pow.f64 (exp.f64 1/4) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (*.f64 x x))))))","(+.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (fma.f64 7/128 (/.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (pow.f64 x 3)) (fma.f64 1/4 (/.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) x) (*.f64 -3/32 (/.f64 (pow.f64 (exp.f64 1/4) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (*.f64 x x))))))","(+.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) (fma.f64 7/128 (/.f64 (pow.f64 (/.f64 -1 x) -1/4) (/.f64 (pow.f64 x 3) (pow.f64 -1 1/4))) (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/4) (pow.f64 -1 1/4)) x) (+.f64 1/4 (/.f64 -3/32 x)))))"]],"stop":[["node limit",1]],"time":46.1298828125,"type":"simplify"},{"compiler":[[5610,4647]],"time":73.757080078125,"type":"eval"},{"alts":[["(*.f64 (/.f64 x (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))) (-.f64 (+.f64 1 (+.f64 x 1)) (sqrt.f64 (+.f64 x 1))))","fresh",4.7556774926668],["(*.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))","fresh",21.197597509768443],["(/.f64 x (+.f64 1 (cbrt.f64 (pow.f64 (+.f64 x 1) 3/2))))","fresh",4.7244274926668],["(/.f64 x (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))","next",1.5152918419839292],["(/.f64 x (+.f64 1 (pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2)))","done",0.205410009768442]],"compiler":[[21,17],[15,11],[11,9],[10,7],[12,10],[21,17],[15,11],[11,9],[10,7]],"count":[[250,5]],"kept":[{"done":[0,0],"fresh":[3,1],"new":[246,3],"picked":[1,1]}],"min-error":[0],"time":64.48486328125,"type":"prune"},{"compiler":[[30,17]],"locations":[["(/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))",0.16796875,true],["(/.f64 x (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))",0.171875,true],["(expm1.f64 (*.f64 1/2 (log1p.f64 x)))",1.5113855919839292,true]],"time":8.131103515625,"type":"localize"},{"count":[[3,36]],"series":[["(/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))","x","-inf",1.475830078125],["(/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))","x","inf",0.994140625],["(/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))","x","0",0.1669921875],["(/.f64 x (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))","x","-inf",0.25390625],["(/.f64 x (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))","x","inf",0.18603515625],["(/.f64 x (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))","x","0",0.170166015625],["(expm1.f64 (*.f64 1/2 (log1p.f64 x)))","x","-inf",0.52197265625],["(expm1.f64 (*.f64 1/2 (log1p.f64 x)))","x","inf",0.4111328125],["(expm1.f64 (*.f64 1/2 (log1p.f64 x)))","x","0",0.325927734375]],"time":4.702880859375,"type":"series"},{"count":[[3,118]],"egraph":[[2,2297,27,0.018769333],[1,169,27,0.00302725],[0,8,27,0.00024025]],"inputs":[["(expm1.f64 (*.f64 1/2 (log1p.f64 x)))","(/.f64 x (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))","(/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 x 1) 1/2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (+.f64 x 1) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) (pow.f64 (cbrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) 2) (cbrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) (sqrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (/.f64 (neg.f64 x) (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) x) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) x) (/.f64 (sqrt.f64 x) (/.f64 1 (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x 1) (/.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 x (/.f64 1 (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) x) (/.f64 (cbrt.f64 x) (/.f64 1 (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))) 2)) (/.f64 x (cbrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))) 2)) (cbrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))) (/.f64 x (sqrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))) (/.f64 (cbrt.f64 x) (sqrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (neg.f64 x)) (neg.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 1 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 x) 2) (/.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 x) (/.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (/.f64 (neg.f64 x) (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 1 (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 x)) (neg.f64 (/.f64 (neg.f64 x) (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x 1) (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (sqrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))) (sqrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (pow.f64 (+.f64 x 1) 1/2) 3) 1) (+.f64 (*.f64 (pow.f64 (+.f64 x 1) 1/2) (pow.f64 (+.f64 x 1) 1/2)) (+.f64 1 (*.f64 (pow.f64 (+.f64 x 1) 1/2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (+.f64 x 1) 1/2) (pow.f64 (+.f64 x 1) 1/2)) 1) (+.f64 (pow.f64 (+.f64 x 1) 1/2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (pow.f64 (cbrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))) 2)) (cbrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (/.f64 (neg.f64 x) (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 x 1) 1/2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (pow.f64 (+.f64 x 1) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) (pow.f64 (cbrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) 2) (cbrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) (sqrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (/.f64 (neg.f64 x) (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) x) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) x) (/.f64 (sqrt.f64 x) (/.f64 1 (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x 1) (/.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 x (/.f64 1 (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) x) (/.f64 (cbrt.f64 x) (/.f64 1 (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))) 2)) (/.f64 x (cbrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))) 2)) (cbrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))) (/.f64 x (sqrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))) (/.f64 (cbrt.f64 x) (sqrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (neg.f64 x)) (neg.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (/.f64 (neg.f64 x) (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (*.f64 1/2 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))) (pow.f64 (cbrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))) 2) (cbrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))) (sqrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) 2)) (/.f64 x (cbrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) 2)) (cbrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))))) (/.f64 x (sqrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))))) (/.f64 (cbrt.f64 x) (sqrt.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (neg.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (expm1.f64 (*.f64 1/2 (log1p.f64 x))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))))))"]],"rules":[["egg-rr",31],["egg-rr",37],["egg-rr",50]],"stop":[["node limit",1]],"time":45.029052734375,"type":"rewrite"},{"count":[[154,128]],"egraph":[[3,5882,1133,0.026284665999999998],[2,1347,1458,0.011793749],[1,430,1681,0.003080833],[0,137,1777,0.000707541]],"inputs":[["(*.f64 1/2 x)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/2 x))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (*.f64 1/16 (pow.f64 x 3))))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 -5/128 (pow.f64 x 4)) (*.f64 1/16 (pow.f64 x 3)))))","(-.f64 (pow.f64 (/.f64 1 x) -1/2) 1)","(-.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))) 1)","(-.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) (+.f64 (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (*.f64 1/2 (sqrt.f64 (/.f64 1 x))))) 1)","(-.f64 (+.f64 (*.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 (pow.f64 (/.f64 1 x) -1/2) (+.f64 (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))))) 1)","(-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) 1)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (+.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 -1/8 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))))) 1)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (+.f64 (*.f64 1/16 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 -1/8 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))))) 1)","(*.f64 1/2 x)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/2 x))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (*.f64 1/16 (pow.f64 x 3))))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 -5/128 (pow.f64 x 4)) (*.f64 1/16 (pow.f64 x 3)))))","(-.f64 (pow.f64 (/.f64 1 x) -1/2) 1)","(-.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))) 1)","(-.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) (+.f64 (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (*.f64 1/2 (sqrt.f64 (/.f64 1 x))))) 1)","(-.f64 (+.f64 (*.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 (pow.f64 (/.f64 1 x) -1/2) (+.f64 (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))))) 1)","(-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) 1)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (+.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 -1/8 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))))) 1)","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (+.f64 (*.f64 1/16 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 -1/8 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))))) 1)","2","(+.f64 (*.f64 1/2 x) 2)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 2))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 2 (*.f64 1/16 (pow.f64 x 3)))))","(/.f64 x (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 2)) (sqrt.f64 x))) (/.f64 x (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1)))","(-.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 3))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 2)) (sqrt.f64 x))) (/.f64 x (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1)))) (*.f64 -1/8 (*.f64 (/.f64 1 (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 2)) (sqrt.f64 (/.f64 1 x)))))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 2)) (sqrt.f64 x))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (/.f64 x (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 1/4 (/.f64 x (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 3))) (*.f64 -1/8 (*.f64 (/.f64 1 (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 2)) (sqrt.f64 x)))) (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1)) (sqrt.f64 x))) (*.f64 1/16 (*.f64 (/.f64 1 (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 2)) (sqrt.f64 x))))) (pow.f64 x 2))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 3))) (/.f64 x (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1))))) (*.f64 -1/8 (*.f64 (/.f64 1 (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 2)) (sqrt.f64 (/.f64 1 x)))))","(/.f64 x (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1))","(+.f64 (*.f64 -1/2 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 2))) (/.f64 x (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1)))","(+.f64 (*.f64 -1/2 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 2))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (*.f64 (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 3) x))) (+.f64 (*.f64 1/8 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 2) x))) (/.f64 x (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1)))))","(+.f64 (*.f64 -1/2 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 2))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (*.f64 (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 3) x))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/8 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 2))) (*.f64 1/4 (/.f64 (pow.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 3))))) (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1))) (+.f64 (*.f64 1/16 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 2))) (*.f64 1/16 (/.f64 (pow.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 3))))) (pow.f64 x 2))) (+.f64 (*.f64 1/8 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 2) x))) (/.f64 x (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/2 x)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/2 x))","(fma.f64 -1/8 (*.f64 x x) (*.f64 1/2 x))","(*.f64 x (+.f64 1/2 (*.f64 x -1/8)))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/16 (pow.f64 x 3) (*.f64 1/2 x)))","(fma.f64 1/2 x (*.f64 (*.f64 x x) (+.f64 (*.f64 x 1/16) -1/8)))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 -5/128 (pow.f64 x 4)) (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (fma.f64 -5/128 (pow.f64 x 4) (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (fma.f64 1/16 (pow.f64 x 3) (*.f64 -5/128 (pow.f64 x 4)))))","(fma.f64 x (*.f64 x -1/8) (fma.f64 1/16 (pow.f64 x 3) (fma.f64 -5/128 (pow.f64 x 4) (*.f64 1/2 x))))","(-.f64 (pow.f64 (/.f64 1 x) -1/2) 1)","(+.f64 (pow.f64 (/.f64 1 x) -1/2) -1)","(-.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))) 1)","(+.f64 (pow.f64 (/.f64 1 x) -1/2) (-.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 x))) 1))","(+.f64 (pow.f64 (/.f64 1 x) -1/2) (fma.f64 1/2 (sqrt.f64 (/.f64 1 x)) -1))","(-.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) (+.f64 (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (*.f64 1/2 (sqrt.f64 (/.f64 1 x))))) 1)","(+.f64 (pow.f64 (/.f64 1 x) -1/2) (-.f64 (fma.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))) 1))","(+.f64 (fma.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))) (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1))","(+.f64 (fma.f64 1/2 (sqrt.f64 (/.f64 1 x)) (pow.f64 (/.f64 1 x) -1/2)) (fma.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) -1))","(-.f64 (+.f64 (*.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 (pow.f64 (/.f64 1 x) -1/2) (+.f64 (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))))) 1)","(+.f64 (fma.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) (+.f64 (pow.f64 (/.f64 1 x) -1/2) (fma.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))))) -1)","(+.f64 (fma.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) (pow.f64 (/.f64 1 x) -1/2)) (+.f64 (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (fma.f64 1/2 (sqrt.f64 (/.f64 1 x)) -1)))","(+.f64 (fma.f64 1/2 (sqrt.f64 (/.f64 1 x)) (fma.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (pow.f64 (/.f64 1 x) -1/2))) (fma.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) -1))","(-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1)","(expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))))","(expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))","(fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1)","(expm1.f64 (log.f64 (sqrt.f64 x)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) 1)","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) x)) (expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))))","(fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) x) (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))))","(fma.f64 1/2 (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2)) x) (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1))","(fma.f64 1/2 (/.f64 (sqrt.f64 (exp.f64 (log.f64 x))) x) (expm1.f64 (log.f64 (sqrt.f64 x))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (+.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 -1/8 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))))) 1)","(+.f64 (+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) x) (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))) (*.f64 -1/8 (/.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (*.f64 x x)))) -1)","(fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) x) (+.f64 (*.f64 (/.f64 -1/8 x) (/.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) x)) (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))))","(+.f64 -1 (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2)) x) (+.f64 (/.f64 -1/8 x) 1/2))))","(+.f64 (expm1.f64 (log.f64 (sqrt.f64 x))) (*.f64 (/.f64 (sqrt.f64 (exp.f64 (log.f64 x))) x) (+.f64 (/.f64 -1/8 x) 1/2)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (+.f64 (*.f64 1/16 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 -1/8 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))))) 1)","(+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) x) (fma.f64 1/16 (/.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (pow.f64 x 3)) (+.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (*.f64 -1/8 (/.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (*.f64 x x)))))) -1)","(fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) x) (+.f64 (fma.f64 1/16 (/.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (pow.f64 x 3)) (fma.f64 -1/8 (/.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (*.f64 x x)) (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))) -1))","(+.f64 -1 (fma.f64 1/16 (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2)) (pow.f64 x 3)) (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2)) x) (+.f64 (/.f64 -1/8 x) 1/2)))))","(+.f64 (*.f64 (/.f64 (sqrt.f64 (exp.f64 (log.f64 x))) (*.f64 x x)) (+.f64 -1/8 (/.f64 1/16 x))) (fma.f64 1/2 (/.f64 (sqrt.f64 (exp.f64 (log.f64 x))) x) (expm1.f64 (log.f64 (sqrt.f64 x)))))","(*.f64 1/2 x)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/2 x))","(fma.f64 -1/8 (*.f64 x x) (*.f64 1/2 x))","(*.f64 x (+.f64 1/2 (*.f64 x -1/8)))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/16 (pow.f64 x 3) (*.f64 1/2 x)))","(fma.f64 1/2 x (*.f64 (*.f64 x x) (+.f64 (*.f64 x 1/16) -1/8)))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 -5/128 (pow.f64 x 4)) (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (fma.f64 -5/128 (pow.f64 x 4) (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (fma.f64 1/16 (pow.f64 x 3) (*.f64 -5/128 (pow.f64 x 4)))))","(fma.f64 x (*.f64 x -1/8) (fma.f64 1/16 (pow.f64 x 3) (fma.f64 -5/128 (pow.f64 x 4) (*.f64 1/2 x))))","(-.f64 (pow.f64 (/.f64 1 x) -1/2) 1)","(+.f64 (pow.f64 (/.f64 1 x) -1/2) -1)","(-.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))) 1)","(+.f64 (pow.f64 (/.f64 1 x) -1/2) (-.f64 (*.f64 1/2 (sqrt.f64 (/.f64 1 x))) 1))","(+.f64 (pow.f64 (/.f64 1 x) -1/2) (fma.f64 1/2 (sqrt.f64 (/.f64 1 x)) -1))","(-.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) (+.f64 (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (*.f64 1/2 (sqrt.f64 (/.f64 1 x))))) 1)","(+.f64 (pow.f64 (/.f64 1 x) -1/2) (-.f64 (fma.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))) 1))","(+.f64 (fma.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))) (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1))","(+.f64 (fma.f64 1/2 (sqrt.f64 (/.f64 1 x)) (pow.f64 (/.f64 1 x) -1/2)) (fma.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) -1))","(-.f64 (+.f64 (*.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 5)))) (+.f64 (pow.f64 (/.f64 1 x) -1/2) (+.f64 (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))))) 1)","(+.f64 (fma.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) (+.f64 (pow.f64 (/.f64 1 x) -1/2) (fma.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 1/2 (sqrt.f64 (/.f64 1 x)))))) -1)","(+.f64 (fma.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) (pow.f64 (/.f64 1 x) -1/2)) (+.f64 (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))) (fma.f64 1/2 (sqrt.f64 (/.f64 1 x)) -1)))","(+.f64 (fma.f64 1/2 (sqrt.f64 (/.f64 1 x)) (fma.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (pow.f64 (/.f64 1 x) -1/2))) (fma.f64 1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 5))) -1))","(-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1)","(expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))))","(expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))","(fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1)","(expm1.f64 (log.f64 (sqrt.f64 x)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))) 1)","(+.f64 (*.f64 1/2 (/.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) x)) (expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))))","(fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) x) (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))))","(fma.f64 1/2 (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2)) x) (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1))","(fma.f64 1/2 (/.f64 (sqrt.f64 (exp.f64 (log.f64 x))) x) (expm1.f64 (log.f64 (sqrt.f64 x))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (+.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 -1/8 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))))) 1)","(+.f64 (+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) x) (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))) (*.f64 -1/8 (/.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (*.f64 x x)))) -1)","(fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) x) (+.f64 (*.f64 (/.f64 -1/8 x) (/.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) x)) (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))))","(+.f64 -1 (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2)) x) (+.f64 (/.f64 -1/8 x) 1/2))))","(+.f64 (expm1.f64 (log.f64 (sqrt.f64 x))) (*.f64 (/.f64 (sqrt.f64 (exp.f64 (log.f64 x))) x) (+.f64 (/.f64 -1/8 x) 1/2)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)) (+.f64 (*.f64 1/16 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 -1/8 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2)))))) 1)","(+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) x) (fma.f64 1/16 (/.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (pow.f64 x 3)) (+.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (*.f64 -1/8 (/.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (*.f64 x x)))))) -1)","(fma.f64 1/2 (/.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) x) (+.f64 (fma.f64 1/16 (/.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (pow.f64 x 3)) (fma.f64 -1/8 (/.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (*.f64 x x)) (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))) -1))","(+.f64 -1 (fma.f64 1/16 (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2)) (pow.f64 x 3)) (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2)) x) (+.f64 (/.f64 -1/8 x) 1/2)))))","(+.f64 (*.f64 (/.f64 (sqrt.f64 (exp.f64 (log.f64 x))) (*.f64 x x)) (+.f64 -1/8 (/.f64 1/16 x))) (fma.f64 1/2 (/.f64 (sqrt.f64 (exp.f64 (log.f64 x))) x) (expm1.f64 (log.f64 (sqrt.f64 x)))))","2","(+.f64 (*.f64 1/2 x) 2)","(fma.f64 1/2 x 2)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 2))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x 2))","(fma.f64 1/2 x (fma.f64 x (*.f64 x -1/8) 2))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 2 (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (+.f64 (fma.f64 1/2 x 2) (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (fma.f64 1/16 (pow.f64 x 3) 2)))","(fma.f64 1/2 x (fma.f64 x (*.f64 x -1/8) (fma.f64 1/16 (pow.f64 x 3) 2)))","(/.f64 x (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1))","(/.f64 x (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1))","(+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 2)) (sqrt.f64 x))) (/.f64 x (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1)))","(fma.f64 -1/2 (*.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2)) (sqrt.f64 x)) (/.f64 x (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1)))","(fma.f64 -1/2 (/.f64 (sqrt.f64 x) (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2)) (/.f64 x (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1)))","(-.f64 (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 3))) (+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 2)) (sqrt.f64 x))) (/.f64 x (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1)))) (*.f64 -1/8 (*.f64 (/.f64 1 (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 2)) (sqrt.f64 (/.f64 1 x)))))","(+.f64 (/.f64 1/4 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 3)) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2)) (sqrt.f64 x)) (/.f64 x (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1))) (*.f64 -1/8 (/.f64 (*.f64 1 (sqrt.f64 (/.f64 1 x))) (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2)))))","(+.f64 (fma.f64 -1/2 (/.f64 (sqrt.f64 x) (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2)) (/.f64 x (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1))) (-.f64 (/.f64 1/4 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 3)) (*.f64 -1/8 (/.f64 (sqrt.f64 (/.f64 1 x)) (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2)))))","(+.f64 (/.f64 x (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1)) (+.f64 (*.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2)) (-.f64 (*.f64 -1/2 (sqrt.f64 x)) (*.f64 -1/8 (sqrt.f64 (/.f64 1 x))))) (/.f64 1/4 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 3))))","(+.f64 (/.f64 x (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1)) (+.f64 (*.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2)) (+.f64 (*.f64 -1/2 (sqrt.f64 x)) (*.f64 (sqrt.f64 (/.f64 1 x)) 1/8))) (/.f64 1/4 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 3))))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (/.f64 1 (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 2)) (sqrt.f64 x))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/16 (/.f64 x (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 3))) (+.f64 (*.f64 1/2 (*.f64 (/.f64 (-.f64 (*.f64 1/4 (/.f64 x (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 3))) (*.f64 -1/8 (*.f64 (/.f64 1 (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 2)) (sqrt.f64 x)))) (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1)) (sqrt.f64 x))) (*.f64 1/16 (*.f64 (/.f64 1 (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 2)) (sqrt.f64 x))))) (pow.f64 x 2))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 3))) (/.f64 x (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1))))) (*.f64 -1/8 (*.f64 (/.f64 1 (pow.f64 (-.f64 (pow.f64 (/.f64 1 x) -1/2) 1) 2)) (sqrt.f64 (/.f64 1 x)))))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2)) (sqrt.f64 x)) (fma.f64 -1 (/.f64 (fma.f64 1/16 (/.f64 x (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 3)) (fma.f64 1/2 (*.f64 (sqrt.f64 x) (/.f64 (-.f64 (*.f64 1/4 (/.f64 x (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 3))) (*.f64 -1/8 (*.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2)) (sqrt.f64 x)))) (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1))) (*.f64 1/16 (*.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2)) (sqrt.f64 x))))) (*.f64 x x)) (+.f64 (/.f64 x (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1)) (/.f64 1/4 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 3))))) (*.f64 1/8 (/.f64 (*.f64 1 (sqrt.f64 (/.f64 1 x))) (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2))))","(+.f64 (fma.f64 -1/2 (/.f64 (sqrt.f64 x) (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2)) (-.f64 (+.f64 (/.f64 x (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1)) (/.f64 1/4 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 3))) (/.f64 (fma.f64 1/16 (/.f64 x (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 3)) (*.f64 (sqrt.f64 x) (+.f64 (*.f64 1/2 (/.f64 (fma.f64 1/4 (/.f64 x (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 3)) (/.f64 (*.f64 1/8 (sqrt.f64 x)) (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2))) (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1))) (/.f64 1/16 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2))))) (*.f64 x x)))) (*.f64 (/.f64 (sqrt.f64 (/.f64 1 x)) (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2)) 1/8))","(+.f64 (-.f64 (/.f64 1/4 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 3)) (/.f64 (fma.f64 (sqrt.f64 x) (fma.f64 1/2 (/.f64 (fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2)) 1/8 (*.f64 1/4 (/.f64 x (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 3)))) (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1)) (/.f64 1/16 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2))) (/.f64 x (/.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 3) 1/16))) (*.f64 x x))) (+.f64 (/.f64 x (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1)) (*.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2)) (-.f64 (*.f64 -1/2 (sqrt.f64 x)) (*.f64 -1/8 (sqrt.f64 (/.f64 1 x)))))))","(+.f64 (-.f64 (/.f64 1/4 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 3)) (/.f64 (fma.f64 (sqrt.f64 x) (fma.f64 1/2 (-.f64 (/.f64 (*.f64 x 1/4) (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 4)) (/.f64 (*.f64 -1/8 (sqrt.f64 x)) (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 3))) (/.f64 1/16 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2))) (/.f64 x (/.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 3) 1/16))) (*.f64 x x))) (+.f64 (/.f64 x (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1)) (*.f64 (/.f64 1 (pow.f64 (+.f64 (pow.f64 (/.f64 1 x) -1/2) -1) 2)) (+.f64 (*.f64 -1/2 (sqrt.f64 x)) (*.f64 (sqrt.f64 (/.f64 1 x)) 1/8)))))","(/.f64 x (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1))","(/.f64 x (expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))))","(/.f64 x (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))))","(/.f64 x (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1))","(/.f64 x (expm1.f64 (log.f64 (sqrt.f64 x))))","(+.f64 (*.f64 -1/2 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 2))) (/.f64 x (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1)))","(fma.f64 -1/2 (/.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (pow.f64 (expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))) 2)) (/.f64 x (expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))))))","(fma.f64 -1/2 (/.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (pow.f64 (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) 2)) (/.f64 x (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))))","(fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2)) (pow.f64 (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1) 2)) (/.f64 x (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1)))","(fma.f64 -1/2 (/.f64 (sqrt.f64 (exp.f64 (log.f64 x))) (pow.f64 (expm1.f64 (log.f64 (sqrt.f64 x))) 2)) (/.f64 x (expm1.f64 (log.f64 (sqrt.f64 x)))))","(+.f64 (*.f64 -1/2 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 2))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (*.f64 (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 3) x))) (+.f64 (*.f64 1/8 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 2) x))) (/.f64 x (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1)))))","(fma.f64 -1/2 (/.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (pow.f64 (expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))) 2)) (fma.f64 1/4 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) (*.f64 x (pow.f64 (expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))) 3))) (fma.f64 1/8 (/.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (*.f64 x (pow.f64 (expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))) 2))) (/.f64 x (expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))))))))","(fma.f64 -1/2 (/.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (pow.f64 (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) 2)) (fma.f64 1/4 (/.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) x) (pow.f64 (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) 3)) (fma.f64 1/8 (/.f64 (/.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) x) (pow.f64 (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) 2)) (/.f64 x (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))))))","(fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2)) (pow.f64 (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1) 2)) (fma.f64 1/4 (/.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2)) 2) x) (pow.f64 (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1) 3)) (fma.f64 1/8 (*.f64 (/.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1) 2)) (/.f64 (pow.f64 -1 1/2) x)) (/.f64 x (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1)))))","(fma.f64 -1/2 (/.f64 (sqrt.f64 (exp.f64 (log.f64 x))) (pow.f64 (expm1.f64 (log.f64 (sqrt.f64 x))) 2)) (fma.f64 (/.f64 1/8 x) (/.f64 (sqrt.f64 (exp.f64 (log.f64 x))) (pow.f64 (expm1.f64 (log.f64 (sqrt.f64 x))) 2)) (fma.f64 1/4 (/.f64 (/.f64 (exp.f64 (log.f64 x)) x) (pow.f64 (expm1.f64 (log.f64 (sqrt.f64 x))) 3)) (/.f64 x (expm1.f64 (log.f64 (sqrt.f64 x)))))))","(+.f64 (*.f64 -1/2 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 2))) (+.f64 (*.f64 1/4 (/.f64 (pow.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (*.f64 (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 3) x))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 1/8 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 2))) (*.f64 1/4 (/.f64 (pow.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 3))))) (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1))) (+.f64 (*.f64 1/16 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 2))) (*.f64 1/16 (/.f64 (pow.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 2) (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 3))))) (pow.f64 x 2))) (+.f64 (*.f64 1/8 (/.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 (pow.f64 (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1) 2) x))) (/.f64 x (-.f64 (exp.f64 (*.f64 1/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) 1))))))","(fma.f64 -1/2 (/.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (pow.f64 (expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))) 2)) (fma.f64 1/4 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) (*.f64 x (pow.f64 (expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))) 3))) (fma.f64 -1 (/.f64 (fma.f64 1/2 (/.f64 (*.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (fma.f64 1/8 (/.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (pow.f64 (expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))) 2)) (*.f64 1/4 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) (pow.f64 (expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))) 3))))) (expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))))) (*.f64 1/16 (+.f64 (/.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (pow.f64 (expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))) 2)) (/.f64 (pow.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) 2) (pow.f64 (expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))) 3))))) (*.f64 x x)) (fma.f64 1/8 (/.f64 (pow.f64 (exp.f64 1/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (*.f64 x (pow.f64 (expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))) 2))) (/.f64 x (expm1.f64 (*.f64 1/2 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1)))))))))","(fma.f64 -1/2 (/.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (pow.f64 (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) 2)) (fma.f64 1/4 (/.f64 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) x) (pow.f64 (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) 3)) (-.f64 (fma.f64 1/8 (/.f64 (/.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) x) (pow.f64 (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) 2)) (/.f64 x (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))))) (/.f64 (fma.f64 1/2 (*.f64 (/.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))) (fma.f64 1/4 (/.f64 (pow.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) (pow.f64 (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) 3)) (/.f64 (*.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 1/8) (pow.f64 (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) 2)))) (*.f64 1/16 (+.f64 (/.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (pow.f64 (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) 2)) (/.f64 (pow.f64 (pow.f64 (exp.f64 1/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) 2) (pow.f64 (expm1.f64 (*.f64 1/2 (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))) 3))))) (*.f64 x x)))))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2)) (pow.f64 (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1) 2)) (fma.f64 1/4 (/.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2)) 2) x) (pow.f64 (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1) 3)) (fma.f64 1/8 (*.f64 (/.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1) 2)) (/.f64 (pow.f64 -1 1/2) x)) (/.f64 x (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1))))) (/.f64 (fma.f64 1/2 (*.f64 (fma.f64 1/4 (/.f64 (pow.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2)) 2) (pow.f64 (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1) 3)) (*.f64 (/.f64 1/8 (pow.f64 (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1) 2)) (*.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2)))) (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2)) (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1))) (*.f64 1/16 (*.f64 (+.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2)) (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1)) 1) (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2)) (pow.f64 (fma.f64 (pow.f64 (/.f64 -1 x) -1/2) (pow.f64 -1 1/2) -1) 2))))) (*.f64 x x)))","(-.f64 (fma.f64 -1/2 (/.f64 (sqrt.f64 (exp.f64 (log.f64 x))) (pow.f64 (expm1.f64 (log.f64 (sqrt.f64 x))) 2)) (fma.f64 (/.f64 1/8 x) (/.f64 (sqrt.f64 (exp.f64 (log.f64 x))) (pow.f64 (expm1.f64 (log.f64 (sqrt.f64 x))) 2)) (fma.f64 1/4 (/.f64 (/.f64 (exp.f64 (log.f64 x)) x) (pow.f64 (expm1.f64 (log.f64 (sqrt.f64 x))) 3)) (/.f64 x (expm1.f64 (log.f64 (sqrt.f64 x))))))) (/.f64 (fma.f64 1/16 (+.f64 (/.f64 (sqrt.f64 (exp.f64 (log.f64 x))) (pow.f64 (expm1.f64 (log.f64 (sqrt.f64 x))) 2)) (/.f64 (exp.f64 (log.f64 x)) (pow.f64 (expm1.f64 (log.f64 (sqrt.f64 x))) 3))) (/.f64 (+.f64 (*.f64 1/16 (/.f64 (exp.f64 (log.f64 x)) (pow.f64 (expm1.f64 (log.f64 (sqrt.f64 x))) 2))) (*.f64 1/8 (pow.f64 (/.f64 (sqrt.f64 (exp.f64 (log.f64 x))) (expm1.f64 (log.f64 (sqrt.f64 x)))) 3))) (expm1.f64 (log.f64 (sqrt.f64 x))))) (*.f64 x x)))"]],"stop":[["node limit",1]],"time":52.049072265625,"type":"simplify"},{"compiler":[[3035,2145]],"time":34.81103515625,"type":"eval"},{"alts":[["(*.f64 (/.f64 x (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))) (-.f64 (+.f64 1 (+.f64 x 1)) (sqrt.f64 (+.f64 x 1))))","fresh",4.7556774926668],["(*.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))","fresh",21.197597509768443],["(/.f64 x (+.f64 1 (cbrt.f64 (pow.f64 (+.f64 x 1) 3/2))))","next",4.7244274926668],["(/.f64 x (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))","done",1.5152918419839292],["(/.f64 x (+.f64 1 (pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2)))","done",0.205410009768442]],"compiler":[[21,17],[15,11],[11,9],[10,7],[12,10],[21,17],[15,11],[11,9]],"count":[[133,5]],"kept":[{"done":[1,1],"fresh":[3,3],"new":[128,0],"picked":[1,1]}],"min-error":[0],"time":22.304931640625,"type":"prune"},{"compiler":[[36,29]],"locations":[["(pow.f64 (+.f64 x 1) 3/2)",0.01171875,true],["(+.f64 1 (cbrt.f64 (pow.f64 (+.f64 x 1) 3/2)))",0.01171875,true],["(/.f64 x (+.f64 1 (cbrt.f64 (pow.f64 (+.f64 x 1) 3/2))))",0.171875,true],["(cbrt.f64 (pow.f64 (+.f64 x 1) 3/2))",4.579134330361225,true]],"time":14.950927734375,"type":"localize"},{"count":[[4,24]],"series":[["(pow.f64 (+.f64 x 1) 3/2)","x","-inf",0.424072265625],["(pow.f64 (+.f64 x 1) 3/2)","x","inf",0.3369140625],["(pow.f64 (+.f64 x 1) 3/2)","x","0",0.863037109375],["(+.f64 1 (cbrt.f64 (pow.f64 (+.f64 x 1) 3/2)))","x","-inf",0.217041015625],["(+.f64 1 (cbrt.f64 (pow.f64 (+.f64 x 1) 3/2)))","x","inf",0.194091796875],["(+.f64 1 (cbrt.f64 (pow.f64 (+.f64 x 1) 3/2)))","x","0",0.166015625],["(/.f64 x (+.f64 1 (cbrt.f64 (pow.f64 (+.f64 x 1) 3/2))))","x","-inf",0.35400390625],["(/.f64 x (+.f64 1 (cbrt.f64 (pow.f64 (+.f64 x 1) 3/2))))","x","inf",0.52294921875],["(/.f64 x (+.f64 1 (cbrt.f64 (pow.f64 (+.f64 x 1) 3/2))))","x","0",0.201904296875],["(cbrt.f64 (pow.f64 (+.f64 x 1) 3/2))","x","-inf",0.23193359375],["(cbrt.f64 (pow.f64 (+.f64 x 1) 3/2))","x","inf",0.259033203125],["(cbrt.f64 (pow.f64 (+.f64 x 1) 3/2))","x","0",0.2490234375]],"time":4.18505859375,"type":"series"},{"count":[[4,181]],"egraph":[[2,2725,34,0.024218708],[1,202,34,0.003806166],[0,9,43,0.000309333]],"inputs":[["(cbrt.f64 (pow.f64 (+.f64 x 1) 3/2))","(/.f64 x (+.f64 1 (cbrt.f64 (pow.f64 (+.f64 x 1) 3/2))))","(+.f64 1 (cbrt.f64 (pow.f64 (+.f64 x 1) 3/2)))","(pow.f64 (+.f64 x 1) 3/2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (+.f64 x 1)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (+.f64 x 1))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x 1) 1/6) (cbrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 x 1)) (pow.f64 (+.f64 x 1) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x 1) 1/4) (pow.f64 (+.f64 x 1) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (+.f64 x 1)) 2)) (sqrt.f64 (cbrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 x x -1)) (sqrt.f64 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (hypot.f64 1 (pow.f64 x 3/2)) (hypot.f64 x (sqrt.f64 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x 1) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (*.f64 1/2 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x 1) 3) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x 1) 9/2) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x 1) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x 1) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x 1) 1/6) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 x 1)) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (+.f64 x 1)) 2) 3/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x 1) 3/4) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1/3) (*.f64 3/2 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (*.f64 1/2 (log1p.f64 x))) 2)) (cbrt.f64 (*.f64 1/2 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (*.f64 1/2 (log1p.f64 x)))) (sqrt.f64 (*.f64 1/2 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (+.f64 x 1))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 1 (sqrt.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (*.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 1/2 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3/2 (log1p.f64 x)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/2 (log1p.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (log1p.f64 x)) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (*.f64 1/3 (log1p.f64 x))) 3/4))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 x) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (*.f64 1/2 (log1p.f64 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/2 (*.f64 1/2 (log1p.f64 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 1/2 (log1p.f64 x)) 3) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 3/2 (log1p.f64 x)) 1) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 3/2 (log1p.f64 x)) 1/3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 1/2 (log1p.f64 x)) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 x) 1) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) (pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2) (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4)) (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (/.f64 1 (+.f64 1 (-.f64 (+.f64 x 1) (sqrt.f64 (+.f64 x 1))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (+.f64 x 1)) (/.f64 1 (-.f64 1 (sqrt.f64 (+.f64 x 1)))) -1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (cbrt.f64 x) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) x) -2)) (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) (sqrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (+.f64 (neg.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) 1) (/.f64 (cbrt.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) -2) (/.f64 x (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2)) (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) -1/2) (/.f64 x (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4))) (/.f64 (cbrt.f64 x) (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))) (+.f64 1 (-.f64 (+.f64 x 1) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 1 (+.f64 x 1))) (-.f64 1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (-.f64 (log.f64 x) (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) x) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (-.f64 (log.f64 x) (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 2)) (cbrt.f64 (-.f64 (log.f64 x) (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (-.f64 (log.f64 x) (log1p.f64 (sqrt.f64 (+.f64 x 1)))))) (sqrt.f64 (-.f64 (log.f64 x) (log1p.f64 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (+.f64 (neg.f64 (sqrt.f64 (+.f64 x 1))) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 x) (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (log.f64 x) (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (-.f64 (log.f64 x) (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (-.f64 (log.f64 x) (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/2 (-.f64 (log.f64 x) (log1p.f64 (sqrt.f64 (+.f64 x 1))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))) (log.f64 x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (-.f64 (log.f64 x) (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (-.f64 1 (sqrt.f64 (+.f64 x 1)))) (/.f64 (+.f64 x 1) (-.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) (pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 2) (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4)) (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (/.f64 1 (+.f64 1 (-.f64 (+.f64 x 1) (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (+.f64 x 1)) (/.f64 1 (-.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (-.f64 (+.f64 x 1) (sqrt.f64 (+.f64 x 1)))) (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1))) (-.f64 1 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (+.f64 1 (-.f64 (+.f64 x 1) (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (+.f64 (+.f64 x 1) (-.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (+.f64 x 1)) (-.f64 1 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))) (neg.f64 (+.f64 1 (-.f64 (+.f64 x 1) (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (+.f64 x 1))) (neg.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log1p.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 1 (pow.f64 (+.f64 x 1) 1/4)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1 (-.f64 (+.f64 x 1) (sqrt.f64 (+.f64 x 1)))) (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 (sqrt.f64 (+.f64 x 1))) (-.f64 1 (+.f64 x 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2)) (cbrt.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))) (sqrt.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/2 (log1p.f64 (sqrt.f64 (+.f64 x 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 (sqrt.f64 (+.f64 x 1))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (sqrt.f64 (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 x 1)) 1 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x 1) 1/6) (cbrt.f64 (+.f64 x 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 x 1)) (pow.f64 (+.f64 x 1) 1/6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x 1) 1/4) (pow.f64 (+.f64 x 1) 1/4) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (+.f64 x 1)) 2)) (sqrt.f64 (cbrt.f64 (+.f64 x 1))) 1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (+.f64 x 1) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 x 1) 3/2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 x 1) 3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 x 1) 3/2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 x 1) 3/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 x 1) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x 1) 3/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x 1)) (+.f64 x 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x 1) (sqrt.f64 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x 1) 3/4) (pow.f64 (+.f64 x 1) 3/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x 1)) 4) (pow.f64 (+.f64 x 1) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (+.f64 x 1)) 5/2) (pow.f64 (+.f64 x 1) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 x 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (+.f64 x 1) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (+.f64 x 1) 3/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 x 1) 9/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (+.f64 x 1) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (+.f64 x 1) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 3/2 (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/2 (log1p.f64 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3/2 (log1p.f64 x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (+.f64 x 1) 9/2)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log1p.f64 x)) 3/4))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3/4 (log1p.f64 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 1/2 (log1p.f64 x)) 3) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 3/2 (log1p.f64 x)) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 3/2 (log1p.f64 x)) 1/3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (*.f64 1/2 (log1p.f64 x)) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 x) 1) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 x) 3/4) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))) 2) (cbrt.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 1 (pow.f64 (+.f64 x 1) 3/4)) (hypot.f64 1 (pow.f64 (+.f64 x 1) 3/4)) -1)))))"]],"rules":[["egg-rr",32],["egg-rr",45],["egg-rr",49],["egg-rr",55]],"stop":[["node limit",1]],"time":52.053955078125,"type":"rewrite"},{"count":[[205,223]],"egraph":[[4,5176,269,0.022271832999999998],[3,1529,292,0.010452208],[2,498,365,0.003540083],[1,199,446,0.001225875],[0,76,467,0.000319708]],"inputs":[["1","(+.f64 (*.f64 1/2 x) 1)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 1))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 1 (*.f64 1/16 (pow.f64 x 3)))))","(*.f64 1/2 x)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/2 x))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (*.f64 1/16 (pow.f64 x 3))))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 -5/128 (pow.f64 x 4)) (*.f64 1/16 (pow.f64 x 3)))))","2","(+.f64 (*.f64 1/2 x) 2)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 2))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 2 (*.f64 1/16 (pow.f64 x 3)))))","1","(+.f64 1 (*.f64 3/2 x))","(+.f64 1 (+.f64 (*.f64 3/8 (pow.f64 x 2)) (*.f64 3/2 x)))","(+.f64 (*.f64 -1/16 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 3/8 (pow.f64 x 2)) (*.f64 3/2 x))))","(sqrt.f64 (pow.f64 x 3))","(+.f64 (sqrt.f64 (pow.f64 x 3)) (*.f64 3/2 (sqrt.f64 x)))","(+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (+.f64 (sqrt.f64 (pow.f64 x 3)) (*.f64 3/2 (sqrt.f64 x))))","(+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (+.f64 (sqrt.f64 (pow.f64 x 3)) (+.f64 (*.f64 3/2 (sqrt.f64 x)) (*.f64 -1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))))","(exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(+.f64 (exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 3/2 (/.f64 (exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))","(+.f64 (exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 3/8 (/.f64 (exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (*.f64 3/2 (/.f64 (exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x))))","(+.f64 (exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1/16 (/.f64 (exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (*.f64 3/8 (/.f64 (exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (*.f64 3/2 (/.f64 (exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 (*.f64 1/2 x) 1)","(fma.f64 1/2 x 1)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 1))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x 1))","(fma.f64 1/2 x (fma.f64 x (*.f64 x -1/8) 1))","(fma.f64 x (fma.f64 x -1/8 1/2) 1)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 1 (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (+.f64 (fma.f64 1/2 x 1) (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (fma.f64 1/16 (pow.f64 x 3) 1)))","(fma.f64 1/2 x (fma.f64 x (*.f64 x -1/8) (fma.f64 1/16 (pow.f64 x 3) 1)))","(fma.f64 1/16 (pow.f64 x 3) (fma.f64 x (fma.f64 x -1/8 1/2) 1))","(fma.f64 1/2 x (fma.f64 x (*.f64 x (fma.f64 x 1/16 -1/8)) 1))","(*.f64 1/2 x)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (*.f64 1/2 x))","(fma.f64 -1/8 (*.f64 x x) (*.f64 1/2 x))","(fma.f64 1/2 x (*.f64 (*.f64 -1/8 x) x))","(*.f64 x (+.f64 1/2 (*.f64 x -1/8)))","(*.f64 x (fma.f64 x -1/8 1/2))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/16 (pow.f64 x 3) (*.f64 1/2 x)))","(fma.f64 1/16 (pow.f64 x 3) (*.f64 x (+.f64 1/2 (*.f64 x -1/8))))","(*.f64 x (+.f64 1/2 (*.f64 x (fma.f64 x 1/16 -1/8))))","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 (*.f64 -5/128 (pow.f64 x 4)) (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (fma.f64 -5/128 (pow.f64 x 4) (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (fma.f64 1/16 (pow.f64 x 3) (*.f64 -5/128 (pow.f64 x 4)))))","(fma.f64 1/2 x (fma.f64 x (*.f64 x -1/8) (fma.f64 -5/128 (pow.f64 x 4) (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -5/128 (pow.f64 x 4) (*.f64 x (+.f64 1/2 (*.f64 x (fma.f64 x 1/16 -1/8)))))","(fma.f64 x (fma.f64 x -1/8 1/2) (*.f64 (pow.f64 x 3) (+.f64 1/16 (*.f64 x -5/128))))","2","(+.f64 (*.f64 1/2 x) 2)","(fma.f64 1/2 x 2)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) 2))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x 2))","(fma.f64 1/2 x (fma.f64 x (*.f64 x -1/8) 2))","(fma.f64 x (fma.f64 x -1/8 1/2) 2)","(+.f64 (*.f64 -1/8 (pow.f64 x 2)) (+.f64 (*.f64 1/2 x) (+.f64 2 (*.f64 1/16 (pow.f64 x 3)))))","(fma.f64 -1/8 (*.f64 x x) (+.f64 (fma.f64 1/2 x 2) (*.f64 1/16 (pow.f64 x 3))))","(fma.f64 -1/8 (*.f64 x x) (fma.f64 1/2 x (fma.f64 1/16 (pow.f64 x 3) 2)))","(fma.f64 x (*.f64 x -1/8) (fma.f64 1/16 (pow.f64 x 3) (fma.f64 1/2 x 2)))","(fma.f64 1/2 x (fma.f64 x (*.f64 x (fma.f64 x 1/16 -1/8)) 2))","1","(+.f64 1 (*.f64 3/2 x))","(+.f64 1 (*.f64 x 3/2))","(fma.f64 x 3/2 1)","(+.f64 1 (+.f64 (*.f64 3/8 (pow.f64 x 2)) (*.f64 3/2 x)))","(+.f64 1 (fma.f64 3/8 (*.f64 x x) (*.f64 x 3/2)))","(+.f64 (fma.f64 x 3/2 1) (*.f64 x (*.f64 x 3/8)))","(fma.f64 x 3/2 (fma.f64 x (*.f64 x 3/8) 1))","(fma.f64 x (fma.f64 x 3/8 3/2) 1)","(+.f64 (*.f64 -1/16 (pow.f64 x 3)) (+.f64 1 (+.f64 (*.f64 3/8 (pow.f64 x 2)) (*.f64 3/2 x))))","(fma.f64 -1/16 (pow.f64 x 3) (+.f64 1 (fma.f64 3/8 (*.f64 x x) (*.f64 x 3/2))))","(+.f64 (fma.f64 x 3/2 (*.f64 x (*.f64 x 3/8))) (fma.f64 (pow.f64 x 3) -1/16 1))","(fma.f64 (pow.f64 x 3) -1/16 (fma.f64 x 3/2 (fma.f64 x (*.f64 x 3/8) 1)))","(fma.f64 x (fma.f64 x 3/8 3/2) (fma.f64 (pow.f64 x 3) -1/16 1))","(sqrt.f64 (pow.f64 x 3))","(pow.f64 x 3/2)","(+.f64 (sqrt.f64 (pow.f64 x 3)) (*.f64 3/2 (sqrt.f64 x)))","(fma.f64 3/2 (sqrt.f64 x) (sqrt.f64 (pow.f64 x 3)))","(fma.f64 3/2 (sqrt.f64 x) (pow.f64 x 3/2))","(*.f64 (sqrt.f64 x) (+.f64 x 3/2))","(+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (+.f64 (sqrt.f64 (pow.f64 x 3)) (*.f64 3/2 (sqrt.f64 x))))","(fma.f64 3/8 (sqrt.f64 (/.f64 1 x)) (+.f64 (sqrt.f64 (pow.f64 x 3)) (*.f64 3/2 (sqrt.f64 x))))","(fma.f64 3/8 (sqrt.f64 (/.f64 1 x)) (fma.f64 3/2 (sqrt.f64 x) (sqrt.f64 (pow.f64 x 3))))","(fma.f64 3/8 (sqrt.f64 (/.f64 1 x)) (fma.f64 3/2 (sqrt.f64 x) (pow.f64 x 3/2)))","(fma.f64 3/2 (sqrt.f64 x) (fma.f64 3/8 (sqrt.f64 (/.f64 1 x)) (pow.f64 x 3/2)))","(fma.f64 3/8 (sqrt.f64 (/.f64 1 x)) (*.f64 (sqrt.f64 x) (+.f64 x 3/2)))","(+.f64 (*.f64 3/8 (sqrt.f64 (/.f64 1 x))) (+.f64 (sqrt.f64 (pow.f64 x 3)) (+.f64 (*.f64 3/2 (sqrt.f64 x)) (*.f64 -1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))))","(fma.f64 3/8 (sqrt.f64 (/.f64 1 x)) (+.f64 (sqrt.f64 (pow.f64 x 3)) (fma.f64 3/2 (sqrt.f64 x) (*.f64 -1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))))","(+.f64 (fma.f64 3/8 (sqrt.f64 (/.f64 1 x)) (fma.f64 3/2 (sqrt.f64 x) (sqrt.f64 (pow.f64 x 3)))) (*.f64 -1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3)))))","(fma.f64 3/8 (sqrt.f64 (/.f64 1 x)) (fma.f64 3/2 (sqrt.f64 x) (fma.f64 -1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (pow.f64 x 3/2))))","(fma.f64 3/2 (sqrt.f64 x) (fma.f64 3/8 (sqrt.f64 (/.f64 1 x)) (fma.f64 -1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (pow.f64 x 3/2))))","(fma.f64 3/8 (sqrt.f64 (/.f64 1 x)) (fma.f64 -1/16 (sqrt.f64 (/.f64 1 (pow.f64 x 3))) (*.f64 (sqrt.f64 x) (+.f64 x 3/2))))","(exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1))))","(sqrt.f64 (pow.f64 x 3))","(pow.f64 x 3/2)","(+.f64 (exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (*.f64 3/2 (/.f64 (exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))","(+.f64 (pow.f64 (exp.f64 3/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (*.f64 3/2 (/.f64 (pow.f64 (exp.f64 3/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) x)))","(fma.f64 3/2 (/.f64 (pow.f64 (exp.f64 3/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) x) (pow.f64 (exp.f64 3/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))","(fma.f64 3/2 (/.f64 (pow.f64 (/.f64 -1 x) -3/2) (/.f64 x (pow.f64 -1 3/2))) (*.f64 (pow.f64 (/.f64 -1 x) -3/2) (pow.f64 -1 3/2)))","(*.f64 (+.f64 (/.f64 3/2 x) 1) (pow.f64 (exp.f64 3/2) (log.f64 x)))","(*.f64 (+.f64 1 (/.f64 3/2 x)) (pow.f64 x 3/2))","(+.f64 (exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 3/8 (/.f64 (exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (*.f64 3/2 (/.f64 (exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x))))","(+.f64 (pow.f64 (exp.f64 3/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (fma.f64 3/8 (/.f64 (pow.f64 (exp.f64 3/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (*.f64 x x)) (*.f64 3/2 (/.f64 (pow.f64 (exp.f64 3/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) x))))","(+.f64 (pow.f64 (exp.f64 3/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (fma.f64 3/8 (/.f64 (pow.f64 (exp.f64 3/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (*.f64 x x)) (/.f64 3/2 (/.f64 x (pow.f64 (exp.f64 3/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x))))))))","(fma.f64 (pow.f64 (/.f64 -1 x) -3/2) (pow.f64 -1 3/2) (*.f64 (/.f64 (pow.f64 (/.f64 -1 x) -3/2) (/.f64 x (pow.f64 -1 3/2))) (+.f64 3/2 (/.f64 3/8 x))))","(fma.f64 (/.f64 (pow.f64 (exp.f64 3/2) (log.f64 x)) x) (+.f64 3/2 (/.f64 3/8 x)) (pow.f64 (exp.f64 3/2) (log.f64 x)))","(fma.f64 (/.f64 (pow.f64 x 3/2) x) (+.f64 3/2 (/.f64 3/8 x)) (pow.f64 x 3/2))","(+.f64 (exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (+.f64 (*.f64 -1/16 (/.f64 (exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 3))) (+.f64 (*.f64 3/8 (/.f64 (exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) (pow.f64 x 2))) (*.f64 3/2 (/.f64 (exp.f64 (*.f64 3/2 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 -1)))) x)))))","(+.f64 (pow.f64 (exp.f64 3/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (fma.f64 -1/16 (/.f64 (pow.f64 (exp.f64 3/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (pow.f64 x 3)) (fma.f64 3/8 (/.f64 (pow.f64 (exp.f64 3/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) (*.f64 x x)) (*.f64 3/2 (/.f64 (pow.f64 (exp.f64 3/2) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 -1))) x)))))","(+.f64 (pow.f64 (exp.f64 3/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (fma.f64 -1/16 (/.f64 (pow.f64 (exp.f64 3/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (pow.f64 x 3)) (fma.f64 3/8 (/.f64 (pow.f64 (exp.f64 3/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))) (*.f64 x x)) (/.f64 3/2 (/.f64 x (pow.f64 (exp.f64 3/2) (-.f64 (log.f64 -1) (log.f64 (/.f64 -1 x)))))))))","(fma.f64 -1/16 (/.f64 (*.f64 (pow.f64 (/.f64 -1 x) -3/2) (pow.f64 -1 3/2)) (pow.f64 x 3)) (fma.f64 (pow.f64 (/.f64 -1 x) -3/2) (pow.f64 -1 3/2) (*.f64 (/.f64 (pow.f64 (/.f64 -1 x) -3/2) (/.f64 x (pow.f64 -1 3/2))) (+.f64 3/2 (/.f64 3/8 x)))))","(+.f64 (pow.f64 (exp.f64 3/2) (log.f64 x)) (*.f64 (/.f64 (pow.f64 (exp.f64 3/2) (log.f64 x)) x) (+.f64 (/.f64 3/8 x) (+.f64 3/2 (/.f64 -1/16 (*.f64 x x))))))","(+.f64 (*.f64 (/.f64 (pow.f64 x 3/2) x) (+.f64 3/2 (+.f64 (/.f64 3/8 x) (/.f64 -1/16 (*.f64 x x))))) (pow.f64 x 3/2))"]],"stop":[["node limit",1]],"time":39.64599609375,"type":"simplify"},{"compiler":[[3184,2529]],"time":45.486083984375,"type":"eval"},{"alts":[["(*.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))","fresh",21.197597509768443],["(/.f64 x (+.f64 1 (cbrt.f64 (pow.f64 (+.f64 x 1) 3/2))))","done",4.7244274926668],["(/.f64 x (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))","done",1.5152918419839292],["(/.f64 x (+.f64 1 (pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2)))","done",0.205410009768442],["(*.f64 (/.f64 x (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))) (-.f64 (+.f64 1 (+.f64 x 1)) (sqrt.f64 (+.f64 x 1))))","fresh",4.7556774926668]],"compiler":[[15,11],[11,9],[10,7],[12,10],[21,17]],"count":[[228,5]],"kept":[{"done":[2,2],"fresh":[2,1],"new":[223,1],"picked":[1,1]}],"min-error":[0],"time":66.133056640625,"type":"prune"},{"accuracy":[0.171875],"baseline":[0.171875],"branch":[["x",0.171875,1],["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))",0.171875,1]],"compiler":[[2,1],[9,7],[117,89]],"count":[[9,1]],"inputs":[["(*.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))","(*.f64 (/.f64 x (+.f64 1 (pow.f64 (+.f64 x 1) 3/2))) (-.f64 (+.f64 1 (+.f64 x 1)) (sqrt.f64 (+.f64 x 1))))","(/.f64 x (+.f64 1 (cbrt.f64 (pow.f64 (+.f64 x 1) 3/2))))","(/.f64 x (/.f64 x (expm1.f64 (*.f64 1/2 (log1p.f64 x)))))","(/.f64 x (/.f64 (+.f64 1 (pow.f64 (+.f64 x 1) 3/2)) (+.f64 1 (+.f64 1 (-.f64 x (sqrt.f64 (+.f64 x 1)))))))","(/.f64 x (+.f64 1 (pow.f64 (pow.f64 (+.f64 x 1) 1/4) 2)))","(pow.f64 (/.f64 (+.f64 1 (sqrt.f64 (+.f64 x 1))) x) -1)","(*.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 1 (sqrt.f64 (+.f64 x 1)))))","(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))"]],"link":["."],"name":["Numeric.Log:$clog1p from log-domain-0.10.2.1, B"],"oracle":[26.90627357161243],"outputs":[["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))"]],"time":11.40185546875,"times":[["x",4.47998046875],["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))",4.77783203125]],"type":"regimes"},{"compiler":[[9,7]],"egraph":[[1,11,12,3.2458e-5],[0,7,12,2.1458e-5]],"inputs":[["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (+.f64 1 (sqrt.f64 (+.f64 x 1))))"]],"stop":[["fuel",1],["saturated",1]],"time":8.26416015625,"type":"simplify"},{"time":0.00390625,"type":"soundness"},{"compiler":[[9,7]],"remove-preprocessing":[[]],"time":8.095947265625,"type":"end"}]