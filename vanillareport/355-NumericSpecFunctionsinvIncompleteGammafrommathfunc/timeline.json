[{"compiler":[[15,12]],"method":["search"],"sampling":[[12,0.3756094875279814,0.45219479862134904,0.17219571385066956],[11,0.36097535165026784,0.4673167390283197,0.17170790932141244],[10,0.3160973349586129,0.5287801097147167,0.1551225553266704],[9,0.28878028132021427,0.5580483814701438,0.15317133720964193],[8,0.20292668417096138,0.6790239047259092,0.11804941110312939],[7,0.15609744936227798,0.7336580120027065,0.11024453863501549],[6,0.031219489872455597,0.9365846961736679,0.032195813953876495],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":92.44482421875,"type":"analyze"},{"outcomes":[["body",512,"invalid",26.24072265625,337],["body",256,"invalid",77.704345703125,1864],["body",512,"valid",66.383056640625,718],["body",1024,"invalid",61.608642578125,516],["body",1024,"valid",161.359375,1130],["body",2048,"valid",16.74462890625,77],["body",256,"valid",341.049072265625,6331]],"time":762.361083984375,"type":"sample"},{"compiler":[[14,11]],"egraph":[[0,2,2,1.625e-6],[12,7623,30,0.07564079099999999],[11,7349,30,0.06649604099999999],[10,7079,30,0.058395749999999996],[9,6593,30,0.050357709],[8,6272,30,0.04124425],[7,5604,30,0.033109459],[6,2201,30,0.02167475],[5,813,30,0.007821917],[4,358,30,0.002991834],[3,160,30,0.001165042],[2,73,30,0.00045333300000000005],[1,38,34,0.00018554200000000002],[0,16,36,7.1333e-5]],"inputs":[["0","1"],["(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))","(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 y x) (-.f64 1 x)))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))","(-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))","(-.f64 1 (log1p.f64 (/.f64 (-.f64 y x) (-.f64 1 y))))","(-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))","(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 y x) (-.f64 1 x)))))","(-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 y x)) (-.f64 1 x))))","(-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (-.f64 1 x))))","(-.f64 1 (log1p.f64 (/.f64 (-.f64 y x) (+.f64 x -1))))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":100.614013671875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[11,6635,15,0.068375082],[10,5689,15,0.055364540999999996],[9,5114,15,0.043412915999999996],[8,4367,15,0.032620958],[7,2609,15,0.021813],[6,1018,15,0.009681709],[5,439,15,0.0038550419999999995],[4,203,15,0.0016237089999999999],[3,86,15,0.0006674999999999999],[2,40,17,0.00027254199999999997],[1,22,17,0.000122292],[0,10,18,5.0625e-5]],"inputs":[["(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))"]],"method":["egg-herbie"],"outputs":[["(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))","(-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))","(-.f64 1 (log1p.f64 (/.f64 (-.f64 y x) (-.f64 1 y))))","(-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))"]],"stop":[["node limit",1]],"time":80.243896484375,"type":"simplify"},{"compiler":[[24,17]],"time":0.4150390625,"type":"eval"},{"alts":[["(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))","fresh",16.635185414317228],["(-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))","next",16.623466664317228]],"compiler":[[14,11],[12,9],[14,11],[12,9]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[16.619560414317228],"time":1.35302734375,"type":"prune"},{"compiler":[[37,20]],"locations":[["(-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))",0.00390625,true],["(/.f64 (-.f64 x y) (+.f64 y -1))",0.03125,true],["(log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))",3.256935326467167,true]],"time":8.866943359375,"type":"localize"},{"count":[[3,72]],"series":[["(-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))","y","-inf",0.4267578125],["(-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))","y","inf",0.258056640625],["(-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))","y","0",0.4560546875],["(-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))","x","-inf",0.5322265625],["(-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))","x","inf",0.4111328125],["(-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))","x","0",0.416015625],["(/.f64 (-.f64 x y) (+.f64 y -1))","y","-inf",0.23193359375],["(/.f64 (-.f64 x y) (+.f64 y -1))","y","inf",0.23583984375],["(/.f64 (-.f64 x y) (+.f64 y -1))","y","0",0.22802734375],["(/.f64 (-.f64 x y) (+.f64 y -1))","x","-inf",0.323974609375],["(/.f64 (-.f64 x y) (+.f64 y -1))","x","inf",0.343994140625],["(/.f64 (-.f64 x y) (+.f64 y -1))","x","0",0.298828125],["(log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))","y","-inf",0.932861328125],["(log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))","y","inf",0.5830078125],["(log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))","y","0",0.839111328125],["(log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))","x","-inf",0.60205078125],["(log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))","x","inf",0.639892578125],["(log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))","x","0",0.826171875]],"time":8.942138671875,"type":"series"},{"count":[[3,139]],"egraph":[[2,3255,37,0.027339040999999998],[1,224,37,0.004113249],[0,10,37,0.000296791]],"inputs":[["(log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))","(/.f64 (-.f64 x y) (+.f64 y -1))","(-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1)) 2)) (log.f64 (cbrt.f64 (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1))) (log.f64 (sqrt.f64 (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log1p.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 3)) (log.f64 (+.f64 1 (-.f64 (pow.f64 (/.f64 (+.f64 y -1) (-.f64 x y)) -2) (/.f64 (-.f64 x y) (+.f64 y -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 y -1) (-.f64 x y)) -2))) (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (+.f64 y -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 2) (cbrt.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) (sqrt.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1)) 2) (cbrt.f64 (+.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1)) (sqrt.f64 (+.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1)) -1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 x y) (+.f64 y -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (+.f64 y -1)) (neg.f64 (/.f64 y (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (+.f64 y -1)) (/.f64 y (+.f64 y -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 1 (+.f64 y -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 x y) (+.f64 y -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 y -1) (-.f64 x y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 y -1) (-.f64 x y)) -2)) (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (*.f64 (cbrt.f64 (-.f64 x y)) (/.f64 1 (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x y)) (*.f64 (sqrt.f64 (-.f64 x y)) (/.f64 1 (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 x y)) (/.f64 1 (fma.f64 y -1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 y -1)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 y -1)) -2) (/.f64 (-.f64 x y) (cbrt.f64 (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 y -1) -1/2) (/.f64 (-.f64 x y) (sqrt.f64 (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) 1) (/.f64 (cbrt.f64 (-.f64 x y)) (+.f64 y -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 x y)) 1) (/.f64 (sqrt.f64 (-.f64 x y)) (+.f64 y -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (+.f64 y -1)) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 x y)) (pow.f64 (cbrt.f64 (+.f64 y -1)) 2)) (/.f64 (sqrt.f64 (-.f64 x y)) (cbrt.f64 (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (sqrt.f64 (+.f64 y -1))) (/.f64 (cbrt.f64 (-.f64 x y)) (sqrt.f64 (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (+.f64 -1 (pow.f64 y 3))) (-.f64 (fma.f64 y y 1) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (fma.f64 y y -1)) (+.f64 y 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 y -1) (-.f64 x y)) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 y -1) (-.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (-.f64 x y) 3) (pow.f64 (+.f64 y -1) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (+.f64 y -1) (-.f64 x y)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 x y) (fma.f64 y -1 1)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (+.f64 y -1) (-.f64 x y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 x y) 3) (pow.f64 (+.f64 y -1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (+.f64 y -1) (-.f64 x y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (+.f64 y -1)) (neg.f64 (/.f64 y (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (+.f64 y -1)) (neg.f64 (/.f64 y (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1)) 2) (cbrt.f64 (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 y -1))) 2) (cbrt.f64 (/.f64 x (+.f64 y -1))) (neg.f64 (/.f64 y (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1)) (sqrt.f64 (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x (+.f64 y -1))) (sqrt.f64 (/.f64 x (+.f64 y -1))) (neg.f64 (/.f64 y (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 x x)) 1) (/.f64 (cbrt.f64 x) (+.f64 y -1)) (neg.f64 (/.f64 y (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 y -1)) (neg.f64 (/.f64 y (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 y -1)) -2) (/.f64 x (cbrt.f64 (+.f64 y -1))) (neg.f64 (/.f64 y (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (pow.f64 (cbrt.f64 (+.f64 y -1)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (+.f64 y -1))) (neg.f64 (/.f64 y (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (+.f64 y -1)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (+.f64 y -1))) (neg.f64 (/.f64 y (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 y -1) -1/2) (/.f64 x (sqrt.f64 (+.f64 y -1))) (neg.f64 (/.f64 y (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (+.f64 y -1))) (/.f64 (cbrt.f64 x) (sqrt.f64 (+.f64 y -1))) (neg.f64 (/.f64 y (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (+.f64 y -1))) (/.f64 (sqrt.f64 x) (sqrt.f64 (+.f64 y -1))) (neg.f64 (/.f64 y (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 -1 (pow.f64 y 3))) (-.f64 (fma.f64 y y 1) (neg.f64 y)) (neg.f64 (/.f64 y (+.f64 y -1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (fma.f64 y y -1)) (+.f64 y 1) (neg.f64 (/.f64 y (+.f64 y -1))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (/.f64 (E.f64) (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1))) 2)) (log.f64 (cbrt.f64 (/.f64 (E.f64) (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (/.f64 (E.f64) (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1)))) (log.f64 (sqrt.f64 (/.f64 (E.f64) (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))) (pow.f64 (cbrt.f64 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))) 2) (cbrt.f64 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))) (sqrt.f64 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 3)) (/.f64 1 (fma.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) (+.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 2)) (/.f64 1 (+.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) (+.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1) 1) (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1) (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 3)) (fma.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) (+.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 2)) (+.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 3))) (neg.f64 (fma.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) (+.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 2))) (neg.f64 (+.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (neg.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 3)) (+.f64 1 (-.f64 (pow.f64 (neg.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 2) (neg.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (neg.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 2)) (-.f64 1 (neg.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) (+.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1) 1) (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1) (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (E.f64) (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (neg.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (neg.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log1p.f64 (neg.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/3 (log1p.f64 (neg.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 2) (neg.f64 (cbrt.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) (neg.f64 (sqrt.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (neg.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))) 2) (cbrt.f64 (neg.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))) (sqrt.f64 (neg.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 2)) (cbrt.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))) (sqrt.f64 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) 1)))))"]],"rules":[["egg-rr",47],["egg-rr",64],["egg-rr",28]],"stop":[["node limit",1]],"time":55.31298828125,"type":"rewrite"},{"count":[[211,260]],"egraph":[[2,3235,2181,0.017781167],[1,812,2479,0.005723458],[0,241,2996,0.001075416]],"inputs":[["(log.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))))","(+.f64 (/.f64 x (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1))) (log.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1))))))","(+.f64 (/.f64 x (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1))) (+.f64 (log.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1))))) (*.f64 -1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2))))))","(+.f64 (/.f64 x (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 3) (pow.f64 (-.f64 y 1) 3)))) (+.f64 (log.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1))))) (*.f64 -1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 (-.f64 y 1))))","(+.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 (-.f64 y 1)))))","(+.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 (-.f64 y 1))))))","(+.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 3) (pow.f64 (-.f64 y 1) 3)) (pow.f64 x 3))) (log.f64 (/.f64 1 (-.f64 y 1)))))))","(+.f64 (log.f64 (neg.f64 (/.f64 1 (-.f64 y 1)))) (*.f64 -1 (log.f64 (/.f64 -1 x))))","(+.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (neg.f64 (/.f64 1 (-.f64 y 1))))))","(+.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (neg.f64 (/.f64 1 (-.f64 y 1)))))))","(+.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 (neg.f64 (/.f64 1 (-.f64 y 1)))) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 3) (pow.f64 (-.f64 y 1) 3)) (pow.f64 x 3)))))))","(log.f64 (+.f64 1 (*.f64 -1 x)))","(+.f64 (*.f64 y (-.f64 (/.f64 1 (+.f64 1 (*.f64 -1 x))) (/.f64 x (+.f64 1 (*.f64 -1 x))))) (log.f64 (+.f64 1 (*.f64 -1 x))))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (*.f64 2 (/.f64 (-.f64 1 x) (+.f64 1 (*.f64 -1 x))))) (pow.f64 y 2))) (+.f64 (*.f64 y (-.f64 (/.f64 1 (+.f64 1 (*.f64 -1 x))) (/.f64 x (+.f64 1 (*.f64 -1 x))))) (log.f64 (+.f64 1 (*.f64 -1 x)))))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (*.f64 2 (/.f64 (-.f64 1 x) (+.f64 1 (*.f64 -1 x))))) (pow.f64 y 2))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (+.f64 1 (*.f64 -1 x)) 3))) (+.f64 (*.f64 6 (/.f64 (-.f64 1 x) (+.f64 1 (*.f64 -1 x)))) (*.f64 -6 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))))))) (+.f64 (*.f64 y (-.f64 (/.f64 1 (+.f64 1 (*.f64 -1 x))) (/.f64 x (+.f64 1 (*.f64 -1 x))))) (log.f64 (+.f64 1 (*.f64 -1 x))))))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1)))","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1))))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1)))))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (log.f64 (-.f64 x 1)) (*.f64 1/3 (/.f64 1 (pow.f64 y 3)))))))","(+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (log.f64 (/.f64 -1 y)))","(+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (+.f64 (log.f64 (/.f64 -1 y)) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (-.f64 x 1))) y))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 x 1) 2)))) (pow.f64 y 2))) (+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (+.f64 (log.f64 (/.f64 -1 y)) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (-.f64 x 1))) y)))))","(+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 6 (/.f64 (-.f64 1 x) (-.f64 x 1))) (+.f64 (*.f64 -6 (/.f64 (-.f64 1 x) (-.f64 x 1))) (*.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (-.f64 x 1) 3))))) (pow.f64 y 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 x 1) 2)))) (pow.f64 y 2))) (+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (+.f64 (log.f64 (/.f64 -1 y)) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (-.f64 x 1))) y))))))","(*.f64 -1 (/.f64 y (-.f64 y 1)))","(+.f64 (/.f64 x (-.f64 y 1)) (*.f64 -1 (/.f64 y (-.f64 y 1))))","(+.f64 (/.f64 x (-.f64 y 1)) (*.f64 -1 (/.f64 y (-.f64 y 1))))","(+.f64 (/.f64 x (-.f64 y 1)) (*.f64 -1 (/.f64 y (-.f64 y 1))))","(/.f64 x (-.f64 y 1))","(+.f64 (/.f64 x (-.f64 y 1)) (*.f64 -1 (/.f64 y (-.f64 y 1))))","(+.f64 (/.f64 x (-.f64 y 1)) (*.f64 -1 (/.f64 y (-.f64 y 1))))","(+.f64 (/.f64 x (-.f64 y 1)) (*.f64 -1 (/.f64 y (-.f64 y 1))))","(/.f64 x (-.f64 y 1))","(+.f64 (/.f64 x (-.f64 y 1)) (*.f64 -1 (/.f64 y (-.f64 y 1))))","(+.f64 (/.f64 x (-.f64 y 1)) (*.f64 -1 (/.f64 y (-.f64 y 1))))","(+.f64 (/.f64 x (-.f64 y 1)) (*.f64 -1 (/.f64 y (-.f64 y 1))))","(*.f64 -1 x)","(+.f64 (*.f64 y (-.f64 1 x)) (*.f64 -1 x))","(+.f64 (*.f64 y (-.f64 1 x)) (+.f64 (*.f64 (pow.f64 y 2) (-.f64 1 x)) (*.f64 -1 x)))","(+.f64 (*.f64 y (-.f64 1 x)) (+.f64 (*.f64 (pow.f64 y 3) (-.f64 1 x)) (+.f64 (*.f64 (pow.f64 y 2) (-.f64 1 x)) (*.f64 -1 x))))","-1","(-.f64 (/.f64 x y) (+.f64 (/.f64 1 y) 1))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y)) (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) 1)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y))) (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 1 (/.f64 1 (pow.f64 y 3))))))","-1","(-.f64 (/.f64 x y) (+.f64 (/.f64 1 y) 1))","(-.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (+.f64 (/.f64 1 y) 1))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))))) (+.f64 (/.f64 1 y) (+.f64 1 (/.f64 1 (pow.f64 y 3)))))","(-.f64 1 (log.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1))))))","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1))))) (log.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1))))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 x (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)))) (*.f64 1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)))))) (log.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1))))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 x (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)))) (*.f64 -1/3 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 3) (pow.f64 (-.f64 y 1) 3))))))) (log.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1))))))","(-.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 (-.f64 y 1)))))","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 (-.f64 y 1)))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)) (pow.f64 x 2))))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 (-.f64 y 1)))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 3) (pow.f64 (-.f64 y 1) 3)) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)) (pow.f64 x 2)))))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 (-.f64 y 1)))))","(-.f64 1 (+.f64 (log.f64 (neg.f64 (/.f64 1 (-.f64 y 1)))) (*.f64 -1 (log.f64 (/.f64 -1 x)))))","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (neg.f64 (/.f64 1 (-.f64 y 1))))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)) (pow.f64 x 2))))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (neg.f64 (/.f64 1 (-.f64 y 1))))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 3) (pow.f64 (-.f64 y 1) 3)) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)) (pow.f64 x 2)))))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (neg.f64 (/.f64 1 (-.f64 y 1))))))","(-.f64 1 (log.f64 (+.f64 1 (*.f64 -1 x))))","(-.f64 (+.f64 1 (*.f64 y (-.f64 (/.f64 x (+.f64 1 (*.f64 -1 x))) (/.f64 1 (+.f64 1 (*.f64 -1 x)))))) (log.f64 (+.f64 1 (*.f64 -1 x))))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (*.f64 2 (/.f64 (-.f64 1 x) (+.f64 1 (*.f64 -1 x))))) (pow.f64 y 2))) (+.f64 1 (*.f64 y (-.f64 (/.f64 x (+.f64 1 (*.f64 -1 x))) (/.f64 1 (+.f64 1 (*.f64 -1 x))))))) (log.f64 (+.f64 1 (*.f64 -1 x))))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (*.f64 2 (/.f64 (-.f64 1 x) (+.f64 1 (*.f64 -1 x))))) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 y (-.f64 (/.f64 x (+.f64 1 (*.f64 -1 x))) (/.f64 1 (+.f64 1 (*.f64 -1 x))))) (*.f64 -1/6 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (+.f64 1 (*.f64 -1 x)) 3))) (+.f64 (*.f64 6 (/.f64 (-.f64 1 x) (+.f64 1 (*.f64 -1 x)))) (*.f64 -6 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2)))))))))) (log.f64 (+.f64 1 (*.f64 -1 x))))","(-.f64 1 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1))))","(-.f64 1 (+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1)))))","(-.f64 1 (+.f64 (/.f64 1 y) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1))))))","(-.f64 1 (+.f64 (/.f64 1 y) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (log.f64 (-.f64 x 1)) (*.f64 1/3 (/.f64 1 (pow.f64 y 3))))))))","(-.f64 1 (+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (log.f64 (/.f64 -1 y))))","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 (-.f64 (/.f64 x (-.f64 x 1)) (/.f64 1 (-.f64 x 1))) y))) (+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (log.f64 (/.f64 -1 y))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 x (-.f64 x 1)) (/.f64 1 (-.f64 x 1))) y)) (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 x 1) 2)))) (pow.f64 y 2))))) (+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (log.f64 (/.f64 -1 y))))","(-.f64 (+.f64 1 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 6 (/.f64 (-.f64 1 x) (-.f64 x 1))) (+.f64 (*.f64 -6 (/.f64 (-.f64 1 x) (-.f64 x 1))) (*.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (-.f64 x 1) 3))))) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 x (-.f64 x 1)) (/.f64 1 (-.f64 x 1))) y)) (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 x 1) 2)))) (pow.f64 y 2)))))) (+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (log.f64 (/.f64 -1 y))))"]],"method":["egg-herbie"],"outputs":[["(log.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))))","(log1p.f64 (neg.f64 (/.f64 y (+.f64 y -1))))","(log1p.f64 (/.f64 (neg.f64 y) (+.f64 -1 y)))","(+.f64 (/.f64 x (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1))) (log.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1))))))","(+.f64 (log1p.f64 (neg.f64 (/.f64 y (+.f64 y -1)))) (/.f64 (/.f64 x (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1))))) (+.f64 y -1)))","(+.f64 (log1p.f64 (/.f64 (neg.f64 y) (+.f64 -1 y))) (/.f64 (/.f64 x (+.f64 -1 y)) (-.f64 1 (/.f64 y (+.f64 -1 y)))))","(+.f64 (/.f64 x (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1))) (+.f64 (log.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1))))) (*.f64 -1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2))))))","(+.f64 (/.f64 (/.f64 x (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1))))) (+.f64 y -1)) (+.f64 (log1p.f64 (neg.f64 (/.f64 y (+.f64 y -1)))) (*.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 (pow.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) 2) (pow.f64 (+.f64 y -1) 2))))))","(+.f64 (/.f64 (/.f64 x (+.f64 -1 y)) (-.f64 1 (/.f64 y (+.f64 -1 y)))) (fma.f64 -1/2 (*.f64 (/.f64 x (pow.f64 (+.f64 -1 y) 2)) (/.f64 x (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2))) (log1p.f64 (/.f64 (neg.f64 y) (+.f64 -1 y)))))","(+.f64 (/.f64 x (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 3) (pow.f64 (-.f64 y 1) 3)))) (+.f64 (log.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1))))) (*.f64 -1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)))))))","(+.f64 (/.f64 (/.f64 x (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1))))) (+.f64 y -1)) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) 3) (pow.f64 (+.f64 y -1) 3))) (+.f64 (log1p.f64 (neg.f64 (/.f64 y (+.f64 y -1)))) (*.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 (pow.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) 2) (pow.f64 (+.f64 y -1) 2)))))))","(+.f64 (/.f64 (/.f64 x (+.f64 -1 y)) (-.f64 1 (/.f64 y (+.f64 -1 y)))) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 3) (pow.f64 (+.f64 -1 y) 3))) (fma.f64 -1/2 (*.f64 (/.f64 x (pow.f64 (+.f64 -1 y) 2)) (/.f64 x (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2))) (log1p.f64 (/.f64 (neg.f64 y) (+.f64 -1 y))))))","(+.f64 (/.f64 (/.f64 x (+.f64 -1 y)) (-.f64 1 (/.f64 y (+.f64 -1 y)))) (fma.f64 1/3 (/.f64 (pow.f64 (/.f64 x (+.f64 -1 y)) 3) (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 3)) (fma.f64 -1/2 (*.f64 (/.f64 x (pow.f64 (+.f64 -1 y) 2)) (/.f64 x (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2))) (log1p.f64 (/.f64 (neg.f64 y) (+.f64 -1 y))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 (-.f64 y 1))))","(fma.f64 -1 (neg.f64 (log.f64 x)) (neg.f64 (log.f64 (+.f64 y -1))))","(-.f64 (log.f64 x) (log.f64 (+.f64 -1 y)))","(+.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 (-.f64 y 1)))))","(+.f64 (fma.f64 -1 (neg.f64 (log.f64 x)) (neg.f64 (log.f64 (+.f64 y -1)))) (/.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) (/.f64 x (+.f64 y -1))))","(+.f64 (-.f64 (log.f64 x) (log.f64 (+.f64 -1 y))) (/.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) (/.f64 x (+.f64 -1 y))))","(-.f64 (fma.f64 (/.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) x) (+.f64 -1 y) (log.f64 x)) (log.f64 (+.f64 -1 y)))","(+.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 (-.f64 y 1))))))","(+.f64 (/.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) (/.f64 x (+.f64 y -1))) (fma.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) 2) (/.f64 (*.f64 x x) (pow.f64 (+.f64 y -1) 2))) (fma.f64 -1 (neg.f64 (log.f64 x)) (neg.f64 (log.f64 (+.f64 y -1))))))","(+.f64 (/.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) (/.f64 x (+.f64 -1 y))) (-.f64 (fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2) (/.f64 x (/.f64 (pow.f64 (+.f64 -1 y) 2) x))) (log.f64 x)) (log.f64 (+.f64 -1 y))))","(+.f64 (*.f64 (/.f64 (+.f64 -1 y) x) (-.f64 1 (/.f64 y (+.f64 -1 y)))) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2) x) (/.f64 (pow.f64 (+.f64 -1 y) 2) x)) (-.f64 (log.f64 x) (log.f64 (+.f64 -1 y)))))","(+.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 3) (pow.f64 (-.f64 y 1) 3)) (pow.f64 x 3))) (log.f64 (/.f64 1 (-.f64 y 1)))))))","(+.f64 (/.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) (/.f64 x (+.f64 y -1))) (fma.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) 2) (/.f64 (*.f64 x x) (pow.f64 (+.f64 y -1) 2))) (fma.f64 -1 (neg.f64 (log.f64 x)) (fma.f64 1/3 (/.f64 (pow.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) 3) (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 y -1) 3))) (neg.f64 (log.f64 (+.f64 y -1)))))))","(+.f64 (/.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) (/.f64 x (+.f64 -1 y))) (+.f64 (-.f64 (*.f64 1/3 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 3) (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 -1 y) 3)))) (log.f64 (+.f64 -1 y))) (fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2) (/.f64 x (/.f64 (pow.f64 (+.f64 -1 y) 2) x))) (log.f64 x))))","(+.f64 (*.f64 (/.f64 (+.f64 -1 y) x) (-.f64 1 (/.f64 y (+.f64 -1 y)))) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2) x) (/.f64 (pow.f64 (+.f64 -1 y) 2) x)) (+.f64 (-.f64 (log.f64 x) (log.f64 (+.f64 -1 y))) (/.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 3) 1/3) (pow.f64 (/.f64 x (+.f64 -1 y)) 3)))))","(+.f64 (log.f64 (neg.f64 (/.f64 1 (-.f64 y 1)))) (*.f64 -1 (log.f64 (/.f64 -1 x))))","(fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (/.f64 -1 (+.f64 y -1))))","(-.f64 (log.f64 (/.f64 -1 (+.f64 -1 y))) (log.f64 (/.f64 -1 x)))","(+.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (neg.f64 (/.f64 1 (-.f64 y 1))))))","(+.f64 (/.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) (/.f64 x (+.f64 y -1))) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (/.f64 -1 (+.f64 y -1)))))","(+.f64 (/.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) (/.f64 x (+.f64 -1 y))) (-.f64 (log.f64 (/.f64 -1 (+.f64 -1 y))) (log.f64 (/.f64 -1 x))))","(+.f64 (*.f64 (/.f64 (+.f64 -1 y) x) (-.f64 1 (/.f64 y (+.f64 -1 y)))) (-.f64 (log.f64 (/.f64 -1 (+.f64 -1 y))) (log.f64 (/.f64 -1 x))))","(+.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (neg.f64 (/.f64 1 (-.f64 y 1)))))))","(+.f64 (/.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) (/.f64 x (+.f64 y -1))) (fma.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) 2) (/.f64 (*.f64 x x) (pow.f64 (+.f64 y -1) 2))) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (/.f64 -1 (+.f64 y -1))))))","(+.f64 (/.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) (/.f64 x (+.f64 -1 y))) (fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2) (/.f64 x (/.f64 (pow.f64 (+.f64 -1 y) 2) x))) (-.f64 (log.f64 (/.f64 -1 (+.f64 -1 y))) (log.f64 (/.f64 -1 x)))))","(+.f64 (*.f64 (/.f64 (+.f64 -1 y) x) (-.f64 1 (/.f64 y (+.f64 -1 y)))) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2) x) (/.f64 (pow.f64 (+.f64 -1 y) 2) x)) (-.f64 (log.f64 (/.f64 -1 (+.f64 -1 y))) (log.f64 (/.f64 -1 x)))))","(+.f64 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)) (pow.f64 x 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 (neg.f64 (/.f64 1 (-.f64 y 1)))) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 3) (pow.f64 (-.f64 y 1) 3)) (pow.f64 x 3)))))))","(+.f64 (/.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) (/.f64 x (+.f64 y -1))) (fma.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) 2) (/.f64 (*.f64 x x) (pow.f64 (+.f64 y -1) 2))) (+.f64 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (/.f64 -1 (+.f64 y -1)))) (*.f64 1/3 (/.f64 (pow.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) 3) (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 y -1) 3)))))))","(+.f64 (/.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) (/.f64 x (+.f64 -1 y))) (fma.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2) (/.f64 x (/.f64 (pow.f64 (+.f64 -1 y) 2) x))) (-.f64 (fma.f64 1/3 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 3) (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 -1 y) 3))) (log.f64 (/.f64 -1 (+.f64 -1 y)))) (log.f64 (/.f64 -1 x)))))","(+.f64 (*.f64 (/.f64 (+.f64 -1 y) x) (-.f64 1 (/.f64 y (+.f64 -1 y)))) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2) x) (/.f64 (pow.f64 (+.f64 -1 y) 2) x)) (-.f64 (fma.f64 1/3 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 3) (pow.f64 (/.f64 x (+.f64 -1 y)) 3)) (log.f64 (/.f64 -1 (+.f64 -1 y)))) (log.f64 (/.f64 -1 x)))))","(log.f64 (+.f64 1 (*.f64 -1 x)))","(log1p.f64 (neg.f64 x))","(+.f64 (*.f64 y (-.f64 (/.f64 1 (+.f64 1 (*.f64 -1 x))) (/.f64 x (+.f64 1 (*.f64 -1 x))))) (log.f64 (+.f64 1 (*.f64 -1 x))))","(fma.f64 y (/.f64 (-.f64 1 x) (-.f64 1 x)) (log1p.f64 (neg.f64 x)))","(fma.f64 1 y (log1p.f64 (neg.f64 x)))","(+.f64 y (log1p.f64 (neg.f64 x)))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (*.f64 2 (/.f64 (-.f64 1 x) (+.f64 1 (*.f64 -1 x))))) (pow.f64 y 2))) (+.f64 (*.f64 y (-.f64 (/.f64 1 (+.f64 1 (*.f64 -1 x))) (/.f64 x (+.f64 1 (*.f64 -1 x))))) (log.f64 (+.f64 1 (*.f64 -1 x)))))","(fma.f64 1/2 (*.f64 (fma.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 1 x) 2)) (*.f64 2 (/.f64 (-.f64 1 x) (-.f64 1 x)))) (*.f64 y y)) (fma.f64 y (/.f64 (-.f64 1 x) (-.f64 1 x)) (log1p.f64 (neg.f64 x))))","(fma.f64 1/2 (*.f64 y y) (fma.f64 1 y (log1p.f64 (neg.f64 x))))","(+.f64 (log1p.f64 (neg.f64 x)) (fma.f64 1/2 (*.f64 y y) y))","(+.f64 (*.f64 1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (*.f64 2 (/.f64 (-.f64 1 x) (+.f64 1 (*.f64 -1 x))))) (pow.f64 y 2))) (+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (+.f64 1 (*.f64 -1 x)) 3))) (+.f64 (*.f64 6 (/.f64 (-.f64 1 x) (+.f64 1 (*.f64 -1 x)))) (*.f64 -6 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))))))) (+.f64 (*.f64 y (-.f64 (/.f64 1 (+.f64 1 (*.f64 -1 x))) (/.f64 x (+.f64 1 (*.f64 -1 x))))) (log.f64 (+.f64 1 (*.f64 -1 x))))))","(fma.f64 1/2 (*.f64 (fma.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 1 x) 2)) (*.f64 2 (/.f64 (-.f64 1 x) (-.f64 1 x)))) (*.f64 y y)) (fma.f64 1/6 (*.f64 (pow.f64 y 3) (fma.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (-.f64 1 x) 3)) (fma.f64 6 (/.f64 (-.f64 1 x) (-.f64 1 x)) (*.f64 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 1 x) 2)) -6)))) (fma.f64 y (/.f64 (-.f64 1 x) (-.f64 1 x)) (log1p.f64 (neg.f64 x)))))","(+.f64 (fma.f64 1/2 (*.f64 y y) (fma.f64 1 y (log1p.f64 (neg.f64 x)))) (*.f64 1/3 (pow.f64 y 3)))","(+.f64 (+.f64 (log1p.f64 (neg.f64 x)) (fma.f64 1/2 (*.f64 y y) y)) (*.f64 1/3 (pow.f64 y 3)))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1)))","(+.f64 (neg.f64 (log.f64 y)) (log.f64 (+.f64 x -1)))","(-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y))","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1))))","(+.f64 (/.f64 1 y) (+.f64 (neg.f64 (log.f64 y)) (log.f64 (+.f64 x -1))))","(+.f64 (/.f64 1 y) (-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y)))","(+.f64 (log.f64 (+.f64 -1 x)) (-.f64 (/.f64 1 y) (log.f64 y)))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1)))))","(+.f64 (/.f64 1 y) (+.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 (+.f64 x -1))) (/.f64 1/2 (*.f64 y y))))","(+.f64 (/.f64 1 y) (+.f64 (-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y)) (/.f64 1/2 (*.f64 y y))))","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (+.f64 -1 x)) (-.f64 (/.f64 1/2 (*.f64 y y)) (log.f64 y))))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (log.f64 (-.f64 x 1)) (*.f64 1/3 (/.f64 1 (pow.f64 y 3)))))))","(+.f64 (/.f64 1 y) (+.f64 (/.f64 1/2 (*.f64 y y)) (+.f64 (neg.f64 (log.f64 y)) (+.f64 (log.f64 (+.f64 x -1)) (/.f64 1/3 (pow.f64 y 3))))))","(+.f64 (/.f64 1 y) (+.f64 (-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y)) (+.f64 (/.f64 1/3 (pow.f64 y 3)) (/.f64 1/2 (*.f64 y y)))))","(+.f64 (/.f64 1/2 (*.f64 y y)) (+.f64 (+.f64 (log.f64 (+.f64 -1 x)) (-.f64 (/.f64 1/3 (pow.f64 y 3)) (log.f64 y))) (/.f64 1 y)))","(+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (log.f64 (/.f64 -1 y)))","(+.f64 (log.f64 (neg.f64 (+.f64 x -1))) (log.f64 (/.f64 -1 y)))","(+.f64 (log1p.f64 (neg.f64 x)) (log.f64 (/.f64 -1 y)))","(+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (+.f64 (log.f64 (/.f64 -1 y)) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (-.f64 x 1))) y))))","(+.f64 (log.f64 (neg.f64 (+.f64 x -1))) (+.f64 (log.f64 (/.f64 -1 y)) (neg.f64 (/.f64 (/.f64 (-.f64 1 x) (+.f64 x -1)) y))))","(+.f64 (log1p.f64 (neg.f64 x)) (-.f64 (log.f64 (/.f64 -1 y)) (/.f64 (-.f64 1 x) (*.f64 y (+.f64 -1 x)))))","(+.f64 (log.f64 (/.f64 -1 y)) (+.f64 (/.f64 1 y) (log1p.f64 (neg.f64 x))))","(+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 x 1) 2)))) (pow.f64 y 2))) (+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (+.f64 (log.f64 (/.f64 -1 y)) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (-.f64 x 1))) y)))))","(fma.f64 1/2 (/.f64 (+.f64 2 (neg.f64 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 x -1) 2)))) (*.f64 y y)) (+.f64 (log.f64 (neg.f64 (+.f64 x -1))) (+.f64 (log.f64 (/.f64 -1 y)) (neg.f64 (/.f64 (/.f64 (-.f64 1 x) (+.f64 x -1)) y)))))","(+.f64 (-.f64 (log.f64 (/.f64 -1 y)) (/.f64 (-.f64 1 x) (*.f64 y (+.f64 -1 x)))) (fma.f64 1/2 (/.f64 (-.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 -1 x) 2))) (*.f64 y y)) (log1p.f64 (neg.f64 x))))","(+.f64 (/.f64 1/2 (*.f64 y y)) (+.f64 (log.f64 (/.f64 -1 y)) (+.f64 (/.f64 1 y) (log1p.f64 (neg.f64 x)))))","(+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 6 (/.f64 (-.f64 1 x) (-.f64 x 1))) (+.f64 (*.f64 -6 (/.f64 (-.f64 1 x) (-.f64 x 1))) (*.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (-.f64 x 1) 3))))) (pow.f64 y 3))) (+.f64 (*.f64 1/2 (/.f64 (+.f64 2 (*.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 x 1) 2)))) (pow.f64 y 2))) (+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (+.f64 (log.f64 (/.f64 -1 y)) (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (-.f64 x 1))) y))))))","(fma.f64 -1/6 (/.f64 (fma.f64 6 (/.f64 (-.f64 1 x) (+.f64 x -1)) (fma.f64 -6 (/.f64 (-.f64 1 x) (+.f64 x -1)) (*.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (+.f64 x -1) 3))))) (pow.f64 y 3)) (fma.f64 1/2 (/.f64 (+.f64 2 (neg.f64 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 x -1) 2)))) (*.f64 y y)) (+.f64 (log.f64 (neg.f64 (+.f64 x -1))) (+.f64 (log.f64 (/.f64 -1 y)) (neg.f64 (/.f64 (/.f64 (-.f64 1 x) (+.f64 x -1)) y))))))","(fma.f64 -1/6 (/.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (+.f64 -1 x) 3))) (*.f64 (/.f64 (-.f64 1 x) (+.f64 -1 x)) 0)) (pow.f64 y 3)) (+.f64 (-.f64 (log.f64 (/.f64 -1 y)) (/.f64 (-.f64 1 x) (*.f64 y (+.f64 -1 x)))) (fma.f64 1/2 (/.f64 (-.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 -1 x) 2))) (*.f64 y y)) (log1p.f64 (neg.f64 x)))))","(+.f64 (+.f64 (/.f64 1/3 (pow.f64 y 3)) (+.f64 (/.f64 1/2 (*.f64 y y)) (log1p.f64 (neg.f64 x)))) (+.f64 (/.f64 1 y) (log.f64 (/.f64 -1 y))))","(*.f64 -1 (/.f64 y (-.f64 y 1)))","(neg.f64 (/.f64 y (+.f64 y -1)))","(/.f64 (neg.f64 y) (+.f64 -1 y))","(+.f64 (/.f64 x (-.f64 y 1)) (*.f64 -1 (/.f64 y (-.f64 y 1))))","(+.f64 (neg.f64 (/.f64 y (+.f64 y -1))) (/.f64 x (+.f64 y -1)))","(-.f64 (/.f64 x (+.f64 -1 y)) (/.f64 y (+.f64 -1 y)))","(+.f64 (/.f64 x (-.f64 y 1)) (*.f64 -1 (/.f64 y (-.f64 y 1))))","(+.f64 (neg.f64 (/.f64 y (+.f64 y -1))) (/.f64 x (+.f64 y -1)))","(-.f64 (/.f64 x (+.f64 -1 y)) (/.f64 y (+.f64 -1 y)))","(+.f64 (/.f64 x (-.f64 y 1)) (*.f64 -1 (/.f64 y (-.f64 y 1))))","(+.f64 (neg.f64 (/.f64 y (+.f64 y -1))) (/.f64 x (+.f64 y -1)))","(-.f64 (/.f64 x (+.f64 -1 y)) (/.f64 y (+.f64 -1 y)))","(/.f64 x (-.f64 y 1))","(/.f64 x (+.f64 y -1))","(/.f64 x (+.f64 -1 y))","(+.f64 (/.f64 x (-.f64 y 1)) (*.f64 -1 (/.f64 y (-.f64 y 1))))","(+.f64 (neg.f64 (/.f64 y (+.f64 y -1))) (/.f64 x (+.f64 y -1)))","(-.f64 (/.f64 x (+.f64 -1 y)) (/.f64 y (+.f64 -1 y)))","(+.f64 (/.f64 x (-.f64 y 1)) (*.f64 -1 (/.f64 y (-.f64 y 1))))","(+.f64 (neg.f64 (/.f64 y (+.f64 y -1))) (/.f64 x (+.f64 y -1)))","(-.f64 (/.f64 x (+.f64 -1 y)) (/.f64 y (+.f64 -1 y)))","(+.f64 (/.f64 x (-.f64 y 1)) (*.f64 -1 (/.f64 y (-.f64 y 1))))","(+.f64 (neg.f64 (/.f64 y (+.f64 y -1))) (/.f64 x (+.f64 y -1)))","(-.f64 (/.f64 x (+.f64 -1 y)) (/.f64 y (+.f64 -1 y)))","(/.f64 x (-.f64 y 1))","(/.f64 x (+.f64 y -1))","(/.f64 x (+.f64 -1 y))","(+.f64 (/.f64 x (-.f64 y 1)) (*.f64 -1 (/.f64 y (-.f64 y 1))))","(+.f64 (neg.f64 (/.f64 y (+.f64 y -1))) (/.f64 x (+.f64 y -1)))","(-.f64 (/.f64 x (+.f64 -1 y)) (/.f64 y (+.f64 -1 y)))","(+.f64 (/.f64 x (-.f64 y 1)) (*.f64 -1 (/.f64 y (-.f64 y 1))))","(+.f64 (neg.f64 (/.f64 y (+.f64 y -1))) (/.f64 x (+.f64 y -1)))","(-.f64 (/.f64 x (+.f64 -1 y)) (/.f64 y (+.f64 -1 y)))","(+.f64 (/.f64 x (-.f64 y 1)) (*.f64 -1 (/.f64 y (-.f64 y 1))))","(+.f64 (neg.f64 (/.f64 y (+.f64 y -1))) (/.f64 x (+.f64 y -1)))","(-.f64 (/.f64 x (+.f64 -1 y)) (/.f64 y (+.f64 -1 y)))","(*.f64 -1 x)","(neg.f64 x)","(+.f64 (*.f64 y (-.f64 1 x)) (*.f64 -1 x))","(fma.f64 y (-.f64 1 x) (neg.f64 x))","(+.f64 (*.f64 y (-.f64 1 x)) (+.f64 (*.f64 (pow.f64 y 2) (-.f64 1 x)) (*.f64 -1 x)))","(fma.f64 y (-.f64 1 x) (fma.f64 (*.f64 y y) (-.f64 1 x) (neg.f64 x)))","(-.f64 (*.f64 (-.f64 1 x) (+.f64 y (*.f64 y y))) x)","(+.f64 (*.f64 y (-.f64 1 x)) (+.f64 (*.f64 (pow.f64 y 3) (-.f64 1 x)) (+.f64 (*.f64 (pow.f64 y 2) (-.f64 1 x)) (*.f64 -1 x))))","(fma.f64 y (-.f64 1 x) (fma.f64 (pow.f64 y 3) (-.f64 1 x) (fma.f64 (*.f64 y y) (-.f64 1 x) (neg.f64 x))))","(fma.f64 y (-.f64 1 x) (-.f64 (*.f64 (-.f64 1 x) (+.f64 (pow.f64 y 3) (*.f64 y y))) x))","(-.f64 (*.f64 (-.f64 1 x) (+.f64 y (+.f64 (pow.f64 y 3) (*.f64 y y)))) x)","-1","(-.f64 (/.f64 x y) (+.f64 (/.f64 1 y) 1))","(-.f64 (/.f64 x y) (+.f64 1 (/.f64 1 y)))","(-.f64 (-.f64 (/.f64 x y) 1) (/.f64 1 y))","(-.f64 (+.f64 (/.f64 x y) -1) (/.f64 1 y))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y)) (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) 1)))","(-.f64 (+.f64 (/.f64 x y) (/.f64 x (*.f64 y y))) (+.f64 (/.f64 1 y) (+.f64 1 (/.f64 1 (*.f64 y y)))))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 x y) (+.f64 1 (+.f64 (/.f64 1 y) (/.f64 1 (*.f64 y y))))))","(+.f64 (/.f64 x y) (-.f64 (/.f64 x (*.f64 y y)) (+.f64 1 (+.f64 (/.f64 1 y) (/.f64 1 (*.f64 y y))))))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y))) (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 1 (/.f64 1 (pow.f64 y 3))))))","(-.f64 (+.f64 (+.f64 (/.f64 x y) (/.f64 x (*.f64 y y))) (/.f64 x (pow.f64 y 3))) (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (+.f64 1 (/.f64 1 (pow.f64 y 3))))))","(+.f64 (+.f64 (/.f64 x y) (/.f64 x (*.f64 y y))) (-.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (+.f64 1 (/.f64 1 (pow.f64 y 3)))))))","(+.f64 (/.f64 x (pow.f64 y 3)) (-.f64 (+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 x y) (/.f64 1 y))) (+.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 1 (/.f64 1 (*.f64 y y))))))","-1","(-.f64 (/.f64 x y) (+.f64 (/.f64 1 y) 1))","(-.f64 (/.f64 x y) (+.f64 1 (/.f64 1 y)))","(-.f64 (-.f64 (/.f64 x y) 1) (/.f64 1 y))","(-.f64 (+.f64 (/.f64 x y) -1) (/.f64 1 y))","(-.f64 (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2)))) (+.f64 (/.f64 1 y) 1))","(+.f64 (/.f64 x y) (-.f64 (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y))) (+.f64 1 (/.f64 1 y))))","(+.f64 (-.f64 (-.f64 (/.f64 x y) (/.f64 (-.f64 1 x) (*.f64 y y))) (/.f64 1 y)) -1)","(+.f64 (/.f64 (+.f64 -1 x) (*.f64 y y)) (-.f64 (+.f64 (/.f64 x y) -1) (/.f64 1 y)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x y) (*.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 2))))) (+.f64 (/.f64 1 y) (+.f64 1 (/.f64 1 (pow.f64 y 3)))))","(+.f64 (/.f64 x (pow.f64 y 3)) (-.f64 (+.f64 (/.f64 x y) (neg.f64 (/.f64 (-.f64 1 x) (*.f64 y y)))) (+.f64 (/.f64 1 y) (+.f64 1 (/.f64 1 (pow.f64 y 3))))))","(+.f64 (-.f64 (/.f64 x y) (/.f64 (-.f64 1 x) (*.f64 y y))) (-.f64 (/.f64 x (pow.f64 y 3)) (+.f64 1 (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 3))))))","(+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x y) (-.f64 (/.f64 (+.f64 -1 x) (*.f64 y y)) (+.f64 1 (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 y))))))","(-.f64 1 (log.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1))))))","(-.f64 1 (log1p.f64 (neg.f64 (/.f64 y (+.f64 y -1)))))","(-.f64 1 (log1p.f64 (/.f64 (neg.f64 y) (+.f64 -1 y))))","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1))))) (log.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1))))))","(+.f64 1 (-.f64 (neg.f64 (/.f64 (/.f64 x (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1))))) (+.f64 y -1))) (log1p.f64 (neg.f64 (/.f64 y (+.f64 y -1))))))","(-.f64 (-.f64 1 (/.f64 (/.f64 x (+.f64 -1 y)) (-.f64 1 (/.f64 y (+.f64 -1 y))))) (log1p.f64 (/.f64 (neg.f64 y) (+.f64 -1 y))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 x (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)))) (*.f64 1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)))))) (log.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1))))))","(+.f64 1 (-.f64 (fma.f64 -1 (/.f64 (/.f64 x (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1))))) (+.f64 y -1)) (*.f64 (/.f64 (*.f64 x x) (*.f64 (pow.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) 2) (pow.f64 (+.f64 y -1) 2))) 1/2)) (log1p.f64 (neg.f64 (/.f64 y (+.f64 y -1))))))","(+.f64 (-.f64 1 (/.f64 (/.f64 x (+.f64 -1 y)) (-.f64 1 (/.f64 y (+.f64 -1 y))))) (-.f64 (/.f64 1/2 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2) (/.f64 x (/.f64 (pow.f64 (+.f64 -1 y) 2) x)))) (log1p.f64 (/.f64 (neg.f64 y) (+.f64 -1 y)))))","(+.f64 (-.f64 1 (/.f64 (/.f64 x (+.f64 -1 y)) (-.f64 1 (/.f64 y (+.f64 -1 y))))) (-.f64 (/.f64 (/.f64 (*.f64 (*.f64 1/2 x) x) (pow.f64 (+.f64 -1 y) 2)) (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2)) (log1p.f64 (/.f64 (neg.f64 y) (+.f64 -1 y)))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 x (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)))) (*.f64 -1/3 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 3) (pow.f64 (-.f64 y 1) 3))))))) (log.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1))))))","(-.f64 (+.f64 1 (fma.f64 -1 (/.f64 (/.f64 x (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1))))) (+.f64 y -1)) (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 (pow.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) 2) (pow.f64 (+.f64 y -1) 2))) (*.f64 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) 3) (pow.f64 (+.f64 y -1) 3))) -1/3)))) (log1p.f64 (neg.f64 (/.f64 y (+.f64 y -1)))))","(+.f64 1 (-.f64 (-.f64 (fma.f64 (*.f64 (/.f64 x (pow.f64 (+.f64 -1 y) 2)) (/.f64 x (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2))) 1/2 (/.f64 -1/3 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 3) (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 -1 y) 3))))) (/.f64 (/.f64 x (+.f64 -1 y)) (-.f64 1 (/.f64 y (+.f64 -1 y))))) (log1p.f64 (/.f64 (neg.f64 y) (+.f64 -1 y)))))","(+.f64 (-.f64 1 (/.f64 (/.f64 x (+.f64 -1 y)) (-.f64 1 (/.f64 y (+.f64 -1 y))))) (-.f64 (fma.f64 (*.f64 (/.f64 x (pow.f64 (+.f64 -1 y) 2)) (/.f64 x (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2))) 1/2 (*.f64 (/.f64 -1/3 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 3)) (pow.f64 (/.f64 x (+.f64 -1 y)) 3))) (log1p.f64 (/.f64 (neg.f64 y) (+.f64 -1 y)))))","(-.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 (-.f64 y 1)))))","(-.f64 1 (fma.f64 -1 (neg.f64 (log.f64 x)) (neg.f64 (log.f64 (+.f64 y -1)))))","(-.f64 1 (-.f64 (log.f64 x) (log.f64 (+.f64 -1 y))))","(+.f64 (-.f64 1 (log.f64 x)) (log.f64 (+.f64 -1 y)))","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 (-.f64 y 1)))))","(+.f64 1 (-.f64 (neg.f64 (/.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) (/.f64 x (+.f64 y -1)))) (fma.f64 -1 (neg.f64 (log.f64 x)) (neg.f64 (log.f64 (+.f64 y -1))))))","(-.f64 (-.f64 1 (/.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) (/.f64 x (+.f64 -1 y)))) (-.f64 (log.f64 x) (log.f64 (+.f64 -1 y))))","(+.f64 (-.f64 1 (*.f64 (/.f64 (+.f64 -1 y) x) (-.f64 1 (/.f64 y (+.f64 -1 y))))) (-.f64 (log.f64 (+.f64 -1 y)) (log.f64 x)))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)) (pow.f64 x 2))))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 (-.f64 y 1)))))","(+.f64 1 (-.f64 (fma.f64 -1 (/.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) (/.f64 x (+.f64 y -1))) (*.f64 (/.f64 (pow.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) 2) (/.f64 (*.f64 x x) (pow.f64 (+.f64 y -1) 2))) 1/2)) (fma.f64 -1 (neg.f64 (log.f64 x)) (neg.f64 (log.f64 (+.f64 y -1))))))","(+.f64 1 (-.f64 (-.f64 (*.f64 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2) (/.f64 x (/.f64 (pow.f64 (+.f64 -1 y) 2) x))) 1/2) (/.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) (/.f64 x (+.f64 -1 y)))) (-.f64 (log.f64 x) (log.f64 (+.f64 -1 y)))))","(+.f64 (-.f64 1 (*.f64 (/.f64 (+.f64 -1 y) x) (-.f64 1 (/.f64 y (+.f64 -1 y))))) (fma.f64 (*.f64 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2) x) (/.f64 (pow.f64 (+.f64 -1 y) 2) x)) 1/2 (-.f64 (log.f64 (+.f64 -1 y)) (log.f64 x))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 3) (pow.f64 (-.f64 y 1) 3)) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)) (pow.f64 x 2)))))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (/.f64 1 (-.f64 y 1)))))","(-.f64 (+.f64 1 (fma.f64 -1/3 (/.f64 (pow.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) 3) (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 y -1) 3))) (fma.f64 -1 (/.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) (/.f64 x (+.f64 y -1))) (*.f64 (/.f64 (pow.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) 2) (/.f64 (*.f64 x x) (pow.f64 (+.f64 y -1) 2))) 1/2)))) (fma.f64 -1 (neg.f64 (log.f64 x)) (neg.f64 (log.f64 (+.f64 y -1)))))","(+.f64 (fma.f64 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 3) (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 -1 y) 3))) -1/3 (-.f64 (*.f64 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2) (/.f64 x (/.f64 (pow.f64 (+.f64 -1 y) 2) x))) 1/2) (/.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) (/.f64 x (+.f64 -1 y))))) (-.f64 1 (-.f64 (log.f64 x) (log.f64 (+.f64 -1 y)))))","(+.f64 (fma.f64 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 3) (pow.f64 (/.f64 x (+.f64 -1 y)) 3)) -1/3 (fma.f64 (*.f64 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2) x) (/.f64 (pow.f64 (+.f64 -1 y) 2) x)) 1/2 (*.f64 (/.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) x) (fma.f64 -1 y 1)))) (+.f64 (-.f64 1 (log.f64 x)) (log.f64 (+.f64 -1 y))))","(-.f64 1 (+.f64 (log.f64 (neg.f64 (/.f64 1 (-.f64 y 1)))) (*.f64 -1 (log.f64 (/.f64 -1 x)))))","(-.f64 1 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (/.f64 -1 (+.f64 y -1)))))","(-.f64 1 (-.f64 (log.f64 (/.f64 -1 (+.f64 -1 y))) (log.f64 (/.f64 -1 x))))","(+.f64 1 (-.f64 (log.f64 (/.f64 -1 x)) (log.f64 (/.f64 -1 (+.f64 -1 y)))))","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (neg.f64 (/.f64 1 (-.f64 y 1))))))","(+.f64 1 (-.f64 (neg.f64 (/.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) (/.f64 x (+.f64 y -1)))) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (/.f64 -1 (+.f64 y -1))))))","(-.f64 (-.f64 1 (/.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) (/.f64 x (+.f64 -1 y)))) (-.f64 (log.f64 (/.f64 -1 (+.f64 -1 y))) (log.f64 (/.f64 -1 x))))","(+.f64 (-.f64 1 (*.f64 (/.f64 (+.f64 -1 y) x) (-.f64 1 (/.f64 y (+.f64 -1 y))))) (-.f64 (log.f64 (/.f64 -1 x)) (log.f64 (/.f64 -1 (+.f64 -1 y)))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)) (pow.f64 x 2))))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (neg.f64 (/.f64 1 (-.f64 y 1))))))","(+.f64 1 (-.f64 (fma.f64 -1 (/.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) (/.f64 x (+.f64 y -1))) (*.f64 (/.f64 (pow.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) 2) (/.f64 (*.f64 x x) (pow.f64 (+.f64 y -1) 2))) 1/2)) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (/.f64 -1 (+.f64 y -1))))))","(+.f64 1 (-.f64 (-.f64 (*.f64 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2) (/.f64 x (/.f64 (pow.f64 (+.f64 -1 y) 2) x))) 1/2) (/.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) (/.f64 x (+.f64 -1 y)))) (-.f64 (log.f64 (/.f64 -1 (+.f64 -1 y))) (log.f64 (/.f64 -1 x)))))","(+.f64 (-.f64 1 (*.f64 (/.f64 (+.f64 -1 y) x) (-.f64 1 (/.f64 y (+.f64 -1 y))))) (fma.f64 (*.f64 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2) x) (/.f64 (pow.f64 (+.f64 -1 y) 2) x)) 1/2 (-.f64 (log.f64 (/.f64 -1 x)) (log.f64 (/.f64 -1 (+.f64 -1 y))))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 3) (pow.f64 (-.f64 y 1) 3)) (pow.f64 x 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) (-.f64 y 1)) x)) (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (*.f64 -1 (/.f64 y (-.f64 y 1)))) 2) (pow.f64 (-.f64 y 1) 2)) (pow.f64 x 2)))))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (neg.f64 (/.f64 1 (-.f64 y 1))))))","(+.f64 1 (-.f64 (fma.f64 -1/3 (/.f64 (pow.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) 3) (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 y -1) 3))) (fma.f64 -1 (/.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) (/.f64 x (+.f64 y -1))) (*.f64 (/.f64 (pow.f64 (+.f64 1 (neg.f64 (/.f64 y (+.f64 y -1)))) 2) (/.f64 (*.f64 x x) (pow.f64 (+.f64 y -1) 2))) 1/2))) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (/.f64 -1 (+.f64 y -1))))))","(+.f64 1 (-.f64 (fma.f64 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 3) (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 -1 y) 3))) -1/3 (-.f64 (*.f64 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2) (/.f64 x (/.f64 (pow.f64 (+.f64 -1 y) 2) x))) 1/2) (/.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) (/.f64 x (+.f64 -1 y))))) (-.f64 (log.f64 (/.f64 -1 (+.f64 -1 y))) (log.f64 (/.f64 -1 x)))))","(+.f64 1 (+.f64 (fma.f64 (*.f64 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 2) x) (/.f64 (pow.f64 (+.f64 -1 y) 2) x)) 1/2 (*.f64 (/.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) x) (fma.f64 -1 y 1))) (fma.f64 (/.f64 (pow.f64 (-.f64 1 (/.f64 y (+.f64 -1 y))) 3) (pow.f64 (/.f64 x (+.f64 -1 y)) 3)) -1/3 (-.f64 (log.f64 (/.f64 -1 x)) (log.f64 (/.f64 -1 (+.f64 -1 y)))))))","(-.f64 1 (log.f64 (+.f64 1 (*.f64 -1 x))))","(-.f64 1 (log1p.f64 (neg.f64 x)))","(-.f64 (+.f64 1 (*.f64 y (-.f64 (/.f64 x (+.f64 1 (*.f64 -1 x))) (/.f64 1 (+.f64 1 (*.f64 -1 x)))))) (log.f64 (+.f64 1 (*.f64 -1 x))))","(+.f64 1 (-.f64 (*.f64 y (-.f64 (/.f64 x (-.f64 1 x)) (/.f64 1 (-.f64 1 x)))) (log1p.f64 (neg.f64 x))))","(-.f64 (fma.f64 y (+.f64 (/.f64 x (-.f64 1 x)) (/.f64 -1 (-.f64 1 x))) 1) (log1p.f64 (neg.f64 x)))","(-.f64 (fma.f64 -1 y 1) (log1p.f64 (neg.f64 x)))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (*.f64 2 (/.f64 (-.f64 1 x) (+.f64 1 (*.f64 -1 x))))) (pow.f64 y 2))) (+.f64 1 (*.f64 y (-.f64 (/.f64 x (+.f64 1 (*.f64 -1 x))) (/.f64 1 (+.f64 1 (*.f64 -1 x))))))) (log.f64 (+.f64 1 (*.f64 -1 x))))","(-.f64 (fma.f64 -1/2 (*.f64 (fma.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 1 x) 2)) (*.f64 2 (/.f64 (-.f64 1 x) (-.f64 1 x)))) (*.f64 y y)) (+.f64 1 (*.f64 y (-.f64 (/.f64 x (-.f64 1 x)) (/.f64 1 (-.f64 1 x)))))) (log1p.f64 (neg.f64 x)))","(-.f64 (fma.f64 -1/2 (*.f64 y y) (fma.f64 y (+.f64 (/.f64 x (-.f64 1 x)) (/.f64 -1 (-.f64 1 x))) 1)) (log1p.f64 (neg.f64 x)))","(-.f64 (fma.f64 -1/2 (*.f64 y y) (fma.f64 -1 y 1)) (log1p.f64 (neg.f64 x)))","(-.f64 (+.f64 (*.f64 -1/2 (*.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (*.f64 2 (/.f64 (-.f64 1 x) (+.f64 1 (*.f64 -1 x))))) (pow.f64 y 2))) (+.f64 1 (+.f64 (*.f64 y (-.f64 (/.f64 x (+.f64 1 (*.f64 -1 x))) (/.f64 1 (+.f64 1 (*.f64 -1 x))))) (*.f64 -1/6 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (+.f64 1 (*.f64 -1 x)) 3))) (+.f64 (*.f64 6 (/.f64 (-.f64 1 x) (+.f64 1 (*.f64 -1 x)))) (*.f64 -6 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2)))))))))) (log.f64 (+.f64 1 (*.f64 -1 x))))","(-.f64 (fma.f64 -1/2 (*.f64 (fma.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 1 x) 2)) (*.f64 2 (/.f64 (-.f64 1 x) (-.f64 1 x)))) (*.f64 y y)) (+.f64 1 (fma.f64 y (-.f64 (/.f64 x (-.f64 1 x)) (/.f64 1 (-.f64 1 x))) (*.f64 (*.f64 -1/6 (pow.f64 y 3)) (fma.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (-.f64 1 x) 3)) (fma.f64 6 (/.f64 (-.f64 1 x) (-.f64 1 x)) (*.f64 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 1 x) 2)) -6))))))) (log1p.f64 (neg.f64 x)))","(+.f64 (fma.f64 -1/2 (*.f64 y y) 1) (-.f64 (fma.f64 y (+.f64 (/.f64 x (-.f64 1 x)) (/.f64 -1 (-.f64 1 x))) (*.f64 (pow.f64 y 3) -1/3)) (log1p.f64 (neg.f64 x))))","(+.f64 (fma.f64 -1/2 (*.f64 y y) 1) (-.f64 (fma.f64 -1 y (*.f64 (pow.f64 y 3) -1/3)) (log1p.f64 (neg.f64 x))))","(-.f64 1 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1))))","(-.f64 1 (+.f64 (neg.f64 (log.f64 y)) (log.f64 (+.f64 x -1))))","(-.f64 1 (-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y)))","(+.f64 1 (-.f64 (log.f64 y) (log.f64 (+.f64 -1 x))))","(-.f64 1 (+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1)))))","(-.f64 1 (+.f64 (/.f64 1 y) (+.f64 (neg.f64 (log.f64 y)) (log.f64 (+.f64 x -1)))))","(-.f64 1 (+.f64 (/.f64 1 y) (-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y))))","(+.f64 (+.f64 1 (/.f64 -1 y)) (-.f64 (log.f64 y) (log.f64 (+.f64 -1 x))))","(-.f64 1 (+.f64 (/.f64 1 y) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1))))))","(-.f64 1 (+.f64 (/.f64 1 y) (+.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 (+.f64 x -1))) (/.f64 1/2 (*.f64 y y)))))","(-.f64 1 (+.f64 (/.f64 1 y) (+.f64 (-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y)) (/.f64 1/2 (*.f64 y y)))))","(-.f64 (+.f64 1 (/.f64 -1 y)) (+.f64 (log.f64 (+.f64 -1 x)) (-.f64 (/.f64 1/2 (*.f64 y y)) (log.f64 y))))","(-.f64 1 (+.f64 (/.f64 1 y) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (log.f64 (-.f64 x 1)) (*.f64 1/3 (/.f64 1 (pow.f64 y 3))))))))","(-.f64 (-.f64 1 (/.f64 1 y)) (+.f64 (/.f64 1/2 (*.f64 y y)) (+.f64 (neg.f64 (log.f64 y)) (+.f64 (log.f64 (+.f64 x -1)) (/.f64 1/3 (pow.f64 y 3))))))","(-.f64 1 (+.f64 (/.f64 1 y) (+.f64 (-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y)) (+.f64 (/.f64 1/3 (pow.f64 y 3)) (/.f64 1/2 (*.f64 y y))))))","(-.f64 1 (+.f64 (/.f64 1/2 (*.f64 y y)) (+.f64 (+.f64 (log.f64 (+.f64 -1 x)) (-.f64 (/.f64 1/3 (pow.f64 y 3)) (log.f64 y))) (/.f64 1 y))))","(-.f64 1 (+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (log.f64 (/.f64 -1 y))))","(-.f64 (-.f64 1 (log.f64 (neg.f64 (+.f64 x -1)))) (log.f64 (/.f64 -1 y)))","(-.f64 (-.f64 1 (log1p.f64 (neg.f64 x))) (log.f64 (/.f64 -1 y)))","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 (-.f64 (/.f64 x (-.f64 x 1)) (/.f64 1 (-.f64 x 1))) y))) (+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (log.f64 (/.f64 -1 y))))","(-.f64 (+.f64 1 (neg.f64 (/.f64 (-.f64 (/.f64 x (+.f64 x -1)) (/.f64 1 (+.f64 x -1))) y))) (+.f64 (log.f64 (neg.f64 (+.f64 x -1))) (log.f64 (/.f64 -1 y))))","(-.f64 (-.f64 1 (/.f64 (+.f64 (/.f64 x (+.f64 -1 x)) (/.f64 -1 (+.f64 -1 x))) y)) (+.f64 (log1p.f64 (neg.f64 x)) (log.f64 (/.f64 -1 y))))","(+.f64 (/.f64 -1 y) (-.f64 (-.f64 1 (log1p.f64 (neg.f64 x))) (log.f64 (/.f64 -1 y))))","(-.f64 (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 x (-.f64 x 1)) (/.f64 1 (-.f64 x 1))) y)) (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 x 1) 2)))) (pow.f64 y 2))))) (+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (log.f64 (/.f64 -1 y))))","(+.f64 1 (-.f64 (fma.f64 -1 (/.f64 (-.f64 (/.f64 x (+.f64 x -1)) (/.f64 1 (+.f64 x -1))) y) (*.f64 -1/2 (/.f64 (+.f64 2 (neg.f64 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 x -1) 2)))) (*.f64 y y)))) (+.f64 (log.f64 (neg.f64 (+.f64 x -1))) (log.f64 (/.f64 -1 y)))))","(+.f64 1 (-.f64 (-.f64 (*.f64 (/.f64 -1/2 y) (/.f64 (-.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 -1 x) 2))) y)) (/.f64 (+.f64 (/.f64 x (+.f64 -1 x)) (/.f64 -1 (+.f64 -1 x))) y)) (+.f64 (log1p.f64 (neg.f64 x)) (log.f64 (/.f64 -1 y)))))","(+.f64 1 (-.f64 (+.f64 (/.f64 -1/2 (*.f64 y y)) (/.f64 -1 y)) (+.f64 (log1p.f64 (neg.f64 x)) (log.f64 (/.f64 -1 y)))))","(-.f64 (+.f64 1 (+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 6 (/.f64 (-.f64 1 x) (-.f64 x 1))) (+.f64 (*.f64 -6 (/.f64 (-.f64 1 x) (-.f64 x 1))) (*.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (-.f64 x 1) 3))))) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 x (-.f64 x 1)) (/.f64 1 (-.f64 x 1))) y)) (*.f64 -1/2 (/.f64 (+.f64 2 (*.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 x 1) 2)))) (pow.f64 y 2)))))) (+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (log.f64 (/.f64 -1 y))))","(+.f64 1 (-.f64 (fma.f64 1/6 (/.f64 (fma.f64 6 (/.f64 (-.f64 1 x) (+.f64 x -1)) (fma.f64 -6 (/.f64 (-.f64 1 x) (+.f64 x -1)) (*.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (+.f64 x -1) 3))))) (pow.f64 y 3)) (fma.f64 -1 (/.f64 (-.f64 (/.f64 x (+.f64 x -1)) (/.f64 1 (+.f64 x -1))) y) (*.f64 -1/2 (/.f64 (+.f64 2 (neg.f64 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 x -1) 2)))) (*.f64 y y))))) (+.f64 (log.f64 (neg.f64 (+.f64 x -1))) (log.f64 (/.f64 -1 y)))))","(+.f64 (fma.f64 1/6 (/.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (+.f64 -1 x) 3))) (*.f64 (/.f64 (-.f64 1 x) (+.f64 -1 x)) 0)) (pow.f64 y 3)) (-.f64 (*.f64 (/.f64 -1/2 y) (/.f64 (-.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (+.f64 -1 x) 2))) y)) (/.f64 (+.f64 (/.f64 x (+.f64 -1 x)) (/.f64 -1 (+.f64 -1 x))) y))) (-.f64 (-.f64 1 (log1p.f64 (neg.f64 x))) (log.f64 (/.f64 -1 y))))","(+.f64 (+.f64 (/.f64 -1/2 (*.f64 y y)) (+.f64 (/.f64 -1/3 (pow.f64 y 3)) (/.f64 -1 y))) (-.f64 (-.f64 1 (log1p.f64 (neg.f64 x))) (log.f64 (/.f64 -1 y))))"]],"stop":[["node limit",1]],"time":50.62890625,"type":"simplify"},{"compiler":[[6217,4552]],"time":74.025146484375,"type":"eval"},{"alts":[["(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))","next",16.635185414317228],["(+.f64 (/.f64 -1 y) (-.f64 (-.f64 1 (log1p.f64 (neg.f64 x))) (log.f64 (/.f64 -1 y))))","fresh",46.35880939463416],["(-.f64 1 (+.f64 (log.f64 (+.f64 -1 x)) (-.f64 (/.f64 1 y) (log.f64 y))))","fresh",57.36120755085871],["(-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))","done",16.623466664317228],["(-.f64 1 (+.f64 (log.f64 (sqrt.f64 (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1))) (log.f64 (sqrt.f64 (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1)))))","fresh",16.651474183854113]],"compiler":[[14,11],[16,13],[15,12],[12,9],[27,20],[14,11],[16,13],[15,12],[27,20]],"count":[[262,5]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[260,3],"picked":[1,1]}],"min-error":[0.08543111218587268],"time":74.724853515625,"type":"prune"},{"compiler":[[49,28]],"locations":[["(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))",0.00390625,true],["(/.f64 (-.f64 x y) (-.f64 1 y))",0.03125,true],["(-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))",3.3405679942076323,true],["(log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))",4.451785024028147,true]],"time":10.836181640625,"type":"localize"},{"count":[[4,96]],"series":[["(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))","y","-inf",0.4599609375],["(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))","y","inf",0.487060546875],["(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))","y","0",0.438232421875],["(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))","x","-inf",0.399169921875],["(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))","x","inf",0.407958984375],["(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))","x","0",0.375],["(/.f64 (-.f64 x y) (-.f64 1 y))","y","-inf",0.22998046875],["(/.f64 (-.f64 x y) (-.f64 1 y))","y","inf",0.2900390625],["(/.f64 (-.f64 x y) (-.f64 1 y))","y","0",0.2470703125],["(/.f64 (-.f64 x y) (-.f64 1 y))","x","-inf",0.160888671875],["(/.f64 (-.f64 x y) (-.f64 1 y))","x","inf",0.296875],["(/.f64 (-.f64 x y) (-.f64 1 y))","x","0",0.31494140625],["(-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))","y","-inf",0.660888671875],["(-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))","y","inf",0.302001953125],["(-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))","y","0",0.217041015625],["(-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))","x","-inf",0.359130859375],["(-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))","x","inf",0.333984375],["(-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))","x","0",0.38720703125],["(log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))","y","-inf",0.6708984375],["(log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))","y","inf",0.77001953125],["(log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))","y","0",0.6650390625],["(log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))","x","-inf",1.156982421875],["(log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))","x","inf",0.589111328125],["(log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))","x","0",0.744873046875]],"time":11.419921875,"type":"series"},{"count":[[4,209]],"egraph":[[2,3600,54,0.028524624],[1,235,54,0.004496166],[0,10,56,0.000273083]],"inputs":[["(log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))","(-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))","(/.f64 (-.f64 x y) (-.f64 1 y))","(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (neg.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2))) (log.f64 (/.f64 1 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (neg.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3))) (log.f64 (/.f64 1 (fma.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) (*.f64 2 (*.f64 1/3 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (*.f64 1/3 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (*.f64 1/3 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (log.f64 (/.f64 (fma.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1) (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (log.f64 (/.f64 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log1p.f64 (neg.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2))) (log1p.f64 (/.f64 (-.f64 x y) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log1p.f64 (neg.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3))) (log1p.f64 (+.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (neg.f64 (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3)))) (log.f64 (neg.f64 (fma.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (neg.f64 (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2)))) (log.f64 (neg.f64 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 1 (pow.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 3))) (log.f64 (+.f64 1 (-.f64 (pow.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 2) (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (-.f64 1 (pow.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 2))) (log.f64 (-.f64 1 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2) (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 1/3 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (*.f64 3 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (log.f64 (/.f64 (fma.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1) (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (log.f64 (/.f64 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (*.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) 2) (cbrt.f64 (+.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 1 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (hypot.f64 1 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) -1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (/.f64 x (-.f64 1 y))) (/.f64 y (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) (pow.f64 (cbrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2) (cbrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3)) (/.f64 1 (fma.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2)) (/.f64 1 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (E.f64) (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (pow.f64 (E.f64) (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (E.f64) (*.f64 2 (*.f64 1/3 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))) (pow.f64 (E.f64) (*.f64 1/3 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1) (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3)) (fma.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3))) (neg.f64 (fma.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2))) (neg.f64 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 3)) (+.f64 1 (-.f64 (pow.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 2) (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 2)) (-.f64 1 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (E.f64) (+.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (E.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (E.f64) (log1p.f64 (neg.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2)))) (pow.f64 (E.f64) (log1p.f64 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (E.f64) (log1p.f64 (neg.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3)))) (pow.f64 (E.f64) (log1p.f64 (+.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2)) (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1) (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (E.f64) (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (E.f64) (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2)) (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (E.f64) (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) 1) (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (cbrt.f64 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (sqrt.f64 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))) (sqrt.f64 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (sqrt.f64 (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2))) (sqrt.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2)) 1) (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2)) (pow.f64 (cbrt.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) 2)) (cbrt.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2)) (cbrt.f64 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))) (cbrt.f64 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2)) (cbrt.f64 (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2))) (cbrt.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2)) (sqrt.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))) (sqrt.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x y) (neg.f64 (/.f64 1 (-.f64 1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))) 2) (neg.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))) (neg.f64 (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (-.f64 x y)) (/.f64 1 (-.f64 1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 2) (cbrt.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) (sqrt.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (-.f64 x y) (-.f64 1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y)))) (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))) 1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 x y) (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 x (-.f64 1 y)) (neg.f64 (/.f64 y (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 1 y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 x (-.f64 1 y)) (/.f64 y (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 x y) (/.f64 1 (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (*.f64 (cbrt.f64 (-.f64 x y)) (/.f64 1 (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))) (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))) 2) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 x y)) (*.f64 (sqrt.f64 (-.f64 x y)) (/.f64 1 (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))) (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 x y)) (/.f64 1 (neg.f64 (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 1 y)) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 1 y)) -2) (/.f64 (-.f64 x y) (cbrt.f64 (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 y) -1/2) (/.f64 (-.f64 x y) (sqrt.f64 (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) 1) (/.f64 (cbrt.f64 (-.f64 x y)) (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 x y)) 1) (/.f64 (sqrt.f64 (-.f64 x y)) (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 1 y)) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 x y)) (pow.f64 (cbrt.f64 (-.f64 1 y)) 2)) (/.f64 (sqrt.f64 (-.f64 x y)) (cbrt.f64 (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) 2) (sqrt.f64 (-.f64 1 y))) (/.f64 (cbrt.f64 (-.f64 x y)) (sqrt.f64 (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 1 (pow.f64 y 3))) (fma.f64 y (+.f64 1 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 x y) (-.f64 1 (*.f64 y y))) (+.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 y) (-.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 1 y) (-.f64 x y)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 x y) (neg.f64 (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 x y) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 x y) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 x y) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 x y) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 x y) (-.f64 1 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (-.f64 1 y)) (neg.f64 (/.f64 y (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (-.f64 1 y)) (neg.f64 (/.f64 y (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2) (cbrt.f64 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (-.f64 1 y))) 2) (cbrt.f64 (/.f64 x (-.f64 1 y))) (neg.f64 (/.f64 y (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) (sqrt.f64 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x (-.f64 1 y))) (sqrt.f64 (/.f64 x (-.f64 1 y))) (neg.f64 (/.f64 y (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (-.f64 1 y)) (neg.f64 (/.f64 y (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 1 y)) (neg.f64 (/.f64 y (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 1 y)) -2) (/.f64 x (cbrt.f64 (-.f64 1 y))) (neg.f64 (/.f64 y (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (-.f64 1 y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (-.f64 1 y))) (neg.f64 (/.f64 y (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (-.f64 1 y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 1 y))) (neg.f64 (/.f64 y (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 1 y) -1/2) (/.f64 x (sqrt.f64 (-.f64 1 y))) (neg.f64 (/.f64 y (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (-.f64 1 y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 1 y))) (neg.f64 (/.f64 y (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 1 y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (-.f64 1 y))) (neg.f64 (/.f64 y (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 1 (pow.f64 y 3))) (fma.f64 y (+.f64 1 y) 1) (neg.f64 (/.f64 y (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 1 (*.f64 y y))) (+.f64 1 y) (neg.f64 (/.f64 y (-.f64 1 y))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (neg.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (neg.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (/.f64 (E.f64) (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))) 2)) (log.f64 (cbrt.f64 (/.f64 (E.f64) (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (/.f64 (E.f64) (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))) (log.f64 (sqrt.f64 (/.f64 (E.f64) (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (pow.f64 (cbrt.f64 (-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) 2) (cbrt.f64 (-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (sqrt.f64 (-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 3)) (/.f64 1 (fma.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) (+.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 2)) (/.f64 1 (+.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) (+.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 1) (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 3)) (fma.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) (+.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 2)) (+.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 3))) (neg.f64 (fma.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) (+.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 2))) (neg.f64 (+.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (neg.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 3)) (+.f64 1 (-.f64 (pow.f64 (neg.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2) (neg.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (neg.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2)) (-.f64 1 (neg.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) (+.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 1) (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) (-.f64 1 (pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (E.f64) (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (neg.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (neg.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2) (neg.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) (neg.f64 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (neg.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) 2) (cbrt.f64 (neg.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (sqrt.f64 (neg.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2)) (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 1)))))"]],"rules":[["egg-rr",44],["egg-rr",58],["egg-rr",66],["egg-rr",41]],"stop":[["node limit",1]],"time":64.425048828125,"type":"rewrite"},{"count":[[305,350]],"egraph":[[2,5102,2647,0.022071875],[1,1186,3022,0.008360792],[0,336,3935,0.0015885]],"inputs":[["(log.f64 (+.f64 1 (/.f64 y (-.f64 1 y))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))) (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)))) (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y))))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 3)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)))) (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))))))","(+.f64 (log.f64 (neg.f64 (/.f64 1 (-.f64 1 y)))) (*.f64 -1 (log.f64 (/.f64 1 x))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)) x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (neg.f64 (/.f64 1 (-.f64 1 y))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)) x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 (neg.f64 (/.f64 1 (-.f64 1 y)))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)) (pow.f64 x 2))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)) x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 (neg.f64 (/.f64 1 (-.f64 1 y)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 3)) (pow.f64 x 3)))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 1 (-.f64 1 y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 (/.f64 1 (-.f64 1 y))) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) (-.f64 1 y)) x))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 (/.f64 1 (-.f64 1 y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) (-.f64 1 y)) x)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) 2) (pow.f64 (-.f64 1 y) 2)) (pow.f64 x 2))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) 3) (pow.f64 (-.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (log.f64 (/.f64 1 (-.f64 1 y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) (-.f64 1 y)) x)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) 2) (pow.f64 (-.f64 1 y) 2)) (pow.f64 x 2)))))))","(log.f64 (-.f64 1 x))","(+.f64 (log.f64 (-.f64 1 x)) (*.f64 y (+.f64 (*.f64 -1 (/.f64 x (-.f64 1 x))) (/.f64 1 (-.f64 1 x)))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2))) (*.f64 2 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x)))))) (+.f64 (log.f64 (-.f64 1 x)) (*.f64 y (+.f64 (*.f64 -1 (/.f64 x (-.f64 1 x))) (/.f64 1 (-.f64 1 x))))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2))) (*.f64 2 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x)))))) (+.f64 (log.f64 (-.f64 1 x)) (+.f64 (*.f64 y (+.f64 (*.f64 -1 (/.f64 x (-.f64 1 x))) (/.f64 1 (-.f64 1 x)))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 3) (pow.f64 (-.f64 1 x) 3))) (+.f64 (*.f64 6 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x))) (*.f64 -6 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2))))) (pow.f64 y 3))))))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 (neg.f64 (+.f64 1 (*.f64 -1 x)))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 x 1) (*.f64 y (+.f64 1 (*.f64 -1 x))))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (neg.f64 (+.f64 1 (*.f64 -1 x))))))","(+.f64 (*.f64 -1 (/.f64 (-.f64 x 1) (*.f64 y (+.f64 1 (*.f64 -1 x))))) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (log.f64 (neg.f64 (+.f64 1 (*.f64 -1 x)))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (*.f64 -2 (/.f64 (-.f64 x 1) (+.f64 1 (*.f64 -1 x))))) (pow.f64 y 2))))))","(+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -6 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (+.f64 (*.f64 -6 (/.f64 (-.f64 x 1) (+.f64 1 (*.f64 -1 x)))) (*.f64 -2 (/.f64 (pow.f64 (-.f64 x 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 x)) 3))))) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x 1) (*.f64 y (+.f64 1 (*.f64 -1 x))))) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (log.f64 (neg.f64 (+.f64 1 (*.f64 -1 x)))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (*.f64 -2 (/.f64 (-.f64 x 1) (+.f64 1 (*.f64 -1 x))))) (pow.f64 y 2)))))))","(+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (-.f64 1 x)))","(+.f64 (log.f64 (/.f64 -1 y)) (+.f64 (log.f64 (-.f64 1 x)) (*.f64 -1 (/.f64 (-.f64 (/.f64 x (-.f64 1 x)) (/.f64 1 (-.f64 1 x))) y))))","(+.f64 (log.f64 (/.f64 -1 y)) (+.f64 (log.f64 (-.f64 1 x)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 x (-.f64 1 x)) (/.f64 1 (-.f64 1 x))) y)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x))) (*.f64 -1 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 y 2))))))","(+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 6 (/.f64 (-.f64 x 1) (-.f64 1 x))) (+.f64 (*.f64 2 (/.f64 (pow.f64 (-.f64 x 1) 3) (pow.f64 (-.f64 1 x) 3))) (*.f64 -6 (/.f64 (*.f64 (-.f64 x 1) (+.f64 1 (*.f64 -1 x))) (pow.f64 (-.f64 1 x) 2))))) (pow.f64 y 3))) (+.f64 (log.f64 (/.f64 -1 y)) (+.f64 (log.f64 (-.f64 1 x)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 x (-.f64 1 x)) (/.f64 1 (-.f64 1 x))) y)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x))) (*.f64 -1 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 y 2)))))))","(+.f64 1 (/.f64 y (-.f64 1 y)))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (*.f64 -1 (/.f64 x (-.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (*.f64 -1 (/.f64 x (-.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (*.f64 -1 (/.f64 x (-.f64 1 y)))))","(*.f64 -1 (/.f64 x (-.f64 1 y)))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (*.f64 -1 (/.f64 x (-.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (*.f64 -1 (/.f64 x (-.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (*.f64 -1 (/.f64 x (-.f64 1 y)))))","(*.f64 -1 (/.f64 x (-.f64 1 y)))","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x (-.f64 1 y)))) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x (-.f64 1 y)))) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x (-.f64 1 y)))) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(-.f64 1 x)","(-.f64 (+.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 x)))) x)","(-.f64 (+.f64 (*.f64 (pow.f64 y 2) (+.f64 1 (*.f64 -1 x))) (+.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 x))))) x)","(-.f64 (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 (*.f64 -1 x))) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 1 (*.f64 -1 x))) (+.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 x)))))) x)","(*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 x)) y))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 x)) y))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 x)) y)))) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 4)) (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 x)) y))))) (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (pow.f64 y 4)))))","(*.f64 -1 (/.f64 (-.f64 1 x) y))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (-.f64 1 x) y))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 x)) (pow.f64 y 3))) (*.f64 -1 (/.f64 (-.f64 1 x) y)))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 4)) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 x)) (pow.f64 y 3))) (*.f64 -1 (/.f64 (-.f64 1 x) y))))) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 4))))","(*.f64 -1 (/.f64 y (-.f64 1 y)))","(+.f64 (/.f64 x (-.f64 1 y)) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(+.f64 (/.f64 x (-.f64 1 y)) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(+.f64 (/.f64 x (-.f64 1 y)) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(/.f64 x (-.f64 1 y))","(+.f64 (/.f64 x (-.f64 1 y)) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(+.f64 (/.f64 x (-.f64 1 y)) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(+.f64 (/.f64 x (-.f64 1 y)) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(/.f64 x (-.f64 1 y))","(+.f64 (/.f64 x (-.f64 1 y)) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(+.f64 (/.f64 x (-.f64 1 y)) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(+.f64 (/.f64 x (-.f64 1 y)) (*.f64 -1 (/.f64 y (-.f64 1 y))))","x","(+.f64 (*.f64 -1 (*.f64 y (+.f64 1 (*.f64 -1 x)))) x)","(+.f64 (*.f64 -1 (*.f64 y (+.f64 1 (*.f64 -1 x)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 1 (*.f64 -1 x)))) x))","(+.f64 (*.f64 -1 (*.f64 y (+.f64 1 (*.f64 -1 x)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 1 (*.f64 -1 x)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 1 (*.f64 -1 x)))) x)))","1","(+.f64 (/.f64 1 y) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))))))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (/.f64 x y))))))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 x 1) y)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 x 1) y)))) (/.f64 x (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 x 1) y)) (*.f64 -1 (/.f64 (-.f64 x 1) (pow.f64 y 3)))))) (/.f64 x (pow.f64 y 2)))","(-.f64 1 (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))))","(-.f64 (+.f64 1 (/.f64 x (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))) (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))))","(-.f64 (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)))) (/.f64 x (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y))))) (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))))","(-.f64 (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 3)))) (/.f64 x (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))))) (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))))","(-.f64 1 (+.f64 (log.f64 (neg.f64 (/.f64 1 (-.f64 1 y)))) (*.f64 -1 (log.f64 (/.f64 1 x)))))","(-.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)) x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (neg.f64 (/.f64 1 (-.f64 1 y))))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)) (pow.f64 x 2))) (+.f64 1 (/.f64 (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)) x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (neg.f64 (/.f64 1 (-.f64 1 y))))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)) (pow.f64 x 2))) (+.f64 1 (/.f64 (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)) x)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (neg.f64 (/.f64 1 (-.f64 1 y))))))","(-.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 1 (-.f64 1 y)))))","(-.f64 (+.f64 1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) (-.f64 1 y)) x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 1 (-.f64 1 y)))))","(-.f64 (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) 2) (pow.f64 (-.f64 1 y) 2)) (pow.f64 x 2))) (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) (-.f64 1 y)) x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 1 (-.f64 1 y)))))","(-.f64 (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) 2) (pow.f64 (-.f64 1 y) 2)) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) (-.f64 1 y)) x) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) 3) (pow.f64 (-.f64 1 y) 3)) (pow.f64 x 3)))))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 1 (-.f64 1 y)))))","(-.f64 1 (log.f64 (-.f64 1 x)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 y (+.f64 (*.f64 -1 (/.f64 x (-.f64 1 x))) (/.f64 1 (-.f64 1 x))))) 1) (log.f64 (-.f64 1 x)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 y (+.f64 (*.f64 -1 (/.f64 x (-.f64 1 x))) (/.f64 1 (-.f64 1 x))))) (+.f64 1 (*.f64 -1/2 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2))) (*.f64 2 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x)))))))) (log.f64 (-.f64 1 x)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 y (+.f64 (*.f64 -1 (/.f64 x (-.f64 1 x))) (/.f64 1 (-.f64 1 x))))) (+.f64 (*.f64 -1/6 (*.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 3) (pow.f64 (-.f64 1 x) 3))) (+.f64 (*.f64 6 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x))) (*.f64 -6 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2))))) (pow.f64 y 3))) (+.f64 1 (*.f64 -1/2 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2))) (*.f64 2 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x))))))))) (log.f64 (-.f64 1 x)))","(-.f64 1 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (neg.f64 (+.f64 1 (*.f64 -1 x))))))","(-.f64 (+.f64 1 (/.f64 x (*.f64 y (+.f64 1 (*.f64 -1 x))))) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (log.f64 (neg.f64 (+.f64 1 (*.f64 -1 x)))) (/.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 x)))))))","(-.f64 (+.f64 1 (+.f64 (/.f64 x (*.f64 y (+.f64 1 (*.f64 -1 x)))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (*.f64 -2 (/.f64 (-.f64 x 1) (+.f64 1 (*.f64 -1 x))))) (pow.f64 y 2))))) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (log.f64 (neg.f64 (+.f64 1 (*.f64 -1 x)))) (/.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 x)))))))","(-.f64 (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -6 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (+.f64 (*.f64 -6 (/.f64 (-.f64 x 1) (+.f64 1 (*.f64 -1 x)))) (*.f64 -2 (/.f64 (pow.f64 (-.f64 x 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 x)) 3))))) (pow.f64 y 3))) (+.f64 1 (+.f64 (/.f64 x (*.f64 y (+.f64 1 (*.f64 -1 x)))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (*.f64 -2 (/.f64 (-.f64 x 1) (+.f64 1 (*.f64 -1 x))))) (pow.f64 y 2)))))) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (log.f64 (neg.f64 (+.f64 1 (*.f64 -1 x)))) (/.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 x)))))))","(-.f64 1 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (-.f64 1 x))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 1 x))) y)) 1) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (-.f64 1 x))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 1 x))) y)) (+.f64 1 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x))) (*.f64 -1 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 y 2))))) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (-.f64 1 x))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 1 x))) y)) (+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x))) (*.f64 -1 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 y 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 6 (/.f64 (-.f64 x 1) (-.f64 1 x))) (+.f64 (*.f64 2 (/.f64 (pow.f64 (-.f64 x 1) 3) (pow.f64 (-.f64 1 x) 3))) (*.f64 -6 (/.f64 (*.f64 (-.f64 x 1) (+.f64 1 (*.f64 -1 x))) (pow.f64 (-.f64 1 x) 2))))) (pow.f64 y 3)))))) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (-.f64 1 x))))"]],"method":["egg-herbie"],"outputs":[["(log.f64 (+.f64 1 (/.f64 y (-.f64 1 y))))","(log1p.f64 (/.f64 y (-.f64 1 y)))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))) (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))))","(fma.f64 -1 (/.f64 x (*.f64 (-.f64 1 y) (+.f64 1 (/.f64 y (-.f64 1 y))))) (log1p.f64 (/.f64 y (-.f64 1 y))))","(-.f64 (log1p.f64 (/.f64 y (-.f64 1 y))) (/.f64 x (*.f64 (-.f64 1 y) (+.f64 1 (/.f64 y (-.f64 1 y))))))","(-.f64 (log1p.f64 (/.f64 y (-.f64 1 y))) (/.f64 (/.f64 x (-.f64 1 y)) (+.f64 1 (/.f64 y (-.f64 1 y)))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)))) (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y))))))","(fma.f64 -1 (/.f64 x (*.f64 (-.f64 1 y) (+.f64 1 (/.f64 y (-.f64 1 y))))) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2))) (log1p.f64 (/.f64 y (-.f64 1 y)))))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 x (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2)) (/.f64 x (pow.f64 (-.f64 1 y) 2))) (log1p.f64 (/.f64 y (-.f64 1 y)))) (/.f64 x (*.f64 (-.f64 1 y) (+.f64 1 (/.f64 y (-.f64 1 y))))))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 x (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2)) (/.f64 x (pow.f64 (-.f64 1 y) 2))) (log1p.f64 (/.f64 y (-.f64 1 y)))) (/.f64 (/.f64 x (-.f64 1 y)) (+.f64 1 (/.f64 y (-.f64 1 y)))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 3)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)))) (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))))))","(fma.f64 -1/3 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 3))) (fma.f64 -1 (/.f64 x (*.f64 (-.f64 1 y) (+.f64 1 (/.f64 y (-.f64 1 y))))) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2))) (log1p.f64 (/.f64 y (-.f64 1 y))))))","(fma.f64 -1/3 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 3))) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 x (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2)) (/.f64 x (pow.f64 (-.f64 1 y) 2))) (log1p.f64 (/.f64 y (-.f64 1 y)))) (/.f64 x (*.f64 (-.f64 1 y) (+.f64 1 (/.f64 y (-.f64 1 y)))))))","(fma.f64 -1/3 (/.f64 (pow.f64 (/.f64 x (-.f64 1 y)) 3) (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3)) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 x (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2)) (/.f64 x (pow.f64 (-.f64 1 y) 2))) (log1p.f64 (/.f64 y (-.f64 1 y)))) (/.f64 (/.f64 x (-.f64 1 y)) (+.f64 1 (/.f64 y (-.f64 1 y))))))","(+.f64 (log.f64 (neg.f64 (/.f64 1 (-.f64 1 y)))) (*.f64 -1 (log.f64 (/.f64 1 x))))","(fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 (/.f64 -1 (-.f64 1 y))))","(+.f64 (log.f64 (/.f64 -1 (-.f64 1 y))) (log.f64 x))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)) x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (neg.f64 (/.f64 1 (-.f64 1 y))))))","(fma.f64 -1 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (/.f64 x (-.f64 1 y))) (fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 (/.f64 -1 (-.f64 1 y)))))","(-.f64 (+.f64 (log.f64 (/.f64 -1 (-.f64 1 y))) (log.f64 x)) (*.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (-.f64 1 y)))","(+.f64 (log.f64 (/.f64 -1 (-.f64 1 y))) (-.f64 (log.f64 x) (*.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (-.f64 1 y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)) x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 (neg.f64 (/.f64 1 (-.f64 1 y)))) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)) (pow.f64 x 2))))))","(fma.f64 -1 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (/.f64 x (-.f64 1 y))) (+.f64 (fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 (/.f64 -1 (-.f64 1 y)))) (*.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (/.f64 (*.f64 x x) (pow.f64 (-.f64 1 y) 2))))))","(-.f64 (+.f64 (log.f64 x) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) x) (/.f64 (pow.f64 (-.f64 1 y) 2) x)) (log.f64 (/.f64 -1 (-.f64 1 y))))) (*.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (-.f64 1 y)))","(+.f64 (log.f64 x) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) x) (/.f64 (pow.f64 (-.f64 1 y) 2) x)) (log.f64 (/.f64 -1 (-.f64 1 y)))) (*.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (+.f64 y -1))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)) x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (+.f64 (log.f64 (neg.f64 (/.f64 1 (-.f64 1 y)))) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)) (pow.f64 x 2))) (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 3)) (pow.f64 x 3)))))))","(fma.f64 -1 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (/.f64 x (-.f64 1 y))) (+.f64 (fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 (/.f64 -1 (-.f64 1 y)))) (fma.f64 -1/2 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (/.f64 (*.f64 x x) (pow.f64 (-.f64 1 y) 2))) (*.f64 -1/3 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 1 y) 3)))))))","(+.f64 (-.f64 (+.f64 (log.f64 (/.f64 -1 (-.f64 1 y))) (log.f64 x)) (*.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (-.f64 1 y))) (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) x) (/.f64 (pow.f64 (-.f64 1 y) 2) x)) (*.f64 -1/3 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 1 y) 3))))))","(+.f64 (log.f64 x) (+.f64 (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) x) (/.f64 (pow.f64 (-.f64 1 y) 2) x)) (log.f64 (/.f64 -1 (-.f64 1 y)))) (*.f64 -1/3 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (/.f64 x (-.f64 1 y)) 3)))) (*.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (+.f64 y -1))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 1 (-.f64 1 y))))","(fma.f64 -1 (log.f64 (/.f64 -1 x)) (neg.f64 (log.f64 (-.f64 1 y))))","(-.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log1p.f64 (neg.f64 y)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 (/.f64 1 (-.f64 1 y))) (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) (-.f64 1 y)) x))))","(+.f64 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (neg.f64 (log.f64 (-.f64 1 y)))) (neg.f64 (/.f64 (-.f64 1 (neg.f64 (/.f64 y (-.f64 1 y)))) (/.f64 x (-.f64 1 y)))))","(-.f64 (-.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log1p.f64 (neg.f64 y))) (*.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (-.f64 1 y)))","(-.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (fma.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (-.f64 1 y) (log1p.f64 (neg.f64 y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (log.f64 (/.f64 1 (-.f64 1 y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) (-.f64 1 y)) x)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) 2) (pow.f64 (-.f64 1 y) 2)) (pow.f64 x 2))))))","(+.f64 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (neg.f64 (log.f64 (-.f64 1 y)))) (fma.f64 -1 (/.f64 (-.f64 1 (neg.f64 (/.f64 y (-.f64 1 y)))) (/.f64 x (-.f64 1 y))) (*.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (neg.f64 (/.f64 y (-.f64 1 y)))) 2) (/.f64 (*.f64 x x) (pow.f64 (-.f64 1 y) 2))))))","(-.f64 (-.f64 (-.f64 (*.f64 -1/2 (*.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) x) (/.f64 (pow.f64 (-.f64 1 y) 2) x))) (*.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (-.f64 1 y))) (log1p.f64 (neg.f64 y))) (log.f64 (/.f64 -1 x)))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) x) (/.f64 (pow.f64 (-.f64 1 y) 2) x)) (*.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (+.f64 y -1))) (+.f64 (log.f64 (/.f64 -1 x)) (log1p.f64 (neg.f64 y))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (+.f64 (*.f64 -1/3 (/.f64 (*.f64 (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) 3) (pow.f64 (-.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (log.f64 (/.f64 1 (-.f64 1 y))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) (-.f64 1 y)) x)) (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) 2) (pow.f64 (-.f64 1 y) 2)) (pow.f64 x 2)))))))","(fma.f64 -1 (log.f64 (/.f64 -1 x)) (fma.f64 -1/3 (/.f64 (pow.f64 (-.f64 1 (neg.f64 (/.f64 y (-.f64 1 y)))) 3) (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 1 y) 3))) (+.f64 (neg.f64 (log.f64 (-.f64 1 y))) (fma.f64 -1 (/.f64 (-.f64 1 (neg.f64 (/.f64 y (-.f64 1 y)))) (/.f64 x (-.f64 1 y))) (*.f64 -1/2 (/.f64 (pow.f64 (-.f64 1 (neg.f64 (/.f64 y (-.f64 1 y)))) 2) (/.f64 (*.f64 x x) (pow.f64 (-.f64 1 y) 2))))))))","(-.f64 (fma.f64 -1/3 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 1 y) 3))) (-.f64 (-.f64 (*.f64 -1/2 (*.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) x) (/.f64 (pow.f64 (-.f64 1 y) 2) x))) (*.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (-.f64 1 y))) (log1p.f64 (neg.f64 y)))) (log.f64 (/.f64 -1 x)))","(-.f64 (fma.f64 -1/3 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (/.f64 x (-.f64 1 y)) 3)) (-.f64 (*.f64 -1/2 (*.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) x) (/.f64 (pow.f64 (-.f64 1 y) 2) x))) (fma.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (-.f64 1 y) (log1p.f64 (neg.f64 y))))) (log.f64 (/.f64 -1 x)))","(log.f64 (-.f64 1 x))","(log1p.f64 (neg.f64 x))","(+.f64 (log.f64 (-.f64 1 x)) (*.f64 y (+.f64 (*.f64 -1 (/.f64 x (-.f64 1 x))) (/.f64 1 (-.f64 1 x)))))","(+.f64 (log.f64 (-.f64 1 x)) (*.f64 y (-.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 1 x)))))","(+.f64 y (log1p.f64 (neg.f64 x)))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2))) (*.f64 2 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x)))))) (+.f64 (log.f64 (-.f64 1 x)) (*.f64 y (+.f64 (*.f64 -1 (/.f64 x (-.f64 1 x))) (/.f64 1 (-.f64 1 x))))))","(fma.f64 1/2 (*.f64 (*.f64 y y) (fma.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 1 x) 2)) (*.f64 2 (/.f64 (-.f64 1 x) (-.f64 1 x))))) (+.f64 (log.f64 (-.f64 1 x)) (*.f64 y (-.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 1 x))))))","(+.f64 y (fma.f64 1/2 (*.f64 y y) (log1p.f64 (neg.f64 x))))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2))) (*.f64 2 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x)))))) (+.f64 (log.f64 (-.f64 1 x)) (+.f64 (*.f64 y (+.f64 (*.f64 -1 (/.f64 x (-.f64 1 x))) (/.f64 1 (-.f64 1 x)))) (*.f64 1/6 (*.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 3) (pow.f64 (-.f64 1 x) 3))) (+.f64 (*.f64 6 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x))) (*.f64 -6 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2))))) (pow.f64 y 3))))))","(fma.f64 1/2 (*.f64 (*.f64 y y) (fma.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 1 x) 2)) (*.f64 2 (/.f64 (-.f64 1 x) (-.f64 1 x))))) (+.f64 (log.f64 (-.f64 1 x)) (fma.f64 y (-.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 1 x))) (*.f64 1/6 (*.f64 (fma.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (-.f64 1 x) 3)) (fma.f64 6 (/.f64 (-.f64 1 x) (-.f64 1 x)) (*.f64 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 1 x) 2)) -6))) (pow.f64 y 3))))))","(+.f64 (fma.f64 1/3 (pow.f64 y 3) y) (fma.f64 1/2 (*.f64 y y) (log1p.f64 (neg.f64 x))))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 (neg.f64 (+.f64 1 (*.f64 -1 x)))))","(+.f64 (neg.f64 (log.f64 y)) (log.f64 (neg.f64 (-.f64 1 x))))","(-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y))","(+.f64 (*.f64 -1 (/.f64 (-.f64 x 1) (*.f64 y (+.f64 1 (*.f64 -1 x))))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (neg.f64 (+.f64 1 (*.f64 -1 x))))))","(fma.f64 -1 (/.f64 (+.f64 x -1) (*.f64 y (-.f64 1 x))) (+.f64 (neg.f64 (log.f64 y)) (log.f64 (neg.f64 (-.f64 1 x)))))","(+.f64 (/.f64 1 y) (-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y)))","(+.f64 (*.f64 -1 (/.f64 (-.f64 x 1) (*.f64 y (+.f64 1 (*.f64 -1 x))))) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (log.f64 (neg.f64 (+.f64 1 (*.f64 -1 x)))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (*.f64 -2 (/.f64 (-.f64 x 1) (+.f64 1 (*.f64 -1 x))))) (pow.f64 y 2))))))","(fma.f64 -1 (/.f64 (+.f64 x -1) (*.f64 y (-.f64 1 x))) (+.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 (neg.f64 (-.f64 1 x)))) (*.f64 1/2 (/.f64 (fma.f64 -1 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 (-.f64 1 x) 2)) (*.f64 -2 (/.f64 (+.f64 x -1) (-.f64 1 x)))) (*.f64 y y)))))","(+.f64 (/.f64 1 y) (-.f64 (fma.f64 1/2 (/.f64 (fma.f64 -2 (/.f64 (+.f64 -1 x) (-.f64 1 x)) -1) (*.f64 y y)) (log.f64 (+.f64 -1 x))) (log.f64 y)))","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (+.f64 -1 x)) (-.f64 (/.f64 1/2 (*.f64 y y)) (log.f64 y))))","(+.f64 (*.f64 1/6 (/.f64 (+.f64 (*.f64 -6 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (+.f64 (*.f64 -6 (/.f64 (-.f64 x 1) (+.f64 1 (*.f64 -1 x)))) (*.f64 -2 (/.f64 (pow.f64 (-.f64 x 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 x)) 3))))) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (-.f64 x 1) (*.f64 y (+.f64 1 (*.f64 -1 x))))) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (log.f64 (neg.f64 (+.f64 1 (*.f64 -1 x)))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (*.f64 -2 (/.f64 (-.f64 x 1) (+.f64 1 (*.f64 -1 x))))) (pow.f64 y 2)))))))","(fma.f64 1/6 (/.f64 (fma.f64 -6 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 (-.f64 1 x) 2)) (fma.f64 -6 (/.f64 (+.f64 x -1) (-.f64 1 x)) (*.f64 -2 (/.f64 (pow.f64 (+.f64 x -1) 3) (pow.f64 (-.f64 1 x) 3))))) (pow.f64 y 3)) (fma.f64 -1 (/.f64 (+.f64 x -1) (*.f64 y (-.f64 1 x))) (+.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 (neg.f64 (-.f64 1 x)))) (*.f64 1/2 (/.f64 (fma.f64 -1 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 (-.f64 1 x) 2)) (*.f64 -2 (/.f64 (+.f64 x -1) (-.f64 1 x)))) (*.f64 y y))))))","(+.f64 (-.f64 (fma.f64 1/2 (/.f64 (fma.f64 -2 (/.f64 (+.f64 -1 x) (-.f64 1 x)) -1) (*.f64 y y)) (log.f64 (+.f64 -1 x))) (log.f64 y)) (fma.f64 1/6 (/.f64 (fma.f64 -6 (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 (-.f64 1 x) 2)) (fma.f64 -6 (/.f64 (+.f64 -1 x) (-.f64 1 x)) (/.f64 (*.f64 -2 (pow.f64 (+.f64 -1 x) 3)) (pow.f64 (-.f64 1 x) 3)))) (pow.f64 y 3)) (/.f64 1 y)))","(+.f64 (+.f64 (log.f64 (+.f64 -1 x)) (-.f64 (/.f64 1/2 (*.f64 y y)) (log.f64 y))) (+.f64 (/.f64 1 y) (/.f64 1/3 (pow.f64 y 3))))","(+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (-.f64 1 x)))","(+.f64 (neg.f64 (log.f64 y)) (log.f64 (neg.f64 (-.f64 1 x))))","(-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y))","(+.f64 (log.f64 (/.f64 -1 y)) (+.f64 (log.f64 (-.f64 1 x)) (*.f64 -1 (/.f64 (-.f64 (/.f64 x (-.f64 1 x)) (/.f64 1 (-.f64 1 x))) y))))","(fma.f64 -1 (/.f64 (+.f64 x -1) (*.f64 y (-.f64 1 x))) (+.f64 (neg.f64 (log.f64 y)) (log.f64 (neg.f64 (-.f64 1 x)))))","(+.f64 (/.f64 1 y) (-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y)))","(+.f64 (log.f64 (/.f64 -1 y)) (+.f64 (log.f64 (-.f64 1 x)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 x (-.f64 1 x)) (/.f64 1 (-.f64 1 x))) y)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x))) (*.f64 -1 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 y 2))))))","(fma.f64 -1 (/.f64 (+.f64 x -1) (*.f64 y (-.f64 1 x))) (+.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 (neg.f64 (-.f64 1 x)))) (*.f64 1/2 (/.f64 (fma.f64 -1 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 (-.f64 1 x) 2)) (*.f64 -2 (/.f64 (+.f64 x -1) (-.f64 1 x)))) (*.f64 y y)))))","(+.f64 (/.f64 1 y) (-.f64 (fma.f64 1/2 (/.f64 (fma.f64 -2 (/.f64 (+.f64 -1 x) (-.f64 1 x)) -1) (*.f64 y y)) (log.f64 (+.f64 -1 x))) (log.f64 y)))","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (+.f64 -1 x)) (-.f64 (/.f64 1/2 (*.f64 y y)) (log.f64 y))))","(+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 6 (/.f64 (-.f64 x 1) (-.f64 1 x))) (+.f64 (*.f64 2 (/.f64 (pow.f64 (-.f64 x 1) 3) (pow.f64 (-.f64 1 x) 3))) (*.f64 -6 (/.f64 (*.f64 (-.f64 x 1) (+.f64 1 (*.f64 -1 x))) (pow.f64 (-.f64 1 x) 2))))) (pow.f64 y 3))) (+.f64 (log.f64 (/.f64 -1 y)) (+.f64 (log.f64 (-.f64 1 x)) (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 x (-.f64 1 x)) (/.f64 1 (-.f64 1 x))) y)) (*.f64 1/2 (/.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x))) (*.f64 -1 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 y 2)))))))","(fma.f64 1/6 (/.f64 (fma.f64 -6 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 (-.f64 1 x) 2)) (fma.f64 -6 (/.f64 (+.f64 x -1) (-.f64 1 x)) (*.f64 -2 (/.f64 (pow.f64 (+.f64 x -1) 3) (pow.f64 (-.f64 1 x) 3))))) (pow.f64 y 3)) (fma.f64 -1 (/.f64 (+.f64 x -1) (*.f64 y (-.f64 1 x))) (+.f64 (+.f64 (neg.f64 (log.f64 y)) (log.f64 (neg.f64 (-.f64 1 x)))) (*.f64 1/2 (/.f64 (fma.f64 -1 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 (-.f64 1 x) 2)) (*.f64 -2 (/.f64 (+.f64 x -1) (-.f64 1 x)))) (*.f64 y y))))))","(+.f64 (-.f64 (fma.f64 1/2 (/.f64 (fma.f64 -2 (/.f64 (+.f64 -1 x) (-.f64 1 x)) -1) (*.f64 y y)) (log.f64 (+.f64 -1 x))) (log.f64 y)) (fma.f64 1/6 (/.f64 (fma.f64 -6 (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 (-.f64 1 x) 2)) (fma.f64 -6 (/.f64 (+.f64 -1 x) (-.f64 1 x)) (/.f64 (*.f64 -2 (pow.f64 (+.f64 -1 x) 3)) (pow.f64 (-.f64 1 x) 3)))) (pow.f64 y 3)) (/.f64 1 y)))","(+.f64 (+.f64 (log.f64 (+.f64 -1 x)) (-.f64 (/.f64 1/2 (*.f64 y y)) (log.f64 y))) (+.f64 (/.f64 1 y) (/.f64 1/3 (pow.f64 y 3))))","(+.f64 1 (/.f64 y (-.f64 1 y)))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (*.f64 -1 (/.f64 x (-.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (/.f64 (neg.f64 x) (-.f64 1 y))))","(+.f64 (/.f64 y (-.f64 1 y)) (-.f64 1 (/.f64 x (-.f64 1 y))))","(+.f64 1 (-.f64 (/.f64 y (-.f64 1 y)) (/.f64 x (-.f64 1 y))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (*.f64 -1 (/.f64 x (-.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (/.f64 (neg.f64 x) (-.f64 1 y))))","(+.f64 (/.f64 y (-.f64 1 y)) (-.f64 1 (/.f64 x (-.f64 1 y))))","(+.f64 1 (-.f64 (/.f64 y (-.f64 1 y)) (/.f64 x (-.f64 1 y))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (*.f64 -1 (/.f64 x (-.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (/.f64 (neg.f64 x) (-.f64 1 y))))","(+.f64 (/.f64 y (-.f64 1 y)) (-.f64 1 (/.f64 x (-.f64 1 y))))","(+.f64 1 (-.f64 (/.f64 y (-.f64 1 y)) (/.f64 x (-.f64 1 y))))","(*.f64 -1 (/.f64 x (-.f64 1 y)))","(/.f64 (neg.f64 x) (-.f64 1 y))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (*.f64 -1 (/.f64 x (-.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (/.f64 (neg.f64 x) (-.f64 1 y))))","(+.f64 (/.f64 y (-.f64 1 y)) (-.f64 1 (/.f64 x (-.f64 1 y))))","(+.f64 1 (-.f64 (/.f64 y (-.f64 1 y)) (/.f64 x (-.f64 1 y))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (*.f64 -1 (/.f64 x (-.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (/.f64 (neg.f64 x) (-.f64 1 y))))","(+.f64 (/.f64 y (-.f64 1 y)) (-.f64 1 (/.f64 x (-.f64 1 y))))","(+.f64 1 (-.f64 (/.f64 y (-.f64 1 y)) (/.f64 x (-.f64 1 y))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (*.f64 -1 (/.f64 x (-.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (/.f64 (neg.f64 x) (-.f64 1 y))))","(+.f64 (/.f64 y (-.f64 1 y)) (-.f64 1 (/.f64 x (-.f64 1 y))))","(+.f64 1 (-.f64 (/.f64 y (-.f64 1 y)) (/.f64 x (-.f64 1 y))))","(*.f64 -1 (/.f64 x (-.f64 1 y)))","(/.f64 (neg.f64 x) (-.f64 1 y))","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x (-.f64 1 y)))) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (/.f64 (neg.f64 x) (-.f64 1 y))))","(+.f64 (/.f64 y (-.f64 1 y)) (-.f64 1 (/.f64 x (-.f64 1 y))))","(+.f64 1 (-.f64 (/.f64 y (-.f64 1 y)) (/.f64 x (-.f64 1 y))))","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x (-.f64 1 y)))) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (/.f64 (neg.f64 x) (-.f64 1 y))))","(+.f64 (/.f64 y (-.f64 1 y)) (-.f64 1 (/.f64 x (-.f64 1 y))))","(+.f64 1 (-.f64 (/.f64 y (-.f64 1 y)) (/.f64 x (-.f64 1 y))))","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 x (-.f64 1 y)))) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (/.f64 (neg.f64 x) (-.f64 1 y))))","(+.f64 (/.f64 y (-.f64 1 y)) (-.f64 1 (/.f64 x (-.f64 1 y))))","(+.f64 1 (-.f64 (/.f64 y (-.f64 1 y)) (/.f64 x (-.f64 1 y))))","(-.f64 1 x)","(-.f64 (+.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 x)))) x)","(+.f64 1 (-.f64 (*.f64 y (-.f64 1 x)) x))","(-.f64 (fma.f64 y (-.f64 1 x) 1) x)","(*.f64 (+.f64 y 1) (-.f64 1 x))","(-.f64 (+.f64 (*.f64 (pow.f64 y 2) (+.f64 1 (*.f64 -1 x))) (+.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 x))))) x)","(-.f64 (fma.f64 (*.f64 y y) (-.f64 1 x) (+.f64 1 (*.f64 y (-.f64 1 x)))) x)","(-.f64 (fma.f64 (*.f64 y y) (-.f64 1 x) (fma.f64 y (-.f64 1 x) 1)) x)","(-.f64 (+.f64 1 (*.f64 y (*.f64 (+.f64 y 1) (-.f64 1 x)))) x)","(-.f64 (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 (*.f64 -1 x))) (+.f64 (*.f64 (pow.f64 y 2) (+.f64 1 (*.f64 -1 x))) (+.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 x)))))) x)","(-.f64 (fma.f64 (pow.f64 y 3) (-.f64 1 x) (fma.f64 (*.f64 y y) (-.f64 1 x) (+.f64 1 (*.f64 y (-.f64 1 x))))) x)","(+.f64 (*.f64 (-.f64 1 x) (+.f64 (pow.f64 y 3) (*.f64 y y))) (-.f64 (fma.f64 y (-.f64 1 x) 1) x))","(-.f64 (+.f64 (*.f64 (-.f64 1 x) (+.f64 (+.f64 (pow.f64 y 3) (*.f64 y y)) y)) 1) x)","(*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 x)) y))","(/.f64 (neg.f64 (-.f64 1 x)) y)","(/.f64 (+.f64 -1 x) y)","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 x)) y))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (neg.f64 (-.f64 1 x)) y)) (/.f64 1 (*.f64 y y)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 (+.f64 -1 x) y) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 x)) y)))) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))","(+.f64 (/.f64 x (pow.f64 y 3)) (-.f64 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (neg.f64 (-.f64 1 x)) y)) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))))","(+.f64 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (+.f64 -1 x) y)) (-.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))))","(+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (*.f64 y y))) (/.f64 -1 (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 4)) (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 x)) y))))) (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (pow.f64 y 4)))))","(+.f64 (/.f64 x (pow.f64 y 4)) (-.f64 (+.f64 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (neg.f64 (-.f64 1 x)) y)) (/.f64 x (pow.f64 y 3))) (+.f64 (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))) (/.f64 1 (pow.f64 y 4)))))","(+.f64 (/.f64 x (pow.f64 y 4)) (+.f64 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 x (pow.f64 y 3))) (-.f64 (/.f64 (+.f64 -1 x) y) (+.f64 (/.f64 1 (*.f64 y y)) (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 1 (pow.f64 y 4)))))))","(+.f64 (+.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 x (pow.f64 y 4))) (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (*.f64 y y)))) (+.f64 (/.f64 -1 (pow.f64 y 3)) (/.f64 -1 (pow.f64 y 4))))","(*.f64 -1 (/.f64 (-.f64 1 x) y))","(/.f64 (neg.f64 (-.f64 1 x)) y)","(/.f64 (+.f64 -1 x) y)","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (*.f64 -1 (/.f64 (-.f64 1 x) y))) (/.f64 1 (pow.f64 y 2)))","(-.f64 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 (neg.f64 (-.f64 1 x)) y)) (/.f64 1 (*.f64 y y)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 (+.f64 -1 x) y) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 x)) (pow.f64 y 3))) (*.f64 -1 (/.f64 (-.f64 1 x) y)))) (/.f64 1 (pow.f64 y 2)))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (fma.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 3)) (/.f64 (neg.f64 (-.f64 1 x)) y)) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 x (*.f64 y y)) (+.f64 (/.f64 (+.f64 -1 x) y) (-.f64 (/.f64 (+.f64 -1 x) (pow.f64 y 3)) (/.f64 1 (*.f64 y y)))))","(+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 4)) (+.f64 (/.f64 x (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (+.f64 1 (*.f64 -1 x)) (pow.f64 y 3))) (*.f64 -1 (/.f64 (-.f64 1 x) y))))) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 4))))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 4)) (+.f64 (/.f64 x (*.f64 y y)) (fma.f64 -1 (/.f64 (-.f64 1 x) (pow.f64 y 3)) (/.f64 (neg.f64 (-.f64 1 x)) y)))) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 4))))","(+.f64 (/.f64 x (pow.f64 y 4)) (+.f64 (/.f64 x (*.f64 y y)) (-.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 4))))))","(+.f64 (/.f64 x (pow.f64 y 4)) (+.f64 (+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y))) (/.f64 -1 (pow.f64 y 4))))","(*.f64 -1 (/.f64 y (-.f64 1 y)))","(neg.f64 (/.f64 y (-.f64 1 y)))","(/.f64 (neg.f64 y) (-.f64 1 y))","(+.f64 (/.f64 x (-.f64 1 y)) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(+.f64 (neg.f64 (/.f64 y (-.f64 1 y))) (/.f64 x (-.f64 1 y)))","(-.f64 (/.f64 x (-.f64 1 y)) (/.f64 y (-.f64 1 y)))","(+.f64 (/.f64 x (-.f64 1 y)) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(+.f64 (neg.f64 (/.f64 y (-.f64 1 y))) (/.f64 x (-.f64 1 y)))","(-.f64 (/.f64 x (-.f64 1 y)) (/.f64 y (-.f64 1 y)))","(+.f64 (/.f64 x (-.f64 1 y)) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(+.f64 (neg.f64 (/.f64 y (-.f64 1 y))) (/.f64 x (-.f64 1 y)))","(-.f64 (/.f64 x (-.f64 1 y)) (/.f64 y (-.f64 1 y)))","(/.f64 x (-.f64 1 y))","(+.f64 (/.f64 x (-.f64 1 y)) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(+.f64 (neg.f64 (/.f64 y (-.f64 1 y))) (/.f64 x (-.f64 1 y)))","(-.f64 (/.f64 x (-.f64 1 y)) (/.f64 y (-.f64 1 y)))","(+.f64 (/.f64 x (-.f64 1 y)) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(+.f64 (neg.f64 (/.f64 y (-.f64 1 y))) (/.f64 x (-.f64 1 y)))","(-.f64 (/.f64 x (-.f64 1 y)) (/.f64 y (-.f64 1 y)))","(+.f64 (/.f64 x (-.f64 1 y)) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(+.f64 (neg.f64 (/.f64 y (-.f64 1 y))) (/.f64 x (-.f64 1 y)))","(-.f64 (/.f64 x (-.f64 1 y)) (/.f64 y (-.f64 1 y)))","(/.f64 x (-.f64 1 y))","(+.f64 (/.f64 x (-.f64 1 y)) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(+.f64 (neg.f64 (/.f64 y (-.f64 1 y))) (/.f64 x (-.f64 1 y)))","(-.f64 (/.f64 x (-.f64 1 y)) (/.f64 y (-.f64 1 y)))","(+.f64 (/.f64 x (-.f64 1 y)) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(+.f64 (neg.f64 (/.f64 y (-.f64 1 y))) (/.f64 x (-.f64 1 y)))","(-.f64 (/.f64 x (-.f64 1 y)) (/.f64 y (-.f64 1 y)))","(+.f64 (/.f64 x (-.f64 1 y)) (*.f64 -1 (/.f64 y (-.f64 1 y))))","(+.f64 (neg.f64 (/.f64 y (-.f64 1 y))) (/.f64 x (-.f64 1 y)))","(-.f64 (/.f64 x (-.f64 1 y)) (/.f64 y (-.f64 1 y)))","x","(+.f64 (*.f64 -1 (*.f64 y (+.f64 1 (*.f64 -1 x)))) x)","(fma.f64 -1 (*.f64 y (-.f64 1 x)) x)","(+.f64 x (*.f64 y (+.f64 -1 x)))","(+.f64 x (-.f64 (*.f64 y x) y))","(+.f64 (*.f64 -1 (*.f64 y (+.f64 1 (*.f64 -1 x)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 1 (*.f64 -1 x)))) x))","(fma.f64 -1 (*.f64 y (-.f64 1 x)) (fma.f64 -1 (*.f64 (*.f64 y y) (-.f64 1 x)) x))","(+.f64 x (*.f64 (-.f64 1 x) (+.f64 (neg.f64 y) (*.f64 y (neg.f64 y)))))","(+.f64 x (*.f64 (+.f64 -1 x) (+.f64 y (*.f64 y y))))","(+.f64 (*.f64 -1 (*.f64 y (+.f64 1 (*.f64 -1 x)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (+.f64 1 (*.f64 -1 x)))) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 3) (+.f64 1 (*.f64 -1 x)))) x)))","(fma.f64 -1 (*.f64 y (-.f64 1 x)) (fma.f64 -1 (*.f64 (*.f64 y y) (-.f64 1 x)) (fma.f64 -1 (*.f64 (-.f64 1 x) (pow.f64 y 3)) x)))","(+.f64 (neg.f64 (*.f64 (-.f64 1 x) (+.f64 (pow.f64 y 3) (*.f64 y y)))) (+.f64 x (*.f64 y (+.f64 -1 x))))","(+.f64 (*.f64 (-.f64 1 x) (+.f64 (neg.f64 y) (neg.f64 (+.f64 (*.f64 y y) (pow.f64 y 3))))) x)","1","(+.f64 (/.f64 1 y) (+.f64 1 (*.f64 -1 (/.f64 x y))))","(+.f64 (+.f64 (/.f64 1 y) 1) (/.f64 (neg.f64 x) y))","(-.f64 1 (/.f64 (+.f64 -1 x) y))","(+.f64 1 (/.f64 (-.f64 1 x) y))","(+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))))))","(+.f64 (+.f64 (/.f64 1 y) (/.f64 1 (*.f64 y y))) (+.f64 1 (*.f64 -1 (+.f64 (/.f64 x (*.f64 y y)) (/.f64 x y)))))","(+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 (-.f64 1 (/.f64 x (*.f64 y y))) (/.f64 x y))))","(+.f64 (/.f64 1 y) (-.f64 (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (/.f64 (/.f64 x y) y))) (/.f64 x y)))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 3))) (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 x (pow.f64 y 2))) (+.f64 (/.f64 1 (pow.f64 y 3)) (*.f64 -1 (/.f64 x y))))))))","(+.f64 (/.f64 1 y) (fma.f64 -1 (/.f64 x (pow.f64 y 3)) (+.f64 (+.f64 (/.f64 1 (*.f64 y y)) 1) (fma.f64 -1 (/.f64 x (*.f64 y y)) (+.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 (neg.f64 x) y))))))","(+.f64 (+.f64 (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 3))) (+.f64 1 (/.f64 1 (*.f64 y y)))) (-.f64 (-.f64 (/.f64 1 (pow.f64 y 3)) (/.f64 x y)) (/.f64 x (*.f64 y y))))","(+.f64 (+.f64 (-.f64 (/.f64 1 (pow.f64 y 3)) (+.f64 (/.f64 (/.f64 x y) y) (/.f64 x y))) (+.f64 1 (/.f64 1 (*.f64 y y)))) (-.f64 (/.f64 1 y) (/.f64 x (pow.f64 y 3))))","1","(+.f64 1 (*.f64 -1 (/.f64 (-.f64 x 1) y)))","(+.f64 (+.f64 (/.f64 1 y) 1) (/.f64 (neg.f64 x) y))","(-.f64 1 (/.f64 (+.f64 -1 x) y))","(+.f64 1 (/.f64 (-.f64 1 x) y))","(-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 1 (*.f64 -1 (/.f64 (-.f64 x 1) y)))) (/.f64 x (pow.f64 y 2)))","(+.f64 (/.f64 1 (*.f64 y y)) (-.f64 (+.f64 1 (neg.f64 (/.f64 (+.f64 x -1) y))) (/.f64 x (*.f64 y y))))","(-.f64 (+.f64 (/.f64 1 (*.f64 y y)) (-.f64 1 (/.f64 (+.f64 -1 x) y))) (/.f64 x (*.f64 y y)))","(+.f64 (+.f64 1 (/.f64 (-.f64 1 x) y)) (/.f64 (-.f64 1 x) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 1 (pow.f64 y 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (-.f64 x 1) y)) (*.f64 -1 (/.f64 (-.f64 x 1) (pow.f64 y 3)))))) (/.f64 x (pow.f64 y 2)))","(+.f64 (/.f64 1 (*.f64 y y)) (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (/.f64 (+.f64 x -1) y) (/.f64 (+.f64 x -1) (pow.f64 y 3))))) (/.f64 x (*.f64 y y))))","(+.f64 (/.f64 1 (*.f64 y y)) (+.f64 1 (-.f64 (+.f64 (/.f64 (-.f64 1 x) y) (/.f64 (-.f64 1 x) (pow.f64 y 3))) (/.f64 x (*.f64 y y)))))","(+.f64 (+.f64 (/.f64 (-.f64 1 x) y) (-.f64 1 (/.f64 (+.f64 -1 x) (pow.f64 y 3)))) (/.f64 (-.f64 1 x) (*.f64 y y)))","(-.f64 1 (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))))","(-.f64 1 (log1p.f64 (/.f64 y (-.f64 1 y))))","(-.f64 (+.f64 1 (/.f64 x (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))) (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))))","(+.f64 1 (-.f64 (/.f64 x (*.f64 (-.f64 1 y) (+.f64 1 (/.f64 y (-.f64 1 y))))) (log1p.f64 (/.f64 y (-.f64 1 y)))))","(+.f64 (/.f64 x (*.f64 (-.f64 1 y) (+.f64 1 (/.f64 y (-.f64 1 y))))) (-.f64 1 (log1p.f64 (/.f64 y (-.f64 1 y)))))","(+.f64 (/.f64 (/.f64 x (-.f64 1 y)) (+.f64 1 (/.f64 y (-.f64 1 y)))) (-.f64 1 (log1p.f64 (/.f64 y (-.f64 1 y)))))","(-.f64 (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)))) (/.f64 x (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y))))) (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))))","(+.f64 1 (-.f64 (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2))) (/.f64 x (*.f64 (-.f64 1 y) (+.f64 1 (/.f64 y (-.f64 1 y)))))) (log1p.f64 (/.f64 y (-.f64 1 y)))))","(+.f64 1 (-.f64 (fma.f64 (*.f64 (/.f64 x (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2)) (/.f64 x (pow.f64 (-.f64 1 y) 2))) 1/2 (/.f64 x (*.f64 (-.f64 1 y) (+.f64 1 (/.f64 y (-.f64 1 y)))))) (log1p.f64 (/.f64 y (-.f64 1 y)))))","(+.f64 1 (-.f64 (fma.f64 (*.f64 (/.f64 x (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2)) (/.f64 x (pow.f64 (-.f64 1 y) 2))) 1/2 (/.f64 (/.f64 x (-.f64 1 y)) (+.f64 1 (/.f64 y (-.f64 1 y))))) (log1p.f64 (/.f64 y (-.f64 1 y)))))","(-.f64 (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 3)))) (/.f64 x (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))))) (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))))","(+.f64 1 (-.f64 (fma.f64 1/2 (/.f64 (*.f64 x x) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2))) (fma.f64 1/3 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 3))) (/.f64 x (*.f64 (-.f64 1 y) (+.f64 1 (/.f64 y (-.f64 1 y))))))) (log1p.f64 (/.f64 y (-.f64 1 y)))))","(+.f64 1 (-.f64 (fma.f64 (*.f64 (/.f64 x (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2)) (/.f64 x (pow.f64 (-.f64 1 y) 2))) 1/2 (fma.f64 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 3))) 1/3 (/.f64 x (*.f64 (-.f64 1 y) (+.f64 1 (/.f64 y (-.f64 1 y))))))) (log1p.f64 (/.f64 y (-.f64 1 y)))))","(+.f64 1 (-.f64 (fma.f64 (*.f64 (/.f64 x (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2)) (/.f64 x (pow.f64 (-.f64 1 y) 2))) 1/2 (fma.f64 (/.f64 (pow.f64 (/.f64 x (-.f64 1 y)) 3) (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3)) 1/3 (/.f64 (/.f64 x (-.f64 1 y)) (+.f64 1 (/.f64 y (-.f64 1 y)))))) (log1p.f64 (/.f64 y (-.f64 1 y)))))","(-.f64 1 (+.f64 (log.f64 (neg.f64 (/.f64 1 (-.f64 1 y)))) (*.f64 -1 (log.f64 (/.f64 1 x)))))","(-.f64 1 (fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 (/.f64 -1 (-.f64 1 y)))))","(-.f64 1 (+.f64 (log.f64 (/.f64 -1 (-.f64 1 y))) (log.f64 x)))","(-.f64 (-.f64 1 (log.f64 (/.f64 -1 (-.f64 1 y)))) (log.f64 x))","(-.f64 (+.f64 1 (/.f64 (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)) x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (neg.f64 (/.f64 1 (-.f64 1 y))))))","(+.f64 1 (-.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (/.f64 x (-.f64 1 y))) (fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 (/.f64 -1 (-.f64 1 y))))))","(+.f64 1 (-.f64 (*.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (-.f64 1 y)) (+.f64 (log.f64 (/.f64 -1 (-.f64 1 y))) (log.f64 x))))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)) (pow.f64 x 2))) (+.f64 1 (/.f64 (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)) x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (neg.f64 (/.f64 1 (-.f64 1 y))))))","(-.f64 (fma.f64 1/2 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (/.f64 (*.f64 x x) (pow.f64 (-.f64 1 y) 2))) (+.f64 1 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (/.f64 x (-.f64 1 y))))) (fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 (/.f64 -1 (-.f64 1 y)))))","(+.f64 (fma.f64 (*.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) x) (/.f64 (pow.f64 (-.f64 1 y) 2) x)) 1/2 1) (-.f64 (*.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (-.f64 1 y)) (+.f64 (log.f64 (/.f64 -1 (-.f64 1 y))) (log.f64 x))))","(-.f64 (+.f64 (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 3)) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)) (pow.f64 x 2))) (+.f64 1 (/.f64 (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)) x)))) (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (neg.f64 (/.f64 1 (-.f64 1 y))))))","(-.f64 (fma.f64 1/3 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 1 y) 3))) (fma.f64 1/2 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (/.f64 (*.f64 x x) (pow.f64 (-.f64 1 y) 2))) (+.f64 1 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (/.f64 x (-.f64 1 y)))))) (fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 (/.f64 -1 (-.f64 1 y)))))","(-.f64 (+.f64 1 (fma.f64 (*.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) x) (/.f64 (pow.f64 (-.f64 1 y) 2) x)) 1/2 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 1 y) 3))) 1/3 (*.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (-.f64 1 y))))) (+.f64 (log.f64 (/.f64 -1 (-.f64 1 y))) (log.f64 x)))","(-.f64 (+.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (/.f64 x (-.f64 1 y)) 3)) 1/3 (*.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (-.f64 1 y))) (fma.f64 (*.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) x) (/.f64 (pow.f64 (-.f64 1 y) 2) x)) 1/2 1)) (+.f64 (log.f64 (/.f64 -1 (-.f64 1 y))) (log.f64 x)))","(-.f64 1 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 1 (-.f64 1 y)))))","(-.f64 1 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (neg.f64 (log.f64 (-.f64 1 y)))))","(-.f64 1 (-.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log1p.f64 (neg.f64 y))))","(+.f64 1 (+.f64 (log.f64 (/.f64 -1 x)) (log1p.f64 (neg.f64 y))))","(-.f64 (+.f64 1 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) (-.f64 1 y)) x)) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 1 (-.f64 1 y)))))","(-.f64 (+.f64 1 (/.f64 (-.f64 1 (neg.f64 (/.f64 y (-.f64 1 y)))) (/.f64 x (-.f64 1 y)))) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (neg.f64 (log.f64 (-.f64 1 y)))))","(-.f64 (+.f64 1 (*.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (-.f64 1 y))) (-.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log1p.f64 (neg.f64 y))))","(+.f64 1 (+.f64 (fma.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (-.f64 1 y) (log1p.f64 (neg.f64 y))) (log.f64 (/.f64 -1 x))))","(-.f64 (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) 2) (pow.f64 (-.f64 1 y) 2)) (pow.f64 x 2))) (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) (-.f64 1 y)) x))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 1 (-.f64 1 y)))))","(+.f64 1 (-.f64 (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 1 (neg.f64 (/.f64 y (-.f64 1 y)))) 2) (/.f64 (*.f64 x x) (pow.f64 (-.f64 1 y) 2))) (/.f64 (-.f64 1 (neg.f64 (/.f64 y (-.f64 1 y)))) (/.f64 x (-.f64 1 y)))) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (neg.f64 (log.f64 (-.f64 1 y))))))","(+.f64 (fma.f64 (*.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) x) (/.f64 (pow.f64 (-.f64 1 y) 2) x)) 1/2 1) (-.f64 (*.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (-.f64 1 y)) (-.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log1p.f64 (neg.f64 y)))))","(+.f64 (+.f64 (fma.f64 (*.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) x) (/.f64 (pow.f64 (-.f64 1 y) 2) x)) 1/2 1) (fma.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (-.f64 1 y) (log.f64 (/.f64 -1 x)))) (log1p.f64 (neg.f64 y)))","(-.f64 (+.f64 1 (+.f64 (*.f64 1/2 (/.f64 (*.f64 (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) 2) (pow.f64 (-.f64 1 y) 2)) (pow.f64 x 2))) (+.f64 (/.f64 (*.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) (-.f64 1 y)) x) (*.f64 1/3 (/.f64 (*.f64 (pow.f64 (-.f64 1 (*.f64 -1 (/.f64 y (-.f64 1 y)))) 3) (pow.f64 (-.f64 1 y) 3)) (pow.f64 x 3)))))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (/.f64 1 (-.f64 1 y)))))","(+.f64 1 (-.f64 (+.f64 (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 1 (neg.f64 (/.f64 y (-.f64 1 y)))) 2) (/.f64 (*.f64 x x) (pow.f64 (-.f64 1 y) 2))) (/.f64 (-.f64 1 (neg.f64 (/.f64 y (-.f64 1 y)))) (/.f64 x (-.f64 1 y)))) (*.f64 (/.f64 (pow.f64 (-.f64 1 (neg.f64 (/.f64 y (-.f64 1 y)))) 3) (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 1 y) 3))) 1/3)) (fma.f64 -1 (log.f64 (/.f64 -1 x)) (neg.f64 (log.f64 (-.f64 1 y))))))","(+.f64 1 (-.f64 (fma.f64 (*.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) x) (/.f64 (pow.f64 (-.f64 1 y) 2) x)) 1/2 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 1 y) 3))) 1/3 (*.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (-.f64 1 y)))) (-.f64 (neg.f64 (log.f64 (/.f64 -1 x))) (log1p.f64 (neg.f64 y)))))","(+.f64 1 (+.f64 (fma.f64 (*.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) x) (/.f64 (pow.f64 (-.f64 1 y) 2) x)) 1/2 (*.f64 (/.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) x) (-.f64 1 y))) (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (/.f64 x (-.f64 1 y)) 3)) 1/3 (+.f64 (log.f64 (/.f64 -1 x)) (log1p.f64 (neg.f64 y))))))","(-.f64 1 (log.f64 (-.f64 1 x)))","(-.f64 1 (log1p.f64 (neg.f64 x)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 y (+.f64 (*.f64 -1 (/.f64 x (-.f64 1 x))) (/.f64 1 (-.f64 1 x))))) 1) (log.f64 (-.f64 1 x)))","(-.f64 (fma.f64 -1 (*.f64 y (-.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 1 x)))) 1) (log.f64 (-.f64 1 x)))","(-.f64 (-.f64 1 y) (log1p.f64 (neg.f64 x)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 y (+.f64 (*.f64 -1 (/.f64 x (-.f64 1 x))) (/.f64 1 (-.f64 1 x))))) (+.f64 1 (*.f64 -1/2 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2))) (*.f64 2 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x)))))))) (log.f64 (-.f64 1 x)))","(-.f64 (+.f64 (fma.f64 -1 (*.f64 y (-.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 1 x)))) 1) (*.f64 (*.f64 -1/2 (*.f64 y y)) (fma.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 1 x) 2)) (*.f64 2 (/.f64 (-.f64 1 x) (-.f64 1 x)))))) (log.f64 (-.f64 1 x)))","(-.f64 (-.f64 (fma.f64 -1/2 (*.f64 y y) 1) y) (log1p.f64 (neg.f64 x)))","(-.f64 (+.f64 (*.f64 -1 (*.f64 y (+.f64 (*.f64 -1 (/.f64 x (-.f64 1 x))) (/.f64 1 (-.f64 1 x))))) (+.f64 (*.f64 -1/6 (*.f64 (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 3) (pow.f64 (-.f64 1 x) 3))) (+.f64 (*.f64 6 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x))) (*.f64 -6 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2))))) (pow.f64 y 3))) (+.f64 1 (*.f64 -1/2 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2))) (*.f64 2 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x))))))))) (log.f64 (-.f64 1 x)))","(-.f64 (fma.f64 -1 (*.f64 y (-.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 1 x)))) (fma.f64 -1/6 (*.f64 (fma.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (-.f64 1 x) 3)) (fma.f64 6 (/.f64 (-.f64 1 x) (-.f64 1 x)) (*.f64 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 1 x) 2)) -6))) (pow.f64 y 3)) (+.f64 1 (*.f64 (*.f64 -1/2 (*.f64 y y)) (fma.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 1 x) 2)) (*.f64 2 (/.f64 (-.f64 1 x) (-.f64 1 x)))))))) (log.f64 (-.f64 1 x)))","(-.f64 (-.f64 (fma.f64 -1/3 (pow.f64 y 3) (fma.f64 -1/2 (*.f64 y y) 1)) y) (log1p.f64 (neg.f64 x)))","(-.f64 1 (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (neg.f64 (+.f64 1 (*.f64 -1 x))))))","(-.f64 1 (+.f64 (neg.f64 (log.f64 y)) (log.f64 (neg.f64 (-.f64 1 x)))))","(-.f64 1 (-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y)))","(+.f64 (-.f64 1 (log.f64 (+.f64 -1 x))) (log.f64 y))","(-.f64 (+.f64 1 (/.f64 x (*.f64 y (+.f64 1 (*.f64 -1 x))))) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (log.f64 (neg.f64 (+.f64 1 (*.f64 -1 x)))) (/.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 x)))))))","(-.f64 (-.f64 (+.f64 1 (/.f64 (/.f64 x y) (-.f64 1 x))) (neg.f64 (log.f64 y))) (+.f64 (log.f64 (neg.f64 (-.f64 1 x))) (/.f64 1 (*.f64 y (-.f64 1 x)))))","(+.f64 1 (-.f64 (-.f64 (/.f64 (/.f64 x (-.f64 1 x)) y) (-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y))) (/.f64 1 (*.f64 y (-.f64 1 x)))))","(+.f64 1 (-.f64 (+.f64 (/.f64 (/.f64 x (-.f64 1 x)) y) (log.f64 y)) (+.f64 (log.f64 (+.f64 -1 x)) (/.f64 1 (-.f64 y (*.f64 y x))))))","(-.f64 (+.f64 1 (+.f64 (/.f64 x (*.f64 y (+.f64 1 (*.f64 -1 x)))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (*.f64 -2 (/.f64 (-.f64 x 1) (+.f64 1 (*.f64 -1 x))))) (pow.f64 y 2))))) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (log.f64 (neg.f64 (+.f64 1 (*.f64 -1 x)))) (/.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 x)))))))","(-.f64 (+.f64 (+.f64 1 (/.f64 (/.f64 x y) (-.f64 1 x))) (/.f64 (*.f64 -1/2 (fma.f64 -1 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 (-.f64 1 x) 2)) (*.f64 -2 (/.f64 (+.f64 x -1) (-.f64 1 x))))) (*.f64 y y))) (+.f64 (neg.f64 (log.f64 y)) (+.f64 (log.f64 (neg.f64 (-.f64 1 x))) (/.f64 1 (*.f64 y (-.f64 1 x))))))","(+.f64 1 (-.f64 (fma.f64 -1/2 (/.f64 (fma.f64 -2 (/.f64 (+.f64 -1 x) (-.f64 1 x)) -1) (*.f64 y y)) (/.f64 (/.f64 x (-.f64 1 x)) y)) (+.f64 (-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y)) (/.f64 1 (*.f64 y (-.f64 1 x))))))","(+.f64 1 (+.f64 (+.f64 (/.f64 (/.f64 x (-.f64 1 x)) y) (/.f64 -1/2 (*.f64 y y))) (+.f64 (-.f64 (log.f64 y) (log.f64 (+.f64 -1 x))) (/.f64 -1 (-.f64 y (*.f64 y x))))))","(-.f64 (+.f64 (*.f64 -1/6 (/.f64 (+.f64 (*.f64 -6 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (+.f64 (*.f64 -6 (/.f64 (-.f64 x 1) (+.f64 1 (*.f64 -1 x)))) (*.f64 -2 (/.f64 (pow.f64 (-.f64 x 1) 3) (pow.f64 (+.f64 1 (*.f64 -1 x)) 3))))) (pow.f64 y 3))) (+.f64 1 (+.f64 (/.f64 x (*.f64 y (+.f64 1 (*.f64 -1 x)))) (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (+.f64 1 (*.f64 -1 x)) 2))) (*.f64 -2 (/.f64 (-.f64 x 1) (+.f64 1 (*.f64 -1 x))))) (pow.f64 y 2)))))) (+.f64 (log.f64 (/.f64 1 y)) (+.f64 (log.f64 (neg.f64 (+.f64 1 (*.f64 -1 x)))) (/.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 x)))))))","(-.f64 (fma.f64 -1/6 (/.f64 (fma.f64 -6 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 (-.f64 1 x) 2)) (fma.f64 -6 (/.f64 (+.f64 x -1) (-.f64 1 x)) (*.f64 -2 (/.f64 (pow.f64 (+.f64 x -1) 3) (pow.f64 (-.f64 1 x) 3))))) (pow.f64 y 3)) (+.f64 (+.f64 1 (/.f64 (/.f64 x y) (-.f64 1 x))) (/.f64 (*.f64 -1/2 (fma.f64 -1 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 (-.f64 1 x) 2)) (*.f64 -2 (/.f64 (+.f64 x -1) (-.f64 1 x))))) (*.f64 y y)))) (+.f64 (neg.f64 (log.f64 y)) (+.f64 (log.f64 (neg.f64 (-.f64 1 x))) (/.f64 1 (*.f64 y (-.f64 1 x))))))","(+.f64 (fma.f64 (/.f64 (fma.f64 -6 (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 (-.f64 1 x) 2)) (fma.f64 -6 (/.f64 (+.f64 -1 x) (-.f64 1 x)) (/.f64 (*.f64 -2 (pow.f64 (+.f64 -1 x) 3)) (pow.f64 (-.f64 1 x) 3)))) (pow.f64 y 3)) -1/6 1) (-.f64 (fma.f64 -1/2 (/.f64 (fma.f64 -2 (/.f64 (+.f64 -1 x) (-.f64 1 x)) -1) (*.f64 y y)) (/.f64 (/.f64 x (-.f64 1 x)) y)) (+.f64 (-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y)) (/.f64 1 (*.f64 y (-.f64 1 x))))))","(+.f64 (+.f64 (/.f64 (/.f64 x (-.f64 1 x)) y) (+.f64 1 (/.f64 -1/2 (*.f64 y y)))) (+.f64 (/.f64 -1/3 (pow.f64 y 3)) (+.f64 (-.f64 (log.f64 y) (log.f64 (+.f64 -1 x))) (/.f64 -1 (-.f64 y (*.f64 y x))))))","(-.f64 1 (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (-.f64 1 x))))","(-.f64 1 (+.f64 (neg.f64 (log.f64 y)) (log.f64 (neg.f64 (-.f64 1 x)))))","(-.f64 1 (-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y)))","(+.f64 (-.f64 1 (log.f64 (+.f64 -1 x))) (log.f64 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 1 x))) y)) 1) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (-.f64 1 x))))","(-.f64 (fma.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 1 x))) y) 1) (+.f64 (log.f64 (-.f64 1 x)) (log.f64 (/.f64 -1 y))))","(-.f64 (+.f64 1 (/.f64 -1 y)) (+.f64 (log1p.f64 (neg.f64 x)) (log.f64 (/.f64 -1 y))))","(+.f64 (/.f64 -1 y) (+.f64 (-.f64 1 (log.f64 (+.f64 -1 x))) (log.f64 y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 1 x))) y)) (+.f64 1 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x))) (*.f64 -1 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 y 2))))) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (-.f64 1 x))))","(-.f64 (+.f64 (fma.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 1 x))) y) 1) (*.f64 -1/2 (/.f64 (fma.f64 2 (/.f64 (-.f64 1 x) (-.f64 1 x)) (neg.f64 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 (-.f64 1 x) 2)))) (*.f64 y y)))) (+.f64 (log.f64 (-.f64 1 x)) (log.f64 (/.f64 -1 y))))","(+.f64 (/.f64 -1 y) (+.f64 1 (-.f64 (/.f64 -1/2 (*.f64 y y)) (+.f64 (log1p.f64 (neg.f64 x)) (log.f64 (/.f64 -1 y))))))","(+.f64 (/.f64 -1 y) (+.f64 1 (+.f64 (/.f64 -1/2 (*.f64 y y)) (-.f64 (log.f64 y) (log.f64 (+.f64 -1 x))))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 1 x))) y)) (+.f64 1 (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x))) (*.f64 -1 (/.f64 (pow.f64 (-.f64 x 1) 2) (pow.f64 (-.f64 1 x) 2)))) (pow.f64 y 2))) (*.f64 1/6 (/.f64 (+.f64 (*.f64 6 (/.f64 (-.f64 x 1) (-.f64 1 x))) (+.f64 (*.f64 2 (/.f64 (pow.f64 (-.f64 x 1) 3) (pow.f64 (-.f64 1 x) 3))) (*.f64 -6 (/.f64 (*.f64 (-.f64 x 1) (+.f64 1 (*.f64 -1 x))) (pow.f64 (-.f64 1 x) 2))))) (pow.f64 y 3)))))) (+.f64 (log.f64 (/.f64 -1 y)) (log.f64 (-.f64 1 x))))","(-.f64 (+.f64 (fma.f64 -1 (/.f64 (-.f64 (/.f64 1 (-.f64 1 x)) (/.f64 x (-.f64 1 x))) y) 1) (fma.f64 -1/2 (/.f64 (fma.f64 2 (/.f64 (-.f64 1 x) (-.f64 1 x)) (neg.f64 (/.f64 (pow.f64 (+.f64 x -1) 2) (pow.f64 (-.f64 1 x) 2)))) (*.f64 y y)) (*.f64 1/6 (/.f64 (fma.f64 6 (/.f64 (+.f64 x -1) (-.f64 1 x)) (fma.f64 2 (/.f64 (pow.f64 (+.f64 x -1) 3) (pow.f64 (-.f64 1 x) 3)) (*.f64 -6 (/.f64 (+.f64 x -1) (/.f64 (pow.f64 (-.f64 1 x) 2) (-.f64 1 x)))))) (pow.f64 y 3))))) (+.f64 (log.f64 (-.f64 1 x)) (log.f64 (/.f64 -1 y))))","(+.f64 (+.f64 1 (/.f64 -1 y)) (-.f64 (fma.f64 1/6 (/.f64 (fma.f64 6 (/.f64 (+.f64 -1 x) (-.f64 1 x)) (fma.f64 2 (/.f64 (pow.f64 (+.f64 -1 x) 3) (pow.f64 (-.f64 1 x) 3)) 6)) (pow.f64 y 3)) (/.f64 -1/2 (*.f64 y y))) (+.f64 (log1p.f64 (neg.f64 x)) (log.f64 (/.f64 -1 y)))))","(+.f64 (+.f64 (+.f64 1 (/.f64 -1 y)) (+.f64 (/.f64 -1/3 (pow.f64 y 3)) (/.f64 -1/2 (*.f64 y y)))) (-.f64 (log.f64 y) (log.f64 (+.f64 -1 x))))"]],"stop":[["node limit",1]],"time":61.296875,"type":"simplify"},{"compiler":[[9058,6475]],"time":100.343994140625,"type":"eval"},{"alts":[["(-.f64 1 (log.f64 (pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2)))","next",16.647567933854113],["(-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))","done",16.623466664317228],["(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))","done",16.635185414317228],["(-.f64 1 (log.f64 (+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y)))))","fresh",40.058512038685755]],"compiler":[[17,14],[12,9],[14,11],[26,19],[17,14],[26,19]],"count":[[355,4]],"kept":[{"done":[1,1],"fresh":[3,0],"new":[350,2],"picked":[1,1]}],"min-error":[0],"time":133.51904296875,"type":"prune"},{"compiler":[[78,49]],"locations":[["(sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))",0.03515625,true],["(pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2)",0.209316259768442,true],["(-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))",3.3405679942076323,false],["(log.f64 (pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2))",4.45178540324666,true]],"time":17.25390625,"type":"localize"},{"count":[[3,24]],"series":[["(sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))","y","-inf",0.485107421875],["(sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))","y","inf",0.476806640625],["(sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))","y","0",0.44091796875],["(sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))","x","-inf",0.466064453125],["(sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))","x","inf",0.4541015625],["(sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))","x","0",0.391845703125],["(pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2)","y","-inf",2.141845703125],["(pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2)","y","inf",0.81396484375],["(pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2)","y","0",0.301025390625],["(pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2)","x","-inf",0.60302734375],["(pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2)","x","inf",0.60302734375],["(pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2)","x","0",1.488037109375],["(log.f64 (pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2))","y","-inf",2.151123046875],["(log.f64 (pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2))","y","inf",2.679931640625],["(log.f64 (pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2))","y","0",1.236083984375],["(log.f64 (pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2))","x","-inf",3.360107421875],["(log.f64 (pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2))","x","inf",2.179931640625],["(log.f64 (pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2))","x","0",0.81298828125]],"time":21.406005859375,"type":"series"},{"count":[[3,136]],"egraph":[[2,3558,42,0.028770375],[1,272,42,0.004725625],[0,12,43,0.000350584]],"inputs":[["(log.f64 (pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2))","(pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2)","(sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) (log.f64 (cbrt.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) (log.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1/6) (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (neg.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3))) (log.f64 (/.f64 1 (fma.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log1p.f64 (neg.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2))) (log.f64 (/.f64 1 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (cbrt.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 2))) (*.f64 1/3 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/4 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) (log.f64 (*.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1/4) (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1/4) 3)) (*.f64 1/4 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) (cbrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))) (log.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1/6)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (log.f64 (/.f64 (fma.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1) (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (log.f64 (/.f64 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log1p.f64 (neg.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3))) (log1p.f64 (+.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log1p.f64 (neg.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2))) (log1p.f64 (/.f64 (-.f64 x y) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (neg.f64 (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3)))) (log.f64 (neg.f64 (fma.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (neg.f64 (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2)))) (log.f64 (neg.f64 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 1 (pow.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 3))) (log.f64 (+.f64 1 (-.f64 (pow.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 2) (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (-.f64 1 (pow.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 2))) (log.f64 (-.f64 1 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2) (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (*.f64 2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 1/3 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (*.f64 3 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (log.f64 (/.f64 (fma.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1) (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (log.f64 (/.f64 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (*.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) 2) (cbrt.f64 (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (sqrt.f64 (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 (/.f64 x (-.f64 1 y))) (/.f64 y (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (fma.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1)) (/.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3) (fma.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) (/.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) (cbrt.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) (*.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1/6) (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 2)) (cbrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1/4) (*.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1/4) (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3)) (/.f64 1 (fma.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2)) (/.f64 1 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1/4) 3) (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) (cbrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))) (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (E.f64) (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (pow.f64 (E.f64) (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (E.f64) (log.f64 (cbrt.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 2)))) (pow.f64 (E.f64) (*.f64 1/3 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 2) (*.f64 1/3 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (pow.f64 (exp.f64 2) (log.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1/6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (exp.f64 2) (*.f64 1/4 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (pow.f64 (exp.f64 2) (*.f64 1/4 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1) (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3)) (fma.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3))) (neg.f64 (fma.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2))) (neg.f64 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 3)) (+.f64 1 (-.f64 (pow.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 2) (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 2)) (-.f64 1 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (E.f64) (exp.f64 (log1p.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))) (E.f64))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (E.f64) (log1p.f64 (neg.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3)))) (pow.f64 (E.f64) (log1p.f64 (+.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (E.f64) (log1p.f64 (neg.f64 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2)))) (pow.f64 (E.f64) (log1p.f64 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 x y) (neg.f64 (/.f64 1 (-.f64 1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))) 2) (neg.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))) (neg.f64 (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (-.f64 x y)) (/.f64 1 (-.f64 1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 2) (cbrt.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) (sqrt.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 (-.f64 x y) (-.f64 1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))) 2)) (cbrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y)))) (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))) 1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))) (log.f64 (sqrt.f64 (exp.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1/6) (cbrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1/4) (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3))) (hypot.f64 1 (hypot.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) (sqrt.f64 (/.f64 (-.f64 x y) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 1 (pow.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 2))) (sqrt.f64 (+.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (*.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 2) (*.f64 (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 2) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 3) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1/6) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 2)) (*.f64 (cbrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))) (*.f64 (sqrt.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 1 (sqrt.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y))) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/2 (log1p.f64 (/.f64 (neg.f64 (-.f64 x y)) (-.f64 1 y)))) 1))))))"]],"rules":[["egg-rr",34],["egg-rr",54],["egg-rr",48]],"stop":[["node limit",1]],"time":57.9912109375,"type":"rewrite"},{"count":[[160,179]],"egraph":[[2,2430,1122,0.016267584],[1,601,1258,0.004455251],[0,177,1527,0.000815584]],"inputs":[["(log.f64 (+.f64 1 (/.f64 y (-.f64 1 y))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))) (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)))) (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y))))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 3)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)))) (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))))))","(log.f64 (-.f64 1 x))","(+.f64 (log.f64 (-.f64 1 x)) (*.f64 y (+.f64 (*.f64 -1 (/.f64 x (-.f64 1 x))) (/.f64 1 (-.f64 1 x)))))","(+.f64 (log.f64 (-.f64 1 x)) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2))) (*.f64 2 (/.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1 x) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (-.f64 1 x))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 x)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2)) (-.f64 1 x)))))) (*.f64 y (+.f64 (*.f64 -1 (/.f64 x (-.f64 1 x))) (/.f64 1 (-.f64 1 x))))))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 3) (pow.f64 (-.f64 1 x) 3))) (+.f64 (*.f64 -6 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 (+.f64 1 (+.f64 (*.f64 -1 x) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (-.f64 1 x))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 x)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2))) (pow.f64 (-.f64 1 x) 2))) (*.f64 6 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x))))))) (+.f64 (log.f64 (-.f64 1 x)) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2))) (*.f64 2 (/.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1 x) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (-.f64 1 x))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 x)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2)) (-.f64 1 x)))))) (*.f64 y (+.f64 (*.f64 -1 (/.f64 x (-.f64 1 x))) (/.f64 1 (-.f64 1 x)))))))","(+.f64 1 (/.f64 y (-.f64 1 y)))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (*.f64 -1 (/.f64 x (-.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (+.f64 (*.f64 (+.f64 (*.f64 1/64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4)))) (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4)))) (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4)))) (pow.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (/.f64 1 (pow.f64 (-.f64 1 y) 2)))) 2))))) (pow.f64 x 4)) (*.f64 -1 (/.f64 x (-.f64 1 y))))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (+.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 4) (pow.f64 (-.f64 1 y) 5)))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4)))) (pow.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (/.f64 1 (pow.f64 (-.f64 1 y) 2)))) 2)) (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))))) (+.f64 (*.f64 1/64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 4) (pow.f64 (-.f64 1 y) 5)))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4)))) (pow.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (/.f64 1 (pow.f64 (-.f64 1 y) 2)))) 2)) (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))))) (pow.f64 x 5)) (+.f64 (*.f64 (+.f64 (*.f64 1/64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4)))) (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4)))) (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4)))) (pow.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (/.f64 1 (pow.f64 (-.f64 1 y) 2)))) 2))))) (pow.f64 x 4)) (*.f64 -1 (/.f64 x (-.f64 1 y)))))))","(-.f64 1 x)","(-.f64 (+.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 x)))) x)","(-.f64 (+.f64 (*.f64 (pow.f64 y 2) (-.f64 (+.f64 1 (+.f64 (*.f64 -1 x) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (-.f64 1 x))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 x)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2))) (+.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 x))))) x)","(-.f64 (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 (*.f64 -1 x))) (+.f64 (*.f64 (pow.f64 y 2) (-.f64 (+.f64 1 (+.f64 (*.f64 -1 x) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (-.f64 1 x))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 x)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2))) (+.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 x)))))) x)","(sqrt.f64 (+.f64 1 (/.f64 y (-.f64 1 y))))","(+.f64 (sqrt.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 y (-.f64 1 y))))) (/.f64 x (-.f64 1 y)))))","(+.f64 (sqrt.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 1 y) 2)))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 y (-.f64 1 y))))) (/.f64 x (-.f64 1 y))))))","(+.f64 (sqrt.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 1 y) 2)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 y (-.f64 1 y))))) (/.f64 x (-.f64 1 y)))) (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 5))) (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 1 y) 3)))))))","(sqrt.f64 (-.f64 1 x))","(+.f64 (sqrt.f64 (-.f64 1 x)) (*.f64 1/2 (*.f64 (*.f64 y (+.f64 1 (*.f64 -1 x))) (sqrt.f64 (/.f64 1 (-.f64 1 x))))))","(+.f64 (sqrt.f64 (-.f64 1 x)) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (*.f64 -1 x)) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 x)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2)) (pow.f64 y 2)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) (*.f64 1/2 (*.f64 (*.f64 y (+.f64 1 (*.f64 -1 x))) (sqrt.f64 (/.f64 1 (-.f64 1 x)))))))","(+.f64 (sqrt.f64 (-.f64 1 x)) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (*.f64 -1 x)) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 x)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2)) (pow.f64 y 2)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 y 3) (-.f64 (+.f64 1 (*.f64 -1 x)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 1 (*.f64 -1 x)) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 x)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2)) (+.f64 1 (*.f64 -1 x))) (-.f64 1 x))))) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) (*.f64 1/2 (*.f64 (*.f64 y (+.f64 1 (*.f64 -1 x))) (sqrt.f64 (/.f64 1 (-.f64 1 x))))))))"]],"method":["egg-herbie"],"outputs":[["(log.f64 (+.f64 1 (/.f64 y (-.f64 1 y))))","(log1p.f64 (/.f64 y (-.f64 1 y)))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))) (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))))","(fma.f64 -1 (/.f64 x (*.f64 (-.f64 1 y) (+.f64 1 (/.f64 y (-.f64 1 y))))) (log1p.f64 (/.f64 y (-.f64 1 y))))","(-.f64 (log1p.f64 (/.f64 y (-.f64 1 y))) (/.f64 x (*.f64 (-.f64 1 y) (+.f64 1 (/.f64 y (-.f64 1 y))))))","(-.f64 (log1p.f64 (/.f64 y (-.f64 1 y))) (/.f64 (/.f64 x (-.f64 1 y)) (+.f64 1 (/.f64 y (-.f64 1 y)))))","(+.f64 (*.f64 -1 (/.f64 x (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)))) (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y))))))","(fma.f64 -1 (/.f64 x (*.f64 (-.f64 1 y) (+.f64 1 (/.f64 y (-.f64 1 y))))) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2))) (log1p.f64 (/.f64 y (-.f64 1 y)))))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 x (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2)) (/.f64 x (pow.f64 (-.f64 1 y) 2))) (log1p.f64 (/.f64 y (-.f64 1 y)))) (/.f64 x (*.f64 (-.f64 1 y) (+.f64 1 (/.f64 y (-.f64 1 y))))))","(-.f64 (fma.f64 -1/2 (*.f64 (/.f64 x (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2)) (/.f64 x (pow.f64 (-.f64 1 y) 2))) (log1p.f64 (/.f64 y (-.f64 1 y)))) (/.f64 (/.f64 x (-.f64 1 y)) (+.f64 1 (/.f64 y (-.f64 1 y)))))","(+.f64 (*.f64 -1/3 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 3)))) (+.f64 (*.f64 -1 (/.f64 x (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2)))) (log.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))))))","(fma.f64 -1/3 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 3))) (fma.f64 -1 (/.f64 x (*.f64 (-.f64 1 y) (+.f64 1 (/.f64 y (-.f64 1 y))))) (fma.f64 -1/2 (/.f64 (*.f64 x x) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2) (pow.f64 (-.f64 1 y) 2))) (log1p.f64 (/.f64 y (-.f64 1 y))))))","(fma.f64 -1/3 (/.f64 (pow.f64 x 3) (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 3))) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 x (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2)) (/.f64 x (pow.f64 (-.f64 1 y) 2))) (log1p.f64 (/.f64 y (-.f64 1 y)))) (/.f64 x (*.f64 (-.f64 1 y) (+.f64 1 (/.f64 y (-.f64 1 y)))))))","(fma.f64 -1/3 (/.f64 (pow.f64 (/.f64 x (+.f64 1 (/.f64 y (-.f64 1 y)))) 3) (pow.f64 (-.f64 1 y) 3)) (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 x (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 2)) (/.f64 x (pow.f64 (-.f64 1 y) 2))) (log1p.f64 (/.f64 y (-.f64 1 y)))) (/.f64 (/.f64 x (-.f64 1 y)) (+.f64 1 (/.f64 y (-.f64 1 y))))))","(log.f64 (-.f64 1 x))","(log1p.f64 (neg.f64 x))","(+.f64 (log.f64 (-.f64 1 x)) (*.f64 y (+.f64 (*.f64 -1 (/.f64 x (-.f64 1 x))) (/.f64 1 (-.f64 1 x)))))","(+.f64 (log.f64 (-.f64 1 x)) (*.f64 y (fma.f64 -1 (/.f64 x (-.f64 1 x)) (/.f64 1 (-.f64 1 x)))))","(+.f64 y (log1p.f64 (neg.f64 x)))","(+.f64 (log.f64 (-.f64 1 x)) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2))) (*.f64 2 (/.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1 x) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (-.f64 1 x))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 x)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2)) (-.f64 1 x)))))) (*.f64 y (+.f64 (*.f64 -1 (/.f64 x (-.f64 1 x))) (/.f64 1 (-.f64 1 x))))))","(+.f64 (log.f64 (-.f64 1 x)) (fma.f64 1/2 (*.f64 (*.f64 y y) (fma.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 1 x) 2)) (*.f64 2 (/.f64 (-.f64 (+.f64 (-.f64 1 x) (*.f64 1/4 (/.f64 (pow.f64 (-.f64 1 x) 2) (-.f64 1 x)))) (pow.f64 (*.f64 1/2 (*.f64 (-.f64 1 x) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2)) (-.f64 1 x))))) (*.f64 y (fma.f64 -1 (/.f64 x (-.f64 1 x)) (/.f64 1 (-.f64 1 x))))))","(+.f64 (log1p.f64 (neg.f64 x)) (fma.f64 1/2 (*.f64 y (*.f64 y (fma.f64 2 (/.f64 (+.f64 1 (-.f64 (-.f64 (*.f64 1/4 (/.f64 (-.f64 1 x) 1)) x) (pow.f64 (*.f64 (-.f64 1 x) (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 x))) 1/2)) 2))) (-.f64 1 x)) -1))) y))","(+.f64 (log1p.f64 (neg.f64 x)) (fma.f64 1/2 (*.f64 y (*.f64 y (fma.f64 2 (+.f64 1 (*.f64 (*.f64 1/4 (-.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 1 x)) (pow.f64 (-.f64 1 x) 2)))) (/.f64 1 (-.f64 1 x)))) -1))) y))","(+.f64 (*.f64 1/6 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 2 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 3) (pow.f64 (-.f64 1 x) 3))) (+.f64 (*.f64 -6 (/.f64 (*.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 (+.f64 1 (+.f64 (*.f64 -1 x) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (-.f64 1 x))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 x)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2))) (pow.f64 (-.f64 1 x) 2))) (*.f64 6 (/.f64 (+.f64 1 (*.f64 -1 x)) (-.f64 1 x))))))) (+.f64 (log.f64 (-.f64 1 x)) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 -1 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (pow.f64 (-.f64 1 x) 2))) (*.f64 2 (/.f64 (-.f64 (+.f64 1 (+.f64 (*.f64 -1 x) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (-.f64 1 x))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 x)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2)) (-.f64 1 x)))))) (*.f64 y (+.f64 (*.f64 -1 (/.f64 x (-.f64 1 x))) (/.f64 1 (-.f64 1 x)))))))","(fma.f64 1/6 (*.f64 (pow.f64 y 3) (fma.f64 2 (/.f64 (pow.f64 (-.f64 1 x) 3) (pow.f64 (-.f64 1 x) 3)) (fma.f64 -6 (/.f64 (*.f64 (-.f64 1 x) (-.f64 (+.f64 (-.f64 1 x) (*.f64 1/4 (/.f64 (pow.f64 (-.f64 1 x) 2) (-.f64 1 x)))) (pow.f64 (*.f64 1/2 (*.f64 (-.f64 1 x) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2))) (pow.f64 (-.f64 1 x) 2)) (*.f64 6 (/.f64 (-.f64 1 x) (-.f64 1 x)))))) (+.f64 (log.f64 (-.f64 1 x)) (fma.f64 1/2 (*.f64 (*.f64 y y) (fma.f64 -1 (/.f64 (pow.f64 (-.f64 1 x) 2) (pow.f64 (-.f64 1 x) 2)) (*.f64 2 (/.f64 (-.f64 (+.f64 (-.f64 1 x) (*.f64 1/4 (/.f64 (pow.f64 (-.f64 1 x) 2) (-.f64 1 x)))) (pow.f64 (*.f64 1/2 (*.f64 (-.f64 1 x) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2)) (-.f64 1 x))))) (*.f64 y (fma.f64 -1 (/.f64 x (-.f64 1 x)) (/.f64 1 (-.f64 1 x)))))))","(+.f64 (fma.f64 1/2 (*.f64 y (*.f64 y (fma.f64 2 (/.f64 (+.f64 1 (-.f64 (-.f64 (*.f64 1/4 (/.f64 (-.f64 1 x) 1)) x) (pow.f64 (*.f64 (-.f64 1 x) (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 x))) 1/2)) 2))) (-.f64 1 x)) -1))) y) (fma.f64 1/6 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 -6 (/.f64 (+.f64 1 (-.f64 (-.f64 (*.f64 1/4 (/.f64 (-.f64 1 x) 1)) x) (pow.f64 (*.f64 (-.f64 1 x) (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 x))) 1/2)) 2))) (/.f64 (-.f64 1 x) 1))) 8)) (log1p.f64 (neg.f64 x))))","(+.f64 (fma.f64 1/2 (*.f64 y (*.f64 y (fma.f64 2 (+.f64 1 (*.f64 (*.f64 1/4 (-.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 1 x)) (pow.f64 (-.f64 1 x) 2)))) (/.f64 1 (-.f64 1 x)))) -1))) y) (fma.f64 1/6 (*.f64 (pow.f64 y 3) (+.f64 (*.f64 (+.f64 1 (*.f64 (*.f64 1/4 (-.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 1 x)) (pow.f64 (-.f64 1 x) 2)))) (/.f64 1 (-.f64 1 x)))) -6) 8)) (log1p.f64 (neg.f64 x))))","(+.f64 1 (/.f64 y (-.f64 1 y)))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (*.f64 -1 (/.f64 x (-.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (/.f64 (neg.f64 x) (-.f64 1 y))))","(+.f64 1 (-.f64 (/.f64 y (-.f64 1 y)) (/.f64 x (-.f64 1 y))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (+.f64 (*.f64 (+.f64 (*.f64 1/64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4)))) (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4)))) (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4)))) (pow.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (/.f64 1 (pow.f64 (-.f64 1 y) 2)))) 2))))) (pow.f64 x 4)) (*.f64 -1 (/.f64 x (-.f64 1 y))))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (fma.f64 (+.f64 (/.f64 1/64 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4))) (+.f64 (/.f64 1/16 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4))) (neg.f64 (+.f64 (/.f64 1/16 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4))) (pow.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (/.f64 1 (pow.f64 (-.f64 1 y) 2)))) 2))))) (pow.f64 x 4) (/.f64 (neg.f64 x) (-.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (-.f64 (*.f64 (-.f64 (*.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4))) 5/64) (+.f64 (/.f64 1/16 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4))) (pow.f64 (*.f64 -1/8 (/.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (pow.f64 (-.f64 1 y) 2))) 2))) (pow.f64 x 4)) (/.f64 x (-.f64 1 y)))))","(+.f64 1 (+.f64 (-.f64 (/.f64 y (-.f64 1 y)) (/.f64 x (-.f64 1 y))) (*.f64 (-.f64 (/.f64 1/64 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4))) (pow.f64 (*.f64 -1/8 (/.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (pow.f64 (-.f64 1 y) 2))) 2)) (pow.f64 x 4))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (+.f64 (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 1/64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 4) (pow.f64 (-.f64 1 y) 5)))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4)))) (pow.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (/.f64 1 (pow.f64 (-.f64 1 y) 2)))) 2)) (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))))) (+.f64 (*.f64 1/64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 4) (pow.f64 (-.f64 1 y) 5)))) (*.f64 1/2 (/.f64 (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4)))) (pow.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (/.f64 1 (pow.f64 (-.f64 1 y) 2)))) 2)) (*.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) (-.f64 1 y)))))) (pow.f64 x 5)) (+.f64 (*.f64 (+.f64 (*.f64 1/64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4)))) (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4)))) (*.f64 -1 (+.f64 (*.f64 1/16 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4)))) (pow.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (/.f64 1 (pow.f64 (-.f64 1 y) 2)))) 2))))) (pow.f64 x 4)) (*.f64 -1 (/.f64 x (-.f64 1 y)))))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (fma.f64 (+.f64 (/.f64 1/64 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4))) (+.f64 (/.f64 1/16 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4))) (neg.f64 (+.f64 (/.f64 1/16 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4))) (pow.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (/.f64 1 (pow.f64 (-.f64 1 y) 2)))) 2))))) (pow.f64 x 4) (/.f64 (neg.f64 x) (-.f64 1 y)))))","(+.f64 1 (+.f64 (/.f64 y (-.f64 1 y)) (-.f64 (*.f64 (-.f64 (*.f64 (/.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4))) 5/64) (+.f64 (/.f64 1/16 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4))) (pow.f64 (*.f64 -1/8 (/.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (pow.f64 (-.f64 1 y) 2))) 2))) (pow.f64 x 4)) (/.f64 x (-.f64 1 y)))))","(+.f64 1 (+.f64 (-.f64 (/.f64 y (-.f64 1 y)) (/.f64 x (-.f64 1 y))) (*.f64 (-.f64 (/.f64 1/64 (*.f64 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3) (pow.f64 (-.f64 1 y) 4))) (pow.f64 (*.f64 -1/8 (/.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (pow.f64 (-.f64 1 y) 2))) 2)) (pow.f64 x 4))))","(-.f64 1 x)","(-.f64 (+.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 x)))) x)","(+.f64 1 (-.f64 (*.f64 y (-.f64 1 x)) x))","(-.f64 (fma.f64 y (-.f64 1 x) 1) x)","(*.f64 (+.f64 y 1) (-.f64 1 x))","(-.f64 (+.f64 (*.f64 (pow.f64 y 2) (-.f64 (+.f64 1 (+.f64 (*.f64 -1 x) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (-.f64 1 x))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 x)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2))) (+.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 x))))) x)","(-.f64 (fma.f64 (*.f64 y y) (-.f64 (+.f64 (-.f64 1 x) (*.f64 1/4 (/.f64 (pow.f64 (-.f64 1 x) 2) (-.f64 1 x)))) (pow.f64 (*.f64 1/2 (*.f64 (-.f64 1 x) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2)) (+.f64 1 (*.f64 y (-.f64 1 x)))) x)","(fma.f64 (*.f64 y y) (+.f64 1 (-.f64 (-.f64 (*.f64 1/4 (/.f64 (-.f64 1 x) 1)) x) (pow.f64 (*.f64 (-.f64 1 x) (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 x))) 1/2)) 2))) (-.f64 (fma.f64 y (-.f64 1 x) 1) x))","(fma.f64 (*.f64 y y) (+.f64 (-.f64 1 x) (*.f64 1/4 (-.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 1 x)) (pow.f64 (-.f64 1 x) 2))))) (*.f64 (+.f64 y 1) (-.f64 1 x)))","(-.f64 (+.f64 (*.f64 (pow.f64 y 3) (+.f64 1 (*.f64 -1 x))) (+.f64 (*.f64 (pow.f64 y 2) (-.f64 (+.f64 1 (+.f64 (*.f64 -1 x) (*.f64 1/4 (/.f64 (pow.f64 (+.f64 1 (*.f64 -1 x)) 2) (-.f64 1 x))))) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 x)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2))) (+.f64 1 (*.f64 y (+.f64 1 (*.f64 -1 x)))))) x)","(-.f64 (fma.f64 (pow.f64 y 3) (-.f64 1 x) (fma.f64 (*.f64 y y) (-.f64 (+.f64 (-.f64 1 x) (*.f64 1/4 (/.f64 (pow.f64 (-.f64 1 x) 2) (-.f64 1 x)))) (pow.f64 (*.f64 1/2 (*.f64 (-.f64 1 x) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2)) (+.f64 1 (*.f64 y (-.f64 1 x))))) x)","(fma.f64 (-.f64 1 x) (pow.f64 y 3) (fma.f64 (*.f64 y y) (+.f64 1 (-.f64 (-.f64 (*.f64 1/4 (/.f64 (-.f64 1 x) 1)) x) (pow.f64 (*.f64 (-.f64 1 x) (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 x))) 1/2)) 2))) (-.f64 (fma.f64 y (-.f64 1 x) 1) x)))","(-.f64 (+.f64 (fma.f64 (*.f64 y y) (+.f64 (-.f64 1 x) (*.f64 1/4 (-.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 1 x)) (pow.f64 (-.f64 1 x) 2))))) 1) (*.f64 (-.f64 1 x) (+.f64 y (pow.f64 y 3)))) x)","(sqrt.f64 (+.f64 1 (/.f64 y (-.f64 1 y))))","(+.f64 (sqrt.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 y (-.f64 1 y))))) (/.f64 x (-.f64 1 y)))))","(+.f64 (sqrt.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))) (*.f64 -1/2 (*.f64 (/.f64 x (-.f64 1 y)) (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 y (-.f64 1 y))))))))","(fma.f64 -1/2 (*.f64 (/.f64 x (-.f64 1 y)) (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 y (-.f64 1 y)))))) (sqrt.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))))","(+.f64 (sqrt.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 1 y) 2)))) (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 y (-.f64 1 y))))) (/.f64 x (-.f64 1 y))))))","(+.f64 (sqrt.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))) (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (/.f64 (*.f64 x x) (pow.f64 (-.f64 1 y) 2))) (*.f64 -1/2 (*.f64 (/.f64 x (-.f64 1 y)) (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 y (-.f64 1 y)))))))))","(+.f64 (sqrt.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))) (fma.f64 -1/2 (*.f64 (/.f64 x (-.f64 1 y)) (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 y (-.f64 1 y)))))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (*.f64 (/.f64 x (/.f64 (pow.f64 (-.f64 1 y) 2) x)) -1/8))))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 x (-.f64 1 y)) (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 y (-.f64 1 y)))))) (sqrt.f64 (+.f64 1 (/.f64 y (-.f64 1 y))))) (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (*.f64 (*.f64 (/.f64 x (pow.f64 (-.f64 1 y) 2)) x) -1/8)))","(+.f64 (sqrt.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))) (+.f64 (*.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (/.f64 (pow.f64 x 2) (pow.f64 (-.f64 1 y) 2)))) (+.f64 (*.f64 -1/2 (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 y (-.f64 1 y))))) (/.f64 x (-.f64 1 y)))) (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 5))) (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 1 y) 3)))))))","(+.f64 (sqrt.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))) (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (/.f64 (*.f64 x x) (pow.f64 (-.f64 1 y) 2))) (fma.f64 -1/2 (*.f64 (/.f64 x (-.f64 1 y)) (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 y (-.f64 1 y)))))) (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 5))) (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 1 y) 3)))))))","(+.f64 (sqrt.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))) (fma.f64 (*.f64 -1/8 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3)))) (/.f64 x (/.f64 (pow.f64 (-.f64 1 y) 2) x)) (fma.f64 -1/2 (*.f64 (/.f64 x (-.f64 1 y)) (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 y (-.f64 1 y)))))) (*.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 5))) (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 1 y) 3)))))))","(+.f64 (sqrt.f64 (+.f64 1 (/.f64 y (-.f64 1 y)))) (fma.f64 -1/8 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 3))) (*.f64 (/.f64 x (pow.f64 (-.f64 1 y) 2)) x)) (fma.f64 -1/16 (*.f64 (sqrt.f64 (/.f64 1 (pow.f64 (+.f64 1 (/.f64 y (-.f64 1 y))) 5))) (pow.f64 (/.f64 x (-.f64 1 y)) 3)) (*.f64 (sqrt.f64 (/.f64 1 (+.f64 1 (/.f64 y (-.f64 1 y))))) (*.f64 (/.f64 x (-.f64 1 y)) -1/2)))))","(sqrt.f64 (-.f64 1 x))","(+.f64 (sqrt.f64 (-.f64 1 x)) (*.f64 1/2 (*.f64 (*.f64 y (+.f64 1 (*.f64 -1 x))) (sqrt.f64 (/.f64 1 (-.f64 1 x))))))","(+.f64 (sqrt.f64 (-.f64 1 x)) (*.f64 1/2 (*.f64 y (*.f64 (-.f64 1 x) (sqrt.f64 (/.f64 1 (-.f64 1 x)))))))","(fma.f64 (*.f64 (*.f64 1/2 y) (-.f64 1 x)) (sqrt.f64 (/.f64 1 (-.f64 1 x))) (sqrt.f64 (-.f64 1 x)))","(fma.f64 1/2 (*.f64 (-.f64 1 x) (*.f64 y (sqrt.f64 (/.f64 1 (-.f64 1 x))))) (sqrt.f64 (-.f64 1 x)))","(+.f64 (sqrt.f64 (-.f64 1 x)) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (*.f64 -1 x)) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 x)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2)) (pow.f64 y 2)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) (*.f64 1/2 (*.f64 (*.f64 y (+.f64 1 (*.f64 -1 x))) (sqrt.f64 (/.f64 1 (-.f64 1 x)))))))","(+.f64 (sqrt.f64 (-.f64 1 x)) (*.f64 1/2 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 x))) (*.f64 (*.f64 y y) (-.f64 (-.f64 1 x) (pow.f64 (*.f64 1/2 (*.f64 (-.f64 1 x) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2)))) (*.f64 y (*.f64 (-.f64 1 x) (sqrt.f64 (/.f64 1 (-.f64 1 x))))))))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 x))) (+.f64 (*.f64 (*.f64 y y) (-.f64 1 (+.f64 x (pow.f64 (*.f64 (-.f64 1 x) (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 x))) 1/2)) 2)))) (*.f64 y (-.f64 1 x)))) (sqrt.f64 (-.f64 1 x)))","(fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 x))) (*.f64 y (+.f64 (*.f64 (-.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 1 x)) (*.f64 (pow.f64 (-.f64 1 x) 2) 1/4))) y) (-.f64 1 x)))) (sqrt.f64 (-.f64 1 x)))","(+.f64 (sqrt.f64 (-.f64 1 x)) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (-.f64 (+.f64 1 (*.f64 -1 x)) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 x)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2)) (pow.f64 y 2)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) (+.f64 (*.f64 1/2 (*.f64 (*.f64 (pow.f64 y 3) (-.f64 (+.f64 1 (*.f64 -1 x)) (*.f64 1/2 (/.f64 (*.f64 (-.f64 (+.f64 1 (*.f64 -1 x)) (pow.f64 (*.f64 1/2 (*.f64 (+.f64 1 (*.f64 -1 x)) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2)) (+.f64 1 (*.f64 -1 x))) (-.f64 1 x))))) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) (*.f64 1/2 (*.f64 (*.f64 y (+.f64 1 (*.f64 -1 x))) (sqrt.f64 (/.f64 1 (-.f64 1 x))))))))","(+.f64 (sqrt.f64 (-.f64 1 x)) (fma.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 x))) (*.f64 (*.f64 y y) (-.f64 (-.f64 1 x) (pow.f64 (*.f64 1/2 (*.f64 (-.f64 1 x) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2)))) (*.f64 1/2 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 x))) (*.f64 (pow.f64 y 3) (-.f64 (-.f64 1 x) (*.f64 1/2 (/.f64 (-.f64 (-.f64 1 x) (pow.f64 (*.f64 1/2 (*.f64 (-.f64 1 x) (sqrt.f64 (/.f64 1 (-.f64 1 x))))) 2)) (/.f64 (-.f64 1 x) (-.f64 1 x))))))) (*.f64 y (*.f64 (-.f64 1 x) (sqrt.f64 (/.f64 1 (-.f64 1 x)))))))))","(+.f64 (sqrt.f64 (-.f64 1 x)) (*.f64 1/2 (+.f64 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 x))) (*.f64 (*.f64 y y) (-.f64 1 (+.f64 x (pow.f64 (*.f64 (-.f64 1 x) (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 x))) 1/2)) 2))))) (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 x))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 (-.f64 1 x) (*.f64 -1/2 (/.f64 (-.f64 1 (+.f64 x (pow.f64 (*.f64 (-.f64 1 x) (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 x))) 1/2)) 2))) 1)))) (*.f64 y (-.f64 1 x)))))))","(+.f64 (sqrt.f64 (-.f64 1 x)) (*.f64 1/2 (*.f64 (sqrt.f64 (/.f64 1 (-.f64 1 x))) (+.f64 (*.f64 y (*.f64 y (-.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 1 x)) (*.f64 (pow.f64 (-.f64 1 x) 2) 1/4))))) (+.f64 (*.f64 (pow.f64 y 3) (+.f64 (-.f64 1 x) (*.f64 -1/2 (-.f64 (-.f64 1 x) (*.f64 (/.f64 1 (-.f64 1 x)) (*.f64 (pow.f64 (-.f64 1 x) 2) 1/4)))))) (-.f64 y (*.f64 x y)))))))"]],"stop":[["node limit",1]],"time":38.9599609375,"type":"simplify"},{"compiler":[[7680,5585]],"time":86.787841796875,"type":"eval"},{"alts":[["(-.f64 1 (log.f64 (pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2)))","done",16.647567933854113],["(-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))","done",16.623466664317228],["(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))","done",16.635185414317228],["(-.f64 1 (log.f64 (+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y)))))","next",40.058512038685755]],"compiler":[[17,14],[12,9],[14,11],[26,19],[26,19]],"count":[[276,4]],"kept":[{"done":[2,2],"fresh":[1,1],"new":[272,0],"picked":[1,1]}],"min-error":[0],"time":92.6640625,"type":"prune"},{"compiler":[[115,73]],"locations":[["(/.f64 (+.f64 -1 x) (pow.f64 y 3))",2.2064036724142295,true],["(/.f64 (+.f64 -1 x) (*.f64 y y))",2.447012435768049,true],["(+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y)))",8.789062500000002,true],["(log.f64 (+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y))))",13.317159280495726,true]],"time":25.657958984375,"type":"localize"},{"count":[[4,96]],"series":[["(/.f64 (+.f64 -1 x) (pow.f64 y 3))","y","-inf",0.2412109375],["(/.f64 (+.f64 -1 x) (pow.f64 y 3))","y","inf",0.2021484375],["(/.f64 (+.f64 -1 x) (pow.f64 y 3))","y","0",0.3720703125],["(/.f64 (+.f64 -1 x) (pow.f64 y 3))","x","-inf",0.156982421875],["(/.f64 (+.f64 -1 x) (pow.f64 y 3))","x","inf",0.2939453125],["(/.f64 (+.f64 -1 x) (pow.f64 y 3))","x","0",0.2978515625],["(/.f64 (+.f64 -1 x) (*.f64 y y))","y","-inf",0.584228515625],["(/.f64 (+.f64 -1 x) (*.f64 y y))","y","inf",0.251953125],["(/.f64 (+.f64 -1 x) (*.f64 y y))","y","0",0.446044921875],["(/.f64 (+.f64 -1 x) (*.f64 y y))","x","-inf",0.157958984375],["(/.f64 (+.f64 -1 x) (*.f64 y y))","x","inf",0.304931640625],["(/.f64 (+.f64 -1 x) (*.f64 y y))","x","0",0.2939453125],["(+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y)))","y","-inf",0.239013671875],["(+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y)))","y","inf",0.248046875],["(+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y)))","y","0",0.3740234375],["(+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y)))","x","-inf",0.701904296875],["(+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y)))","x","inf",0.574951171875],["(+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y)))","x","0",0.85009765625],["(log.f64 (+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y))))","y","-inf",0.33984375],["(log.f64 (+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y))))","y","inf",0.299072265625],["(log.f64 (+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y))))","y","0",0.322998046875],["(log.f64 (+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y))))","x","-inf",0.525146484375],["(log.f64 (+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y))))","x","inf",0.593017578125],["(log.f64 (+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y))))","x","0",0.719970703125]],"time":9.761962890625,"type":"series"},{"count":[[4,217]],"egraph":[[2,5393,72,0.038016792],[1,332,72,0.007043833],[0,14,84,0.000393625]],"inputs":[["(log.f64 (+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y))))","(+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y)))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (log.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))))) (log.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))) (log.f64 (sqrt.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 3) (/.f64 (pow.f64 (+.f64 -1 x) 3) (pow.f64 y 6)))) (log.f64 (+.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2) (*.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) (-.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 3) (/.f64 (pow.f64 (+.f64 -1 x) 3) (pow.f64 y 6)))) (log.f64 (+.f64 (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2) (*.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) (*.f64 (+.f64 -1 x) (pow.f64 y -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) (log.f64 (-.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) (*.f64 (+.f64 -1 x) (pow.f64 y -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (log.f64 (/.f64 (+.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2) (*.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) (-.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3)))))) (+.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 3) (/.f64 (pow.f64 (+.f64 -1 x) 3) (pow.f64 y 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (log.f64 (/.f64 (-.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) (*.f64 (+.f64 -1 x) (pow.f64 y -2))) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 3) (/.f64 (pow.f64 (+.f64 -1 x) 3) (pow.f64 y 6))))) (log.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2) (*.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) (-.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4))))) (log.f64 (neg.f64 (-.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) (*.f64 (+.f64 -1 x) (pow.f64 y -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (fma.f64 (+.f64 -1 x) (pow.f64 y 3) (*.f64 (+.f64 -1 x) y)) (*.f64 y y)) (*.f64 (pow.f64 y 4) (+.f64 -1 x)))) (*.f64 6 (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 3) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 3)) (*.f64 y y)) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) (+.f64 -1 x)))) (log.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (-.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2)) (*.f64 y y)) (*.f64 (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))) (+.f64 -1 x)))) (log.f64 (*.f64 (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))) (*.f64 y y))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (fma.f64 (+.f64 -1 x) (pow.f64 y 3) (*.f64 (+.f64 -1 x) y)) y) (*.f64 (pow.f64 y 4) (/.f64 (+.f64 -1 x) y)))) (log.f64 (*.f64 (pow.f64 y 4) y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 3) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 3)) y) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) (/.f64 (+.f64 -1 x) y)))) (log.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (-.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2)) y) (*.f64 (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))) (/.f64 (+.f64 -1 x) y)))) (log.f64 (*.f64 (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))) y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (fma.f64 (+.f64 -1 x) (pow.f64 y 3) (*.f64 (+.f64 -1 x) y)) (/.f64 y (/.f64 (+.f64 -1 x) y))) (*.f64 (pow.f64 y 4) 1))) (log.f64 (*.f64 (pow.f64 y 4) (/.f64 y (/.f64 (+.f64 -1 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 3) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 3)) (/.f64 y (/.f64 (+.f64 -1 x) y))) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) 1))) (log.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) (/.f64 y (/.f64 (+.f64 -1 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (-.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2)) (/.f64 y (/.f64 (+.f64 -1 x) y))) (*.f64 (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))) 1))) (log.f64 (*.f64 (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))) (/.f64 y (/.f64 (+.f64 -1 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (fma.f64 (+.f64 -1 x) (pow.f64 y 3) (*.f64 (+.f64 -1 x) y)) (*.f64 y (neg.f64 y))) (*.f64 (pow.f64 y 4) (+.f64 1 (neg.f64 x))))) (log.f64 (*.f64 (pow.f64 y 4) (*.f64 y (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 3) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 3)) (*.f64 y (neg.f64 y))) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) (+.f64 1 (neg.f64 x))))) (log.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) (*.f64 y (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (-.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2)) (*.f64 y (neg.f64 y))) (*.f64 (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))) (+.f64 1 (neg.f64 x))))) (log.f64 (*.f64 (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))) (*.f64 y (neg.f64 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (+.f64 -1 x) (pow.f64 y 4)) (*.f64 (*.f64 y y) (fma.f64 (+.f64 -1 x) (pow.f64 y 3) (*.f64 (+.f64 -1 x) y))))) (*.f64 6 (log.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (/.f64 (+.f64 -1 x) y) (pow.f64 y 4)) (*.f64 y (fma.f64 (+.f64 -1 x) (pow.f64 y 3) (*.f64 (+.f64 -1 x) y))))) (log.f64 (*.f64 y (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (pow.f64 y 4) (*.f64 (/.f64 y (/.f64 (+.f64 -1 x) y)) (fma.f64 (+.f64 -1 x) (pow.f64 y 3) (*.f64 (+.f64 -1 x) y))))) (log.f64 (*.f64 (/.f64 y (/.f64 (+.f64 -1 x) y)) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (+.f64 1 (neg.f64 x)) (pow.f64 y 4)) (*.f64 (*.f64 y (neg.f64 y)) (fma.f64 (+.f64 -1 x) (pow.f64 y 3) (*.f64 (+.f64 -1 x) y))))) (log.f64 (*.f64 (*.f64 y (neg.f64 y)) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4))))) (*.f64 (*.f64 y y) (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 3) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 3))))) (log.f64 (*.f64 (*.f64 y y) (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (/.f64 (+.f64 -1 x) y) (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4))))) (*.f64 y (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 3) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 3))))) (log.f64 (*.f64 y (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) (*.f64 (/.f64 y (/.f64 (+.f64 -1 x) y)) (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 3) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 3))))) (log.f64 (*.f64 (/.f64 y (/.f64 (+.f64 -1 x) y)) (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (+.f64 1 (neg.f64 x)) (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4))))) (*.f64 (*.f64 y (neg.f64 y)) (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 3) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 3))))) (log.f64 (*.f64 (*.f64 y (neg.f64 y)) (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (+.f64 -1 x) (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3)))) (*.f64 (*.f64 y y) (-.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2))))) (log.f64 (*.f64 (*.f64 y y) (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3)))) (*.f64 y (-.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2))))) (log.f64 (*.f64 y (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))) (*.f64 (/.f64 y (/.f64 (+.f64 -1 x) y)) (-.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2))))) (log.f64 (*.f64 (/.f64 y (/.f64 (+.f64 -1 x) y)) (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (*.f64 (+.f64 1 (neg.f64 x)) (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3)))) (*.f64 (*.f64 y (neg.f64 y)) (-.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2))))) (log.f64 (*.f64 (*.f64 y (neg.f64 y)) (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 3) (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))) 3))) (log.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (*.f64 (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))) (*.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (-.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (*.f64 (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))) (log.f64 (-.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (-.f64 (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)) (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2))) (log.f64 (-.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (log.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))) (pow.f64 (cbrt.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))) 2) (cbrt.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))) (sqrt.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (log.f64 (sqrt.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (*.f64 3 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (log.f64 (/.f64 (+.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2) (*.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) (-.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3)))))) (+.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 3) (/.f64 (pow.f64 (+.f64 -1 x) 3) (pow.f64 y 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (log.f64 (/.f64 (-.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) (*.f64 (+.f64 -1 x) (pow.f64 y -2))) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (-.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2) (-.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) (*.f64 (+.f64 -1 x) (pow.f64 y -2)))) (/.f64 (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)) (-.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) (*.f64 (+.f64 -1 x) (pow.f64 y -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))) 2) (cbrt.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))) (sqrt.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 3) (/.f64 (pow.f64 (+.f64 -1 x) 3) (pow.f64 y 6))) (/.f64 1 (+.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2) (*.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) (-.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4))) (/.f64 1 (-.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) (*.f64 (+.f64 -1 x) (pow.f64 y -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2) (*.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) (-.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3)))))) (+.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 3) (/.f64 (pow.f64 (+.f64 -1 x) 3) (pow.f64 y 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) (*.f64 (+.f64 -1 x) (pow.f64 y -2))) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 3) (/.f64 (pow.f64 (+.f64 -1 x) 3) (pow.f64 y 6))) (+.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2) (*.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) (-.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 3) (/.f64 (pow.f64 (+.f64 -1 x) 3) (pow.f64 y 6))) (+.f64 (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2) (*.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) (*.f64 (+.f64 -1 x) (pow.f64 y -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4))) (-.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) (*.f64 (+.f64 -1 x) (pow.f64 y -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 3) (/.f64 (pow.f64 (+.f64 -1 x) 3) (pow.f64 y 6)))) (neg.f64 (+.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2) (*.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) (-.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) (neg.f64 (-.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) (*.f64 (+.f64 -1 x) (pow.f64 y -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (fma.f64 (+.f64 -1 x) (pow.f64 y 3) (*.f64 (+.f64 -1 x) y)) (*.f64 y y)) (*.f64 (pow.f64 y 4) (+.f64 -1 x))) (pow.f64 y 6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 3) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 3)) (*.f64 y y)) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) (+.f64 -1 x))) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2)) (*.f64 y y)) (*.f64 (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))) (+.f64 -1 x))) (*.f64 (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (fma.f64 (+.f64 -1 x) (pow.f64 y 3) (*.f64 (+.f64 -1 x) y)) y) (*.f64 (pow.f64 y 4) (/.f64 (+.f64 -1 x) y))) (*.f64 (pow.f64 y 4) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 3) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 3)) y) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) (/.f64 (+.f64 -1 x) y))) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2)) y) (*.f64 (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))) (/.f64 (+.f64 -1 x) y))) (*.f64 (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (fma.f64 (+.f64 -1 x) (pow.f64 y 3) (*.f64 (+.f64 -1 x) y)) (/.f64 y (/.f64 (+.f64 -1 x) y))) (*.f64 (pow.f64 y 4) 1)) (*.f64 (pow.f64 y 4) (/.f64 y (/.f64 (+.f64 -1 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 3) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 3)) (/.f64 y (/.f64 (+.f64 -1 x) y))) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) 1)) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) (/.f64 y (/.f64 (+.f64 -1 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2)) (/.f64 y (/.f64 (+.f64 -1 x) y))) (*.f64 (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))) 1)) (*.f64 (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))) (/.f64 y (/.f64 (+.f64 -1 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (fma.f64 (+.f64 -1 x) (pow.f64 y 3) (*.f64 (+.f64 -1 x) y)) (*.f64 y (neg.f64 y))) (*.f64 (pow.f64 y 4) (+.f64 1 (neg.f64 x)))) (*.f64 (pow.f64 y 4) (*.f64 y (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 3) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 3)) (*.f64 y (neg.f64 y))) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) (+.f64 1 (neg.f64 x)))) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) (*.f64 y (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (-.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2)) (*.f64 y (neg.f64 y))) (*.f64 (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))) (+.f64 1 (neg.f64 x)))) (*.f64 (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))) (*.f64 y (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 -1 x) (pow.f64 y 4)) (*.f64 (*.f64 y y) (fma.f64 (+.f64 -1 x) (pow.f64 y 3) (*.f64 (+.f64 -1 x) y)))) (pow.f64 y 6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 -1 x) y) (pow.f64 y 4)) (*.f64 y (fma.f64 (+.f64 -1 x) (pow.f64 y 3) (*.f64 (+.f64 -1 x) y)))) (*.f64 y (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 y 4) (*.f64 (/.f64 y (/.f64 (+.f64 -1 x) y)) (fma.f64 (+.f64 -1 x) (pow.f64 y 3) (*.f64 (+.f64 -1 x) y)))) (*.f64 (/.f64 y (/.f64 (+.f64 -1 x) y)) (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1 (neg.f64 x)) (pow.f64 y 4)) (*.f64 (*.f64 y (neg.f64 y)) (fma.f64 (+.f64 -1 x) (pow.f64 y 3) (*.f64 (+.f64 -1 x) y)))) (*.f64 (*.f64 y (neg.f64 y)) (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4))))) (*.f64 (*.f64 y y) (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 3) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 3)))) (*.f64 (*.f64 y y) (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 -1 x) y) (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4))))) (*.f64 y (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 3) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 3)))) (*.f64 y (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))) (*.f64 (/.f64 y (/.f64 (+.f64 -1 x) y)) (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 3) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 3)))) (*.f64 (/.f64 y (/.f64 (+.f64 -1 x) y)) (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1 (neg.f64 x)) (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4))))) (*.f64 (*.f64 y (neg.f64 y)) (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 3) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 3)))) (*.f64 (*.f64 y (neg.f64 y)) (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2) (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 -1 x) (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3)))) (*.f64 (*.f64 y y) (-.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2)))) (*.f64 (*.f64 y y) (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3)))) (*.f64 y (-.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2)))) (*.f64 y (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3))) (*.f64 (/.f64 y (/.f64 (+.f64 -1 x) y)) (-.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2)))) (*.f64 (/.f64 y (/.f64 (+.f64 -1 x) y)) (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (+.f64 1 (neg.f64 x)) (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3)))) (*.f64 (*.f64 y (neg.f64 y)) (-.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2)))) (*.f64 (*.f64 y (neg.f64 y)) (*.f64 (+.f64 -1 x) (-.f64 (/.f64 1 y) (pow.f64 y -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 3) (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))) 3)) (+.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (-.f64 (*.f64 (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))) (*.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 (+.f64 -1 x) y) 2) (*.f64 (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))) (-.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)) (pow.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) 2)) (-.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))) 2)) (cbrt.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))))) (sqrt.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 (+.f64 -1 x) y))) (exp.f64 (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (+.f64 -1 x) y)) (*.f64 (pow.f64 (exp.f64 (+.f64 -1 x)) (pow.f64 y -3)) (pow.f64 (exp.f64 (+.f64 -1 x)) (pow.f64 y -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 (+.f64 -1 x) y))) (*.f64 (pow.f64 (exp.f64 (+.f64 -1 x)) (pow.f64 y -3)) (pow.f64 (exp.f64 (+.f64 -1 x)) (pow.f64 y -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))))) (pow.f64 (exp.f64 (+.f64 -1 x)) (pow.f64 y -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3)))) (+.f64 1 (expm1.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))))) (+.f64 1 (expm1.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)))) (exp.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 -1 x)) (pow.f64 y -2)) (+.f64 1 (expm1.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)))) (+.f64 1 (expm1.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))) (exp.f64 (/.f64 (+.f64 -1 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 -1 x)) (pow.f64 y -3)) (pow.f64 (exp.f64 (+.f64 -1 x)) (pow.f64 y -2))) (exp.f64 (/.f64 (+.f64 -1 x) y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))) (+.f64 1 (expm1.f64 (/.f64 (+.f64 -1 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 -1 x)) (pow.f64 y -3)) (pow.f64 (exp.f64 (+.f64 -1 x)) (pow.f64 y -2))) (+.f64 1 (expm1.f64 (/.f64 (+.f64 -1 x) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 -1 x) (/.f64 1 y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 -1 x) (pow.f64 y -2) (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (+.f64 -1 x) y) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))) (*.f64 (+.f64 -1 x) (pow.f64 y -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4))) (cbrt.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2))) (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 x) y)) 2) (cbrt.f64 (/.f64 (+.f64 -1 x) y)) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3)))) 2) (cbrt.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3)))) (*.f64 (+.f64 -1 x) (pow.f64 y -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (+.f64 -1 x)) y) (/.f64 (sqrt.f64 (+.f64 -1 x)) y) (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (+.f64 -1 x) y)) (sqrt.f64 (/.f64 (+.f64 -1 x) y)) (*.f64 (+.f64 -1 x) (+.f64 (pow.f64 y -3) (pow.f64 y -2))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3)))) (sqrt.f64 (*.f64 (+.f64 -1 x) (+.f64 (/.f64 1 y) (pow.f64 y -3)))) (*.f64 (+.f64 -1 x) (pow.f64 y -2)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 x) (pow.f64 y -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 -1 x) y) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 -1 x) (pow.f64 y -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2))) (cbrt.f64 (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4))) (cbrt.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 -1 x)) 2) (*.f64 (cbrt.f64 (+.f64 -1 x)) (pow.f64 y -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 -1 x)) y) (/.f64 (sqrt.f64 (+.f64 -1 x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 -1 x)) (*.f64 (sqrt.f64 (+.f64 -1 x)) (pow.f64 y -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (neg.f64 x)) (/.f64 1 (*.f64 y (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (/.f64 (+.f64 -1 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -2) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 -1 x)) 2) y) (/.f64 (cbrt.f64 (+.f64 -1 x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 -1 x)) 2) 1) (/.f64 (cbrt.f64 (+.f64 -1 x)) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 -1 x)) 1) (/.f64 (sqrt.f64 (+.f64 -1 x)) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 y 4))) (/.f64 (+.f64 -1 x) (pow.f64 (cbrt.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 -1 x) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (/.f64 1 y) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 -1 x)) 2) (cbrt.f64 (pow.f64 y 4))) (cbrt.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 -1 x)) (cbrt.f64 (pow.f64 y 4))) (/.f64 (sqrt.f64 (+.f64 -1 x)) (pow.f64 (cbrt.f64 y) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 -1 x) 1) (pow.f64 y -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 x) y)) 2) 1) (/.f64 (cbrt.f64 (/.f64 (+.f64 -1 x) y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 (+.f64 -1 x) y)) 1) (/.f64 (sqrt.f64 (/.f64 (+.f64 -1 x) y)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 y) 2)) (/.f64 (/.f64 (+.f64 -1 x) y) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 x) y)) 2) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 (+.f64 -1 x) y)) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sqrt.f64 (/.f64 (+.f64 -1 x) y)) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 -1 x) (sqrt.f64 y)) (/.f64 (/.f64 1 y) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 y)) (/.f64 (/.f64 (+.f64 -1 x) y) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 -1 x) y)) 2) (sqrt.f64 y)) (/.f64 (cbrt.f64 (/.f64 (+.f64 -1 x) y)) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (+.f64 -1 x)) y) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (+.f64 -1 x) 3) (pow.f64 y 6)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (/.f64 (+.f64 -1 x) y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 -1 x) (*.f64 y (neg.f64 y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (+.f64 -1 x) 2) (pow.f64 y 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (+.f64 -1 x)) (pow.f64 y -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (+.f64 -1 x) 3) (pow.f64 y 6)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -2))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 x) (pow.f64 y -3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (+.f64 -1 x) (pow.f64 y -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (+.f64 -1 x)) y) (pow.f64 (/.f64 (cbrt.f64 (+.f64 -1 x)) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (cbrt.f64 (+.f64 -1 x)) y) 2) (/.f64 (cbrt.f64 (+.f64 -1 x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 -1 x)) 2) (*.f64 (cbrt.f64 (+.f64 -1 x)) (pow.f64 y -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 -1 x)) y) (/.f64 (sqrt.f64 (+.f64 -1 x)) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 -1 x)) (pow.f64 y 3/2)) (/.f64 (sqrt.f64 (+.f64 -1 x)) (pow.f64 y 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 -1 x)) (*.f64 (sqrt.f64 (+.f64 -1 x)) (pow.f64 y -3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (neg.f64 x)) (/.f64 1 (neg.f64 (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -3) (+.f64 -1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (*.f64 (+.f64 -1 x) (pow.f64 y -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -2) (/.f64 (+.f64 -1 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 -1 x)) 2) y) (/.f64 (cbrt.f64 (+.f64 -1 x)) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 -1 x)) 2) 1) (/.f64 (cbrt.f64 (+.f64 -1 x)) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 -1 x)) 1) (/.f64 (sqrt.f64 (+.f64 -1 x)) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 -1 x)) (*.f64 y y)) (/.f64 (sqrt.f64 (+.f64 -1 x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 -1 x)) 2) (*.f64 y y)) (/.f64 (cbrt.f64 (+.f64 -1 x)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 y 3/2)) (/.f64 (+.f64 -1 x) (pow.f64 y 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 -1 x)) 2) (pow.f64 y 3/2)) (/.f64 (cbrt.f64 (+.f64 -1 x)) (pow.f64 y 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (+.f64 -1 x)) y) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (+.f64 -1 x)) (pow.f64 y 3/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 y 3) (+.f64 -1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 -1 x) (neg.f64 (pow.f64 y 3))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (+.f64 -1 x)) (pow.f64 y -3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (+.f64 -1 x) (pow.f64 y -3))) 1))))))"]],"rules":[["egg-rr",35],["egg-rr",43],["egg-rr",81],["egg-rr",58]],"stop":[["node limit",1]],"time":81.712158203125,"type":"rewrite"},{"count":[[313,290]],"egraph":[[4,7811,1756,0.032021],[3,3483,1756,0.018797709000000003],[2,918,1778,0.0070194590000000005],[1,305,1796,0.001972917],[0,106,2168,0.000533542]],"inputs":[["(log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(+.f64 (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))) (*.f64 -1 x))","(+.f64 (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))) (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 -1 x)))","(+.f64 (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))) (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1 x) (*.f64 -1/3 (pow.f64 x 3)))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))) (/.f64 1 x))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x))))","(+.f64 (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))) (*.f64 -1 (log.f64 (/.f64 -1 x))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))) (/.f64 1 x))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x))))","(+.f64 (*.f64 -3 (log.f64 y)) (log.f64 (-.f64 x 1)))","(+.f64 y (+.f64 (log.f64 (-.f64 x 1)) (*.f64 -3 (log.f64 y))))","(+.f64 y (+.f64 (*.f64 1/2 (pow.f64 y 2)) (+.f64 (log.f64 (-.f64 x 1)) (*.f64 -3 (log.f64 y)))))","(+.f64 (*.f64 -2/3 (pow.f64 y 3)) (+.f64 y (+.f64 (*.f64 1/2 (pow.f64 y 2)) (+.f64 (log.f64 (-.f64 x 1)) (*.f64 -3 (log.f64 y))))))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1)))","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1))))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1)))))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1))))) (*.f64 2/3 (/.f64 1 (pow.f64 y 3))))","(+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (log.f64 (/.f64 -1 y)))","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (log.f64 (/.f64 -1 y))))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (log.f64 (/.f64 -1 y)))))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (log.f64 (/.f64 -1 y))))) (*.f64 2/3 (/.f64 1 (pow.f64 y 3))))","(*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x) (*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x) (*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x) (*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x)","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x) (*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x) (*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x) (*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x)","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x) (*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x) (*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x) (*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 x (pow.f64 y 2))) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y))) (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y))) (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))","(/.f64 (-.f64 x 1) y)","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y)) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 2))))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y))) (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y))) (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))","(/.f64 (-.f64 x 1) y)","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y)) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 2))))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y))) (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y))) (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))","(/.f64 -1 (pow.f64 y 2))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 x (pow.f64 y 2))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 x (pow.f64 y 2))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 -1 (pow.f64 y 3))","(-.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 3)))","(-.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 3)))","(-.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 3)))","(/.f64 x (pow.f64 y 3))","(-.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 3)))","(-.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 3)))","(-.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 3)))","(/.f64 x (pow.f64 y 3))","(-.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 3)))","(-.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 3)))","(-.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 3)))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))"]],"method":["egg-herbie"],"outputs":[["(log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))","(log.f64 (-.f64 (/.f64 -1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))))","(log.f64 (+.f64 (/.f64 (/.f64 -1 y) y) (-.f64 (/.f64 -1 y) (/.f64 1 (pow.f64 y 3)))))","(log.f64 (+.f64 (/.f64 (/.f64 -1 y) y) (+.f64 (/.f64 -1 (pow.f64 y 3)) (/.f64 -1 y))))","(+.f64 (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))) (*.f64 -1 x))","(+.f64 (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))))) (neg.f64 x))","(-.f64 (log.f64 (-.f64 (/.f64 -1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))) x)","(-.f64 (log.f64 (+.f64 (/.f64 (/.f64 -1 y) y) (-.f64 (/.f64 -1 y) (/.f64 1 (pow.f64 y 3))))) x)","(-.f64 (log.f64 (+.f64 (/.f64 (/.f64 -1 y) y) (+.f64 (/.f64 -1 (pow.f64 y 3)) (/.f64 -1 y)))) x)","(+.f64 (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))) (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (*.f64 -1 x)))","(+.f64 (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))))) (fma.f64 -1/2 (*.f64 x x) (neg.f64 x)))","(+.f64 (log.f64 (-.f64 (/.f64 -1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))) (-.f64 (*.f64 x (*.f64 x -1/2)) x))","(-.f64 (fma.f64 x (*.f64 x -1/2) (log.f64 (+.f64 (/.f64 (/.f64 -1 y) y) (-.f64 (/.f64 -1 y) (/.f64 1 (pow.f64 y 3)))))) x)","(fma.f64 x (*.f64 x -1/2) (-.f64 (log.f64 (+.f64 (/.f64 (/.f64 -1 y) y) (+.f64 (/.f64 -1 (pow.f64 y 3)) (/.f64 -1 y)))) x))","(+.f64 (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))) (+.f64 (*.f64 -1/2 (pow.f64 x 2)) (+.f64 (*.f64 -1 x) (*.f64 -1/3 (pow.f64 x 3)))))","(+.f64 (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))))) (fma.f64 -1/2 (*.f64 x x) (fma.f64 -1 x (*.f64 -1/3 (pow.f64 x 3)))))","(+.f64 (log.f64 (-.f64 (/.f64 -1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))) (fma.f64 -1/2 (*.f64 x x) (-.f64 (*.f64 -1/3 (pow.f64 x 3)) x)))","(fma.f64 x (*.f64 x -1/2) (-.f64 (fma.f64 -1/3 (pow.f64 x 3) (log.f64 (+.f64 (/.f64 (/.f64 -1 y) y) (-.f64 (/.f64 -1 y) (/.f64 1 (pow.f64 y 3)))))) x))","(fma.f64 x (*.f64 x -1/2) (-.f64 (fma.f64 -1/3 (pow.f64 x 3) (log.f64 (+.f64 (/.f64 (/.f64 -1 y) y) (+.f64 (/.f64 -1 (pow.f64 y 3)) (/.f64 -1 y))))) x))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))","(+.f64 (log.f64 x) (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))) (/.f64 1 x))","(-.f64 (fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))))) (/.f64 1 x))","(+.f64 (log.f64 x) (+.f64 (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))) (/.f64 -1 x)))","(+.f64 (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))) (+.f64 (log.f64 x) (/.f64 -1 x)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x)))","(-.f64 (fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))))) (+.f64 (/.f64 1 x) (/.f64 1/2 (*.f64 x x))))","(+.f64 (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))) (-.f64 (log.f64 x) (+.f64 (/.f64 1 x) (/.f64 1/2 (*.f64 x x)))))","(+.f64 (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))) (+.f64 (log.f64 x) (+.f64 (/.f64 -1 x) (/.f64 -1/2 (*.f64 x x)))))","(+.f64 (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))) (+.f64 (log.f64 x) (-.f64 (/.f64 -1 x) (/.f64 (/.f64 1/2 x) x))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 1 x))) (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x))))","(-.f64 (fma.f64 -1 (neg.f64 (log.f64 x)) (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))))) (+.f64 (/.f64 1/2 (*.f64 x x)) (+.f64 (/.f64 1 x) (/.f64 1/3 (pow.f64 x 3)))))","(+.f64 (log.f64 x) (-.f64 (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))) (+.f64 (/.f64 1/2 (*.f64 x x)) (+.f64 (/.f64 1 x) (/.f64 1/3 (pow.f64 x 3))))))","(+.f64 (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))) (-.f64 (+.f64 (log.f64 x) (/.f64 -1/2 (*.f64 x x))) (+.f64 (/.f64 1 x) (/.f64 1/3 (pow.f64 x 3)))))","(+.f64 (log.f64 x) (+.f64 (log.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))) (+.f64 (-.f64 (/.f64 -1 x) (/.f64 (/.f64 1/2 x) x)) (/.f64 -1/3 (pow.f64 x 3)))))","(+.f64 (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))) (*.f64 -1 (log.f64 (/.f64 -1 x))))","(fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))))))","(-.f64 (log.f64 (-.f64 (/.f64 -1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))) (log.f64 (/.f64 -1 x)))","(-.f64 (log.f64 (+.f64 (/.f64 (/.f64 -1 y) y) (-.f64 (/.f64 -1 y) (/.f64 1 (pow.f64 y 3))))) (log.f64 (/.f64 -1 x)))","(-.f64 (log.f64 (+.f64 (/.f64 (/.f64 -1 y) y) (+.f64 (/.f64 -1 (pow.f64 y 3)) (/.f64 -1 y)))) (log.f64 (/.f64 -1 x)))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))) (/.f64 1 x))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))) (/.f64 1 x))","(+.f64 (-.f64 (log.f64 (-.f64 (/.f64 -1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))) (log.f64 (/.f64 -1 x))) (/.f64 -1 x))","(-.f64 (log.f64 (+.f64 (/.f64 (/.f64 -1 y) y) (-.f64 (/.f64 -1 y) (/.f64 1 (pow.f64 y 3))))) (+.f64 (log.f64 (/.f64 -1 x)) (/.f64 1 x)))","(+.f64 (log.f64 (+.f64 (/.f64 (/.f64 -1 y) y) (+.f64 (/.f64 -1 (pow.f64 y 3)) (/.f64 -1 y)))) (-.f64 (/.f64 -1 x) (log.f64 (/.f64 -1 x))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x)))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))) (+.f64 (/.f64 1 x) (/.f64 1/2 (*.f64 x x))))","(+.f64 (-.f64 (-.f64 (log.f64 (-.f64 (/.f64 -1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))) (log.f64 (/.f64 -1 x))) (/.f64 1/2 (*.f64 x x))) (/.f64 -1 x))","(+.f64 (-.f64 (log.f64 (+.f64 (/.f64 (/.f64 -1 y) y) (-.f64 (/.f64 -1 y) (/.f64 1 (pow.f64 y 3))))) (+.f64 (log.f64 (/.f64 -1 x)) (/.f64 1 x))) (/.f64 -1/2 (*.f64 x x)))","(+.f64 (log.f64 (+.f64 (/.f64 (/.f64 -1 y) y) (+.f64 (/.f64 -1 (pow.f64 y 3)) (/.f64 -1 y)))) (+.f64 (-.f64 (/.f64 -1 x) (log.f64 (/.f64 -1 x))) (/.f64 -1/2 (*.f64 x x))))","(-.f64 (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 x))) (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 x 2))) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 x 3))) (/.f64 1 x))))","(-.f64 (fma.f64 -1 (log.f64 (/.f64 -1 x)) (log.f64 (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))) (+.f64 (/.f64 1/2 (*.f64 x x)) (+.f64 (/.f64 1 x) (/.f64 1/3 (pow.f64 x 3)))))","(-.f64 (-.f64 (log.f64 (-.f64 (/.f64 -1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))) (log.f64 (/.f64 -1 x))) (+.f64 (/.f64 1/2 (*.f64 x x)) (+.f64 (/.f64 1 x) (/.f64 1/3 (pow.f64 x 3)))))","(+.f64 (-.f64 (log.f64 (+.f64 (/.f64 (/.f64 -1 y) y) (-.f64 (/.f64 -1 y) (/.f64 1 (pow.f64 y 3))))) (+.f64 (log.f64 (/.f64 -1 x)) (/.f64 1/2 (*.f64 x x)))) (-.f64 (/.f64 -1 x) (/.f64 1/3 (pow.f64 x 3))))","(+.f64 (-.f64 (log.f64 (+.f64 (/.f64 (/.f64 -1 y) y) (+.f64 (/.f64 -1 (pow.f64 y 3)) (/.f64 -1 y)))) (+.f64 (+.f64 (log.f64 (/.f64 -1 x)) (/.f64 (/.f64 1/2 x) x)) (/.f64 1/3 (pow.f64 x 3)))) (/.f64 -1 x))","(+.f64 (*.f64 -3 (log.f64 y)) (log.f64 (-.f64 x 1)))","(fma.f64 -3 (log.f64 y) (log.f64 (+.f64 x -1)))","(fma.f64 -3 (log.f64 y) (log.f64 (+.f64 -1 x)))","(+.f64 y (+.f64 (log.f64 (-.f64 x 1)) (*.f64 -3 (log.f64 y))))","(+.f64 y (fma.f64 -3 (log.f64 y) (log.f64 (+.f64 x -1))))","(+.f64 y (fma.f64 -3 (log.f64 y) (log.f64 (+.f64 -1 x))))","(+.f64 y (+.f64 (*.f64 1/2 (pow.f64 y 2)) (+.f64 (log.f64 (-.f64 x 1)) (*.f64 -3 (log.f64 y)))))","(+.f64 y (fma.f64 1/2 (*.f64 y y) (fma.f64 -3 (log.f64 y) (log.f64 (+.f64 x -1)))))","(+.f64 y (fma.f64 (*.f64 y y) 1/2 (fma.f64 -3 (log.f64 y) (log.f64 (+.f64 -1 x)))))","(+.f64 y (fma.f64 -3 (log.f64 y) (fma.f64 y (*.f64 y 1/2) (log.f64 (+.f64 -1 x)))))","(+.f64 (fma.f64 -3 (log.f64 y) (log.f64 (+.f64 -1 x))) (fma.f64 y (*.f64 y 1/2) y))","(+.f64 (*.f64 -2/3 (pow.f64 y 3)) (+.f64 y (+.f64 (*.f64 1/2 (pow.f64 y 2)) (+.f64 (log.f64 (-.f64 x 1)) (*.f64 -3 (log.f64 y))))))","(fma.f64 -2/3 (pow.f64 y 3) (+.f64 y (fma.f64 1/2 (*.f64 y y) (fma.f64 -3 (log.f64 y) (log.f64 (+.f64 x -1))))))","(+.f64 (fma.f64 (*.f64 y y) 1/2 (fma.f64 -3 (log.f64 y) (log.f64 (+.f64 -1 x)))) (fma.f64 (pow.f64 y 3) -2/3 y))","(+.f64 (fma.f64 -3 (log.f64 y) (log.f64 (+.f64 -1 x))) (fma.f64 (pow.f64 y 3) -2/3 (fma.f64 y (*.f64 y 1/2) y)))","(+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1)))","(+.f64 (log.f64 (+.f64 x -1)) (neg.f64 (log.f64 y)))","(-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y))","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1))))","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (+.f64 x -1)) (neg.f64 (log.f64 y))))","(+.f64 (/.f64 1 y) (-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y)))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1)))))","(+.f64 (+.f64 (/.f64 1 y) (/.f64 1/2 (*.f64 y y))) (+.f64 (log.f64 (+.f64 x -1)) (neg.f64 (log.f64 y))))","(+.f64 (/.f64 1 y) (+.f64 (-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y)) (/.f64 1/2 (*.f64 y y))))","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (+.f64 -1 x)) (-.f64 (/.f64 (/.f64 1/2 y) y) (log.f64 y))))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (log.f64 (/.f64 1 y)) (log.f64 (-.f64 x 1))))) (*.f64 2/3 (/.f64 1 (pow.f64 y 3))))","(+.f64 (/.f64 1 y) (-.f64 (+.f64 (+.f64 (log.f64 (+.f64 x -1)) (neg.f64 (log.f64 y))) (/.f64 1/2 (*.f64 y y))) (/.f64 2/3 (pow.f64 y 3))))","(+.f64 (+.f64 (/.f64 1 y) (/.f64 1/2 (*.f64 y y))) (-.f64 (-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y)) (/.f64 2/3 (pow.f64 y 3))))","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (+.f64 -1 x)) (+.f64 (-.f64 (/.f64 (/.f64 1/2 y) y) (log.f64 y)) (/.f64 -2/3 (pow.f64 y 3)))))","(+.f64 (-.f64 (log.f64 (+.f64 -1 x)) (log.f64 y)) (+.f64 (+.f64 (/.f64 1 y) (/.f64 (/.f64 1/2 y) y)) (/.f64 -2/3 (pow.f64 y 3))))","(+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (log.f64 (/.f64 -1 y)))","(+.f64 (log.f64 (neg.f64 (+.f64 x -1))) (log.f64 (/.f64 -1 y)))","(+.f64 (log.f64 (+.f64 (neg.f64 x) 1)) (log.f64 (/.f64 -1 y)))","(+.f64 (log.f64 (-.f64 1 x)) (log.f64 (/.f64 -1 y)))","(+.f64 (log1p.f64 (neg.f64 x)) (log.f64 (/.f64 -1 y)))","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (log.f64 (/.f64 -1 y))))","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (neg.f64 (+.f64 x -1))) (log.f64 (/.f64 -1 y))))","(+.f64 (+.f64 (/.f64 1 y) (log.f64 (/.f64 -1 y))) (log.f64 (+.f64 (neg.f64 x) 1)))","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (-.f64 1 x)) (log.f64 (/.f64 -1 y))))","(+.f64 (log1p.f64 (neg.f64 x)) (+.f64 (/.f64 1 y) (log.f64 (/.f64 -1 y))))","(+.f64 (/.f64 1 y) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (log.f64 (/.f64 -1 y)))))","(+.f64 (/.f64 1 y) (+.f64 (/.f64 1/2 (*.f64 y y)) (+.f64 (log.f64 (neg.f64 (+.f64 x -1))) (log.f64 (/.f64 -1 y)))))","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (+.f64 (neg.f64 x) 1)) (+.f64 (log.f64 (/.f64 -1 y)) (/.f64 1/2 (*.f64 y y)))))","(+.f64 (/.f64 1 y) (+.f64 (log.f64 (-.f64 1 x)) (+.f64 (/.f64 (/.f64 1/2 y) y) (log.f64 (/.f64 -1 y)))))","(+.f64 (/.f64 1 y) (+.f64 (log1p.f64 (neg.f64 x)) (+.f64 (/.f64 (/.f64 1/2 y) y) (log.f64 (/.f64 -1 y)))))","(-.f64 (+.f64 (/.f64 1 y) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 y 2))) (+.f64 (log.f64 (*.f64 -1 (-.f64 x 1))) (log.f64 (/.f64 -1 y))))) (*.f64 2/3 (/.f64 1 (pow.f64 y 3))))","(+.f64 (/.f64 1 y) (-.f64 (+.f64 (/.f64 1/2 (*.f64 y y)) (+.f64 (log.f64 (neg.f64 (+.f64 x -1))) (log.f64 (/.f64 -1 y)))) (/.f64 2/3 (pow.f64 y 3))))","(+.f64 (+.f64 (/.f64 1 y) (+.f64 (log.f64 (+.f64 (neg.f64 x) 1)) (+.f64 (log.f64 (/.f64 -1 y)) (/.f64 1/2 (*.f64 y y))))) (/.f64 -2/3 (pow.f64 y 3)))","(+.f64 (+.f64 (log.f64 (-.f64 1 x)) (log.f64 (/.f64 -1 y))) (+.f64 (+.f64 (/.f64 1 y) (/.f64 (/.f64 1/2 y) y)) (/.f64 -2/3 (pow.f64 y 3))))","(+.f64 (+.f64 (/.f64 1 y) (/.f64 (/.f64 1/2 y) y)) (+.f64 (log.f64 (/.f64 -1 y)) (+.f64 (log1p.f64 (neg.f64 x)) (/.f64 -2/3 (pow.f64 y 3)))))","(*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))","(neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))))","(-.f64 (/.f64 -1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))","(+.f64 (/.f64 (/.f64 -1 y) y) (-.f64 (/.f64 -1 y) (/.f64 1 (pow.f64 y 3))))","(+.f64 (/.f64 (/.f64 -1 y) y) (+.f64 (/.f64 -1 (pow.f64 y 3)) (/.f64 -1 y)))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x) (*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(fma.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) x (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) (+.f64 -1 x))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x) (*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(fma.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) x (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) (+.f64 -1 x))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x) (*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(fma.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) x (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) (+.f64 -1 x))","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x)","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) x)","(+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 (/.f64 x y) y) (/.f64 x y)))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x) (*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(fma.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) x (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) (+.f64 -1 x))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x) (*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(fma.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) x (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) (+.f64 -1 x))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x) (*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(fma.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) x (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) (+.f64 -1 x))","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x)","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) x)","(+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 (/.f64 x y) y) (/.f64 x y)))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x) (*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(fma.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) x (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) (+.f64 -1 x))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x) (*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(fma.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) x (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) (+.f64 -1 x))","(+.f64 (*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))) x) (*.f64 -1 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))))","(fma.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) x (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) (+.f64 -1 x))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 x (pow.f64 y 2))) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3))))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (/.f64 x (*.f64 y y))) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))","(+.f64 (/.f64 x (pow.f64 y 3)) (-.f64 (/.f64 (+.f64 -1 x) (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))","(+.f64 (/.f64 (/.f64 x y) y) (+.f64 (/.f64 (+.f64 -1 x) (pow.f64 y 3)) (/.f64 (/.f64 -1 y) y)))","(+.f64 (/.f64 (+.f64 -1 x) (*.f64 y y)) (/.f64 (+.f64 -1 x) (pow.f64 y 3)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y))) (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))","(fma.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) x (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) (+.f64 -1 x))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y))) (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))","(fma.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) x (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) (+.f64 -1 x))","(/.f64 (-.f64 x 1) y)","(/.f64 (+.f64 x -1) y)","(/.f64 (+.f64 -1 x) y)","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y)) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 2))))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 x y) (+.f64 (/.f64 1 y) (/.f64 1 (*.f64 y y)))))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 (+.f64 -1 x) y) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (+.f64 -1 x) (*.f64 y y)) (/.f64 -1 y)))","(+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y))) (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))","(fma.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) x (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) (+.f64 -1 x))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y))) (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))","(fma.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) x (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) (+.f64 -1 x))","(/.f64 (-.f64 x 1) y)","(/.f64 (+.f64 x -1) y)","(/.f64 (+.f64 -1 x) y)","(-.f64 (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y)) (+.f64 (/.f64 1 y) (/.f64 1 (pow.f64 y 2))))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 x y) (+.f64 (/.f64 1 y) (/.f64 1 (*.f64 y y)))))","(+.f64 (/.f64 x (*.f64 y y)) (-.f64 (/.f64 (+.f64 -1 x) y) (/.f64 1 (*.f64 y y))))","(+.f64 (/.f64 x y) (+.f64 (/.f64 (+.f64 -1 x) (*.f64 y y)) (/.f64 -1 y)))","(+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (*.f64 y y)))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y))) (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))","(fma.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) x (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) (+.f64 -1 x))","(-.f64 (+.f64 (/.f64 x (pow.f64 y 3)) (+.f64 (/.f64 x (pow.f64 y 2)) (/.f64 x y))) (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (pow.f64 y 2)) (/.f64 1 (pow.f64 y 3)))))","(fma.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) x (neg.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3))))))","(*.f64 (+.f64 (/.f64 1 y) (+.f64 (/.f64 1 (*.f64 y y)) (/.f64 1 (pow.f64 y 3)))) (+.f64 -1 x))","(/.f64 -1 (pow.f64 y 2))","(/.f64 -1 (*.f64 y y))","(/.f64 (/.f64 -1 y) y)","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 (/.f64 x y) y)","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(/.f64 x (pow.f64 y 2))","(/.f64 x (*.f64 y y))","(/.f64 (/.f64 x y) y)","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(-.f64 (/.f64 x (pow.f64 y 2)) (/.f64 1 (pow.f64 y 2)))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(/.f64 (-.f64 x 1) (pow.f64 y 2))","(/.f64 (+.f64 x -1) (*.f64 y y))","(/.f64 (+.f64 -1 x) (*.f64 y y))","(/.f64 -1 (pow.f64 y 3))","(-.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 3)))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(-.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 3)))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(-.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 3)))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(/.f64 x (pow.f64 y 3))","(-.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 3)))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(-.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 3)))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(-.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 3)))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(/.f64 x (pow.f64 y 3))","(-.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 3)))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(-.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 3)))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(-.f64 (/.f64 x (pow.f64 y 3)) (/.f64 1 (pow.f64 y 3)))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))","(/.f64 (-.f64 x 1) (pow.f64 y 3))","(/.f64 (+.f64 x -1) (pow.f64 y 3))","(/.f64 (+.f64 -1 x) (pow.f64 y 3))"]],"stop":[["node limit",1]],"time":67.012939453125,"type":"simplify"},{"compiler":[[10199,7610]],"time":115.160888671875,"type":"eval"},{"alts":[["(-.f64 1 (log.f64 (pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2)))","done",16.647567933854113],["(-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))","done",16.623466664317228],["(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))","done",16.635185414317228],["(-.f64 1 (log.f64 (+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y)))))","done",40.058512038685755]],"compiler":[[17,14],[12,9],[14,11],[26,19]],"count":[[294,4]],"kept":[{"done":[3,3],"fresh":[0,0],"new":[290,0],"picked":[1,1]}],"min-error":[0],"time":56.210205078125,"type":"prune"},{"accuracy":[0.0078125],"baseline":[16.623466664317228],"branch":[["x",13.835093814571144,2],["y",0.0078125,3],["(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))",0.0078125,2],["(log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))",0.0078125,2],["(-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))",0.0078125,2],["(-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))",0.0078125,2],["(/.f64 (-.f64 x y) (-.f64 1 y))",0.0078125,2],["(/.f64 (-.f64 x y) (-.f64 1 y))",0.0078125,2]],"compiler":[[3,2],[3,2],[14,11],[12,9],[11,8],[11,8],[9,6],[9,6],[115,83]],"count":[[7,2]],"inputs":[["(-.f64 1 (log.f64 (pow.f64 (sqrt.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))) 2)))","(-.f64 1 (log.f64 (+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y)))))","(+.f64 (/.f64 -1 y) (-.f64 (-.f64 1 (log1p.f64 (neg.f64 x))) (log.f64 (/.f64 -1 y))))","(-.f64 1 (+.f64 (log.f64 (+.f64 -1 x)) (-.f64 (/.f64 1 y) (log.f64 y))))","(-.f64 1 (+.f64 (log.f64 (sqrt.f64 (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1))) (log.f64 (sqrt.f64 (+.f64 (/.f64 (-.f64 x y) (+.f64 y -1)) 1)))))","(-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))","(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))"]],"link":["."],"name":["Numeric.SpecFunctions:invIncompleteGamma from math-functions-0.1.5.2, B"],"oracle":[64.0],"outputs":[["(-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1))))","(-.f64 1 (log.f64 (+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y)))))"]],"time":53.656005859375,"times":[["x",7.449951171875],["y",11.19384765625],["(-.f64 1 (log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))))",5.8291015625],["(log.f64 (-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y))))",4.032958984375],["(-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))",3.89794921875],["(-.f64 1 (/.f64 (-.f64 x y) (-.f64 1 y)))",3.903076171875],["(/.f64 (-.f64 x y) (-.f64 1 y))",7.43896484375],["(/.f64 (-.f64 x y) (-.f64 1 y))",7.5791015625]],"type":"regimes"},{"bstep":[[0.6427753967454767,0.9999999671357519,0.072021484375]],"compiler":[[10,9],[9,6]],"method":["left-value"],"time":0.204833984375,"type":"bsearch"},{"compiler":[[46,32]],"egraph":[[4,59,66,0.000284333],[3,56,66,0.00022416599999999998],[2,50,66,0.000159],[1,40,66,0.00010125],[0,27,66,5.0625e-5]],"inputs":[["(if (<=.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3602879701896397/4503599627370496) (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) (-.f64 1 (log.f64 (+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y))))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3602879701896397/4503599627370496) (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) (-.f64 1 (log.f64 (+.f64 (+.f64 (/.f64 (+.f64 -1 x) y) (/.f64 (+.f64 -1 x) (pow.f64 y 3))) (/.f64 (+.f64 -1 x) (*.f64 y y))))))","(if (<=.f64 (/.f64 (-.f64 x y) (-.f64 1 y)) 3602879701896397/4503599627370496) (-.f64 1 (log1p.f64 (/.f64 (-.f64 x y) (+.f64 y -1)))) (-.f64 1 (log.f64 (+.f64 (+.f64 (/.f64 (+.f64 x -1) y) (/.f64 (+.f64 x -1) (pow.f64 y 3))) (/.f64 (+.f64 x -1) (*.f64 y y))))))"]],"stop":[["done",1],["saturated",1]],"time":9.51708984375,"type":"simplify"},{"time":0.02001953125,"type":"soundness"},{"compiler":[[46,32]],"remove-preprocessing":[[]],"time":16.491943359375,"type":"end"}]