[{"compiler":[[71,33]],"method":["search"],"sampling":[[12,0.5348775386810303,0.00036585330963134766,0.4647566080093384],[11,0.5348775386810303,0.0007317066192626953,0.46439075469970703],[10,0.5341458320617676,0.0014634132385253906,0.46439075469970703],[9,0.5326824188232422,0.0029268264770507813,0.46439075469970703],[8,0.5326824188232422,0.0058536529541015625,0.46146392822265625],[7,0.5268287658691406,0.011707305908203125,0.46146392822265625],[6,0.5151214599609375,0.02341461181640625,0.46146392822265625],[5,0.5151214599609375,0.0468292236328125,0.43804931640625],[4,0.468292236328125,0.093658447265625,0.43804931640625],[3,0.3746337890625,0.18731689453125,0.43804931640625],[2,0.3746337890625,0.3746337890625,0.250732421875],[1,0.0,0.749267578125,0.250732421875],[0,0.0,0.749267578125,0.250732421875]],"time":2.108154296875,"type":"analyze"},{"outcomes":[["body",256,"invalid",0.1640625,2],["body",256,"valid",691.096923828125,8256]],"time":698.973876953125,"type":"sample"},{"compiler":[[68,31]],"egraph":[[0,1,1,1.5e-6],[8,7841,33,0.048887833],[7,6354,33,0.043840417],[6,5983,37,0.033831792],[5,5155,37,0.025011167],[4,2392,37,0.014916292],[3,1199,37,0.0066625],[2,251,41,0.0020942499999999998],[1,74,59,0.00048645799999999994],[0,32,75,0.000125125]],"inputs":[["0"],["(fabs.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (+.f64 (+.f64 (+.f64 (*.f64 2 (fabs.f64 x)) (*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 21) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x))))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(fabs.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (+.f64 (+.f64 (+.f64 (*.f64 2 (fabs.f64 x)) (*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 21) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x))))))","(fabs.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (+.f64 (+.f64 (fma.f64 2 (fabs.f64 x) (*.f64 2/3 (*.f64 (fabs.f64 x) (*.f64 x x)))) (*.f64 1/5 (*.f64 (fabs.f64 x) (*.f64 (*.f64 x x) (*.f64 x x))))) (*.f64 1/21 (*.f64 (fabs.f64 x) (*.f64 (*.f64 (*.f64 x x) (*.f64 x x)) (*.f64 x x)))))))","(fabs.f64 (/.f64 (fma.f64 1/21 (*.f64 (*.f64 x x) (*.f64 (*.f64 x x) (pow.f64 (fabs.f64 x) 3))) (fma.f64 1/5 (*.f64 (*.f64 x x) (pow.f64 (fabs.f64 x) 3)) (fma.f64 2 (fabs.f64 x) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (PI.f64))))","(fabs.f64 (/.f64 (*.f64 (fabs.f64 x) (+.f64 (fma.f64 2/3 (*.f64 x x) 2) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 4) (*.f64 1/21 (pow.f64 (fabs.f64 x) 6))))) (sqrt.f64 (PI.f64))))","(fabs.f64 (*.f64 (/.f64 (fabs.f64 x) (sqrt.f64 (PI.f64))) (+.f64 (fma.f64 1/5 (pow.f64 x 4) (*.f64 1/21 (pow.f64 x 6))) (fma.f64 2/3 (*.f64 x x) 2))))","(fabs.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64))))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":74.38916015625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[8,7841,33,0.055860126],[7,6354,33,0.050400209],[6,5983,37,0.039714209],[5,5155,37,0.029559166999999997],[4,2392,37,0.01513575],[3,1199,37,0.006222958],[2,251,41,0.002047333],[1,74,59,0.000479874],[0,32,75,0.000121708]],"inputs":[["(fabs.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (+.f64 (+.f64 (+.f64 (*.f64 2 (fabs.f64 x)) (*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 21) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x))))))"]],"method":["egg-herbie"],"outputs":[["(fabs.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (+.f64 (+.f64 (+.f64 (*.f64 2 (fabs.f64 x)) (*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 21) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x))))))","(fabs.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (+.f64 (+.f64 (fma.f64 2 (fabs.f64 x) (*.f64 2/3 (*.f64 (fabs.f64 x) (*.f64 x x)))) (*.f64 1/5 (*.f64 (fabs.f64 x) (*.f64 (*.f64 x x) (*.f64 x x))))) (*.f64 1/21 (*.f64 (fabs.f64 x) (*.f64 (*.f64 (*.f64 x x) (*.f64 x x)) (*.f64 x x)))))))","(fabs.f64 (/.f64 (fma.f64 1/21 (*.f64 (*.f64 x x) (*.f64 (*.f64 x x) (pow.f64 (fabs.f64 x) 3))) (fma.f64 1/5 (*.f64 (*.f64 x x) (pow.f64 (fabs.f64 x) 3)) (fma.f64 2 (fabs.f64 x) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (PI.f64))))","(fabs.f64 (/.f64 (*.f64 (fabs.f64 x) (+.f64 (fma.f64 2/3 (*.f64 x x) 2) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 4) (*.f64 1/21 (pow.f64 (fabs.f64 x) 6))))) (sqrt.f64 (PI.f64))))","(fabs.f64 (*.f64 (/.f64 (fabs.f64 x) (sqrt.f64 (PI.f64))) (+.f64 (fma.f64 1/5 (pow.f64 x 4) (*.f64 1/21 (pow.f64 x 6))) (fma.f64 2/3 (*.f64 x x) 2))))","(fabs.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64))))"]],"stop":[["node limit",1]],"time":68.039794921875,"type":"simplify"},{"compiler":[[90,46]],"time":0.860107421875,"type":"eval"},{"alts":[["(fabs.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (+.f64 (+.f64 (+.f64 (*.f64 2 (fabs.f64 x)) (*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 21) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x))))))","next",0.12175751953688403],["(fabs.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64))))","fresh",0.453125]],"compiler":[[68,31],[23,18],[68,31],[23,18]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.0078125],"time":2.27587890625,"type":"prune"},{"compiler":[[405,117]],"locations":[["(*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))",0.08203125,true],["(*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (+.f64 (+.f64 (+.f64 (*.f64 2 (fabs.f64 x)) (*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 21) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))))",0.09375,true],["(*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))",0.171875,true],["(sqrt.f64 (PI.f64))",1.0,true]],"time":46.2841796875,"type":"localize"},{"count":[[4,36]],"series":[["(*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))","x","-inf",0.152099609375],["(*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))","x","inf",0.179931640625],["(*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))","x","0",0.162109375],["(*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (+.f64 (+.f64 (+.f64 (*.f64 2 (fabs.f64 x)) (*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 21) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))))","x","-inf",2.468017578125],["(*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (+.f64 (+.f64 (+.f64 (*.f64 2 (fabs.f64 x)) (*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 21) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))))","x","inf",1.85009765625],["(*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (+.f64 (+.f64 (+.f64 (*.f64 2 (fabs.f64 x)) (*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 21) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))))","x","0",2.324951171875],["(*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))","x","-inf",0.8330078125],["(*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))","x","inf",0.719970703125],["(*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))","x","0",0.75390625]],"time":9.697998046875,"type":"series"},{"count":[[4,101]],"egraph":[[1,619,52,0.012740624999999998],[0,31,89,0.000906042]],"inputs":[["(sqrt.f64 (PI.f64))","(*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))","(*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (+.f64 (+.f64 (+.f64 (*.f64 2 (fabs.f64 x)) (*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 21) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))))","(*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sqrt.f64 (PI.f64)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sqrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sqrt.f64 (PI.f64))) (cbrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) 1/4) (pow.f64 (PI.f64) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2)) (sqrt.f64 (cbrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/2) (sqrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (PI.f64)) 2) 1/2) (pow.f64 (cbrt.f64 (PI.f64)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (pow.f64 (PI.f64) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (PI.f64)) (cbrt.f64 (pow.f64 (PI.f64) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (PI.f64) 1/4) (pow.f64 (sqrt.f64 (PI.f64)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (sqrt.f64 (PI.f64))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (PI.f64) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (PI.f64)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (PI.f64) 3/2) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sqrt.f64 (PI.f64))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (PI.f64) 1/4) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (sqrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (PI.f64) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (PI.f64)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (PI.f64))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 2/3 (pow.f64 x 3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2/3 (pow.f64 x 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (cbrt.f64 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 x 3/2) (sqrt.f64 2/3)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 2/3 (pow.f64 x 3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 x 6) 4/9))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 2/3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 2/3 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 2/3 (pow.f64 x 3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 2/3 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 2/3 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 2/3 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 2/3 (pow.f64 x 3))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) (sqrt.f64 (PI.f64))) (/.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (sqrt.f64 (PI.f64))) (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))) (pow.f64 (PI.f64) -1/2)) (*.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (*.f64 x (pow.f64 x 6)))) (pow.f64 (PI.f64) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) (sqrt.f64 (PI.f64))) 1) (*.f64 (/.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (sqrt.f64 (PI.f64))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (PI.f64) -1/2) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) (*.f64 (pow.f64 (PI.f64) -1/2) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (*.f64 x (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) (sqrt.f64 (PI.f64))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (sqrt.f64 (PI.f64)) (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) (sqrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))))) 2) (/.f64 (sqrt.f64 (PI.f64)) (cbrt.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))))) (/.f64 (sqrt.f64 (PI.f64)) (sqrt.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) 3) (*.f64 (pow.f64 (*.f64 x (pow.f64 x 6)) 3) 1/9261)) (*.f64 (sqrt.f64 (PI.f64)) (+.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) 2) (*.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (-.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) 2) (*.f64 (pow.f64 (*.f64 x (pow.f64 x 6)) 2) 1/441)) (*.f64 (sqrt.f64 (PI.f64)) (-.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) (*.f64 1/21 (*.f64 x (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))))) (neg.f64 (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (+.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) 3) (*.f64 (pow.f64 (*.f64 x (pow.f64 x 6)) 3) 1/9261))) (*.f64 (neg.f64 (sqrt.f64 (PI.f64))) (+.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) 2) (*.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (-.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (-.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) 2) (*.f64 (pow.f64 (*.f64 x (pow.f64 x 6)) 2) 1/441))) (*.f64 (neg.f64 (sqrt.f64 (PI.f64))) (-.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) (*.f64 1/21 (*.f64 x (pow.f64 x 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) 3) (*.f64 (pow.f64 (*.f64 x (pow.f64 x 6)) 3) 1/9261)) 1) (*.f64 (+.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) 2) (*.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (-.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))))) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) 2) (*.f64 (pow.f64 (*.f64 x (pow.f64 x 6)) 2) 1/441)) 1) (*.f64 (-.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) (*.f64 1/21 (*.f64 x (pow.f64 x 6)))) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) 3) (*.f64 (pow.f64 (*.f64 x (pow.f64 x 6)) 3) 1/9261)) -1) (*.f64 (+.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) 2) (*.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (-.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))))) (neg.f64 (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) 2) (*.f64 (pow.f64 (*.f64 x (pow.f64 x 6)) 2) 1/441)) -1) (*.f64 (-.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) (*.f64 1/21 (*.f64 x (pow.f64 x 6)))) (neg.f64 (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) (pow.f64 (PI.f64) 1/4)) (pow.f64 (PI.f64) 1/4))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) (sqrt.f64 (PI.f64))) 3) (pow.f64 (/.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (sqrt.f64 (PI.f64))) 3)) (+.f64 (*.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) (sqrt.f64 (PI.f64))) (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) (sqrt.f64 (PI.f64)))) (-.f64 (*.f64 (/.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (sqrt.f64 (PI.f64))) (/.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (sqrt.f64 (PI.f64)))) (*.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) (sqrt.f64 (PI.f64))) (/.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (sqrt.f64 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) (sqrt.f64 (PI.f64))) (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) (sqrt.f64 (PI.f64)))) (*.f64 (/.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (sqrt.f64 (PI.f64))) (/.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (sqrt.f64 (PI.f64))))) (-.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) (sqrt.f64 (PI.f64))) (/.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) 1) (sqrt.f64 (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) (cbrt.f64 (PI.f64))) (cbrt.f64 (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -1 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))))) (neg.f64 (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) 3) (*.f64 (pow.f64 (*.f64 x (pow.f64 x 6)) 3) 1/9261)) (pow.f64 (PI.f64) -1/2)) (+.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) 2) (*.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (-.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) 2) (*.f64 (pow.f64 (*.f64 x (pow.f64 x 6)) 2) 1/441)) (pow.f64 (PI.f64) -1/2)) (-.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) (*.f64 1/21 (*.f64 x (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -1/2) (+.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) 3) (*.f64 (pow.f64 (*.f64 x (pow.f64 x 6)) 3) 1/9261))) (+.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) 2) (*.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (-.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (PI.f64) -1/2) (-.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) 2) (*.f64 (pow.f64 (*.f64 x (pow.f64 x 6)) 2) 1/441))) (-.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) (*.f64 1/21 (*.f64 x (pow.f64 x 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) -1) (neg.f64 (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) (sqrt.f64 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) (sqrt.f64 (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) (sqrt.f64 (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) (sqrt.f64 (PI.f64)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) 2) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) (sqrt.f64 (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) 3) (pow.f64 (PI.f64) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 (PI.f64) -1/2) 3) (pow.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) 3) (pow.f64 (pow.f64 (PI.f64) -1/2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 1/21 (*.f64 x (pow.f64 x 6)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))))) (sqrt.f64 (PI.f64)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (PI.f64) -1/2) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) (/.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3)))) (pow.f64 (PI.f64) -1/2) (/.f64 (*.f64 1/21 (*.f64 x (pow.f64 x 6))) (sqrt.f64 (PI.f64))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 1/5 (pow.f64 x 5)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/5 (pow.f64 x 5)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/5 (pow.f64 x 5))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 1/5 (pow.f64 x 5))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (pow.f64 x 5) 3) 1/125) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (pow.f64 x 5) 2) 1/25))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 1/5) (pow.f64 x 5)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 1/5 (pow.f64 x 5)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 x 5) 3) 1/125))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 1/5 (pow.f64 x 5))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 1/5 (pow.f64 x 5))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 1/5 (pow.f64 x 5))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 1/5 (pow.f64 x 5))) 1))))))"]],"rules":[["egg-rr",13],["egg-rr",47],["egg-rr",13],["egg-rr",28]],"stop":[["node limit",1]],"time":42.44287109375,"type":"rewrite"},{"count":[[137,105]],"egraph":[[13,7680,696,0.07919895900000001],[12,7016,696,0.06864191700000001],[11,6502,696,0.057120750000000005],[10,4491,696,0.046982667000000006],[9,4200,696,0.036893167000000004],[8,4002,696,0.030157584],[7,3872,696,0.024064959],[6,3770,696,0.018402334],[5,3389,696,0.012551334],[4,1145,696,0.007283167],[3,429,696,0.0028243340000000004],[2,138,720,0.0011836670000000002],[1,57,720,0.0004948750000000001],[0,25,720,0.000185166]],"inputs":[["(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 2/3 (pow.f64 (fabs.f64 x) 3))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 2 (fabs.f64 x) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 (fabs.f64 x) 2 (fma.f64 2/3 (pow.f64 (fabs.f64 x) 3) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) 2 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) (fma.f64 2/3 (*.f64 x x) 2) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 (fabs.f64 x) (fma.f64 x (*.f64 2/3 x) 2)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 2 (fabs.f64 x) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 (fabs.f64 x) 2 (fma.f64 2/3 (pow.f64 (fabs.f64 x) 3) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) 2 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) (fma.f64 2/3 (*.f64 x x) 2) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 (fabs.f64 x) (fma.f64 x (*.f64 2/3 x) 2)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 2 (fabs.f64 x) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 (fabs.f64 x) 2 (fma.f64 2/3 (pow.f64 (fabs.f64 x) 3) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) 2 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) (fma.f64 2/3 (*.f64 x x) 2) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 (fabs.f64 x) (fma.f64 x (*.f64 2/3 x) 2)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 2 (fabs.f64 x) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 (fabs.f64 x) 2 (fma.f64 2/3 (pow.f64 (fabs.f64 x) 3) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) 2 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) (fma.f64 2/3 (*.f64 x x) 2) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 (fabs.f64 x) (fma.f64 x (*.f64 2/3 x) 2)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 2 (fabs.f64 x) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 (fabs.f64 x) 2 (fma.f64 2/3 (pow.f64 (fabs.f64 x) 3) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) 2 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) (fma.f64 2/3 (*.f64 x x) 2) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 (fabs.f64 x) (fma.f64 x (*.f64 2/3 x) 2)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 2 (fabs.f64 x) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 (fabs.f64 x) 2 (fma.f64 2/3 (pow.f64 (fabs.f64 x) 3) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) 2 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) (fma.f64 2/3 (*.f64 x x) 2) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 (fabs.f64 x) (fma.f64 x (*.f64 2/3 x) 2)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 2 (fabs.f64 x) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 (fabs.f64 x) 2 (fma.f64 2/3 (pow.f64 (fabs.f64 x) 3) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) 2 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) (fma.f64 2/3 (*.f64 x x) 2) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 (fabs.f64 x) (fma.f64 x (*.f64 2/3 x) 2)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 2 (fabs.f64 x) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 (fabs.f64 x) 2 (fma.f64 2/3 (pow.f64 (fabs.f64 x) 3) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) 2 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) (fma.f64 2/3 (*.f64 x x) 2) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 (fabs.f64 x) (fma.f64 x (*.f64 2/3 x) 2)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 2 (fabs.f64 x) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 (fabs.f64 x) 2 (fma.f64 2/3 (pow.f64 (fabs.f64 x) 3) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) 2 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) (fma.f64 2/3 (*.f64 x x) 2) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 (fabs.f64 x) (fma.f64 x (*.f64 2/3 x) 2)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 2 (fabs.f64 x) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 (fabs.f64 x) 2 (fma.f64 2/3 (pow.f64 (fabs.f64 x) 3) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) 2 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) (fma.f64 2/3 (*.f64 x x) 2) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 (fabs.f64 x) (fma.f64 x (*.f64 2/3 x) 2)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 2 (fabs.f64 x) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 (fabs.f64 x) 2 (fma.f64 2/3 (pow.f64 (fabs.f64 x) 3) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) 2 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) (fma.f64 2/3 (*.f64 x x) 2) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 (fabs.f64 x) (fma.f64 x (*.f64 2/3 x) 2)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (+.f64 (*.f64 1/21 (pow.f64 (fabs.f64 x) 7)) (+.f64 (*.f64 2 (fabs.f64 x)) (+.f64 (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 2 (fabs.f64 x) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 (fabs.f64 x) 2 (fma.f64 2/3 (pow.f64 (fabs.f64 x) 3) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) 2 (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (*.f64 2/3 (pow.f64 (fabs.f64 x) 3))))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 (fabs.f64 x) (fma.f64 2/3 (*.f64 x x) 2) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 1/5 (pow.f64 (fabs.f64 x) 5)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (fma.f64 1/5 (pow.f64 (fabs.f64 x) 5) (fma.f64 1/21 (pow.f64 (fabs.f64 x) 7) (*.f64 (fabs.f64 x) (fma.f64 x (*.f64 2/3 x) 2)))) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))","(*.f64 1/5 (pow.f64 (fabs.f64 x) 5))"]],"stop":[["node limit",1]],"time":110.14794921875,"type":"simplify"},{"compiler":[[5625,2822]],"time":45.005126953125,"type":"eval"},{"alts":[["(fabs.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64))))","fresh",0.453125],["(fabs.f64 (+.f64 (*.f64 (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))) (pow.f64 (PI.f64) -1/2)) (*.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (*.f64 x (pow.f64 x 6)))) (pow.f64 (PI.f64) -1/2))))","next",0.11003876953688403]],"compiler":[[23,18],[31,25],[23,18],[31,25]],"count":[[107,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[105,1],"picked":[1,0]}],"min-error":[0],"time":23.98388671875,"type":"prune"},{"compiler":[[147,111]],"locations":[["(*.f64 1/21 (*.f64 x (pow.f64 x 6)))",0.0703125,true],["(*.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (*.f64 x (pow.f64 x 6)))) (pow.f64 (PI.f64) -1/2))",0.07421875,true],["(*.f64 (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))) (pow.f64 (PI.f64) -1/2))",0.09765625,true],["(*.f64 2/3 (pow.f64 x 3))",0.171875,true]],"time":44.927001953125,"type":"localize"},{"count":[[4,36]],"series":[["(*.f64 1/21 (*.f64 x (pow.f64 x 6)))","x","-inf",0.2529296875],["(*.f64 1/21 (*.f64 x (pow.f64 x 6)))","x","inf",0.233154296875],["(*.f64 1/21 (*.f64 x (pow.f64 x 6)))","x","0",0.35107421875],["(*.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (*.f64 x (pow.f64 x 6)))) (pow.f64 (PI.f64) -1/2))","x","-inf",0.72119140625],["(*.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (*.f64 x (pow.f64 x 6)))) (pow.f64 (PI.f64) -1/2))","x","inf",0.64404296875],["(*.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (*.f64 x (pow.f64 x 6)))) (pow.f64 (PI.f64) -1/2))","x","0",0.782958984375],["(*.f64 (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))) (pow.f64 (PI.f64) -1/2))","x","-inf",0.535888671875],["(*.f64 (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))) (pow.f64 (PI.f64) -1/2))","x","inf",0.422119140625],["(*.f64 (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))) (pow.f64 (PI.f64) -1/2))","x","0",0.698974609375],["(*.f64 2/3 (pow.f64 x 3))","x","-inf",0.341064453125],["(*.f64 2/3 (pow.f64 x 3))","x","inf",0.344970703125],["(*.f64 2/3 (pow.f64 x 3))","x","0",0.563232421875]],"time":6.131103515625,"type":"series"},{"count":[[4,76]],"egraph":[[2,5010,53,0.045736042000000005],[1,470,53,0.010120084],[0,22,59,0.000860709]],"inputs":[["(*.f64 2/3 (pow.f64 x 3))","(*.f64 (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))) (pow.f64 (PI.f64) -1/2))","(*.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (*.f64 x (pow.f64 x 6)))) (pow.f64 (PI.f64) -1/2))","(*.f64 1/21 (*.f64 x (pow.f64 x 6)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 2/3 (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2/3) (pow.f64 x 3))) (cbrt.f64 (pow.f64 (exp.f64 2/3) (pow.f64 x 3))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 2/3) (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 2/3) (pow.f64 x 3)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 2/3) (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 2/3 (pow.f64 x 3)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2/3 (pow.f64 x 3)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 2/3 (pow.f64 x 3)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (cbrt.f64 2/3)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 2/3) (pow.f64 x 3/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 x 6) 4/9))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 2/3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 2/3 (pow.f64 x 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 2/3 (pow.f64 x 3)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 2/3 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 2/3 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 3 (log.f64 x) (log.f64 2/3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 3 (log.f64 x) (log.f64 2/3)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2)) (pow.f64 (PI.f64) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x 2) (pow.f64 (PI.f64) -1/2)) (*.f64 (*.f64 2/3 (pow.f64 x 3)) (pow.f64 (PI.f64) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (PI.f64) -1/2) (*.f64 x 2)) (*.f64 (pow.f64 (PI.f64) -1/2) (*.f64 2/3 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 (PI.f64) -1/2)) (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2)))) (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 (PI.f64) -1/2)) (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2)))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 (PI.f64) -1/2)) (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 (PI.f64) -1/2)) (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 (PI.f64) -1/2)) (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2)) (pow.f64 (PI.f64) -1/2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2)) (pow.f64 (PI.f64) -1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2)) (pow.f64 (PI.f64) -1/2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2)) (pow.f64 (PI.f64) -1/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2))) (pow.f64 (PI.f64) -1/4)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (PI.f64) -1) (pow.f64 (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (pow.f64 (PI.f64) -1/2)) (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2)) (pow.f64 (PI.f64) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2)) (pow.f64 (PI.f64) -1/2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2)) 3) (pow.f64 (pow.f64 (PI.f64) -1/2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 (PI.f64) -1/2) 3) (pow.f64 (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2)) (pow.f64 (PI.f64) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2)) (pow.f64 (PI.f64) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2)) (pow.f64 (PI.f64) -1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (fma.f64 2/3 (pow.f64 x 3) (*.f64 x 2)) (pow.f64 (PI.f64) -1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (PI.f64) -1/2) (*.f64 x 2) (*.f64 (pow.f64 (PI.f64) -1/2) (*.f64 2/3 (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x 2) (pow.f64 (PI.f64) -1/2) (*.f64 (*.f64 2/3 (pow.f64 x 3)) (pow.f64 (PI.f64) -1/2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (pow.f64 (PI.f64) -1/2) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 1/5 (pow.f64 x 5)) (pow.f64 (PI.f64) -1/2)) (*.f64 (*.f64 1/21 (pow.f64 x 7)) (pow.f64 (PI.f64) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (PI.f64) -1/2) (*.f64 1/5 (pow.f64 x 5))) (*.f64 (pow.f64 (PI.f64) -1/2) (*.f64 1/21 (pow.f64 x 7))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7)))) (pow.f64 (PI.f64) -1/2))) (cbrt.f64 (pow.f64 (exp.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7)))) (pow.f64 (PI.f64) -1/2))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7)))) (pow.f64 (PI.f64) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7)))) (pow.f64 (PI.f64) -1/2)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7)))) (pow.f64 (PI.f64) -1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (pow.f64 (PI.f64) -1/2) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (PI.f64) -1/2) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (pow.f64 (PI.f64) -1/2) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (pow.f64 (PI.f64) -1/2) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7)))) (pow.f64 (PI.f64) -1/4)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))) 2) (pow.f64 (PI.f64) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7)))) (pow.f64 (PI.f64) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (pow.f64 (PI.f64) -1/2) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (PI.f64) -1/2) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 (PI.f64) -1/2) 3) (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))) 3) (pow.f64 (pow.f64 (PI.f64) -1/2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (pow.f64 (PI.f64) -1/2) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (pow.f64 (PI.f64) -1/2) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (pow.f64 (PI.f64) -1/2) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (pow.f64 (PI.f64) -1/2) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (PI.f64) -1/2) (*.f64 1/5 (pow.f64 x 5)) (*.f64 (pow.f64 (PI.f64) -1/2) (*.f64 1/21 (pow.f64 x 7))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 1/5 (pow.f64 x 5)) (pow.f64 (PI.f64) -1/2) (*.f64 (*.f64 1/21 (pow.f64 x 7)) (pow.f64 (PI.f64) -1/2)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 1/21 (pow.f64 x 7)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 1/21) (pow.f64 x 7))) (cbrt.f64 (pow.f64 (exp.f64 1/21) (pow.f64 x 7))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 1/21) (pow.f64 x 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 1/21) (pow.f64 x 7)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 1/21) (pow.f64 x 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 1/21 (pow.f64 x 7)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/21 (pow.f64 x 7)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 1/21 (pow.f64 x 7)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/21 (pow.f64 x 7))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 1/21 (pow.f64 x 7))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (pow.f64 x 7) 2) 1/441))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 1/21) (pow.f64 x 7)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 1/21 (pow.f64 x 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 1/21 (pow.f64 x 7)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 1/21 (pow.f64 x 7))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 1/21 (pow.f64 x 7))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 1/21 (pow.f64 x 7))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 1/21 (pow.f64 x 7))) 1))))))"]],"rules":[["egg-rr",16],["egg-rr",22],["egg-rr",22],["egg-rr",16]],"stop":[["node limit",1]],"time":76.72998046875,"type":"rewrite"},{"count":[[112,90]],"egraph":[[16,7597,564,0.08326429299999999],[15,6863,564,0.07452575199999999],[14,6030,564,0.06484120999999998],[13,4923,564,0.05478304299999999],[12,4050,564,0.045086000999999994],[11,3454,564,0.036912917999999996],[10,3068,564,0.029903709999999997],[9,2841,564,0.024457584999999997],[8,2698,564,0.01954396],[7,1819,564,0.014880334999999998],[6,1377,564,0.010290167999999999],[5,1170,564,0.007426542999999999],[4,892,564,0.0051850839999999995],[3,372,564,0.0029953339999999997],[2,154,564,0.001338167],[1,65,600,0.000599625],[0,28,726,0.000225]],"inputs":[["(*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64)))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64)))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64)))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64)))))","(+.f64 (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))))","(*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64)))))","(+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))))","(*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64)))))","(+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 2 x))","(*.f64 x (*.f64 2 (sqrt.f64 (/.f64 1 (PI.f64)))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 2/3 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2 x) (*.f64 2/3 (pow.f64 x 3))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 2/3 (pow.f64 x 3) (*.f64 2 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 x (fma.f64 2/3 (*.f64 x x) 2)))","(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 x (*.f64 x 2/3) 2)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 2/3 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2 x) (*.f64 2/3 (pow.f64 x 3))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 2/3 (pow.f64 x 3) (*.f64 2 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 x (fma.f64 2/3 (*.f64 x x) 2)))","(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 x (*.f64 x 2/3) 2)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 2/3 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2 x) (*.f64 2/3 (pow.f64 x 3))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 2/3 (pow.f64 x 3) (*.f64 2 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 x (fma.f64 2/3 (*.f64 x x) 2)))","(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 x (*.f64 x 2/3) 2)))","(*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64)))))","(*.f64 (*.f64 2/3 (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 2/3 (pow.f64 x 3)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 2/3 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2 x) (*.f64 2/3 (pow.f64 x 3))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 2/3 (pow.f64 x 3) (*.f64 2 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 x (fma.f64 2/3 (*.f64 x x) 2)))","(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 x (*.f64 x 2/3) 2)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 2/3 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2 x) (*.f64 2/3 (pow.f64 x 3))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 2/3 (pow.f64 x 3) (*.f64 2 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 x (fma.f64 2/3 (*.f64 x x) 2)))","(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 x (*.f64 x 2/3) 2)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 2/3 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2 x) (*.f64 2/3 (pow.f64 x 3))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 2/3 (pow.f64 x 3) (*.f64 2 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 x (fma.f64 2/3 (*.f64 x x) 2)))","(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 x (*.f64 x 2/3) 2)))","(*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64)))))","(*.f64 (*.f64 2/3 (pow.f64 x 3)) (sqrt.f64 (/.f64 1 (PI.f64))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 2/3 (pow.f64 x 3)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 2/3 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2 x) (*.f64 2/3 (pow.f64 x 3))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 2/3 (pow.f64 x 3) (*.f64 2 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 x (fma.f64 2/3 (*.f64 x x) 2)))","(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 x (*.f64 x 2/3) 2)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 2/3 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2 x) (*.f64 2/3 (pow.f64 x 3))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 2/3 (pow.f64 x 3) (*.f64 2 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 x (fma.f64 2/3 (*.f64 x x) 2)))","(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 x (*.f64 x 2/3) 2)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 2/3 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2 x) (*.f64 2/3 (pow.f64 x 3))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 2/3 (pow.f64 x 3) (*.f64 2 x)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 x (fma.f64 2/3 (*.f64 x x) 2)))","(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 x (*.f64 x 2/3) 2)))","(*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64)))))","(*.f64 1/5 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 5)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 1/5 (pow.f64 x 5)))","(+.f64 (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 1/5 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 5)) (*.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/21 (pow.f64 x 7)) (*.f64 1/5 (pow.f64 x 5))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))))","(+.f64 (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 1/5 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 5)) (*.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/21 (pow.f64 x 7)) (*.f64 1/5 (pow.f64 x 5))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))))","(+.f64 (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 1/5 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 5)) (*.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/21 (pow.f64 x 7)) (*.f64 1/5 (pow.f64 x 5))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))))","(*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64)))))","(*.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 1/21 (pow.f64 x 7)))","(+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 1/5 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 5)) (*.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/21 (pow.f64 x 7)) (*.f64 1/5 (pow.f64 x 5))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))))","(+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 1/5 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 5)) (*.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/21 (pow.f64 x 7)) (*.f64 1/5 (pow.f64 x 5))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))))","(+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 1/5 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 5)) (*.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/21 (pow.f64 x 7)) (*.f64 1/5 (pow.f64 x 5))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))))","(*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64)))))","(*.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 1/21 (pow.f64 x 7)))","(+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 1/5 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 5)) (*.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/21 (pow.f64 x 7)) (*.f64 1/5 (pow.f64 x 5))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))))","(+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 1/5 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 5)) (*.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/21 (pow.f64 x 7)) (*.f64 1/5 (pow.f64 x 5))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))))","(+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 1/5 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 5)) (*.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/21 (pow.f64 x 7)) (*.f64 1/5 (pow.f64 x 5))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))","(*.f64 1/21 (pow.f64 x 7))"]],"stop":[["node limit",1]],"time":118.328125,"type":"simplify"},{"compiler":[[2992,2380]],"time":45.58984375,"type":"eval"},{"alts":[["(fabs.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64))))","next",0.453125],["(fabs.f64 (+.f64 (*.f64 (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))) (pow.f64 (PI.f64) -1/2)) (*.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (*.f64 x (pow.f64 x 6)))) (pow.f64 (PI.f64) -1/2))))","done",0.11003876953688403]],"compiler":[[23,18],[31,25],[23,18]],"count":[[92,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[90,0],"picked":[1,1]}],"min-error":[0],"time":20.052001953125,"type":"prune"},{"compiler":[[105,68]],"locations":[["(fma.f64 2/3 (*.f64 x x) 2)",0.0390625,true],["(*.f64 1/21 (pow.f64 x 7))",0.0703125,true],["(/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))",0.328125,true],["(sqrt.f64 (PI.f64))",1.0,false]],"time":25.43798828125,"type":"localize"},{"count":[[3,24]],"series":[["(fma.f64 2/3 (*.f64 x x) 2)","x","-inf",0.19189453125],["(fma.f64 2/3 (*.f64 x x) 2)","x","inf",0.27685546875],["(fma.f64 2/3 (*.f64 x x) 2)","x","0",0.239990234375],["(*.f64 1/21 (pow.f64 x 7))","x","-inf",0.136962890625],["(*.f64 1/21 (pow.f64 x 7))","x","inf",0.1689453125],["(*.f64 1/21 (pow.f64 x 7))","x","0",0.1650390625],["(/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))","x","-inf",0.340087890625],["(/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))","x","inf",1.987060546875],["(/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))","x","0",0.5400390625]],"time":4.18701171875,"type":"series"},{"count":[[3,80]],"egraph":[[2,4281,46,0.033608208],[1,382,46,0.007101792],[0,18,46,0.000670708]],"inputs":[["(/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))","(*.f64 1/21 (pow.f64 x 7))","(fma.f64 2/3 (*.f64 x x) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64))))) (cbrt.f64 (exp.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (pow.f64 (PI.f64) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))) (cbrt.f64 (/.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) 2) (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) 2) (PI.f64))) (cbrt.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7))))) 2) (*.f64 (cbrt.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7))))) (pow.f64 (PI.f64) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))) (sqrt.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7))))) (*.f64 (sqrt.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7))))) (pow.f64 (PI.f64) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7))))) (/.f64 1 (neg.f64 (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (PI.f64) -1/2) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7))))) 2) 1) (/.f64 (cbrt.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7))))) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7))))) 1) (/.f64 (sqrt.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7))))) (sqrt.f64 (PI.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (PI.f64))) (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (cbrt.f64 (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7))))) 2) (cbrt.f64 (PI.f64))) (cbrt.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7))))) (cbrt.f64 (PI.f64))) (/.f64 (sqrt.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7))))) (cbrt.f64 (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (PI.f64) 1/4)) (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (pow.f64 (PI.f64) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7))))) 2) (pow.f64 (PI.f64) 1/4)) (/.f64 (cbrt.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7))))) (pow.f64 (PI.f64) 1/4)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 (PI.f64)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) 3) (pow.f64 (PI.f64) 3/2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (sqrt.f64 (PI.f64)) (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7))))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (neg.f64 (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) 2) (PI.f64)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) 3) (pow.f64 (PI.f64) 3/2)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 1/21 (pow.f64 x 7)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 1/21) (pow.f64 x 7))) (cbrt.f64 (pow.f64 (exp.f64 1/21) (pow.f64 x 7))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 1/21) (pow.f64 x 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 1/21) (pow.f64 x 7)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 1/21) (pow.f64 x 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 1/21 (pow.f64 x 7)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/21 (pow.f64 x 7)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 1/21 (pow.f64 x 7)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 1/21 (pow.f64 x 7))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 1/21) (pow.f64 x 7/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 x 14) 1/441))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 1/21) (pow.f64 x 7)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 1/21 (pow.f64 x 7)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 1/21 (pow.f64 x 7)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 1/21 (pow.f64 x 7))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 1/21 (pow.f64 x 7))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 7 (log.f64 x) (log1p.f64 -20/21)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 7 (log.f64 x) (log1p.f64 -20/21)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 2 (*.f64 2/3 (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2/3 (*.f64 x x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 2/3 (*.f64 x x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 2/3 (*.f64 x x)) 1) 2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (fma.f64 2/3 (*.f64 x x) 2))) (cbrt.f64 (exp.f64 (fma.f64 2/3 (*.f64 x x) 2))))) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 2/3 (*.f64 x x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 2/3 (*.f64 x x) 2)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 2/3 (*.f64 x x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 2/3 (*.f64 x x) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 2/3 (*.f64 x x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 2/3 (*.f64 x x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 2/3 (*.f64 x x) 2)) (pow.f64 (cbrt.f64 (fma.f64 2/3 (*.f64 x x) 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 2/3 (*.f64 x x) 2)) 2) (cbrt.f64 (fma.f64 2/3 (*.f64 x x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 2/3 (*.f64 x x) 2)) (sqrt.f64 (fma.f64 2/3 (*.f64 x x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 2/3 (*.f64 x x)) 3) 8) (fma.f64 (*.f64 2/3 (*.f64 x x)) (*.f64 2/3 (*.f64 x x)) (-.f64 4 (*.f64 (*.f64 2/3 (*.f64 x x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 2/3 (*.f64 x x)) (*.f64 2/3 (*.f64 x x)) -4) (fma.f64 2/3 (*.f64 x x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 2/3 (*.f64 x x) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 2/3 (*.f64 x x) 2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 2/3 (*.f64 x x) 2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 2/3 (*.f64 x x) 2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 2/3 (*.f64 x x) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 2/3 (*.f64 x x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 2/3 (*.f64 x x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 2/3 (*.f64 x x) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 2/3 (*.f64 x x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 2/3 (*.f64 x x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 2/3 (*.f64 x x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 2/3 (*.f64 x x) 2)) 1))))))"]],"rules":[["egg-rr",26],["egg-rr",16],["egg-rr",38]],"stop":[["node limit",1]],"time":62.14404296875,"type":"rewrite"},{"count":[[104,100]],"egraph":[[13,7553,387,0.084744709],[12,6706,387,0.074459792],[11,6035,387,0.062206000000000004],[10,5505,387,0.05122654200000001],[9,4080,387,0.041590167000000004],[8,3790,393,0.032157375],[7,3555,393,0.025541209000000002],[6,3389,393,0.019708375],[5,2554,393,0.014239417],[4,2105,393,0.009308792],[3,790,393,0.005186125],[2,268,399,0.001970042],[1,105,471,0.000742375],[0,37,549,0.000225417]],"inputs":[["(*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64)))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64)))))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))))","(*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64)))))","(+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))))","(*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64)))))","(+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))))","2","(+.f64 (*.f64 2/3 (pow.f64 x 2)) 2)","(+.f64 (*.f64 2/3 (pow.f64 x 2)) 2)","(+.f64 (*.f64 2/3 (pow.f64 x 2)) 2)","(*.f64 2/3 (pow.f64 x 2))","(+.f64 (*.f64 2/3 (pow.f64 x 2)) 2)","(+.f64 (*.f64 2/3 (pow.f64 x 2)) 2)","(+.f64 (*.f64 2/3 (pow.f64 x 2)) 2)","(*.f64 2/3 (pow.f64 x 2))","(+.f64 (*.f64 2/3 (pow.f64 x 2)) 2)","(+.f64 (*.f64 2/3 (pow.f64 x 2)) 2)","(+.f64 (*.f64 2/3 (pow.f64 x 2)) 2)"]],"method":["egg-herbie"],"outputs":[["(*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 2 x))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 2/3 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2 x) (*.f64 2/3 (pow.f64 x 3))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 x (fma.f64 x (*.f64 x 2/3) 2)))","(*.f64 x (*.f64 (fma.f64 x (*.f64 x 2/3) 2) (sqrt.f64 (/.f64 1 (PI.f64)))))","(*.f64 x (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 x (*.f64 x 2/3) 2)))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64)))))))","(fma.f64 2/3 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (fma.f64 1/5 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 5)) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64)))))))","(fma.f64 2/3 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2 x) (*.f64 1/5 (pow.f64 x 5)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2 x) (fma.f64 2/3 (pow.f64 x 3) (*.f64 1/5 (pow.f64 x 5)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 2 x (fma.f64 1/5 (pow.f64 x 5) (*.f64 2/3 (pow.f64 x 3)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 2 x (fma.f64 2/3 (pow.f64 x 3) (*.f64 1/5 (pow.f64 x 5)))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))))","(fma.f64 2/3 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (fma.f64 1/5 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 5)) (fma.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7)) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2 x) (*.f64 1/5 (pow.f64 x 5)))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2/3 (pow.f64 x 3)) (*.f64 1/21 (pow.f64 x 7)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (fma.f64 2/3 (pow.f64 x 3) (*.f64 1/5 (pow.f64 x 5))) (fma.f64 2 x (*.f64 1/21 (pow.f64 x 7)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2/3 (pow.f64 x 3)) (fma.f64 1/21 (pow.f64 x 7) (fma.f64 1/5 (pow.f64 x 5) (*.f64 2 x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 2 x (fma.f64 2/3 (pow.f64 x 3) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))))))","(*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64)))))","(*.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 1/21 (pow.f64 x 7)))","(+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 1/5 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 5)) (*.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/5 (pow.f64 x 5)) (*.f64 1/21 (pow.f64 x 7))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/21 (pow.f64 x 7) (*.f64 1/5 (pow.f64 x 5))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(fma.f64 2/3 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (fma.f64 1/5 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 5)) (*.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7)))))","(fma.f64 2/3 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/5 (pow.f64 x 5)) (*.f64 1/21 (pow.f64 x 7)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/5 (pow.f64 x 5)) (fma.f64 2/3 (pow.f64 x 3) (*.f64 1/21 (pow.f64 x 7)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 2/3 (pow.f64 x 3) (fma.f64 1/21 (pow.f64 x 7) (*.f64 1/5 (pow.f64 x 5)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 2/3 (pow.f64 x 3) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7)))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))))","(fma.f64 2/3 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (fma.f64 1/5 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 5)) (fma.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7)) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2 x) (*.f64 1/5 (pow.f64 x 5)))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2/3 (pow.f64 x 3)) (*.f64 1/21 (pow.f64 x 7)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (fma.f64 2/3 (pow.f64 x 3) (*.f64 1/5 (pow.f64 x 5))) (fma.f64 2 x (*.f64 1/21 (pow.f64 x 7)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2/3 (pow.f64 x 3)) (fma.f64 1/21 (pow.f64 x 7) (fma.f64 1/5 (pow.f64 x 5) (*.f64 2 x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 2 x (fma.f64 2/3 (pow.f64 x 3) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))))))","(*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64)))))","(*.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7)))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (*.f64 1/21 (pow.f64 x 7)))","(+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))))","(fma.f64 1/5 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 5)) (*.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/5 (pow.f64 x 5)) (*.f64 1/21 (pow.f64 x 7))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 1/21 (pow.f64 x 7) (*.f64 1/5 (pow.f64 x 5))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64)))))))","(fma.f64 2/3 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (fma.f64 1/5 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 5)) (*.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7)))))","(fma.f64 2/3 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/5 (pow.f64 x 5)) (*.f64 1/21 (pow.f64 x 7)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 1/5 (pow.f64 x 5)) (fma.f64 2/3 (pow.f64 x 3) (*.f64 1/21 (pow.f64 x 7)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 2/3 (pow.f64 x 3) (fma.f64 1/21 (pow.f64 x 7) (*.f64 1/5 (pow.f64 x 5)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 2/3 (pow.f64 x 3) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7)))))","(+.f64 (*.f64 2/3 (*.f64 (pow.f64 x 3) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/5 (*.f64 (pow.f64 x 5) (sqrt.f64 (/.f64 1 (PI.f64))))) (+.f64 (*.f64 1/21 (*.f64 (pow.f64 x 7) (sqrt.f64 (/.f64 1 (PI.f64))))) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))))","(fma.f64 2/3 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 3)) (fma.f64 1/5 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 5)) (fma.f64 1/21 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (pow.f64 x 7)) (*.f64 2 (*.f64 x (sqrt.f64 (/.f64 1 (PI.f64))))))))","(+.f64 (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2 x) (*.f64 1/5 (pow.f64 x 5)))) (*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2/3 (pow.f64 x 3)) (*.f64 1/21 (pow.f64 x 7)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (fma.f64 2/3 (pow.f64 x 3) (*.f64 1/5 (pow.f64 x 5))) (fma.f64 2 x (*.f64 1/21 (pow.f64 x 7)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (+.f64 (*.f64 2/3 (pow.f64 x 3)) (fma.f64 1/21 (pow.f64 x 7) (fma.f64 1/5 (pow.f64 x 5) (*.f64 2 x)))))","(*.f64 (sqrt.f64 (/.f64 1 (PI.f64))) (fma.f64 2 x (fma.f64 2/3 (pow.f64 x 3) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (pow.f64 x 7))))))","2","(+.f64 (*.f64 2/3 (pow.f64 x 2)) 2)","(fma.f64 2/3 (*.f64 x x) 2)","(fma.f64 x (*.f64 x 2/3) 2)","(+.f64 (*.f64 2/3 (pow.f64 x 2)) 2)","(fma.f64 2/3 (*.f64 x x) 2)","(fma.f64 x (*.f64 x 2/3) 2)","(+.f64 (*.f64 2/3 (pow.f64 x 2)) 2)","(fma.f64 2/3 (*.f64 x x) 2)","(fma.f64 x (*.f64 x 2/3) 2)","(*.f64 2/3 (pow.f64 x 2))","(*.f64 2/3 (*.f64 x x))","(*.f64 x (*.f64 x 2/3))","(+.f64 (*.f64 2/3 (pow.f64 x 2)) 2)","(fma.f64 2/3 (*.f64 x x) 2)","(fma.f64 x (*.f64 x 2/3) 2)","(+.f64 (*.f64 2/3 (pow.f64 x 2)) 2)","(fma.f64 2/3 (*.f64 x x) 2)","(fma.f64 x (*.f64 x 2/3) 2)","(+.f64 (*.f64 2/3 (pow.f64 x 2)) 2)","(fma.f64 2/3 (*.f64 x x) 2)","(fma.f64 x (*.f64 x 2/3) 2)","(*.f64 2/3 (pow.f64 x 2))","(*.f64 2/3 (*.f64 x x))","(*.f64 x (*.f64 x 2/3))","(+.f64 (*.f64 2/3 (pow.f64 x 2)) 2)","(fma.f64 2/3 (*.f64 x x) 2)","(fma.f64 x (*.f64 x 2/3) 2)","(+.f64 (*.f64 2/3 (pow.f64 x 2)) 2)","(fma.f64 2/3 (*.f64 x x) 2)","(fma.f64 x (*.f64 x 2/3) 2)","(+.f64 (*.f64 2/3 (pow.f64 x 2)) 2)","(fma.f64 2/3 (*.f64 x x) 2)","(fma.f64 x (*.f64 x 2/3) 2)"]],"stop":[["node limit",1]],"time":108.719970703125,"type":"simplify"},{"compiler":[[3527,2435]],"time":46.093017578125,"type":"eval"},{"alts":[["(fabs.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64))))","done",0.453125],["(fabs.f64 (+.f64 (*.f64 (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))) (pow.f64 (PI.f64) -1/2)) (*.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (*.f64 x (pow.f64 x 6)))) (pow.f64 (PI.f64) -1/2))))","done",0.11003876953688403]],"compiler":[[23,18],[31,25]],"count":[[130,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[128,0],"picked":[1,1]}],"min-error":[0],"time":25.321044921875,"type":"prune"},{"accuracy":[0.11003876953688403],"baseline":[0.11003876953688403],"branch":[["x",0.11003876953688403,1],["(fabs.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (+.f64 (+.f64 (+.f64 (*.f64 2 (fabs.f64 x)) (*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 21) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x))))))",0.11003876953688405,1],["(*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (+.f64 (+.f64 (+.f64 (*.f64 2 (fabs.f64 x)) (*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 21) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))))",0.11003876953688405,1],["(+.f64 (+.f64 (+.f64 (*.f64 2 (fabs.f64 x)) (*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 21) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x))))",0.11003876953688405,1],["(fabs.f64 x)",0.11003876953688405,1]],"compiler":[[2,1],[68,31],[67,30],[62,25],[3,2],[120,69]],"count":[[3,1]],"inputs":[["(fabs.f64 (+.f64 (*.f64 (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))) (pow.f64 (PI.f64) -1/2)) (*.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (*.f64 x (pow.f64 x 6)))) (pow.f64 (PI.f64) -1/2))))","(fabs.f64 (/.f64 (fma.f64 1/5 (pow.f64 x 5) (fma.f64 x (fma.f64 2/3 (*.f64 x x) 2) (*.f64 1/21 (pow.f64 x 7)))) (sqrt.f64 (PI.f64))))","(fabs.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (+.f64 (+.f64 (+.f64 (*.f64 2 (fabs.f64 x)) (*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 21) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x))))))"]],"link":["."],"name":["Jmat.Real.erfi, branch x less than or equal to 0.5"],"oracle":[0.5732612793053261],"outputs":[["(fabs.f64 (+.f64 (*.f64 (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))) (pow.f64 (PI.f64) -1/2)) (*.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (*.f64 x (pow.f64 x 6)))) (pow.f64 (PI.f64) -1/2))))"]],"time":19.31298828125,"times":[["x",3.05908203125],["(fabs.f64 (*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (+.f64 (+.f64 (+.f64 (*.f64 2 (fabs.f64 x)) (*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 21) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x))))))",3.656982421875],["(*.f64 (/.f64 1 (sqrt.f64 (PI.f64))) (+.f64 (+.f64 (+.f64 (*.f64 2 (fabs.f64 x)) (*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 21) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))))",3.824951171875],["(+.f64 (+.f64 (+.f64 (*.f64 2 (fabs.f64 x)) (*.f64 (/.f64 2 3) (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 5) (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)))) (*.f64 (/.f64 1 21) (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (*.f64 (fabs.f64 x) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x)) (fabs.f64 x))))",3.41015625],["(fabs.f64 x)",2.962158203125]],"type":"regimes"},{"compiler":[[31,25]],"egraph":[[1,30,46,7.1417e-5],[0,24,46,4.1625e-5]],"inputs":[["(fabs.f64 (+.f64 (*.f64 (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))) (pow.f64 (PI.f64) -1/2)) (*.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (*.f64 x (pow.f64 x 6)))) (pow.f64 (PI.f64) -1/2))))"]],"method":["egg-herbie"],"outputs":[["(fabs.f64 (+.f64 (*.f64 (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))) (pow.f64 (PI.f64) -1/2)) (*.f64 (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (*.f64 x (pow.f64 x 6)))) (pow.f64 (PI.f64) -1/2))))","(fabs.f64 (+.f64 (*.f64 (fma.f64 2 x (*.f64 2/3 (pow.f64 x 3))) (pow.f64 (PI.f64) -1/2)) (*.f64 (pow.f64 (PI.f64) -1/2) (fma.f64 1/5 (pow.f64 x 5) (*.f64 1/21 (*.f64 x (pow.f64 x 6)))))))"]],"stop":[["done",1],["saturated",1]],"time":8.85205078125,"type":"simplify"},{"time":0.00390625,"type":"soundness"},{"compiler":[[31,25]],"remove-preprocessing":[[]],"time":16.26708984375,"type":"end"}]