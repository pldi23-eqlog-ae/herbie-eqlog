[{"compiler":[[13,10]],"method":["search"],"sampling":[[12,0.9975595474243164,0.0019521713256835938,0.00048828125],[11,0.9956073760986328,0.0039043426513671875,0.00048828125],[10,0.9917030334472656,0.007808685302734375,0.00048828125],[9,0.9838943481445313,0.01561737060546875,0.00048828125],[8,0.9682769775390625,0.0312347412109375,0.00048828125],[7,0.937042236328125,0.062469482421875,0.00048828125],[6,0.87457275390625,0.12493896484375,0.00048828125],[5,0.7496337890625,0.2498779296875,0.00048828125],[4,0.499755859375,0.499755859375,0.00048828125],[3,0.0,0.99951171875,0.00048828125],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":2.760986328125,"type":"analyze"},{"outcomes":[["body",256,"valid",293.864990234375,8256]],"time":301.1728515625,"type":"sample"},{"compiler":[[12,9]],"egraph":[[0,1,1,9.16e-7],[2,16,16,0.000124209],[1,15,16,9.025e-5],[0,8,16,5.4792e-5]],"inputs":[["0"],["(+.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (+.f64 x 1)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(+.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (+.f64 x 1)))","(+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 x (+.f64 1 x)))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":22.80908203125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[2,16,16,0.000118833],[1,15,16,8.529100000000001e-5],[0,8,16,5.0083e-5]],"inputs":[["(+.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (+.f64 x 1)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (+.f64 x 1)))","(+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 x (+.f64 1 x)))"]],"stop":[["saturated",1]],"time":10.18115234375,"type":"simplify"},{"compiler":[[23,17]],"time":0.394775390625,"type":"eval"},{"alts":[["(+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 x (+.f64 1 x)))","next",0.015625]],"compiler":[[12,9],[12,9]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.015625],"time":0.840087890625,"type":"prune"},{"compiler":[[31,22]],"locations":[["(/.f64 x (+.f64 1 x))",0.00390625,true],["(+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 x (+.f64 1 x)))",0.0078125,true],["(/.f64 1 (+.f64 x -1))",0.01953125,true]],"time":7.14013671875,"type":"localize"},{"count":[[3,36]],"series":[["(/.f64 x (+.f64 1 x))","x","-inf",0.18798828125],["(/.f64 x (+.f64 1 x))","x","inf",0.19287109375],["(/.f64 x (+.f64 1 x))","x","0",0.178955078125],["(+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 x (+.f64 1 x)))","x","-inf",0.279052734375],["(+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 x (+.f64 1 x)))","x","inf",0.343017578125],["(+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 x (+.f64 1 x)))","x","0",0.27587890625],["(/.f64 1 (+.f64 x -1))","x","-inf",0.252197265625],["(/.f64 1 (+.f64 x -1))","x","inf",0.30712890625],["(/.f64 1 (+.f64 x -1))","x","0",0.320068359375]],"time":2.4580078125,"type":"series"},{"count":[[3,154]],"egraph":[[2,3359,30,0.027110082],[1,211,30,0.004188957],[0,9,30,0.000285541]],"inputs":[["(/.f64 1 (+.f64 x -1))","(+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 x (+.f64 1 x)))","(/.f64 x (+.f64 1 x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 -1 (-.f64 1 x)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 -1 (-.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 -1 (-.f64 1 x))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 -1 (-.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 -1 (-.f64 1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 (-.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 x -1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (cbrt.f64 (/.f64 -1 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x -1) -1/2) (pow.f64 (+.f64 x -1) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x -1)) -2) (cbrt.f64 (/.f64 -1 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (-.f64 (fma.f64 x x 1) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 x x -1)) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 x -1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -1 (-.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x -1) 2) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x -1) 3) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x -1) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 x -1)) -3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 x -1)) -2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x -1) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 x -1) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (-.f64 1 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 x -1) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 -1 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 -1 (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 x -1) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 -1 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 -1 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log.f64 (+.f64 x -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 x -1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (+.f64 x -1))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) (/.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2) (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) 2) (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) (sqrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x (fma.f64 x (+.f64 x -1) 1)) (/.f64 1 (fma.f64 x x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (+.f64 x -1) -3) (pow.f64 (/.f64 x (+.f64 1 x)) 3)) (/.f64 1 (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2) (/.f64 x (fma.f64 x x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 x x -1) (+.f64 x (fma.f64 x (+.f64 x -1) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2) (/.f64 x (fma.f64 x x -1)))) (+.f64 (pow.f64 (+.f64 x -1) -3) (pow.f64 (/.f64 x (+.f64 1 x)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (/.f64 x (+.f64 1 x)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x (fma.f64 x (+.f64 x -1) 1)) (fma.f64 x x -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 x -1) -3) (pow.f64 (/.f64 x (+.f64 1 x)) 3)) (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2) (/.f64 x (fma.f64 x x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 x -1) -3) (pow.f64 (/.f64 x (+.f64 1 x)) 3)) (+.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2) (-.f64 (pow.f64 (+.f64 x -1) -2) (/.f64 x (fma.f64 x x -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 x (fma.f64 x (+.f64 x -1) 1))) (neg.f64 (fma.f64 x x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (+.f64 x -1) -3) (pow.f64 (/.f64 x (+.f64 1 x)) 3))) (neg.f64 (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2) (/.f64 x (fma.f64 x x -1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (/.f64 x (+.f64 1 x)) 2))) (neg.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 (+.f64 1 x) x) (+.f64 x -1)) (*.f64 (+.f64 x -1) (/.f64 (+.f64 1 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (/.f64 (+.f64 1 x) x) (*.f64 (-.f64 1 x) 1)) (*.f64 (-.f64 1 x) (/.f64 (+.f64 1 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 x -1 -1) (*.f64 (-.f64 1 x) x)) (*.f64 (-.f64 1 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (fma.f64 x -1 -1) (*.f64 (+.f64 x -1) (neg.f64 x))) (*.f64 (+.f64 x -1) (fma.f64 x -1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (fma.f64 x -1 -1) (*.f64 (-.f64 1 x) (neg.f64 x))) (*.f64 (-.f64 1 x) (fma.f64 x -1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 x -1) (*.f64 (/.f64 (+.f64 1 x) x) 1)) (*.f64 (/.f64 (+.f64 1 x) x) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 x) (+.f64 x -1) (*.f64 (fma.f64 x -1 -1) 1)) (*.f64 (fma.f64 x -1 -1) (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 1 x) (*.f64 (/.f64 (+.f64 1 x) x) -1)) (*.f64 (/.f64 (+.f64 1 x) x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x (-.f64 1 x) (*.f64 (+.f64 1 x) -1)) (*.f64 (+.f64 1 x) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (neg.f64 x) (-.f64 1 x) (*.f64 (fma.f64 x -1 -1) -1)) (*.f64 (fma.f64 x -1 -1) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2) (pow.f64 (+.f64 x -1) -2)) (-.f64 (/.f64 x (+.f64 1 x)) (/.f64 -1 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x (fma.f64 x (+.f64 x -1) 1)) (+.f64 x -1)) (+.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 x x -1) (+.f64 x (fma.f64 x (+.f64 x -1) 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (pow.f64 (+.f64 x -1) -2) (-.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2) (/.f64 x (fma.f64 x x -1)))) (+.f64 (pow.f64 (+.f64 x -1) -3) (pow.f64 (/.f64 x (+.f64 1 x)) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (/.f64 x (+.f64 1 x)) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 -1 (-.f64 1 x)))) (exp.f64 (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 -1 (-.f64 1 x))) (+.f64 1 (expm1.f64 (/.f64 x (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 -1 (-.f64 1 x)))) (+.f64 1 (expm1.f64 (/.f64 x (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 x (+.f64 1 x)))) (exp.f64 (/.f64 -1 (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 x (+.f64 1 x))) (+.f64 1 (expm1.f64 (/.f64 -1 (-.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 x (+.f64 1 x)))) (+.f64 1 (expm1.f64 (/.f64 -1 (-.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 x (+.f64 1 x)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (+.f64 1 x)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 1 x)) 1 (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 1 x)) 1 (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) 2) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) 2) (cbrt.f64 (/.f64 x (+.f64 1 x))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1 (-.f64 1 x))) (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (cbrt.f64 (/.f64 -1 (-.f64 1 x))) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (+.f64 1 x))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x (+.f64 1 x))) (sqrt.f64 (/.f64 x (+.f64 1 x))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 x -1) -1/2) (pow.f64 (+.f64 x -1) -1/2) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (+.f64 1 x))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 1 (fma.f64 x -1 -1)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 1 x)) x (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 x -1)) -2) (cbrt.f64 (/.f64 -1 (-.f64 1 x))) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (+.f64 1 x)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 1 x)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 x)) -2) (/.f64 x (cbrt.f64 (+.f64 1 x))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (+.f64 1 x)) 2)) (cbrt.f64 (/.f64 x (+.f64 1 x))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (+.f64 1 x)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (+.f64 1 x))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 x) -1/2) (/.f64 x (hypot.f64 1 (sqrt.f64 x))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (hypot.f64 1 (sqrt.f64 x))) (/.f64 (cbrt.f64 x) (hypot.f64 1 (sqrt.f64 x))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (+.f64 1 (pow.f64 x 3))) (fma.f64 x (+.f64 x -1) 1) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x (-.f64 1 (*.f64 x x))) (-.f64 1 x) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (+.f64 -1 (pow.f64 x 3))) (-.f64 (fma.f64 x x 1) (neg.f64 x)) (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (fma.f64 x x -1)) (+.f64 1 x) (/.f64 x (+.f64 1 x)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 x (+.f64 1 x)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (+.f64 1 x))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (+.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (+.f64 1 x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) 2) (cbrt.f64 (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (+.f64 1 x))) (sqrt.f64 (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (fma.f64 x -1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 1 x)) -2) (/.f64 x (cbrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (+.f64 1 x)) 2)) (cbrt.f64 (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (+.f64 1 x)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 x) -1/2) (/.f64 x (hypot.f64 1 (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (hypot.f64 1 (sqrt.f64 x))) (/.f64 (cbrt.f64 x) (hypot.f64 1 (sqrt.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 1 (pow.f64 x 3))) (fma.f64 x (+.f64 x -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 1 (*.f64 x x))) (-.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 1 x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 1 x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (+.f64 1 x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 1 x) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (+.f64 1 x) x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (fma.f64 x -1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (+.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 1 x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (+.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 x) (log1p.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (-.f64 (log.f64 x) (log1p.f64 x)) 1))))))"]],"rules":[["egg-rr",39],["egg-rr",82],["egg-rr",33]],"stop":[["node limit",1]],"time":53.7587890625,"type":"rewrite"},{"count":[[190,194]],"egraph":[[4,5517,450,0.025390125],[3,1523,450,0.012298916],[2,500,456,0.0037907080000000003],[1,180,466,0.001194375],[0,59,485,0.000300125]],"inputs":[["-1","(-.f64 (*.f64 -1 x) 1)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x)) 1)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x))) 1)","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","-1","(-.f64 (*.f64 -2 (pow.f64 x 2)) 1)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (*.f64 -2 (pow.f64 x 4))) 1)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 (*.f64 -2 (pow.f64 x 4)) (*.f64 -2 (pow.f64 x 6)))) 1)","1","(+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 6))) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","1","(+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 x 2))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 6))) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","x","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (pow.f64 x 3) x))","(+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (pow.f64 x 3) x)))","1","(-.f64 1 (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","1","(-.f64 1 (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 -1 x) 1)","(fma.f64 -1 x -1)","(-.f64 -1 x)","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x)) 1)","(+.f64 (neg.f64 (*.f64 x x)) (fma.f64 -1 x -1))","(fma.f64 -1 (fma.f64 x x x) -1)","(-.f64 -1 (fma.f64 x x x))","(-.f64 (+.f64 (*.f64 -1 (pow.f64 x 3)) (+.f64 (*.f64 -1 (pow.f64 x 2)) (*.f64 -1 x))) 1)","(+.f64 (fma.f64 -1 (pow.f64 x 3) (*.f64 -1 (+.f64 (*.f64 x x) x))) -1)","(fma.f64 -1 (pow.f64 x 3) (fma.f64 -1 (fma.f64 x x x) -1))","(-.f64 (-.f64 -1 (fma.f64 x x x)) (pow.f64 x 3))","(*.f64 (fma.f64 x x 1) (-.f64 -1 x))","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x)))","(+.f64 (/.f64 1 x) (/.f64 (/.f64 1 x) x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 (/.f64 1 x) x) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(+.f64 (+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3)))) (/.f64 1 (pow.f64 x 4)))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 (/.f64 1 x) x) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 3)))))","(+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3)))))","(/.f64 1 x)","(+.f64 (/.f64 1 (pow.f64 x 2)) (/.f64 1 x))","(+.f64 (/.f64 1 x) (/.f64 1 (*.f64 x x)))","(+.f64 (/.f64 1 x) (/.f64 (/.f64 1 x) x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x)))","(+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 (/.f64 1 x) x) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 (pow.f64 x 2)) (+.f64 (/.f64 1 (pow.f64 x 3)) (/.f64 1 x))))","(+.f64 (+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3)))) (/.f64 1 (pow.f64 x 4)))","(+.f64 (/.f64 1 x) (+.f64 (/.f64 (/.f64 1 x) x) (+.f64 (/.f64 1 (pow.f64 x 4)) (/.f64 1 (pow.f64 x 3)))))","(+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 (pow.f64 x 4)) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3)))))","-1","(-.f64 (*.f64 -2 (pow.f64 x 2)) 1)","(fma.f64 -2 (*.f64 x x) -1)","(fma.f64 (*.f64 x x) -2 -1)","(fma.f64 x (*.f64 x -2) -1)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (*.f64 -2 (pow.f64 x 4))) 1)","(+.f64 (*.f64 -2 (+.f64 (*.f64 x x) (pow.f64 x 4))) -1)","(fma.f64 -2 (fma.f64 x x (pow.f64 x 4)) -1)","(-.f64 (+.f64 (*.f64 -2 (pow.f64 x 2)) (+.f64 (*.f64 -2 (pow.f64 x 4)) (*.f64 -2 (pow.f64 x 6)))) 1)","(+.f64 (fma.f64 -2 (*.f64 x x) (*.f64 -2 (+.f64 (pow.f64 x 4) (pow.f64 x 6)))) -1)","(+.f64 -1 (*.f64 -2 (+.f64 (fma.f64 x x (pow.f64 x 4)) (pow.f64 x 6))))","(fma.f64 -2 (+.f64 (pow.f64 x 6) (fma.f64 x x (pow.f64 x 4))) -1)","1","(+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 x 2))))","(+.f64 1 (/.f64 2 (*.f64 x x)))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2)))))","(+.f64 1 (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 4))))","(+.f64 (+.f64 1 (/.f64 2 (*.f64 x x))) (/.f64 2 (pow.f64 x 4)))","(+.f64 (/.f64 2 (*.f64 x x)) (+.f64 1 (/.f64 2 (pow.f64 x 4))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 6))) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(+.f64 1 (+.f64 (/.f64 2 (pow.f64 x 4)) (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 6)))))","(+.f64 (+.f64 1 (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 6)))) (/.f64 2 (pow.f64 x 4)))","(+.f64 (/.f64 2 (*.f64 x x)) (+.f64 (/.f64 2 (pow.f64 x 4)) (+.f64 1 (/.f64 2 (pow.f64 x 6)))))","(+.f64 (/.f64 2 (pow.f64 x 4)) (+.f64 1 (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 6)))))","(+.f64 1 (+.f64 (/.f64 2 (*.f64 x x)) (+.f64 (/.f64 2 (pow.f64 x 4)) (/.f64 2 (pow.f64 x 6)))))","1","(+.f64 1 (*.f64 2 (/.f64 1 (pow.f64 x 2))))","(+.f64 1 (/.f64 2 (*.f64 x x)))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (*.f64 2 (/.f64 1 (pow.f64 x 2)))))","(+.f64 1 (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 4))))","(+.f64 (+.f64 1 (/.f64 2 (*.f64 x x))) (/.f64 2 (pow.f64 x 4)))","(+.f64 (/.f64 2 (*.f64 x x)) (+.f64 1 (/.f64 2 (pow.f64 x 4))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 4))) (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 6))) (*.f64 2 (/.f64 1 (pow.f64 x 2))))))","(+.f64 1 (+.f64 (/.f64 2 (pow.f64 x 4)) (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 6)))))","(+.f64 (+.f64 1 (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 6)))) (/.f64 2 (pow.f64 x 4)))","(+.f64 (/.f64 2 (*.f64 x x)) (+.f64 (/.f64 2 (pow.f64 x 4)) (+.f64 1 (/.f64 2 (pow.f64 x 6)))))","(+.f64 (/.f64 2 (pow.f64 x 4)) (+.f64 1 (+.f64 (/.f64 2 (*.f64 x x)) (/.f64 2 (pow.f64 x 6)))))","(+.f64 1 (+.f64 (/.f64 2 (*.f64 x x)) (+.f64 (/.f64 2 (pow.f64 x 4)) (/.f64 2 (pow.f64 x 6)))))","x","(+.f64 (*.f64 -1 (pow.f64 x 2)) x)","(fma.f64 -1 (*.f64 x x) x)","(-.f64 x (*.f64 x x))","(fma.f64 x (neg.f64 x) x)","(*.f64 x (-.f64 1 x))","(+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (pow.f64 x 3) x))","(fma.f64 -1 (*.f64 x x) (+.f64 x (pow.f64 x 3)))","(+.f64 x (*.f64 (*.f64 x x) (+.f64 -1 x)))","(*.f64 x (-.f64 (fma.f64 x x 1) x))","(+.f64 (*.f64 -1 (pow.f64 x 2)) (+.f64 (*.f64 -1 (pow.f64 x 4)) (+.f64 (pow.f64 x 3) x)))","(fma.f64 -1 (*.f64 x x) (fma.f64 -1 (pow.f64 x 4) (+.f64 x (pow.f64 x 3))))","(+.f64 (+.f64 x (pow.f64 x 3)) (neg.f64 (fma.f64 x x (pow.f64 x 4))))","(-.f64 (+.f64 x (pow.f64 x 3)) (fma.f64 x x (pow.f64 x 4)))","(*.f64 (fma.f64 x x 1) (-.f64 x (*.f64 x x)))","(*.f64 (fma.f64 x x 1) (*.f64 x (-.f64 1 x)))","1","(-.f64 1 (/.f64 1 x))","(+.f64 1 (/.f64 -1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 (*.f64 x x))) (/.f64 1 x))","(+.f64 1 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 -1 x)))","(+.f64 1 (+.f64 (/.f64 (/.f64 1 x) x) (/.f64 -1 x)))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(-.f64 (+.f64 1 (/.f64 1 (*.f64 x x))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(+.f64 1 (-.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3)))))","(+.f64 (/.f64 (/.f64 1 x) x) (-.f64 1 (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3)))))","(+.f64 1 (+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 -1 x) (/.f64 -1 (pow.f64 x 3)))))","1","(-.f64 1 (/.f64 1 x))","(+.f64 1 (/.f64 -1 x))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (/.f64 1 x))","(-.f64 (+.f64 1 (/.f64 1 (*.f64 x x))) (/.f64 1 x))","(+.f64 1 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 -1 x)))","(+.f64 1 (+.f64 (/.f64 (/.f64 1 x) x) (/.f64 -1 x)))","(-.f64 (+.f64 1 (/.f64 1 (pow.f64 x 2))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(-.f64 (+.f64 1 (/.f64 1 (*.f64 x x))) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3))))","(+.f64 1 (-.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3)))))","(+.f64 (/.f64 (/.f64 1 x) x) (-.f64 1 (+.f64 (/.f64 1 x) (/.f64 1 (pow.f64 x 3)))))","(+.f64 1 (+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 -1 x) (/.f64 -1 (pow.f64 x 3)))))"]],"stop":[["node limit",1]],"time":43.420166015625,"type":"simplify"},{"compiler":[[3277,2456]],"time":42.44384765625,"type":"eval"},{"alts":[["(*.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))","next",0]],"compiler":[[28,22],[28,22]],"count":[[195,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[194,1],"picked":[1,0]}],"min-error":[0],"time":60.31298828125,"type":"prune"},{"compiler":[[101,76]],"locations":[["(pow.f64 (+.f64 x -1) -2)",0.025722509768442016,true],["(/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))",0.02734375,true],["(-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))",0.02734375,true],["(pow.f64 (/.f64 x (+.f64 1 x)) 2)",0.0390625,true]],"time":23.050048828125,"type":"localize"},{"count":[[4,48]],"series":[["(pow.f64 (+.f64 x -1) -2)","x","-inf",0.23095703125],["(pow.f64 (+.f64 x -1) -2)","x","inf",0.22607421875],["(pow.f64 (+.f64 x -1) -2)","x","0",0.22412109375],["(/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))","x","-inf",0.181884765625],["(/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))","x","inf",0.244140625],["(/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))","x","0",0.41796875],["(-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))","x","-inf",0.22607421875],["(-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))","x","inf",0.239013671875],["(-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))","x","0",0.240966796875],["(pow.f64 (/.f64 x (+.f64 1 x)) 2)","x","-inf",0.19287109375],["(pow.f64 (/.f64 x (+.f64 1 x)) 2)","x","inf",0.281005859375],["(pow.f64 (/.f64 x (+.f64 1 x)) 2)","x","0",0.361083984375]],"time":3.236083984375,"type":"series"},{"count":[[4,217]],"egraph":[[2,4943,52,0.035228084],[1,351,52,0.006495126],[0,15,52,0.000462709]],"inputs":[["(pow.f64 (/.f64 x (+.f64 1 x)) 2)","(-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))","(/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x))))","(pow.f64 (+.f64 x -1) -2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (/.f64 x (+.f64 x 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2))) (cbrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 (/.f64 1 (+.f64 x 1)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 x (+.f64 x 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 x 1)) (/.f64 x (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x x) (*.f64 (/.f64 1 (+.f64 x 1)) (/.f64 1 (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x x) (pow.f64 (/.f64 1 (+.f64 x 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (*.f64 (cbrt.f64 (/.f64 x (+.f64 x 1))) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 4)) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (+.f64 x 1))) (*.f64 (sqrt.f64 (/.f64 x (+.f64 x 1))) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (+.f64 x 1)) (sqrt.f64 (/.f64 x (+.f64 x 1)))) (sqrt.f64 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (+.f64 x 1)) x) (/.f64 1 (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 x (+.f64 x 1)) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2))) (cbrt.f64 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 (/.f64 (+.f64 x 1) x) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (*.f64 (+.f64 x 1) (/.f64 (+.f64 x 1) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 (/.f64 (+.f64 x 1) x) (/.f64 (+.f64 x 1) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (+.f64 x 1)) (/.f64 (+.f64 x 1) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x x) (pow.f64 (+.f64 x 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (*.f64 (/.f64 (+.f64 x 1) x) (fma.f64 x -1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (neg.f64 x)) (*.f64 (fma.f64 x -1 -1) (fma.f64 x -1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) x) (*.f64 (fma.f64 x -1 -1) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) 1) (*.f64 (fma.f64 x -1 -1) (/.f64 (+.f64 x 1) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (neg.f64 x)) (*.f64 (+.f64 x 1) (fma.f64 x -1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (/.f64 x (+.f64 x 1))) (+.f64 x 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) (/.f64 x (+.f64 x 1))) (fma.f64 x -1 -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (+.f64 x 1)) x) (+.f64 x 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 x (+.f64 x 1)) (neg.f64 x)) (fma.f64 x -1 -1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (-.f64 (log.f64 x) (log1p.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (-.f64 (log.f64 x) (log1p.f64 x))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 (neg.f64 x) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (-.f64 1 x)) (*.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x 1))) x (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) (fma.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (+.f64 x 1)))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) (+.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))))) (cbrt.f64 (exp.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))))))) (log.f64 (cbrt.f64 (exp.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) (cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 2)) (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) (sqrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (fma.f64 x -1 -1) (*.f64 x (-.f64 1 x))) (/.f64 1 (*.f64 (+.f64 x 1) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (/.f64 -1 (pow.f64 (-.f64 1 x) 3)) (pow.f64 (/.f64 x (+.f64 x 1)) 3)) (/.f64 1 (fma.f64 (/.f64 x (+.f64 x 1)) (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 -1 (-.f64 1 x))) (/.f64 1 (pow.f64 (-.f64 1 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 1 x) 2)) (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (/.f64 1 (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 -1 (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (/.f64 -1 (-.f64 1 x))) (sqrt.f64 (/.f64 x (+.f64 x 1)))) (-.f64 (sqrt.f64 (/.f64 -1 (-.f64 1 x))) (sqrt.f64 (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 (+.f64 x 1) (-.f64 1 x)) (-.f64 (fma.f64 x -1 -1) (*.f64 x (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (/.f64 x (+.f64 x 1)) (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 -1 (-.f64 1 x))) (/.f64 1 (pow.f64 (-.f64 1 x) 2))) (-.f64 (/.f64 -1 (pow.f64 (-.f64 1 x) 3)) (pow.f64 (/.f64 x (+.f64 x 1)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 -1 (-.f64 1 x))) (-.f64 (/.f64 1 (pow.f64 (-.f64 1 x) 2)) (pow.f64 (/.f64 x (+.f64 x 1)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 2)) (/.f64 1 (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fma.f64 x -1 -1) (*.f64 x (-.f64 1 x))) (*.f64 (+.f64 x 1) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 -1 (pow.f64 (-.f64 1 x) 3)) (pow.f64 (/.f64 x (+.f64 x 1)) 3)) (fma.f64 (/.f64 x (+.f64 x 1)) (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 -1 (-.f64 1 x))) (/.f64 1 (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 1 x) 2)) (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 -1 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (fma.f64 x -1 -1) (*.f64 x (-.f64 1 x)))) (neg.f64 (*.f64 (+.f64 x 1) (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (/.f64 -1 (pow.f64 (-.f64 1 x) 3)) (pow.f64 (/.f64 x (+.f64 x 1)) 3))) (neg.f64 (fma.f64 (/.f64 x (+.f64 x 1)) (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 -1 (-.f64 1 x))) (/.f64 1 (pow.f64 (-.f64 1 x) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 1 x) 2)) (pow.f64 (/.f64 x (+.f64 x 1)) 2))) (neg.f64 (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 -1 (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 x 1) (*.f64 (neg.f64 (-.f64 1 x)) x)) (*.f64 (neg.f64 (-.f64 1 x)) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (+.f64 x 1) (*.f64 (-.f64 -1 (/.f64 x -1)) x)) (*.f64 (-.f64 -1 (/.f64 x -1)) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 (+.f64 x 1) x) (*.f64 (neg.f64 (-.f64 1 x)) 1)) (*.f64 (neg.f64 (-.f64 1 x)) (/.f64 (+.f64 x 1) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 (+.f64 x 1) x) (*.f64 (-.f64 -1 (/.f64 x -1)) 1)) (*.f64 (-.f64 -1 (/.f64 x -1)) (/.f64 (+.f64 x 1) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 -1 (/.f64 (+.f64 x 1) x)) (-.f64 1 x)) (*.f64 (-.f64 1 x) (/.f64 (+.f64 x 1) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fma.f64 x -1 -1) (*.f64 (neg.f64 (-.f64 1 x)) (neg.f64 x))) (*.f64 (neg.f64 (-.f64 1 x)) (fma.f64 x -1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (fma.f64 x -1 -1) (*.f64 (-.f64 -1 (/.f64 x -1)) (neg.f64 x))) (*.f64 (-.f64 -1 (/.f64 x -1)) (fma.f64 x -1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 -1 (fma.f64 x -1 -1)) (*.f64 (-.f64 1 x) (neg.f64 x))) (*.f64 (-.f64 1 x) (fma.f64 x -1 -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (/.f64 -1 (pow.f64 (-.f64 1 x) 3)) (pow.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 3)) (+.f64 (/.f64 1 (pow.f64 (-.f64 1 x) 2)) (-.f64 (*.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) (/.f64 (neg.f64 x) (+.f64 x 1))) (*.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 (neg.f64 x) (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 1 x) 2)) (*.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) (/.f64 (neg.f64 x) (+.f64 x 1)))) (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 (neg.f64 x) (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (fma.f64 x -1 -1) (*.f64 x (-.f64 1 x))) (-.f64 1 x)) (+.f64 x 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 -1 (-.f64 1 x)))) (exp.f64 (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 -1 (-.f64 1 x))) (+.f64 1 (expm1.f64 (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 -1 (-.f64 1 x)))) (+.f64 1 (expm1.f64 (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 -1 (-.f64 1 x)))) (exp.f64 (/.f64 (neg.f64 x) (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 -1 (-.f64 1 x))) (/.f64 1 (exp.f64 (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 -1 (-.f64 1 x)))) (/.f64 1 (exp.f64 (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (neg.f64 x) (+.f64 x 1))) (exp.f64 (/.f64 -1 (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (/.f64 x (+.f64 x 1)))) (exp.f64 (/.f64 -1 (-.f64 1 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (neg.f64 x) (+.f64 x 1))) (+.f64 1 (expm1.f64 (/.f64 -1 (-.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (/.f64 x (+.f64 x 1)))) (+.f64 1 (expm1.f64 (/.f64 -1 (-.f64 1 x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (neg.f64 (/.f64 1 (+.f64 x 1))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -1 (-.f64 1 x)) (/.f64 (neg.f64 x) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -1 (-.f64 1 x)) (*.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x 1))) x (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) (fma.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (+.f64 x 1)))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) (+.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (neg.f64 x) (+.f64 x 1)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 x (+.f64 x 1)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (-.f64 1 x)) (/.f64 (neg.f64 x) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (-.f64 1 x)) (*.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 1 x)) 1 (/.f64 (neg.f64 x) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 1 x)) 1 (*.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 1 (fma.f64 (neg.f64 (/.f64 1 (+.f64 x 1))) x (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 1 (fma.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 1 (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (+.f64 x 1)))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 1 (+.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) (cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 2)) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x 1))) x (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) (cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 2)) (fma.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) (cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 2)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (+.f64 x 1)))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) (cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 2)) (+.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 2)) (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x 1))) x (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 2)) (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) (fma.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 2)) (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (+.f64 x 1)))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 2)) (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) (+.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (neg.f64 (cbrt.f64 (/.f64 x (+.f64 x 1)))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (cbrt.f64 (-.f64 1 x))) (pow.f64 (/.f64 -1 (cbrt.f64 (-.f64 1 x))) 2) (/.f64 (neg.f64 x) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (cbrt.f64 (-.f64 1 x))) (pow.f64 (/.f64 -1 (cbrt.f64 (-.f64 1 x))) 2) (*.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 -1 (cbrt.f64 (-.f64 1 x))) 2) (/.f64 -1 (cbrt.f64 (-.f64 1 x))) (/.f64 (neg.f64 x) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 -1 (cbrt.f64 (-.f64 1 x))) 2) (/.f64 -1 (cbrt.f64 (-.f64 1 x))) (*.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) (sqrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x 1))) x (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) (sqrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) (fma.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) (sqrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (+.f64 x 1)))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) (sqrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) (+.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 x (+.f64 x 1))) (neg.f64 (sqrt.f64 (/.f64 x (+.f64 x 1)))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 -1 (-.f64 1 x))) (sqrt.f64 (/.f64 -1 (-.f64 1 x))) (/.f64 (neg.f64 x) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 -1 (-.f64 1 x))) (sqrt.f64 (/.f64 -1 (-.f64 1 x))) (*.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (/.f64 1 (+.f64 x 1)) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (fma.f64 x -1 -1) (*.f64 x (-.f64 1 x))) (/.f64 1 (*.f64 (+.f64 x 1) (-.f64 1 x))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x 1))) x (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (fma.f64 x -1 -1) (*.f64 x (-.f64 1 x))) (/.f64 1 (*.f64 (+.f64 x 1) (-.f64 1 x))) (fma.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (fma.f64 x -1 -1) (*.f64 x (-.f64 1 x))) (/.f64 1 (*.f64 (+.f64 x 1) (-.f64 1 x))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (+.f64 x 1)))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (fma.f64 x -1 -1) (*.f64 x (-.f64 1 x))) (/.f64 1 (*.f64 (+.f64 x 1) (-.f64 1 x))) (+.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 -1 (pow.f64 (-.f64 1 x) 3)) (pow.f64 (/.f64 x (+.f64 x 1)) 3)) (/.f64 1 (fma.f64 (/.f64 x (+.f64 x 1)) (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 -1 (-.f64 1 x))) (/.f64 1 (pow.f64 (-.f64 1 x) 2)))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x 1))) x (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 -1 (pow.f64 (-.f64 1 x) 3)) (pow.f64 (/.f64 x (+.f64 x 1)) 3)) (/.f64 1 (fma.f64 (/.f64 x (+.f64 x 1)) (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 -1 (-.f64 1 x))) (/.f64 1 (pow.f64 (-.f64 1 x) 2)))) (fma.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 -1 (pow.f64 (-.f64 1 x) 3)) (pow.f64 (/.f64 x (+.f64 x 1)) 3)) (/.f64 1 (fma.f64 (/.f64 x (+.f64 x 1)) (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 -1 (-.f64 1 x))) (/.f64 1 (pow.f64 (-.f64 1 x) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (+.f64 x 1)))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 -1 (pow.f64 (-.f64 1 x) 3)) (pow.f64 (/.f64 x (+.f64 x 1)) 3)) (/.f64 1 (fma.f64 (/.f64 x (+.f64 x 1)) (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 -1 (-.f64 1 x))) (/.f64 1 (pow.f64 (-.f64 1 x) 2)))) (+.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 1 x)) -1 (/.f64 (neg.f64 x) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 1 x)) -1 (*.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 1 x) 2)) (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (/.f64 1 (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 -1 (-.f64 1 x)))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x 1))) x (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 1 x) 2)) (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (/.f64 1 (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 -1 (-.f64 1 x)))) (fma.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 1 x) 2)) (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (/.f64 1 (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 -1 (-.f64 1 x)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (+.f64 x 1)))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (/.f64 1 (pow.f64 (-.f64 1 x) 2)) (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (/.f64 1 (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 -1 (-.f64 1 x)))) (+.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (/.f64 (neg.f64 x) (+.f64 x 1))) (cbrt.f64 (/.f64 (neg.f64 x) (+.f64 x 1)))) (cbrt.f64 (/.f64 (neg.f64 x) (+.f64 x 1))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (neg.f64 x) (+.f64 x 1))) (sqrt.f64 (/.f64 (neg.f64 x) (+.f64 x 1))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (/.f64 x (+.f64 x 1)))) (sqrt.f64 (/.f64 x (+.f64 x 1))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 -1 (-.f64 1 x))) (sqrt.f64 (/.f64 x (+.f64 x 1)))) (-.f64 (sqrt.f64 (/.f64 -1 (-.f64 1 x))) (sqrt.f64 (/.f64 x (+.f64 x 1)))) (fma.f64 (neg.f64 (/.f64 1 (+.f64 x 1))) x (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 -1 (-.f64 1 x))) (sqrt.f64 (/.f64 x (+.f64 x 1)))) (-.f64 (sqrt.f64 (/.f64 -1 (-.f64 1 x))) (sqrt.f64 (/.f64 x (+.f64 x 1)))) (fma.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1 (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 -1 (-.f64 1 x))) (sqrt.f64 (/.f64 x (+.f64 x 1)))) (-.f64 (sqrt.f64 (/.f64 -1 (-.f64 1 x))) (sqrt.f64 (/.f64 x (+.f64 x 1)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 x (+.f64 x 1)))) (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 -1 (-.f64 1 x))) (sqrt.f64 (/.f64 x (+.f64 x 1)))) (-.f64 (sqrt.f64 (/.f64 -1 (-.f64 1 x))) (sqrt.f64 (/.f64 x (+.f64 x 1)))) (+.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) (/.f64 x (+.f64 x 1))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (/.f64 x (+.f64 x 1)) 2))) (cbrt.f64 (/.f64 x (+.f64 x 1))) (/.f64 -1 (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 1 (pow.f64 x 3))) (+.f64 1 (fma.f64 x x x)) (/.f64 (neg.f64 x) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 1 (pow.f64 x 3))) (+.f64 1 (fma.f64 x x x)) (*.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 1 (*.f64 x x))) (+.f64 x 1) (/.f64 (neg.f64 x) (+.f64 x 1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1 (-.f64 1 (*.f64 x x))) (+.f64 x 1) (*.f64 (/.f64 (neg.f64 x) (+.f64 x 1)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))))) (cbrt.f64 (exp.f64 (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (neg.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))))) (cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) -2)) (/.f64 1 (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) -1/2) (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) 2)) -1) (pow.f64 (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) -1) (pow.f64 (sqrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (fma.f64 x -1 -1) (*.f64 x (-.f64 1 x)))) (*.f64 (+.f64 x 1) (-.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (/.f64 -1 (pow.f64 (-.f64 1 x) 3)) (pow.f64 (/.f64 x (+.f64 x 1)) 3))) (fma.f64 (/.f64 x (+.f64 x 1)) (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 -1 (-.f64 1 x))) (/.f64 1 (pow.f64 (-.f64 1 x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (/.f64 1 (pow.f64 (-.f64 1 x) 2)) (pow.f64 (/.f64 x (+.f64 x 1)) 2))) (+.f64 (/.f64 x (+.f64 x 1)) (/.f64 -1 (-.f64 1 x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (neg.f64 (log.f64 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (+.f64 x -1) -2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 x -1) -2))) (cbrt.f64 (exp.f64 (pow.f64 (+.f64 x -1) -2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 x -1) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 x -1) -2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 x -1) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (+.f64 x -1) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 x -1) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x -1) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) -2)) (cbrt.f64 (pow.f64 (+.f64 x -1) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 x -1) -4)) (cbrt.f64 (pow.f64 (+.f64 x -1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x -1)) (/.f64 1 (+.f64 x -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 x -1)) 2) -2) (pow.f64 (cbrt.f64 (+.f64 x -1)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (+.f64 x -1)) -2) (pow.f64 (sqrt.f64 (+.f64 x -1)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 x -1) -4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (+.f64 x -1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (+.f64 x -1) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (+.f64 x -1) -2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (+.f64 x -1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (+.f64 x -1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (pow.f64 (+.f64 x -1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (+.f64 x -1) -2)) 1))))))"]],"rules":[["egg-rr",19],["egg-rr",29],["egg-rr",130],["egg-rr",39]],"stop":[["node limit",1]],"time":71.85107421875,"type":"rewrite"},{"count":[[265,271]],"egraph":[[4,5134,621,0.026531376],[3,2173,621,0.013546042],[2,742,624,0.005250292],[1,266,627,0.001735834],[0,84,647,0.000442084]],"inputs":[["(pow.f64 x 2)","(+.f64 (*.f64 -2 (pow.f64 x 3)) (pow.f64 x 2))","(+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 3 (pow.f64 x 4)) (pow.f64 x 2)))","(+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 3 (pow.f64 x 4)) (+.f64 (pow.f64 x 2) (*.f64 -4 (pow.f64 x 5)))))","1","(-.f64 1 (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 1 (*.f64 3 (/.f64 1 (pow.f64 x 2)))) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 1 (*.f64 3 (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x))))","1","(-.f64 1 (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 1 (*.f64 3 (/.f64 1 (pow.f64 x 2)))) (*.f64 2 (/.f64 1 x)))","(-.f64 (+.f64 1 (*.f64 3 (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x))))","-1","(-.f64 (*.f64 -2 x) 1)","(-.f64 (+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3))) 1)","(-.f64 (+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3)))) 1)","-1","(-.f64 (*.f64 2 (/.f64 1 x)) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))) 1)","-1","(-.f64 (*.f64 2 (/.f64 1 x)) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))) 1)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))) 1)","-1","(-.f64 (*.f64 2 x) 1)","(-.f64 (+.f64 (*.f64 2 x) (*.f64 -4 (pow.f64 x 2))) 1)","(-.f64 (+.f64 (*.f64 2 x) (+.f64 (*.f64 -4 (pow.f64 x 2)) (*.f64 10 (pow.f64 x 3)))) 1)","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (pow.f64 x 2))))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 x 2))) (*.f64 10 (/.f64 1 (pow.f64 x 3)))))))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (pow.f64 x 2))))))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 x 2))) (*.f64 10 (/.f64 1 (pow.f64 x 3)))))))","1","(+.f64 (*.f64 2 x) 1)","(+.f64 (*.f64 3 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","(+.f64 (*.f64 3 (pow.f64 x 2)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 4 (pow.f64 x 3)) 1)))","(/.f64 1 (pow.f64 x 2))","(+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 4 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))))","(/.f64 1 (pow.f64 x 2))","(+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (*.f64 4 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))))"]],"method":["egg-herbie"],"outputs":[["(pow.f64 x 2)","(*.f64 x x)","(+.f64 (*.f64 -2 (pow.f64 x 3)) (pow.f64 x 2))","(fma.f64 -2 (pow.f64 x 3) (*.f64 x x))","(fma.f64 x x (*.f64 -2 (pow.f64 x 3)))","(+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 3 (pow.f64 x 4)) (pow.f64 x 2)))","(fma.f64 -2 (pow.f64 x 3) (fma.f64 3 (pow.f64 x 4) (*.f64 x x)))","(fma.f64 -2 (pow.f64 x 3) (fma.f64 x x (*.f64 3 (pow.f64 x 4))))","(fma.f64 x x (fma.f64 3 (pow.f64 x 4) (*.f64 -2 (pow.f64 x 3))))","(fma.f64 x x (*.f64 (pow.f64 x 3) (+.f64 -2 (*.f64 x 3))))","(+.f64 (*.f64 -2 (pow.f64 x 3)) (+.f64 (*.f64 3 (pow.f64 x 4)) (+.f64 (pow.f64 x 2) (*.f64 -4 (pow.f64 x 5)))))","(fma.f64 -2 (pow.f64 x 3) (+.f64 (fma.f64 3 (pow.f64 x 4) (*.f64 x x)) (*.f64 -4 (pow.f64 x 5))))","(fma.f64 -2 (pow.f64 x 3) (fma.f64 3 (pow.f64 x 4) (fma.f64 x x (*.f64 -4 (pow.f64 x 5)))))","(fma.f64 -2 (pow.f64 x 3) (fma.f64 x x (fma.f64 3 (pow.f64 x 4) (*.f64 -4 (pow.f64 x 5)))))","(fma.f64 -2 (pow.f64 x 3) (fma.f64 3 (pow.f64 x 4) (fma.f64 -4 (pow.f64 x 5) (*.f64 x x))))","1","(-.f64 1 (*.f64 2 (/.f64 1 x)))","(-.f64 1 (/.f64 2 x))","(+.f64 1 (/.f64 -2 x))","(-.f64 (+.f64 1 (*.f64 3 (/.f64 1 (pow.f64 x 2)))) (*.f64 2 (/.f64 1 x)))","(+.f64 1 (-.f64 (/.f64 3 (*.f64 x x)) (/.f64 2 x)))","(+.f64 1 (+.f64 (/.f64 3 (*.f64 x x)) (/.f64 -2 x)))","(+.f64 (+.f64 1 (/.f64 -2 x)) (/.f64 3 (*.f64 x x)))","(-.f64 (+.f64 1 (*.f64 3 (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x))))","(+.f64 1 (-.f64 (/.f64 3 (*.f64 x x)) (+.f64 (/.f64 2 x) (/.f64 4 (pow.f64 x 3)))))","(+.f64 1 (+.f64 (/.f64 3 (*.f64 x x)) (-.f64 (/.f64 -2 x) (/.f64 4 (pow.f64 x 3)))))","(+.f64 1 (+.f64 (/.f64 3 (*.f64 x x)) (+.f64 (/.f64 -2 x) (/.f64 -4 (pow.f64 x 3)))))","1","(-.f64 1 (*.f64 2 (/.f64 1 x)))","(-.f64 1 (/.f64 2 x))","(+.f64 1 (/.f64 -2 x))","(-.f64 (+.f64 1 (*.f64 3 (/.f64 1 (pow.f64 x 2)))) (*.f64 2 (/.f64 1 x)))","(+.f64 1 (-.f64 (/.f64 3 (*.f64 x x)) (/.f64 2 x)))","(+.f64 1 (+.f64 (/.f64 3 (*.f64 x x)) (/.f64 -2 x)))","(+.f64 (+.f64 1 (/.f64 -2 x)) (/.f64 3 (*.f64 x x)))","(-.f64 (+.f64 1 (*.f64 3 (/.f64 1 (pow.f64 x 2)))) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 x 3))) (*.f64 2 (/.f64 1 x))))","(+.f64 1 (-.f64 (/.f64 3 (*.f64 x x)) (+.f64 (/.f64 2 x) (/.f64 4 (pow.f64 x 3)))))","(+.f64 1 (+.f64 (/.f64 3 (*.f64 x x)) (-.f64 (/.f64 -2 x) (/.f64 4 (pow.f64 x 3)))))","(+.f64 1 (+.f64 (/.f64 3 (*.f64 x x)) (+.f64 (/.f64 -2 x) (/.f64 -4 (pow.f64 x 3)))))","-1","(-.f64 (*.f64 -2 x) 1)","(fma.f64 -2 x -1)","(fma.f64 x -2 -1)","(-.f64 (+.f64 (*.f64 -2 x) (*.f64 -2 (pow.f64 x 3))) 1)","(+.f64 (*.f64 -2 (+.f64 x (pow.f64 x 3))) -1)","(fma.f64 -2 (+.f64 x (pow.f64 x 3)) -1)","(-.f64 (+.f64 (*.f64 -2 x) (+.f64 (*.f64 -2 (pow.f64 x 5)) (*.f64 -2 (pow.f64 x 3)))) 1)","(+.f64 (fma.f64 -2 x (*.f64 -2 (+.f64 (pow.f64 x 5) (pow.f64 x 3)))) -1)","(fma.f64 x -2 (fma.f64 -2 (+.f64 (pow.f64 x 3) (pow.f64 x 5)) -1))","(fma.f64 -2 (+.f64 x (+.f64 (pow.f64 x 3) (pow.f64 x 5))) -1)","(fma.f64 -2 (+.f64 (pow.f64 x 5) (+.f64 x (pow.f64 x 3))) -1)","-1","(-.f64 (*.f64 2 (/.f64 1 x)) 1)","(+.f64 (/.f64 2 x) -1)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))) 1)","(+.f64 (/.f64 2 x) (-.f64 (/.f64 2 (pow.f64 x 3)) 1))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 2 (pow.f64 x 3)) -1))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))) 1)","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 x) (-.f64 (/.f64 2 (pow.f64 x 3)) 1)))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 2 (pow.f64 x 3))) (-.f64 (/.f64 2 (pow.f64 x 5)) 1))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) -1)))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 (pow.f64 x 5)) -1)))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 2 (pow.f64 x 3))) (+.f64 (/.f64 2 (pow.f64 x 5)) -1))","-1","(-.f64 (*.f64 2 (/.f64 1 x)) 1)","(+.f64 (/.f64 2 x) -1)","(-.f64 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))) 1)","(+.f64 (/.f64 2 x) (-.f64 (/.f64 2 (pow.f64 x 3)) 1))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 2 (pow.f64 x 3)) -1))","(-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))) 1)","(+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 x) (-.f64 (/.f64 2 (pow.f64 x 3)) 1)))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 2 (pow.f64 x 3))) (-.f64 (/.f64 2 (pow.f64 x 5)) 1))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 2 (pow.f64 x 5)) (+.f64 (/.f64 2 (pow.f64 x 3)) -1)))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 2 (pow.f64 x 5)) -1)))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 2 (pow.f64 x 3))) (+.f64 (/.f64 2 (pow.f64 x 5)) -1))","-1","(-.f64 (*.f64 2 x) 1)","(fma.f64 2 x -1)","(fma.f64 x 2 -1)","(-.f64 (+.f64 (*.f64 2 x) (*.f64 -4 (pow.f64 x 2))) 1)","(+.f64 (fma.f64 2 x (*.f64 (*.f64 x x) -4)) -1)","(fma.f64 x 2 (fma.f64 (*.f64 x x) -4 -1))","(fma.f64 x (+.f64 2 (*.f64 x -4)) -1)","(-.f64 (+.f64 (*.f64 2 x) (+.f64 (*.f64 -4 (pow.f64 x 2)) (*.f64 10 (pow.f64 x 3)))) 1)","(+.f64 (fma.f64 2 x (fma.f64 -4 (*.f64 x x) (*.f64 (pow.f64 x 3) 10))) -1)","(+.f64 (fma.f64 (*.f64 x x) -4 (*.f64 (pow.f64 x 3) 10)) (fma.f64 x 2 -1))","(fma.f64 x 2 (fma.f64 x (*.f64 x -4) (fma.f64 (pow.f64 x 3) 10 -1)))","(fma.f64 x 2 (fma.f64 x (*.f64 x (+.f64 -4 (*.f64 x 10))) -1))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 -1 (neg.f64 (/.f64 2 x)))","(-.f64 -1 (/.f64 2 x))","(+.f64 -1 (/.f64 -2 x))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (pow.f64 x 2))))))","(+.f64 -1 (neg.f64 (+.f64 (/.f64 2 x) (/.f64 4 (*.f64 x x)))))","(-.f64 (-.f64 -1 (/.f64 2 x)) (/.f64 4 (*.f64 x x)))","(+.f64 (+.f64 -1 (/.f64 -2 x)) (/.f64 -4 (*.f64 x x)))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 x 2))) (*.f64 10 (/.f64 1 (pow.f64 x 3)))))))","(+.f64 -1 (neg.f64 (+.f64 (+.f64 (/.f64 2 x) (/.f64 4 (*.f64 x x))) (/.f64 10 (pow.f64 x 3)))))","(-.f64 (-.f64 -1 (/.f64 2 x)) (+.f64 (/.f64 4 (*.f64 x x)) (/.f64 10 (pow.f64 x 3))))","(+.f64 (+.f64 (+.f64 -1 (/.f64 -2 x)) (/.f64 -4 (*.f64 x x))) (/.f64 -10 (pow.f64 x 3)))","(+.f64 -1 (+.f64 (/.f64 -2 x) (-.f64 (/.f64 -10 (pow.f64 x 3)) (/.f64 4 (*.f64 x x)))))","(+.f64 (+.f64 -1 (/.f64 -2 x)) (-.f64 (/.f64 -10 (pow.f64 x 3)) (/.f64 4 (*.f64 x x))))","-1","(neg.f64 (+.f64 1 (*.f64 2 (/.f64 1 x))))","(+.f64 -1 (neg.f64 (/.f64 2 x)))","(-.f64 -1 (/.f64 2 x))","(+.f64 -1 (/.f64 -2 x))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (pow.f64 x 2))))))","(+.f64 -1 (neg.f64 (+.f64 (/.f64 2 x) (/.f64 4 (*.f64 x x)))))","(-.f64 (-.f64 -1 (/.f64 2 x)) (/.f64 4 (*.f64 x x)))","(+.f64 (+.f64 -1 (/.f64 -2 x)) (/.f64 -4 (*.f64 x x)))","(neg.f64 (+.f64 1 (+.f64 (*.f64 2 (/.f64 1 x)) (+.f64 (*.f64 4 (/.f64 1 (pow.f64 x 2))) (*.f64 10 (/.f64 1 (pow.f64 x 3)))))))","(+.f64 -1 (neg.f64 (+.f64 (+.f64 (/.f64 2 x) (/.f64 4 (*.f64 x x))) (/.f64 10 (pow.f64 x 3)))))","(-.f64 (-.f64 -1 (/.f64 2 x)) (+.f64 (/.f64 4 (*.f64 x x)) (/.f64 10 (pow.f64 x 3))))","(+.f64 (+.f64 (+.f64 -1 (/.f64 -2 x)) (/.f64 -4 (*.f64 x x))) (/.f64 -10 (pow.f64 x 3)))","(+.f64 -1 (+.f64 (/.f64 -2 x) (-.f64 (/.f64 -10 (pow.f64 x 3)) (/.f64 4 (*.f64 x x)))))","(+.f64 (+.f64 -1 (/.f64 -2 x)) (-.f64 (/.f64 -10 (pow.f64 x 3)) (/.f64 4 (*.f64 x x))))","1","(+.f64 (*.f64 2 x) 1)","(fma.f64 2 x 1)","(fma.f64 x 2 1)","(+.f64 (*.f64 3 (pow.f64 x 2)) (+.f64 (*.f64 2 x) 1))","(fma.f64 3 (*.f64 x x) (fma.f64 2 x 1))","(fma.f64 (*.f64 x x) 3 (fma.f64 x 2 1))","(fma.f64 x (*.f64 x 3) (fma.f64 x 2 1))","(+.f64 (*.f64 3 (pow.f64 x 2)) (+.f64 (*.f64 2 x) (+.f64 (*.f64 4 (pow.f64 x 3)) 1)))","(fma.f64 3 (*.f64 x x) (fma.f64 2 x (fma.f64 4 (pow.f64 x 3) 1)))","(fma.f64 (*.f64 x x) 3 (fma.f64 x 2 (fma.f64 (pow.f64 x 3) 4 1)))","(fma.f64 x (*.f64 x 3) (fma.f64 (pow.f64 x 3) 4 (fma.f64 x 2 1)))","(fma.f64 x 2 (fma.f64 x (*.f64 x 3) (fma.f64 (pow.f64 x 3) 4 1)))","(/.f64 1 (pow.f64 x 2))","(/.f64 1 (*.f64 x x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 1 (*.f64 x x)) (/.f64 2 (pow.f64 x 3)))","(+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (+.f64 (/.f64 3 (pow.f64 x 4)) (/.f64 1 (*.f64 x x))) (/.f64 2 (pow.f64 x 3)))","(+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 3 (pow.f64 x 4))))","(+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 (pow.f64 x 4))))","(+.f64 (*.f64 4 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))))","(+.f64 (+.f64 (+.f64 (/.f64 3 (pow.f64 x 4)) (/.f64 1 (*.f64 x x))) (/.f64 2 (pow.f64 x 3))) (/.f64 4 (pow.f64 x 5)))","(+.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 2 (pow.f64 x 3))) (+.f64 (/.f64 3 (pow.f64 x 4)) (/.f64 4 (pow.f64 x 5))))","(+.f64 (/.f64 3 (pow.f64 x 4)) (+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 4 (pow.f64 x 5)))))","(+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 3 (pow.f64 x 4)) (/.f64 4 (pow.f64 x 5)))))","(/.f64 1 (pow.f64 x 2))","(/.f64 1 (*.f64 x x))","(+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))","(+.f64 (/.f64 1 (*.f64 x x)) (/.f64 2 (pow.f64 x 3)))","(+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 2 (/.f64 1 (pow.f64 x 3)))))","(+.f64 (+.f64 (/.f64 3 (pow.f64 x 4)) (/.f64 1 (*.f64 x x))) (/.f64 2 (pow.f64 x 3)))","(+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 3 (pow.f64 x 4))))","(+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 3 (pow.f64 x 4))))","(+.f64 (*.f64 4 (/.f64 1 (pow.f64 x 5))) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 x 4))) (+.f64 (/.f64 1 (pow.f64 x 2)) (*.f64 2 (/.f64 1 (pow.f64 x 3))))))","(+.f64 (+.f64 (+.f64 (/.f64 3 (pow.f64 x 4)) (/.f64 1 (*.f64 x x))) (/.f64 2 (pow.f64 x 3))) (/.f64 4 (pow.f64 x 5)))","(+.f64 (+.f64 (/.f64 1 (*.f64 x x)) (/.f64 2 (pow.f64 x 3))) (+.f64 (/.f64 3 (pow.f64 x 4)) (/.f64 4 (pow.f64 x 5))))","(+.f64 (/.f64 3 (pow.f64 x 4)) (+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 2 (pow.f64 x 3)) (/.f64 4 (pow.f64 x 5)))))","(+.f64 (/.f64 2 (pow.f64 x 3)) (+.f64 (/.f64 1 (*.f64 x x)) (+.f64 (/.f64 3 (pow.f64 x 4)) (/.f64 4 (pow.f64 x 5)))))"]],"stop":[["node limit",1]],"time":48.10693359375,"type":"simplify"},{"compiler":[[9965,7733]],"time":114.841064453125,"type":"eval"},{"alts":[["(*.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))","done",0]],"compiler":[[28,22]],"count":[[272,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[271,0],"picked":[1,1]}],"min-error":[0],"time":104.05078125,"type":"prune"},{"accuracy":[0],"baseline":[0.0],"branch":[["x",0,1],["(+.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (+.f64 x 1)))",0,1]],"compiler":[[2,1],[12,9],[50,38]],"count":[[3,1]],"inputs":[["(*.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))","(+.f64 (/.f64 1 (+.f64 x -1)) (/.f64 x (+.f64 1 x)))","(+.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (+.f64 x 1)))"]],"link":["."],"name":["Asymptote B"],"oracle":[0.015625],"outputs":[["(*.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))"]],"time":5.55419921875,"times":[["x",2.783935546875],["(+.f64 (/.f64 1 (-.f64 x 1)) (/.f64 x (+.f64 x 1)))",1.74609375]],"type":"regimes"},{"compiler":[[28,22]],"egraph":[[4,47,40,0.000223417],[3,44,40,0.000173084],[2,38,40,0.000121917],[1,28,40,7.5292e-5],[0,17,40,3.5125e-5]],"inputs":[["(*.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (/.f64 x (+.f64 1 x)) 2)) (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 1 x)))))","(*.f64 (-.f64 (pow.f64 (+.f64 x -1) -2) (pow.f64 (/.f64 x (+.f64 x 1)) 2)) (/.f64 1 (-.f64 (/.f64 -1 (-.f64 1 x)) (/.f64 x (+.f64 x 1)))))"]],"stop":[["done",1],["saturated",1]],"time":9.02490234375,"type":"simplify"},{"time":0.014892578125,"type":"soundness"},{"compiler":[[28,22]],"remove-preprocessing":[[]],"time":13.525146484375,"type":"end"}]