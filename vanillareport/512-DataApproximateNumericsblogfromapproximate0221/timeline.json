[{"compiler":[[16,13]],"method":["search"],"sampling":[[12,0.4992678165435791,0.0009760856628417969,0.4997560977935791],[11,0.4987797737121582,0.0019521713256835938,0.4992680549621582],[10,0.4978036880493164,0.0039043426513671875,0.4982919692993164],[9,0.4958515167236328,0.007808685302734375,0.4963397979736328],[8,0.4919471740722656,0.01561737060546875,0.4924354553222656],[7,0.48413848876953125,0.0312347412109375,0.48462677001953125],[6,0.4685211181640625,0.062469482421875,0.4690093994140625],[5,0.437286376953125,0.12493896484375,0.437774658203125],[4,0.37481689453125,0.2498779296875,0.37530517578125],[3,0.2498779296875,0.499755859375,0.2503662109375],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":1.823974609375,"type":"analyze"},{"outcomes":[["body",256,"invalid",0.209228515625,5],["body",256,"valid",427.3779296875,8256]],"time":437.652099609375,"type":"sample"},{"compiler":[[15,12]],"egraph":[[0,1,1,2.041e-6],[14,6156,17,0.05631121],[13,3257,17,0.039769293],[12,2091,17,0.025694876],[11,1631,17,0.019289001],[10,1150,17,0.013163001],[9,682,17,0.008117959000000001],[8,403,17,0.004041334],[7,247,17,0.002386834],[6,150,17,0.0016198340000000001],[5,107,17,0.001164001],[4,87,17,0.000813834],[3,70,17,0.000588876],[2,46,17,0.00036775100000000004],[1,25,19,0.00022116700000000003],[0,12,21,9.8375e-5]],"inputs":[["0"],["(/.f64 (*.f64 6 (-.f64 x 1)) (+.f64 (+.f64 x 1) (*.f64 4 (sqrt.f64 x))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(/.f64 (*.f64 6 (-.f64 x 1)) (+.f64 (+.f64 x 1) (*.f64 4 (sqrt.f64 x))))","(/.f64 6 (/.f64 (+.f64 x (+.f64 1 (*.f64 4 (sqrt.f64 x)))) (+.f64 x -1)))","(*.f64 (/.f64 6 (fma.f64 4 (sqrt.f64 x) (+.f64 x 1))) (+.f64 x -1))","(/.f64 (fma.f64 6 x -6) (+.f64 x (fma.f64 4 (sqrt.f64 x) 1)))","(/.f64 (fma.f64 6 x -6) (fma.f64 4 (sqrt.f64 x) (+.f64 x 1)))","(/.f64 (fma.f64 6 x -6) (fma.f64 4 (sqrt.f64 x) (-.f64 x -1)))","(/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":84.6640625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[14,6156,17,0.0541765],[13,3257,17,0.037230375],[12,2091,17,0.025120792000000003],[11,1631,17,0.018027],[10,1150,17,0.012952333],[9,682,17,0.007674541],[8,403,17,0.0038697080000000003],[7,247,17,0.002148791],[6,150,17,0.0014250830000000002],[5,107,17,0.0009742910000000001],[4,87,17,0.0006784580000000001],[3,70,17,0.000456041],[2,46,17,0.000284541],[1,25,19,0.000160666],[0,12,21,7.2333e-5]],"inputs":[["(/.f64 (*.f64 6 (-.f64 x 1)) (+.f64 (+.f64 x 1) (*.f64 4 (sqrt.f64 x))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 6 (-.f64 x 1)) (+.f64 (+.f64 x 1) (*.f64 4 (sqrt.f64 x))))","(/.f64 6 (/.f64 (+.f64 x (+.f64 1 (*.f64 4 (sqrt.f64 x)))) (+.f64 x -1)))","(*.f64 (/.f64 6 (fma.f64 4 (sqrt.f64 x) (+.f64 x 1))) (+.f64 x -1))","(/.f64 (fma.f64 6 x -6) (+.f64 x (fma.f64 4 (sqrt.f64 x) 1)))","(/.f64 (fma.f64 6 x -6) (fma.f64 4 (sqrt.f64 x) (+.f64 x 1)))","(/.f64 (fma.f64 6 x -6) (fma.f64 4 (sqrt.f64 x) (-.f64 x -1)))","(/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))"]],"stop":[["node limit",1]],"time":66.77783203125,"type":"simplify"},{"compiler":[[27,20]],"time":0.529052734375,"type":"eval"},{"alts":[["(/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))","next",0.12109375],["(/.f64 (*.f64 6 (-.f64 x 1)) (+.f64 (+.f64 x 1) (*.f64 4 (sqrt.f64 x))))","fresh",0.12337875976844201]],"compiler":[[13,10],[15,12],[13,10],[15,12]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.11328125],"time":1.570068359375,"type":"prune"},{"compiler":[[36,23]],"locations":[["(-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))",0.00390625,true],["(fma.f64 4 (sqrt.f64 x) x)",0.0078125,true],["(fma.f64 x -6 6)",0.09765625,true],["(/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))",0.125,true]],"time":8.989013671875,"type":"localize"},{"count":[[4,20]],"series":[["(-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))","x","-inf",0.489990234375],["(-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))","x","inf",0.2509765625],["(-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))","x","0",0.225830078125],["(fma.f64 4 (sqrt.f64 x) x)","x","-inf",0.272216796875],["(fma.f64 4 (sqrt.f64 x) x)","x","inf",0.211181640625],["(fma.f64 4 (sqrt.f64 x) x)","x","0",0.48388671875],["(fma.f64 x -6 6)","x","-inf",0.28515625],["(fma.f64 x -6 6)","x","inf",0.281005859375],["(fma.f64 x -6 6)","x","0",0.2099609375],["(/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))","x","-inf",1.0361328125],["(/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))","x","inf",0.91015625],["(/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))","x","0",1.4140625]],"time":6.23681640625,"type":"series"},{"count":[[4,178]],"egraph":[[2,2863,39,0.026310418],[1,237,39,0.004389001],[0,11,39,0.000403084]],"inputs":[["(/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))","(fma.f64 x -6 6)","(fma.f64 4 (sqrt.f64 x) x)","(-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x -6 6) (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2) (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) (*.f64 (cbrt.f64 (fma.f64 x -6 6)) (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (sqrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x -6 6)) (*.f64 (sqrt.f64 (fma.f64 x -6 6)) (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 x -6 6)) (/.f64 1 (neg.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (fma.f64 x -6 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) 1) (/.f64 (cbrt.f64 (fma.f64 x -6 6)) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 x -6 6)) 1) (/.f64 (sqrt.f64 (fma.f64 x -6 6)) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) -2) (/.f64 (fma.f64 x -6 6) (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2)) (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 x -6 6)) (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2)) (/.f64 (sqrt.f64 (fma.f64 x -6 6)) (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) -1/2) (/.f64 (fma.f64 x -6 6) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (/.f64 (cbrt.f64 (fma.f64 x -6 6)) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 3))) (fma.f64 (fma.f64 4 (sqrt.f64 x) x) (+.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x -6 6) (-.f64 1 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 2))) (+.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (fma.f64 x -6 6) 3) (pow.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 2)) (cbrt.f64 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (sqrt.f64 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 x -6 6) (neg.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 x -6 6) 3) (pow.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 (fma.f64 x -6 6)) 1) (log.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 (fma.f64 x -6 6)) (*.f64 (log.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 (fma.f64 x -6 6)) 1) (*.f64 (log.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 6 (*.f64 x -6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x -6) 6)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 x -6 6))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x -6) 1) 6)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 x -6 6))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 x -6 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 x -6 6)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 x -6 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 x -6 6))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x -6 6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x -6 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x -6 6)) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) (cbrt.f64 (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x -6 6)) (sqrt.f64 (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x -6) 3) 216) (+.f64 (pow.f64 (*.f64 x -6) 2) (-.f64 36 (*.f64 (*.f64 x -6) 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x -6) 2) 36) (fma.f64 x -6 -6))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x -6 6) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x -6 6) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x -6 6) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x -6 6)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 x -6 6))) 2)) (cbrt.f64 (log.f64 (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 x -6 6)))) (sqrt.f64 (log.f64 (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x -6 6) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x -6 6) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 x -6 6)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 x -6 6))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 x -6 6))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 x -6 6))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 x -6 6)) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 4 (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 4 (sqrt.f64 x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 4 (sqrt.f64 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 4 (sqrt.f64 x)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 4 (sqrt.f64 x) x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 4 (sqrt.f64 x) x)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 4 (sqrt.f64 x) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (+.f64 4 (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 4 (sqrt.f64 x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 4 (sqrt.f64 x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 2)) (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 4 (sqrt.f64 x)) 3) (pow.f64 x 3)) (+.f64 (pow.f64 (*.f64 4 (sqrt.f64 x)) 2) (-.f64 (*.f64 x x) (*.f64 (*.f64 4 (sqrt.f64 x)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 4 (sqrt.f64 x)) 2) (*.f64 x x)) (fma.f64 4 (sqrt.f64 x) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 4 (sqrt.f64 x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (fma.f64 4 (sqrt.f64 x) x))) 2)) (cbrt.f64 (log.f64 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (fma.f64 4 (sqrt.f64 x) x)))) (sqrt.f64 (log.f64 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (pow.f64 (exp.f64 (sqrt.f64 x)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (sqrt.f64 x)) 4) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 4 (sqrt.f64 x) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 4 (sqrt.f64 x) x))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 4 (sqrt.f64 x) x)) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (fma.f64 4 (sqrt.f64 x) x)) 3) 1/3))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (neg.f64 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (*.f64 (neg.f64 (fma.f64 4 (sqrt.f64 x) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (fma.f64 4 (sqrt.f64 x) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2) (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 3)) (/.f64 1 (fma.f64 (fma.f64 4 (sqrt.f64 x) x) (+.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 2)) (/.f64 1 (+.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (fma.f64 4 (sqrt.f64 x) x) (+.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 1) (-.f64 -1 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (-.f64 1 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 -1 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 3)) (fma.f64 (fma.f64 4 (sqrt.f64 x) x) (+.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 2)) (+.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 -1 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 3))) (neg.f64 (fma.f64 (fma.f64 4 (sqrt.f64 x) x) (+.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 2))) (neg.f64 (+.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (pow.f64 (neg.f64 (fma.f64 4 (sqrt.f64 x) x)) 3)) (+.f64 1 (-.f64 (pow.f64 (neg.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (*.f64 -1 (neg.f64 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (neg.f64 (fma.f64 4 (sqrt.f64 x) x)) 2)) (-.f64 -1 (neg.f64 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (fma.f64 4 (sqrt.f64 x) x) (+.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 1) (-.f64 -1 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (-.f64 1 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2)) (cbrt.f64 (log.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) (sqrt.f64 (log.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (fma.f64 4 (sqrt.f64 x) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 4 (sqrt.f64 x) x) -1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (neg.f64 (fma.f64 4 (sqrt.f64 x) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 2)) (neg.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (neg.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (neg.f64 (fma.f64 4 (sqrt.f64 x) x))) 2) (cbrt.f64 (neg.f64 (fma.f64 4 (sqrt.f64 x) x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (neg.f64 (fma.f64 4 (sqrt.f64 x) x))) (sqrt.f64 (neg.f64 (fma.f64 4 (sqrt.f64 x) x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 2))) (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x))) (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (cbrt.f64 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 2))) (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x))) (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) -1)))))"]],"rules":[["egg-rr",54],["egg-rr",38],["egg-rr",34],["egg-rr",52]],"stop":[["node limit",1]],"time":59.0751953125,"type":"rewrite"},{"count":[[198,187]],"egraph":[[9,42,66,0.0008017510000000001],[8,40,66,0.000690417],[7,35,66,0.000573334],[6,27,66,0.00046279199999999996],[5,23,66,0.00035820899999999996],[4,19,66,0.000279959],[3,17,66,0.000215543],[2,16,66,0.000154668],[1,12,66,0.00010133399999999999],[0,8,84,5.2334e-5]],"inputs":[["-6","6","6","6","(+.f64 6 (*.f64 -6 x))","(+.f64 6 (*.f64 -6 x))","(+.f64 6 (*.f64 -6 x))","(*.f64 -6 x)","(+.f64 6 (*.f64 -6 x))","(+.f64 6 (*.f64 -6 x))","(+.f64 6 (*.f64 -6 x))","(*.f64 -6 x)","(+.f64 6 (*.f64 -6 x))","(+.f64 6 (*.f64 -6 x))","(+.f64 6 (*.f64 -6 x))","x","x","-1","(*.f64 -1 x)","(*.f64 -1 x)"]],"method":["egg-herbie"],"outputs":[["-6","6","6","6","(+.f64 6 (*.f64 -6 x))","(fma.f64 -6 x 6)","(+.f64 6 (*.f64 -6 x))","(fma.f64 -6 x 6)","(+.f64 6 (*.f64 -6 x))","(fma.f64 -6 x 6)","(*.f64 -6 x)","(+.f64 6 (*.f64 -6 x))","(fma.f64 -6 x 6)","(+.f64 6 (*.f64 -6 x))","(fma.f64 -6 x 6)","(+.f64 6 (*.f64 -6 x))","(fma.f64 -6 x 6)","(*.f64 -6 x)","(+.f64 6 (*.f64 -6 x))","(fma.f64 -6 x 6)","(+.f64 6 (*.f64 -6 x))","(fma.f64 -6 x 6)","(+.f64 6 (*.f64 -6 x))","(fma.f64 -6 x 6)","x","x","-1","(*.f64 -1 x)","(neg.f64 x)","(*.f64 -1 x)","(neg.f64 x)"]],"stop":[["saturated",1]],"time":14.685791015625,"type":"simplify"},{"compiler":[[3421,2486]],"time":49.2470703125,"type":"eval"},{"alts":[["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) 1) (/.f64 (cbrt.f64 (fma.f64 x -6 6)) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))","fresh",0.40021147467416646],["(*.f64 (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (fma.f64 x -6 6))","fresh",0.19140625],["(pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 3)","next",0.07878876953688405],["(/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 x -6) 3) 216) (+.f64 (pow.f64 (*.f64 x -6) 2) (-.f64 36 (*.f64 (*.f64 x -6) 6)))) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))","fresh",19.094413769536885],["(/.f64 (*.f64 6 (-.f64 x 1)) (+.f64 (+.f64 x 1) (*.f64 4 (sqrt.f64 x))))","fresh",0.12337875976844201]],"compiler":[[24,20],[15,12],[16,13],[30,25],[15,12],[24,20],[15,12],[16,13],[30,25],[15,12]],"count":[[189,5]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[187,4],"picked":[1,0]}],"min-error":[0],"time":46.72314453125,"type":"prune"},{"compiler":[[65,44]],"locations":[["(cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))",0.01953125,true],["(pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 3)",0.06640625,true],["(fma.f64 x -6 6)",0.09765625,false],["(/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))",0.125,false]],"time":15.702880859375,"type":"localize"},{"count":[[2,6]],"series":[["(cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))","x","-inf",0.91796875],["(cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))","x","inf",0.875],["(cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))","x","0",0.844970703125],["(pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 3)","x","-inf",6.389892578125],["(pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 3)","x","inf",5.93603515625],["(pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 3)","x","0",4.941162109375]],"time":20.031005859375,"type":"series"},{"count":[[2,92]],"egraph":[[2,3343,36,0.028355124000000002],[1,304,36,0.005025040999999999],[0,14,36,0.000502083]],"inputs":[["(pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 3)","(cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x -6 6) (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2) (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) (*.f64 (cbrt.f64 (fma.f64 x -6 6)) (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (sqrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x -6 6)) (*.f64 (sqrt.f64 (fma.f64 x -6 6)) (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1/6) (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 5/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 x -6 6)) (/.f64 1 (neg.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (fma.f64 x -6 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) 1) (/.f64 (cbrt.f64 (fma.f64 x -6 6)) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 x -6 6)) 1) (/.f64 (sqrt.f64 (fma.f64 x -6 6)) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) -2) (/.f64 (fma.f64 x -6 6) (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 x -6 6)) (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2)) (/.f64 (sqrt.f64 (fma.f64 x -6 6)) (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) -1/2) (/.f64 (fma.f64 x -6 6) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (/.f64 (cbrt.f64 (fma.f64 x -6 6)) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 3))) (fma.f64 (fma.f64 4 (sqrt.f64 x) x) (+.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x -6 6) (-.f64 1 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 2))) (+.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 5/6) (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2) 1) (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 x -6 6)) (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 x -6 6)) (neg.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (fma.f64 x -6 6))) (neg.f64 (neg.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x -6 6) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x -6 6) 1) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x -6 6) (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2)) (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (cbrt.f64 (fma.f64 x -6 6)) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2)) (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2) (cbrt.f64 (fma.f64 x -6 6))) (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 x -6 6) (neg.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 x -6 6) 3) (pow.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))) -1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (log.f64 (sqrt.f64 (exp.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x -6 6)) (/.f64 1 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 2) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1/6) (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (cbrt.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (cbrt.f64 (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (fma.f64 x -6 6)) (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (cbrt.f64 (neg.f64 (fma.f64 x -6 6))) (cbrt.f64 (neg.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (cbrt.f64 (fma.f64 x -6 6))) (neg.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2) 1/6)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 3) 1/9)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 2) 3/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1/6) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (cbrt.f64 (fma.f64 x -6 6))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/6 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) 3/2))))))"]],"rules":[["egg-rr",38],["egg-rr",54]],"stop":[["node limit",1]],"time":53.48095703125,"type":"rewrite"},{"count":[[98,97]],"egraph":[[1,11,27,6.9209e-5],[0,10,27,3.9417e-5]],"inputs":[["-6","6","6","(*.f64 (cbrt.f64 6) (cbrt.f64 -1))","(*.f64 (cbrt.f64 -1) (cbrt.f64 -6))","(*.f64 (cbrt.f64 -6) (cbrt.f64 -1))"]],"method":["egg-herbie"],"outputs":[["-6","6","6","(*.f64 (cbrt.f64 6) (cbrt.f64 -1))","(*.f64 (cbrt.f64 -1) (cbrt.f64 -6))","(*.f64 (cbrt.f64 -6) (cbrt.f64 -1))","(*.f64 (cbrt.f64 -1) (cbrt.f64 -6))"]],"stop":[["saturated",1]],"time":11.340087890625,"type":"simplify"},{"compiler":[[3844,2941]],"time":55.155029296875,"type":"eval"},{"alts":[["(/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))","fresh",0.12109375],["(*.f64 (pow.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))","fresh",0.10961141324105539],["(*.f64 (fma.f64 x -6 6) (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))","fresh",0.19140625],["(pow.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1)) 3)","next",0.07259750976844202],["(pow.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) 1) (/.f64 (cbrt.f64 (fma.f64 x -6 6)) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 3)","fresh",0.2344513672213042]],"compiler":[[13,10],[46,35],[15,12],[18,15],[27,23],[13,10],[46,35],[15,12],[18,15],[27,23]],"count":[[193,5]],"kept":[{"done":[0,0],"fresh":[4,0],"new":[188,5],"picked":[1,0]}],"min-error":[0],"time":54.048828125,"type":"prune"},{"compiler":[[83,58]],"locations":[["(pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1)",0.03515625,true],["(pow.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1)) 3)",0.06640625,true],["(fma.f64 x -6 6)",0.09765625,false],["(/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))",0.15625,true]],"time":21.76708984375,"type":"localize"},{"count":[[3,9]],"series":[["(pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1)","x","-inf",0.932861328125],["(pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1)","x","inf",0.695068359375],["(pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1)","x","0",0.720947265625],["(pow.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1)) 3)","x","-inf",1.1611328125],["(pow.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1)) 3)","x","inf",0.8720703125],["(pow.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1)) 3)","x","0",0.870849609375],["(/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))","x","-inf",0.554931640625],["(/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))","x","inf",0.468994140625],["(/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))","x","0",0.524169921875]],"time":6.947021484375,"type":"series"},{"count":[[3,189]],"egraph":[[2,3779,51,0.028645834],[1,332,51,0.0058329589999999995],[0,15,57,0.00053475]],"inputs":[["(/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))","(pow.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1)) 3)","(pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6)))) (sqrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 x -6 6)))) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 x -6 6))) (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 (fma.f64 x -6 6)) (neg.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (/.f64 1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (/.f64 1 (fma.f64 x -6 6)) (fma.f64 4 (sqrt.f64 x) x)))) (fma.f64 (neg.f64 (/.f64 1 (fma.f64 x -6 6))) (fma.f64 4 (sqrt.f64 x) x) (*.f64 (/.f64 1 (fma.f64 x -6 6)) (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (/.f64 1 (fma.f64 x -6 6)) (fma.f64 4 (sqrt.f64 x) x)))) (fma.f64 (neg.f64 (/.f64 1 (fma.f64 x -6 6))) (fma.f64 4 (sqrt.f64 x) x) (*.f64 (/.f64 1 (fma.f64 x -6 6)) (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) 2) (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (/.f64 1 (fma.f64 x -6 6)) (fma.f64 4 (sqrt.f64 x) x)))) (fma.f64 (neg.f64 (/.f64 1 (fma.f64 x -6 6))) (fma.f64 4 (sqrt.f64 x) x) (*.f64 (/.f64 1 (fma.f64 x -6 6)) (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (/.f64 1 (fma.f64 x -6 6)) (fma.f64 4 (sqrt.f64 x) x)))) (fma.f64 (neg.f64 (/.f64 1 (fma.f64 x -6 6))) (fma.f64 4 (sqrt.f64 x) x) (*.f64 (/.f64 1 (fma.f64 x -6 6)) (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (/.f64 1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6)) 1))) (fma.f64 (neg.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) 1 (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6)) 1))) (fma.f64 (neg.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) 1 (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) 2) (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6)) 1))) (fma.f64 (neg.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) 1 (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6)) 1))) (fma.f64 (neg.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) 1 (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (/.f64 1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6)))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) 2) (*.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6)))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) 2) (*.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) 2) (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6)))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) 2) (*.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) 2)))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6)))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) 2) (*.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (/.f64 1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) 2) (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) 1) (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (/.f64 1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 1) (*.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 1) (*.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) 2) (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 1) (*.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 1) (*.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (/.f64 1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2))))) (fma.f64 (neg.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (cbrt.f64 (fma.f64 x -6 6)))) (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)) (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2))))) (fma.f64 (neg.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (cbrt.f64 (fma.f64 x -6 6)))) (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)) (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) 2) (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2))))) (fma.f64 (neg.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (cbrt.f64 (fma.f64 x -6 6)))) (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)) (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2))))) (fma.f64 (neg.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (cbrt.f64 (fma.f64 x -6 6)))) (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)) (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (/.f64 1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6)))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)) (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6)))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)) (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) 2) (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6)))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)) (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6)))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)) (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (/.f64 1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6)))) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)) (*.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6)))) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)) (*.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) 2) (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6)))) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)) (*.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6)))) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)) (*.f64 (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))) (/.f64 (sqrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (/.f64 1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (sqrt.f64 (fma.f64 x -6 6))) (/.f64 1 (sqrt.f64 (fma.f64 x -6 6)))))) (fma.f64 (neg.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (sqrt.f64 (fma.f64 x -6 6)))) (/.f64 1 (sqrt.f64 (fma.f64 x -6 6))) (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (sqrt.f64 (fma.f64 x -6 6))) (/.f64 1 (sqrt.f64 (fma.f64 x -6 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (sqrt.f64 (fma.f64 x -6 6))) (/.f64 1 (sqrt.f64 (fma.f64 x -6 6)))))) (fma.f64 (neg.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (sqrt.f64 (fma.f64 x -6 6)))) (/.f64 1 (sqrt.f64 (fma.f64 x -6 6))) (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (sqrt.f64 (fma.f64 x -6 6))) (/.f64 1 (sqrt.f64 (fma.f64 x -6 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) 2) (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (sqrt.f64 (fma.f64 x -6 6))) (/.f64 1 (sqrt.f64 (fma.f64 x -6 6)))))) (fma.f64 (neg.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (sqrt.f64 (fma.f64 x -6 6)))) (/.f64 1 (sqrt.f64 (fma.f64 x -6 6))) (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (sqrt.f64 (fma.f64 x -6 6))) (/.f64 1 (sqrt.f64 (fma.f64 x -6 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (sqrt.f64 (fma.f64 x -6 6))) (/.f64 1 (sqrt.f64 (fma.f64 x -6 6)))))) (fma.f64 (neg.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (sqrt.f64 (fma.f64 x -6 6)))) (/.f64 1 (sqrt.f64 (fma.f64 x -6 6))) (*.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (sqrt.f64 (fma.f64 x -6 6))) (/.f64 1 (sqrt.f64 (fma.f64 x -6 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1 (/.f64 1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (sqrt.f64 (fma.f64 x -6 6)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 x -6 6)))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (sqrt.f64 (fma.f64 x -6 6))) (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (sqrt.f64 (fma.f64 x -6 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1 (fma.f64 x -6 6)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (sqrt.f64 (fma.f64 x -6 6)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 x -6 6)))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (sqrt.f64 (fma.f64 x -6 6))) (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (sqrt.f64 (fma.f64 x -6 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) 2) (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (sqrt.f64 (fma.f64 x -6 6)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 x -6 6)))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (sqrt.f64 (fma.f64 x -6 6))) (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (sqrt.f64 (fma.f64 x -6 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (sqrt.f64 (fma.f64 x -6 6)))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 x -6 6)))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (sqrt.f64 (fma.f64 x -6 6))) (*.f64 (/.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 x -6 6))) (/.f64 (pow.f64 (cbrt.f64 (fma.f64 4 (sqrt.f64 x) x)) 2) (sqrt.f64 (fma.f64 x -6 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 -1 (fma.f64 x -6 6)) (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (/.f64 1 (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))) (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) 2)) (cbrt.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2) (*.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (/.f64 1 (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))) (sqrt.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (*.f64 (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (/.f64 1 (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (/.f64 -1 (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 x -6 6)) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)) (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (fma.f64 x -6 6))) (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2) 1) (/.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1) (/.f64 (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)) (cbrt.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)) (/.f64 (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (cbrt.f64 (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2) (sqrt.f64 (fma.f64 x -6 6))) (/.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (sqrt.f64 (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 3) (pow.f64 (fma.f64 x -6 6) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (neg.f64 (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 3) (pow.f64 (fma.f64 x -6 6) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (fma.f64 x -6 6)) (neg.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -1 (fma.f64 x -6 6)) (neg.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) 2) (cbrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (sqrt.f64 (/.f64 -1 (fma.f64 x -6 6))) (neg.f64 (/.f64 (fma.f64 4 (sqrt.f64 x) x) (fma.f64 x -6 6))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x -6 6) (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2) (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (sqrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1/6) (*.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1/6) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) 1) (/.f64 (cbrt.f64 (fma.f64 x -6 6)) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 x -6 6)) 1) (/.f64 (sqrt.f64 (fma.f64 x -6 6)) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2)) (/.f64 (fma.f64 x -6 6) (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2)) (/.f64 (cbrt.f64 (fma.f64 x -6 6)) (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 x -6 6)) (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2)) (/.f64 (sqrt.f64 (fma.f64 x -6 6)) (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (/.f64 (fma.f64 x -6 6) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (/.f64 (cbrt.f64 (fma.f64 x -6 6)) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 x -6 6)) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (/.f64 (sqrt.f64 (fma.f64 x -6 6)) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (fma.f64 x -6 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (pow.f64 (/.f64 1 (fma.f64 x -6 6)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 3))) (fma.f64 (fma.f64 4 (sqrt.f64 x) x) (+.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x -6 6) (-.f64 1 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 2))) (+.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (neg.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (neg.f64 (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) 2))) (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2) 1) (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 2)) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2) (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1/6)) (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (sqrt.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 x -6 6)) (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 x -6 6)) (neg.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x -6 6) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x -6 6) 1) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (/.f64 1 (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x -6 6) (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2)) (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) 2))) (cbrt.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 x -6 6) 3) (pow.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x -6 6) (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2) (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (sqrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1/6) (*.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1/6) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) 1) (/.f64 (cbrt.f64 (fma.f64 x -6 6)) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 x -6 6)) 1) (/.f64 (sqrt.f64 (fma.f64 x -6 6)) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2)) (/.f64 (fma.f64 x -6 6) (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2)) (/.f64 (cbrt.f64 (fma.f64 x -6 6)) (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 x -6 6)) (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2)) (/.f64 (sqrt.f64 (fma.f64 x -6 6)) (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (/.f64 (fma.f64 x -6 6) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (/.f64 (cbrt.f64 (fma.f64 x -6 6)) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 x -6 6)) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (/.f64 (sqrt.f64 (fma.f64 x -6 6)) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (fma.f64 x -6 6))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (pow.f64 (/.f64 1 (fma.f64 x -6 6)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 3))) (fma.f64 (fma.f64 4 (sqrt.f64 x) x) (+.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 x -6 6) (-.f64 1 (pow.f64 (fma.f64 4 (sqrt.f64 x) x) 2))) (+.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (neg.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (neg.f64 (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) 2))) (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2) 1) (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2) (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 2)) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2) (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1/6)) (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1/6))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (sqrt.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 x -6 6)) (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 x -6 6)) (neg.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x -6 6) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x -6 6) 1) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (/.f64 1 (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x -6 6) (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2)) (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) 2))) (cbrt.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 x -6 6) 3) (pow.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 1))))))"]],"rules":[["egg-rr",51],["egg-rr",51],["egg-rr",87]],"stop":[["node limit",1]],"time":69.10595703125,"type":"rewrite"},{"count":[[198,142]],"egraph":[[0,4,9,2.4125e-5]],"inputs":[["-1/6","1/6","1/6","-6","6","6","-6","6","6"]],"method":["egg-herbie"],"outputs":[["-1/6","1/6","1/6","-6","6","6","-6","6","6"]],"stop":[["saturated",1]],"time":11.862060546875,"type":"simplify"},{"compiler":[[6570,5006]],"time":83.822998046875,"type":"eval"},{"alts":[["(/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))","fresh",0.12109375],["(*.f64 (pow.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))","next",0.10961141324105539],["(pow.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)) (cbrt.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)))) -1)) 3)","fresh",0.1735089597679378],["(*.f64 (fma.f64 x -6 6) (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))","fresh",0.19140625],["(pow.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1)) 3)","done",0.07259750976844202]],"compiler":[[13,10],[46,35],[38,31],[15,12],[18,15],[13,10],[46,35],[38,31],[15,12]],"count":[[184,5]],"kept":[{"done":[0,0],"fresh":[4,3],"new":[179,1],"picked":[1,1]}],"min-error":[0],"time":50.216064453125,"type":"prune"},{"compiler":[[167,118]],"locations":[["(*.f64 (pow.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))",0.0390625,true],["(pow.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2)",0.05078125,true],["(fma.f64 x -6 6)",0.09765625,false],["(/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))",0.125,false]],"time":39.90185546875,"type":"localize"},{"count":[[2,6]],"series":[["(*.f64 (pow.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))","x","-inf",2.98291015625],["(*.f64 (pow.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))","x","inf",0.531005859375],["(*.f64 (pow.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))","x","0",0.534912109375],["(pow.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2)","x","-inf",5.2490234375],["(pow.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2)","x","inf",1.305908203125],["(pow.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2)","x","0",6.677001953125]],"time":17.4541015625,"type":"series"},{"count":[[2,62]],"egraph":[[2,4251,46,0.031510542],[1,359,47,0.006557584],[0,17,109,0.0005525]],"inputs":[["(pow.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2)","(*.f64 (pow.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (*.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) (*.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2)) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) 2) (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) 2) (*.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) 4)) (pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (pow.f64 (cbrt.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) 2)) (cbrt.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (*.f64 4/3 (log.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (*.f64 4/3 (log.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (cbrt.f64 (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 x -6 6)) (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (sqrt.f64 (fma.f64 x -6 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 x -6 6)) (neg.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (fma.f64 x -6 6))) (neg.f64 (neg.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x -6 6) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (sqrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x -6 6) 1) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (fma.f64 x -6 6) (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2)) (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2) (cbrt.f64 (fma.f64 x -6 6))) (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (fma.f64 x -6 6) 3) (pow.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (pow.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2) (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 x -6 6) (neg.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 x -6 6) 3) (pow.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (pow.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 4/3 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2) (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 1))))))"]],"rules":[["egg-rr",37],["egg-rr",25]],"stop":[["node limit",1]],"time":59.073974609375,"type":"rewrite"},{"count":[[68,66]],"egraph":[[11,4899,54,0.031274835],[10,3875,54,0.030852585000000002],[9,3276,54,0.02292171],[8,2856,54,0.016311293],[7,2567,54,0.011778876],[6,2428,54,0.008318168],[5,1029,54,0.005245293],[4,509,54,0.002622376],[3,144,63,0.001165376],[2,65,63,0.000481917],[1,34,63,0.00023579200000000002],[0,15,63,9.6459e-5]],"inputs":[["(*.f64 (pow.f64 1679616 1/9) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3))","(*.f64 (pow.f64 1679616 1/9) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3))","(*.f64 (pow.f64 1679616 1/9) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3))","-6","6","6"]],"method":["egg-herbie"],"outputs":[["(*.f64 (pow.f64 1679616 1/9) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3))","(*.f64 (*.f64 (pow.f64 1679616 1/18) (pow.f64 1679616 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 8)))","(*.f64 (pow.f64 (pow.f64 1679616 1/36) 4) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 8)))","(*.f64 (pow.f64 1679616 1/9) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3))","(*.f64 (*.f64 (pow.f64 1679616 1/18) (pow.f64 1679616 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 8)))","(*.f64 (pow.f64 (pow.f64 1679616 1/36) 4) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 8)))","(*.f64 (pow.f64 1679616 1/9) (pow.f64 (*.f64 1 (pow.f64 (cbrt.f64 -1) 8)) 1/3))","(*.f64 (*.f64 (pow.f64 1679616 1/18) (pow.f64 1679616 1/18)) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 8)))","(*.f64 (pow.f64 (pow.f64 1679616 1/36) 4) (cbrt.f64 (pow.f64 (cbrt.f64 -1) 8)))","-6","6","6"]],"stop":[["unsound",1]],"time":44.656982421875,"type":"simplify"},{"compiler":[[15890,11964]],"time":186.2490234375,"type":"eval"},{"alts":[["(/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))","fresh",0.12109375],["(*.f64 (pow.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))","done",0.10961141324105539],["(pow.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)) (cbrt.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)))) -1)) 3)","fresh",0.1735089597679378],["(*.f64 (fma.f64 x -6 6) (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))","fresh",0.19140625],["(pow.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1)) 3)","done",0.07259750976844202]],"compiler":[[13,10],[46,35],[38,31],[15,12],[18,15]],"count":[[344,5]],"kept":[{"done":[1,1],"fresh":[3,3],"new":[339,0],"picked":[1,1]}],"min-error":[0],"time":146.681884765625,"type":"prune"},{"accuracy":[0.07259750976844202],"baseline":[0.07259750976844202],"branch":[["x",0.07259750976844202,1],["(/.f64 (*.f64 6 (-.f64 x 1)) (+.f64 (+.f64 x 1) (*.f64 4 (sqrt.f64 x))))",0.07259750976844202,1]],"compiler":[[2,1],[15,12],[259,196]],"count":[[12,1]],"inputs":[["(pow.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) 2) (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2)) (cbrt.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)))) -1)) 3)","(/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))","(*.f64 (pow.f64 (*.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))))) 2) (cbrt.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))))","(*.f64 (fma.f64 x -6 6) (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))","(pow.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1)) 3)","(pow.f64 (cbrt.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) 1) (/.f64 (cbrt.f64 (fma.f64 x -6 6)) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))) 3)","(*.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 x -6 6)) 2) 1) (/.f64 (cbrt.f64 (fma.f64 x -6 6)) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))))","(*.f64 (/.f64 1 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x))) (fma.f64 x -6 6))","(pow.f64 (cbrt.f64 (/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))) 3)","(/.f64 (/.f64 (+.f64 (pow.f64 (*.f64 x -6) 3) 216) (+.f64 (pow.f64 (*.f64 x -6) 2) (-.f64 36 (*.f64 (*.f64 x -6) 6)))) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))","(/.f64 (fma.f64 x -6 6) (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)))","(/.f64 (*.f64 6 (-.f64 x 1)) (+.f64 (+.f64 x 1) (*.f64 4 (sqrt.f64 x))))"]],"link":["."],"name":["Data.Approximate.Numerics:blog from approximate-0.2.2.1"],"oracle":[19.307145275324572],"outputs":[["(pow.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1)) 3)"]],"time":11.7890625,"times":[["x",5.019775390625],["(/.f64 (*.f64 6 (-.f64 x 1)) (+.f64 (+.f64 x 1) (*.f64 4 (sqrt.f64 x))))",2.385986328125]],"type":"regimes"},{"compiler":[[18,15]],"egraph":[[4,24,25,0.00013174999999999998],[3,23,25,0.00010466599999999999],[2,21,25,7.712499999999999e-5],[1,17,25,5.1083e-5],[0,15,25,2.5625e-5]],"inputs":[["(pow.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1)) 3)"]],"method":["egg-herbie"],"outputs":[["(pow.f64 (cbrt.f64 (pow.f64 (/.f64 (-.f64 -1 (fma.f64 4 (sqrt.f64 x) x)) (fma.f64 x -6 6)) -1)) 3)"]],"stop":[["fuel",1],["saturated",1]],"time":8.989990234375,"type":"simplify"},{"time":0.01611328125,"type":"soundness"},{"compiler":[[18,15]],"remove-preprocessing":[[]],"time":12.14599609375,"type":"end"}]