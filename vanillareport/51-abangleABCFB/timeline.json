[{"compiler":[[27,22]],"method":["search"],"sampling":[[12,0.5265716509279628,0.4719642204613592,0.0014641286106780171],[11,0.4602626282185156,0.5382732431708064,0.0014641286106780171],[10,0.40565519775191206,0.5928806736374099,0.0014641286106780171],[9,0.40565519775191206,0.5928806736374099,0.0014641286106780171],[8,0.3120424598091631,0.6864934115801589,0.0014641286106780171],[7,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[6,0.2496339678473305,0.7489019035419915,0.0014641286106780171],[5,0.0,0.998535871389322,0.0014641286106780171],[4,0.0,0.998535871389322,0.0014641286106780171],[3,0.0,0.998535871389322,0.0014641286106780171],[2,0.0,0.998535871389322,0.0014641286106780171],[1,0.0,0.998535871389322,0.0014641286106780171],[0,0.0,0.998535871389322,0.0014641286106780171]],"time":274.828125,"type":"analyze"},{"outcomes":[["body",512,"invalid",155.3759765625,670],["body",256,"invalid",235.167236328125,2066],["body",4096,"valid",388.28955078125,84],["body",512,"valid",180.72412109375,789],["body",1024,"invalid",498.493896484375,1301],["body",1024,"valid",578.493896484375,1527],["body",2048,"valid",158.31689453125,193],["body",256,"valid",610.142333984375,5663]],"time":2819.8828125,"type":"sample"},{"compiler":[[26,21]],"egraph":[[0,3,3,2.041e-6],[5,5347,148,0.030540374000000002],[4,3769,148,0.015951708000000002],[3,920,148,0.006826083],[2,262,148,0.00182325],[1,92,148,0.000606],[0,38,148,0.000178042]],"inputs":[["0","1","2"],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 a 2) (pow.f64 b 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 angle 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 a 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 a 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 angle 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 b 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 b 180))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2"],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))) (*.f64 (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))))","(*.f64 (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))) (*.f64 (sin.f64 (/.f64 (*.f64 (PI.f64) angle) 180)) (cos.f64 (/.f64 (*.f64 (PI.f64) angle) 180))))","(*.f64 (*.f64 (+.f64 b a) (*.f64 (-.f64 b a) 2)) (*.f64 (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))))","(*.f64 2 (*.f64 (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))) (*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 a 2) (pow.f64 b 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))) (*.f64 (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))) (*.f64 2 (-.f64 (*.f64 a a) (*.f64 b b)))))","(*.f64 (cos.f64 (/.f64 (*.f64 (PI.f64) angle) 180)) (*.f64 (-.f64 (*.f64 a a) (*.f64 b b)) (*.f64 2 (sin.f64 (/.f64 (*.f64 (PI.f64) angle) 180)))))","(*.f64 (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))) (*.f64 (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))) (*.f64 2 (-.f64 (*.f64 a a) (*.f64 b b)))))","(*.f64 (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))) (*.f64 2 (*.f64 (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))) (-.f64 (*.f64 a a) (*.f64 b b)))))","(*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (*.f64 (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))) (*.f64 (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))) -2)))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 angle 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 a 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 a 180))))","(*.f64 (*.f64 2 (-.f64 (*.f64 b b) (*.f64 angle angle))) (*.f64 (sin.f64 (*.f64 (PI.f64) (/.f64 a 180))) (cos.f64 (*.f64 (PI.f64) (/.f64 a 180)))))","(*.f64 2 (*.f64 (*.f64 (-.f64 (*.f64 b b) (*.f64 angle angle)) (sin.f64 (*.f64 (PI.f64) (/.f64 a 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 a 180)))))","(*.f64 (*.f64 (-.f64 (*.f64 b b) (*.f64 angle angle)) (*.f64 2 (sin.f64 (*.f64 (PI.f64) (/.f64 a 180))))) (cos.f64 (*.f64 (PI.f64) (/.f64 a 180))))","(*.f64 (*.f64 (cos.f64 (*.f64 (PI.f64) (/.f64 a 180))) (+.f64 b angle)) (*.f64 (-.f64 b angle) (*.f64 2 (sin.f64 (*.f64 (PI.f64) (/.f64 a 180))))))","(*.f64 (*.f64 2 (fma.f64 angle (neg.f64 angle) (*.f64 b b))) (*.f64 (sin.f64 (*.f64 a (/.f64 (PI.f64) 180))) (cos.f64 (*.f64 a (/.f64 (PI.f64) 180)))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 angle 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 b 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 b 180))))","(*.f64 (*.f64 2 (-.f64 (*.f64 angle angle) (*.f64 a a))) (*.f64 (sin.f64 (*.f64 (PI.f64) (/.f64 b 180))) (cos.f64 (*.f64 (PI.f64) (/.f64 b 180)))))","(*.f64 (sin.f64 (/.f64 (PI.f64) (/.f64 180 b))) (*.f64 (*.f64 2 (-.f64 (*.f64 angle angle) (*.f64 a a))) (cos.f64 (/.f64 (PI.f64) (/.f64 180 b)))))","(*.f64 (*.f64 (-.f64 (*.f64 angle angle) (*.f64 a a)) (*.f64 2 (sin.f64 (*.f64 (PI.f64) (/.f64 b 180))))) (cos.f64 (*.f64 (PI.f64) (/.f64 b 180))))","(*.f64 2 (*.f64 (*.f64 (+.f64 a angle) (-.f64 angle a)) (*.f64 (sin.f64 (*.f64 b (/.f64 (PI.f64) 180))) (cos.f64 (*.f64 b (/.f64 (PI.f64) 180))))))","(*.f64 2 (*.f64 (*.f64 (+.f64 a angle) (-.f64 angle a)) (*.f64 (sin.f64 (/.f64 b (/.f64 180 (PI.f64)))) (cos.f64 (/.f64 b (/.f64 180 (PI.f64)))))))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":57.552001953125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[6,5394,37,0.026681791],[5,3165,37,0.014591541],[4,1107,37,0.006474333],[3,276,37,0.0020998329999999997],[2,91,37,0.000698958],[1,37,37,0.000276208],[0,17,37,8.7833e-5]],"inputs":[["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))) (*.f64 (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))))","(*.f64 (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))) (*.f64 (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))))","(*.f64 2 (*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (*.f64 (sin.f64 (/.f64 (*.f64 (PI.f64) angle) 180)) (cos.f64 (/.f64 (*.f64 (PI.f64) angle) 180)))))","(*.f64 2 (*.f64 (fma.f64 b b (*.f64 a (neg.f64 a))) (*.f64 (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))))","(*.f64 (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))) (*.f64 (*.f64 -2 (fma.f64 a a (*.f64 b (neg.f64 b)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))))","(*.f64 2 (*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (*.f64 (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))))"]],"stop":[["node limit",1]],"time":38.342041015625,"type":"simplify"},{"compiler":[[49,36]],"time":0.693115234375,"type":"eval"},{"alts":[["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","next",34.707903262547894],["(*.f64 2 (*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (*.f64 (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))))","fresh",34.71552470942161]],"compiler":[[26,21],[26,19],[26,21],[26,19]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[34.70771220942101],"time":2.00390625,"type":"prune"},{"compiler":[[90,64]],"locations":[["(-.f64 (pow.f64 b 2) (pow.f64 a 2))",0.6992146216604117,true],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))))",10.48013412921756,true],["(cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))",24.734190618402295,true],["(sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))",24.78080296915254,true]],"time":26.137939453125,"type":"localize"},{"count":[[4,84]],"series":[["(-.f64 (pow.f64 b 2) (pow.f64 a 2))","a","-inf",0.166015625],["(-.f64 (pow.f64 b 2) (pow.f64 a 2))","a","inf",0.151123046875],["(-.f64 (pow.f64 b 2) (pow.f64 a 2))","a","0",0.14599609375],["(-.f64 (pow.f64 b 2) (pow.f64 a 2))","b","-inf",0.172119140625],["(-.f64 (pow.f64 b 2) (pow.f64 a 2))","b","inf",0.15283203125],["(-.f64 (pow.f64 b 2) (pow.f64 a 2))","b","0",0.1630859375],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","angle","-inf",1.0791015625],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","angle","inf",0.678955078125],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","angle","0",0.5830078125],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","a","-inf",0.446044921875],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","a","inf",0.56982421875],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","a","0",0.723876953125],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","b","-inf",0.52099609375],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","b","inf",0.828125],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","b","0",1.071044921875],["(cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))","angle","-inf",0.153076171875],["(cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))","angle","inf",0.1611328125],["(cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))","angle","0",0.416015625],["(sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))","angle","-inf",0.198974609375],["(sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))","angle","inf",0.19384765625],["(sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))","angle","0",0.627197265625]],"time":9.544189453125,"type":"series"},{"count":[[4,197]],"egraph":[[2,4259,55,0.033505499],[1,345,55,0.006182916],[0,16,55,0.000443125]],"inputs":[["(sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))","(cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))","(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(-.f64 (pow.f64 b 2) (pow.f64 a 2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) (sqrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) (sqrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (-.f64 (*.f64 b b) (*.f64 a a))) (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (-.f64 (*.f64 b b) (*.f64 a a))) (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (-.f64 (*.f64 b b) (*.f64 a a))) (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (-.f64 (*.f64 b b) (*.f64 a a))) (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (-.f64 (*.f64 b b) (*.f64 a a))) (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 2) (-.f64 (*.f64 b b) (*.f64 a a))) (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 3) (pow.f64 (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))) 3) (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 b b) (*.f64 (*.f64 a (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (fma.f64 (neg.f64 a) a (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (fma.f64 (*.f64 a (neg.f64 a)) 1 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a a))) (cbrt.f64 (pow.f64 a 4)) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (fma.f64 -1 (*.f64 a a) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (fma.f64 (neg.f64 (cbrt.f64 (pow.f64 a 4))) (cbrt.f64 (*.f64 a a)) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a (neg.f64 a)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (*.f64 b b) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) a) (cbrt.f64 (*.f64 a a))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) a)) (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 (cbrt.f64 a) a) (cbrt.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 b b) 1 (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) a) (cbrt.f64 (*.f64 a a))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) a)) (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 (cbrt.f64 a) a) (cbrt.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b b) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) a) (cbrt.f64 (*.f64 a a))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) a)) (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 (cbrt.f64 a) a) (cbrt.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) a) (cbrt.f64 (*.f64 a a))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) a)) (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 (cbrt.f64 a) a) (cbrt.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) a) (cbrt.f64 (*.f64 a a))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) a)) (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 (cbrt.f64 a) a) (cbrt.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) a) (cbrt.f64 (*.f64 a a))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) a)) (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 (cbrt.f64 a) a) (cbrt.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) a) (cbrt.f64 (*.f64 a a))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) a)) (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 (cbrt.f64 a) a) (cbrt.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) a) (cbrt.f64 (*.f64 a a))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) a)) (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 (cbrt.f64 a) a) (cbrt.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (*.f64 (*.f64 (cbrt.f64 a) a) (cbrt.f64 (*.f64 a a))))) (fma.f64 (neg.f64 (*.f64 (cbrt.f64 a) a)) (cbrt.f64 (*.f64 a a)) (*.f64 (*.f64 (cbrt.f64 a) a) (cbrt.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) a) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) a)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) a) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 b b) 1 (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) a) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) a)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) a) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b b) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) a) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) a)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) a) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) a) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) a)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) a) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) a) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) a)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) a) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) a) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) a)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) a) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) a) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) a)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) a) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) a) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) a)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) a) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (*.f64 (*.f64 (sqrt.f64 a) a) (sqrt.f64 a)))) (fma.f64 (neg.f64 (*.f64 (sqrt.f64 a) a)) (sqrt.f64 a) (*.f64 (*.f64 (sqrt.f64 a) a) (sqrt.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 a (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 a (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 a (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 b b) 1 (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 a (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 a (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 a (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b b) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 a (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 a (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 a (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 a (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 a (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 a (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 a (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 a (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 a (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 a (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 a (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 a (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 a (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 a (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 a (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 a (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 a (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 a (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (*.f64 (sqrt.f64 a) (*.f64 a (sqrt.f64 a))))) (fma.f64 (neg.f64 (sqrt.f64 a)) (*.f64 a (sqrt.f64 a)) (*.f64 (sqrt.f64 a) (*.f64 a (sqrt.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 b b (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 a (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 b b) 1 (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 a (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 b b) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 a (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 a (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 a (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 a (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 a (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 a (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 a (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (-.f64 (*.f64 b b) (*.f64 a a)))) (cbrt.f64 (exp.f64 (-.f64 (*.f64 b b) (*.f64 a a)))))) (log.f64 (cbrt.f64 (exp.f64 (-.f64 (*.f64 b b) (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 (*.f64 b b) (*.f64 a a))))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 (*.f64 b b) (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (*.f64 b b) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) 2) (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (neg.f64 a)))) (hypot.f64 b (sqrt.f64 (*.f64 a (neg.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 6) (pow.f64 a 6)) (/.f64 1 (fma.f64 (*.f64 a a) (fma.f64 b b (*.f64 a a)) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 b 4) (pow.f64 a 4)) (/.f64 1 (fma.f64 b b (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 b a) (-.f64 b a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 a a) (fma.f64 b b (*.f64 a a)) (pow.f64 b 4)) (-.f64 (pow.f64 b 6) (pow.f64 a 6))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 b b (*.f64 a a)) (-.f64 (pow.f64 b 4) (pow.f64 a 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 6) (pow.f64 a 6)) (fma.f64 (*.f64 a a) (fma.f64 b b (*.f64 a a)) (pow.f64 b 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 4) (pow.f64 a 4)) (fma.f64 b b (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 6) (pow.f64 a 6))) (neg.f64 (fma.f64 (*.f64 a a) (fma.f64 b b (*.f64 a a)) (pow.f64 b 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 b 4) (pow.f64 a 4))) (neg.f64 (fma.f64 b b (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 b 6) (pow.f64 (*.f64 a (neg.f64 a)) 3)) (+.f64 (pow.f64 b 4) (-.f64 (*.f64 (*.f64 a (neg.f64 a)) (*.f64 a (neg.f64 a))) (*.f64 (*.f64 b b) (*.f64 a (neg.f64 a))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 b 4) (*.f64 (*.f64 a (neg.f64 a)) (*.f64 a (neg.f64 a)))) (-.f64 (*.f64 b b) (*.f64 a (neg.f64 a))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (neg.f64 a)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (*.f64 b b) (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (*.f64 b b) (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (exp.f64 (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 b) b) (+.f64 1 (expm1.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (+.f64 1 (expm1.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (exp.f64 (*.f64 a (neg.f64 a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 b) b) (/.f64 1 (exp.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 b b))) (/.f64 1 (exp.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 a (neg.f64 a))) (pow.f64 (exp.f64 b) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (*.f64 a a))) (pow.f64 (exp.f64 b) b)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 a (neg.f64 a))) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (*.f64 a a))) (+.f64 1 (expm1.f64 (*.f64 b b)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (*.f64 b b) (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (*.f64 b b) (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (*.f64 b b) (*.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (*.f64 b b) (*.f64 a a))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 b b (*.f64 (*.f64 a (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b b) 1 (*.f64 (*.f64 a (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 a (neg.f64 a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 1 (fma.f64 (neg.f64 a) a (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 1 (fma.f64 (*.f64 a (neg.f64 a)) 1 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a a))) (cbrt.f64 (pow.f64 a 4)) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 b b) (*.f64 (*.f64 a (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 b b) (*.f64 a a)) (fma.f64 (neg.f64 a) a (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 b b) (*.f64 a a)) (fma.f64 (*.f64 a (neg.f64 a)) 1 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 (*.f64 b b) (*.f64 a a)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a a))) (cbrt.f64 (pow.f64 a 4)) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 a (neg.f64 a)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) 2) (fma.f64 (neg.f64 a) a (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) 2) (fma.f64 (*.f64 a (neg.f64 a)) 1 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) (pow.f64 (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) 2) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a a))) (cbrt.f64 (pow.f64 a 4)) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) 2) (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) (fma.f64 (neg.f64 a) a (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) 2) (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) (fma.f64 (*.f64 a (neg.f64 a)) 1 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) 2) (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a a))) (cbrt.f64 (pow.f64 a 4)) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (cbrt.f64 (pow.f64 b 4)) (*.f64 (*.f64 a (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (*.f64 (*.f64 a (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 b 4)) (pow.f64 (cbrt.f64 b) 2) (*.f64 (*.f64 a (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 a 4)) (neg.f64 (cbrt.f64 (*.f64 a a))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (neg.f64 a)))) (hypot.f64 b (sqrt.f64 (*.f64 a (neg.f64 a)))) (fma.f64 (neg.f64 a) a (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (neg.f64 a)))) (hypot.f64 b (sqrt.f64 (*.f64 a (neg.f64 a)))) (fma.f64 (*.f64 a (neg.f64 a)) 1 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 b (sqrt.f64 (*.f64 a (neg.f64 a)))) (hypot.f64 b (sqrt.f64 (*.f64 a (neg.f64 a)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a a))) (cbrt.f64 (pow.f64 a 4)) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 b) (*.f64 (sqrt.f64 b) b) (*.f64 (*.f64 a (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (pow.f64 a 6)) (/.f64 1 (fma.f64 (*.f64 a a) (fma.f64 b b (*.f64 a a)) (pow.f64 b 4))) (fma.f64 (neg.f64 a) a (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (pow.f64 a 6)) (/.f64 1 (fma.f64 (*.f64 a a) (fma.f64 b b (*.f64 a a)) (pow.f64 b 4))) (fma.f64 (*.f64 a (neg.f64 a)) 1 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 6) (pow.f64 a 6)) (/.f64 1 (fma.f64 (*.f64 a a) (fma.f64 b b (*.f64 a a)) (pow.f64 b 4))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a a))) (cbrt.f64 (pow.f64 a 4)) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 a 4)) (/.f64 1 (fma.f64 b b (*.f64 a a))) (fma.f64 (neg.f64 a) a (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 a 4)) (/.f64 1 (fma.f64 b b (*.f64 a a))) (fma.f64 (*.f64 a (neg.f64 a)) 1 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 a 4)) (/.f64 1 (fma.f64 b b (*.f64 a a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a a))) (cbrt.f64 (pow.f64 a 4)) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (sqrt.f64 b)) (sqrt.f64 b) (*.f64 (*.f64 a (neg.f64 a)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 a (neg.f64 a))) (cbrt.f64 (*.f64 a (neg.f64 a)))) (cbrt.f64 (*.f64 a (neg.f64 a))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 a (neg.f64 a))) (sqrt.f64 (*.f64 a (neg.f64 a))) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 a) a (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 a a) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (*.f64 a (neg.f64 a)) 1 (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a a))) (cbrt.f64 (pow.f64 a 4)) (*.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (pow.f64 a 4))) (cbrt.f64 (*.f64 a a)) (*.f64 b b))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 a (neg.f64 a)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (*.f64 (*.f64 a (neg.f64 a)) 1))))))"]],"rules":[["egg-rr",135],["egg-rr",18],["egg-rr",22],["egg-rr",22]],"stop":[["node limit",1]],"time":71.268798828125,"type":"rewrite"},{"count":[[281,237]],"egraph":[[3,4851,1514,0.021091],[2,862,1536,0.007691625],[1,245,1656,0.001917833],[0,90,1918,0.000528625]],"inputs":[["(*.f64 1/180 (*.f64 angle (PI.f64)))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/180 (*.f64 angle (PI.f64))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (+.f64 (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64))))","(+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64)))) (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 3)))))","(+.f64 (*.f64 1/11337408000000 (*.f64 (pow.f64 angle 5) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64)))) (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 3))))))","(+.f64 (*.f64 -1/15427944806400000000 (*.f64 (pow.f64 angle 7) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 1/11337408000000 (*.f64 (pow.f64 angle 5) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64)))) (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 3)))))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 -1 (pow.f64 a 2))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(pow.f64 b 2)","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(pow.f64 b 2)","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(pow.f64 b 2)","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(*.f64 -1 (pow.f64 a 2))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(*.f64 -1 (pow.f64 a 2))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 angle (*.f64 1/180 (PI.f64)))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/180 (*.f64 angle (PI.f64))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (*.f64 1/180 (*.f64 angle (PI.f64))))","(fma.f64 1/180 (*.f64 angle (PI.f64)) (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))))","(fma.f64 1/180 (*.f64 angle (PI.f64)) (*.f64 (pow.f64 angle 3) (*.f64 -1/34992000 (pow.f64 (PI.f64) 3))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/180 (*.f64 angle (PI.f64)) (*.f64 (*.f64 1/22674816000000 (pow.f64 angle 5)) (pow.f64 (PI.f64) 5))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/180 (*.f64 angle (PI.f64)) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 (pow.f64 angle 3) (*.f64 -1/34992000 (pow.f64 (PI.f64) 3)) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 (pow.f64 angle 3) (*.f64 -1/34992000 (pow.f64 (PI.f64) 3)) (*.f64 (pow.f64 (PI.f64) 5) (*.f64 1/22674816000000 (pow.f64 angle 5)))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (+.f64 (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 (*.f64 1/22674816000000 (pow.f64 angle 5)) (pow.f64 (PI.f64) 5) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 angle 7) (*.f64 -1/30855889612800000000 (pow.f64 (PI.f64) 7))))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (*.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2))))","(fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) 1)","(fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) 1)","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)))))","(+.f64 1 (fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)))))","(fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1))","(fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) (fma.f64 (pow.f64 (PI.f64) 4) (*.f64 1/25194240000 (pow.f64 angle 4)) 1))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2))))))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (+.f64 1 (fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))))))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1)))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) (fma.f64 (pow.f64 (PI.f64) 4) (*.f64 1/25194240000 (pow.f64 angle 4)) 1)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64))))","(*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 -2 (*.f64 a a)))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 -2 (*.f64 a a)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (*.f64 b b)))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (*.f64 b b)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (*.f64 b b)))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (*.f64 b b)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (*.f64 b b)))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (*.f64 b b)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 -2 (*.f64 a a)))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 -2 (*.f64 a a)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 -2 (*.f64 a a)))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 -2 (*.f64 a a)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64))))","(*.f64 (*.f64 1/90 angle) (*.f64 (PI.f64) (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 angle (*.f64 (*.f64 (PI.f64) (-.f64 (*.f64 b b) (*.f64 a a))) 1/90))","(*.f64 angle (*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (*.f64 (PI.f64) 1/90)))","(*.f64 (*.f64 (+.f64 a b) (*.f64 (-.f64 b a) (PI.f64))) (*.f64 angle 1/90))","(+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64)))) (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 3)))))","(fma.f64 1/90 (*.f64 angle (*.f64 (PI.f64) (-.f64 (*.f64 b b) (*.f64 a a)))) (*.f64 (*.f64 -1/17496000 (pow.f64 angle 3)) (*.f64 (pow.f64 (PI.f64) 3) (-.f64 (*.f64 b b) (*.f64 a a)))))","(fma.f64 1/90 (*.f64 angle (*.f64 (PI.f64) (-.f64 (*.f64 b b) (*.f64 a a)))) (*.f64 (pow.f64 angle 3) (*.f64 (*.f64 (pow.f64 (PI.f64) 3) (-.f64 (*.f64 b b) (*.f64 a a))) -1/17496000)))","(*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (+.f64 (*.f64 angle (*.f64 (PI.f64) 1/90)) (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (PI.f64) 3) -1/17496000))))","(+.f64 (*.f64 1/11337408000000 (*.f64 (pow.f64 angle 5) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64)))) (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 3))))))","(fma.f64 1/11337408000000 (*.f64 (pow.f64 angle 5) (*.f64 (pow.f64 (PI.f64) 5) (-.f64 (*.f64 b b) (*.f64 a a)))) (fma.f64 1/90 (*.f64 angle (*.f64 (PI.f64) (-.f64 (*.f64 b b) (*.f64 a a)))) (*.f64 (*.f64 -1/17496000 (pow.f64 angle 3)) (*.f64 (pow.f64 (PI.f64) 3) (-.f64 (*.f64 b b) (*.f64 a a))))))","(fma.f64 1/11337408000000 (*.f64 (pow.f64 angle 5) (*.f64 (pow.f64 (PI.f64) 5) (-.f64 (*.f64 b b) (*.f64 a a)))) (fma.f64 1/90 (*.f64 angle (*.f64 (PI.f64) (-.f64 (*.f64 b b) (*.f64 a a)))) (*.f64 (pow.f64 angle 3) (*.f64 (*.f64 (pow.f64 (PI.f64) 3) (-.f64 (*.f64 b b) (*.f64 a a))) -1/17496000))))","(fma.f64 angle (*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (*.f64 (PI.f64) 1/90)) (*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (+.f64 (*.f64 (pow.f64 (PI.f64) 5) (*.f64 (pow.f64 angle 5) 1/11337408000000)) (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (PI.f64) 3) -1/17496000)))))","(*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (+.f64 (+.f64 (*.f64 (pow.f64 (PI.f64) 5) (*.f64 (pow.f64 angle 5) 1/11337408000000)) (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (PI.f64) 3) -1/17496000))) (*.f64 angle (*.f64 (PI.f64) 1/90))))","(+.f64 (*.f64 -1/15427944806400000000 (*.f64 (pow.f64 angle 7) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 1/11337408000000 (*.f64 (pow.f64 angle 5) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64)))) (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 3)))))))","(fma.f64 -1/15427944806400000000 (*.f64 (pow.f64 angle 7) (*.f64 (pow.f64 (PI.f64) 7) (-.f64 (*.f64 b b) (*.f64 a a)))) (fma.f64 1/11337408000000 (*.f64 (pow.f64 angle 5) (*.f64 (pow.f64 (PI.f64) 5) (-.f64 (*.f64 b b) (*.f64 a a)))) (fma.f64 1/90 (*.f64 angle (*.f64 (PI.f64) (-.f64 (*.f64 b b) (*.f64 a a)))) (*.f64 (*.f64 -1/17496000 (pow.f64 angle 3)) (*.f64 (pow.f64 (PI.f64) 3) (-.f64 (*.f64 b b) (*.f64 a a)))))))","(fma.f64 -1/15427944806400000000 (*.f64 (pow.f64 angle 7) (*.f64 (pow.f64 (PI.f64) 7) (-.f64 (*.f64 b b) (*.f64 a a)))) (fma.f64 1/11337408000000 (*.f64 (pow.f64 angle 5) (*.f64 (pow.f64 (PI.f64) 5) (-.f64 (*.f64 b b) (*.f64 a a)))) (fma.f64 1/90 (*.f64 angle (*.f64 (PI.f64) (-.f64 (*.f64 b b) (*.f64 a a)))) (*.f64 (pow.f64 angle 3) (*.f64 (*.f64 (pow.f64 (PI.f64) 3) (-.f64 (*.f64 b b) (*.f64 a a))) -1/17496000)))))","(+.f64 (*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (+.f64 (*.f64 angle (*.f64 (PI.f64) 1/90)) (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (PI.f64) 3) -1/17496000)))) (*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (+.f64 (*.f64 (pow.f64 (PI.f64) 5) (*.f64 (pow.f64 angle 5) 1/11337408000000)) (*.f64 (pow.f64 (PI.f64) 7) (*.f64 (pow.f64 angle 7) -1/15427944806400000000)))))","(*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (+.f64 (+.f64 (*.f64 angle (*.f64 (PI.f64) 1/90)) (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (PI.f64) 3) -1/17496000))) (+.f64 (*.f64 (pow.f64 (PI.f64) 5) (*.f64 (pow.f64 angle 5) 1/11337408000000)) (*.f64 (pow.f64 angle 7) (*.f64 (pow.f64 (PI.f64) 7) -1/15427944806400000000)))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(fma.f64 -2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a a)) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 -1 (pow.f64 a 2))","(neg.f64 (*.f64 a a))","(*.f64 a (neg.f64 a))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(-.f64 (*.f64 b b) (*.f64 a a))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(-.f64 (*.f64 b b) (*.f64 a a))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(-.f64 (*.f64 b b) (*.f64 a a))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(-.f64 (*.f64 b b) (*.f64 a a))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(-.f64 (*.f64 b b) (*.f64 a a))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(-.f64 (*.f64 b b) (*.f64 a a))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(-.f64 (*.f64 b b) (*.f64 a a))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(-.f64 (*.f64 b b) (*.f64 a a))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(-.f64 (*.f64 b b) (*.f64 a a))","(pow.f64 b 2)","(*.f64 b b)","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(-.f64 (*.f64 b b) (*.f64 a a))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(-.f64 (*.f64 b b) (*.f64 a a))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(-.f64 (*.f64 b b) (*.f64 a a))","(*.f64 -1 (pow.f64 a 2))","(neg.f64 (*.f64 a a))","(*.f64 a (neg.f64 a))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(-.f64 (*.f64 b b) (*.f64 a a))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(-.f64 (*.f64 b b) (*.f64 a a))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(-.f64 (*.f64 b b) (*.f64 a a))","(*.f64 -1 (pow.f64 a 2))","(neg.f64 (*.f64 a a))","(*.f64 a (neg.f64 a))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(-.f64 (*.f64 b b) (*.f64 a a))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(-.f64 (*.f64 b b) (*.f64 a a))","(+.f64 (*.f64 -1 (pow.f64 a 2)) (pow.f64 b 2))","(-.f64 (*.f64 b b) (*.f64 a a))"]],"stop":[["node limit",1]],"time":50.82421875,"type":"simplify"},{"compiler":[[8009,4401]],"time":71.23388671875,"type":"eval"},{"alts":[["(*.f64 (exp.f64 (log.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",48.25194920684091],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3)) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",34.680275777538235],["(*.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",46.184226563938275],["(*.f64 (*.f64 (*.f64 2 (*.f64 a (neg.f64 a))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",46.25173791288348],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","fresh",34.97448954758482],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (+.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))","fresh",34.828179527397936],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 a 4)) (/.f64 1 (fma.f64 b b (*.f64 a a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a a))) (cbrt.f64 (pow.f64 a 4)) (*.f64 a a)))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",48.522074411424704],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))","fresh",34.83665691676205],["(*.f64 (sqrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 2)) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",49.04581376508501],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","fresh",34.955090049896015],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (sin.f64 1)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",55.50095927014672],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (pow.f64 (sqrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2))","fresh",37.38993206370299],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (-.f64 (exp.f64 (log1p.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 1)) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",52.63282512211346],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 1)","fresh",35.4446551338361],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3))","fresh",34.82427103707869],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (+.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",52.66026725532426],["(*.f64 (*.f64 (*.f64 (+.f64 a b) (*.f64 (-.f64 b a) (PI.f64))) (*.f64 angle 1/90)) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",37.558284894578506],["(*.f64 (*.f64 (*.f64 2 (exp.f64 (log.f64 (-.f64 (*.f64 b b) (*.f64 a a))))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",47.39423959965093],["(*.f64 (*.f64 (*.f64 2 (sqrt.f64 (pow.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",50.448884921663286],["(*.f64 (pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 3) 1/3) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",51.33269358645982],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",52.746949414942684],["(*.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",37.551137861374905],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","next",34.51799519099626],["(*.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (*.f64 b b))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",44.03252825103348],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",34.735247012547894],["(*.f64 (-.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))))) 1) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",51.5187758483029],["(*.f64 (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",44.029112946624345],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sqrt.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",50.70767827201438],["(*.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",34.612932250798856],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))))","fresh",34.82377213404434],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (sin.f64 1))))","fresh",37.155321634271],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))","fresh",34.820365907350535]],"compiler":[[28,21],[29,24],[22,18],[23,18],[26,21],[39,32],[48,32],[48,39],[29,22],[29,24],[43,36],[29,24],[30,25],[21,18],[29,24],[39,32],[23,16],[28,21],[29,22],[30,23],[48,39],[23,18],[26,21],[22,17],[33,22],[30,23],[22,17],[29,24],[26,19],[26,21],[43,36],[30,25],[28,21],[29,24],[22,18],[23,18],[26,21],[39,32],[48,32],[48,39],[29,22],[29,24],[43,36],[29,24],[30,25],[21,18],[29,24],[39,32],[23,16],[28,21],[29,22],[30,23],[48,39],[23,18],[26,21],[22,17],[33,22],[30,23],[22,17],[29,24],[26,19],[26,21],[43,36],[30,25]],"count":[[239,32]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[237,32],"picked":[1,0]}],"min-error":[31.243418779849808],"time":73.912109375,"type":"prune"},{"compiler":[[99,65]],"locations":[["(-.f64 (pow.f64 b 2) (pow.f64 a 2))",0.6992146216604117,false],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))",10.48404037921756,true],["(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))",24.732930173207155,true],["(cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))",24.734190618402295,false]],"time":27.19091796875,"type":"localize"},{"count":[[2,40]],"series":[["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","angle","-inf",0.1708984375],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","angle","inf",0.18798828125],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","angle","0",0.234130859375],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","a","-inf",0.20703125],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","a","inf",0.18896484375],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","a","0",0.2041015625],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","b","-inf",0.192138671875],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","b","inf",0.208984375],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","b","0",0.197998046875],["(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","angle","-inf",0.1630859375],["(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","angle","inf",0.18896484375],["(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","angle","0",0.238037109375]],"time":2.575927734375,"type":"series"},{"count":[[2,40]],"egraph":[[2,3880,35,0.035395875],[1,318,35,0.005573042],[0,15,35,0.000464792]],"inputs":[["(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))))) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (sin.f64 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))) 2) (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))) (sqrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (-.f64 (*.f64 b b) (*.f64 a a))) (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (-.f64 (*.f64 b b) (*.f64 a a))) (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))))) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (-.f64 (*.f64 b b) (*.f64 a a))) (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (-.f64 (*.f64 b b) (*.f64 a a))) (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))) (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 2) (-.f64 (*.f64 b b) (*.f64 a a))) (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 2) (-.f64 (*.f64 b b) (*.f64 a a))) (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) 3) (pow.f64 (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))) 3) (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))) 1))))))"]],"rules":[["egg-rr",18],["egg-rr",22]],"stop":[["node limit",1]],"time":58.6689453125,"type":"rewrite"},{"count":[[80,63]],"egraph":[[3,3388,1056,0.020699001],[2,649,1078,0.008070251],[1,181,1194,0.0018022090000000001],[0,64,1454,0.000484667]],"inputs":[["(*.f64 1/180 (*.f64 angle (PI.f64)))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/180 (*.f64 angle (PI.f64))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (+.f64 (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64))))","(+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64)))) (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 3)))))","(+.f64 (*.f64 1/11337408000000 (*.f64 (pow.f64 angle 5) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64)))) (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 3))))))","(+.f64 (*.f64 -1/15427944806400000000 (*.f64 (pow.f64 angle 7) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 1/11337408000000 (*.f64 (pow.f64 angle 5) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64)))) (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 3)))))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 1/180 (*.f64 angle (PI.f64)))","(*.f64 (*.f64 1/180 angle) (PI.f64))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (*.f64 1/180 (*.f64 angle (PI.f64))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (*.f64 (*.f64 1/180 angle) (PI.f64)))","(fma.f64 1/180 (*.f64 angle (PI.f64)) (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))))","(fma.f64 1/180 (*.f64 angle (PI.f64)) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -1/34992000 (pow.f64 angle 3))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/180 (*.f64 angle (PI.f64)) (*.f64 (*.f64 1/22674816000000 (pow.f64 angle 5)) (pow.f64 (PI.f64) 5))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/180 (*.f64 angle (PI.f64)) (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)))))","(fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 (pow.f64 (PI.f64) 3) (*.f64 -1/34992000 (pow.f64 angle 3)) (*.f64 (pow.f64 angle 5) (*.f64 1/22674816000000 (pow.f64 (PI.f64) 5)))))","(+.f64 (*.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3))) (+.f64 (*.f64 1/180 (*.f64 angle (PI.f64))) (+.f64 (*.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5))) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 (*.f64 1/22674816000000 (pow.f64 angle 5)) (pow.f64 (PI.f64) 5) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 -1/30855889612800000000 (*.f64 (pow.f64 angle 7) (pow.f64 (PI.f64) 7))))))","(fma.f64 1/180 (*.f64 angle (PI.f64)) (fma.f64 -1/34992000 (*.f64 (pow.f64 angle 3) (pow.f64 (PI.f64) 3)) (fma.f64 1/22674816000000 (*.f64 (pow.f64 angle 5) (pow.f64 (PI.f64) 5)) (*.f64 (pow.f64 (PI.f64) 7) (*.f64 -1/30855889612800000000 (pow.f64 angle 7))))))","(*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (*.f64 -2 (*.f64 a a)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 -2 (*.f64 a (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 -2 (*.f64 a a)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (*.f64 -2 (*.f64 a a)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 -2 (*.f64 a (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 -2 (*.f64 a a)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (*.f64 -2 (*.f64 a a)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64))))","(*.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 -2 (*.f64 a (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 -2 (*.f64 a a)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64))))","(*.f64 (*.f64 1/90 angle) (*.f64 (PI.f64) (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 1/90 (*.f64 angle (*.f64 (PI.f64) (-.f64 (*.f64 b b) (*.f64 a a)))))","(*.f64 (*.f64 (*.f64 (PI.f64) (*.f64 angle 1/90)) (+.f64 a b)) (-.f64 b a))","(*.f64 angle (*.f64 (PI.f64) (*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 1/90)))","(+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64)))) (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 3)))))","(fma.f64 1/90 (*.f64 angle (*.f64 (PI.f64) (-.f64 (*.f64 b b) (*.f64 a a)))) (*.f64 -1/17496000 (*.f64 (*.f64 (pow.f64 angle 3) (-.f64 (*.f64 b b) (*.f64 a a))) (pow.f64 (PI.f64) 3))))","(fma.f64 1/90 (*.f64 angle (*.f64 (PI.f64) (-.f64 (*.f64 b b) (*.f64 a a)))) (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (PI.f64) 3) (-.f64 (*.f64 b b) (*.f64 a a))))))","(*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (+.f64 (*.f64 (PI.f64) (*.f64 angle 1/90)) (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (PI.f64) 3) -1/17496000))))","(*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (+.f64 (*.f64 angle (*.f64 (PI.f64) 1/90)) (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (PI.f64) 3) -1/17496000))))","(+.f64 (*.f64 1/11337408000000 (*.f64 (pow.f64 angle 5) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64)))) (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 3))))))","(fma.f64 1/11337408000000 (*.f64 (*.f64 (pow.f64 angle 5) (-.f64 (*.f64 b b) (*.f64 a a))) (pow.f64 (PI.f64) 5)) (fma.f64 1/90 (*.f64 angle (*.f64 (PI.f64) (-.f64 (*.f64 b b) (*.f64 a a)))) (*.f64 -1/17496000 (*.f64 (*.f64 (pow.f64 angle 3) (-.f64 (*.f64 b b) (*.f64 a a))) (pow.f64 (PI.f64) 3)))))","(fma.f64 1/11337408000000 (*.f64 (pow.f64 (PI.f64) 5) (*.f64 (pow.f64 angle 5) (-.f64 (*.f64 b b) (*.f64 a a)))) (fma.f64 1/90 (*.f64 angle (*.f64 (PI.f64) (-.f64 (*.f64 b b) (*.f64 a a)))) (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (PI.f64) 3) (-.f64 (*.f64 b b) (*.f64 a a)))))))","(fma.f64 angle (*.f64 1/90 (*.f64 (PI.f64) (-.f64 (*.f64 b b) (*.f64 a a)))) (*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (+.f64 (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (PI.f64) 3) -1/17496000)) (*.f64 (pow.f64 (PI.f64) 5) (*.f64 (pow.f64 angle 5) 1/11337408000000)))))","(*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (+.f64 (*.f64 angle (*.f64 (PI.f64) 1/90)) (+.f64 (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (PI.f64) 3) -1/17496000)) (*.f64 (pow.f64 angle 5) (*.f64 (pow.f64 (PI.f64) 5) 1/11337408000000)))))","(+.f64 (*.f64 -1/15427944806400000000 (*.f64 (pow.f64 angle 7) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 7)))) (+.f64 (*.f64 1/11337408000000 (*.f64 (pow.f64 angle 5) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64)))) (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (pow.f64 (PI.f64) 3)))))))","(fma.f64 -1/15427944806400000000 (*.f64 (pow.f64 angle 7) (*.f64 (pow.f64 (PI.f64) 7) (-.f64 (*.f64 b b) (*.f64 a a)))) (fma.f64 1/11337408000000 (*.f64 (*.f64 (pow.f64 angle 5) (-.f64 (*.f64 b b) (*.f64 a a))) (pow.f64 (PI.f64) 5)) (fma.f64 1/90 (*.f64 angle (*.f64 (PI.f64) (-.f64 (*.f64 b b) (*.f64 a a)))) (*.f64 -1/17496000 (*.f64 (*.f64 (pow.f64 angle 3) (-.f64 (*.f64 b b) (*.f64 a a))) (pow.f64 (PI.f64) 3))))))","(fma.f64 -1/15427944806400000000 (*.f64 (pow.f64 angle 7) (*.f64 (pow.f64 (PI.f64) 7) (-.f64 (*.f64 b b) (*.f64 a a)))) (fma.f64 1/11337408000000 (*.f64 (pow.f64 (PI.f64) 5) (*.f64 (pow.f64 angle 5) (-.f64 (*.f64 b b) (*.f64 a a)))) (fma.f64 1/90 (*.f64 angle (*.f64 (PI.f64) (-.f64 (*.f64 b b) (*.f64 a a)))) (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (PI.f64) 3) (-.f64 (*.f64 b b) (*.f64 a a))))))))","(+.f64 (*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (+.f64 (*.f64 (PI.f64) (*.f64 angle 1/90)) (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (PI.f64) 3) -1/17496000)))) (*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (+.f64 (*.f64 (pow.f64 (PI.f64) 5) (*.f64 (pow.f64 angle 5) 1/11337408000000)) (*.f64 (pow.f64 angle 7) (*.f64 (pow.f64 (PI.f64) 7) -1/15427944806400000000)))))","(*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (+.f64 (+.f64 (*.f64 angle (*.f64 (PI.f64) 1/90)) (*.f64 (pow.f64 angle 3) (*.f64 (pow.f64 (PI.f64) 3) -1/17496000))) (+.f64 (*.f64 (pow.f64 angle 5) (*.f64 (pow.f64 (PI.f64) 5) 1/11337408000000)) (*.f64 (pow.f64 (PI.f64) 7) (*.f64 (pow.f64 angle 7) -1/15427944806400000000)))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))","(*.f64 2 (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(fma.f64 -2 (*.f64 (*.f64 a a) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))) (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (*.f64 1/180 angle) (PI.f64)))))","(*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 -2 (*.f64 a a)) (*.f64 2 (*.f64 b b))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (-.f64 (*.f64 b b) (*.f64 a a))))"]],"stop":[["node limit",1]],"time":48.802001953125,"type":"simplify"},{"compiler":[[7963,4191]],"time":77.30419921875,"type":"eval"},{"alts":[["(*.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",46.184226563938275],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","fresh",34.74790677306504],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","fresh",34.527711819808964],["(*.f64 (*.f64 (*.f64 2 (*.f64 a (neg.f64 a))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",46.25173791288348],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))))","fresh",34.82377213404434],["(*.f64 (sqrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 2)) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",49.04581376508501],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sqrt.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) 2))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",50.70767827201438],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","next",34.524186450764695],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (sin.f64 1))))","fresh",37.344574201323574],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))","fresh",34.67096364838268],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (sin.f64 1))))","fresh",37.155321634271],["(*.f64 (pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 3) 1/3) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",51.33269358645982],["(*.f64 (*.f64 (*.f64 2 (sqrt.f64 (pow.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",50.36521559156262],["(*.f64 (*.f64 (*.f64 2 (exp.f64 (log.f64 (-.f64 (*.f64 b b) (*.f64 a a))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",47.293012615911714],["(*.f64 (*.f64 angle (*.f64 (PI.f64) (*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 1/90))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",37.10255157509689],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","fresh",34.955090049896015],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 1)","fresh",35.4446551338361],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 1)","fresh",35.00123138829156],["(*.f64 (*.f64 (*.f64 (+.f64 a b) (*.f64 (-.f64 b a) (PI.f64))) (*.f64 angle 1/90)) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",37.558284894578506],["(*.f64 (*.f64 (*.f64 2 (exp.f64 (log.f64 (-.f64 (*.f64 b b) (*.f64 a a))))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",47.39423959965093],["(*.f64 (*.f64 (*.f64 2 (sqrt.f64 (pow.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",50.448884921663286],["(*.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",37.551137861374905],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (sin.f64 1)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",55.50095927014672],["(*.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (*.f64 b b))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",44.03252825103348],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 a 4)) (/.f64 1 (fma.f64 b b (*.f64 a a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a a))) (cbrt.f64 (pow.f64 a 4)) (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",48.41783084754191],["(*.f64 (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",44.029112946624345],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (+.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",52.66026725532426],["(*.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",34.612932250798856],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3))","fresh",34.68334280777309],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))))) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",52.746949414942684],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (log.f64 (+.f64 1 (expm1.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",52.630241016801136],["(*.f64 (-.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))))) 1) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",51.5187758483029],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (pow.f64 (sqrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2))","fresh",37.38993206370299]],"compiler":[[22,18],[26,20],[29,24],[23,18],[26,21],[29,22],[29,24],[33,22],[43,36],[48,39],[43,36],[30,23],[29,22],[28,21],[23,16],[29,24],[21,18],[21,18],[23,16],[28,21],[29,22],[23,18],[43,36],[22,17],[48,32],[22,17],[39,32],[26,19],[29,24],[48,39],[30,25],[30,23],[29,24],[22,18],[26,20],[29,24],[23,18],[26,21],[29,22],[29,24],[33,22],[43,36],[48,39],[43,36],[30,23],[29,22],[28,21],[23,16],[29,24],[21,18],[21,18],[23,16],[28,21],[29,22],[23,18],[43,36],[22,17],[48,32],[22,17],[39,32],[26,19],[29,24],[48,39],[30,25],[30,23],[29,24]],"count":[[267,33]],"kept":[{"done":[0,0],"fresh":[31,14],"new":[235,19],"picked":[1,0]}],"min-error":[31.16164828886821],"time":86.135986328125,"type":"prune"},{"compiler":[[139,47]],"locations":[["(*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))",10.48404037921756,true],["(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))",24.732930173207155,false],["(cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))",24.734190618402295,false],["(fma.f64 (neg.f64 a) a (*.f64 a a))",43.85329952779829,true]],"time":26.333984375,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","angle","-inf",0.567138671875],["(*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","angle","inf",0.759033203125],["(*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","angle","0",0.800048828125],["(*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","a","-inf",0.367919921875],["(*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","a","inf",0.4169921875],["(*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","a","0",0.43798828125],["(*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","b","-inf",0.447998046875],["(*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","b","inf",0.43994140625],["(*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","b","0",0.580810546875],["(fma.f64 (neg.f64 a) a (*.f64 a a))","a","-inf",0.47216796875],["(fma.f64 (neg.f64 a) a (*.f64 a a))","a","inf",0.689208984375],["(fma.f64 (neg.f64 a) a (*.f64 a a))","a","0",0.600830078125]],"time":6.85888671875,"type":"series"},{"count":[[2,51]],"egraph":[[2,5088,29,0.032635209],[1,380,29,0.0071142919999999995],[0,18,45,0.000468125]],"inputs":[["(fma.f64 (neg.f64 a) a (*.f64 a a))","(*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 a a) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 a (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 a (+.f64 a a)))) (cbrt.f64 (exp.f64 (*.f64 a (+.f64 a a)))))) (log.f64 (cbrt.f64 (exp.f64 (*.f64 a (+.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 a (+.f64 a a))))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 a (+.f64 a a))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 a a) (*.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 a (+.f64 a a)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 a (+.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 a (+.f64 a a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 a (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 a (+.f64 a a))) (pow.f64 (cbrt.f64 (*.f64 a (+.f64 a a))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 a (+.f64 a a))) 2) (cbrt.f64 (*.f64 a (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 a a) (hypot.f64 a a))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 a a) 3) (pow.f64 (*.f64 a a) 3)) (+.f64 (pow.f64 a 4) (-.f64 (pow.f64 a 4) (pow.f64 a 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 a 4) (pow.f64 a 4)) (*.f64 a (+.f64 a a)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 a (+.f64 a a)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 a (+.f64 a a)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 a (+.f64 a a))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 a a) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 a (+.f64 a a)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 a (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 a (+.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 a) a) (pow.f64 (exp.f64 a) a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 a a))) (pow.f64 (exp.f64 a) a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (pow.f64 (exp.f64 a) a) (+.f64 1 (expm1.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 a a))) (+.f64 1 (expm1.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 a a))) (pow.f64 (exp.f64 a) a)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 a) a) (+.f64 1 (expm1.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 a a))) (+.f64 1 (expm1.f64 (*.f64 a a)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 a (+.f64 a a)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 a (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 a (+.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (hypot.f64 a a))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (hypot.f64 a a))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (+.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (+.f64 a b) 2)))) (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (+.f64 a b) 2)))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 2) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (+.f64 a b) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 2) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (+.f64 a b) 2))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 2) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (+.f64 a b) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (+.f64 a b) 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (+.f64 a b) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (+.f64 a b) 2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (+.f64 a b) 2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 (+.f64 a b) (sqrt.f64 2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (+.f64 a b) 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 2) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (+.f64 a b) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (+.f64 a b) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (+.f64 a b) 2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (*.f64 2 (pow.f64 (+.f64 a b) 2)) 3) (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 3) (pow.f64 (*.f64 2 (pow.f64 (+.f64 a b) 2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (+.f64 a b) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (+.f64 a b) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (+.f64 a b) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (pow.f64 (+.f64 a b) 2)))) 1))))))"]],"rules":[["egg-rr",18],["egg-rr",33]],"stop":[["node limit",1]],"time":53.89208984375,"type":"rewrite"},{"count":[[99,78]],"egraph":[[3,6979,938,0.02126621],[2,1103,952,0.009975918],[1,274,1348,0.002120084],[0,85,1618,0.000485834]],"inputs":[["0","0","0","0","0","0","0","0","0","0","0","0","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (pow.f64 a 2) (*.f64 -2 (pow.f64 a 2)))))","(+.f64 (*.f64 2 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (pow.f64 a 2) (*.f64 -2 (pow.f64 a 2))))))","(+.f64 (*.f64 2 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (+.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (pow.f64 a 2) (*.f64 -2 (pow.f64 a 2))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(+.f64 (*.f64 2 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (+.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (pow.f64 a 2) (*.f64 -2 (pow.f64 a 2))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(+.f64 (*.f64 2 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 2 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (+.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (pow.f64 a 2) (*.f64 -2 (pow.f64 a 2))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(+.f64 (*.f64 2 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (+.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (pow.f64 a 2) (*.f64 -2 (pow.f64 a 2))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(+.f64 (*.f64 -2 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (+.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (pow.f64 a 2) (*.f64 -2 (pow.f64 a 2))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(+.f64 (*.f64 -2 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (+.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (pow.f64 a 2) (*.f64 -2 (pow.f64 a 2))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(+.f64 (*.f64 2 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (+.f64 (*.f64 2 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (+.f64 (*.f64 2 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (+.f64 (*.f64 2 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (+.f64 (*.f64 2 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(+.f64 (*.f64 -2 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(+.f64 (*.f64 -2 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(+.f64 (*.f64 -2 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(*.f64 1/90 (*.f64 angle (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (PI.f64))))","(+.f64 (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (pow.f64 (PI.f64) 3)))) (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (PI.f64)))))","(+.f64 (*.f64 1/11337408000000 (*.f64 (pow.f64 angle 5) (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (pow.f64 (PI.f64) 3)))) (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (PI.f64))))))","(+.f64 (*.f64 1/11337408000000 (*.f64 (pow.f64 angle 5) (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 -1/15427944806400000000 (*.f64 (pow.f64 angle 7) (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (pow.f64 (PI.f64) 7)))) (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (PI.f64)))))))","(*.f64 2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))"]],"method":["egg-herbie"],"outputs":[["0","0","0","0","0","0","0","0","0","0","0","0","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (pow.f64 a 2) (*.f64 -2 (pow.f64 a 2)))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (neg.f64 (*.f64 a a))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a (neg.f64 a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 a (*.f64 a -2)))","(+.f64 (*.f64 2 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (pow.f64 a 2) (*.f64 -2 (pow.f64 a 2))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (neg.f64 (*.f64 a a))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a (neg.f64 a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 a (*.f64 a -2)))","(+.f64 (*.f64 2 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (+.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (pow.f64 a 2) (*.f64 -2 (pow.f64 a 2))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(fma.f64 2 (*.f64 (*.f64 (*.f64 0 a) b) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 2 (+.f64 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (neg.f64 (*.f64 a a))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))))","(fma.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 a (neg.f64 a)) (*.f64 b b))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 0))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 a (neg.f64 a) (*.f64 b b))))","(+.f64 (*.f64 2 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (+.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (pow.f64 a 2) (*.f64 -2 (pow.f64 a 2))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(fma.f64 2 (*.f64 (*.f64 (*.f64 0 a) b) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 2 (+.f64 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (neg.f64 (*.f64 a a))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))))","(fma.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 a (neg.f64 a)) (*.f64 b b))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 0))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 a (neg.f64 a) (*.f64 b b))))","(*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 b b)))","(+.f64 (*.f64 2 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 b b)))","(+.f64 (*.f64 2 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (+.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (pow.f64 a 2) (*.f64 -2 (pow.f64 a 2))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(fma.f64 2 (*.f64 (*.f64 (*.f64 0 a) b) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 2 (+.f64 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (neg.f64 (*.f64 a a))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))))","(fma.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 a (neg.f64 a)) (*.f64 b b))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 0))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 a (neg.f64 a) (*.f64 b b))))","(+.f64 (*.f64 2 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (+.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (pow.f64 a 2) (*.f64 -2 (pow.f64 a 2))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(fma.f64 2 (*.f64 (*.f64 (*.f64 0 a) b) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 2 (+.f64 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (neg.f64 (*.f64 a a))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))))","(fma.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 a (neg.f64 a)) (*.f64 b b))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 0))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 a (neg.f64 a) (*.f64 b b))))","(*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 b b)))","(+.f64 (*.f64 -2 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 b b)))","(+.f64 (*.f64 -2 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (+.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (pow.f64 a 2) (*.f64 -2 (pow.f64 a 2))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(fma.f64 2 (*.f64 (*.f64 (*.f64 0 a) b) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 2 (+.f64 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (neg.f64 (*.f64 a a))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))))","(fma.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 a (neg.f64 a)) (*.f64 b b))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 0))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 a (neg.f64 a) (*.f64 b b))))","(+.f64 (*.f64 -2 (*.f64 (+.f64 a (*.f64 -1 a)) (*.f64 b (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (+.f64 (*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (pow.f64 a 2) (*.f64 -2 (pow.f64 a 2))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(fma.f64 2 (*.f64 (*.f64 (*.f64 0 a) b) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 2 (+.f64 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (neg.f64 (*.f64 a a))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))))","(fma.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 a (neg.f64 a)) (*.f64 b b))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 0))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 a (neg.f64 a) (*.f64 b b))))","(*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 b b)))","(+.f64 (*.f64 2 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 b b)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (+.f64 (*.f64 2 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(fma.f64 2 (*.f64 (*.f64 (*.f64 0 a) b) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 2 (+.f64 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (neg.f64 (*.f64 a a))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))))","(fma.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 a (neg.f64 a)) (*.f64 b b))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 0))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 a (neg.f64 a) (*.f64 b b))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (+.f64 (*.f64 2 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(fma.f64 2 (*.f64 (*.f64 (*.f64 0 a) b) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 2 (+.f64 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (neg.f64 (*.f64 a a))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))))","(fma.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 a (neg.f64 a)) (*.f64 b b))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 0))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 a (neg.f64 a) (*.f64 b b))))","(*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (neg.f64 (*.f64 a a))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a (neg.f64 a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 a (*.f64 a -2)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (neg.f64 (*.f64 a a))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a (neg.f64 a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 a (*.f64 a -2)))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (+.f64 (*.f64 2 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(fma.f64 2 (*.f64 (*.f64 (*.f64 0 a) b) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 2 (+.f64 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (neg.f64 (*.f64 a a))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))))","(fma.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 a (neg.f64 a)) (*.f64 b b))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 0))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 a (neg.f64 a) (*.f64 b b))))","(+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (+.f64 (*.f64 2 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(fma.f64 2 (*.f64 (*.f64 (*.f64 0 a) b) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 2 (+.f64 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (neg.f64 (*.f64 a a))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))))","(fma.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 a (neg.f64 a)) (*.f64 b b))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 0))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 a (neg.f64 a) (*.f64 b b))))","(*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (neg.f64 (*.f64 a a))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a (neg.f64 a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 a (*.f64 a -2)))","(+.f64 (*.f64 -2 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (neg.f64 (*.f64 a a))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 a (neg.f64 a))))","(*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 a (*.f64 a -2)))","(+.f64 (*.f64 -2 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(fma.f64 2 (*.f64 (*.f64 (*.f64 0 a) b) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 2 (+.f64 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (neg.f64 (*.f64 a a))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))))","(fma.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 a (neg.f64 a)) (*.f64 b b))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 0))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 a (neg.f64 a) (*.f64 b b))))","(+.f64 (*.f64 -2 (*.f64 (+.f64 b (*.f64 -1 b)) (*.f64 a (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))) (+.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (*.f64 2 (*.f64 (pow.f64 b 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))))","(fma.f64 2 (*.f64 (*.f64 (*.f64 0 a) b) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 2 (+.f64 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (neg.f64 (*.f64 a a))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (*.f64 b b)))))","(fma.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (+.f64 (*.f64 a (neg.f64 a)) (*.f64 b b))) (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 0))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 a (neg.f64 a) (*.f64 b b))))","(*.f64 1/90 (*.f64 angle (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (PI.f64))))","(*.f64 (*.f64 1/90 angle) (*.f64 (PI.f64) (fma.f64 -1 (*.f64 a a) (fma.f64 (-.f64 b a) (+.f64 a b) (*.f64 a a)))))","(*.f64 1/90 (*.f64 angle (*.f64 (PI.f64) (-.f64 (fma.f64 a a (*.f64 (-.f64 b a) (+.f64 a b))) (*.f64 a a)))))","(*.f64 angle (*.f64 (fma.f64 (-.f64 b a) (+.f64 a b) 0) (*.f64 (PI.f64) 1/90)))","(*.f64 angle (*.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (*.f64 (PI.f64) 1/90)))","(+.f64 (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (pow.f64 (PI.f64) 3)))) (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (PI.f64)))))","(fma.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (fma.f64 -1 (*.f64 a a) (fma.f64 (-.f64 b a) (+.f64 a b) (*.f64 a a))) (pow.f64 (PI.f64) 3))) (*.f64 (*.f64 1/90 angle) (*.f64 (PI.f64) (fma.f64 -1 (*.f64 a a) (fma.f64 (-.f64 b a) (+.f64 a b) (*.f64 a a))))))","(fma.f64 1/90 (*.f64 angle (*.f64 (PI.f64) (-.f64 (fma.f64 a a (*.f64 (-.f64 b a) (+.f64 a b))) (*.f64 a a)))) (*.f64 -1/17496000 (*.f64 (-.f64 (fma.f64 a a (*.f64 (-.f64 b a) (+.f64 a b))) (*.f64 a a)) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 angle 3)))))","(*.f64 (fma.f64 (-.f64 b a) (+.f64 a b) 0) (+.f64 (*.f64 angle (*.f64 (PI.f64) 1/90)) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -1/17496000 (pow.f64 angle 3)))))","(*.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (+.f64 (*.f64 angle (*.f64 (PI.f64) 1/90)) (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -1/17496000 (pow.f64 angle 3)))))","(+.f64 (*.f64 1/11337408000000 (*.f64 (pow.f64 angle 5) (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (pow.f64 (PI.f64) 3)))) (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (PI.f64))))))","(fma.f64 1/11337408000000 (*.f64 (pow.f64 angle 5) (*.f64 (fma.f64 -1 (*.f64 a a) (fma.f64 (-.f64 b a) (+.f64 a b) (*.f64 a a))) (pow.f64 (PI.f64) 5))) (fma.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (fma.f64 -1 (*.f64 a a) (fma.f64 (-.f64 b a) (+.f64 a b) (*.f64 a a))) (pow.f64 (PI.f64) 3))) (*.f64 (*.f64 1/90 angle) (*.f64 (PI.f64) (fma.f64 -1 (*.f64 a a) (fma.f64 (-.f64 b a) (+.f64 a b) (*.f64 a a)))))))","(fma.f64 1/11337408000000 (*.f64 (-.f64 (fma.f64 a a (*.f64 (-.f64 b a) (+.f64 a b))) (*.f64 a a)) (*.f64 (pow.f64 (PI.f64) 5) (pow.f64 angle 5))) (fma.f64 1/90 (*.f64 angle (*.f64 (PI.f64) (-.f64 (fma.f64 a a (*.f64 (-.f64 b a) (+.f64 a b))) (*.f64 a a)))) (*.f64 -1/17496000 (*.f64 (-.f64 (fma.f64 a a (*.f64 (-.f64 b a) (+.f64 a b))) (*.f64 a a)) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 angle 3))))))","(fma.f64 (*.f64 (fma.f64 (-.f64 b a) (+.f64 a b) 0) (pow.f64 (PI.f64) 3)) (*.f64 -1/17496000 (pow.f64 angle 3)) (*.f64 (fma.f64 (-.f64 b a) (+.f64 a b) 0) (+.f64 (*.f64 (pow.f64 (PI.f64) 5) (*.f64 1/11337408000000 (pow.f64 angle 5))) (*.f64 angle (*.f64 (PI.f64) 1/90)))))","(fma.f64 (*.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 (PI.f64) 3)) (*.f64 -1/17496000 (pow.f64 angle 3)) (*.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (+.f64 (*.f64 (pow.f64 (PI.f64) 5) (*.f64 1/11337408000000 (pow.f64 angle 5))) (*.f64 angle (*.f64 (PI.f64) 1/90)))))","(+.f64 (*.f64 1/11337408000000 (*.f64 (pow.f64 angle 5) (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (pow.f64 (PI.f64) 5)))) (+.f64 (*.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (pow.f64 (PI.f64) 3)))) (+.f64 (*.f64 -1/15427944806400000000 (*.f64 (pow.f64 angle 7) (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (pow.f64 (PI.f64) 7)))) (*.f64 1/90 (*.f64 angle (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (PI.f64)))))))","(fma.f64 1/11337408000000 (*.f64 (pow.f64 angle 5) (*.f64 (fma.f64 -1 (*.f64 a a) (fma.f64 (-.f64 b a) (+.f64 a b) (*.f64 a a))) (pow.f64 (PI.f64) 5))) (fma.f64 -1/17496000 (*.f64 (pow.f64 angle 3) (*.f64 (fma.f64 -1 (*.f64 a a) (fma.f64 (-.f64 b a) (+.f64 a b) (*.f64 a a))) (pow.f64 (PI.f64) 3))) (fma.f64 -1/15427944806400000000 (*.f64 (*.f64 (pow.f64 angle 7) (fma.f64 -1 (*.f64 a a) (fma.f64 (-.f64 b a) (+.f64 a b) (*.f64 a a)))) (pow.f64 (PI.f64) 7)) (*.f64 (*.f64 1/90 angle) (*.f64 (PI.f64) (fma.f64 -1 (*.f64 a a) (fma.f64 (-.f64 b a) (+.f64 a b) (*.f64 a a))))))))","(fma.f64 1/11337408000000 (*.f64 (-.f64 (fma.f64 a a (*.f64 (-.f64 b a) (+.f64 a b))) (*.f64 a a)) (*.f64 (pow.f64 (PI.f64) 5) (pow.f64 angle 5))) (fma.f64 -1/17496000 (*.f64 (-.f64 (fma.f64 a a (*.f64 (-.f64 b a) (+.f64 a b))) (*.f64 a a)) (*.f64 (pow.f64 (PI.f64) 3) (pow.f64 angle 3))) (fma.f64 1/90 (*.f64 angle (*.f64 (PI.f64) (-.f64 (fma.f64 a a (*.f64 (-.f64 b a) (+.f64 a b))) (*.f64 a a)))) (*.f64 -1/15427944806400000000 (*.f64 (-.f64 (fma.f64 a a (*.f64 (-.f64 b a) (+.f64 a b))) (*.f64 a a)) (*.f64 (pow.f64 (PI.f64) 7) (pow.f64 angle 7)))))))","(+.f64 (*.f64 (fma.f64 (-.f64 b a) (+.f64 a b) 0) (+.f64 (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -1/17496000 (pow.f64 angle 3))) (*.f64 (pow.f64 (PI.f64) 7) (*.f64 -1/15427944806400000000 (pow.f64 angle 7))))) (*.f64 (fma.f64 (-.f64 b a) (+.f64 a b) 0) (+.f64 (*.f64 (pow.f64 (PI.f64) 5) (*.f64 1/11337408000000 (pow.f64 angle 5))) (*.f64 angle (*.f64 (PI.f64) 1/90)))))","(+.f64 (*.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (+.f64 (*.f64 (pow.f64 (PI.f64) 3) (*.f64 -1/17496000 (pow.f64 angle 3))) (*.f64 (pow.f64 (PI.f64) 7) (*.f64 -1/15427944806400000000 (pow.f64 angle 7))))) (*.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (+.f64 (*.f64 (pow.f64 (PI.f64) 5) (*.f64 1/11337408000000 (pow.f64 angle 5))) (*.f64 angle (*.f64 (PI.f64) 1/90)))))","(*.f64 2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (fma.f64 -1 (*.f64 a a) (fma.f64 (-.f64 b a) (+.f64 a b) (*.f64 a a)))))","(*.f64 (-.f64 (fma.f64 a a (*.f64 (-.f64 b a) (+.f64 a b))) (*.f64 a a)) (*.f64 2 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 (-.f64 b a) (+.f64 a b) 0)))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b))))","(*.f64 2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (fma.f64 -1 (*.f64 a a) (fma.f64 (-.f64 b a) (+.f64 a b) (*.f64 a a)))))","(*.f64 (-.f64 (fma.f64 a a (*.f64 (-.f64 b a) (+.f64 a b))) (*.f64 a a)) (*.f64 2 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 (-.f64 b a) (+.f64 a b) 0)))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b))))","(*.f64 2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (fma.f64 -1 (*.f64 a a) (fma.f64 (-.f64 b a) (+.f64 a b) (*.f64 a a)))))","(*.f64 (-.f64 (fma.f64 a a (*.f64 (-.f64 b a) (+.f64 a b))) (*.f64 a a)) (*.f64 2 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 (-.f64 b a) (+.f64 a b) 0)))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b))))","(*.f64 2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (fma.f64 -1 (*.f64 a a) (fma.f64 (-.f64 b a) (+.f64 a b) (*.f64 a a)))))","(*.f64 (-.f64 (fma.f64 a a (*.f64 (-.f64 b a) (+.f64 a b))) (*.f64 a a)) (*.f64 2 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 (-.f64 b a) (+.f64 a b) 0)))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b))))","(*.f64 2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (fma.f64 -1 (*.f64 a a) (fma.f64 (-.f64 b a) (+.f64 a b) (*.f64 a a)))))","(*.f64 (-.f64 (fma.f64 a a (*.f64 (-.f64 b a) (+.f64 a b))) (*.f64 a a)) (*.f64 2 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 (-.f64 b a) (+.f64 a b) 0)))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b))))","(*.f64 2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (fma.f64 -1 (*.f64 a a) (fma.f64 (-.f64 b a) (+.f64 a b) (*.f64 a a)))))","(*.f64 (-.f64 (fma.f64 a a (*.f64 (-.f64 b a) (+.f64 a b))) (*.f64 a a)) (*.f64 2 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 (-.f64 b a) (+.f64 a b) 0)))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b))))","(*.f64 2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (fma.f64 -1 (*.f64 a a) (fma.f64 (-.f64 b a) (+.f64 a b) (*.f64 a a)))))","(*.f64 (-.f64 (fma.f64 a a (*.f64 (-.f64 b a) (+.f64 a b))) (*.f64 a a)) (*.f64 2 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 (-.f64 b a) (+.f64 a b) 0)))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b))))","(*.f64 2 (*.f64 (+.f64 (*.f64 -1 (pow.f64 a 2)) (+.f64 (*.f64 (-.f64 b a) (+.f64 a b)) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) (fma.f64 -1 (*.f64 a a) (fma.f64 (-.f64 b a) (+.f64 a b) (*.f64 a a)))))","(*.f64 (-.f64 (fma.f64 a a (*.f64 (-.f64 b a) (+.f64 a b))) (*.f64 a a)) (*.f64 2 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (fma.f64 (-.f64 b a) (+.f64 a b) 0)))","(*.f64 2 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 (-.f64 b a) (+.f64 a b))))"]],"stop":[["node limit",1]],"time":44.951904296875,"type":"simplify"},{"compiler":[[4935,2590]],"time":42.964111328125,"type":"eval"},{"alts":[["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (sin.f64 1))))","fresh",37.35305047086046],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (log.f64 (+.f64 1 (expm1.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",52.630241016801136],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))))) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",52.74695157553658],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","fresh",34.74790677306504],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","next",34.527711819808964],["(*.f64 (*.f64 (*.f64 2 (*.f64 a (neg.f64 a))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",46.25173791288348],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))))","fresh",34.82377213404434],["(*.f64 (sqrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 2)) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",49.04581376508501],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sqrt.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) 2))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",50.70767827201438],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 a (+.f64 a a)))) (cbrt.f64 (exp.f64 (*.f64 a (+.f64 a a)))))) (log.f64 (cbrt.f64 (exp.f64 (*.f64 a (+.f64 a a)))))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",44.90797674909549],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (sin.f64 1))))","fresh",37.155321634271],["(*.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",46.184226563938275],["(*.f64 (pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 3) 1/3) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",51.33269358645982],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))","fresh",34.67096364838268],["(*.f64 (*.f64 (*.f64 2 (exp.f64 (log.f64 (-.f64 (*.f64 b b) (*.f64 a a))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",47.293012615911714],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (pow.f64 (hypot.f64 a a) 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",43.46624540213231],["(*.f64 (*.f64 angle (*.f64 (PI.f64) (*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 1/90))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",37.10255157509689],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (exp.f64 (*.f64 2 (log.f64 (hypot.f64 a a)))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",43.46624540213228],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","fresh",34.955090049896015],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 1)","fresh",35.4446551338361],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 1)","fresh",35.00123138829156],["(*.f64 (*.f64 (*.f64 (+.f64 a b) (*.f64 (-.f64 b a) (PI.f64))) (*.f64 angle 1/90)) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",37.558284894578506],["(*.f64 (*.f64 (*.f64 2 (exp.f64 (log.f64 (-.f64 (*.f64 b b) (*.f64 a a))))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",47.39423959965093],["(*.f64 (*.f64 (*.f64 2 (sqrt.f64 (pow.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",50.448884921663286],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (/.f64 (+.f64 (pow.f64 (*.f64 a a) 3) (pow.f64 (*.f64 a a) 3)) (+.f64 (pow.f64 a 4) (-.f64 (pow.f64 a 4) (pow.f64 a 4)))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",59.532882146930426],["(*.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",37.551137861374905],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (+.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",52.66026725532426],["(*.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",34.612932250798856],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))))","fresh",34.61942684890579],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))","fresh",34.688871418276484],["(*.f64 (pow.f64 (*.f64 (sqrt.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 (+.f64 a b) (sqrt.f64 2))) 2) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",51.585419943831454],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3))","fresh",34.68334280777309],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (sin.f64 1)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",55.50095623869799],["(*.f64 (-.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))))) 1) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",51.5187758483029],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (pow.f64 (sqrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2))","fresh",37.38993206370299],["(*.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (*.f64 b b))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",44.03252825103348],["(*.f64 (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",44.029112946624345]],"compiler":[[50,37],[30,25],[55,40],[26,20],[29,24],[23,18],[26,21],[29,22],[29,24],[51,27],[43,36],[22,18],[30,23],[48,39],[28,21],[31,22],[23,16],[33,24],[29,24],[21,18],[21,18],[23,16],[28,21],[29,22],[49,34],[23,18],[39,32],[26,19],[33,22],[37,26],[26,21],[29,24],[50,37],[30,23],[29,24],[22,17],[22,17],[50,37],[30,25],[55,40],[26,20],[29,24],[23,18],[26,21],[29,22],[29,24],[51,27],[43,36],[22,18],[30,23],[48,39],[28,21],[31,22],[23,16],[33,24],[29,24],[21,18],[21,18],[23,16],[28,21],[29,22],[49,34],[23,18],[39,32],[26,19],[33,22],[37,26],[26,21],[29,24],[50,37],[30,23],[29,24],[22,17],[22,17]],"count":[[172,37]],"kept":[{"done":[0,0],"fresh":[32,26],"new":[139,11],"picked":[1,0]}],"min-error":[28.70837689154691],"time":56.81982421875,"type":"prune"},{"compiler":[[118,80]],"locations":[["(-.f64 (pow.f64 b 2) (pow.f64 a 2))",0.6992146216604117,false],["(*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))",10.48404037921756,false],["(cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))",24.597802055959647,true],["(sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))",24.732930173207155,false]],"time":32.59716796875,"type":"localize"},{"count":[[1,12]],"series":[["(cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))","angle","-inf",0.156005859375],["(cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))","angle","inf",0.1630859375],["(cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))","angle","0",0.2509765625]],"time":0.619873046875,"type":"series"},{"count":[[1,16]],"egraph":[[2,1623,10,0.01776525],[1,140,10,0.0023435],[0,7,10,0.000218542]],"inputs":[["(cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2) (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) (sqrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))))"]],"rules":[["egg-rr",16]],"stop":[["node limit",1]],"time":35.422119140625,"type":"rewrite"},{"count":[[28,25]],"egraph":[[19,7918,150,0.16326916800000002],[18,7048,150,0.148408001],[17,6265,150,0.12842983400000002],[16,6151,150,0.113852584],[15,6009,150,0.103551209],[14,5845,150,0.093848917],[13,5625,150,0.083302667],[12,5361,150,0.073167626],[11,4730,150,0.064193501],[10,4210,150,0.052306833999999996],[9,3782,150,0.042556917],[8,3462,150,0.03437475],[7,3218,150,0.026992375000000002],[6,2993,150,0.020634708],[5,2682,159,0.015703167],[4,2173,162,0.01080825],[3,831,168,0.005115583],[2,200,168,0.001631708],[1,74,172,0.000536833],[0,30,174,0.000161792]],"inputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))","(+.f64 1 (*.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2))))","(fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) 1)","(fma.f64 (pow.f64 (PI.f64) 2) (*.f64 -1/64800 (*.f64 angle angle)) 1)","(fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) 1)","(fma.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2) 1)","(+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2)))))","(+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)))))","(+.f64 1 (fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)))))","(fma.f64 (pow.f64 angle 4) (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (fma.f64 (pow.f64 (PI.f64) 2) (*.f64 -1/64800 (*.f64 angle angle)) 1))","(fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1))","(fma.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2)) (fma.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4) 1))","(fma.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2) (fma.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4) 1))","(+.f64 (*.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6))) (+.f64 1 (+.f64 (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))) (*.f64 -1/64800 (*.f64 (pow.f64 angle 2) (pow.f64 (PI.f64) 2))))))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (+.f64 1 (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) (*.f64 -1/64800 (*.f64 (*.f64 angle angle) (pow.f64 (PI.f64) 2))))))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (+.f64 1 (fma.f64 -1/64800 (*.f64 angle (*.f64 angle (pow.f64 (PI.f64) 2))) (*.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4))))))","(fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (fma.f64 (pow.f64 angle 4) (*.f64 1/25194240000 (pow.f64 (PI.f64) 4)) (fma.f64 (pow.f64 (PI.f64) 2) (*.f64 -1/64800 (*.f64 angle angle)) 1)))","(fma.f64 (*.f64 angle angle) (*.f64 -1/64800 (pow.f64 (PI.f64) 2)) (fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (fma.f64 1/25194240000 (*.f64 (pow.f64 angle 4) (pow.f64 (PI.f64) 4)) 1)))","(fma.f64 angle (*.f64 (pow.f64 (PI.f64) 2) (*.f64 -1/64800 angle)) (fma.f64 -1/24488801280000000 (*.f64 (pow.f64 angle 6) (pow.f64 (PI.f64) 6)) (fma.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4) 1)))","(fma.f64 angle (*.f64 (pow.f64 (PI.f64) 2) (*.f64 -1/64800 angle)) (fma.f64 -1/24488801280000000 (pow.f64 (*.f64 angle (PI.f64)) 6) (fma.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4) 1)))","(fma.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2) (fma.f64 -1/24488801280000000 (pow.f64 (*.f64 angle (PI.f64)) 6) (fma.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4) 1)))","(fma.f64 -1/64800 (pow.f64 (*.f64 angle (PI.f64)) 2) (fma.f64 1/25194240000 (pow.f64 (*.f64 angle (PI.f64)) 4) (fma.f64 -1/24488801280000000 (pow.f64 (*.f64 angle (PI.f64)) 6) 1)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))","(cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))","(cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180)))"]],"stop":[["node limit",1]],"time":183.739990234375,"type":"simplify"},{"compiler":[[8438,4713]],"time":82.701904296875,"type":"eval"},{"alts":[["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (-.f64 (+.f64 1 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 1) 2)))","fresh",34.5260905795774],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (sin.f64 1))))","fresh",37.35305047086046],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (log.f64 (+.f64 1 (expm1.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",52.630241016801136],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) 2) (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","fresh",34.62862326980846],["(*.f64 (exp.f64 (log.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","fresh",48.19049097594188],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))))) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",52.74695157553658],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","fresh",34.519556707259966],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","fresh",34.74790677306504],["(*.f64 (*.f64 (*.f64 2 (*.f64 a (neg.f64 a))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",46.25173791288348],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))))","fresh",34.82377213404434],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))","fresh",34.527871194039506],["(*.f64 (sqrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 2)) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",49.04581376508501],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 a (+.f64 a a)))) (cbrt.f64 (exp.f64 (*.f64 a (+.f64 a a)))))) (log.f64 (cbrt.f64 (exp.f64 (*.f64 a (+.f64 a a)))))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",44.90797674909549],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (sin.f64 1))))","fresh",37.155321634271],["(*.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",46.184226563938275],["(*.f64 (pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 3) 1/3) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",51.33269358645982],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (log.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 2)))","fresh",34.519899319808964],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))","fresh",34.67096364838268],["(*.f64 (*.f64 (*.f64 2 (exp.f64 (log.f64 (-.f64 (*.f64 b b) (*.f64 a a))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",47.293012615911714],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (pow.f64 (hypot.f64 a a) 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",43.46624540213231],["(*.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))) 3) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","fresh",34.791654709774754],["(*.f64 (*.f64 (*.f64 2 (+.f64 (fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 a (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a))))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","fresh",34.581741910040265],["(*.f64 (-.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))))) 1) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",51.5187758483029],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (exp.f64 (*.f64 2 (log.f64 (hypot.f64 a a)))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",43.46624540213228],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","fresh",34.955090049896015],["(*.f64 (sqrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 2)) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","fresh",48.716157318038896],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sqrt.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) 2))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","fresh",50.29801708108086],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (pow.f64 (sqrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2))","fresh",37.38993206370299],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 1)","fresh",35.4446551338361],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 1)","fresh",35.00123138829156],["(*.f64 (*.f64 (*.f64 2 (exp.f64 (log.f64 (-.f64 (*.f64 b b) (*.f64 a a))))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",47.39423959965093],["(*.f64 (*.f64 (*.f64 2 (sqrt.f64 (pow.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",50.448884921663286],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (/.f64 (+.f64 (pow.f64 (*.f64 a a) 3) (pow.f64 (*.f64 a a) 3)) (+.f64 (pow.f64 a 4) (-.f64 (pow.f64 a 4) (pow.f64 a 4)))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",59.532882146930426],["(*.f64 (*.f64 (*.f64 2 (pow.f64 (pow.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 3) 1/3)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","fresh",52.87641059586471],["(*.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",37.551137861374905],["(*.f64 (*.f64 (*.f64 2 (expm1.f64 (log1p.f64 (-.f64 (*.f64 b b) (*.f64 a a))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","fresh",41.488874504190186],["(*.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (*.f64 b b))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",44.03252825103348],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))))) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","fresh",52.914637087410775],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (+.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",52.66026725532426],["(*.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",34.612932250798856],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))))","fresh",34.61942684890579],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (sin.f64 1)))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","fresh",55.447499124015195],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))","fresh",34.688871418276484],["(*.f64 (pow.f64 (*.f64 (sqrt.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 (+.f64 a b) (sqrt.f64 2))) 2) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",51.585419943831454],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3))","fresh",34.68334280777309],["(*.f64 (*.f64 (*.f64 2 (+.f64 (fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 a (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a))))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","fresh",34.55373439050338],["(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (sin.f64 1)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",55.50095623869799],["(*.f64 (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","fresh",44.029112946624345]],"compiler":[[33,28],[50,37],[30,25],[48,28],[31,24],[55,40],[29,24],[26,20],[23,18],[26,21],[29,23],[29,22],[51,27],[43,36],[22,18],[30,23],[31,26],[48,39],[28,21],[31,22],[32,25],[61,33],[30,23],[33,24],[29,24],[32,25],[32,27],[29,24],[21,18],[21,18],[28,21],[29,22],[49,34],[33,26],[23,18],[31,24],[22,17],[51,42],[39,32],[26,19],[33,22],[46,39],[37,26],[26,21],[29,24],[61,33],[50,37],[22,17]],"count":[[266,48]],"kept":[{"done":[0,0],"fresh":[36,33],"new":[229,15],"picked":[1,0]}],"min-error":[28.680614311041836],"time":72.97802734375,"type":"prune"},{"accuracy":[32.05371319956222],"baseline":[34.51799519099626],"branch":[["a",34.517995190996224,1],["b",33.03981145076469,2],["angle",34.51799519099625,1],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))",32.05371319956222,2],["(*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2)))",32.05371319956222,2],["(*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2)))",32.05371319956222,2],["(-.f64 (pow.f64 b 2) (pow.f64 a 2))",32.05371319956222,2],["(-.f64 (pow.f64 b 2) (pow.f64 a 2))",32.05371319956222,2],["(pow.f64 b 2)",32.053713199562225,2],["(pow.f64 b 2)",32.053713199562225,2],["(pow.f64 a 2)",34.51799519099624,1],["(*.f64 (PI.f64) (/.f64 angle 180))",34.51799519099625,1],["(*.f64 (PI.f64) (/.f64 angle 180))",34.51799519099625,1],["(/.f64 angle 180)",34.51799519099625,1],["(/.f64 angle 180)",34.51799519099625,1]],"compiler":[[4,3],[4,3],[4,3],[26,21],[12,10],[12,10],[10,8],[10,8],[6,5],[6,5],[6,5],[8,7],[8,7],[6,5],[6,5],[2450,1576]],"count":[[79,2]],"inputs":[["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (-.f64 (+.f64 1 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 1) 2)))","(*.f64 (*.f64 (*.f64 2 (fma.f64 (pow.f64 (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) 2) (cbrt.f64 (-.f64 (*.f64 b b) (*.f64 a a))) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","(*.f64 (exp.f64 (log.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 angle (*.f64 (PI.f64) 1/180))) 2)))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))) 2)))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (log.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 2)))","(*.f64 (pow.f64 (cbrt.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a))))) 3) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","(*.f64 (*.f64 (*.f64 2 (+.f64 (fma.f64 (*.f64 b (pow.f64 (cbrt.f64 b) 2)) (cbrt.f64 b) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 a (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a))))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","(*.f64 (sqrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 2)) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sqrt.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) 2))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","(*.f64 (*.f64 (*.f64 2 (pow.f64 (pow.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 3) 1/3)) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","(*.f64 (*.f64 (*.f64 2 (expm1.f64 (log1p.f64 (-.f64 (*.f64 b b) (*.f64 a a))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))))) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (sin.f64 1)))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","(*.f64 (*.f64 (*.f64 2 (+.f64 (fma.f64 (pow.f64 (cbrt.f64 b) 2) (*.f64 (cbrt.f64 b) b) (neg.f64 (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a)))))) (fma.f64 (neg.f64 (cbrt.f64 a)) (*.f64 a (cbrt.f64 (*.f64 a a))) (*.f64 (cbrt.f64 a) (*.f64 a (cbrt.f64 (*.f64 a a))))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (sin.f64 1))))","(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))))) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 a (+.f64 a a)))) (cbrt.f64 (exp.f64 (*.f64 a (+.f64 a a)))))) (log.f64 (cbrt.f64 (exp.f64 (*.f64 a (+.f64 a a)))))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (pow.f64 (hypot.f64 a a) 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (exp.f64 (*.f64 2 (log.f64 (hypot.f64 a a)))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (/.f64 (+.f64 (pow.f64 (*.f64 a a) 3) (pow.f64 (*.f64 a a) 3)) (+.f64 (pow.f64 a 4) (-.f64 (pow.f64 a 4) (pow.f64 a 4)))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))))","(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 (+.f64 a b) (sqrt.f64 2))) 2) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (sin.f64 1)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","(*.f64 (sqrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 2)) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sqrt.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) 2))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (sin.f64 1))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))","(*.f64 (pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 3) 1/3) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (sqrt.f64 (pow.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (exp.f64 (log.f64 (-.f64 (*.f64 b b) (*.f64 a a))))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 angle (*.f64 (PI.f64) (*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 1/90))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) 1)","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (sin.f64 1)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 a 4)) (/.f64 1 (fma.f64 b b (*.f64 a a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a a))) (cbrt.f64 (pow.f64 a 4)) (*.f64 a a)))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (+.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))) (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))))) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle)))))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (log.f64 (+.f64 1 (expm1.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (-.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 1/180 angle))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))))) 1) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (exp.f64 (log.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (pow.f64 (cbrt.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3)) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 -2 (*.f64 (pow.f64 a 2) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (*.f64 a (neg.f64 a))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 1/180 (*.f64 angle (PI.f64)))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (+.f64 (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) (log.f64 (sqrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))","(*.f64 (*.f64 (*.f64 2 (fma.f64 (-.f64 (pow.f64 b 4) (pow.f64 a 4)) (/.f64 1 (fma.f64 b b (*.f64 a a))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 a a))) (cbrt.f64 (pow.f64 a 4)) (*.f64 a a)))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (log.f64 (cbrt.f64 (exp.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))))","(*.f64 (sqrt.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 2)) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (sqrt.f64 (pow.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2)))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (-.f64 (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cos.f64 1)) (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (sin.f64 1)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (pow.f64 (sqrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 2))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (-.f64 (exp.f64 (log1p.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) 1)) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) 1)","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (pow.f64 (cbrt.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))) 3))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (+.f64 (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))) (log.f64 (sqrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 (+.f64 a b) (*.f64 (-.f64 b a) (PI.f64))) (*.f64 angle 1/90)) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (exp.f64 (log.f64 (-.f64 (*.f64 b b) (*.f64 a a))))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (sqrt.f64 (pow.f64 (-.f64 (*.f64 b b) (*.f64 a a)) 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (pow.f64 (pow.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) 3) 1/3) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (+.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))))) (log.f64 (cbrt.f64 (exp.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 1/90 (*.f64 angle (*.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) (PI.f64)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (*.f64 b b))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (fma.f64 (+.f64 b a) (-.f64 b a) (fma.f64 (neg.f64 a) a (*.f64 a a)))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (-.f64 (exp.f64 (log1p.f64 (*.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))))) 1) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (*.f64 b b)) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sqrt.f64 (pow.f64 (sin.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))) 2))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (sin.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))) (*.f64 2 (-.f64 (*.f64 b b) (*.f64 a a)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 angle (*.f64 1/180 (PI.f64)))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (+.f64 (*.f64 (cos.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (cos.f64 1)) (*.f64 (sin.f64 (exp.f64 (log1p.f64 (*.f64 (PI.f64) (*.f64 angle 1/180))))) (sin.f64 1))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (log.f64 (+.f64 1 (expm1.f64 (cos.f64 (*.f64 (PI.f64) (*.f64 angle 1/180)))))))","(*.f64 2 (*.f64 (-.f64 (*.f64 b b) (*.f64 a a)) (*.f64 (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))))","(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))"]],"link":["."],"name":["ab-angle->ABCF B"],"oracle":[64.0],"outputs":[["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))","(*.f64 (pow.f64 (*.f64 (sqrt.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 (+.f64 a b) (sqrt.f64 2))) 2) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))"]],"time":481.4609375,"times":[["a",22.9580078125],["b",41.888916015625],["angle",23.02587890625],["(*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))))",32.6279296875],["(*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2)))",35.06201171875],["(*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2)))",34.45703125],["(-.f64 (pow.f64 b 2) (pow.f64 a 2))",38.7548828125],["(-.f64 (pow.f64 b 2) (pow.f64 a 2))",36.724853515625],["(pow.f64 b 2)",28.859130859375],["(pow.f64 b 2)",27.22509765625],["(pow.f64 a 2)",14.69384765625],["(*.f64 (PI.f64) (/.f64 angle 180))",26.078125],["(*.f64 (PI.f64) (/.f64 angle 180))",23.964111328125],["(/.f64 angle 180)",24.60302734375],["(/.f64 angle 180)",22.407958984375]],"type":"regimes"},{"bstep":[[3.229421729033205e+303,{"type":"real","value":"+inf"},0.0810546875]],"compiler":[[22,18],[10,8]],"method":["left-value"],"time":0.908203125,"type":"bsearch"},{"compiler":[[59,45]],"egraph":[[4,51,90,0.000254708],[3,50,90,0.000204208],[2,48,90,0.000153333],[1,43,90,0.00010254099999999999],[0,31,90,5.0833e-5]],"inputs":[["(if (<=.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) 4999999999999999696267762527682310930020143610058662476595385785661602281506616951421654628720253874218428059028081086289358596871318015265117899420433441387493650720841005520533855126581220452921859901274275799538319841275410916329774556134803974902673017459331286203203802190422979931037452174069071872) (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 (+.f64 a b) (sqrt.f64 2))) 2) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) 4999999999999999696267762527682310930020143610058662476595385785661602281506616951421654628720253874218428059028081086289358596871318015265117899420433441387493650720841005520533855126581220452921859901274275799538319841275410916329774556134803974902673017459331286203203802190422979931037452174069071872) (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (*.f64 (pow.f64 (*.f64 (sqrt.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 (+.f64 a b) (sqrt.f64 2))) 2) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))))","(if (<=.f64 (-.f64 (pow.f64 b 2) (pow.f64 a 2)) 4999999999999999696267762527682310930020143610058662476595385785661602281506616951421654628720253874218428059028081086289358596871318015265117899420433441387493650720841005520533855126581220452921859901274275799538319841275410916329774556134803974902673017459331286203203802190422979931037452174069071872) (*.f64 (*.f64 (*.f64 2 (-.f64 (pow.f64 b 2) (pow.f64 a 2))) (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180)))) (*.f64 (cos.f64 (*.f64 (PI.f64) (/.f64 angle 180))) (pow.f64 (*.f64 (sqrt.f64 (sin.f64 (*.f64 1/180 (*.f64 angle (PI.f64))))) (*.f64 (+.f64 b a) (sqrt.f64 2))) 2)))"]],"stop":[["fuel",1],["saturated",1]],"time":10.327880859375,"type":"simplify"},{"time":0.006103515625,"type":"soundness"},{"compiler":[[59,45]],"remove-preprocessing":[[]],"time":22.787841796875,"type":"end"}]