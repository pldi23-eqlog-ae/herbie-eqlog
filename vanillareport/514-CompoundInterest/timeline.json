[{"compiler":[[18,12]],"method":["search"],"sampling":[[12,0.40829239098820835,0.406828977400437,0.18487863161135465],[11,0.386341187171638,0.4409752944484353,0.17268351837992668],[10,0.3336582980118692,0.542438636533916,0.12390306545421481],[9,0.2926827175542712,0.5970727438107133,0.11024453863501549],[8,0.19512181170284748,0.7648775018751621,0.040000686421990395],[7,0.12487795948982239,0.8429262265563011,0.032195813953876495],[6,0.0,0.9990236759185791,0.0009763240814208984],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":146.910888671875,"type":"analyze"},{"outcomes":[["body",512,"invalid",46.543701171875,225],["body",1024,"invalid",70.420166015625,176],["body",512,"valid",208.621337890625,1200],["body",256,"invalid",78.787841796875,1153],["body",2048,"invalid",16.382080078125,18],["body",4096,"valid",59.876953125,34],["body",1024,"valid",1040.539306640625,2715],["body",2048,"valid",1902.977294921875,1869],["body",256,"valid",170.21435546875,2438]],"time":3604.244140625,"type":"sample"},{"compiler":[[17,11]],"egraph":[[0,2,2,2.5e-6],[5,5890,40,0.021544041],[4,1057,40,0.009656165999999999],[3,329,40,0.002209624],[2,123,40,0.0007470409999999999],[1,48,44,0.000281708],[0,17,44,9.475e-5]],"inputs":[["0","1"],["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 n i)) i) 1) (/.f64 n i)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","(*.f64 100 (/.f64 (+.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) -1) (/.f64 i n)))","(/.f64 (fma.f64 100 (pow.f64 (+.f64 1 (/.f64 i n)) n) -100) (/.f64 i n))","(*.f64 n (/.f64 (fma.f64 100 (pow.f64 (+.f64 1 (/.f64 i n)) n) -100) i))","(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 n i)) i) 1) (/.f64 n i)))","(*.f64 100 (*.f64 (/.f64 (+.f64 (pow.f64 (+.f64 1 (/.f64 n i)) i) -1) n) i))","(*.f64 100 (/.f64 (+.f64 (pow.f64 (+.f64 1 (/.f64 n i)) i) -1) (/.f64 n i)))","(/.f64 (fma.f64 100 (pow.f64 (+.f64 1 (/.f64 n i)) i) -100) (/.f64 n i))","(*.f64 (/.f64 i n) (fma.f64 100 (pow.f64 (+.f64 1 (/.f64 n i)) i) -100))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":46.285888671875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[6,7267,20,0.0261365],[5,2393,20,0.014877458],[4,531,20,0.004388708],[3,172,20,0.00123175],[2,68,20,0.000448333],[1,29,22,0.0001915],[0,11,22,7.15e-5]],"inputs":[["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","(/.f64 (*.f64 100 (+.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) -1)) (/.f64 i n))","(*.f64 100 (/.f64 (+.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) -1) (/.f64 i n)))","(/.f64 (fma.f64 100 (pow.f64 (+.f64 1 (/.f64 i n)) n) -100) (/.f64 i n))","(*.f64 (/.f64 n i) (fma.f64 100 (pow.f64 (+.f64 1 (/.f64 i n)) n) -100))"]],"stop":[["node limit",1]],"time":37.798095703125,"type":"simplify"},{"compiler":[[31,19]],"time":0.48486328125,"type":"eval"},{"alts":[["(*.f64 (/.f64 n i) (fma.f64 100 (pow.f64 (+.f64 1 (/.f64 i n)) n) -100))","fresh",49.63894533781316],["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","next",49.622052959550196]],"compiler":[[16,11],[17,11],[16,11],[17,11]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[49.602521709550196],"time":1.4970703125,"type":"prune"},{"compiler":[[58,29]],"locations":[["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))",0.0390625,true],["(-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1)",1.450017678136082,true],["(pow.f64 (+.f64 1 (/.f64 i n)) n)",5.328075444795735,true],["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))",10.628847080745008,true]],"time":11.89794921875,"type":"localize"},{"count":[[4,96]],"series":[["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","n","-inf",0.328125],["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","n","inf",0.39794921875],["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","n","0",0.597900390625],["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","i","-inf",0.5849609375],["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","i","inf",0.97607421875],["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))","i","0",0.358154296875],["(-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1)","n","-inf",0.281005859375],["(-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1)","n","inf",0.302978515625],["(-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1)","n","0",0.35791015625],["(-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1)","i","-inf",0.35693359375],["(-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1)","i","inf",0.345947265625],["(-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1)","i","0",0.238037109375],["(pow.f64 (+.f64 1 (/.f64 i n)) n)","n","-inf",0.2900390625],["(pow.f64 (+.f64 1 (/.f64 i n)) n)","n","inf",0.302001953125],["(pow.f64 (+.f64 1 (/.f64 i n)) n)","n","0",0.280029296875],["(pow.f64 (+.f64 1 (/.f64 i n)) n)","i","-inf",0.472900390625],["(pow.f64 (+.f64 1 (/.f64 i n)) n)","i","inf",0.428955078125],["(pow.f64 (+.f64 1 (/.f64 i n)) n)","i","0",0.216064453125],["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))","n","-inf",0.82421875],["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))","n","inf",1.2548828125],["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))","n","0",2.01318359375],["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))","i","-inf",2.05810546875],["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))","i","inf",1.618896484375],["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))","i","0",1.16015625]],"time":16.658935546875,"type":"series"},{"count":[[4,345]],"egraph":[[2,3769,58,0.029371833],[1,257,58,0.005101458],[0,11,64,0.000347625]],"inputs":[["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))","(pow.f64 (+.f64 1 (/.f64 i n)) n)","(-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1)","(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i)) (fma.f64 (neg.f64 (/.f64 1 i)) n (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i)) (fma.f64 (neg.f64 (sqrt.f64 (/.f64 n i))) (sqrt.f64 (/.f64 n i)) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i)) (fma.f64 (neg.f64 n) (/.f64 1 i) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i)) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) (sqrt.f64 i))) (/.f64 (sqrt.f64 n) (sqrt.f64 i)) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)) (neg.f64 (*.f64 (/.f64 n i) 1))) (fma.f64 (neg.f64 (/.f64 n i)) 1 (*.f64 (/.f64 n i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i) (neg.f64 (*.f64 (/.f64 n i) 1))) (fma.f64 (neg.f64 (/.f64 n i)) 1 (*.f64 (/.f64 n i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (/.f64 n i) 1))) (fma.f64 (neg.f64 (/.f64 n i)) 1 (*.f64 (/.f64 n i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (/.f64 n i) 1))) (fma.f64 (neg.f64 (/.f64 n i)) 1 (*.f64 (/.f64 n i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 i) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 n i) 1))) (fma.f64 (neg.f64 (/.f64 n i)) 1 (*.f64 (/.f64 n i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n i) 1))) (fma.f64 (neg.f64 (/.f64 n i)) 1 (*.f64 (/.f64 n i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (/.f64 i n))) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n i) 1))) (fma.f64 (neg.f64 (/.f64 n i)) 1 (*.f64 (/.f64 n i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) 1) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (/.f64 n i) 1))) (fma.f64 (neg.f64 (/.f64 n i)) 1 (*.f64 (/.f64 n i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 1) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (/.f64 n i) 1))) (fma.f64 (neg.f64 (/.f64 n i)) 1 (*.f64 (/.f64 n i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) i) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 n i) 1))) (fma.f64 (neg.f64 (/.f64 n i)) 1 (*.f64 (/.f64 n i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) i) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 n i) 1))) (fma.f64 (neg.f64 (/.f64 n i)) 1 (*.f64 (/.f64 n i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n i) 1))) (fma.f64 (neg.f64 (/.f64 n i)) 1 (*.f64 (/.f64 n i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n i) 1))) (fma.f64 (neg.f64 (/.f64 n i)) 1 (*.f64 (/.f64 n i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (sqrt.f64 (/.f64 i n))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n i) 1))) (fma.f64 (neg.f64 (/.f64 n i)) 1 (*.f64 (/.f64 n i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n i) 1))) (fma.f64 (neg.f64 (/.f64 n i)) 1 (*.f64 (/.f64 n i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) i) n (neg.f64 (*.f64 (/.f64 n i) 1))) (fma.f64 (neg.f64 (/.f64 n i)) 1 (*.f64 (/.f64 n i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 n i) (neg.f64 (*.f64 (/.f64 n i) 1))) (fma.f64 (neg.f64 (/.f64 n i)) 1 (*.f64 (/.f64 n i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (neg.f64 i)) (neg.f64 n) (neg.f64 (*.f64 (/.f64 n i) 1))) (fma.f64 (neg.f64 (/.f64 n i)) 1 (*.f64 (/.f64 n i) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i) (neg.f64 (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 i) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 1 n)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (/.f64 i n))) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) 1) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 1) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) i) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) i) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (sqrt.f64 (/.f64 i n))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) i) n (neg.f64 (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 n i) (neg.f64 (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (neg.f64 i)) (neg.f64 n) (neg.f64 (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i)))))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))) (*.f64 (cbrt.f64 (/.f64 n i)) (*.f64 (cbrt.f64 (/.f64 n i)) (cbrt.f64 (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 i) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (/.f64 i n))) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) 1) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 1) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) i) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) i) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (sqrt.f64 (/.f64 i n))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) i) n (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 n i) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (neg.f64 i)) (neg.f64 n) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)) (neg.f64 (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 n (sqrt.f64 i))) (/.f64 1 (sqrt.f64 i)) (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i) (neg.f64 (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 n (sqrt.f64 i))) (/.f64 1 (sqrt.f64 i)) (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 n (sqrt.f64 i))) (/.f64 1 (sqrt.f64 i)) (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 n (sqrt.f64 i))) (/.f64 1 (sqrt.f64 i)) (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 i) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 n (sqrt.f64 i))) (/.f64 1 (sqrt.f64 i)) (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 n (sqrt.f64 i))) (/.f64 1 (sqrt.f64 i)) (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (/.f64 i n))) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 n (sqrt.f64 i))) (/.f64 1 (sqrt.f64 i)) (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) 1) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 n (sqrt.f64 i))) (/.f64 1 (sqrt.f64 i)) (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 1) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 n (sqrt.f64 i))) (/.f64 1 (sqrt.f64 i)) (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) i) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 n (sqrt.f64 i))) (/.f64 1 (sqrt.f64 i)) (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) i) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 n (sqrt.f64 i))) (/.f64 1 (sqrt.f64 i)) (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 n (sqrt.f64 i))) (/.f64 1 (sqrt.f64 i)) (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 n (sqrt.f64 i))) (/.f64 1 (sqrt.f64 i)) (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (sqrt.f64 (/.f64 i n))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 n (sqrt.f64 i))) (/.f64 1 (sqrt.f64 i)) (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 n (sqrt.f64 i))) (/.f64 1 (sqrt.f64 i)) (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) i) n (neg.f64 (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 n (sqrt.f64 i))) (/.f64 1 (sqrt.f64 i)) (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 n i) (neg.f64 (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 n (sqrt.f64 i))) (/.f64 1 (sqrt.f64 i)) (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (neg.f64 i)) (neg.f64 n) (neg.f64 (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 n (sqrt.f64 i))) (/.f64 1 (sqrt.f64 i)) (*.f64 (/.f64 n (sqrt.f64 i)) (/.f64 1 (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1) (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1) (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1) (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1) (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 i) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1) (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1) (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (/.f64 i n))) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1) (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) 1) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1) (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 1) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1) (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) i) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1) (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) i) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1) (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1) (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1) (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (sqrt.f64 (/.f64 i n))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1) (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1) (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) i) n (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1) (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 n i) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1) (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (neg.f64 i)) (neg.f64 n) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1)))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1) (*.f64 (/.f64 (cbrt.f64 n) i) (/.f64 (pow.f64 (cbrt.f64 n) 2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) i)) (/.f64 (sqrt.f64 n) 1) (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) i)) (/.f64 (sqrt.f64 n) 1) (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) i)) (/.f64 (sqrt.f64 n) 1) (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) i)) (/.f64 (sqrt.f64 n) 1) (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 i) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) i)) (/.f64 (sqrt.f64 n) 1) (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) i)) (/.f64 (sqrt.f64 n) 1) (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (/.f64 i n))) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) i)) (/.f64 (sqrt.f64 n) 1) (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) 1) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) i)) (/.f64 (sqrt.f64 n) 1) (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 1) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) i)) (/.f64 (sqrt.f64 n) 1) (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) i) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) i)) (/.f64 (sqrt.f64 n) 1) (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) i) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) i)) (/.f64 (sqrt.f64 n) 1) (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) i)) (/.f64 (sqrt.f64 n) 1) (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) i)) (/.f64 (sqrt.f64 n) 1) (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (sqrt.f64 (/.f64 i n))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) i)) (/.f64 (sqrt.f64 n) 1) (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) i)) (/.f64 (sqrt.f64 n) 1) (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) i) n (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) i)) (/.f64 (sqrt.f64 n) 1) (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 n i) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) i)) (/.f64 (sqrt.f64 n) 1) (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (neg.f64 i)) (neg.f64 n) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1)))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) i)) (/.f64 (sqrt.f64 n) 1) (*.f64 (/.f64 (sqrt.f64 n) i) (/.f64 (sqrt.f64 n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 i) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (/.f64 i n))) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) 1) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 1) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) i) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) i) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (sqrt.f64 (/.f64 i n))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) i) n (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 n i) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (neg.f64 i)) (neg.f64 n) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (cbrt.f64 n) (cbrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i))) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i))) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i))) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i))) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 i) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i))) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i))) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (/.f64 i n))) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i))) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) 1) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i))) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 1) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i))) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) i) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i))) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) i) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i))) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i))) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i))) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (sqrt.f64 (/.f64 i n))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i))) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i))) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) i) n (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i))) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 n i) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i))) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (neg.f64 i)) (neg.f64 n) (neg.f64 (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i))) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 (sqrt.f64 n) (cbrt.f64 i)) (/.f64 (sqrt.f64 n) (pow.f64 (cbrt.f64 i) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)) (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)) (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)) (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)) (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 i) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)) (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)) (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (/.f64 i n))) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)) (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) 1) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)) (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 1) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)) (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) i) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)) (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) i) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)) (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)) (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)) (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (sqrt.f64 (/.f64 i n))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)) (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)) (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) i) n (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)) (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 n i) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)) (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (neg.f64 i)) (neg.f64 n) (neg.f64 (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i))))) (fma.f64 (neg.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i))) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)) (*.f64 (/.f64 (cbrt.f64 n) (sqrt.f64 i)) (/.f64 (pow.f64 (cbrt.f64 n) 2) (sqrt.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)) (neg.f64 (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i))))) (fma.f64 (neg.f64 (neg.f64 n)) (/.f64 1 (neg.f64 i)) (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i) (neg.f64 (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i))))) (fma.f64 (neg.f64 (neg.f64 n)) (/.f64 1 (neg.f64 i)) (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i))))) (fma.f64 (neg.f64 (neg.f64 n)) (/.f64 1 (neg.f64 i)) (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i))))) (fma.f64 (neg.f64 (neg.f64 n)) (/.f64 1 (neg.f64 i)) (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 i) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 1 n)) (neg.f64 (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i))))) (fma.f64 (neg.f64 (neg.f64 n)) (/.f64 1 (neg.f64 i)) (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i))))) (fma.f64 (neg.f64 (neg.f64 n)) (/.f64 1 (neg.f64 i)) (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 (sqrt.f64 (/.f64 i n))) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i))))) (fma.f64 (neg.f64 (neg.f64 n)) (/.f64 1 (neg.f64 i)) (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) 1) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i))))) (fma.f64 (neg.f64 (neg.f64 n)) (/.f64 1 (neg.f64 i)) (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 1) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i))))) (fma.f64 (neg.f64 (neg.f64 n)) (/.f64 1 (neg.f64 i)) (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) i) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i))))) (fma.f64 (neg.f64 (neg.f64 n)) (/.f64 1 (neg.f64 i)) (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) i) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i))))) (fma.f64 (neg.f64 (neg.f64 n)) (/.f64 1 (neg.f64 i)) (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i))))) (fma.f64 (neg.f64 (neg.f64 n)) (/.f64 1 (neg.f64 i)) (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i))))) (fma.f64 (neg.f64 (neg.f64 n)) (/.f64 1 (neg.f64 i)) (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (sqrt.f64 (/.f64 i n))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i))))) (fma.f64 (neg.f64 (neg.f64 n)) (/.f64 1 (neg.f64 i)) (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i))))) (fma.f64 (neg.f64 (neg.f64 n)) (/.f64 1 (neg.f64 i)) (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) i) n (neg.f64 (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i))))) (fma.f64 (neg.f64 (neg.f64 n)) (/.f64 1 (neg.f64 i)) (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 n i) (neg.f64 (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i))))) (fma.f64 (neg.f64 (neg.f64 n)) (/.f64 1 (neg.f64 i)) (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (neg.f64 i)) (neg.f64 n) (neg.f64 (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i))))) (fma.f64 (neg.f64 (neg.f64 n)) (/.f64 1 (neg.f64 i)) (*.f64 (neg.f64 n) (/.f64 1 (neg.f64 i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 n i))) (cbrt.f64 (pow.f64 (exp.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 n i))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 n i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 n i)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 n i)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)) (/.f64 n i))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 2) (*.f64 (cbrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))) (pow.f64 (cbrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))) 2) (cbrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (*.f64 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))) (sqrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 1 (/.f64 (neg.f64 i) n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 n i) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 2) 1) (/.f64 (cbrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 1) (/.f64 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) i) (/.f64 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 i) (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 2) i) (/.f64 (cbrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (cbrt.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 2) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (cbrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (cbrt.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (/.f64 i n))) (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (sqrt.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 2) (sqrt.f64 (/.f64 i n))) (/.f64 (cbrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (sqrt.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 1) (/.f64 n i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (neg.f64 i)) (neg.f64 n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) 1) n)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) (pow.f64 (cbrt.f64 n) 2)) (cbrt.f64 n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) (sqrt.f64 n)) (sqrt.f64 n))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 i (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) n)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 (neg.f64 i) n)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 3) (pow.f64 (/.f64 i n) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i)))) (cbrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (sqrt.f64 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 n i))) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 i) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (/.f64 1 n)) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (cbrt.f64 (/.f64 i n))) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (/.f64 i n))) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (sqrt.f64 (/.f64 i n))) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) 1) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 1) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 i n)) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) i) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) i) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (/.f64 1 n)) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (cbrt.f64 (/.f64 i n))) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (sqrt.f64 (/.f64 i n))) (/.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (/.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (/.f64 i n))) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) i) n (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 n i) (neg.f64 (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (neg.f64 i)) (neg.f64 n) (neg.f64 (/.f64 n i)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (+.f64 1 (/.f64 i n)) n))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n))) (cbrt.f64 (exp.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 1 (/.f64 i n)) n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (*.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 n) (pow.f64 (+.f64 1 (/.f64 i n)) n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 (/.f64 i n))) 2) n) (pow.f64 (cbrt.f64 (+.f64 1 (/.f64 i n))) n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (+.f64 1 (/.f64 i n))) n) (pow.f64 (sqrt.f64 (+.f64 1 (/.f64 i n))) n))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) (+.f64 n n)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) (*.f64 n 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 n (log1p.f64 (/.f64 i n))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (/.f64 i n)) n)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (+.f64 1 (pow.f64 (+.f64 1 (/.f64 i n)) n))) (cbrt.f64 (+.f64 1 (pow.f64 (+.f64 1 (/.f64 i n)) n)))) (cbrt.f64 (+.f64 1 (pow.f64 (+.f64 1 (/.f64 i n)) n))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 1 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n))) (hypot.f64 1 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n))) -1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (pow.f64 (+.f64 1 (/.f64 i n)) n))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) (cbrt.f64 (exp.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))))) (log.f64 (cbrt.f64 (exp.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))) (log.f64 (sqrt.f64 (exp.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (pow.f64 (cbrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 2) (cbrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (*.f64 (*.f64 n 3) (log1p.f64 (/.f64 i n)))) (/.f64 1 (+.f64 (pow.f64 (+.f64 1 (/.f64 i n)) (+.f64 n n)) (+.f64 1 (pow.f64 (+.f64 1 (/.f64 i n)) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (*.f64 n (*.f64 2 (log1p.f64 (/.f64 i n))))) (/.f64 1 (+.f64 1 (pow.f64 (+.f64 1 (/.f64 i n)) n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 1) (expm1.f64 (*.f64 (*.f64 n 1/2) (log1p.f64 (/.f64 i n)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (+.f64 1 (/.f64 i n)) (+.f64 n n)) (+.f64 1 (pow.f64 (+.f64 1 (/.f64 i n)) n))) (expm1.f64 (*.f64 (*.f64 n 3) (log1p.f64 (/.f64 i n))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 1 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (expm1.f64 (*.f64 n (*.f64 2 (log1p.f64 (/.f64 i n)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (expm1.f64 (*.f64 (*.f64 n 3) (log1p.f64 (/.f64 i n)))) (+.f64 (pow.f64 (+.f64 1 (/.f64 i n)) (+.f64 n n)) (+.f64 1 (pow.f64 (+.f64 1 (/.f64 i n)) n))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (expm1.f64 (*.f64 (*.f64 n 3) (log1p.f64 (/.f64 i n)))) (+.f64 (pow.f64 (+.f64 1 (/.f64 i n)) (+.f64 n n)) (-.f64 1 (*.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (expm1.f64 (*.f64 n (*.f64 2 (log1p.f64 (/.f64 i n))))) (+.f64 1 (pow.f64 (+.f64 1 (/.f64 i n)) n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (expm1.f64 (*.f64 (*.f64 n 3) (log1p.f64 (/.f64 i n))))) (neg.f64 (+.f64 (pow.f64 (+.f64 1 (/.f64 i n)) (+.f64 n n)) (+.f64 1 (pow.f64 (+.f64 1 (/.f64 i n)) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (expm1.f64 (*.f64 n (*.f64 2 (log1p.f64 (/.f64 i n)))))) (neg.f64 (+.f64 1 (pow.f64 (+.f64 1 (/.f64 i n)) n))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (*.f64 (*.f64 n (log1p.f64 (/.f64 i n))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 (+.f64 1 (/.f64 i n)) n) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 2) (*.f64 (cbrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) (*.f64 (sqrt.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 1 n) (pow.f64 (+.f64 1 (/.f64 i n)) n) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 1 (/.f64 i n))) 2) n) (pow.f64 (cbrt.f64 (+.f64 1 (/.f64 i n))) n) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 (+.f64 1 (/.f64 i n))) n) (pow.f64 (sqrt.f64 (+.f64 1 (/.f64 i n))) n) -1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 100) (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i)))) (cbrt.f64 (pow.f64 (exp.f64 100) (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i)))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 100) (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 100) (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 100) (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 i n) (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 100 (/.f64 i (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 i n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100)) (/.f64 (neg.f64 i) n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) 1) (/.f64 i n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i) (/.f64 1 n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (cbrt.f64 (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (sqrt.f64 (/.f64 i n))) (sqrt.f64 (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 100) (/.f64 (neg.f64 i) n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (neg.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) (/.f64 (neg.f64 i) n))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))) 10) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i)) 2) 10000))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 100) (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100))) 1))))))"]],"rules":[["egg-rr",26],["egg-rr",43],["egg-rr",26],["egg-rr",250]],"stop":[["node limit",1]],"time":119.835205078125,"type":"rewrite"},{"count":[[441,508]],"egraph":[[2,4462,4705,0.027406459],[1,1221,5121,0.010592084],[0,365,5519,0.002234042]],"inputs":[["n","(+.f64 n (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))))","(+.f64 n (+.f64 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))) (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))))","(+.f64 n (+.f64 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))) (+.f64 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))) (*.f64 n (*.f64 (pow.f64 i 3) (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))))))))","(/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2)) (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i) (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i) (+.f64 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3)) (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4)))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))) (pow.f64 i 4)))))","(/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i) (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6)))))) (pow.f64 i 4))) (+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i) (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3)))))","(/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)","(+.f64 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))) (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(+.f64 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i) (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)) (/.f64 (log.f64 i) (pow.f64 i 2)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))))","(+.f64 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i) (+.f64 (*.f64 (pow.f64 n 5) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4)))))))) (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)) (/.f64 (log.f64 i) (pow.f64 i 2)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3))))))))","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i))))","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (+.f64 (*.f64 -1/2 (*.f64 i (exp.f64 i))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 2) i)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (+.f64 (*.f64 -1/2 (*.f64 i (exp.f64 i))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i)))))","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4))) (exp.f64 i)) (*.f64 n i)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i)))))","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 2) i))) (+.f64 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i)) (*.f64 -1/2 (*.f64 i (exp.f64 i))))))","1","(+.f64 1 i)","(+.f64 1 (+.f64 i (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))))","(+.f64 1 (+.f64 i (+.f64 (*.f64 (pow.f64 i 3) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))) (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))))","(exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (+.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 2))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4))))) (pow.f64 i 3)) (+.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 2)))))","(exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6))))) (pow.f64 i 3))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))))","1","(+.f64 1 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (+.f64 1 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (+.f64 1 (+.f64 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3)) (+.f64 (*.f64 -1 (/.f64 (log.f64 n) i)) (/.f64 (log.f64 i) i))) (*.f64 1/2 (/.f64 1 (pow.f64 i 2))))) (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))))))","(exp.f64 i)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (+.f64 (exp.f64 i) (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (pow.f64 n 3)))))","(exp.f64 i)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4)))) (exp.f64 i)) (pow.f64 n 3))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))))","i","(+.f64 i (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))","(+.f64 i (+.f64 (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))) (*.f64 (pow.f64 i 3) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))))","(+.f64 i (+.f64 (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))) (+.f64 (*.f64 (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))) (pow.f64 i 4)) (*.f64 (pow.f64 i 3) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))))","(-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (+.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 2)))) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4))))) (pow.f64 i 3)) (+.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 2))))) 1)","(-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6))))) (pow.f64 i 3))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))))) 1)","(*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (+.f64 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3)) (+.f64 (*.f64 -1 (/.f64 (log.f64 n) i)) (/.f64 (log.f64 i) i))) (*.f64 1/2 (/.f64 1 (pow.f64 i 2))))) (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)))))","(+.f64 (*.f64 (pow.f64 n 4) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 i 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 2))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)) (+.f64 (*.f64 1/24 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4)) (*.f64 1/2 (/.f64 1 (pow.f64 i 2)))))))) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (+.f64 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3)) (+.f64 (*.f64 -1 (/.f64 (log.f64 n) i)) (/.f64 (log.f64 i) i))) (*.f64 1/2 (/.f64 1 (pow.f64 i 2))))) (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))))))","(-.f64 (exp.f64 i) 1)","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (pow.f64 n 3)) (+.f64 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)))) 1)","(-.f64 (exp.f64 i) 1)","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))) 1)","(-.f64 (+.f64 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (+.f64 (exp.f64 i) (*.f64 -1 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (pow.f64 n 3)))))) 1)","(*.f64 100 n)","(+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n)))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))) (pow.f64 i 3)))) (+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)) (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4)))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))) (pow.f64 i 4))))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (+.f64 (*.f64 -100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6)))))) (pow.f64 i 4))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))))","(*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 5) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4))))))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 -100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))"]],"method":["egg-herbie"],"outputs":[["n","(+.f64 n (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))))","(+.f64 n (*.f64 (*.f64 n i) (-.f64 1/2 (/.f64 1/2 n))))","(fma.f64 (*.f64 n i) (+.f64 1/2 (/.f64 -1/2 n)) n)","(+.f64 n (+.f64 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))) (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))))","(+.f64 n (*.f64 n (+.f64 (*.f64 (*.f64 i i) (-.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) 1/6) (/.f64 1/2 n))) (*.f64 i (-.f64 1/2 (/.f64 1/2 n))))))","(fma.f64 n (fma.f64 (*.f64 i i) (+.f64 (/.f64 1/3 (*.f64 n n)) (+.f64 1/6 (/.f64 -1/2 n))) (*.f64 i (+.f64 1/2 (/.f64 -1/2 n)))) n)","(fma.f64 n (*.f64 i (+.f64 (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) (+.f64 1/6 (/.f64 -1/2 n))) i))) n)","(+.f64 n (+.f64 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))) (+.f64 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))) (*.f64 n (*.f64 (pow.f64 i 3) (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))))))))","(+.f64 n (fma.f64 n (*.f64 (*.f64 i i) (-.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) 1/6) (/.f64 1/2 n))) (*.f64 n (+.f64 (*.f64 i (-.f64 1/2 (/.f64 1/2 n))) (*.f64 (pow.f64 i 3) (+.f64 1/24 (-.f64 (/.f64 11/24 (*.f64 n n)) (+.f64 (/.f64 1/4 (pow.f64 n 3)) (/.f64 1/4 n)))))))))","(+.f64 n (*.f64 n (+.f64 (fma.f64 (*.f64 i i) (+.f64 (/.f64 1/3 (*.f64 n n)) (+.f64 1/6 (/.f64 -1/2 n))) (*.f64 i (+.f64 1/2 (/.f64 -1/2 n)))) (*.f64 (pow.f64 i 3) (+.f64 1/24 (-.f64 (-.f64 (/.f64 11/24 (*.f64 n n)) (/.f64 1/4 n)) (/.f64 1/4 (pow.f64 n 3))))))))","(+.f64 n (*.f64 n (+.f64 (*.f64 i (+.f64 (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) (+.f64 1/6 (/.f64 -1/2 n))) i))) (*.f64 (pow.f64 i 3) (+.f64 1/24 (-.f64 (+.f64 (/.f64 11/24 (*.f64 n n)) (/.f64 -1/4 n)) (/.f64 1/4 (pow.f64 n 3))))))))","(/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)","(/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))))","(*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n)))))","(*.f64 (/.f64 n i) (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2)) (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))","(+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))) (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))))","(+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))))","(+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1)) (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i) (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))))","(+.f64 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))) (/.f64 (*.f64 (*.f64 n (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 3))))","(+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) (+.f64 (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))) (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2))))))","(+.f64 (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)))) (*.f64 (/.f64 n i) (+.f64 (*.f64 (/.f64 (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n))) i) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) i)) (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i) (+.f64 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3)) (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4)))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))) (pow.f64 i 4)))))","(+.f64 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))) (+.f64 (/.f64 (*.f64 (*.f64 n (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 3)) (/.f64 n (/.f64 (pow.f64 i 4) (*.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 -1/2 (pow.f64 n 5) (*.f64 1/3 (pow.f64 n 4))))))))))","(+.f64 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2))))) (+.f64 (/.f64 n (/.f64 (/.f64 (pow.f64 i 4) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 1/3 (pow.f64 n 4) (*.f64 -1/2 (pow.f64 n 5)))))) (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))))))","(+.f64 (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)))) (+.f64 (*.f64 (/.f64 n i) (+.f64 (*.f64 (/.f64 (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n))) i) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) i)) (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1))) (*.f64 (/.f64 n (/.f64 (pow.f64 i 4) (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n))))) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 1/3 (pow.f64 n 4) (*.f64 -1/2 (pow.f64 n 5)))))))","(/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)","(/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))))","(*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))))","(*.f64 (/.f64 n i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))","(+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))))","(+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) i) (/.f64 (pow.f64 n 3) i)))","(+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1)) (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) i) (/.f64 (pow.f64 n 3) i)))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i) (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))))","(+.f64 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) (/.f64 n (/.f64 (pow.f64 i 3) (*.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))))))","(+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) i) (/.f64 (pow.f64 n 3) i)) (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))))))","(+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1)) (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) i) (+.f64 (/.f64 (pow.f64 n 3) i) (/.f64 n (*.f64 (/.f64 i (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2))) i)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6)))))) (pow.f64 i 4))) (+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i) (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3)))))","(fma.f64 -1 (/.f64 n (/.f64 (pow.f64 i 4) (*.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))) (fma.f64 -1/3 (pow.f64 n 4) (fma.f64 1/2 (pow.f64 n 5) (*.f64 (pow.f64 n 6) -1/6)))))) (+.f64 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) (/.f64 n (/.f64 (pow.f64 i 3) (*.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))))))","(-.f64 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) i) (/.f64 (pow.f64 n 3) i)) (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))))) (*.f64 (/.f64 n (pow.f64 i 4)) (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 1/2 (pow.f64 n 5) (*.f64 (pow.f64 n 6) -1/6))))))","(-.f64 (+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1)) (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) i) (+.f64 (/.f64 (pow.f64 n 3) i) (/.f64 n (*.f64 (/.f64 i (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2))) i))))) (*.f64 (/.f64 n (pow.f64 i 4)) (*.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 1/2 (pow.f64 n 5) (*.f64 (pow.f64 n 6) -1/6))))))","(/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)","(/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i))))","(*.f64 (/.f64 (*.f64 n n) i) (-.f64 (log.f64 i) (log.f64 n)))","(*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n)))","(+.f64 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))) (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(fma.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (*.f64 i i)) (*.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) i))) (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i)))))","(fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (*.f64 (/.f64 (*.f64 n n) i) (-.f64 (log.f64 i) (log.f64 n))))","(fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n))))","(+.f64 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i) (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)) (/.f64 (log.f64 i) (pow.f64 i 2)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))))","(+.f64 (fma.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (*.f64 i i)) (*.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) i))) (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i))))) (*.f64 (pow.f64 n 4) (-.f64 (fma.f64 -1 (/.f64 (log.f64 n) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 3) i) (/.f64 (log.f64 i) (*.f64 i i)))) (/.f64 1/2 (pow.f64 i 3)))))","(fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (fma.f64 (pow.f64 n 4) (+.f64 (-.f64 (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 (log.f64 i) (*.f64 i i))) (/.f64 (log.f64 n) (*.f64 i i))) (/.f64 -1/2 (pow.f64 i 3))) (*.f64 (/.f64 (*.f64 n n) i) (-.f64 (log.f64 i) (log.f64 n)))))","(fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (fma.f64 (pow.f64 n 4) (+.f64 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 -1/2 (pow.f64 i 3)))) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n)))))","(+.f64 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i) (+.f64 (*.f64 (pow.f64 n 5) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4)))))))) (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)) (/.f64 (log.f64 i) (pow.f64 i 2)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3))))))))","(+.f64 (fma.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (*.f64 i i)) (*.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) i))) (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i))))) (fma.f64 (pow.f64 n 5) (fma.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 4) i) (fma.f64 -1/2 (/.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) (pow.f64 i 3)) (+.f64 (/.f64 1/2 (pow.f64 i 3)) (/.f64 1/3 (pow.f64 i 4)))))) (*.f64 (pow.f64 n 4) (-.f64 (fma.f64 -1 (/.f64 (log.f64 n) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 3) i) (/.f64 (log.f64 i) (*.f64 i i)))) (/.f64 1/2 (pow.f64 i 3))))))","(+.f64 (fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (*.f64 (/.f64 (*.f64 n n) i) (-.f64 (log.f64 i) (log.f64 n)))) (fma.f64 (pow.f64 n 4) (+.f64 (-.f64 (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 (log.f64 i) (*.f64 i i))) (/.f64 (log.f64 n) (*.f64 i i))) (/.f64 -1/2 (pow.f64 i 3))) (*.f64 (pow.f64 n 5) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 4) i) (+.f64 (/.f64 1/3 (pow.f64 i 4)) (fma.f64 -1/2 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (pow.f64 i 3)) (/.f64 1/2 (pow.f64 i 3)))))))))","(+.f64 (fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n)))) (fma.f64 (pow.f64 n 5) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 4) i) (+.f64 (/.f64 1/3 (pow.f64 i 4)) (fma.f64 -1/2 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (pow.f64 i 3)) (/.f64 1/2 (pow.f64 i 3)))))) (*.f64 (pow.f64 n 4) (+.f64 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 -1/2 (pow.f64 i 3)))))))","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 n (/.f64 i (expm1.f64 i)))","(*.f64 (/.f64 n i) (expm1.f64 i))","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i))))","(+.f64 (/.f64 n (/.f64 i (expm1.f64 i))) (*.f64 (*.f64 -1/2 i) (exp.f64 i)))","(fma.f64 -1/2 (*.f64 i (exp.f64 i)) (*.f64 (/.f64 n i) (expm1.f64 i)))","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (+.f64 (*.f64 -1/2 (*.f64 i (exp.f64 i))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i))))","(+.f64 (/.f64 n (/.f64 i (expm1.f64 i))) (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) (/.f64 (*.f64 n i) (exp.f64 i)))))","(fma.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i) (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (*.f64 (/.f64 n i) (expm1.f64 i))))","(+.f64 (*.f64 (/.f64 n i) (expm1.f64 i)) (*.f64 (exp.f64 i) (+.f64 (*.f64 i -1/2) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) (*.f64 n i)))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 2) i)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (+.f64 (*.f64 -1/2 (*.f64 i (exp.f64 i))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i)))))","(+.f64 (+.f64 (/.f64 n (/.f64 i (expm1.f64 i))) (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) (/.f64 (*.f64 n i) (exp.f64 i))))) (*.f64 (/.f64 (fma.f64 -1/48 (pow.f64 i 6) (fma.f64 -1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) -1/4))) (*.f64 n n)) (/.f64 (exp.f64 i) i)))","(fma.f64 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 (pow.f64 i 4) -1/4 (*.f64 -1/48 (pow.f64 i 6)))) (*.f64 n n)) (/.f64 (exp.f64 i) i) (fma.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i) (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (*.f64 (/.f64 n i) (expm1.f64 i)))))","(+.f64 (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (*.f64 (/.f64 n i) (expm1.f64 i))) (*.f64 (/.f64 (exp.f64 i) i) (+.f64 (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) n) (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 (pow.f64 i 4) -1/4 (*.f64 -1/48 (pow.f64 i 6)))) (*.f64 n n)))))","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 n (/.f64 i (expm1.f64 i)))","(*.f64 (/.f64 n i) (expm1.f64 i))","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i))))","(+.f64 (/.f64 n (/.f64 i (expm1.f64 i))) (*.f64 (*.f64 -1/2 i) (exp.f64 i)))","(fma.f64 -1/2 (*.f64 i (exp.f64 i)) (*.f64 (/.f64 n i) (expm1.f64 i)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4))) (exp.f64 i)) (*.f64 n i)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i)))))","(+.f64 (/.f64 n (/.f64 i (expm1.f64 i))) (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) (/.f64 (*.f64 n i) (exp.f64 i)))))","(fma.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i) (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (*.f64 (/.f64 n i) (expm1.f64 i))))","(+.f64 (*.f64 (/.f64 n i) (expm1.f64 i)) (*.f64 (exp.f64 i) (+.f64 (*.f64 i -1/2) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) (*.f64 n i)))))","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 2) i))) (+.f64 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i)) (*.f64 -1/2 (*.f64 i (exp.f64 i))))))","(+.f64 (/.f64 n (/.f64 i (expm1.f64 i))) (fma.f64 -1 (/.f64 (exp.f64 i) (/.f64 (*.f64 i (*.f64 n n)) (fma.f64 1/48 (pow.f64 i 6) (fma.f64 1/6 (pow.f64 i 5) (*.f64 1/4 (pow.f64 i 4)))))) (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) (/.f64 (*.f64 n i) (exp.f64 i))))))","(+.f64 (fma.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i) (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (*.f64 (/.f64 n i) (expm1.f64 i)))) (*.f64 (neg.f64 (/.f64 (exp.f64 i) (*.f64 n n))) (/.f64 (fma.f64 (pow.f64 i 6) 1/48 (fma.f64 1/4 (pow.f64 i 4) (*.f64 1/6 (pow.f64 i 5)))) i)))","(+.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 i -1/2) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) (*.f64 n i)))) (-.f64 (*.f64 (/.f64 n i) (expm1.f64 i)) (*.f64 (/.f64 (exp.f64 i) (*.f64 n (*.f64 n i))) (fma.f64 (pow.f64 i 6) 1/48 (fma.f64 1/4 (pow.f64 i 4) (*.f64 1/6 (pow.f64 i 5)))))))","1","(+.f64 1 i)","(+.f64 i 1)","(+.f64 1 (+.f64 i (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))))","(+.f64 (+.f64 i 1) (*.f64 (-.f64 1/2 (/.f64 1/2 n)) (*.f64 i i)))","(+.f64 1 (fma.f64 (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 i i) i))","(+.f64 1 (+.f64 i (+.f64 (*.f64 (pow.f64 i 3) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))) (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))))","(+.f64 (+.f64 i 1) (fma.f64 (*.f64 i i) (-.f64 1/2 (/.f64 1/2 n)) (*.f64 (-.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) 1/6) (/.f64 1/2 n)) (pow.f64 i 3))))","(+.f64 i (+.f64 1 (fma.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) (+.f64 1/6 (/.f64 -1/2 n))) (pow.f64 i 3) (*.f64 (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 i i)))))","(+.f64 i (+.f64 1 (*.f64 i (*.f64 i (+.f64 (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) (+.f64 1/6 (/.f64 -1/2 n))) i))))))","(exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))","(pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))","(pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))","(*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))","(+.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (/.f64 (*.f64 n n) (/.f64 i (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))))","(+.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (*.f64 (/.f64 (*.f64 n n) i) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))))","(*.f64 (+.f64 (/.f64 n (/.f64 i n)) 1) (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (+.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 2))))","(+.f64 (/.f64 (*.f64 n n) (/.f64 i (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (+.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (/.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (/.f64 (*.f64 i i) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))))))","(+.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (+.f64 (*.f64 (/.f64 (*.f64 n n) i) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))) (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) i) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) i))))","(+.f64 (*.f64 (+.f64 (/.f64 n (/.f64 i n)) 1) (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)))) (*.f64 (/.f64 (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n))) i) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) i)))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4))))) (pow.f64 i 3)) (+.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 2)))))","(+.f64 (/.f64 (*.f64 n n) (/.f64 i (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (+.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (/.f64 (pow.f64 i 3) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 -1/2 (pow.f64 n 5) (*.f64 1/3 (pow.f64 n 4)))))) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))) (/.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (/.f64 (*.f64 i i) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))))))","(+.f64 (+.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (+.f64 (*.f64 (/.f64 (*.f64 n n) i) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))) (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) i) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) i)))) (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (pow.f64 i 3)) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 1/3 (pow.f64 n 4) (*.f64 -1/2 (pow.f64 n 5))))))","(+.f64 (*.f64 (/.f64 (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n))) (/.f64 i n)) n) (+.f64 (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n))) (*.f64 (/.f64 (pow.f64 i n) (/.f64 (*.f64 i i) (pow.f64 n (neg.f64 n)))) (+.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (/.f64 (fma.f64 1/6 (pow.f64 n 6) (fma.f64 1/3 (pow.f64 n 4) (*.f64 -1/2 (pow.f64 n 5)))) i)))))","(exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))","(pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))","(pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))","(*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))","(+.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))) (/.f64 (*.f64 n n) (/.f64 i (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))))","(+.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) (*.f64 (/.f64 (*.f64 n n) i) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))))","(*.f64 (+.f64 (/.f64 n (/.f64 i n)) 1) (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)))","(+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))))","(+.f64 (/.f64 (*.f64 n n) (/.f64 i (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (+.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))) (/.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))))","(+.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) (+.f64 (*.f64 (/.f64 (*.f64 n n) i) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) (*.f64 (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))))","(+.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) (*.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) (+.f64 (/.f64 n (/.f64 i n)) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (*.f64 i i)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6))))) (pow.f64 i 3))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))))","(fma.f64 -1 (/.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))) (/.f64 (pow.f64 i 3) (fma.f64 -1/3 (pow.f64 n 4) (fma.f64 1/2 (pow.f64 n 5) (*.f64 (pow.f64 n 6) -1/6))))) (+.f64 (/.f64 (*.f64 n n) (/.f64 i (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (+.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))) (/.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))))))","(-.f64 (+.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) (+.f64 (*.f64 (/.f64 (*.f64 n n) i) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) (*.f64 (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))))) (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) (pow.f64 i 3)) (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 1/2 (pow.f64 n 5) (*.f64 (pow.f64 n 6) -1/6)))))","(+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) (+.f64 (/.f64 n (/.f64 i n)) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (*.f64 i i)))) (-.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) (pow.f64 i 3)) (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 1/2 (pow.f64 n 5) (*.f64 (pow.f64 n 6) -1/6))))))","1","(+.f64 1 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))))","(+.f64 1 (*.f64 n (fma.f64 -1 (log.f64 n) (log.f64 i))))","(fma.f64 n (-.f64 (log.f64 i) (log.f64 n)) 1)","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (+.f64 1 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)))))","(fma.f64 (fma.f64 1/2 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) (/.f64 1 i)) (*.f64 n n) (+.f64 1 (*.f64 n (fma.f64 -1 (log.f64 n) (log.f64 i)))))","(fma.f64 (*.f64 n n) (fma.f64 1/2 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (/.f64 1 i)) (fma.f64 n (-.f64 (log.f64 i) (log.f64 n)) 1))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (+.f64 1 (+.f64 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3)) (+.f64 (*.f64 -1 (/.f64 (log.f64 n) i)) (/.f64 (log.f64 i) i))) (*.f64 1/2 (/.f64 1 (pow.f64 i 2))))) (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))))))","(fma.f64 (fma.f64 1/2 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) (/.f64 1 i)) (*.f64 n n) (+.f64 1 (fma.f64 (pow.f64 n 3) (-.f64 (fma.f64 1/6 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 3) (fma.f64 -1 (/.f64 (log.f64 n) i) (/.f64 (log.f64 i) i))) (/.f64 1/2 (*.f64 i i))) (*.f64 n (fma.f64 -1 (log.f64 n) (log.f64 i))))))","(+.f64 (fma.f64 (pow.f64 n 3) (+.f64 (fma.f64 1/6 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) (-.f64 (/.f64 (log.f64 i) i) (/.f64 (log.f64 n) i))) (/.f64 -1/2 (*.f64 i i))) (*.f64 n (-.f64 (log.f64 i) (log.f64 n)))) (fma.f64 (*.f64 n n) (fma.f64 1/2 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (/.f64 1 i)) 1))","(+.f64 (fma.f64 (pow.f64 n 3) (+.f64 (fma.f64 1/6 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) (/.f64 (-.f64 (log.f64 i) (log.f64 n)) i)) (/.f64 -1/2 (*.f64 i i))) (*.f64 n (-.f64 (log.f64 i) (log.f64 n)))) (fma.f64 (*.f64 n n) (fma.f64 1/2 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (/.f64 1 i)) 1))","(exp.f64 i)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))","(fma.f64 -1/2 (/.f64 (*.f64 i i) (/.f64 n (exp.f64 i))) (exp.f64 i))","(fma.f64 -1/2 (*.f64 (/.f64 (*.f64 i i) n) (exp.f64 i)) (exp.f64 i))","(fma.f64 -1/2 (*.f64 (/.f64 i (/.f64 n i)) (exp.f64 i)) (exp.f64 i))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 i i) (/.f64 n (exp.f64 i))) (exp.f64 i)) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) (/.f64 (*.f64 n n) (exp.f64 i))))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 i i) n) (exp.f64 i)) (exp.f64 i)) (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8))))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 i (/.f64 n i)) (exp.f64 i)) (exp.f64 i)) (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (+.f64 (exp.f64 i) (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (pow.f64 n 3)))))","(+.f64 (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 i i) (/.f64 n (exp.f64 i))) (exp.f64 i)) (/.f64 (fma.f64 -1/48 (pow.f64 i 6) (fma.f64 -1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) -1/4))) (/.f64 (pow.f64 n 3) (exp.f64 i)))) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) (/.f64 (*.f64 n n) (exp.f64 i))))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 i i) n) (exp.f64 i)) (exp.f64 i)) (+.f64 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 (pow.f64 i 4) -1/4 (*.f64 -1/48 (pow.f64 i 6)))) (/.f64 (pow.f64 n 3) (exp.f64 i))) (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)))))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 i (/.f64 n i)) (exp.f64 i)) (exp.f64 i)) (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (+.f64 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 (pow.f64 i 4) -1/4 (*.f64 -1/48 (pow.f64 i 6)))) n) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)))))","(exp.f64 i)","(+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))","(fma.f64 -1/2 (/.f64 (*.f64 i i) (/.f64 n (exp.f64 i))) (exp.f64 i))","(fma.f64 -1/2 (*.f64 (/.f64 (*.f64 i i) n) (exp.f64 i)) (exp.f64 i))","(fma.f64 -1/2 (*.f64 (/.f64 i (/.f64 n i)) (exp.f64 i)) (exp.f64 i))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)))","(+.f64 (fma.f64 -1/2 (/.f64 (*.f64 i i) (/.f64 n (exp.f64 i))) (exp.f64 i)) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) (/.f64 (*.f64 n n) (exp.f64 i))))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 i i) n) (exp.f64 i)) (exp.f64 i)) (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8))))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 i (/.f64 n i)) (exp.f64 i)) (exp.f64 i)) (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4)))) (exp.f64 i)) (pow.f64 n 3))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))))","(fma.f64 -1 (/.f64 (exp.f64 i) (/.f64 (pow.f64 n 3) (fma.f64 1/48 (pow.f64 i 6) (fma.f64 1/6 (pow.f64 i 5) (*.f64 1/4 (pow.f64 i 4)))))) (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 i i) (/.f64 n (exp.f64 i))) (exp.f64 i)) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) (/.f64 (*.f64 n n) (exp.f64 i)))))","(-.f64 (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 i i) n) (exp.f64 i)) (exp.f64 i)) (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)))) (*.f64 (/.f64 (exp.f64 i) (pow.f64 n 3)) (fma.f64 (pow.f64 i 6) 1/48 (fma.f64 1/4 (pow.f64 i 4) (*.f64 1/6 (pow.f64 i 5))))))","(-.f64 (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 i (/.f64 n i)) (exp.f64 i)) (exp.f64 i)) (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)))) (*.f64 (/.f64 (exp.f64 i) (pow.f64 n 3)) (fma.f64 (pow.f64 i 6) 1/48 (fma.f64 1/4 (pow.f64 i 4) (*.f64 1/6 (pow.f64 i 5))))))","i","(+.f64 i (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))","(+.f64 i (*.f64 (-.f64 1/2 (/.f64 1/2 n)) (*.f64 i i)))","(fma.f64 (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 i i) i)","(+.f64 i (+.f64 (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))) (*.f64 (pow.f64 i 3) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))))","(+.f64 i (fma.f64 (*.f64 i i) (-.f64 1/2 (/.f64 1/2 n)) (*.f64 (-.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) 1/6) (/.f64 1/2 n)) (pow.f64 i 3))))","(+.f64 i (fma.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) (+.f64 1/6 (/.f64 -1/2 n))) (pow.f64 i 3) (*.f64 (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 i i))))","(+.f64 i (*.f64 i (*.f64 i (+.f64 (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) (+.f64 1/6 (/.f64 -1/2 n))) i)))))","(+.f64 i (+.f64 (*.f64 (pow.f64 i 2) (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))) (+.f64 (*.f64 (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))) (pow.f64 i 4)) (*.f64 (pow.f64 i 3) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))))","(+.f64 i (fma.f64 (*.f64 i i) (-.f64 1/2 (/.f64 1/2 n)) (fma.f64 (+.f64 1/24 (-.f64 (/.f64 11/24 (*.f64 n n)) (+.f64 (/.f64 1/4 (pow.f64 n 3)) (/.f64 1/4 n)))) (pow.f64 i 4) (*.f64 (-.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) 1/6) (/.f64 1/2 n)) (pow.f64 i 3)))))","(+.f64 (fma.f64 (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 i i) i) (fma.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) (+.f64 1/6 (/.f64 -1/2 n))) (pow.f64 i 3) (*.f64 (+.f64 1/24 (-.f64 (-.f64 (/.f64 11/24 (*.f64 n n)) (/.f64 1/4 n)) (/.f64 1/4 (pow.f64 n 3)))) (pow.f64 i 4))))","(+.f64 (fma.f64 (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 i i) i) (fma.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) (+.f64 1/6 (/.f64 -1/2 n))) (pow.f64 i 3) (*.f64 (+.f64 1/24 (-.f64 (+.f64 (/.f64 11/24 (*.f64 n n)) (/.f64 -1/4 n)) (/.f64 1/4 (pow.f64 n 3)))) (pow.f64 i 4))))","(-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)","(expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))","(expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))","(fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) 1)","(+.f64 (/.f64 (*.f64 n n) (/.f64 i (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))","(+.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n)))) (*.f64 (/.f64 (*.f64 n n) i) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))))","(+.f64 -1 (*.f64 (+.f64 (/.f64 n (/.f64 i n)) 1) (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (+.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 2)))) 1)","(+.f64 (/.f64 (*.f64 n n) (/.f64 i (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (-.f64 (+.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (/.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (/.f64 (*.f64 i i) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))))) 1))","(+.f64 (*.f64 (/.f64 (*.f64 n n) i) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))) (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) i) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) i)) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))))","(+.f64 (*.f64 (+.f64 (/.f64 n (/.f64 i n)) 1) (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)))) (fma.f64 (/.f64 (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n))) i) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) i) -1))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) i) (+.f64 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4))))) (pow.f64 i 3)) (+.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 2))))) 1)","(+.f64 (/.f64 (*.f64 n n) (/.f64 i (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (-.f64 (+.f64 (+.f64 (/.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (/.f64 (pow.f64 i 3) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 -1/2 (pow.f64 n 5) (*.f64 1/3 (pow.f64 n 4)))))) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))) (/.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (/.f64 (*.f64 i i) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))))) 1))","(+.f64 (*.f64 (/.f64 (*.f64 n n) i) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))) (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (pow.f64 i 3)) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 1/3 (pow.f64 n 4) (*.f64 -1/2 (pow.f64 n 5))))) (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) i) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) i)) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n)))))))","(+.f64 (+.f64 (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n))) (*.f64 (/.f64 (pow.f64 i n) (/.f64 (*.f64 i i) (pow.f64 n (neg.f64 n)))) (+.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (/.f64 (fma.f64 1/6 (pow.f64 n 6) (fma.f64 1/3 (pow.f64 n 4) (*.f64 -1/2 (pow.f64 n 5)))) i)))) (fma.f64 (/.f64 n (/.f64 i n)) (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n))) -1))","(-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)","(expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))","(expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))","(fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) 1)","(+.f64 (/.f64 (*.f64 n n) (/.f64 i (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))","(+.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) (*.f64 (/.f64 (*.f64 n n) i) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))))","(+.f64 -1 (*.f64 (+.f64 (/.f64 n (/.f64 i n)) 1) (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) 1)","(+.f64 (/.f64 (*.f64 n n) (/.f64 i (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (-.f64 (+.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))) (/.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) 1))","(+.f64 (*.f64 (/.f64 (*.f64 n n) i) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) (+.f64 (*.f64 (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))))","(+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) (+.f64 (/.f64 n (/.f64 i n)) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (*.f64 i i)))) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6))))) (pow.f64 i 3))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) i) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))))) 1)","(+.f64 (fma.f64 -1 (/.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))) (/.f64 (pow.f64 i 3) (fma.f64 -1/3 (pow.f64 n 4) (fma.f64 1/2 (pow.f64 n 5) (*.f64 (pow.f64 n 6) -1/6))))) (+.f64 (/.f64 (*.f64 n n) (/.f64 i (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (+.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))) (/.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))))) -1)","(+.f64 (fma.f64 -1 (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) (pow.f64 i 3)) (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 1/2 (pow.f64 n 5) (*.f64 (pow.f64 n 6) -1/6)))) (*.f64 (/.f64 (*.f64 n n) i) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (+.f64 (*.f64 (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))))","(-.f64 (+.f64 (*.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) (+.f64 (/.f64 n (/.f64 i n)) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (*.f64 i i)))) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1)) (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) (pow.f64 i 3)) (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 1/2 (pow.f64 n 5) (*.f64 (pow.f64 n 6) -1/6)))))","(*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)))","(*.f64 n (fma.f64 -1 (log.f64 n) (log.f64 i)))","(*.f64 n (-.f64 (log.f64 i) (log.f64 n)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))))","(fma.f64 (fma.f64 1/2 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) (/.f64 1 i)) (*.f64 n n) (*.f64 n (fma.f64 -1 (log.f64 n) (log.f64 i))))","(fma.f64 (*.f64 n n) (fma.f64 1/2 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (/.f64 1 i)) (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))","(*.f64 n (+.f64 (-.f64 (log.f64 i) (log.f64 n)) (*.f64 (fma.f64 1/2 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (/.f64 1 i)) n)))","(+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (+.f64 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3)) (+.f64 (*.f64 -1 (/.f64 (log.f64 n) i)) (/.f64 (log.f64 i) i))) (*.f64 1/2 (/.f64 1 (pow.f64 i 2))))) (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)))))","(fma.f64 (fma.f64 1/2 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) (/.f64 1 i)) (*.f64 n n) (fma.f64 (pow.f64 n 3) (-.f64 (fma.f64 1/6 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 3) (fma.f64 -1 (/.f64 (log.f64 n) i) (/.f64 (log.f64 i) i))) (/.f64 1/2 (*.f64 i i))) (*.f64 n (fma.f64 -1 (log.f64 n) (log.f64 i)))))","(fma.f64 (*.f64 n n) (fma.f64 1/2 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (/.f64 1 i)) (fma.f64 (pow.f64 n 3) (+.f64 (fma.f64 1/6 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) (-.f64 (/.f64 (log.f64 i) i) (/.f64 (log.f64 n) i))) (/.f64 -1/2 (*.f64 i i))) (*.f64 n (-.f64 (log.f64 i) (log.f64 n)))))","(fma.f64 (*.f64 n n) (fma.f64 1/2 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (/.f64 1 i)) (fma.f64 (pow.f64 n 3) (+.f64 (fma.f64 1/6 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) (/.f64 (-.f64 (log.f64 i) (log.f64 n)) i)) (/.f64 -1/2 (*.f64 i i))) (*.f64 n (-.f64 (log.f64 i) (log.f64 n)))))","(+.f64 (*.f64 (pow.f64 n 4) (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 i 3))) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 2))) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)) (+.f64 (*.f64 1/24 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4)) (*.f64 1/2 (/.f64 1 (pow.f64 i 2)))))))) (+.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2)) (/.f64 1 i)) (pow.f64 n 2)) (+.f64 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 1/6 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3)) (+.f64 (*.f64 -1 (/.f64 (log.f64 n) i)) (/.f64 (log.f64 i) i))) (*.f64 1/2 (/.f64 1 (pow.f64 i 2))))) (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))))))","(fma.f64 (pow.f64 n 4) (+.f64 (/.f64 1/3 (pow.f64 i 3)) (fma.f64 -1/2 (/.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) (*.f64 i i)) (fma.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) i) (fma.f64 1/24 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 4) (/.f64 1/2 (*.f64 i i)))))) (fma.f64 (fma.f64 1/2 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) (/.f64 1 i)) (*.f64 n n) (fma.f64 (pow.f64 n 3) (-.f64 (fma.f64 1/6 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 3) (fma.f64 -1 (/.f64 (log.f64 n) i) (/.f64 (log.f64 i) i))) (/.f64 1/2 (*.f64 i i))) (*.f64 n (fma.f64 -1 (log.f64 n) (log.f64 i))))))","(fma.f64 (pow.f64 n 4) (+.f64 (/.f64 1/3 (pow.f64 i 3)) (fma.f64 -1/2 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (*.f64 i i)) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (fma.f64 1/24 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 4) (/.f64 1/2 (*.f64 i i)))))) (fma.f64 (*.f64 n n) (fma.f64 1/2 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (/.f64 1 i)) (fma.f64 (pow.f64 n 3) (+.f64 (fma.f64 1/6 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) (-.f64 (/.f64 (log.f64 i) i) (/.f64 (log.f64 n) i))) (/.f64 -1/2 (*.f64 i i))) (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))))","(fma.f64 (pow.f64 n 4) (+.f64 (/.f64 1/3 (pow.f64 i 3)) (fma.f64 -1/2 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (*.f64 i i)) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (fma.f64 1/24 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 4) (/.f64 1/2 (*.f64 i i)))))) (fma.f64 (*.f64 n n) (fma.f64 1/2 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (/.f64 1 i)) (fma.f64 (pow.f64 n 3) (+.f64 (fma.f64 1/6 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) (/.f64 (-.f64 (log.f64 i) (log.f64 n)) i)) (/.f64 -1/2 (*.f64 i i))) (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))))","(-.f64 (exp.f64 i) 1)","(expm1.f64 i)","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)) 1)","(+.f64 (/.f64 (*.f64 -1/2 (*.f64 (*.f64 i i) (exp.f64 i))) n) (expm1.f64 i))","(fma.f64 -1/2 (*.f64 (/.f64 (*.f64 i i) n) (exp.f64 i)) (expm1.f64 i))","(fma.f64 -1/2 (*.f64 (/.f64 i (/.f64 n i)) (exp.f64 i)) (expm1.f64 i))","(-.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))) 1)","(+.f64 (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) (/.f64 (*.f64 n n) (exp.f64 i))) (+.f64 (/.f64 (*.f64 -1/2 (*.f64 (*.f64 i i) (exp.f64 i))) n) (expm1.f64 i)))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 i i) n) (exp.f64 i)) (expm1.f64 i)) (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8))))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 i (/.f64 n i)) (exp.f64 i)) (expm1.f64 i)) (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8))))","(-.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (pow.f64 n 3)) (+.f64 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)))) 1)","(+.f64 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 -1/48 (pow.f64 i 6) (*.f64 (pow.f64 i 4) -1/4))) (/.f64 (pow.f64 n 3) (exp.f64 i))) (+.f64 (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) (/.f64 (*.f64 n n) (exp.f64 i))) (+.f64 (/.f64 (*.f64 -1/2 (*.f64 (*.f64 i i) (exp.f64 i))) n) (expm1.f64 i))))","(+.f64 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 (pow.f64 i 4) -1/4 (*.f64 -1/48 (pow.f64 i 6)))) (/.f64 (pow.f64 n 3) (exp.f64 i))) (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 i i) n) (exp.f64 i)) (expm1.f64 i)) (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)))))","(+.f64 (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (+.f64 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 (pow.f64 i 4) -1/4 (*.f64 -1/48 (pow.f64 i 6)))) n) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)))) (fma.f64 -1/2 (*.f64 (/.f64 i (/.f64 n i)) (exp.f64 i)) (expm1.f64 i)))","(-.f64 (exp.f64 i) 1)","(expm1.f64 i)","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i)) 1)","(+.f64 (/.f64 (*.f64 -1/2 (*.f64 (*.f64 i i) (exp.f64 i))) n) (expm1.f64 i))","(fma.f64 -1/2 (*.f64 (/.f64 (*.f64 i i) n) (exp.f64 i)) (expm1.f64 i))","(fma.f64 -1/2 (*.f64 (/.f64 i (/.f64 n i)) (exp.f64 i)) (expm1.f64 i))","(-.f64 (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4))) (exp.f64 i)) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (exp.f64 i))) 1)","(+.f64 (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) (/.f64 (*.f64 n n) (exp.f64 i))) (+.f64 (/.f64 (*.f64 -1/2 (*.f64 (*.f64 i i) (exp.f64 i))) n) (expm1.f64 i)))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 i i) n) (exp.f64 i)) (expm1.f64 i)) (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8))))","(+.f64 (fma.f64 -1/2 (*.f64 (/.f64 i (/.f64 n i)) (exp.f64 i)) (expm1.f64 i)) (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8))))","(-.f64 (+.f64 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (pow.f64 n 2)) (+.f64 (*.f64 -1/2 (/.f64 (*.f64 (pow.f64 i 2) (exp.f64 i)) n)) (+.f64 (exp.f64 i) (*.f64 -1 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (pow.f64 n 3)))))) 1)","(+.f64 (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) (/.f64 (*.f64 n n) (exp.f64 i))) (-.f64 (+.f64 (fma.f64 -1/2 (/.f64 (*.f64 i i) (/.f64 n (exp.f64 i))) (exp.f64 i)) (neg.f64 (/.f64 (exp.f64 i) (/.f64 (pow.f64 n 3) (fma.f64 1/48 (pow.f64 i 6) (fma.f64 1/6 (pow.f64 i 5) (*.f64 1/4 (pow.f64 i 4)))))))) 1))","(+.f64 -1 (-.f64 (+.f64 (fma.f64 -1/2 (*.f64 (/.f64 (*.f64 i i) n) (exp.f64 i)) (exp.f64 i)) (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)))) (*.f64 (/.f64 (exp.f64 i) (pow.f64 n 3)) (fma.f64 (pow.f64 i 6) 1/48 (fma.f64 1/4 (pow.f64 i 4) (*.f64 1/6 (pow.f64 i 5)))))))","(+.f64 (-.f64 (fma.f64 -1/2 (*.f64 (/.f64 i (/.f64 n i)) (exp.f64 i)) (exp.f64 i)) (*.f64 (/.f64 (exp.f64 i) (pow.f64 n 3)) (fma.f64 (pow.f64 i 6) 1/48 (fma.f64 1/4 (pow.f64 i 4) (*.f64 1/6 (pow.f64 i 5)))))) (fma.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) -1))","(*.f64 100 n)","(*.f64 n 100)","(+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))","(*.f64 100 (+.f64 n (*.f64 (*.f64 n i) (-.f64 1/2 (/.f64 1/2 n)))))","(*.f64 100 (fma.f64 (*.f64 n i) (+.f64 1/2 (/.f64 -1/2 n)) n))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n)))","(fma.f64 100 (*.f64 (*.f64 n (*.f64 i i)) (-.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) 1/6) (/.f64 1/2 n))) (*.f64 100 (+.f64 n (*.f64 (*.f64 n i) (-.f64 1/2 (/.f64 1/2 n))))))","(*.f64 100 (fma.f64 n (fma.f64 (*.f64 i i) (+.f64 (/.f64 1/3 (*.f64 n n)) (+.f64 1/6 (/.f64 -1/2 n))) (*.f64 i (+.f64 1/2 (/.f64 -1/2 n)))) n))","(*.f64 100 (fma.f64 n (*.f64 i (+.f64 (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) (+.f64 1/6 (/.f64 -1/2 n))) i))) n))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))) (pow.f64 i 3)))) (+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))))","(fma.f64 100 (*.f64 (*.f64 n (pow.f64 i 3)) (+.f64 1/24 (-.f64 (/.f64 11/24 (*.f64 n n)) (+.f64 (/.f64 1/4 (pow.f64 n 3)) (/.f64 1/4 n))))) (fma.f64 100 (*.f64 (*.f64 n (*.f64 i i)) (-.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) 1/6) (/.f64 1/2 n))) (*.f64 100 (+.f64 n (*.f64 (*.f64 n i) (-.f64 1/2 (/.f64 1/2 n)))))))","(fma.f64 (*.f64 (+.f64 1/24 (-.f64 (-.f64 (/.f64 11/24 (*.f64 n n)) (/.f64 1/4 n)) (/.f64 1/4 (pow.f64 n 3)))) (*.f64 n (pow.f64 i 3))) 100 (*.f64 100 (fma.f64 n (fma.f64 (*.f64 i i) (+.f64 (/.f64 1/3 (*.f64 n n)) (+.f64 1/6 (/.f64 -1/2 n))) (*.f64 i (+.f64 1/2 (/.f64 -1/2 n)))) n)))","(*.f64 100 (+.f64 n (*.f64 n (+.f64 (*.f64 i (+.f64 (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) (+.f64 1/6 (/.f64 -1/2 n))) i))) (*.f64 (pow.f64 i 3) (+.f64 1/24 (-.f64 (+.f64 (/.f64 11/24 (*.f64 n n)) (/.f64 -1/4 n)) (/.f64 1/4 (pow.f64 n 3)))))))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))","(*.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))) 100)","(*.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) 100)","(*.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1)) 100)","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)))","(*.f64 100 (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))) (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))))","(*.f64 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))))) 100)","(*.f64 (+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1)) (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n))))) 100)","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))))","(fma.f64 100 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (*.f64 100 (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))) (/.f64 (*.f64 (*.f64 n (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 3)))))","(*.f64 100 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) (+.f64 (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))) (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)))) (*.f64 (/.f64 n i) (+.f64 (*.f64 (/.f64 (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n))) i) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) i)) (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1)))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)) (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4)))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))) (pow.f64 i 4))))))","(fma.f64 100 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (fma.f64 100 (/.f64 (*.f64 (*.f64 n (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 3)) (*.f64 100 (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))) (/.f64 n (/.f64 (pow.f64 i 4) (*.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 -1/2 (pow.f64 n 5) (*.f64 1/3 (pow.f64 n 4)))))))))))","(fma.f64 (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))) 100 (*.f64 100 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) (+.f64 (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)))) (/.f64 n (/.f64 (/.f64 (pow.f64 i 4) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 1/3 (pow.f64 n 4) (*.f64 -1/2 (pow.f64 n 5))))))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)))) (+.f64 (*.f64 (/.f64 n i) (+.f64 (*.f64 (/.f64 (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n))) i) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) i)) (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1))) (*.f64 (/.f64 n (/.f64 (pow.f64 i 4) (*.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n))))) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 1/3 (pow.f64 n 4) (*.f64 -1/2 (pow.f64 n 5))))))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))","(*.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) 100)","(*.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) 100)","(*.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1)) 100)","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))","(*.f64 100 (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))))","(*.f64 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) i) (/.f64 (pow.f64 n 3) i))) 100)","(*.f64 (+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1)) (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) i) (/.f64 (pow.f64 n 3) i))) 100)","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))))","(fma.f64 100 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (*.f64 100 (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) (/.f64 n (/.f64 (pow.f64 i 3) (*.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) i) (/.f64 (pow.f64 n 3) i)) (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1)) (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) i) (+.f64 (/.f64 (pow.f64 n 3) i) (/.f64 n (*.f64 (/.f64 i (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2))) i))))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (+.f64 (*.f64 -100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6)))))) (pow.f64 i 4))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))))","(fma.f64 100 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (fma.f64 100 (/.f64 n (/.f64 (pow.f64 i 3) (*.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) (fma.f64 -100 (/.f64 n (/.f64 (pow.f64 i 4) (*.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))) (fma.f64 -1/3 (pow.f64 n 4) (fma.f64 1/2 (pow.f64 n 5) (*.f64 (pow.f64 n 6) -1/6)))))) (*.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) 100))))","(+.f64 (*.f64 100 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) i) (/.f64 (pow.f64 n 3) i)) (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))))))) (/.f64 -100 (/.f64 (pow.f64 i 4) (*.f64 (*.f64 n (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 1/2 (pow.f64 n 5) (*.f64 (pow.f64 n 6) -1/6)))) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))))))","(+.f64 (*.f64 100 (+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1)) (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) i) (+.f64 (/.f64 (pow.f64 n 3) i) (/.f64 n (*.f64 (/.f64 i (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2))) i)))))) (*.f64 (/.f64 -100 (pow.f64 i 4)) (*.f64 (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 1/2 (pow.f64 n 5) (*.f64 (pow.f64 n 6) -1/6))) (*.f64 n (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n))))))","(*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(*.f64 (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i)))) 100)","(*.f64 (*.f64 (/.f64 (*.f64 n n) i) (-.f64 (log.f64 i) (log.f64 n))) 100)","(*.f64 (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n))) 100)","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))","(*.f64 100 (fma.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (*.f64 i i)) (*.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) i))) (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i))))))","(*.f64 (fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (*.f64 (/.f64 (*.f64 n n) i) (-.f64 (log.f64 i) (log.f64 n)))) 100)","(*.f64 (fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n)))) 100)","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))))","(fma.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (*.f64 i i)) (*.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) i)))) (*.f64 100 (+.f64 (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i)))) (*.f64 (pow.f64 n 4) (-.f64 (fma.f64 -1 (/.f64 (log.f64 n) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 3) i) (/.f64 (log.f64 i) (*.f64 i i)))) (/.f64 1/2 (pow.f64 i 3)))))))","(*.f64 100 (fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (fma.f64 (pow.f64 n 4) (+.f64 (-.f64 (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 (log.f64 i) (*.f64 i i))) (/.f64 (log.f64 n) (*.f64 i i))) (/.f64 -1/2 (pow.f64 i 3))) (*.f64 (/.f64 (*.f64 n n) i) (-.f64 (log.f64 i) (log.f64 n))))))","(*.f64 100 (fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (fma.f64 (pow.f64 n 4) (+.f64 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 -1/2 (pow.f64 i 3)))) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n))))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 5) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4))))))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))))","(fma.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (*.f64 i i)) (*.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) i)))) (fma.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (fma.f64 -1 (/.f64 (log.f64 n) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 3) i) (/.f64 (log.f64 i) (*.f64 i i)))) (/.f64 1/2 (pow.f64 i 3)))) (*.f64 100 (+.f64 (*.f64 (pow.f64 n 5) (fma.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 4) i) (fma.f64 -1/2 (/.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) (pow.f64 i 3)) (+.f64 (/.f64 1/2 (pow.f64 i 3)) (/.f64 1/3 (pow.f64 i 4))))))) (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i))))))))","(+.f64 (*.f64 100 (fma.f64 (pow.f64 n 4) (+.f64 (-.f64 (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 (log.f64 i) (*.f64 i i))) (/.f64 (log.f64 n) (*.f64 i i))) (/.f64 -1/2 (pow.f64 i 3))) (*.f64 (pow.f64 n 5) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 4) i) (+.f64 (/.f64 1/3 (pow.f64 i 4)) (fma.f64 -1/2 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (pow.f64 i 3)) (/.f64 1/2 (pow.f64 i 3))))))))) (*.f64 (fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (*.f64 (/.f64 (*.f64 n n) i) (-.f64 (log.f64 i) (log.f64 n)))) 100))","(*.f64 100 (+.f64 (fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n)))) (fma.f64 (pow.f64 n 5) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 4) i) (+.f64 (/.f64 1/3 (pow.f64 i 4)) (fma.f64 -1/2 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (pow.f64 i 3)) (/.f64 1/2 (pow.f64 i 3)))))) (*.f64 (pow.f64 n 4) (+.f64 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 -1/2 (pow.f64 i 3))))))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 (*.f64 (/.f64 n i) (expm1.f64 i)) 100)","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i))","(fma.f64 (*.f64 (/.f64 n i) (expm1.f64 i)) 100 (*.f64 i (*.f64 (exp.f64 i) -50)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 100 (+.f64 (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) (/.f64 (*.f64 n i) (exp.f64 i))) (/.f64 n (/.f64 i (expm1.f64 i))))))","(fma.f64 100 (fma.f64 (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) n) (/.f64 (exp.f64 i) i) (*.f64 (/.f64 n i) (expm1.f64 i))) (*.f64 i (*.f64 (exp.f64 i) -50)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (fma.f64 100 (*.f64 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 -1/48 (pow.f64 i 6) (*.f64 (pow.f64 i 4) -1/4))) (*.f64 n n)) (/.f64 (exp.f64 i) i)) (*.f64 100 (+.f64 (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) (/.f64 (*.f64 n i) (exp.f64 i))) (/.f64 n (/.f64 i (expm1.f64 i)))))))","(fma.f64 (*.f64 i (exp.f64 i)) -50 (*.f64 100 (+.f64 (fma.f64 (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) n) (/.f64 (exp.f64 i) i) (*.f64 (/.f64 n i) (expm1.f64 i))) (*.f64 (/.f64 (exp.f64 i) i) (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 (pow.f64 i 4) -1/4 (*.f64 -1/48 (pow.f64 i 6)))) (*.f64 n n))))))","(fma.f64 (*.f64 i (exp.f64 i)) -50 (*.f64 100 (+.f64 (*.f64 (/.f64 (exp.f64 i) i) (+.f64 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 (pow.f64 i 4) -1/4 (*.f64 -1/48 (pow.f64 i 6)))) (*.f64 n n)) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) n))) (*.f64 (/.f64 n i) (expm1.f64 i)))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 (*.f64 (/.f64 n i) (expm1.f64 i)) 100)","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i))","(fma.f64 (*.f64 (/.f64 n i) (expm1.f64 i)) 100 (*.f64 i (*.f64 (exp.f64 i) -50)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 100 (+.f64 (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) (/.f64 (*.f64 n i) (exp.f64 i))) (/.f64 n (/.f64 i (expm1.f64 i))))))","(fma.f64 100 (fma.f64 (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) n) (/.f64 (exp.f64 i) i) (*.f64 (/.f64 n i) (expm1.f64 i))) (*.f64 i (*.f64 (exp.f64 i) -50)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 -100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (fma.f64 -100 (/.f64 (exp.f64 i) (/.f64 (*.f64 i (*.f64 n n)) (fma.f64 1/48 (pow.f64 i 6) (fma.f64 1/6 (pow.f64 i 5) (*.f64 1/4 (pow.f64 i 4)))))) (*.f64 100 (+.f64 (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) (/.f64 (*.f64 n i) (exp.f64 i))) (/.f64 n (/.f64 i (expm1.f64 i)))))))","(fma.f64 (*.f64 i (exp.f64 i)) -50 (fma.f64 100 (fma.f64 (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) n) (/.f64 (exp.f64 i) i) (*.f64 (/.f64 n i) (expm1.f64 i))) (*.f64 (*.f64 (/.f64 (exp.f64 i) (*.f64 n (*.f64 n i))) (fma.f64 (pow.f64 i 6) 1/48 (fma.f64 1/4 (pow.f64 i 4) (*.f64 1/6 (pow.f64 i 5))))) -100)))"]],"stop":[["node limit",1]],"time":103.7119140625,"type":"simplify"},{"compiler":[[21795,10764]],"time":188.2958984375,"type":"eval"},{"alts":[["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n)))","next",16.137397176313684],["(*.f64 (/.f64 n i) (fma.f64 100 (pow.f64 (+.f64 1 (/.f64 i n)) n) -100))","fresh",49.63894533781316],["(fma.f64 (*.f64 (/.f64 n i) (expm1.f64 i)) 100 (*.f64 i (*.f64 (exp.f64 i) -50)))","fresh",27.640886929545022],["(*.f64 100 (fma.f64 (*.f64 n i) (+.f64 1/2 (/.f64 -1/2 n)) n))","fresh",27.56935303097185],["(/.f64 1 (/.f64 (/.f64 i n) (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100)))","fresh",16.46448049453418],["(*.f64 100 (+.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))))","fresh",54.365612603733595],["(*.f64 100 (/.f64 i (/.f64 i n)))","fresh",33.57854672403444],["(/.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i) (/.f64 1 n))","fresh",16.445518795188192]],"compiler":[[15,9],[16,11],[16,11],[14,10],[17,11],[61,35],[9,6],[17,12],[15,9],[16,11],[16,11],[14,10],[17,11],[61,35],[9,6],[17,12]],"count":[[510,8]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[508,7],"picked":[1,0]}],"min-error":[0.0078125],"time":165.51806640625,"type":"prune"},{"compiler":[[49,10]],"locations":[["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n)))",0.08270967631368524,true],["(log1p.f64 (/.f64 i n))",4.604440684885901,true],["(*.f64 n (log1p.f64 (/.f64 i n)))",10.600262181759204,true],["(/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n))",10.659657892346084,true]],"time":7.80908203125,"type":"localize"},{"count":[[4,96]],"series":[["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n)))","i","-inf",0.422119140625],["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n)))","i","inf",0.33203125],["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n)))","i","0",0.251953125],["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n)))","n","-inf",0.254150390625],["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n)))","n","inf",0.267822265625],["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n)))","n","0",0.378173828125],["(log1p.f64 (/.f64 i n))","n","-inf",0.233154296875],["(log1p.f64 (/.f64 i n))","n","inf",0.217041015625],["(log1p.f64 (/.f64 i n))","n","0",0.217041015625],["(log1p.f64 (/.f64 i n))","i","-inf",0.243896484375],["(log1p.f64 (/.f64 i n))","i","inf",0.26708984375],["(log1p.f64 (/.f64 i n))","i","0",0.642822265625],["(*.f64 n (log1p.f64 (/.f64 i n)))","i","-inf",0.25],["(*.f64 n (log1p.f64 (/.f64 i n)))","i","inf",0.26904296875],["(*.f64 n (log1p.f64 (/.f64 i n)))","i","0",0.19091796875],["(*.f64 n (log1p.f64 (/.f64 i n)))","n","-inf",0.220947265625],["(*.f64 n (log1p.f64 (/.f64 i n)))","n","inf",0.237060546875],["(*.f64 n (log1p.f64 (/.f64 i n)))","n","0",0.294189453125],["(/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n))","i","-inf",0.509033203125],["(/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n))","i","inf",0.39990234375],["(/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n))","i","0",0.298095703125],["(/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n))","n","-inf",0.419921875],["(/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n))","n","inf",0.327880859375],["(/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n))","n","0",0.574951171875]],"time":8.282958984375,"type":"series"},{"count":[[4,146]],"egraph":[[2,2841,52,0.030834708],[1,212,52,0.004475916],[0,10,52,0.000322166]],"inputs":[["(/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n))","(*.f64 n (log1p.f64 (/.f64 i n)))","(log1p.f64 (/.f64 i n))","(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 n i)) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (/.f64 n i)) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 n i)) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (/.f64 n i)) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (+.f64 (/.f64 i n) 1) n) (/.f64 i n)) (/.f64 n i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 n i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) (pow.f64 (cbrt.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 2) (cbrt.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 2)) (*.f64 (cbrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) (sqrt.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (*.f64 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 1 (/.f64 (neg.f64 i) n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 n i) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 i) (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 2)) i) (/.f64 (cbrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) i) (/.f64 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 2)) 1) (/.f64 (cbrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 1) (/.f64 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 i n)) -2) (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (cbrt.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 2)) (cbrt.f64 (pow.f64 (/.f64 i n) 2))) (cbrt.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (cbrt.f64 (pow.f64 (/.f64 i n) 2))) (/.f64 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (cbrt.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 i n) -1/2) (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (sqrt.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 2)) (sqrt.f64 (/.f64 i n))) (/.f64 (cbrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (sqrt.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 1) (/.f64 n i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (neg.f64 i)) (neg.f64 n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) 1) n)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) (pow.f64 (cbrt.f64 n) 2)) (cbrt.f64 n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) (sqrt.f64 n)) (sqrt.f64 n))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 i n) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 3) (pow.f64 (/.f64 i n) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (/.f64 i n) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))) 2)) (cbrt.f64 (log.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))) (sqrt.f64 (log.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 (neg.f64 i) n)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (/.f64 n i)) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 3) (pow.f64 (/.f64 i n) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (/.f64 i n) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 n (log1p.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 i n) 1) n)) 2)) (log.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 i n) 1) n))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (+.f64 (/.f64 i n) 1) n))) (log.f64 (sqrt.f64 (pow.f64 (+.f64 (/.f64 i n) 1) n))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 n (log1p.f64 (/.f64 i n))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 n (log1p.f64 (/.f64 i n))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 n (log1p.f64 (/.f64 i n))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 2)) (cbrt.f64 (log.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) (sqrt.f64 (log.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 n (log1p.f64 (/.f64 i n))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (+.f64 (/.f64 i n) 1) n))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 n (log1p.f64 (/.f64 i n))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (log1p.f64 (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 i n) 1)) 2)) (log.f64 (cbrt.f64 (+.f64 (/.f64 i n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (+.f64 (/.f64 i n) 1))) (log.f64 (sqrt.f64 (+.f64 (/.f64 i n) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log1p.f64 (pow.f64 (/.f64 i n) 3)) (log.f64 (+.f64 1 (-.f64 (pow.f64 (/.f64 i n) 2) (/.f64 i n)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (log1p.f64 (/.f64 i n)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (-.f64 1 (pow.f64 (/.f64 i n) 2))) (log.f64 (-.f64 1 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (log1p.f64 (/.f64 i n)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (log1p.f64 (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (log1p.f64 (/.f64 i n))) (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 i n))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (log1p.f64 (/.f64 i n))) 2) (cbrt.f64 (log1p.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (log1p.f64 (/.f64 i n))) (sqrt.f64 (log1p.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (log1p.f64 (/.f64 i n)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (/.f64 i n)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (log1p.f64 (/.f64 i n)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (log1p.f64 (/.f64 i n))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (log1p.f64 (/.f64 i n))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (log1p.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (log1p.f64 (/.f64 i n)))) 2)) (cbrt.f64 (log.f64 (log1p.f64 (/.f64 i n)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (log1p.f64 (/.f64 i n))))) (sqrt.f64 (log.f64 (log1p.f64 (/.f64 i n)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (log1p.f64 (/.f64 i n)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 (/.f64 i n) 1))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (log1p.f64 (/.f64 i n)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (log1p.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (log1p.f64 (/.f64 i n))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (log1p.f64 (/.f64 i n))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (log1p.f64 (/.f64 i n)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (log1p.f64 (/.f64 i n)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (log1p.f64 (/.f64 i n)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (log1p.f64 (/.f64 i n))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (/.f64 n i)) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 100)) 2)) (log.f64 (cbrt.f64 (pow.f64 (pow.f64 (exp.f64 (/.f64 n i)) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 100))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 (/.f64 n i)) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 100))) (log.f64 (sqrt.f64 (pow.f64 (pow.f64 (exp.f64 (/.f64 n i)) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 100))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 100 (/.f64 (/.f64 i n) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 i n) (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 i n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100)) (/.f64 (neg.f64 i) n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i) (/.f64 1 n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) 1) (/.f64 i n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (cbrt.f64 (pow.f64 (/.f64 i n) 2))) (cbrt.f64 (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (sqrt.f64 (/.f64 i n))) (sqrt.f64 (/.f64 i n)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 100) (/.f64 (neg.f64 i) n))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (neg.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) (/.f64 (neg.f64 i) n))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (sqrt.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 10) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 i n) (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100)))) 2)) (cbrt.f64 (log.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100))))) (sqrt.f64 (log.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (pow.f64 (exp.f64 (/.f64 n i)) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 100))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (sqrt.f64 (*.f64 n (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 10)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 (/.f64 n i) 100))) 1) 1))))))"]],"rules":[["egg-rr",35],["egg-rr",29],["egg-rr",24],["egg-rr",58]],"stop":[["node limit",1]],"time":65.757080078125,"type":"rewrite"},{"count":[[242,284]],"egraph":[[2,4057,3798,0.021788042],[1,1074,3990,0.007913958],[0,324,4287,0.001768417]],"inputs":[["(/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)","(+.f64 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))) (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(+.f64 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i) (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)) (/.f64 (log.f64 i) (pow.f64 i 2)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))))","(+.f64 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i) (+.f64 (*.f64 (pow.f64 n 5) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4)))))))) (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)) (/.f64 (log.f64 i) (pow.f64 i 2)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3))))))))","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i))))","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (+.f64 (*.f64 -1/2 (*.f64 i (exp.f64 i))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 2) i)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (+.f64 (*.f64 -1/2 (*.f64 i (exp.f64 i))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i)))))","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4))) (exp.f64 i)) (*.f64 n i)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i)))))","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 2) i))) (+.f64 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i)) (*.f64 -1/2 (*.f64 i (exp.f64 i))))))","n","(+.f64 n (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))))","(+.f64 n (+.f64 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))) (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))))","(+.f64 n (+.f64 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))) (+.f64 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))) (*.f64 n (*.f64 (pow.f64 i 3) (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))))))))","(/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2)) (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i) (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i) (+.f64 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3)) (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4)))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))) (pow.f64 i 4)))))","(/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i) (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6)))))) (pow.f64 i 4))) (+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i) (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3)))))","(*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)))","(+.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) (/.f64 (pow.f64 n 2) i))","(+.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) (+.f64 (/.f64 (pow.f64 n 2) i) (*.f64 -1/2 (/.f64 (pow.f64 n 3) (pow.f64 i 2)))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 n 4) (pow.f64 i 3))) (+.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) (+.f64 (/.f64 (pow.f64 n 2) i) (*.f64 -1/2 (/.f64 (pow.f64 n 3) (pow.f64 i 2))))))","i","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) n)) i)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) n)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 2))) i))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) n)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 2))) (+.f64 i (*.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 3))))))","i","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) n)) i)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) n)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 2))) i))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) n)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 2))) (+.f64 i (*.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 3))))))","i","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) n)) i)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) n)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 2))) i))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) n)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 2))) (+.f64 i (*.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 3))))))","(*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))","(+.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))) (/.f64 (pow.f64 n 2) i))","(+.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))) (+.f64 (/.f64 (pow.f64 n 2) i) (*.f64 -1/2 (/.f64 (pow.f64 n 3) (pow.f64 i 2)))))","(+.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 n 4) (pow.f64 i 3))) (+.f64 (/.f64 (pow.f64 n 2) i) (*.f64 -1/2 (/.f64 (pow.f64 n 3) (pow.f64 i 2))))))","(*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))","(+.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))) (/.f64 (pow.f64 n 2) i))","(+.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))) (+.f64 (/.f64 (pow.f64 n 2) i) (*.f64 -1/2 (/.f64 (pow.f64 n 3) (pow.f64 i 2)))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 n 4) (pow.f64 i 3))) (+.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))) (+.f64 (/.f64 (pow.f64 n 2) i) (*.f64 -1/2 (/.f64 (pow.f64 n 3) (pow.f64 i 2))))))","(/.f64 i n)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) (pow.f64 n 2))) (/.f64 i n))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) (pow.f64 n 2))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3))) (/.f64 i n)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 4))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) (pow.f64 n 2))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3))) (/.f64 i n))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))","(+.f64 (/.f64 n i) (+.f64 (log.f64 (/.f64 1 n)) (*.f64 -1 (log.f64 (/.f64 1 i)))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 n 2) (pow.f64 i 2))) (+.f64 (/.f64 n i) (+.f64 (log.f64 (/.f64 1 n)) (*.f64 -1 (log.f64 (/.f64 1 i))))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 n 3) (pow.f64 i 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 n 2) (pow.f64 i 2))) (+.f64 (/.f64 n i) (+.f64 (log.f64 (/.f64 1 n)) (*.f64 -1 (log.f64 (/.f64 1 i)))))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (+.f64 (log.f64 (neg.f64 (/.f64 1 n))) (/.f64 n i)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 n 2) (pow.f64 i 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (+.f64 (log.f64 (neg.f64 (/.f64 1 n))) (/.f64 n i))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 n 3) (pow.f64 i 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 n 2) (pow.f64 i 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (+.f64 (log.f64 (neg.f64 (/.f64 1 n))) (/.f64 n i)))))","(+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))","(+.f64 (*.f64 -1 (log.f64 n)) (+.f64 (/.f64 n i) (log.f64 i)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 n 2) (pow.f64 i 2))) (+.f64 (*.f64 -1 (log.f64 n)) (+.f64 (/.f64 n i) (log.f64 i))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 n 3) (pow.f64 i 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 n 2) (pow.f64 i 2))) (+.f64 (*.f64 -1 (log.f64 n)) (+.f64 (/.f64 n i) (log.f64 i)))))","(/.f64 i n)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) (pow.f64 n 2))) (/.f64 i n))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) (pow.f64 n 2))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3))) (/.f64 i n)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 4))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) (pow.f64 n 2))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3))) (/.f64 i n))))","(/.f64 i n)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) (pow.f64 n 2))) (/.f64 i n))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) (pow.f64 n 2))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3))) (/.f64 i n)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 4))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) (pow.f64 n 2))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3))) (/.f64 i n))))","(*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 5) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4))))))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 -100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))","(*.f64 100 n)","(+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n)))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))) (pow.f64 i 3)))) (+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)) (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4)))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))) (pow.f64 i 4))))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (+.f64 (*.f64 -100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6)))))) (pow.f64 i 4))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)","(/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i))))","(*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n)))","(+.f64 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))) (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(fma.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (*.f64 i i)) (*.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) i))) (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i)))))","(fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n))))","(+.f64 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i) (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)) (/.f64 (log.f64 i) (pow.f64 i 2)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))))","(+.f64 (fma.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (*.f64 i i)) (*.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) i))) (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i))))) (*.f64 (pow.f64 n 4) (-.f64 (fma.f64 -1 (/.f64 (log.f64 n) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 3) i) (/.f64 (log.f64 i) (*.f64 i i)))) (/.f64 1/2 (pow.f64 i 3)))))","(fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (fma.f64 (pow.f64 n 4) (+.f64 (-.f64 (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 (log.f64 i) (*.f64 i i))) (/.f64 (log.f64 n) (*.f64 i i))) (/.f64 -1/2 (pow.f64 i 3))) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n)))))","(fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (fma.f64 (pow.f64 n 4) (+.f64 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 -1/2 (pow.f64 i 3)))) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n)))))","(+.f64 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))) (+.f64 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i) (+.f64 (*.f64 (pow.f64 n 5) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4)))))))) (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)) (/.f64 (log.f64 i) (pow.f64 i 2)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3))))))))","(+.f64 (fma.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (*.f64 i i)) (*.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) i))) (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i))))) (fma.f64 (pow.f64 n 5) (fma.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 4) i) (fma.f64 -1/2 (/.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) (pow.f64 i 3)) (+.f64 (/.f64 1/2 (pow.f64 i 3)) (/.f64 1/3 (pow.f64 i 4)))))) (*.f64 (pow.f64 n 4) (-.f64 (fma.f64 -1 (/.f64 (log.f64 n) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 3) i) (/.f64 (log.f64 i) (*.f64 i i)))) (/.f64 1/2 (pow.f64 i 3))))))","(+.f64 (fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n)))) (fma.f64 (pow.f64 n 4) (+.f64 (-.f64 (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 (log.f64 i) (*.f64 i i))) (/.f64 (log.f64 n) (*.f64 i i))) (/.f64 -1/2 (pow.f64 i 3))) (*.f64 (pow.f64 n 5) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 4) i) (+.f64 (/.f64 1/3 (pow.f64 i 4)) (fma.f64 -1/2 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (pow.f64 i 3)) (/.f64 1/2 (pow.f64 i 3)))))))))","(+.f64 (fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n)))) (fma.f64 (pow.f64 n 5) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 4) i) (+.f64 (/.f64 1/3 (pow.f64 i 4)) (fma.f64 -1/2 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (pow.f64 i 3)) (/.f64 1/2 (pow.f64 i 3)))))) (*.f64 (pow.f64 n 4) (+.f64 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 -1/2 (pow.f64 i 3)))))))","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 n (/.f64 i (expm1.f64 i)))","(/.f64 (expm1.f64 i) (/.f64 i n))","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i))))","(+.f64 (/.f64 n (/.f64 i (expm1.f64 i))) (*.f64 -1/2 (*.f64 i (exp.f64 i))))","(fma.f64 -1/2 (*.f64 i (exp.f64 i)) (/.f64 n (/.f64 i (expm1.f64 i))))","(fma.f64 -1/2 (*.f64 i (exp.f64 i)) (/.f64 (expm1.f64 i) (/.f64 i n)))","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (+.f64 (*.f64 -1/2 (*.f64 i (exp.f64 i))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i))))","(+.f64 (/.f64 n (/.f64 i (expm1.f64 i))) (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (*.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i))))","(fma.f64 (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) n) (/.f64 (exp.f64 i) i) (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (/.f64 n (/.f64 i (expm1.f64 i)))))","(+.f64 (/.f64 (expm1.f64 i) (/.f64 i n)) (*.f64 (exp.f64 i) (+.f64 (*.f64 i -1/2) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) (*.f64 n i)))))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 2) i)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (+.f64 (*.f64 -1/2 (*.f64 i (exp.f64 i))) (/.f64 (*.f64 (+.f64 (*.f64 1/8 (pow.f64 i 4)) (*.f64 1/3 (pow.f64 i 3))) (exp.f64 i)) (*.f64 n i)))))","(+.f64 (+.f64 (/.f64 n (/.f64 i (expm1.f64 i))) (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (*.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i)))) (*.f64 (/.f64 (fma.f64 -1/48 (pow.f64 i 6) (fma.f64 -1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) -1/4))) (*.f64 n n)) (/.f64 (exp.f64 i) i)))","(fma.f64 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 (pow.f64 i 4) -1/4 (*.f64 -1/48 (pow.f64 i 6)))) (*.f64 n n)) (/.f64 (exp.f64 i) i) (fma.f64 (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) n) (/.f64 (exp.f64 i) i) (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (/.f64 n (/.f64 i (expm1.f64 i))))))","(+.f64 (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (/.f64 (expm1.f64 i) (/.f64 i n))) (*.f64 (/.f64 (exp.f64 i) i) (+.f64 (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) n) (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 (pow.f64 i 4) -1/4 (*.f64 -1/48 (pow.f64 i 6)))) (*.f64 n n)))))","(/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)","(/.f64 n (/.f64 i (expm1.f64 i)))","(/.f64 (expm1.f64 i) (/.f64 i n))","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i))))","(+.f64 (/.f64 n (/.f64 i (expm1.f64 i))) (*.f64 -1/2 (*.f64 i (exp.f64 i))))","(fma.f64 -1/2 (*.f64 i (exp.f64 i)) (/.f64 n (/.f64 i (expm1.f64 i))))","(fma.f64 -1/2 (*.f64 i (exp.f64 i)) (/.f64 (expm1.f64 i) (/.f64 i n)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4))) (exp.f64 i)) (*.f64 n i)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (*.f64 -1/2 (*.f64 i (exp.f64 i)))))","(+.f64 (/.f64 n (/.f64 i (expm1.f64 i))) (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (*.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i))))","(fma.f64 (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) n) (/.f64 (exp.f64 i) i) (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (/.f64 n (/.f64 i (expm1.f64 i)))))","(+.f64 (/.f64 (expm1.f64 i) (/.f64 i n)) (*.f64 (exp.f64 i) (+.f64 (*.f64 i -1/2) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) (*.f64 n i)))))","(+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i) (+.f64 (*.f64 -1 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 2) i))) (+.f64 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i)) (*.f64 -1/2 (*.f64 i (exp.f64 i))))))","(+.f64 (/.f64 n (/.f64 i (expm1.f64 i))) (fma.f64 -1 (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (/.f64 (fma.f64 1/48 (pow.f64 i 6) (fma.f64 1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) 1/4))) i)) (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (*.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i)))))","(+.f64 (/.f64 n (/.f64 i (expm1.f64 i))) (-.f64 (fma.f64 -1/2 (*.f64 i (exp.f64 i)) (*.f64 (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) n) (/.f64 (exp.f64 i) i))) (*.f64 (/.f64 (exp.f64 i) i) (/.f64 (fma.f64 (pow.f64 i 6) 1/48 (fma.f64 1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) 1/4))) (*.f64 n n)))))","(+.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 i -1/2) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) (*.f64 n i)))) (-.f64 (/.f64 (expm1.f64 i) (/.f64 i n)) (*.f64 (/.f64 (exp.f64 i) (*.f64 n (*.f64 n i))) (fma.f64 (pow.f64 i 6) 1/48 (fma.f64 1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) 1/4))))))","n","(+.f64 n (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))))","(+.f64 n (*.f64 (*.f64 n i) (-.f64 1/2 (/.f64 1/2 n))))","(fma.f64 n (*.f64 i (+.f64 1/2 (/.f64 -1/2 n))) n)","(fma.f64 (*.f64 n i) (-.f64 1/2 (/.f64 1/2 n)) n)","(+.f64 n (+.f64 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))) (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))))","(+.f64 n (*.f64 n (+.f64 (*.f64 (*.f64 i i) (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n)))) (*.f64 i (-.f64 1/2 (/.f64 1/2 n))))))","(fma.f64 n (fma.f64 (*.f64 i i) (+.f64 1/6 (-.f64 (/.f64 1/3 (*.f64 n n)) (/.f64 1/2 n))) (*.f64 i (+.f64 1/2 (/.f64 -1/2 n)))) n)","(fma.f64 n (*.f64 i (+.f64 (-.f64 1/2 (/.f64 1/2 n)) (*.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n))) i))) n)","(+.f64 n (+.f64 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))) (+.f64 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))) (*.f64 n (*.f64 (pow.f64 i 3) (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))))))))","(+.f64 n (fma.f64 n (*.f64 (*.f64 i i) (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n)))) (*.f64 n (+.f64 (*.f64 i (-.f64 1/2 (/.f64 1/2 n))) (*.f64 (pow.f64 i 3) (-.f64 (+.f64 1/24 (/.f64 11/24 (*.f64 n n))) (+.f64 (/.f64 1/4 (pow.f64 n 3)) (/.f64 1/4 n))))))))","(+.f64 n (*.f64 n (+.f64 (*.f64 (*.f64 i i) (+.f64 1/6 (-.f64 (/.f64 1/3 (*.f64 n n)) (/.f64 1/2 n)))) (fma.f64 i (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 (pow.f64 i 3) (+.f64 1/24 (-.f64 (-.f64 (/.f64 (/.f64 11/24 n) n) (/.f64 1/4 n)) (/.f64 1/4 (pow.f64 n 3)))))))))","(+.f64 n (*.f64 n (+.f64 (*.f64 (pow.f64 i 3) (+.f64 1/24 (+.f64 (/.f64 11/24 (*.f64 n n)) (+.f64 (/.f64 -1/4 n) (/.f64 -1/4 (pow.f64 n 3)))))) (*.f64 i (+.f64 (-.f64 1/2 (/.f64 1/2 n)) (*.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n))) i))))))","(/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)","(/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))))","(*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n)))))","(*.f64 (/.f64 n i) (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2)) (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))","(+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))) (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))))","(+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))))","(+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1)) (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i) (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))))","(+.f64 (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))) (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))) (/.f64 n (/.f64 (pow.f64 i 3) (*.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))))))","(+.f64 (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))) (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4)))))))","(+.f64 (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n))) (*.f64 (/.f64 n i) (+.f64 (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1) (/.f64 (*.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4)))) (*.f64 i i)))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i) (+.f64 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3)) (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4)))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))) (pow.f64 i 4)))))","(+.f64 (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))) (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))) (+.f64 (/.f64 n (/.f64 (pow.f64 i 3) (*.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))))) (/.f64 n (/.f64 (pow.f64 i 4) (*.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 -1/2 (pow.f64 n 5) (*.f64 (pow.f64 n 4) 1/3))))))))","(+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) (+.f64 (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))) (+.f64 (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))))) (*.f64 (/.f64 n (pow.f64 i 4)) (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 (pow.f64 n 4) 1/3 (*.f64 (pow.f64 n 5) -1/2))))))))","(+.f64 (*.f64 (/.f64 n i) (+.f64 (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1) (/.f64 (*.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4)))) (*.f64 i i)))) (+.f64 (*.f64 (/.f64 n (pow.f64 i 4)) (*.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 (pow.f64 n 4) 1/3 (*.f64 (pow.f64 n 5) -1/2))))) (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)))))","(/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)","(/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))))","(*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))))","(*.f64 (/.f64 n i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))","(+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))))","(+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))))","(+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1)) (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n))))","(+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i) (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))))","(+.f64 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) (/.f64 n (/.f64 (pow.f64 i 3) (*.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))))))","(+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (+.f64 (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))))))","(+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1)) (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) i) (+.f64 (/.f64 (pow.f64 n 3) i) (/.f64 (*.f64 n (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4)))) (*.f64 i i)))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6)))))) (pow.f64 i 4))) (+.f64 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)) (+.f64 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i) (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3)))))","(fma.f64 -1 (/.f64 (*.f64 (*.f64 n (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))) (fma.f64 -1/3 (pow.f64 n 4) (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6))))) (pow.f64 i 4)) (+.f64 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) (/.f64 n (/.f64 (pow.f64 i 3) (*.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))))))","(-.f64 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (+.f64 (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))))) (*.f64 (/.f64 n (pow.f64 i 4)) (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6)))))))","(-.f64 (+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1)) (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) i) (+.f64 (/.f64 (pow.f64 n 3) i) (/.f64 (*.f64 n (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4)))) (*.f64 i i))))) (*.f64 (/.f64 n (pow.f64 i 4)) (*.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6)))))))","(*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)))","(*.f64 n (fma.f64 -1 (log.f64 n) (log.f64 i)))","(*.f64 n (-.f64 (log.f64 i) (log.f64 n)))","(+.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) (/.f64 (pow.f64 n 2) i))","(fma.f64 n (fma.f64 -1 (log.f64 n) (log.f64 i)) (/.f64 (*.f64 n n) i))","(fma.f64 n (-.f64 (log.f64 i) (log.f64 n)) (/.f64 n (/.f64 i n)))","(+.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) (+.f64 (/.f64 (pow.f64 n 2) i) (*.f64 -1/2 (/.f64 (pow.f64 n 3) (pow.f64 i 2)))))","(+.f64 (fma.f64 n (fma.f64 -1 (log.f64 n) (log.f64 i)) (/.f64 (*.f64 n n) i)) (*.f64 -1/2 (/.f64 (pow.f64 n 3) (*.f64 i i))))","(fma.f64 n (-.f64 (log.f64 i) (log.f64 n)) (fma.f64 -1/2 (/.f64 (pow.f64 n 3) (*.f64 i i)) (/.f64 n (/.f64 i n))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 n 4) (pow.f64 i 3))) (+.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) (+.f64 (/.f64 (pow.f64 n 2) i) (*.f64 -1/2 (/.f64 (pow.f64 n 3) (pow.f64 i 2))))))","(fma.f64 1/3 (/.f64 (pow.f64 n 4) (pow.f64 i 3)) (+.f64 (fma.f64 n (fma.f64 -1 (log.f64 n) (log.f64 i)) (/.f64 (*.f64 n n) i)) (*.f64 -1/2 (/.f64 (pow.f64 n 3) (*.f64 i i)))))","(fma.f64 n (-.f64 (log.f64 i) (log.f64 n)) (fma.f64 1/3 (/.f64 (pow.f64 n 4) (pow.f64 i 3)) (fma.f64 -1/2 (/.f64 (pow.f64 n 3) (*.f64 i i)) (/.f64 n (/.f64 i n)))))","i","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) n)) i)","(fma.f64 -1/2 (/.f64 (*.f64 i i) n) i)","(fma.f64 -1/2 (/.f64 i (/.f64 n i)) i)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) n)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 2))) i))","(fma.f64 -1/2 (/.f64 (*.f64 i i) n) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (*.f64 n n)) i))","(fma.f64 -1/2 (/.f64 i (/.f64 n i)) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (*.f64 n n)) i))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) n)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 2))) (+.f64 i (*.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 3))))))","(fma.f64 -1/2 (/.f64 (*.f64 i i) n) (+.f64 (fma.f64 1/3 (/.f64 (pow.f64 i 3) (*.f64 n n)) i) (/.f64 (*.f64 (pow.f64 i 4) -1/4) (pow.f64 n 3))))","(fma.f64 -1/2 (/.f64 i (/.f64 n i)) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (*.f64 n n)) (fma.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 3)) i)))","i","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) n)) i)","(fma.f64 -1/2 (/.f64 (*.f64 i i) n) i)","(fma.f64 -1/2 (/.f64 i (/.f64 n i)) i)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) n)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 2))) i))","(fma.f64 -1/2 (/.f64 (*.f64 i i) n) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (*.f64 n n)) i))","(fma.f64 -1/2 (/.f64 i (/.f64 n i)) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (*.f64 n n)) i))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) n)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 2))) (+.f64 i (*.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 3))))))","(fma.f64 -1/2 (/.f64 (*.f64 i i) n) (+.f64 (fma.f64 1/3 (/.f64 (pow.f64 i 3) (*.f64 n n)) i) (/.f64 (*.f64 (pow.f64 i 4) -1/4) (pow.f64 n 3))))","(fma.f64 -1/2 (/.f64 i (/.f64 n i)) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (*.f64 n n)) (fma.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 3)) i)))","i","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) n)) i)","(fma.f64 -1/2 (/.f64 (*.f64 i i) n) i)","(fma.f64 -1/2 (/.f64 i (/.f64 n i)) i)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) n)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 2))) i))","(fma.f64 -1/2 (/.f64 (*.f64 i i) n) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (*.f64 n n)) i))","(fma.f64 -1/2 (/.f64 i (/.f64 n i)) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (*.f64 n n)) i))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) n)) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 2))) (+.f64 i (*.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 3))))))","(fma.f64 -1/2 (/.f64 (*.f64 i i) n) (+.f64 (fma.f64 1/3 (/.f64 (pow.f64 i 3) (*.f64 n n)) i) (/.f64 (*.f64 (pow.f64 i 4) -1/4) (pow.f64 n 3))))","(fma.f64 -1/2 (/.f64 i (/.f64 n i)) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (*.f64 n n)) (fma.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 3)) i)))","(*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))","(*.f64 n (fma.f64 -1 (log.f64 n) (log.f64 i)))","(*.f64 n (-.f64 (log.f64 i) (log.f64 n)))","(+.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))) (/.f64 (pow.f64 n 2) i))","(fma.f64 n (fma.f64 -1 (log.f64 n) (log.f64 i)) (/.f64 (*.f64 n n) i))","(fma.f64 n (-.f64 (log.f64 i) (log.f64 n)) (/.f64 n (/.f64 i n)))","(+.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))) (+.f64 (/.f64 (pow.f64 n 2) i) (*.f64 -1/2 (/.f64 (pow.f64 n 3) (pow.f64 i 2)))))","(+.f64 (fma.f64 n (fma.f64 -1 (log.f64 n) (log.f64 i)) (/.f64 (*.f64 n n) i)) (*.f64 -1/2 (/.f64 (pow.f64 n 3) (*.f64 i i))))","(fma.f64 n (-.f64 (log.f64 i) (log.f64 n)) (fma.f64 -1/2 (/.f64 (pow.f64 n 3) (*.f64 i i)) (/.f64 n (/.f64 i n))))","(+.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 n 4) (pow.f64 i 3))) (+.f64 (/.f64 (pow.f64 n 2) i) (*.f64 -1/2 (/.f64 (pow.f64 n 3) (pow.f64 i 2))))))","(fma.f64 1/3 (/.f64 (pow.f64 n 4) (pow.f64 i 3)) (+.f64 (fma.f64 n (fma.f64 -1 (log.f64 n) (log.f64 i)) (/.f64 (*.f64 n n) i)) (*.f64 -1/2 (/.f64 (pow.f64 n 3) (*.f64 i i)))))","(fma.f64 n (-.f64 (log.f64 i) (log.f64 n)) (fma.f64 1/3 (/.f64 (pow.f64 n 4) (pow.f64 i 3)) (fma.f64 -1/2 (/.f64 (pow.f64 n 3) (*.f64 i i)) (/.f64 n (/.f64 i n)))))","(*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))","(*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))","(*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))","(+.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))) (/.f64 (pow.f64 n 2) i))","(fma.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))) (/.f64 (*.f64 n n) i))","(fma.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))) (/.f64 n (/.f64 i n)))","(+.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))) (+.f64 (/.f64 (pow.f64 n 2) i) (*.f64 -1/2 (/.f64 (pow.f64 n 3) (pow.f64 i 2)))))","(+.f64 (fma.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))) (/.f64 (*.f64 n n) i)) (*.f64 -1/2 (/.f64 (pow.f64 n 3) (*.f64 i i))))","(fma.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))) (fma.f64 -1/2 (/.f64 (pow.f64 n 3) (*.f64 i i)) (/.f64 n (/.f64 i n))))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 n 4) (pow.f64 i 3))) (+.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))) (+.f64 (/.f64 (pow.f64 n 2) i) (*.f64 -1/2 (/.f64 (pow.f64 n 3) (pow.f64 i 2))))))","(fma.f64 1/3 (/.f64 (pow.f64 n 4) (pow.f64 i 3)) (+.f64 (fma.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))) (/.f64 (*.f64 n n) i)) (*.f64 -1/2 (/.f64 (pow.f64 n 3) (*.f64 i i)))))","(fma.f64 1/3 (/.f64 (pow.f64 n 4) (pow.f64 i 3)) (fma.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))) (fma.f64 -1/2 (/.f64 (pow.f64 n 3) (*.f64 i i)) (/.f64 n (/.f64 i n)))))","(/.f64 i n)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) (pow.f64 n 2))) (/.f64 i n))","(fma.f64 -1/2 (/.f64 (*.f64 i i) (*.f64 n n)) (/.f64 i n))","(fma.f64 -1/2 (*.f64 (/.f64 i n) (/.f64 i n)) (/.f64 i n))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) (pow.f64 n 2))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3))) (/.f64 i n)))","(fma.f64 -1/2 (/.f64 (*.f64 i i) (*.f64 n n)) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3)) (/.f64 i n)))","(fma.f64 -1/2 (*.f64 (/.f64 i n) (/.f64 i n)) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3)) (/.f64 i n)))","(fma.f64 -1/2 (*.f64 (/.f64 i n) (/.f64 i n)) (fma.f64 1/3 (pow.f64 (/.f64 i n) 3) (/.f64 i n)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 4))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) (pow.f64 n 2))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3))) (/.f64 i n))))","(fma.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 4)) (fma.f64 -1/2 (/.f64 (*.f64 i i) (*.f64 n n)) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3)) (/.f64 i n))))","(fma.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 4)) (fma.f64 -1/2 (*.f64 (/.f64 i n) (/.f64 i n)) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3)) (/.f64 i n))))","(fma.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 4)) (fma.f64 -1/2 (*.f64 (/.f64 i n) (/.f64 i n)) (fma.f64 1/3 (pow.f64 (/.f64 i n) 3) (/.f64 i n))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))","(fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))","(-.f64 (log.f64 i) (log.f64 n))","(+.f64 (/.f64 n i) (+.f64 (log.f64 (/.f64 1 n)) (*.f64 -1 (log.f64 (/.f64 1 i)))))","(+.f64 (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))) (/.f64 n i))","(+.f64 (log.f64 i) (-.f64 (/.f64 n i) (log.f64 n)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 n 2) (pow.f64 i 2))) (+.f64 (/.f64 n i) (+.f64 (log.f64 (/.f64 1 n)) (*.f64 -1 (log.f64 (/.f64 1 i))))))","(fma.f64 -1/2 (/.f64 (*.f64 n n) (*.f64 i i)) (+.f64 (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))) (/.f64 n i)))","(+.f64 (-.f64 (log.f64 i) (log.f64 n)) (fma.f64 -1/2 (/.f64 (*.f64 n n) (*.f64 i i)) (/.f64 n i)))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 n 3) (pow.f64 i 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 n 2) (pow.f64 i 2))) (+.f64 (/.f64 n i) (+.f64 (log.f64 (/.f64 1 n)) (*.f64 -1 (log.f64 (/.f64 1 i)))))))","(fma.f64 1/3 (/.f64 (pow.f64 n 3) (pow.f64 i 3)) (fma.f64 -1/2 (/.f64 (*.f64 n n) (*.f64 i i)) (+.f64 (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))) (/.f64 n i))))","(fma.f64 1/3 (/.f64 (pow.f64 n 3) (pow.f64 i 3)) (+.f64 (-.f64 (log.f64 i) (log.f64 n)) (fma.f64 -1/2 (/.f64 (*.f64 n n) (*.f64 i i)) (/.f64 n i))))","(fma.f64 1/3 (pow.f64 (/.f64 n i) 3) (+.f64 (-.f64 (log.f64 i) (log.f64 n)) (fma.f64 -1/2 (/.f64 (*.f64 n n) (*.f64 i i)) (/.f64 n i))))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))","(fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))","(-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))","(+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (+.f64 (log.f64 (neg.f64 (/.f64 1 n))) (/.f64 n i)))","(+.f64 (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))) (/.f64 n i))","(+.f64 (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))) (/.f64 n i))","(+.f64 (log.f64 (/.f64 -1 n)) (-.f64 (/.f64 n i) (log.f64 (/.f64 -1 i))))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 n 2) (pow.f64 i 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (+.f64 (log.f64 (neg.f64 (/.f64 1 n))) (/.f64 n i))))","(fma.f64 -1/2 (/.f64 (*.f64 n n) (*.f64 i i)) (+.f64 (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))) (/.f64 n i)))","(fma.f64 -1/2 (/.f64 (*.f64 n n) (*.f64 i i)) (+.f64 (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))) (/.f64 n i)))","(+.f64 (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))) (fma.f64 -1/2 (/.f64 (*.f64 n n) (*.f64 i i)) (/.f64 n i)))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 n 3) (pow.f64 i 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 n 2) (pow.f64 i 2))) (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (+.f64 (log.f64 (neg.f64 (/.f64 1 n))) (/.f64 n i)))))","(fma.f64 1/3 (/.f64 (pow.f64 n 3) (pow.f64 i 3)) (fma.f64 -1/2 (/.f64 (*.f64 n n) (*.f64 i i)) (+.f64 (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))) (/.f64 n i))))","(fma.f64 1/3 (/.f64 (pow.f64 n 3) (pow.f64 i 3)) (fma.f64 -1/2 (/.f64 (*.f64 n n) (*.f64 i i)) (+.f64 (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))) (/.f64 n i))))","(fma.f64 1/3 (pow.f64 (/.f64 n i) 3) (+.f64 (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))) (fma.f64 -1/2 (/.f64 (*.f64 n n) (*.f64 i i)) (/.f64 n i))))","(+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))","(fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))","(-.f64 (log.f64 i) (log.f64 n))","(+.f64 (*.f64 -1 (log.f64 n)) (+.f64 (/.f64 n i) (log.f64 i)))","(+.f64 (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))) (/.f64 n i))","(+.f64 (log.f64 i) (-.f64 (/.f64 n i) (log.f64 n)))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 n 2) (pow.f64 i 2))) (+.f64 (*.f64 -1 (log.f64 n)) (+.f64 (/.f64 n i) (log.f64 i))))","(fma.f64 -1/2 (/.f64 (*.f64 n n) (*.f64 i i)) (+.f64 (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))) (/.f64 n i)))","(+.f64 (-.f64 (log.f64 i) (log.f64 n)) (fma.f64 -1/2 (/.f64 (*.f64 n n) (*.f64 i i)) (/.f64 n i)))","(+.f64 (*.f64 1/3 (/.f64 (pow.f64 n 3) (pow.f64 i 3))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 n 2) (pow.f64 i 2))) (+.f64 (*.f64 -1 (log.f64 n)) (+.f64 (/.f64 n i) (log.f64 i)))))","(fma.f64 1/3 (/.f64 (pow.f64 n 3) (pow.f64 i 3)) (fma.f64 -1/2 (/.f64 (*.f64 n n) (*.f64 i i)) (+.f64 (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))) (/.f64 n i))))","(fma.f64 1/3 (/.f64 (pow.f64 n 3) (pow.f64 i 3)) (+.f64 (-.f64 (log.f64 i) (log.f64 n)) (fma.f64 -1/2 (/.f64 (*.f64 n n) (*.f64 i i)) (/.f64 n i))))","(fma.f64 1/3 (pow.f64 (/.f64 n i) 3) (+.f64 (-.f64 (log.f64 i) (log.f64 n)) (fma.f64 -1/2 (/.f64 (*.f64 n n) (*.f64 i i)) (/.f64 n i))))","(/.f64 i n)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) (pow.f64 n 2))) (/.f64 i n))","(fma.f64 -1/2 (/.f64 (*.f64 i i) (*.f64 n n)) (/.f64 i n))","(fma.f64 -1/2 (*.f64 (/.f64 i n) (/.f64 i n)) (/.f64 i n))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) (pow.f64 n 2))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3))) (/.f64 i n)))","(fma.f64 -1/2 (/.f64 (*.f64 i i) (*.f64 n n)) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3)) (/.f64 i n)))","(fma.f64 -1/2 (*.f64 (/.f64 i n) (/.f64 i n)) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3)) (/.f64 i n)))","(fma.f64 -1/2 (*.f64 (/.f64 i n) (/.f64 i n)) (fma.f64 1/3 (pow.f64 (/.f64 i n) 3) (/.f64 i n)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 4))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) (pow.f64 n 2))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3))) (/.f64 i n))))","(fma.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 4)) (fma.f64 -1/2 (/.f64 (*.f64 i i) (*.f64 n n)) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3)) (/.f64 i n))))","(fma.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 4)) (fma.f64 -1/2 (*.f64 (/.f64 i n) (/.f64 i n)) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3)) (/.f64 i n))))","(fma.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 4)) (fma.f64 -1/2 (*.f64 (/.f64 i n) (/.f64 i n)) (fma.f64 1/3 (pow.f64 (/.f64 i n) 3) (/.f64 i n))))","(/.f64 i n)","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) (pow.f64 n 2))) (/.f64 i n))","(fma.f64 -1/2 (/.f64 (*.f64 i i) (*.f64 n n)) (/.f64 i n))","(fma.f64 -1/2 (*.f64 (/.f64 i n) (/.f64 i n)) (/.f64 i n))","(+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) (pow.f64 n 2))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3))) (/.f64 i n)))","(fma.f64 -1/2 (/.f64 (*.f64 i i) (*.f64 n n)) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3)) (/.f64 i n)))","(fma.f64 -1/2 (*.f64 (/.f64 i n) (/.f64 i n)) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3)) (/.f64 i n)))","(fma.f64 -1/2 (*.f64 (/.f64 i n) (/.f64 i n)) (fma.f64 1/3 (pow.f64 (/.f64 i n) 3) (/.f64 i n)))","(+.f64 (*.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 4))) (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 i 2) (pow.f64 n 2))) (+.f64 (*.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3))) (/.f64 i n))))","(fma.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 4)) (fma.f64 -1/2 (/.f64 (*.f64 i i) (*.f64 n n)) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3)) (/.f64 i n))))","(fma.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 4)) (fma.f64 -1/2 (*.f64 (/.f64 i n) (/.f64 i n)) (fma.f64 1/3 (/.f64 (pow.f64 i 3) (pow.f64 n 3)) (/.f64 i n))))","(fma.f64 -1/4 (/.f64 (pow.f64 i 4) (pow.f64 n 4)) (fma.f64 -1/2 (*.f64 (/.f64 i n) (/.f64 i n)) (fma.f64 1/3 (pow.f64 (/.f64 i n) 3) (/.f64 i n))))","(*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(*.f64 (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i)))) 100)","(*.f64 (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n))) 100)","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))","(*.f64 100 (fma.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (*.f64 i i)) (*.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) i))) (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i))))))","(*.f64 (fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n)))) 100)","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))))","(fma.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (*.f64 i i)) (*.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) i)))) (*.f64 100 (+.f64 (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i)))) (*.f64 (pow.f64 n 4) (-.f64 (fma.f64 -1 (/.f64 (log.f64 n) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 3) i) (/.f64 (log.f64 i) (*.f64 i i)))) (/.f64 1/2 (pow.f64 i 3)))))))","(*.f64 100 (fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (fma.f64 (pow.f64 n 4) (+.f64 (-.f64 (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 (log.f64 i) (*.f64 i i))) (/.f64 (log.f64 n) (*.f64 i i))) (/.f64 -1/2 (pow.f64 i 3))) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n))))))","(*.f64 100 (fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (fma.f64 (pow.f64 n 4) (+.f64 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 -1/2 (pow.f64 i 3)))) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n))))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 5) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4))))))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))))","(fma.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (*.f64 i i)) (*.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) i)))) (fma.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (fma.f64 -1 (/.f64 (log.f64 n) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 3) i) (/.f64 (log.f64 i) (*.f64 i i)))) (/.f64 1/2 (pow.f64 i 3)))) (*.f64 100 (+.f64 (*.f64 (pow.f64 n 5) (fma.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 4) i) (fma.f64 -1/2 (/.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) (pow.f64 i 3)) (+.f64 (/.f64 1/2 (pow.f64 i 3)) (/.f64 1/3 (pow.f64 i 4))))))) (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i))))))))","(+.f64 (*.f64 100 (fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (fma.f64 (pow.f64 n 4) (+.f64 (-.f64 (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 (log.f64 i) (*.f64 i i))) (/.f64 (log.f64 n) (*.f64 i i))) (/.f64 -1/2 (pow.f64 i 3))) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n)))))) (*.f64 (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 4) i) (+.f64 (/.f64 1/3 (pow.f64 i 4)) (fma.f64 -1/2 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (pow.f64 i 3)) (/.f64 1/2 (pow.f64 i 3)))))) (*.f64 (pow.f64 n 5) 100)))","(*.f64 100 (+.f64 (fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n)))) (fma.f64 (pow.f64 n 5) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 4) i) (+.f64 (/.f64 1/3 (pow.f64 i 4)) (fma.f64 -1/2 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (pow.f64 i 3)) (/.f64 1/2 (pow.f64 i 3)))))) (*.f64 (pow.f64 n 4) (+.f64 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 -1/2 (pow.f64 i 3))))))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 (/.f64 n (/.f64 i (expm1.f64 i))) 100)","(*.f64 (/.f64 (expm1.f64 i) (/.f64 i n)) 100)","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 (/.f64 n (/.f64 i (expm1.f64 i))) 100))","(fma.f64 (/.f64 n (/.f64 i (expm1.f64 i))) 100 (*.f64 (exp.f64 i) (*.f64 i -50)))","(fma.f64 (/.f64 (expm1.f64 i) (/.f64 i n)) 100 (*.f64 i (*.f64 (exp.f64 i) -50)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 100 (+.f64 (*.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i)) (/.f64 n (/.f64 i (expm1.f64 i))))))","(fma.f64 100 (fma.f64 (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) n) (/.f64 (exp.f64 i) i) (/.f64 n (/.f64 i (expm1.f64 i)))) (*.f64 (exp.f64 i) (*.f64 i -50)))","(fma.f64 100 (fma.f64 (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) n) (/.f64 (exp.f64 i) i) (/.f64 (expm1.f64 i) (/.f64 i n))) (*.f64 i (*.f64 (exp.f64 i) -50)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (fma.f64 100 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 -1/48 (pow.f64 i 6) (*.f64 (pow.f64 i 4) -1/4))) (/.f64 (*.f64 (*.f64 n n) i) (exp.f64 i))) (*.f64 100 (+.f64 (*.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i)) (/.f64 n (/.f64 i (expm1.f64 i)))))))","(fma.f64 (*.f64 i (exp.f64 i)) -50 (*.f64 100 (+.f64 (fma.f64 (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) n) (/.f64 (exp.f64 i) i) (/.f64 n (/.f64 i (expm1.f64 i)))) (*.f64 (/.f64 (exp.f64 i) i) (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 (pow.f64 i 4) -1/4 (*.f64 -1/48 (pow.f64 i 6)))) (*.f64 n n))))))","(fma.f64 (*.f64 i (exp.f64 i)) -50 (*.f64 100 (+.f64 (*.f64 (/.f64 (exp.f64 i) i) (+.f64 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 (pow.f64 i 4) -1/4 (*.f64 -1/48 (pow.f64 i 6)))) (*.f64 n n)) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) n))) (/.f64 (expm1.f64 i) (/.f64 i n)))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 (/.f64 n (/.f64 i (expm1.f64 i))) 100)","(*.f64 (/.f64 (expm1.f64 i) (/.f64 i n)) 100)","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 (/.f64 n (/.f64 i (expm1.f64 i))) 100))","(fma.f64 (/.f64 n (/.f64 i (expm1.f64 i))) 100 (*.f64 (exp.f64 i) (*.f64 i -50)))","(fma.f64 (/.f64 (expm1.f64 i) (/.f64 i n)) 100 (*.f64 i (*.f64 (exp.f64 i) -50)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 100 (+.f64 (*.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i)) (/.f64 n (/.f64 i (expm1.f64 i))))))","(fma.f64 100 (fma.f64 (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) n) (/.f64 (exp.f64 i) i) (/.f64 n (/.f64 i (expm1.f64 i)))) (*.f64 (exp.f64 i) (*.f64 i -50)))","(fma.f64 100 (fma.f64 (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) n) (/.f64 (exp.f64 i) i) (/.f64 (expm1.f64 i) (/.f64 i n))) (*.f64 i (*.f64 (exp.f64 i) -50)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 -100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (fma.f64 -100 (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (/.f64 (fma.f64 1/48 (pow.f64 i 6) (fma.f64 1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) 1/4))) i)) (*.f64 100 (+.f64 (*.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i)) (/.f64 n (/.f64 i (expm1.f64 i)))))))","(fma.f64 (*.f64 i (exp.f64 i)) -50 (fma.f64 100 (fma.f64 (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) n) (/.f64 (exp.f64 i) i) (/.f64 n (/.f64 i (expm1.f64 i)))) (*.f64 (*.f64 (/.f64 (exp.f64 i) i) (/.f64 (fma.f64 (pow.f64 i 6) 1/48 (fma.f64 1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) 1/4))) (*.f64 n n))) -100)))","(fma.f64 (*.f64 i (exp.f64 i)) -50 (fma.f64 (*.f64 (/.f64 (exp.f64 i) (*.f64 n (*.f64 n i))) (fma.f64 (pow.f64 i 6) 1/48 (fma.f64 1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) 1/4)))) -100 (*.f64 100 (fma.f64 (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) n) (/.f64 (exp.f64 i) i) (/.f64 (expm1.f64 i) (/.f64 i n))))))","(*.f64 100 n)","(*.f64 n 100)","(+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))","(*.f64 100 (+.f64 n (*.f64 (*.f64 n i) (-.f64 1/2 (/.f64 1/2 n)))))","(*.f64 100 (fma.f64 n (*.f64 i (+.f64 1/2 (/.f64 -1/2 n))) n))","(*.f64 100 (fma.f64 (*.f64 n i) (-.f64 1/2 (/.f64 1/2 n)) n))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n)))","(fma.f64 100 (*.f64 (*.f64 n (*.f64 i i)) (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n)))) (*.f64 100 (+.f64 n (*.f64 (*.f64 n i) (-.f64 1/2 (/.f64 1/2 n))))))","(*.f64 100 (fma.f64 n (fma.f64 (*.f64 i i) (+.f64 1/6 (-.f64 (/.f64 1/3 (*.f64 n n)) (/.f64 1/2 n))) (*.f64 i (+.f64 1/2 (/.f64 -1/2 n)))) n))","(*.f64 100 (fma.f64 n (*.f64 i (+.f64 (-.f64 1/2 (/.f64 1/2 n)) (*.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n))) i))) n))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))) (pow.f64 i 3)))) (+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))))","(fma.f64 100 (*.f64 (*.f64 n (-.f64 (+.f64 1/24 (/.f64 11/24 (*.f64 n n))) (+.f64 (/.f64 1/4 (pow.f64 n 3)) (/.f64 1/4 n)))) (pow.f64 i 3)) (fma.f64 100 (*.f64 (*.f64 n (*.f64 i i)) (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n)))) (*.f64 100 (+.f64 n (*.f64 (*.f64 n i) (-.f64 1/2 (/.f64 1/2 n)))))))","(fma.f64 (*.f64 (pow.f64 i 3) (*.f64 n (+.f64 1/24 (-.f64 (-.f64 (/.f64 (/.f64 11/24 n) n) (/.f64 1/4 n)) (/.f64 1/4 (pow.f64 n 3)))))) 100 (*.f64 100 (fma.f64 n (fma.f64 (*.f64 i i) (+.f64 1/6 (-.f64 (/.f64 1/3 (*.f64 n n)) (/.f64 1/2 n))) (*.f64 i (+.f64 1/2 (/.f64 -1/2 n)))) n)))","(*.f64 100 (+.f64 n (*.f64 n (+.f64 (*.f64 (pow.f64 i 3) (+.f64 1/24 (+.f64 (/.f64 11/24 (*.f64 n n)) (+.f64 (/.f64 -1/4 n) (/.f64 -1/4 (pow.f64 n 3)))))) (*.f64 i (+.f64 (-.f64 1/2 (/.f64 1/2 n)) (*.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n))) i)))))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))","(*.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))) 100)","(/.f64 (*.f64 n 100) (/.f64 i (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))))","(*.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1)) 100)","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)))","(*.f64 100 (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))) (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))))","(*.f64 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))))) 100)","(*.f64 (+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1)) (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)))) 100)","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))))","(fma.f64 100 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (*.f64 100 (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))) (/.f64 n (/.f64 (pow.f64 i 3) (*.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))) (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n))) (*.f64 (/.f64 n i) (+.f64 (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1) (/.f64 (*.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4)))) (*.f64 i i))))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)) (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4)))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))) (pow.f64 i 4))))))","(fma.f64 100 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (fma.f64 100 (/.f64 n (/.f64 (pow.f64 i 3) (*.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))))) (*.f64 100 (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))) (/.f64 n (/.f64 (pow.f64 i 4) (*.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 -1/2 (pow.f64 n 5) (*.f64 (pow.f64 n 4) 1/3))))))))))","(fma.f64 (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))) 100 (*.f64 100 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) (+.f64 (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))))) (*.f64 (/.f64 n (pow.f64 i 4)) (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 (pow.f64 n 4) 1/3 (*.f64 (pow.f64 n 5) -1/2)))))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 n i) (+.f64 (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1) (/.f64 (*.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4)))) (*.f64 i i)))) (+.f64 (*.f64 (/.f64 n (pow.f64 i 4)) (*.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 (pow.f64 n 4) 1/3 (*.f64 (pow.f64 n 5) -1/2))))) (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n))))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))","(*.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) 100)","(*.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) 100)","(*.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1)) 100)","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))","(*.f64 100 (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))))","(*.f64 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) 100)","(*.f64 (+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1)) (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)))) 100)","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))))","(fma.f64 100 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (*.f64 100 (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) (/.f64 n (/.f64 (pow.f64 i 3) (*.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (+.f64 (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1)) (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) i) (+.f64 (/.f64 (pow.f64 n 3) i) (/.f64 (*.f64 n (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4)))) (*.f64 i i))))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (+.f64 (*.f64 -100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6)))))) (pow.f64 i 4))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))))","(fma.f64 100 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (fma.f64 100 (/.f64 n (/.f64 (pow.f64 i 3) (*.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) (fma.f64 -100 (/.f64 (*.f64 (*.f64 n (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))) (fma.f64 -1/3 (pow.f64 n 4) (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6))))) (pow.f64 i 4)) (*.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) 100))))","(+.f64 (*.f64 100 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (+.f64 (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))))))) (/.f64 (*.f64 n -100) (/.f64 (/.f64 (pow.f64 i 4) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6)))))))","(+.f64 (*.f64 100 (+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1)) (*.f64 (/.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) i) (+.f64 (/.f64 (pow.f64 n 3) i) (/.f64 (*.f64 n (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4)))) (*.f64 i i)))))) (*.f64 (*.f64 (/.f64 n (pow.f64 i 4)) (*.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6)))))) -100))"]],"stop":[["node limit",1]],"time":66.6708984375,"type":"simplify"},{"compiler":[[8340,4509]],"time":76.056884765625,"type":"eval"},{"alts":[["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n)))","done",16.137397176313684],["(*.f64 (/.f64 n i) (fma.f64 100 (pow.f64 (+.f64 1 (/.f64 i n)) n) -100))","fresh",49.63894533781316],["(/.f64 1 (/.f64 (/.f64 i n) (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100)))","fresh",16.46448049453418],["(*.f64 100 (+.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))))","fresh",54.365612603733595],["(fma.f64 (*.f64 (/.f64 n i) (expm1.f64 i)) 100 (*.f64 i (*.f64 (exp.f64 i) -50)))","fresh",27.640886929545022],["(/.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i) (/.f64 1 n))","next",16.445518795188192],["(*.f64 100 (fma.f64 (*.f64 n i) (-.f64 1/2 (/.f64 1/2 n)) n))","fresh",27.56935303097185],["(*.f64 100 (/.f64 (expm1.f64 (fma.f64 -1/2 (/.f64 i (/.f64 n i)) i)) (/.f64 i n)))","fresh",28.321091327132592]],"compiler":[[15,9],[16,11],[17,11],[61,35],[16,11],[17,12],[14,10],[17,11],[16,11],[17,11],[61,35],[16,11],[17,12],[14,10],[17,11]],"count":[[292,8]],"kept":[{"done":[0,0],"fresh":[7,5],"new":[284,2],"picked":[1,1]}],"min-error":[0.0078125],"time":74.01708984375,"type":"prune"},{"compiler":[[64,21]],"locations":[["(/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i)",0.09765625,true],["(/.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i) (/.f64 1 n))",0.19140625,true],["(log1p.f64 (/.f64 i n))",4.604440684885901,false],["(*.f64 n (log1p.f64 (/.f64 i n)))",10.600262181759204,false]],"time":10.6259765625,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i)","i","-inf",0.56103515625],["(/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i)","i","inf",0.547119140625],["(/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i)","i","0",0.380126953125],["(/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i)","n","-inf",0.3359375],["(/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i)","n","inf",0.365966796875],["(/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i)","n","0",0.60498046875],["(/.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i) (/.f64 1 n))","i","-inf",0.35205078125],["(/.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i) (/.f64 1 n))","i","inf",0.343017578125],["(/.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i) (/.f64 1 n))","i","0",0.218994140625],["(/.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i) (/.f64 1 n))","n","-inf",0.262939453125],["(/.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i) (/.f64 1 n))","n","inf",0.2548828125],["(/.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i) (/.f64 1 n))","n","0",0.427001953125]],"time":4.967041015625,"type":"series"},{"count":[[2,103]],"egraph":[[2,3745,37,0.028896875],[1,276,37,0.0048850000000000005],[0,13,40,0.000380417]],"inputs":[["(/.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i) (/.f64 1 n))","(/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) n)) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) n))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) n))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) n))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 n (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (*.f64 (/.f64 1 i) n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) n)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i))) (pow.f64 (cbrt.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i))) 2) (cbrt.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 2) (*.f64 (cbrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i))) (sqrt.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) (*.f64 (sqrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) -100) i) (/.f64 1 (/.f64 -1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 1 n)) (/.f64 100 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 (/.f64 1 n)) (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100)) 2) (/.f64 1 n)) (/.f64 (cbrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 10 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) (/.f64 1 n)) (/.f64 (*.f64 10 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) 1) (/.f64 (/.f64 1 i) (/.f64 1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 2) 1) (/.f64 (cbrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) (/.f64 1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 1) (/.f64 (sqrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) (/.f64 1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (cbrt.f64 (pow.f64 n -2))) (/.f64 (/.f64 1 i) (/.f64 1 (cbrt.f64 n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 n -2))) (/.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) (/.f64 1 (cbrt.f64 n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 2) (cbrt.f64 (pow.f64 n -2))) (cbrt.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) (cbrt.f64 (pow.f64 n -2))) (/.f64 (sqrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) (/.f64 1 (cbrt.f64 n))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (pow.f64 n -1/2)) (/.f64 (/.f64 1 i) (pow.f64 n -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 n -1/2)) (/.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) (pow.f64 n -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 2) (pow.f64 n -1/2)) (/.f64 (cbrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) (pow.f64 n -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) -1) (neg.f64 n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) (pow.f64 (cbrt.f64 n) 2)) (cbrt.f64 n))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) (sqrt.f64 n)) (sqrt.f64 n))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 1 n) (/.f64 (*.f64 i 1/100) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) 3) (/.f64 (pow.f64 n -2) n)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 (*.f64 i 1/100) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (/.f64 1 n)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (/.f64 1 n) (/.f64 (*.f64 i 1/100) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 i n) (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) (/.f64 -1 n)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) n))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) 3) (/.f64 (pow.f64 n -2) n)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 n i))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (+.f64 (/.f64 i n) 1) n) (*.f64 i 1/100)) (/.f64 1 (*.f64 i 1/100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 1 (*.f64 i 1/100)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (*.f64 100 (/.f64 1 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 100 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 1 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (/.f64 1 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100)) 2) (*.f64 (cbrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100)) (/.f64 1 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) (pow.f64 (cbrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 2) (cbrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 10 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) (*.f64 (*.f64 10 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) (/.f64 1 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) (sqrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) -100) (/.f64 1 (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 i) (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (cbrt.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 i)) (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (sqrt.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) 100)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 1) (/.f64 100 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100)) 2) 1) (/.f64 (cbrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100)) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 10 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) 1) (/.f64 (*.f64 10 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (pow.f64 (cbrt.f64 i) 2)) (/.f64 100 (cbrt.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 (pow.f64 (cbrt.f64 i) 2)) (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (cbrt.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100)) 2) (pow.f64 (cbrt.f64 i) 2)) (cbrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 10 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) (pow.f64 (cbrt.f64 i) 2)) (/.f64 (*.f64 10 (sqrt.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) (cbrt.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (sqrt.f64 i)) (/.f64 100 (sqrt.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 100 (sqrt.f64 i)) (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (sqrt.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100)) 2) (sqrt.f64 i)) (/.f64 (cbrt.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100)) (sqrt.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 i 1/100) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) 3) (pow.f64 i 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (*.f64 i 1/100) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) (neg.f64 i)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) 3) (pow.f64 i 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 1))))))"]],"rules":[["egg-rr",50],["egg-rr",53]],"stop":[["node limit",1]],"time":55.193115234375,"type":"rewrite"},{"count":[[151,185]],"egraph":[[2,3933,2751,0.021081125],[1,995,2912,0.007307875],[0,288,3125,0.0015355]],"inputs":[["(*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 5) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4))))))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 -100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))","(*.f64 100 n)","(+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n)))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))) (pow.f64 i 3)))) (+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)) (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4)))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))) (pow.f64 i 4))))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (+.f64 (*.f64 -100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6)))))) (pow.f64 i 4))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))))","(*.f64 100 (/.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(+.f64 (*.f64 100 (/.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)) (*.f64 100 (*.f64 (pow.f64 n 2) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)) (*.f64 100 (*.f64 (pow.f64 n 2) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4))))))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)) (*.f64 100 (*.f64 (pow.f64 n 2) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))))))","(*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n)))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 (pow.f64 n 2) i))) (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n))))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n)) (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 3) i))))))","(*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n)))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 (pow.f64 n 2) i))) (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n))))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n)) (*.f64 -100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 3) i))))))","100","(+.f64 100 (*.f64 100 (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))))","(+.f64 100 (+.f64 (*.f64 100 (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))) (*.f64 100 (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 i 3) (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))))) (+.f64 100 (+.f64 (*.f64 100 (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))) (*.f64 100 (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))))))","(*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1) i))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1) i)))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 3))) (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1) i))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4))))) (pow.f64 i 4))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 3))) (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1) i)))))","(*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1) i))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1) i)) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 3))) (+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1) i)) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 3))) (+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (*.f64 -100 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6))))) (pow.f64 i 4))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(*.f64 100 (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i)))))","(*.f64 100 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (/.f64 i (*.f64 n n))))","(*.f64 100 (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))","(*.f64 100 (+.f64 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (*.f64 i i)) (/.f64 (*.f64 1/2 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2)) i))) (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i))))))","(*.f64 100 (fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (/.f64 i (*.f64 n n)))))","(*.f64 100 (fma.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n)))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))))","(fma.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (*.f64 i i)) (/.f64 (*.f64 1/2 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2)) i))) (*.f64 100 (+.f64 (*.f64 (pow.f64 n 4) (-.f64 (fma.f64 -1 (/.f64 (log.f64 n) (*.f64 i i)) (+.f64 (/.f64 (log.f64 i) (*.f64 i i)) (*.f64 1/6 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 3) i)))) (/.f64 1/2 (pow.f64 i 3)))) (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i)))))))","(*.f64 100 (+.f64 (fma.f64 (pow.f64 n 4) (+.f64 (-.f64 (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 (log.f64 i) (*.f64 i i))) (/.f64 (/.f64 (log.f64 n) i) i)) (/.f64 -1/2 (pow.f64 i 3))) (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (/.f64 i (*.f64 n n)))) (*.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))))))","(*.f64 100 (+.f64 (*.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i)))) (fma.f64 (pow.f64 n 4) (+.f64 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 -1/2 (pow.f64 i 3)))) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n))))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 5) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4))))))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))))","(fma.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (*.f64 i i)) (/.f64 (*.f64 1/2 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2)) i))) (fma.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (fma.f64 -1 (/.f64 (log.f64 n) (*.f64 i i)) (+.f64 (/.f64 (log.f64 i) (*.f64 i i)) (*.f64 1/6 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 3) i)))) (/.f64 1/2 (pow.f64 i 3)))) (*.f64 100 (+.f64 (*.f64 (pow.f64 n 5) (fma.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 4) i) (fma.f64 -1/2 (/.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) (pow.f64 i 3)) (+.f64 (/.f64 1/2 (pow.f64 i 3)) (/.f64 1/3 (pow.f64 i 4))))))) (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i))))))))","(fma.f64 100 (*.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i)))) (*.f64 100 (+.f64 (*.f64 (pow.f64 n 4) (+.f64 (-.f64 (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 (log.f64 i) (*.f64 i i))) (/.f64 (/.f64 (log.f64 n) i) i)) (/.f64 -1/2 (pow.f64 i 3)))) (fma.f64 (pow.f64 n 5) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 4) i) (+.f64 (/.f64 1/3 (pow.f64 i 4)) (fma.f64 -1/2 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (pow.f64 i 3)) (/.f64 1/2 (pow.f64 i 3)))))) (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (/.f64 i (*.f64 n n)))))))","(*.f64 100 (+.f64 (*.f64 (pow.f64 n 3) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i)))) (+.f64 (fma.f64 (pow.f64 n 5) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 4) i) (fma.f64 -1/2 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (pow.f64 i 3)) (+.f64 (/.f64 1/2 (pow.f64 i 3)) (/.f64 1/3 (pow.f64 i 4)))))) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n)))) (*.f64 (pow.f64 n 4) (+.f64 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 -1/2 (pow.f64 i 3))))))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 n (/.f64 i (expm1.f64 i))))","(*.f64 100 (*.f64 (/.f64 n i) (expm1.f64 i)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 100 (/.f64 n (/.f64 i (expm1.f64 i)))))","(fma.f64 100 (*.f64 (/.f64 n i) (expm1.f64 i)) (*.f64 (exp.f64 i) (*.f64 i -50)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 100 (+.f64 (*.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i)) (/.f64 n (/.f64 i (expm1.f64 i))))))","(fma.f64 100 (fma.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) i) (*.f64 (/.f64 n i) (expm1.f64 i))) (*.f64 (exp.f64 i) (*.f64 i -50)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (fma.f64 100 (*.f64 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 -1/48 (pow.f64 i 6) (*.f64 (pow.f64 i 4) -1/4))) (*.f64 n n)) (/.f64 (exp.f64 i) i)) (*.f64 100 (+.f64 (*.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i)) (/.f64 n (/.f64 i (expm1.f64 i)))))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 100 (+.f64 (*.f64 (/.f64 (exp.f64 i) i) (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 -1/48 (pow.f64 i 6) (*.f64 (pow.f64 i 4) -1/4))) (*.f64 n n))) (fma.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) i) (*.f64 (/.f64 n i) (expm1.f64 i))))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 100 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 i)) (*.f64 (/.f64 (exp.f64 i) i) (+.f64 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 (pow.f64 i 4) -1/4 (*.f64 -1/48 (pow.f64 i 6)))) (*.f64 n n)) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) n))))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(*.f64 100 (/.f64 n (/.f64 i (expm1.f64 i))))","(*.f64 100 (*.f64 (/.f64 n i) (expm1.f64 i)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 100 (/.f64 n (/.f64 i (expm1.f64 i)))))","(fma.f64 100 (*.f64 (/.f64 n i) (expm1.f64 i)) (*.f64 (exp.f64 i) (*.f64 i -50)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 100 (+.f64 (*.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i)) (/.f64 n (/.f64 i (expm1.f64 i))))))","(fma.f64 100 (fma.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) i) (*.f64 (/.f64 n i) (expm1.f64 i))) (*.f64 (exp.f64 i) (*.f64 i -50)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 -100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (fma.f64 -100 (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (/.f64 (fma.f64 1/48 (pow.f64 i 6) (fma.f64 1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) 1/4))) i)) (*.f64 100 (+.f64 (*.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i)) (/.f64 n (/.f64 i (expm1.f64 i)))))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (fma.f64 100 (fma.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) i) (*.f64 (/.f64 n i) (expm1.f64 i))) (*.f64 -100 (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (/.f64 (fma.f64 (pow.f64 i 6) 1/48 (fma.f64 1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) 1/4))) i)))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (fma.f64 100 (fma.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) i) (*.f64 (/.f64 n i) (expm1.f64 i))) (*.f64 -100 (*.f64 (/.f64 (exp.f64 i) (*.f64 n (*.f64 n i))) (fma.f64 (pow.f64 i 6) 1/48 (fma.f64 1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) 1/4)))))))","(*.f64 100 n)","(+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))","(*.f64 100 (+.f64 (*.f64 (*.f64 n i) (-.f64 1/2 (/.f64 1/2 n))) n))","(*.f64 100 (fma.f64 n (*.f64 i (+.f64 1/2 (/.f64 -1/2 n))) n))","(*.f64 100 (fma.f64 (*.f64 n i) (+.f64 1/2 (/.f64 -1/2 n)) n))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n)))","(fma.f64 100 (*.f64 (*.f64 n (*.f64 i i)) (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n)))) (*.f64 100 (+.f64 (*.f64 (*.f64 n i) (-.f64 1/2 (/.f64 1/2 n))) n)))","(*.f64 100 (+.f64 (*.f64 n (*.f64 i (*.f64 i (+.f64 1/6 (-.f64 (/.f64 1/3 (*.f64 n n)) (/.f64 1/2 n)))))) (fma.f64 n (*.f64 i (+.f64 1/2 (/.f64 -1/2 n))) n)))","(*.f64 100 (+.f64 n (*.f64 n (*.f64 i (+.f64 (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n))) i))))))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))) (pow.f64 i 3)))) (+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))))","(fma.f64 100 (*.f64 n (*.f64 (pow.f64 i 3) (-.f64 (+.f64 1/24 (/.f64 11/24 (*.f64 n n))) (+.f64 (/.f64 1/4 (pow.f64 n 3)) (/.f64 1/4 n))))) (fma.f64 100 (*.f64 (*.f64 n (*.f64 i i)) (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n)))) (*.f64 100 (+.f64 (*.f64 (*.f64 n i) (-.f64 1/2 (/.f64 1/2 n))) n))))","(+.f64 (*.f64 100 (fma.f64 n (*.f64 i (+.f64 1/2 (/.f64 -1/2 n))) n)) (*.f64 (*.f64 100 n) (+.f64 (*.f64 (pow.f64 i 3) (+.f64 1/24 (-.f64 (/.f64 11/24 (*.f64 n n)) (+.f64 (/.f64 1/4 (pow.f64 n 3)) (/.f64 1/4 n))))) (*.f64 i (*.f64 i (+.f64 1/6 (-.f64 (/.f64 1/3 (*.f64 n n)) (/.f64 1/2 n))))))))","(*.f64 100 (+.f64 (fma.f64 (*.f64 n i) (+.f64 1/2 (/.f64 -1/2 n)) n) (*.f64 n (*.f64 (*.f64 i i) (+.f64 (*.f64 (+.f64 1/24 (+.f64 (+.f64 (/.f64 11/24 (*.f64 n n)) (/.f64 -1/4 n)) (/.f64 -1/4 (pow.f64 n 3)))) i) (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n))))))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))","(*.f64 100 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))))","(*.f64 100 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)))","(*.f64 100 (+.f64 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) i) (/.f64 (pow.f64 n 3) i))))","(*.f64 100 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) (/.f64 (pow.f64 i n) (/.f64 (/.f64 (*.f64 i i) (pow.f64 n 3)) (pow.f64 n (neg.f64 n))))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))))","(fma.f64 100 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (*.f64 100 (+.f64 (/.f64 (*.f64 (*.f64 n (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 3)) (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) i) (/.f64 (pow.f64 n 3) i)) (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))))))))","(*.f64 100 (+.f64 (/.f64 (pow.f64 i n) (/.f64 (/.f64 (*.f64 i i) (pow.f64 n 3)) (pow.f64 n (neg.f64 n)))) (*.f64 (/.f64 n i) (+.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n)))) (/.f64 (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))) (/.f64 i (/.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) i)))))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)) (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4)))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))) (pow.f64 i 4))))))","(fma.f64 100 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (fma.f64 100 (/.f64 (*.f64 (*.f64 n (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 3)) (*.f64 100 (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))) (/.f64 n (/.f64 (pow.f64 i 4) (*.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 -1/2 (pow.f64 n 5) (*.f64 (pow.f64 n 4) 1/3))))))))))","(fma.f64 100 (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) i) (/.f64 (pow.f64 n 3) i)) (*.f64 100 (+.f64 (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))))) (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) (*.f64 (/.f64 n (pow.f64 i 4)) (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 (pow.f64 n 5) -1/2 (*.f64 (pow.f64 n 4) 1/3)))))))))","(*.f64 100 (+.f64 (+.f64 (/.f64 (pow.f64 i n) (/.f64 (/.f64 (*.f64 i i) (pow.f64 n 3)) (pow.f64 n (neg.f64 n)))) (*.f64 (/.f64 n i) (+.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n)))) (/.f64 (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))) (/.f64 i (/.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) i)))))) (*.f64 (*.f64 (/.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) (pow.f64 i 4)) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 (pow.f64 n 4) 1/3 (*.f64 (pow.f64 n 5) -1/2)))) n)))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))","(*.f64 100 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))))","(*.f64 100 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))))","(*.f64 100 (*.f64 (/.f64 (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1) i) n))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))","(*.f64 100 (+.f64 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) i) (/.f64 (pow.f64 n 3) i))))","(*.f64 100 (+.f64 (*.f64 (/.f64 (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1) i) n) (*.f64 (/.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (/.f64 i (pow.f64 (/.f64 -1 n) n))) (/.f64 (pow.f64 n 3) i))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))))","(fma.f64 100 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (*.f64 100 (+.f64 (/.f64 (*.f64 (*.f64 n (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))) (pow.f64 i 3)) (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) i) (/.f64 (pow.f64 n 3) i)) (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (/.f64 (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) (*.f64 n (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3)))))","(*.f64 100 (+.f64 (*.f64 (/.f64 (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1) i) n) (*.f64 (/.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (/.f64 i (pow.f64 (/.f64 -1 n) n))) (+.f64 (/.f64 (pow.f64 n 3) i) (/.f64 (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))) (/.f64 (*.f64 i i) n))))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (+.f64 (*.f64 -100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6)))))) (pow.f64 i 4))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))))","(fma.f64 100 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (fma.f64 100 (/.f64 (*.f64 (*.f64 n (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))) (pow.f64 i 3)) (fma.f64 -100 (/.f64 n (/.f64 (pow.f64 i 4) (*.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))) (fma.f64 -1/3 (pow.f64 n 4) (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6))))))) (*.f64 100 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))))))))","(fma.f64 100 (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) i) (/.f64 (pow.f64 n 3) i)) (fma.f64 100 (/.f64 (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) (*.f64 n (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3)) (fma.f64 100 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (*.f64 -100 (/.f64 (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) (*.f64 (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6)))) n)) (pow.f64 i 4))))))","(+.f64 (*.f64 100 (+.f64 (*.f64 (/.f64 (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1) i) n) (*.f64 (/.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (/.f64 i (pow.f64 (/.f64 -1 n) n))) (+.f64 (/.f64 (pow.f64 n 3) i) (/.f64 (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))) (/.f64 (*.f64 i i) n)))))) (*.f64 (/.f64 -100 (pow.f64 i 4)) (*.f64 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)) (*.f64 (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6)))) n))))","(*.f64 100 (/.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(*.f64 100 (/.f64 n (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i)))))","(*.f64 100 (*.f64 (/.f64 n i) (-.f64 (log.f64 i) (log.f64 n))))","(*.f64 (/.f64 100 i) (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))","(+.f64 (*.f64 100 (/.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)) (*.f64 100 (*.f64 (pow.f64 n 2) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))))","(*.f64 100 (+.f64 (/.f64 n (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i)))) (*.f64 (*.f64 n n) (+.f64 (/.f64 1 (*.f64 i i)) (/.f64 (*.f64 1/2 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2)) i)))))","(*.f64 100 (+.f64 (*.f64 (/.f64 n i) (-.f64 (log.f64 i) (log.f64 n))) (*.f64 (*.f64 n n) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 n i) (-.f64 (log.f64 i) (log.f64 n))) (*.f64 n (*.f64 n (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i)))))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)) (*.f64 100 (*.f64 (pow.f64 n 2) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))))))","(fma.f64 100 (*.f64 (pow.f64 n 3) (-.f64 (fma.f64 -1 (/.f64 (log.f64 n) (*.f64 i i)) (+.f64 (/.f64 (log.f64 i) (*.f64 i i)) (*.f64 1/6 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 3) i)))) (/.f64 1/2 (pow.f64 i 3)))) (*.f64 100 (+.f64 (/.f64 n (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i)))) (*.f64 (*.f64 n n) (+.f64 (/.f64 1 (*.f64 i i)) (/.f64 (*.f64 1/2 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2)) i))))))","(*.f64 100 (+.f64 (+.f64 (*.f64 (/.f64 n i) (-.f64 (log.f64 i) (log.f64 n))) (*.f64 (*.f64 n n) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))))) (*.f64 (pow.f64 n 3) (+.f64 (-.f64 (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 (log.f64 i) (*.f64 i i))) (/.f64 (/.f64 (log.f64 n) i) i)) (/.f64 -1/2 (pow.f64 i 3))))))","(*.f64 100 (+.f64 (+.f64 (*.f64 (/.f64 n i) (-.f64 (log.f64 i) (log.f64 n))) (*.f64 n (*.f64 n (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i)))))) (*.f64 (pow.f64 n 3) (+.f64 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 -1/2 (pow.f64 i 3)))))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4))))))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)) (*.f64 100 (*.f64 (pow.f64 n 2) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))))))","(fma.f64 100 (*.f64 (pow.f64 n 4) (fma.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 4) i) (fma.f64 -1/2 (/.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) (pow.f64 i 3)) (+.f64 (/.f64 1/2 (pow.f64 i 3)) (/.f64 1/3 (pow.f64 i 4))))))) (fma.f64 100 (*.f64 (pow.f64 n 3) (-.f64 (fma.f64 -1 (/.f64 (log.f64 n) (*.f64 i i)) (+.f64 (/.f64 (log.f64 i) (*.f64 i i)) (*.f64 1/6 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 3) i)))) (/.f64 1/2 (pow.f64 i 3)))) (*.f64 100 (+.f64 (/.f64 n (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i)))) (*.f64 (*.f64 n n) (+.f64 (/.f64 1 (*.f64 i i)) (/.f64 (*.f64 1/2 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2)) i)))))))","(fma.f64 100 (*.f64 (pow.f64 n 4) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 4) i) (+.f64 (/.f64 1/3 (pow.f64 i 4)) (fma.f64 -1/2 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (pow.f64 i 3)) (/.f64 1/2 (pow.f64 i 3))))))) (*.f64 100 (+.f64 (+.f64 (*.f64 (/.f64 n i) (-.f64 (log.f64 i) (log.f64 n))) (*.f64 (*.f64 n n) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))))) (*.f64 (pow.f64 n 3) (+.f64 (-.f64 (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 (log.f64 i) (*.f64 i i))) (/.f64 (/.f64 (log.f64 n) i) i)) (/.f64 -1/2 (pow.f64 i 3)))))))","(*.f64 100 (+.f64 (+.f64 (*.f64 (/.f64 n i) (-.f64 (log.f64 i) (log.f64 n))) (*.f64 n (*.f64 n (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i)))))) (+.f64 (*.f64 (pow.f64 n 4) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 4) i) (fma.f64 -1/2 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (pow.f64 i 3)) (+.f64 (/.f64 1/2 (pow.f64 i 3)) (/.f64 1/3 (pow.f64 i 4))))))) (*.f64 (pow.f64 n 3) (+.f64 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 -1/2 (pow.f64 i 3))))))))","(*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i))","(*.f64 100 (/.f64 (expm1.f64 i) i))","(/.f64 100 (/.f64 i (expm1.f64 i)))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n)))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (*.f64 -50 (/.f64 i (/.f64 n (exp.f64 i)))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (*.f64 -50 (*.f64 (/.f64 i n) (exp.f64 i))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (*.f64 -50 (*.f64 (/.f64 (exp.f64 i) n) i)))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 (pow.f64 n 2) i))) (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (/.f64 (exp.f64 i) (/.f64 (*.f64 (*.f64 n n) i) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)))) (*.f64 -50 (/.f64 i (/.f64 n (exp.f64 i))))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (*.f64 (/.f64 (exp.f64 i) i) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) (*.f64 n n))) (*.f64 -50 (*.f64 (/.f64 i n) (exp.f64 i)))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (*.f64 (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) i) (/.f64 (exp.f64 i) (*.f64 n n))) (*.f64 -50 (*.f64 (/.f64 (exp.f64 i) n) i))))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n)) (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 3) i))))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (/.f64 (exp.f64 i) (/.f64 (*.f64 (*.f64 n n) i) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)))) (fma.f64 -50 (/.f64 i (/.f64 n (exp.f64 i))) (*.f64 100 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 -1/48 (pow.f64 i 6) (*.f64 (pow.f64 i 4) -1/4))) (/.f64 (*.f64 i (pow.f64 n 3)) (exp.f64 i)))))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (*.f64 (/.f64 (exp.f64 i) i) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) (*.f64 n n))) (fma.f64 100 (*.f64 (/.f64 (exp.f64 i) (pow.f64 n 3)) (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 -1/48 (pow.f64 i 6) (*.f64 (pow.f64 i 4) -1/4))) i)) (*.f64 -50 (*.f64 (/.f64 i n) (exp.f64 i))))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (+.f64 (*.f64 -50 (*.f64 (/.f64 (exp.f64 i) n) i)) (*.f64 (/.f64 100 i) (+.f64 (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8))) (*.f64 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 (pow.f64 i 4) -1/4 (*.f64 -1/48 (pow.f64 i 6)))) (pow.f64 n 3)) (exp.f64 i))))))","(*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i))","(*.f64 100 (/.f64 (expm1.f64 i) i))","(/.f64 100 (/.f64 i (expm1.f64 i)))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n)))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (*.f64 -50 (/.f64 i (/.f64 n (exp.f64 i)))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (*.f64 -50 (*.f64 (/.f64 i n) (exp.f64 i))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (*.f64 -50 (*.f64 (/.f64 (exp.f64 i) n) i)))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 (pow.f64 n 2) i))) (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (/.f64 (exp.f64 i) (/.f64 (*.f64 (*.f64 n n) i) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)))) (*.f64 -50 (/.f64 i (/.f64 n (exp.f64 i))))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (*.f64 (/.f64 (exp.f64 i) i) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) (*.f64 n n))) (*.f64 -50 (*.f64 (/.f64 i n) (exp.f64 i)))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (*.f64 (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) i) (/.f64 (exp.f64 i) (*.f64 n n))) (*.f64 -50 (*.f64 (/.f64 (exp.f64 i) n) i))))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n)) (*.f64 -100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 3) i))))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (/.f64 (exp.f64 i) (/.f64 (*.f64 (*.f64 n n) i) (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)))) (fma.f64 -50 (/.f64 i (/.f64 n (exp.f64 i))) (*.f64 -100 (*.f64 (/.f64 (exp.f64 i) (pow.f64 n 3)) (/.f64 (fma.f64 1/48 (pow.f64 i 6) (fma.f64 1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) 1/4))) i))))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (*.f64 (/.f64 (exp.f64 i) i) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) (*.f64 n n))) (fma.f64 -50 (*.f64 (/.f64 i n) (exp.f64 i)) (*.f64 (*.f64 -100 (/.f64 (exp.f64 i) (pow.f64 n 3))) (/.f64 (fma.f64 (pow.f64 i 6) 1/48 (fma.f64 1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) 1/4))) i)))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (*.f64 (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) i) (/.f64 (exp.f64 i) (*.f64 n n))) (fma.f64 -50 (*.f64 (/.f64 (exp.f64 i) n) i) (*.f64 (/.f64 -100 i) (*.f64 (/.f64 (exp.f64 i) (pow.f64 n 3)) (fma.f64 (pow.f64 i 6) 1/48 (fma.f64 1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) 1/4))))))))","100","(+.f64 100 (*.f64 100 (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))))","(+.f64 100 (*.f64 (*.f64 100 i) (-.f64 1/2 (/.f64 1/2 n))))","(fma.f64 100 (*.f64 i (+.f64 1/2 (/.f64 -1/2 n))) 100)","(+.f64 100 (+.f64 (*.f64 100 (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))) (*.f64 100 (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))))","(+.f64 100 (*.f64 100 (+.f64 (*.f64 i (-.f64 1/2 (/.f64 1/2 n))) (*.f64 (*.f64 i i) (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n)))))))","(fma.f64 100 (fma.f64 i (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 i (*.f64 i (+.f64 1/6 (-.f64 (/.f64 1/3 (*.f64 n n)) (/.f64 1/2 n)))))) 100)","(fma.f64 100 (*.f64 i (+.f64 (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n))) i))) 100)","(+.f64 (*.f64 100 (*.f64 (pow.f64 i 3) (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))))) (+.f64 100 (+.f64 (*.f64 100 (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))) (*.f64 100 (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))))))","(fma.f64 100 (*.f64 (pow.f64 i 3) (-.f64 (+.f64 1/24 (/.f64 11/24 (*.f64 n n))) (+.f64 (/.f64 1/4 (pow.f64 n 3)) (/.f64 1/4 n)))) (+.f64 100 (*.f64 100 (+.f64 (*.f64 i (-.f64 1/2 (/.f64 1/2 n))) (*.f64 (*.f64 i i) (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n))))))))","(fma.f64 100 (*.f64 (pow.f64 i 3) (+.f64 1/24 (-.f64 (/.f64 11/24 (*.f64 n n)) (+.f64 (/.f64 1/4 (pow.f64 n 3)) (/.f64 1/4 n))))) (fma.f64 100 (fma.f64 i (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 i (*.f64 i (+.f64 1/6 (-.f64 (/.f64 1/3 (*.f64 n n)) (/.f64 1/2 n)))))) 100))","(fma.f64 100 (*.f64 (pow.f64 i 3) (+.f64 1/24 (+.f64 (+.f64 (/.f64 11/24 (*.f64 n n)) (/.f64 -1/4 n)) (/.f64 -1/4 (pow.f64 n 3))))) (fma.f64 100 (*.f64 i (+.f64 (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n))) i))) 100))","(*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1) i))","(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))) i))","(/.f64 100 (/.f64 i (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))))","(*.f64 (/.f64 100 i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n)))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1) i)))","(*.f64 100 (+.f64 (/.f64 (*.f64 n n) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (/.f64 (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))) i)))","(*.f64 100 (+.f64 (/.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n)))) i) (/.f64 (*.f64 n n) (/.f64 i (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) i)))))","(*.f64 100 (+.f64 (*.f64 (+.f64 (/.f64 n (/.f64 i n)) 1) (/.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) i)) (/.f64 -1 i)))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 3))) (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1) i))))","(fma.f64 100 (/.f64 (*.f64 n n) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (*.f64 100 (+.f64 (/.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (/.f64 (pow.f64 i 3) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))))) (/.f64 (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))) i))))","(*.f64 100 (+.f64 (/.f64 (*.f64 n n) (/.f64 i (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) i))) (+.f64 (/.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n)))) i) (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (pow.f64 i 3)) (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4)))))))","(*.f64 100 (+.f64 (/.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n)))) i) (*.f64 (/.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) i) (+.f64 (/.f64 n (/.f64 i n)) (/.f64 (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))) (*.f64 i i))))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4))))) (pow.f64 i 4))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 3))) (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1) i)))))","(fma.f64 100 (/.f64 (*.f64 n n) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (fma.f64 100 (/.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (/.f64 (pow.f64 i 4) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 -1/2 (pow.f64 n 5) (*.f64 (pow.f64 n 4) 1/3))))) (*.f64 100 (+.f64 (/.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (/.f64 (pow.f64 i 3) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))))) (/.f64 (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))) i)))))","(fma.f64 100 (/.f64 (*.f64 n n) (/.f64 i (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) i))) (*.f64 100 (+.f64 (+.f64 (/.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n)))) i) (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (pow.f64 i 3)) (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))))) (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (pow.f64 i 4)) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 (pow.f64 n 5) -1/2 (*.f64 (pow.f64 n 4) 1/3)))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) (*.f64 i i)) (+.f64 (/.f64 (fma.f64 1/6 (pow.f64 n 6) (fma.f64 (pow.f64 n 4) 1/3 (*.f64 (pow.f64 n 5) -1/2))) (*.f64 i i)) (/.f64 (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))) i))) (+.f64 (*.f64 (+.f64 (/.f64 n (/.f64 i n)) 1) (/.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) i)) (/.f64 -1 i))))","(*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1) i))","(/.f64 (*.f64 100 (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) i)","(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) i))","(*.f64 100 (/.f64 (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1) i))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1) i)) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))))","(*.f64 100 (+.f64 (/.f64 (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))) i) (/.f64 (*.f64 n n) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))))","(*.f64 100 (+.f64 (/.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) i) (*.f64 (/.f64 (*.f64 n n) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))))","(*.f64 100 (+.f64 (/.f64 (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1) i) (/.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (/.f64 (/.f64 i (/.f64 n (/.f64 i n))) (pow.f64 (/.f64 -1 n) n)))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 3))) (+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1) i)) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)))))","(fma.f64 100 (/.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (/.f64 (pow.f64 i 3) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (*.f64 100 (+.f64 (/.f64 (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))) i) (/.f64 (*.f64 n n) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))))))","(*.f64 100 (+.f64 (+.f64 (/.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) i) (*.f64 (/.f64 (*.f64 n n) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (*.f64 (/.f64 (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))) (pow.f64 i 3)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))))","(*.f64 100 (+.f64 (+.f64 (/.f64 (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1) i) (/.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (/.f64 (/.f64 i (/.f64 n (/.f64 i n))) (pow.f64 (/.f64 -1 n) n)))) (*.f64 (/.f64 (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))) (pow.f64 i 3)) (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 3))) (+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (*.f64 -100 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6))))) (pow.f64 i 4))))))","(fma.f64 100 (/.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (/.f64 (pow.f64 i 3) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (fma.f64 100 (/.f64 (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))) i) (fma.f64 100 (/.f64 (*.f64 n n) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (*.f64 -100 (/.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))) (/.f64 (pow.f64 i 4) (fma.f64 -1/3 (pow.f64 n 4) (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6))))))))))","(fma.f64 100 (*.f64 (/.f64 (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))) (pow.f64 i 3)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) (fma.f64 100 (+.f64 (/.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) i) (*.f64 (/.f64 (*.f64 n n) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (*.f64 -100 (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) (pow.f64 i 4)) (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6))))))))","(fma.f64 100 (*.f64 (/.f64 (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))) (pow.f64 i 3)) (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n))) (fma.f64 100 (+.f64 (/.f64 (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1) i) (/.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (/.f64 (/.f64 i (/.f64 n (/.f64 i n))) (pow.f64 (/.f64 -1 n) n)))) (/.f64 (*.f64 -100 (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n))) (/.f64 (pow.f64 i 4) (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6))))))))"]],"stop":[["node limit",1]],"time":55.9599609375,"type":"simplify"},{"compiler":[[9048,5321]],"time":85.471923828125,"type":"eval"},{"alts":[["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n)))","done",16.137397176313684],["(*.f64 (/.f64 n i) (fma.f64 100 (pow.f64 (+.f64 1 (/.f64 i n)) n) -100))","fresh",49.63894533781316],["(*.f64 100 (/.f64 (expm1.f64 (fma.f64 -1/2 (/.f64 i (/.f64 n i)) i)) (/.f64 i n)))","fresh",28.321091327132592],["(*.f64 n (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))","next",16.367928882739754],["(/.f64 (/.f64 (*.f64 (expm1.f64 (log.f64 (pow.f64 (+.f64 (/.f64 i n) 1) n))) 100) i) (/.f64 1 n))","fresh",49.39329432384478],["(fma.f64 (*.f64 (/.f64 n i) (expm1.f64 i)) 100 (*.f64 i (*.f64 (exp.f64 i) -50)))","fresh",27.640886929545022],["(/.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i) (/.f64 1 n))","done",16.445518795188192],["(*.f64 100 (fma.f64 (*.f64 n i) (-.f64 1/2 (/.f64 1/2 n)) n))","fresh",27.56935303097185]],"compiler":[[15,9],[16,11],[17,11],[15,10],[19,14],[16,11],[17,12],[14,10],[16,11],[17,11],[15,10],[19,14],[16,11],[14,10]],"count":[[300,8]],"kept":[{"done":[1,1],"fresh":[6,4],"new":[292,2],"picked":[1,1]}],"min-error":[0.0078125],"time":76.14501953125,"type":"prune"},{"compiler":[[58,13]],"locations":[["(*.f64 n (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))",0.05859375,true],["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))",0.17227846800160945,true],["(log1p.f64 (/.f64 i n))",4.604440684885901,false],["(*.f64 n (log1p.f64 (/.f64 i n)))",10.600262181759204,false]],"time":8.637939453125,"type":"localize"},{"count":[[2,48]],"series":[["(*.f64 n (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))","i","-inf",0.360107421875],["(*.f64 n (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))","i","inf",0.39111328125],["(*.f64 n (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))","i","0",0.217041015625],["(*.f64 n (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))","n","-inf",0.244140625],["(*.f64 n (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))","n","inf",0.22900390625],["(*.f64 n (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))","n","0",0.35009765625],["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))","i","-inf",0.316162109375],["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))","i","inf",0.322998046875],["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))","i","0",0.217041015625],["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))","n","-inf",0.236083984375],["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))","n","inf",0.259033203125],["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))","n","0",0.38818359375]],"time":3.823974609375,"type":"series"},{"count":[[2,56]],"egraph":[[2,2992,37,0.027392917000000003],[1,231,37,0.004205208],[0,11,37,0.000310208]],"inputs":[["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))","(*.f64 n (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 100) (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 100) (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 100) (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 100) (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 100 (/.f64 i (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 i (*.f64 100 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) i)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 100 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 100 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 1) i)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 100 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (pow.f64 (cbrt.f64 i) 2)) (cbrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 100 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) (sqrt.f64 i)) (sqrt.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) 100) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 (neg.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 10000 (pow.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) 2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 10 (sqrt.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 i (*.f64 100 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 10000 (pow.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 100) (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 10 (sqrt.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 100 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 100) (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 100) (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 100) (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 100) (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 100 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 100 n) (/.f64 i (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 100 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) n) i)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 n (*.f64 100 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) i)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 100 n) (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))) i)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 100 n) 1) (/.f64 i (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 100 n) (neg.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))))) (neg.f64 i))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 100 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 100 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 100 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 100 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 100 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 100 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 100) (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 100 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 100 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 100 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 100 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 100 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 100 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (*.f64 100 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 100 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 100 (*.f64 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i) n)))) 2))))))"]],"rules":[["egg-rr",26],["egg-rr",30]],"stop":[["node limit",1]],"time":50.985107421875,"type":"rewrite"},{"count":[[104,138]],"egraph":[[2,3934,2751,0.02105125],[1,996,2912,0.007362375],[0,288,3125,0.001499292]],"inputs":[["(*.f64 100 (/.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(+.f64 (*.f64 100 (/.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)) (*.f64 100 (*.f64 (pow.f64 n 2) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)) (*.f64 100 (*.f64 (pow.f64 n 2) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4))))))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)) (*.f64 100 (*.f64 (pow.f64 n 2) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))))))","(*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n)))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 (pow.f64 n 2) i))) (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n))))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n)) (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 3) i))))))","(*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n)))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 (pow.f64 n 2) i))) (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n))))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n)) (*.f64 -100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 3) i))))))","100","(+.f64 100 (*.f64 100 (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))))","(+.f64 100 (+.f64 (*.f64 100 (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))) (*.f64 100 (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 i 3) (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))))) (+.f64 100 (+.f64 (*.f64 100 (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))) (*.f64 100 (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))))))","(*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1) i))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1) i)))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 3))) (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1) i))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4))))) (pow.f64 i 4))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 3))) (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1) i)))))","(*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1) i))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1) i)) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 3))) (+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1) i)) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 3))) (+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (*.f64 -100 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6))))) (pow.f64 i 4))))))","(*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 5) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4))))))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 -100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))","(*.f64 100 n)","(+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n)))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))) (pow.f64 i 3)))) (+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)) (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4)))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))) (pow.f64 i 4))))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (+.f64 (*.f64 -100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6)))))) (pow.f64 i 4))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 100 (/.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(/.f64 (*.f64 100 (*.f64 n (fma.f64 -1 (log.f64 n) (log.f64 i)))) i)","(*.f64 100 (*.f64 (/.f64 n i) (-.f64 (log.f64 i) (log.f64 n))))","(+.f64 (*.f64 100 (/.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)) (*.f64 100 (*.f64 (pow.f64 n 2) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))))","(*.f64 100 (+.f64 (/.f64 n (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i)))) (*.f64 (*.f64 n n) (+.f64 (/.f64 1 (*.f64 i i)) (*.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) i))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 n i) (-.f64 (log.f64 i) (log.f64 n))) (*.f64 n (*.f64 n (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i)))))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)) (*.f64 100 (*.f64 (pow.f64 n 2) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i)))))))","(fma.f64 100 (*.f64 (pow.f64 n 3) (-.f64 (fma.f64 -1 (/.f64 (log.f64 n) (*.f64 i i)) (+.f64 (/.f64 (log.f64 i) (*.f64 i i)) (*.f64 1/6 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 3) i)))) (/.f64 1/2 (pow.f64 i 3)))) (*.f64 100 (+.f64 (/.f64 n (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i)))) (*.f64 (*.f64 n n) (+.f64 (/.f64 1 (*.f64 i i)) (*.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) i)))))))","(*.f64 100 (+.f64 (+.f64 (*.f64 (/.f64 n i) (-.f64 (log.f64 i) (log.f64 n))) (*.f64 n (*.f64 n (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i)))))) (*.f64 (pow.f64 n 3) (+.f64 (-.f64 (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 (log.f64 i) (*.f64 i i))) (/.f64 (log.f64 n) (*.f64 i i))) (/.f64 -1/2 (pow.f64 i 3))))))","(*.f64 100 (+.f64 (+.f64 (*.f64 (/.f64 n i) (-.f64 (log.f64 i) (log.f64 n))) (*.f64 n (*.f64 n (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i)))))) (*.f64 (pow.f64 n 3) (+.f64 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 -1/2 (pow.f64 i 3)))))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4))))))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)) (*.f64 100 (*.f64 (pow.f64 n 2) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))))))","(fma.f64 100 (*.f64 (pow.f64 n 4) (fma.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 4) i) (fma.f64 -1/2 (/.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) (pow.f64 i 3)) (+.f64 (/.f64 1/2 (pow.f64 i 3)) (/.f64 1/3 (pow.f64 i 4))))))) (fma.f64 100 (*.f64 (pow.f64 n 3) (-.f64 (fma.f64 -1 (/.f64 (log.f64 n) (*.f64 i i)) (+.f64 (/.f64 (log.f64 i) (*.f64 i i)) (*.f64 1/6 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 3) i)))) (/.f64 1/2 (pow.f64 i 3)))) (*.f64 100 (+.f64 (/.f64 n (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i)))) (*.f64 (*.f64 n n) (+.f64 (/.f64 1 (*.f64 i i)) (*.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) i))))))))","(fma.f64 100 (*.f64 (pow.f64 n 4) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 4) i) (+.f64 (/.f64 1/3 (pow.f64 i 4)) (fma.f64 -1/2 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (pow.f64 i 3)) (/.f64 1/2 (pow.f64 i 3))))))) (*.f64 100 (+.f64 (+.f64 (*.f64 (/.f64 n i) (-.f64 (log.f64 i) (log.f64 n))) (*.f64 n (*.f64 n (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i)))))) (*.f64 (pow.f64 n 3) (+.f64 (-.f64 (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 (log.f64 i) (*.f64 i i))) (/.f64 (log.f64 n) (*.f64 i i))) (/.f64 -1/2 (pow.f64 i 3)))))))","(*.f64 100 (+.f64 (+.f64 (*.f64 (/.f64 n i) (-.f64 (log.f64 i) (log.f64 n))) (*.f64 n (*.f64 n (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i)))))) (+.f64 (*.f64 (pow.f64 n 4) (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 4) i) (+.f64 (/.f64 1/3 (pow.f64 i 4)) (fma.f64 -1/2 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (pow.f64 i 3)) (/.f64 1/2 (pow.f64 i 3))))))) (*.f64 (pow.f64 n 3) (+.f64 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 -1/2 (pow.f64 i 3))))))))","(*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i))","(/.f64 (*.f64 100 (expm1.f64 i)) i)","(*.f64 100 (/.f64 (expm1.f64 i) i))","(*.f64 (/.f64 100 i) (expm1.f64 i))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n)))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (/.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) n))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (*.f64 -50 (*.f64 (/.f64 i n) (exp.f64 i))))","(fma.f64 -50 (*.f64 (/.f64 (exp.f64 i) n) i) (*.f64 (/.f64 100 i) (expm1.f64 i)))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 (pow.f64 n 2) i))) (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i)) (/.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) n)))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 -50 (*.f64 (/.f64 i n) (exp.f64 i)) (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (*.f64 (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) i) 100))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (*.f64 (/.f64 (exp.f64 i) i) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) (*.f64 n n))) (*.f64 (/.f64 -50 n) (*.f64 i (exp.f64 i)))))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n)) (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 3) i))))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i)) (fma.f64 -50 (/.f64 i (/.f64 n (exp.f64 i))) (*.f64 100 (*.f64 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 -1/48 (pow.f64 i 6) (*.f64 (pow.f64 i 4) -1/4))) (pow.f64 n 3)) (/.f64 (exp.f64 i) i))))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (*.f64 (/.f64 (exp.f64 i) i) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) (*.f64 n n))) (fma.f64 -50 (*.f64 (/.f64 i n) (exp.f64 i)) (*.f64 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 (pow.f64 i 4) -1/4 (*.f64 -1/48 (pow.f64 i 6)))) (pow.f64 n 3)) (*.f64 (/.f64 (exp.f64 i) i) 100)))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (+.f64 (*.f64 (/.f64 -50 n) (*.f64 i (exp.f64 i))) (*.f64 (/.f64 100 i) (+.f64 (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8))) (*.f64 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 -1/48 (pow.f64 i 6) (*.f64 (pow.f64 i 4) -1/4))) (pow.f64 n 3)) (exp.f64 i))))))","(*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i))","(/.f64 (*.f64 100 (expm1.f64 i)) i)","(*.f64 100 (/.f64 (expm1.f64 i) i))","(*.f64 (/.f64 100 i) (expm1.f64 i))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n)))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (/.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) n))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (*.f64 -50 (*.f64 (/.f64 i n) (exp.f64 i))))","(fma.f64 -50 (*.f64 (/.f64 (exp.f64 i) n) i) (*.f64 (/.f64 100 i) (expm1.f64 i)))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 (pow.f64 n 2) i))) (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i)) (/.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) n)))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 -50 (*.f64 (/.f64 i n) (exp.f64 i)) (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (*.f64 (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) i) 100))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (*.f64 (/.f64 (exp.f64 i) i) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) (*.f64 n n))) (*.f64 (/.f64 -50 n) (*.f64 i (exp.f64 i)))))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 i) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 -50 (/.f64 (*.f64 i (exp.f64 i)) n)) (*.f64 -100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 3) i))))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i)) (fma.f64 -50 (/.f64 i (/.f64 n (exp.f64 i))) (*.f64 -100 (*.f64 (/.f64 (exp.f64 i) (pow.f64 n 3)) (/.f64 (fma.f64 1/48 (pow.f64 i 6) (fma.f64 1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) 1/4))) i))))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (*.f64 (/.f64 (exp.f64 i) i) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) (*.f64 n n))) (fma.f64 -50 (*.f64 (/.f64 i n) (exp.f64 i)) (*.f64 -100 (*.f64 (/.f64 (exp.f64 i) i) (/.f64 (fma.f64 (pow.f64 i 6) 1/48 (fma.f64 1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) 1/4))) (pow.f64 n 3)))))))","(fma.f64 100 (/.f64 (expm1.f64 i) i) (fma.f64 100 (*.f64 (/.f64 (exp.f64 i) i) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) (*.f64 n n))) (fma.f64 -100 (*.f64 (/.f64 (/.f64 (exp.f64 i) i) (pow.f64 n 3)) (fma.f64 (pow.f64 i 6) 1/48 (fma.f64 1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) 1/4)))) (*.f64 (/.f64 -50 n) (*.f64 i (exp.f64 i))))))","100","(+.f64 100 (*.f64 100 (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))))","(+.f64 100 (*.f64 (*.f64 100 i) (-.f64 1/2 (/.f64 1/2 n))))","(fma.f64 100 (*.f64 i (+.f64 1/2 (/.f64 -1/2 n))) 100)","(+.f64 100 (+.f64 (*.f64 100 (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))) (*.f64 100 (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))))","(+.f64 100 (*.f64 100 (+.f64 (*.f64 i (-.f64 1/2 (/.f64 1/2 n))) (*.f64 (*.f64 i i) (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n)))))))","(fma.f64 100 (fma.f64 i (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 (*.f64 i i) (+.f64 1/6 (-.f64 (/.f64 (/.f64 1/3 n) n) (/.f64 1/2 n))))) 100)","(fma.f64 100 (*.f64 i (+.f64 (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 i (+.f64 1/6 (+.f64 (/.f64 1/3 (*.f64 n n)) (/.f64 -1/2 n)))))) 100)","(+.f64 (*.f64 100 (*.f64 (pow.f64 i 3) (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))))) (+.f64 100 (+.f64 (*.f64 100 (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n))))) (*.f64 100 (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n))))))))","(fma.f64 100 (*.f64 (pow.f64 i 3) (+.f64 1/24 (-.f64 (/.f64 11/24 (*.f64 n n)) (+.f64 (/.f64 1/4 (pow.f64 n 3)) (/.f64 1/4 n))))) (+.f64 100 (*.f64 100 (+.f64 (*.f64 i (-.f64 1/2 (/.f64 1/2 n))) (*.f64 (*.f64 i i) (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n))))))))","(fma.f64 100 (*.f64 (pow.f64 i 3) (+.f64 1/24 (-.f64 (/.f64 11/24 (*.f64 n n)) (+.f64 (/.f64 1/4 (pow.f64 n 3)) (/.f64 1/4 n))))) (fma.f64 100 (fma.f64 i (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 (*.f64 i i) (+.f64 1/6 (-.f64 (/.f64 (/.f64 1/3 n) n) (/.f64 1/2 n))))) 100))","(fma.f64 100 (*.f64 (pow.f64 i 3) (+.f64 1/24 (+.f64 (/.f64 11/24 (*.f64 n n)) (+.f64 (/.f64 -1/4 (pow.f64 n 3)) (/.f64 -1/4 n))))) (fma.f64 100 (*.f64 i (+.f64 (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 i (+.f64 1/6 (+.f64 (/.f64 1/3 (*.f64 n n)) (/.f64 -1/2 n)))))) 100))","(*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1) i))","(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))) i))","(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n)))) i))","(*.f64 (/.f64 100 i) (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1) i)))","(*.f64 100 (+.f64 (/.f64 (*.f64 n n) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (/.f64 (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))) i)))","(*.f64 100 (+.f64 (/.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n)))) i) (/.f64 n (/.f64 (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))) n))))","(*.f64 100 (+.f64 (*.f64 (+.f64 (/.f64 n (/.f64 i n)) 1) (/.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) i)) (/.f64 -1 i)))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 3))) (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1) i))))","(fma.f64 100 (/.f64 (*.f64 n n) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (*.f64 100 (+.f64 (/.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (/.f64 (pow.f64 i 3) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))))) (/.f64 (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))) i))))","(*.f64 100 (+.f64 (/.f64 n (/.f64 (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))) n)) (+.f64 (/.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n)))) i) (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (pow.f64 i 3)) (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4)))))))","(*.f64 100 (+.f64 (/.f64 (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1) i) (*.f64 (/.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) i) (+.f64 (/.f64 n (/.f64 i n)) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (*.f64 i i))))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4))))) (pow.f64 i 4))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4)))) (pow.f64 i 3))) (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1) i)))))","(fma.f64 100 (/.f64 (*.f64 n n) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (fma.f64 100 (/.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (/.f64 (pow.f64 i 4) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 -1/2 (pow.f64 n 5) (*.f64 (pow.f64 n 4) 1/3))))) (*.f64 100 (+.f64 (/.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (/.f64 (pow.f64 i 3) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))))) (/.f64 (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))) i)))))","(fma.f64 100 (/.f64 n (/.f64 (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))) n)) (*.f64 100 (+.f64 (+.f64 (/.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n)))) i) (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (pow.f64 i 3)) (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))))) (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (pow.f64 i 4)) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 (pow.f64 n 4) 1/3 (*.f64 -1/2 (pow.f64 n 5))))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) (*.f64 i i)) (+.f64 (/.f64 (fma.f64 1/6 (pow.f64 n 6) (fma.f64 (pow.f64 n 4) 1/3 (*.f64 -1/2 (pow.f64 n 5)))) (*.f64 i i)) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) i))) (+.f64 (*.f64 (+.f64 (/.f64 n (/.f64 i n)) 1) (/.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) i)) (/.f64 -1 i))))","(*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1) i))","(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))) i))","(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) i))","(*.f64 (/.f64 100 i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1))","(+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1) i)) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))))","(*.f64 100 (+.f64 (/.f64 (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))) i) (/.f64 (*.f64 n n) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))))","(*.f64 100 (+.f64 (/.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) i) (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) i) (/.f64 (*.f64 n n) i))))","(*.f64 100 (+.f64 (/.f64 (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1) i) (*.f64 (/.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (/.f64 i (pow.f64 (/.f64 -1 n) n))) (/.f64 n (/.f64 i n)))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 3))) (+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1) i)) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2)))))","(fma.f64 100 (/.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (/.f64 (pow.f64 i 3) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (*.f64 100 (+.f64 (/.f64 (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))) i) (/.f64 (*.f64 n n) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))))))","(*.f64 100 (+.f64 (+.f64 (/.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) i) (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) i) (/.f64 (*.f64 n n) i))) (*.f64 (/.f64 (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))) (pow.f64 i 3)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))))","(*.f64 100 (+.f64 (+.f64 (/.f64 (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1) i) (*.f64 (/.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (/.f64 i (pow.f64 (/.f64 -1 n) n))) (/.f64 n (/.f64 i n)))) (*.f64 (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (pow.f64 i 3)) (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 3))) (+.f64 (*.f64 100 (/.f64 (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1) i)) (+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (*.f64 -100 (/.f64 (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6))))) (pow.f64 i 4))))))","(fma.f64 100 (/.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (/.f64 (pow.f64 i 3) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (fma.f64 100 (/.f64 (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))) i) (fma.f64 100 (/.f64 (*.f64 n n) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (*.f64 -100 (/.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))) (/.f64 (pow.f64 i 4) (fma.f64 -1/3 (pow.f64 n 4) (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6))))))))))","(fma.f64 100 (*.f64 (/.f64 (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))) (pow.f64 i 3)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) (fma.f64 100 (+.f64 (/.f64 (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))) i) (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) i) (/.f64 (*.f64 n n) i))) (*.f64 -100 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) (/.f64 (pow.f64 i 4) (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6)))))))))","(fma.f64 100 (*.f64 (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (pow.f64 i 3)) (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n))) (fma.f64 100 (+.f64 (/.f64 (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1) i) (*.f64 (/.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (/.f64 i (pow.f64 (/.f64 -1 n) n))) (/.f64 n (/.f64 i n)))) (*.f64 (/.f64 -100 (/.f64 (pow.f64 i 4) (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 -1/6 (pow.f64 n 6) (*.f64 1/2 (pow.f64 n 5)))))) (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n)))))","(*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))","(/.f64 (*.f64 100 (*.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) (*.f64 n n))) i)","(*.f64 100 (*.f64 (/.f64 (*.f64 n n) i) (-.f64 (log.f64 i) (log.f64 n))))","(*.f64 100 (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))","(*.f64 100 (+.f64 (*.f64 (+.f64 (/.f64 1 (*.f64 i i)) (*.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) i))) (pow.f64 n 3)) (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i))))))","(*.f64 100 (fma.f64 (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (pow.f64 n 3) (*.f64 (/.f64 (*.f64 n n) i) (-.f64 (log.f64 i) (log.f64 n)))))","(*.f64 100 (fma.f64 (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (pow.f64 n 3) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n)))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i))))","(fma.f64 100 (*.f64 (+.f64 (/.f64 1 (*.f64 i i)) (*.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) i))) (pow.f64 n 3)) (*.f64 100 (+.f64 (*.f64 (-.f64 (fma.f64 -1 (/.f64 (log.f64 n) (*.f64 i i)) (+.f64 (/.f64 (log.f64 i) (*.f64 i i)) (*.f64 1/6 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 3) i)))) (/.f64 1/2 (pow.f64 i 3))) (pow.f64 n 4)) (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i)))))))","(*.f64 100 (+.f64 (fma.f64 (+.f64 (-.f64 (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 (log.f64 i) (*.f64 i i))) (/.f64 (log.f64 n) (*.f64 i i))) (/.f64 -1/2 (pow.f64 i 3))) (pow.f64 n 4) (*.f64 (/.f64 (*.f64 n n) i) (-.f64 (log.f64 i) (log.f64 n)))) (*.f64 (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (pow.f64 n 3))))","(*.f64 100 (+.f64 (fma.f64 (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (pow.f64 n 3) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n)))) (*.f64 (+.f64 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 -1/2 (pow.f64 i 3)))) (pow.f64 n 4))))","(+.f64 (*.f64 100 (*.f64 (pow.f64 n 3) (+.f64 (/.f64 1 (pow.f64 i 2)) (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) i))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 4) (-.f64 (+.f64 (*.f64 -1 (/.f64 (log.f64 n) (pow.f64 i 2))) (+.f64 (/.f64 (log.f64 i) (pow.f64 i 2)) (*.f64 1/6 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 3) i)))) (*.f64 1/2 (/.f64 1 (pow.f64 i 3)))))) (+.f64 (*.f64 100 (*.f64 (pow.f64 n 5) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 2) (pow.f64 i 2))) (+.f64 (*.f64 1/24 (/.f64 (pow.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) 4) i)) (+.f64 (*.f64 -1/2 (/.f64 (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i)) (pow.f64 i 3))) (+.f64 (*.f64 1/2 (/.f64 1 (pow.f64 i 3))) (*.f64 1/3 (/.f64 1 (pow.f64 i 4))))))))) (*.f64 100 (/.f64 (*.f64 (pow.f64 n 2) (+.f64 (*.f64 -1 (log.f64 n)) (log.f64 i))) i)))))","(fma.f64 100 (*.f64 (+.f64 (/.f64 1 (*.f64 i i)) (*.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) i))) (pow.f64 n 3)) (fma.f64 100 (*.f64 (-.f64 (fma.f64 -1 (/.f64 (log.f64 n) (*.f64 i i)) (+.f64 (/.f64 (log.f64 i) (*.f64 i i)) (*.f64 1/6 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 3) i)))) (/.f64 1/2 (pow.f64 i 3))) (pow.f64 n 4)) (*.f64 100 (+.f64 (*.f64 (fma.f64 1/2 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) 4) i) (fma.f64 -1/2 (/.f64 (fma.f64 -1 (log.f64 n) (log.f64 i)) (pow.f64 i 3)) (+.f64 (/.f64 1/2 (pow.f64 i 3)) (/.f64 1/3 (pow.f64 i 4)))))) (pow.f64 n 5)) (/.f64 (*.f64 n n) (/.f64 i (fma.f64 -1 (log.f64 n) (log.f64 i))))))))","(fma.f64 100 (*.f64 (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (pow.f64 n 3)) (*.f64 100 (+.f64 (*.f64 (+.f64 (-.f64 (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 (log.f64 i) (*.f64 i i))) (/.f64 (log.f64 n) (*.f64 i i))) (/.f64 -1/2 (pow.f64 i 3))) (pow.f64 n 4)) (fma.f64 (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 4) i) (+.f64 (/.f64 1/3 (pow.f64 i 4)) (fma.f64 -1/2 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (pow.f64 i 3)) (/.f64 1/2 (pow.f64 i 3)))))) (pow.f64 n 5) (*.f64 (/.f64 (*.f64 n n) i) (-.f64 (log.f64 i) (log.f64 n)))))))","(*.f64 100 (+.f64 (+.f64 (fma.f64 (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) (*.f64 i i)) (fma.f64 1/24 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 4) i) (+.f64 (/.f64 1/3 (pow.f64 i 4)) (fma.f64 -1/2 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (pow.f64 i 3)) (/.f64 1/2 (pow.f64 i 3)))))) (pow.f64 n 5) (*.f64 (/.f64 n (/.f64 i n)) (-.f64 (log.f64 i) (log.f64 n)))) (*.f64 (+.f64 (/.f64 (-.f64 (log.f64 i) (log.f64 n)) (*.f64 i i)) (fma.f64 1/6 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 3) i) (/.f64 -1/2 (pow.f64 i 3)))) (pow.f64 n 4))) (*.f64 (fma.f64 1/2 (/.f64 (pow.f64 (-.f64 (log.f64 i) (log.f64 n)) 2) i) (/.f64 1 (*.f64 i i))) (pow.f64 n 3))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (*.f64 (/.f64 n i) (expm1.f64 i)))","(*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i))","(fma.f64 100 (*.f64 (/.f64 n i) (expm1.f64 i)) (*.f64 i (*.f64 (exp.f64 i) -50)))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 100 (+.f64 (*.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i)) (/.f64 n (/.f64 i (expm1.f64 i))))))","(fma.f64 100 (fma.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) i) (*.f64 (/.f64 n i) (expm1.f64 i))) (*.f64 i (*.f64 (exp.f64 i) -50)))","(fma.f64 100 (fma.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) i) (*.f64 (/.f64 (expm1.f64 i) i) n)) (*.f64 i (*.f64 (exp.f64 i) -50)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 i 5)) (+.f64 (*.f64 -1/48 (pow.f64 i 6)) (*.f64 -1/4 (pow.f64 i 4)))) (exp.f64 i)) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (fma.f64 100 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 -1/48 (pow.f64 i 6) (*.f64 (pow.f64 i 4) -1/4))) (/.f64 (*.f64 i (*.f64 n n)) (exp.f64 i))) (*.f64 100 (+.f64 (*.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i)) (/.f64 n (/.f64 i (expm1.f64 i)))))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 100 (+.f64 (fma.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) i) (*.f64 (/.f64 n i) (expm1.f64 i))) (/.f64 (exp.f64 i) (/.f64 (*.f64 n (*.f64 n i)) (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 (pow.f64 i 4) -1/4 (*.f64 -1/48 (pow.f64 i 6)))))))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 100 (+.f64 (*.f64 (/.f64 (expm1.f64 i) i) n) (*.f64 (/.f64 (exp.f64 i) i) (+.f64 (/.f64 (fma.f64 -1/6 (pow.f64 i 5) (fma.f64 -1/48 (pow.f64 i 6) (*.f64 (pow.f64 i 4) -1/4))) (*.f64 n n)) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) n))))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i)","(*.f64 100 (*.f64 (/.f64 n i) (expm1.f64 i)))","(*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (/.f64 (*.f64 100 (*.f64 n (expm1.f64 i))) i))","(fma.f64 100 (*.f64 (/.f64 n i) (expm1.f64 i)) (*.f64 i (*.f64 (exp.f64 i) -50)))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 (/.f64 100 i) (*.f64 n (expm1.f64 i))))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (*.f64 100 (+.f64 (*.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i)) (/.f64 n (/.f64 i (expm1.f64 i))))))","(fma.f64 100 (fma.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) i) (*.f64 (/.f64 n i) (expm1.f64 i))) (*.f64 i (*.f64 (exp.f64 i) -50)))","(fma.f64 100 (fma.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) i) (*.f64 (/.f64 (expm1.f64 i) i) n)) (*.f64 i (*.f64 (exp.f64 i) -50)))","(+.f64 (*.f64 -50 (*.f64 i (exp.f64 i))) (+.f64 (*.f64 -100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/48 (pow.f64 i 6)) (+.f64 (*.f64 1/6 (pow.f64 i 5)) (*.f64 1/4 (pow.f64 i 4))))) (*.f64 (pow.f64 n 2) i))) (+.f64 (*.f64 100 (/.f64 (*.f64 (exp.f64 i) (+.f64 (*.f64 1/3 (pow.f64 i 3)) (*.f64 1/8 (pow.f64 i 4)))) (*.f64 n i))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 i) 1)) i)))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (fma.f64 -100 (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (/.f64 (fma.f64 1/48 (pow.f64 i 6) (fma.f64 1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) 1/4))) i)) (*.f64 100 (+.f64 (*.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 1/3 (pow.f64 i 3) (*.f64 (pow.f64 i 4) 1/8)) i)) (/.f64 n (/.f64 i (expm1.f64 i)))))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (fma.f64 100 (fma.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) i) (*.f64 (/.f64 n i) (expm1.f64 i))) (*.f64 -100 (*.f64 (/.f64 (exp.f64 i) (*.f64 n n)) (/.f64 (fma.f64 (pow.f64 i 6) 1/48 (fma.f64 1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) 1/4))) i)))))","(fma.f64 -50 (*.f64 i (exp.f64 i)) (fma.f64 100 (fma.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) i) (*.f64 (/.f64 (expm1.f64 i) i) n)) (*.f64 -100 (*.f64 (/.f64 (exp.f64 i) (*.f64 n (*.f64 n i))) (fma.f64 (pow.f64 i 6) 1/48 (fma.f64 1/6 (pow.f64 i 5) (*.f64 (pow.f64 i 4) 1/4)))))))","(*.f64 100 n)","(+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))","(*.f64 100 (+.f64 (*.f64 n (*.f64 i (-.f64 1/2 (/.f64 1/2 n)))) n))","(*.f64 100 (fma.f64 n (*.f64 i (+.f64 1/2 (/.f64 -1/2 n))) n))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n)))","(fma.f64 100 (*.f64 n (*.f64 (*.f64 i i) (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n))))) (*.f64 100 (+.f64 (*.f64 n (*.f64 i (-.f64 1/2 (/.f64 1/2 n)))) n)))","(+.f64 (*.f64 100 n) (*.f64 (*.f64 100 n) (fma.f64 i (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 (*.f64 i i) (+.f64 1/6 (-.f64 (/.f64 (/.f64 1/3 n) n) (/.f64 1/2 n)))))))","(*.f64 100 (+.f64 n (*.f64 n (*.f64 i (+.f64 (+.f64 1/2 (/.f64 -1/2 n)) (*.f64 i (+.f64 1/6 (+.f64 (/.f64 1/3 (*.f64 n n)) (/.f64 -1/2 n)))))))))","(+.f64 (*.f64 100 (*.f64 n (*.f64 (-.f64 (+.f64 1/24 (*.f64 11/24 (/.f64 1 (pow.f64 n 2)))) (+.f64 (*.f64 1/4 (/.f64 1 (pow.f64 n 3))) (*.f64 1/4 (/.f64 1 n)))) (pow.f64 i 3)))) (+.f64 (*.f64 100 (*.f64 n (*.f64 (pow.f64 i 2) (-.f64 (+.f64 (*.f64 1/3 (/.f64 1 (pow.f64 n 2))) 1/6) (*.f64 1/2 (/.f64 1 n)))))) (+.f64 (*.f64 100 (*.f64 n (*.f64 i (-.f64 1/2 (*.f64 1/2 (/.f64 1 n)))))) (*.f64 100 n))))","(fma.f64 100 (*.f64 n (*.f64 (pow.f64 i 3) (+.f64 1/24 (-.f64 (/.f64 11/24 (*.f64 n n)) (+.f64 (/.f64 1/4 (pow.f64 n 3)) (/.f64 1/4 n)))))) (fma.f64 100 (*.f64 n (*.f64 (*.f64 i i) (+.f64 (/.f64 1/3 (*.f64 n n)) (-.f64 1/6 (/.f64 1/2 n))))) (*.f64 100 (+.f64 (*.f64 n (*.f64 i (-.f64 1/2 (/.f64 1/2 n)))) n))))","(+.f64 (*.f64 100 (fma.f64 n (*.f64 i (+.f64 1/2 (/.f64 -1/2 n))) n)) (*.f64 (*.f64 100 n) (+.f64 (*.f64 (pow.f64 i 3) (+.f64 1/24 (-.f64 (/.f64 11/24 (*.f64 n n)) (+.f64 (/.f64 1/4 (pow.f64 n 3)) (/.f64 1/4 n))))) (*.f64 (*.f64 i i) (+.f64 1/6 (-.f64 (/.f64 (/.f64 1/3 n) n) (/.f64 1/2 n)))))))","(*.f64 100 (+.f64 (fma.f64 n (*.f64 i (+.f64 1/2 (/.f64 -1/2 n))) n) (*.f64 n (*.f64 (*.f64 i i) (+.f64 (*.f64 i (+.f64 1/24 (+.f64 (/.f64 11/24 (*.f64 n n)) (+.f64 (/.f64 -1/4 (pow.f64 n 3)) (/.f64 -1/4 n))))) (+.f64 1/6 (+.f64 (/.f64 1/3 (*.f64 n n)) (/.f64 -1/2 n))))))))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))","(*.f64 100 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))))","(*.f64 100 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))))","(*.f64 100 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1)))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)))","(*.f64 100 (+.f64 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1)) (*.f64 (/.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) i) (/.f64 (pow.f64 n 3) i))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i))))","(fma.f64 100 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (*.f64 100 (+.f64 (/.f64 n (/.f64 (pow.f64 i 3) (*.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))))) (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))) (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) i) (/.f64 (pow.f64 n 3) i)) (*.f64 (/.f64 n i) (+.f64 (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (*.f64 (/.f64 i (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n))) i))))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n)))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))))) (pow.f64 i 3))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))) 1)) i)) (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 1/6 (pow.f64 n 6)) (+.f64 (*.f64 -1/2 (pow.f64 n 5)) (*.f64 1/3 (pow.f64 n 4)))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 1 i))) (log.f64 (/.f64 1 n))))))) (pow.f64 i 4))))))","(fma.f64 100 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))))) (fma.f64 100 (/.f64 n (/.f64 (pow.f64 i 3) (*.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4)))))) (*.f64 100 (+.f64 (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n))))))) (/.f64 n (/.f64 (pow.f64 i 4) (*.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (neg.f64 (log.f64 i)) (neg.f64 (log.f64 n)))) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 -1/2 (pow.f64 n 5) (*.f64 (pow.f64 n 4) 1/3))))))))))","(fma.f64 100 (*.f64 (/.f64 (pow.f64 n 3) (*.f64 i i)) (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n)))) (*.f64 100 (+.f64 (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))))) (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 i) (log.f64 n))))) (*.f64 (/.f64 n (pow.f64 i 4)) (*.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 i) (log.f64 n))) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 (pow.f64 n 4) 1/3 (*.f64 -1/2 (pow.f64 n 5))))))))))","(*.f64 100 (+.f64 (+.f64 (*.f64 (/.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) i) (/.f64 (pow.f64 n 3) i)) (*.f64 (/.f64 n i) (+.f64 (fma.f64 (pow.f64 i n) (pow.f64 n (neg.f64 n)) -1) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (*.f64 (/.f64 i (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n))) i))))) (*.f64 (*.f64 (/.f64 (*.f64 (pow.f64 n (neg.f64 n)) (pow.f64 i n)) (pow.f64 i 4)) (fma.f64 1/6 (pow.f64 n 6) (fma.f64 (pow.f64 n 4) 1/3 (*.f64 -1/2 (pow.f64 n 5))))) n)))","(*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))","(/.f64 (*.f64 100 (*.f64 n (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) i)","(*.f64 100 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))))","(*.f64 (/.f64 (*.f64 100 n) i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))","(*.f64 100 (+.f64 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) i) (/.f64 (pow.f64 n 3) i))))","(*.f64 100 (+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1)) (*.f64 (/.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (/.f64 i (pow.f64 (/.f64 -1 n) n))) (/.f64 (pow.f64 n 3) i))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i))))","(fma.f64 100 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (*.f64 100 (+.f64 (/.f64 n (/.f64 (pow.f64 i 3) (*.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) (/.f64 n (/.f64 i (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) i) (/.f64 (pow.f64 n 3) i)) (+.f64 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))))))","(*.f64 100 (+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1)) (*.f64 (/.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (/.f64 i (pow.f64 (/.f64 -1 n) n))) (+.f64 (/.f64 (pow.f64 n 3) i) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (/.f64 (*.f64 i i) n))))))","(+.f64 (*.f64 100 (/.f64 (*.f64 (pow.f64 n 3) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n))))))) (pow.f64 i 2))) (+.f64 (*.f64 100 (/.f64 (*.f64 n (*.f64 (+.f64 (*.f64 -1/2 (pow.f64 n 3)) (*.f64 1/2 (pow.f64 n 4))) (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))))) (pow.f64 i 3))) (+.f64 (*.f64 -100 (/.f64 (*.f64 n (*.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) (+.f64 (*.f64 -1/3 (pow.f64 n 4)) (+.f64 (*.f64 1/2 (pow.f64 n 5)) (*.f64 -1/6 (pow.f64 n 6)))))) (pow.f64 i 4))) (*.f64 100 (/.f64 (*.f64 n (-.f64 (exp.f64 (*.f64 n (+.f64 (*.f64 -1 (log.f64 (/.f64 -1 i))) (log.f64 (neg.f64 (/.f64 1 n)))))) 1)) i)))))","(fma.f64 100 (/.f64 (pow.f64 n 3) (/.f64 (*.f64 i i) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))))) (fma.f64 100 (/.f64 n (/.f64 (pow.f64 i 3) (*.f64 (fma.f64 -1/2 (pow.f64 n 3) (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) (fma.f64 -100 (/.f64 n (/.f64 (pow.f64 i 4) (*.f64 (pow.f64 (exp.f64 n) (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n)))) (fma.f64 -1/3 (pow.f64 n 4) (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6))))))) (/.f64 (*.f64 100 (*.f64 n (expm1.f64 (*.f64 n (fma.f64 -1 (log.f64 (/.f64 -1 i)) (log.f64 (/.f64 -1 n))))))) i))))","(fma.f64 100 (*.f64 (/.f64 (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))) i) (/.f64 (pow.f64 n 3) i)) (fma.f64 100 (*.f64 (/.f64 n (pow.f64 i 3)) (*.f64 (fma.f64 (pow.f64 n 3) -1/2 (*.f64 1/2 (pow.f64 n 4))) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (fma.f64 100 (*.f64 (/.f64 n i) (expm1.f64 (*.f64 n (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i)))))) (*.f64 -100 (/.f64 n (/.f64 (/.f64 (pow.f64 i 4) (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 1/2 (pow.f64 n 5) (*.f64 -1/6 (pow.f64 n 6))))) (pow.f64 (exp.f64 n) (-.f64 (log.f64 (/.f64 -1 n)) (log.f64 (/.f64 -1 i))))))))))","(+.f64 (*.f64 100 (+.f64 (*.f64 (/.f64 n i) (fma.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n) -1)) (*.f64 (/.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (/.f64 i (pow.f64 (/.f64 -1 n) n))) (+.f64 (/.f64 (pow.f64 n 3) i) (/.f64 (fma.f64 1/2 (pow.f64 n 4) (*.f64 (pow.f64 n 3) -1/2)) (/.f64 (*.f64 i i) n)))))) (*.f64 -100 (/.f64 n (/.f64 (/.f64 (pow.f64 i 4) (fma.f64 (pow.f64 n 4) -1/3 (fma.f64 -1/6 (pow.f64 n 6) (*.f64 1/2 (pow.f64 n 5))))) (*.f64 (pow.f64 (/.f64 -1 i) (neg.f64 n)) (pow.f64 (/.f64 -1 n) n))))))"]],"stop":[["node limit",1]],"time":54.843017578125,"type":"simplify"},{"compiler":[[7548,4477]],"time":71.112060546875,"type":"eval"},{"alts":[["(fma.f64 100 (fma.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) i) (*.f64 (/.f64 (expm1.f64 i) i) n)) (*.f64 i (*.f64 (exp.f64 i) -50)))","fresh",24.67304482017459],["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n)))","done",16.137397176313684],["(*.f64 n (*.f64 100 (/.f64 (expm1.f64 i) i)))","fresh",15.755366166732488],["(*.f64 n (*.f64 100 (/.f64 (expm1.f64 (log.f64 (pow.f64 (+.f64 (/.f64 i n) 1) n))) i)))","fresh",49.387103064076335],["(/.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i) (/.f64 1 n))","done",16.445518795188192],["(*.f64 100 (/.f64 (expm1.f64 (fma.f64 -1/2 (/.f64 i (/.f64 n i)) i)) (/.f64 i n)))","fresh",28.321091327132592]],"compiler":[[33,22],[15,9],[10,7],[17,12],[17,12],[17,11]],"count":[[253,6]],"kept":[{"done":[2,2],"fresh":[5,1],"new":[245,3],"picked":[1,0]}],"min-error":[0.00390625],"time":56.6748046875,"type":"prune"},{"accuracy":[3.330192783995385],"baseline":[15.755366166732488],"branch":[["i",6.585189801427523,4],["n",5.371757519536884,3],["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))",3.330192783995385,3],["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))",3.330192783995385,3]],"compiler":[[3,2],[3,2],[17,11],[15,9],[277,146]],"count":[[16,3]],"inputs":[["(fma.f64 100 (fma.f64 (/.f64 (exp.f64 i) n) (/.f64 (fma.f64 (pow.f64 i 3) 1/3 (*.f64 (pow.f64 i 4) 1/8)) i) (*.f64 (/.f64 (expm1.f64 i) i) n)) (*.f64 i (*.f64 (exp.f64 i) -50)))","(*.f64 n (*.f64 100 (/.f64 (expm1.f64 i) i)))","(*.f64 n (*.f64 100 (/.f64 (expm1.f64 (log.f64 (pow.f64 (+.f64 (/.f64 i n) 1) n))) i)))","(*.f64 n (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) i)))","(/.f64 (/.f64 (*.f64 (expm1.f64 (log.f64 (pow.f64 (+.f64 (/.f64 i n) 1) n))) 100) i) (/.f64 1 n))","(*.f64 100 (fma.f64 (*.f64 n i) (-.f64 1/2 (/.f64 1/2 n)) n))","(*.f64 100 (/.f64 (expm1.f64 (fma.f64 -1/2 (/.f64 i (/.f64 n i)) i)) (/.f64 i n)))","(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n)))","(fma.f64 (*.f64 (/.f64 n i) (expm1.f64 i)) 100 (*.f64 i (*.f64 (exp.f64 i) -50)))","(*.f64 100 (fma.f64 (*.f64 n i) (+.f64 1/2 (/.f64 -1/2 n)) n))","(/.f64 1 (/.f64 (/.f64 i n) (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100)))","(*.f64 100 (+.f64 (fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 i n)) 2)) (/.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) (cbrt.f64 (/.f64 i n))) (neg.f64 (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))) (fma.f64 (neg.f64 (/.f64 n (cbrt.f64 i))) (/.f64 1 (pow.f64 (cbrt.f64 i) 2)) (*.f64 (/.f64 n (cbrt.f64 i)) (/.f64 1 (pow.f64 (cbrt.f64 i) 2))))))","(*.f64 100 (/.f64 i (/.f64 i n)))","(/.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) 100) i) (/.f64 1 n))","(*.f64 (/.f64 n i) (fma.f64 100 (pow.f64 (+.f64 1 (/.f64 i n)) n) -100))","(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))"]],"link":["."],"name":["Compound Interest"],"oracle":[63.34205667307326],"outputs":[["(*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n)))","(*.f64 n (*.f64 100 (/.f64 (expm1.f64 (log.f64 (pow.f64 (+.f64 (/.f64 i n) 1) n))) i)))","(*.f64 100 (fma.f64 (*.f64 n i) (-.f64 1/2 (/.f64 1/2 n)) n))"]],"time":56.64013671875,"times":[["i",22.43212890625],["n",17.265869140625],["(*.f64 100 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)))",6.076171875],["(/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n))",6.359130859375]],"type":"regimes"},{"bstep":[[13648.852979872694,{"type":"real","value":"NaN"},0.065185546875],[0.0,4.318299830294751e-210,0.028076171875]],"compiler":[[7,6],[15,9]],"method":["left-value","left-value"],"time":0.2890625,"type":"bsearch"},{"compiler":[[74,44]],"egraph":[[4,58,108,0.000323],[3,57,108,0.000266667],[2,55,108,0.000207],[1,48,108,0.000142125],[0,35,108,7.2875e-5]],"inputs":[["(if (<=.f64 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)) 0) (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n))) (if (<=.f64 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)) 20000) (*.f64 n (*.f64 100 (/.f64 (expm1.f64 (log.f64 (pow.f64 (+.f64 (/.f64 i n) 1) n))) i))) (*.f64 100 (fma.f64 (*.f64 n i) (-.f64 1/2 (/.f64 1/2 n)) n))))"]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)) 0) (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n))) (if (<=.f64 (/.f64 (-.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) 1) (/.f64 i n)) 20000) (*.f64 n (*.f64 100 (/.f64 (expm1.f64 (log.f64 (pow.f64 (+.f64 (/.f64 i n) 1) n))) i))) (*.f64 100 (fma.f64 (*.f64 n i) (-.f64 1/2 (/.f64 1/2 n)) n))))","(if (<=.f64 (/.f64 (+.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) -1) (/.f64 i n)) 0) (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n))) (if (<=.f64 (/.f64 (+.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) -1) (/.f64 i n)) 20000) (*.f64 n (*.f64 100 (/.f64 (expm1.f64 (log.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n))) i))) (*.f64 100 (fma.f64 (*.f64 i n) (-.f64 1/2 (/.f64 1/2 n)) n))))","(if (<=.f64 (/.f64 (+.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) -1) (/.f64 i n)) 0) (*.f64 100 (/.f64 (expm1.f64 (*.f64 n (log1p.f64 (/.f64 i n)))) (/.f64 i n))) (if (<=.f64 (/.f64 (+.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n) -1) (/.f64 i n)) 20000) (*.f64 n (*.f64 100 (/.f64 (expm1.f64 (log.f64 (pow.f64 (+.f64 1 (/.f64 i n)) n))) i))) (*.f64 100 (fma.f64 (*.f64 i n) (+.f64 1/2 (/.f64 -1/2 n)) n))))"]],"stop":[["fuel",1],["saturated",1]],"time":10.348876953125,"type":"simplify"},{"time":0.01806640625,"type":"soundness"},{"compiler":[[74,44]],"remove-preprocessing":[[]],"time":21.889892578125,"type":"end"}]