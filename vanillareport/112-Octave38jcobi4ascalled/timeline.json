[{"compiler":[[29,19]],"method":["search"],"sampling":[[12,0.49902379512786865,0.0007320642471313477,0.500244140625],[11,0.4982917308807373,0.0014641284942626953,0.500244140625],[10,0.4968276023864746,0.0029282569885253906,0.500244140625],[9,0.4938993453979492,0.005856513977050781,0.500244140625],[8,0.48804283142089844,0.011713027954101563,0.500244140625],[7,0.4763298034667969,0.023426055908203125,0.500244140625],[6,0.45290374755859375,0.04685211181640625,0.500244140625],[5,0.4060516357421875,0.0937042236328125,0.500244140625],[4,0.312347412109375,0.187408447265625,0.500244140625],[3,0.0,0.499755859375,0.500244140625],[2,0.0,0.499755859375,0.500244140625],[1,0.0,0.499755859375,0.500244140625],[0,0.0,0.499755859375,0.500244140625]],"time":3.39208984375,"type":"analyze"},{"outcomes":[["body",256,"valid",428.9189453125,8256]],"time":436.3759765625,"type":"sample"},{"compiler":[[26,17]],"egraph":[[0,1,1,1.666e-6],[5,6220,13,0.024769749],[4,3774,13,0.013528541],[3,1341,13,0.006722499],[2,200,17,0.001768124],[1,40,26,0.000349582],[0,11,31,9.9916e-5]],"inputs":[["0"],["(/.f64 (/.f64 (*.f64 (*.f64 i i) (*.f64 i i)) (*.f64 (*.f64 2 i) (*.f64 2 i))) (-.f64 (*.f64 (*.f64 2 i) (*.f64 2 i)) 1))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(/.f64 (/.f64 (*.f64 (*.f64 i i) (*.f64 i i)) (*.f64 (*.f64 2 i) (*.f64 2 i))) (-.f64 (*.f64 (*.f64 2 i) (*.f64 2 i)) 1))","(/.f64 (*.f64 i (*.f64 i (*.f64 i i))) (*.f64 (+.f64 (*.f64 4 (*.f64 i i)) -1) (*.f64 4 (*.f64 i i))))","(*.f64 (/.f64 i (fma.f64 4 (*.f64 i i) -1)) (/.f64 (pow.f64 i 3) (*.f64 i (*.f64 i 4))))","(*.f64 (/.f64 i (fma.f64 (*.f64 i i) 4 -1)) (/.f64 i 4))","(/.f64 1/4 (-.f64 4 (/.f64 i (pow.f64 i 3))))","(/.f64 1/4 (+.f64 4 (/.f64 -1 (*.f64 i i))))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":48.43701171875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[5,6220,13,0.024407626],[4,3774,13,0.013304084],[3,1341,13,0.006589],[2,200,17,0.001725417],[1,40,26,0.000328709],[0,11,31,8.9542e-5]],"inputs":[["(/.f64 (/.f64 (*.f64 (*.f64 i i) (*.f64 i i)) (*.f64 (*.f64 2 i) (*.f64 2 i))) (-.f64 (*.f64 (*.f64 2 i) (*.f64 2 i)) 1))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (/.f64 (*.f64 (*.f64 i i) (*.f64 i i)) (*.f64 (*.f64 2 i) (*.f64 2 i))) (-.f64 (*.f64 (*.f64 2 i) (*.f64 2 i)) 1))","(/.f64 (*.f64 i (*.f64 i (*.f64 i i))) (*.f64 (+.f64 (*.f64 4 (*.f64 i i)) -1) (*.f64 4 (*.f64 i i))))","(*.f64 (/.f64 i (fma.f64 4 (*.f64 i i) -1)) (/.f64 (pow.f64 i 3) (*.f64 i (*.f64 i 4))))","(*.f64 (/.f64 i (fma.f64 (*.f64 i i) 4 -1)) (/.f64 i 4))","(/.f64 1/4 (-.f64 4 (/.f64 i (pow.f64 i 3))))","(/.f64 1/4 (+.f64 4 (/.f64 -1 (*.f64 i i))))"]],"stop":[["node limit",1]],"time":35.322998046875,"type":"simplify"},{"compiler":[[35,23]],"time":0.509033203125,"type":"eval"},{"alts":[["(/.f64 1/4 (+.f64 4 (/.f64 -1 (*.f64 i i))))","next",0.36517983094120676],["(/.f64 (/.f64 (*.f64 (*.f64 i i) (*.f64 i i)) (*.f64 (*.f64 2 i) (*.f64 2 i))) (-.f64 (*.f64 (*.f64 2 i) (*.f64 2 i)) 1))","fresh",47.64517434819054]],"compiler":[[10,8],[26,17],[10,8],[26,17]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.33002358094120676],"time":1.512939453125,"type":"prune"},{"compiler":[[29,17]],"locations":[["(/.f64 -1 (*.f64 i i))",0.32204572958105426,true],["(/.f64 1/4 (+.f64 4 (/.f64 -1 (*.f64 i i))))",0.39252358094120676,true]],"time":5.70703125,"type":"localize"},{"count":[[2,24]],"series":[["(/.f64 -1 (*.f64 i i))","i","-inf",0.14208984375],["(/.f64 -1 (*.f64 i i))","i","inf",0.251953125],["(/.f64 -1 (*.f64 i i))","i","0",0.433837890625],["(/.f64 1/4 (+.f64 4 (/.f64 -1 (*.f64 i i))))","i","-inf",0.218994140625],["(/.f64 1/4 (+.f64 4 (/.f64 -1 (*.f64 i i))))","i","inf",0.376953125],["(/.f64 1/4 (+.f64 4 (/.f64 -1 (*.f64 i i))))","i","0",0.43408203125]],"time":1.948974609375,"type":"series"},{"count":[[2,99]],"egraph":[[2,2514,17,0.023896375999999997],[1,203,17,0.003727084],[0,9,20,0.000340084]],"inputs":[["(/.f64 1/4 (+.f64 4 (/.f64 -1 (*.f64 i i))))","(/.f64 -1 (*.f64 i i))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/4 (/.f64 1 (fma.f64 -1 (pow.f64 i -2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4))) (cbrt.f64 (*.f64 1/16 (pow.f64 (fma.f64 -1 (pow.f64 i -2) 4) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/16 (pow.f64 (fma.f64 -1 (pow.f64 i -2) 4) -2))) (cbrt.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/2 (sqrt.f64 (fma.f64 -1 (pow.f64 i -2) 4))) (/.f64 1/2 (sqrt.f64 (fma.f64 -1 (pow.f64 i -2) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/4 (/.f64 1 (neg.f64 (fma.f64 -1 (pow.f64 i -2) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/4 (pow.f64 (/.f64 1 (neg.f64 (fma.f64 -1 (pow.f64 i -2) 4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 -1 (pow.f64 i -2) 4)) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -6) 64)) (-.f64 (+.f64 16 (pow.f64 i -4)) (*.f64 -4 (pow.f64 i -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/4 (-.f64 16 (pow.f64 i -4))) (+.f64 4 (pow.f64 i -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -6) 64)) 1) (-.f64 (+.f64 16 (pow.f64 i -4)) (*.f64 -4 (pow.f64 i -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 1/4 (-.f64 16 (pow.f64 i -4))) 1) (+.f64 4 (pow.f64 i -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (pow.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)) 3)) 1/3) (pow.f64 (sqrt.f64 (pow.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (*.f64 1/16 (pow.f64 (fma.f64 -1 (pow.f64 i -2) 4) -2)) 1/4) 1/3) (cbrt.f64 (/.f64 1 (fma.f64 -1 (pow.f64 i -2) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (*.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)) (cbrt.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)))) 2) 1/3) (cbrt.f64 (cbrt.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)) 5/2) 1/3) (cbrt.f64 (/.f64 1/2 (sqrt.f64 (fma.f64 -1 (pow.f64 i -2) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 1/4) 3) (/.f64 1 (fma.f64 -1 (pow.f64 i -2) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)))) 2) 3) (cbrt.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (cbrt.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)))) 3) (pow.f64 (sqrt.f64 (cbrt.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 (fma.f64 -1 (pow.f64 i -2) 4) 4)) 2) -1) (cbrt.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 1/16 (pow.f64 (fma.f64 -1 (pow.f64 i -2) 4) -2)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1/2 (sqrt.f64 (fma.f64 -1 (pow.f64 i -2) 4))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (fma.f64 -1 (pow.f64 i -2) 4) 4) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (fma.f64 -1 (pow.f64 i -2) 4) 4) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)))) 2)) (cbrt.f64 (log.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4))))) (sqrt.f64 (log.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 1/16 (pow.f64 (fma.f64 -1 (pow.f64 i -2) 4) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 1/2 (sqrt.f64 (fma.f64 -1 (pow.f64 i -2) 4)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (fma.f64 -1 (pow.f64 i -2) 4) 4)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 1/4 (fma.f64 -1 (pow.f64 i -2) 4))) 1) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (neg.f64 (pow.f64 i -2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (neg.f64 (pow.f64 i -2)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (neg.f64 (pow.f64 i -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (neg.f64 (pow.f64 i -2))))) (log.f64 (sqrt.f64 (exp.f64 (neg.f64 (pow.f64 i -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (neg.f64 (pow.f64 i -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 i -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 i -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (neg.f64 (pow.f64 i -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (neg.f64 (pow.f64 i -2))) (cbrt.f64 (pow.f64 i -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 i -4)) (cbrt.f64 (neg.f64 (pow.f64 i -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 -1) i) (/.f64 (sqrt.f64 -1) i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 i -2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 i) (/.f64 1 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1 i) (pow.f64 (/.f64 1 i) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 i) (/.f64 -1 i))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (*.f64 (cbrt.f64 i) i)) (pow.f64 (neg.f64 (pow.f64 (cbrt.f64 i) 2)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (neg.f64 (pow.f64 i -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (neg.f64 (pow.f64 i -2)))) 2) 3) (cbrt.f64 (neg.f64 (pow.f64 i -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (cbrt.f64 (neg.f64 (pow.f64 i -2)))) 3) (pow.f64 (sqrt.f64 (cbrt.f64 (neg.f64 (pow.f64 i -2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 -1) 2) (pow.f64 i -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (*.f64 i (neg.f64 i))) 2) -1) (cbrt.f64 (neg.f64 (pow.f64 i -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (neg.f64 (*.f64 (cbrt.f64 i) i)) -1) (pow.f64 (pow.f64 (cbrt.f64 i) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 -1 1/3) (pow.f64 i -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 i -4) -1) 1/3) (cbrt.f64 (pow.f64 i -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 i -4) (cbrt.f64 (pow.f64 i -4))) 1/3) (cbrt.f64 (cbrt.f64 (neg.f64 (pow.f64 i -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (neg.f64 (pow.f64 i -2)) 5/2) 1/3) (cbrt.f64 (/.f64 (sqrt.f64 -1) i)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (neg.f64 (pow.f64 i -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 i -4) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (neg.f64 (pow.f64 i -2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (sqrt.f64 -1) i) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 i (neg.f64 i)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -1 (pow.f64 i -6)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (log.f64 (neg.f64 (pow.f64 i -2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (neg.f64 (pow.f64 i -2)))) 2)) (cbrt.f64 (log.f64 (neg.f64 (pow.f64 i -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (neg.f64 (pow.f64 i -2))))) (sqrt.f64 (log.f64 (neg.f64 (pow.f64 i -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 i -2))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 i -4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (neg.f64 (pow.f64 i -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (neg.f64 (pow.f64 i -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 -1 (pow.f64 i -6)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (neg.f64 (pow.f64 i -2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (neg.f64 (pow.f64 i -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (neg.f64 (pow.f64 i -2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (neg.f64 (pow.f64 i -2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (neg.f64 (pow.f64 i -2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (sqrt.f64 -1) i)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 i (neg.f64 i))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 -1 (pow.f64 i -6))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (neg.f64 (pow.f64 i -2))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (neg.f64 (pow.f64 i -2))) 3) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 (/.f64 -1 i)) (*.f64 (log.f64 i) 1)))))))"]],"rules":[["egg-rr",50],["egg-rr",49]],"stop":[["node limit",1]],"time":46.2080078125,"type":"rewrite"},{"count":[[123,116]],"egraph":[[4,3210,267,0.015817833],[3,648,267,0.0056667079999999995],[2,214,267,0.001590041],[1,91,267,0.000605541],[0,39,270,0.000189833]],"inputs":[["(*.f64 -1/4 (pow.f64 i 2))","(+.f64 (*.f64 -1 (pow.f64 i 4)) (*.f64 -1/4 (pow.f64 i 2)))","(+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6))))","(+.f64 (*.f64 -16 (pow.f64 i 8)) (+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6)))))","1/16","(+.f64 1/16 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))))","(+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 i 4))) (+.f64 1/16 (*.f64 1/64 (/.f64 1 (pow.f64 i 2)))))","(+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 i 4))) (+.f64 1/16 (+.f64 (*.f64 1/1024 (/.f64 1 (pow.f64 i 6))) (*.f64 1/64 (/.f64 1 (pow.f64 i 2))))))","1/16","(+.f64 1/16 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))))","(+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 i 4))) (+.f64 1/16 (*.f64 1/64 (/.f64 1 (pow.f64 i 2)))))","(+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 i 4))) (+.f64 1/16 (+.f64 (*.f64 1/1024 (/.f64 1 (pow.f64 i 6))) (*.f64 1/64 (/.f64 1 (pow.f64 i 2))))))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (pow.f64 i 2))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1/4 (pow.f64 i 2))","(*.f64 -1/4 (*.f64 i i))","(+.f64 (*.f64 -1 (pow.f64 i 4)) (*.f64 -1/4 (pow.f64 i 2)))","(fma.f64 -1 (pow.f64 i 4) (*.f64 -1/4 (*.f64 i i)))","(-.f64 (*.f64 -1/4 (*.f64 i i)) (pow.f64 i 4))","(+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6))))","(fma.f64 -1 (pow.f64 i 4) (fma.f64 -1/4 (*.f64 i i) (*.f64 -4 (pow.f64 i 6))))","(-.f64 (fma.f64 -1/4 (*.f64 i i) (*.f64 -4 (pow.f64 i 6))) (pow.f64 i 4))","(-.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 -1/4 (*.f64 i i))) (pow.f64 i 4))","(-.f64 (*.f64 -4 (pow.f64 i 6)) (*.f64 (*.f64 i i) (fma.f64 i i 1/4)))","(+.f64 (*.f64 -16 (pow.f64 i 8)) (+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6)))))","(fma.f64 -16 (pow.f64 i 8) (fma.f64 -1 (pow.f64 i 4) (fma.f64 -1/4 (*.f64 i i) (*.f64 -4 (pow.f64 i 6)))))","(fma.f64 -16 (pow.f64 i 8) (-.f64 (fma.f64 -1/4 (*.f64 i i) (*.f64 -4 (pow.f64 i 6))) (pow.f64 i 4)))","(-.f64 (fma.f64 -16 (pow.f64 i 8) (fma.f64 -4 (pow.f64 i 6) (*.f64 -1/4 (*.f64 i i)))) (pow.f64 i 4))","(-.f64 (fma.f64 -1/4 (*.f64 i i) (fma.f64 -4 (pow.f64 i 6) (*.f64 -16 (pow.f64 i 8)))) (pow.f64 i 4))","(-.f64 (*.f64 -16 (pow.f64 i 8)) (fma.f64 i (*.f64 i (fma.f64 i i 1/4)) (*.f64 4 (pow.f64 i 6))))","1/16","(+.f64 1/16 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))))","(+.f64 1/16 (/.f64 1/64 (*.f64 i i)))","(+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 i 4))) (+.f64 1/16 (*.f64 1/64 (/.f64 1 (pow.f64 i 2)))))","(+.f64 (+.f64 1/16 (/.f64 1/64 (*.f64 i i))) (/.f64 1/256 (pow.f64 i 4)))","(+.f64 1/16 (+.f64 (/.f64 1/64 (*.f64 i i)) (/.f64 1/256 (pow.f64 i 4))))","(+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 i 4))) (+.f64 1/16 (+.f64 (*.f64 1/1024 (/.f64 1 (pow.f64 i 6))) (*.f64 1/64 (/.f64 1 (pow.f64 i 2))))))","(+.f64 (/.f64 1/256 (pow.f64 i 4)) (+.f64 1/16 (+.f64 (/.f64 1/64 (*.f64 i i)) (/.f64 1/1024 (pow.f64 i 6)))))","(+.f64 1/16 (+.f64 (/.f64 1/1024 (pow.f64 i 6)) (+.f64 (/.f64 1/64 (*.f64 i i)) (/.f64 1/256 (pow.f64 i 4)))))","1/16","(+.f64 1/16 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))))","(+.f64 1/16 (/.f64 1/64 (*.f64 i i)))","(+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 i 4))) (+.f64 1/16 (*.f64 1/64 (/.f64 1 (pow.f64 i 2)))))","(+.f64 (+.f64 1/16 (/.f64 1/64 (*.f64 i i))) (/.f64 1/256 (pow.f64 i 4)))","(+.f64 1/16 (+.f64 (/.f64 1/64 (*.f64 i i)) (/.f64 1/256 (pow.f64 i 4))))","(+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 i 4))) (+.f64 1/16 (+.f64 (*.f64 1/1024 (/.f64 1 (pow.f64 i 6))) (*.f64 1/64 (/.f64 1 (pow.f64 i 2))))))","(+.f64 (/.f64 1/256 (pow.f64 i 4)) (+.f64 1/16 (+.f64 (/.f64 1/64 (*.f64 i i)) (/.f64 1/1024 (pow.f64 i 6)))))","(+.f64 1/16 (+.f64 (/.f64 1/1024 (pow.f64 i 6)) (+.f64 (/.f64 1/64 (*.f64 i i)) (/.f64 1/256 (pow.f64 i 4)))))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (*.f64 i i))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (*.f64 i i))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (*.f64 i i))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (*.f64 i i))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (*.f64 i i))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (*.f64 i i))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (*.f64 i i))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (*.f64 i i))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (*.f64 i i))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (*.f64 i i))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (*.f64 i i))","(/.f64 -1 (pow.f64 i 2))","(/.f64 -1 (*.f64 i i))"]],"stop":[["node limit",1]],"time":30.505126953125,"type":"simplify"},{"compiler":[[1625,1422]],"time":26.10498046875,"type":"eval"},{"alts":[["(+.f64 (*.f64 -16 (pow.f64 i 8)) (+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6)))))","fresh",29.781986767783504],["(/.f64 1/4 (+.f64 4 (neg.f64 (pow.f64 i -2))))","next",0.39252358094120676]],"compiler":[[24,20],[9,8],[24,20],[9,8]],"count":[[118,2]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[116,2],"picked":[1,0]}],"min-error":[0],"time":24.2138671875,"type":"prune"},{"compiler":[[26,21]],"locations":[["(/.f64 1/4 (+.f64 4 (neg.f64 (pow.f64 i -2))))",0.39252358094120676,true]],"time":7.60400390625,"type":"localize"},{"count":[[1,12]],"series":[["(/.f64 1/4 (+.f64 4 (neg.f64 (pow.f64 i -2))))","i","-inf",0.364990234375],["(/.f64 1/4 (+.f64 4 (neg.f64 (pow.f64 i -2))))","i","inf",0.266845703125],["(/.f64 1/4 (+.f64 4 (neg.f64 (pow.f64 i -2))))","i","0",0.277099609375]],"time":0.983154296875,"type":"series"},{"count":[[1,22]],"egraph":[[2,2579,10,0.020525876],[1,209,10,0.003875959],[0,9,10,0.000364334]],"inputs":[["(/.f64 1/4 (+.f64 4 (neg.f64 (pow.f64 i -2))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 1/4 (+.f64 4 (pow.f64 i -2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/4 (/.f64 1 (+.f64 4 (pow.f64 i -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/4 (+.f64 4 (pow.f64 i -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1/4 (+.f64 4 (pow.f64 i -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 1/4 (+.f64 4 (pow.f64 i -2)))) (cbrt.f64 (pow.f64 (/.f64 1/4 (+.f64 4 (pow.f64 i -2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 1/4 (+.f64 4 (pow.f64 i -2))) 2)) (cbrt.f64 (/.f64 1/4 (+.f64 4 (pow.f64 i -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 1/4 (+.f64 4 (pow.f64 i -2)))) (sqrt.f64 (/.f64 1/4 (+.f64 4 (pow.f64 i -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/4 (/.f64 1 (+.f64 (pow.f64 i -2) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 4 (pow.f64 i -2))) 1/4)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/4 (+.f64 64 (pow.f64 (pow.f64 i -2) 3))) (+.f64 16 (+.f64 (pow.f64 i -4) (*.f64 4 (pow.f64 i -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1/4 (+.f64 16 (pow.f64 i -4))) (+.f64 4 (pow.f64 i -2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1/4 (+.f64 4 (pow.f64 i -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 1/4 (+.f64 4 (pow.f64 i -2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 1/4 (+.f64 4 (pow.f64 i -2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 1/4 (+.f64 4 (pow.f64 i -2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 16 (/.f64 (pow.f64 i -2) 1/4)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 1/4 (+.f64 4 (pow.f64 i -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1/4 (+.f64 4 (pow.f64 i -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 1/4 (+.f64 4 (pow.f64 i -2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1/4 (+.f64 4 (pow.f64 i -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1/4 (+.f64 4 (pow.f64 i -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 1/4 (+.f64 4 (pow.f64 i -2)))))))))"]],"rules":[["egg-rr",22]],"stop":[["node limit",1]],"time":37.809814453125,"type":"rewrite"},{"count":[[34,37]],"egraph":[[4,3179,183,0.015848208000000003],[3,637,183,0.005690792],[2,211,183,0.0015695],[1,90,183,0.00058975],[0,38,186,0.000186208]],"inputs":[["(*.f64 -1/4 (pow.f64 i 2))","(+.f64 (*.f64 -1 (pow.f64 i 4)) (*.f64 -1/4 (pow.f64 i 2)))","(+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6))))","(+.f64 (*.f64 -16 (pow.f64 i 8)) (+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6)))))","1/16","(+.f64 1/16 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))))","(+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 i 4))) (+.f64 1/16 (*.f64 1/64 (/.f64 1 (pow.f64 i 2)))))","(+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 i 4))) (+.f64 1/16 (+.f64 (*.f64 1/1024 (/.f64 1 (pow.f64 i 6))) (*.f64 1/64 (/.f64 1 (pow.f64 i 2))))))","1/16","(+.f64 1/16 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))))","(+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 i 4))) (+.f64 1/16 (*.f64 1/64 (/.f64 1 (pow.f64 i 2)))))","(+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 i 4))) (+.f64 1/16 (+.f64 (*.f64 1/1024 (/.f64 1 (pow.f64 i 6))) (*.f64 1/64 (/.f64 1 (pow.f64 i 2))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1/4 (pow.f64 i 2))","(*.f64 -1/4 (*.f64 i i))","(+.f64 (*.f64 -1 (pow.f64 i 4)) (*.f64 -1/4 (pow.f64 i 2)))","(fma.f64 -1 (pow.f64 i 4) (*.f64 -1/4 (*.f64 i i)))","(-.f64 (*.f64 -1/4 (*.f64 i i)) (pow.f64 i 4))","(+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6))))","(fma.f64 -1 (pow.f64 i 4) (fma.f64 -1/4 (*.f64 i i) (*.f64 -4 (pow.f64 i 6))))","(-.f64 (fma.f64 -1/4 (*.f64 i i) (*.f64 -4 (pow.f64 i 6))) (pow.f64 i 4))","(-.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 -1/4 (*.f64 i i))) (pow.f64 i 4))","(-.f64 (*.f64 -4 (pow.f64 i 6)) (*.f64 (*.f64 i i) (fma.f64 i i 1/4)))","(+.f64 (*.f64 -16 (pow.f64 i 8)) (+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6)))))","(fma.f64 -16 (pow.f64 i 8) (fma.f64 -1 (pow.f64 i 4) (fma.f64 -1/4 (*.f64 i i) (*.f64 -4 (pow.f64 i 6)))))","(fma.f64 -16 (pow.f64 i 8) (-.f64 (fma.f64 -1/4 (*.f64 i i) (*.f64 -4 (pow.f64 i 6))) (pow.f64 i 4)))","(-.f64 (fma.f64 -16 (pow.f64 i 8) (fma.f64 -4 (pow.f64 i 6) (*.f64 -1/4 (*.f64 i i)))) (pow.f64 i 4))","(-.f64 (*.f64 -16 (pow.f64 i 8)) (fma.f64 i (*.f64 i (fma.f64 i i 1/4)) (*.f64 4 (pow.f64 i 6))))","1/16","(+.f64 1/16 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))))","(+.f64 1/16 (/.f64 1/64 (*.f64 i i)))","(+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 i 4))) (+.f64 1/16 (*.f64 1/64 (/.f64 1 (pow.f64 i 2)))))","(+.f64 (+.f64 1/16 (/.f64 1/64 (*.f64 i i))) (/.f64 1/256 (pow.f64 i 4)))","(+.f64 1/16 (+.f64 (/.f64 1/64 (*.f64 i i)) (/.f64 1/256 (pow.f64 i 4))))","(+.f64 (/.f64 1/64 (*.f64 i i)) (+.f64 1/16 (/.f64 1/256 (pow.f64 i 4))))","(+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 i 4))) (+.f64 1/16 (+.f64 (*.f64 1/1024 (/.f64 1 (pow.f64 i 6))) (*.f64 1/64 (/.f64 1 (pow.f64 i 2))))))","(+.f64 (/.f64 1/256 (pow.f64 i 4)) (+.f64 1/16 (+.f64 (/.f64 1/64 (*.f64 i i)) (/.f64 1/1024 (pow.f64 i 6)))))","(+.f64 1/16 (+.f64 (+.f64 (/.f64 1/64 (*.f64 i i)) (/.f64 1/1024 (pow.f64 i 6))) (/.f64 1/256 (pow.f64 i 4))))","(+.f64 1/16 (+.f64 (/.f64 1/1024 (pow.f64 i 6)) (+.f64 (/.f64 1/64 (*.f64 i i)) (/.f64 1/256 (pow.f64 i 4)))))","(+.f64 (/.f64 1/64 (*.f64 i i)) (+.f64 (/.f64 1/256 (pow.f64 i 4)) (+.f64 1/16 (/.f64 1/1024 (pow.f64 i 6)))))","(+.f64 1/16 (+.f64 (/.f64 1/64 (*.f64 i i)) (+.f64 (/.f64 1/256 (pow.f64 i 4)) (/.f64 1/1024 (pow.f64 i 6)))))","1/16","(+.f64 1/16 (*.f64 1/64 (/.f64 1 (pow.f64 i 2))))","(+.f64 1/16 (/.f64 1/64 (*.f64 i i)))","(+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 i 4))) (+.f64 1/16 (*.f64 1/64 (/.f64 1 (pow.f64 i 2)))))","(+.f64 (+.f64 1/16 (/.f64 1/64 (*.f64 i i))) (/.f64 1/256 (pow.f64 i 4)))","(+.f64 1/16 (+.f64 (/.f64 1/64 (*.f64 i i)) (/.f64 1/256 (pow.f64 i 4))))","(+.f64 (/.f64 1/64 (*.f64 i i)) (+.f64 1/16 (/.f64 1/256 (pow.f64 i 4))))","(+.f64 (*.f64 1/256 (/.f64 1 (pow.f64 i 4))) (+.f64 1/16 (+.f64 (*.f64 1/1024 (/.f64 1 (pow.f64 i 6))) (*.f64 1/64 (/.f64 1 (pow.f64 i 2))))))","(+.f64 (/.f64 1/256 (pow.f64 i 4)) (+.f64 1/16 (+.f64 (/.f64 1/64 (*.f64 i i)) (/.f64 1/1024 (pow.f64 i 6)))))","(+.f64 1/16 (+.f64 (+.f64 (/.f64 1/64 (*.f64 i i)) (/.f64 1/1024 (pow.f64 i 6))) (/.f64 1/256 (pow.f64 i 4))))","(+.f64 1/16 (+.f64 (/.f64 1/1024 (pow.f64 i 6)) (+.f64 (/.f64 1/64 (*.f64 i i)) (/.f64 1/256 (pow.f64 i 4)))))","(+.f64 (/.f64 1/64 (*.f64 i i)) (+.f64 (/.f64 1/256 (pow.f64 i 4)) (+.f64 1/16 (/.f64 1/1024 (pow.f64 i 6)))))","(+.f64 1/16 (+.f64 (/.f64 1/64 (*.f64 i i)) (+.f64 (/.f64 1/256 (pow.f64 i 4)) (/.f64 1/1024 (pow.f64 i 6)))))"]],"stop":[["node limit",1]],"time":29.0810546875,"type":"simplify"},{"compiler":[[445,371]],"time":7.18115234375,"type":"eval"},{"alts":[["(+.f64 (*.f64 -16 (pow.f64 i 8)) (+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6)))))","next",29.781986767783504],["(/.f64 1/4 (+.f64 4 (neg.f64 (pow.f64 i -2))))","done",0.39252358094120676]],"compiler":[[24,20],[9,8],[24,20]],"count":[[39,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[37,0],"picked":[1,1]}],"min-error":[0],"time":5.934814453125,"type":"prune"},{"compiler":[[93,75]],"locations":[["(+.f64 (*.f64 -16 (pow.f64 i 8)) (+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6)))))",0.0078125,true],["(+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6))))",0.0078125,true],["(*.f64 -16 (pow.f64 i 8))",0.009070031620653759,true]],"time":24.528076171875,"type":"localize"},{"count":[[3,15]],"series":[["(+.f64 (*.f64 -16 (pow.f64 i 8)) (+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6)))))","i","-inf",0.16796875],["(+.f64 (*.f64 -16 (pow.f64 i 8)) (+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6)))))","i","inf",0.253173828125],["(+.f64 (*.f64 -16 (pow.f64 i 8)) (+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6)))))","i","0",0.17578125],["(+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6))))","i","-inf",0.2431640625],["(+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6))))","i","inf",0.4189453125],["(+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6))))","i","0",0.2890625],["(*.f64 -16 (pow.f64 i 8))","i","-inf",0.505126953125],["(*.f64 -16 (pow.f64 i 8))","i","inf",0.343017578125],["(*.f64 -16 (pow.f64 i 8))","i","0",0.4990234375]],"time":3.02197265625,"type":"series"},{"count":[[3,126]],"egraph":[[2,5818,54,0.036273501],[1,465,54,0.008082668],[0,21,56,0.000705459]],"inputs":[["(*.f64 -16 (pow.f64 i 8))","(+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6))))","(+.f64 (*.f64 -16 (pow.f64 i 8)) (+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6)))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 -16 (pow.f64 i 8)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -16 (pow.f64 i 8)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -16 (pow.f64 i 8))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 i 4) (sqrt.f64 -16)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (pow.f64 i 8) 3) -4096) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (pow.f64 i 16) 256))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 -16) (pow.f64 i 8)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 -16 (pow.f64 i 8)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (pow.f64 i 8) 3) -4096))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 -16 (pow.f64 i 8))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 -16 (pow.f64 i 8))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 -16 (pow.f64 i 8))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 -16 (pow.f64 i 8))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (pow.f64 i 4))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 i 8) (-.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) (/.f64 (pow.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) 2) (-.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) (pow.f64 (cbrt.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) 2) (cbrt.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) (sqrt.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 i 12) (pow.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) 3)) (/.f64 1 (+.f64 (pow.f64 i 8) (*.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 i 8) (pow.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) 2)) (/.f64 1 (-.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 i 8) (*.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))) (+.f64 (pow.f64 i 12) (pow.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (-.f64 (pow.f64 i 8) (pow.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 i 12) (pow.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) 3)) (+.f64 (pow.f64 i 8) (*.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 i 12) (pow.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) 3)) (+.f64 (pow.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) 2) (-.f64 (pow.f64 i 8) (*.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 i 8) (pow.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) 2)) (-.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 i 12) (pow.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) 3))) (neg.f64 (+.f64 (pow.f64 i 8) (*.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 i 8) (pow.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) 2))) (neg.f64 (-.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 (pow.f64 i 4) (*.f64 i (*.f64 i -1/4))) 3) (*.f64 -64 (pow.f64 (pow.f64 i 6) 3))) (+.f64 (*.f64 (+.f64 (pow.f64 i 4) (*.f64 i (*.f64 i -1/4))) (+.f64 (pow.f64 i 4) (*.f64 i (*.f64 i -1/4)))) (-.f64 (*.f64 16 (pow.f64 i 12)) (*.f64 (+.f64 (pow.f64 i 4) (*.f64 i (*.f64 i -1/4))) (*.f64 -4 (pow.f64 i 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) 2) (pow.f64 i 8)) (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 (pow.f64 i 4) (*.f64 i (*.f64 i -1/4))) (+.f64 (pow.f64 i 4) (*.f64 i (*.f64 i -1/4))) (neg.f64 (*.f64 16 (pow.f64 i 12)))) (-.f64 (+.f64 (pow.f64 i 4) (*.f64 i (*.f64 i -1/4))) (*.f64 -4 (pow.f64 i 6))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (exp.f64 (pow.f64 i 4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) (exp.f64 (pow.f64 i 4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (+.f64 1 (expm1.f64 (pow.f64 i 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) (+.f64 1 (expm1.f64 (pow.f64 i 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (pow.f64 i 4))) (exp.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (pow.f64 i 4)) (+.f64 1 (expm1.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (pow.f64 i 4))) (+.f64 1 (expm1.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 -4) (pow.f64 i 6)) (exp.f64 (+.f64 (pow.f64 i 4) (*.f64 i (*.f64 i -1/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 -4 (pow.f64 i 6)))) (exp.f64 (+.f64 (pow.f64 i 4) (*.f64 i (*.f64 i -1/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 -4) (pow.f64 i 6)) (*.f64 (exp.f64 (pow.f64 i 4)) (pow.f64 (exp.f64 -1/4) (*.f64 i i)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 -4 (pow.f64 i 6)))) (*.f64 (exp.f64 (pow.f64 i 4)) (pow.f64 (exp.f64 -1/4) (*.f64 i i)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) (exp.f64 (pow.f64 i 4))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (+.f64 1 (expm1.f64 (pow.f64 i 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) (+.f64 1 (expm1.f64 (pow.f64 i 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (exp.f64 (pow.f64 i 4)) (pow.f64 (exp.f64 -1/4) (*.f64 i i))) (pow.f64 (exp.f64 -4) (pow.f64 i 6))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (+.f64 (pow.f64 i 4) (*.f64 i (*.f64 i -1/4)))) (+.f64 1 (expm1.f64 (*.f64 -4 (pow.f64 i 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (exp.f64 (pow.f64 i 4)) (pow.f64 (exp.f64 -1/4) (*.f64 i i))) (+.f64 1 (expm1.f64 (*.f64 -4 (pow.f64 i 6))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 i 4) -1 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 i i) (*.f64 i i) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) 1 (pow.f64 i 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (pow.f64 i 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 i 8)) (cbrt.f64 (pow.f64 i 4)) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (cbrt.f64 (pow.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) 2)) (pow.f64 i 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) 2)) (cbrt.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (pow.f64 i 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (sqrt.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (pow.f64 i 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (*.f64 (pow.f64 i 6) -1/64) (*.f64 -64 (pow.f64 (pow.f64 i 6) 3))) (/.f64 1 (-.f64 (+.f64 (*.f64 (pow.f64 i 4) 1/16) (*.f64 16 (pow.f64 i 12))) (*.f64 (*.f64 i (*.f64 i -1/4)) (*.f64 -4 (pow.f64 i 6))))) (pow.f64 i 4))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 (pow.f64 i 4) 1/16) (*.f64 16 (pow.f64 i 12))) (/.f64 1 (+.f64 (*.f64 i (*.f64 i -1/4)) (*.f64 4 (pow.f64 i 6)))) (pow.f64 i 4))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (pow.f64 i 16) 256) (-.f64 (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) (/.f64 (pow.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) 2) (-.f64 (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)))) (cbrt.f64 (pow.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4))) 2)) (cbrt.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)))) (sqrt.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (*.f64 (pow.f64 (pow.f64 i 8) 3) -4096) (pow.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) 3)) (/.f64 1 (+.f64 (*.f64 (pow.f64 i 16) 256) (*.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (-.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (*.f64 -16 (pow.f64 i 8)))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 (pow.f64 i 16) 256) (pow.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) 2)) (/.f64 1 (-.f64 (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (*.f64 (pow.f64 i 16) 256) (*.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (-.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (*.f64 -16 (pow.f64 i 8))))) (+.f64 (*.f64 (pow.f64 (pow.f64 i 8) 3) -4096) (pow.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (-.f64 (*.f64 (pow.f64 i 16) 256) (pow.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (pow.f64 (pow.f64 i 8) 3) -4096) (pow.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) 3)) (+.f64 (*.f64 (pow.f64 i 16) 256) (*.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (-.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (*.f64 -16 (pow.f64 i 8))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (*.f64 (pow.f64 (pow.f64 i 8) 3) -4096) (pow.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) 3)) (+.f64 (pow.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) 2) (-.f64 (*.f64 (pow.f64 i 16) 256) (*.f64 (*.f64 -16 (pow.f64 i 8)) (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 i 16) 256) (pow.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) 2)) (-.f64 (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (*.f64 (pow.f64 (pow.f64 i 8) 3) -4096) (pow.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) 3))) (neg.f64 (+.f64 (*.f64 (pow.f64 i 16) 256) (*.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (-.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (*.f64 -16 (pow.f64 i 8)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 (pow.f64 i 16) 256) (pow.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) 2))) (neg.f64 (-.f64 (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)) 3) (pow.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) 3)) (+.f64 (*.f64 (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4))) (-.f64 (pow.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) 2) (*.f64 (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) 2) (*.f64 (pow.f64 i 16) 256)) (-.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (*.f64 -16 (pow.f64 i 8))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4))) (pow.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) 2)) (-.f64 (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 -16 (pow.f64 i 8)))) (exp.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 -16) (pow.f64 i 8)) (+.f64 1 (expm1.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 -16 (pow.f64 i 8)))) (+.f64 1 (expm1.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (exp.f64 (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) (exp.f64 (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (*.f64 (pow.f64 (exp.f64 -16) (pow.f64 i 8)) (exp.f64 (pow.f64 i 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) (*.f64 (pow.f64 (exp.f64 -16) (pow.f64 i 8)) (exp.f64 (pow.f64 i 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))) (pow.f64 (exp.f64 -16) (pow.f64 i 8))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) (+.f64 1 (expm1.f64 (*.f64 -16 (pow.f64 i 8))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))) (+.f64 1 (expm1.f64 (*.f64 -16 (pow.f64 i 8))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 -16) (pow.f64 i 8)) (exp.f64 (pow.f64 i 4))) (exp.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4))) (+.f64 1 (expm1.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 -16) (pow.f64 i 8)) (exp.f64 (pow.f64 i 4))) (+.f64 1 (expm1.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))) (fma.f64 -16 (pow.f64 i 8) (pow.f64 i 4)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -16 (pow.f64 i 8) (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 i 8) -16 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -16 (pow.f64 i 8)) (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))) (*.f64 -16 (pow.f64 i 8)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (pow.f64 i 16) 256)) (cbrt.f64 (*.f64 -16 (pow.f64 i 8))) (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) 2) (cbrt.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) (*.f64 -16 (pow.f64 i 8)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (pow.f64 i 4) (sqrt.f64 -16)) (*.f64 (pow.f64 i 4) (sqrt.f64 -16)) (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) (sqrt.f64 (+.f64 (pow.f64 i 4) (fma.f64 -4 (pow.f64 i 6) (*.f64 i (*.f64 i -1/4))))) (*.f64 -16 (pow.f64 i 8)))))))"]],"rules":[["egg-rr",52],["egg-rr",61],["egg-rr",13]],"stop":[["node limit",1]],"time":65.55810546875,"type":"rewrite"},{"count":[[141,140]],"egraph":[[5,6731,182,0.026340667],[4,2331,182,0.012586959000000002],[3,414,182,0.004079834],[2,127,182,0.001095667],[1,57,182,0.000412459],[0,24,189,0.000131167]],"inputs":[["(*.f64 -1/4 (pow.f64 i 2))","(+.f64 (*.f64 -1 (pow.f64 i 4)) (*.f64 -1/4 (pow.f64 i 2)))","(*.f64 -4 (pow.f64 i 6))","(+.f64 (*.f64 -1 (pow.f64 i 4)) (*.f64 -4 (pow.f64 i 6)))","(*.f64 -4 (pow.f64 i 6))","(+.f64 (*.f64 -1 (pow.f64 i 4)) (*.f64 -4 (pow.f64 i 6)))","(*.f64 -1/4 (pow.f64 i 2))","(+.f64 (*.f64 -1 (pow.f64 i 4)) (*.f64 -1/4 (pow.f64 i 2)))","(+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6))))","(*.f64 -16 (pow.f64 i 8))","(+.f64 (*.f64 -16 (pow.f64 i 8)) (*.f64 -4 (pow.f64 i 6)))","(+.f64 (*.f64 -16 (pow.f64 i 8)) (+.f64 (*.f64 -1 (pow.f64 i 4)) (*.f64 -4 (pow.f64 i 6))))","(*.f64 -16 (pow.f64 i 8))","(+.f64 (*.f64 -16 (pow.f64 i 8)) (*.f64 -4 (pow.f64 i 6)))","(+.f64 (*.f64 -16 (pow.f64 i 8)) (+.f64 (*.f64 -1 (pow.f64 i 4)) (*.f64 -4 (pow.f64 i 6))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1/4 (pow.f64 i 2))","(*.f64 -1/4 (*.f64 i i))","(+.f64 (*.f64 -1 (pow.f64 i 4)) (*.f64 -1/4 (pow.f64 i 2)))","(fma.f64 -1 (pow.f64 i 4) (*.f64 -1/4 (*.f64 i i)))","(-.f64 (*.f64 -1/4 (*.f64 i i)) (pow.f64 i 4))","(*.f64 -4 (pow.f64 i 6))","(+.f64 (*.f64 -1 (pow.f64 i 4)) (*.f64 -4 (pow.f64 i 6)))","(fma.f64 -1 (pow.f64 i 4) (*.f64 -4 (pow.f64 i 6)))","(-.f64 (*.f64 -4 (pow.f64 i 6)) (pow.f64 i 4))","(fma.f64 -4 (pow.f64 i 6) (neg.f64 (pow.f64 i 4)))","(*.f64 -4 (pow.f64 i 6))","(+.f64 (*.f64 -1 (pow.f64 i 4)) (*.f64 -4 (pow.f64 i 6)))","(fma.f64 -1 (pow.f64 i 4) (*.f64 -4 (pow.f64 i 6)))","(-.f64 (*.f64 -4 (pow.f64 i 6)) (pow.f64 i 4))","(fma.f64 -4 (pow.f64 i 6) (neg.f64 (pow.f64 i 4)))","(*.f64 -1/4 (pow.f64 i 2))","(*.f64 -1/4 (*.f64 i i))","(+.f64 (*.f64 -1 (pow.f64 i 4)) (*.f64 -1/4 (pow.f64 i 2)))","(fma.f64 -1 (pow.f64 i 4) (*.f64 -1/4 (*.f64 i i)))","(-.f64 (*.f64 -1/4 (*.f64 i i)) (pow.f64 i 4))","(+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6))))","(fma.f64 -1 (pow.f64 i 4) (fma.f64 -1/4 (*.f64 i i) (*.f64 -4 (pow.f64 i 6))))","(-.f64 (fma.f64 -1/4 (*.f64 i i) (*.f64 -4 (pow.f64 i 6))) (pow.f64 i 4))","(fma.f64 -1/4 (*.f64 i i) (fma.f64 -4 (pow.f64 i 6) (neg.f64 (pow.f64 i 4))))","(fma.f64 -4 (pow.f64 i 6) (-.f64 (*.f64 -1/4 (*.f64 i i)) (pow.f64 i 4)))","(fma.f64 i (-.f64 (*.f64 -1/4 i) (pow.f64 i 3)) (*.f64 -4 (pow.f64 i 6)))","(*.f64 -16 (pow.f64 i 8))","(+.f64 (*.f64 -16 (pow.f64 i 8)) (*.f64 -4 (pow.f64 i 6)))","(fma.f64 -16 (pow.f64 i 8) (*.f64 -4 (pow.f64 i 6)))","(fma.f64 -4 (pow.f64 i 6) (*.f64 -16 (pow.f64 i 8)))","(+.f64 (*.f64 -16 (pow.f64 i 8)) (+.f64 (*.f64 -1 (pow.f64 i 4)) (*.f64 -4 (pow.f64 i 6))))","(fma.f64 -16 (pow.f64 i 8) (fma.f64 -1 (pow.f64 i 4) (*.f64 -4 (pow.f64 i 6))))","(fma.f64 -16 (pow.f64 i 8) (-.f64 (*.f64 -4 (pow.f64 i 6)) (pow.f64 i 4)))","(-.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 -16 (pow.f64 i 8))) (pow.f64 i 4))","(*.f64 -16 (pow.f64 i 8))","(+.f64 (*.f64 -16 (pow.f64 i 8)) (*.f64 -4 (pow.f64 i 6)))","(fma.f64 -16 (pow.f64 i 8) (*.f64 -4 (pow.f64 i 6)))","(fma.f64 -4 (pow.f64 i 6) (*.f64 -16 (pow.f64 i 8)))","(+.f64 (*.f64 -16 (pow.f64 i 8)) (+.f64 (*.f64 -1 (pow.f64 i 4)) (*.f64 -4 (pow.f64 i 6))))","(fma.f64 -16 (pow.f64 i 8) (fma.f64 -1 (pow.f64 i 4) (*.f64 -4 (pow.f64 i 6))))","(fma.f64 -16 (pow.f64 i 8) (-.f64 (*.f64 -4 (pow.f64 i 6)) (pow.f64 i 4)))","(-.f64 (fma.f64 -4 (pow.f64 i 6) (*.f64 -16 (pow.f64 i 8))) (pow.f64 i 4))"]],"stop":[["node limit",1]],"time":40.518798828125,"type":"simplify"},{"compiler":[[4119,3211]],"time":52.864013671875,"type":"eval"},{"alts":[["(+.f64 (*.f64 -16 (pow.f64 i 8)) (+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6)))))","done",29.781986767783504],["(/.f64 1/4 (+.f64 4 (neg.f64 (pow.f64 i -2))))","done",0.39252358094120676]],"compiler":[[24,20],[9,8]],"count":[[142,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[140,0],"picked":[1,1]}],"min-error":[0],"time":23.2421875,"type":"prune"},{"accuracy":[0.36517983094120676],"baseline":[0.36517983094120676],"branch":[["i",0.36517983094120676,1],["(/.f64 (/.f64 (*.f64 (*.f64 i i) (*.f64 i i)) (*.f64 (*.f64 2 i) (*.f64 2 i))) (-.f64 (*.f64 (*.f64 2 i) (*.f64 2 i)) 1))",0.36517983094120676,1]],"compiler":[[2,1],[26,17],[66,49]],"count":[[4,1]],"inputs":[["(+.f64 (*.f64 -16 (pow.f64 i 8)) (+.f64 (*.f64 -1 (pow.f64 i 4)) (+.f64 (*.f64 -1/4 (pow.f64 i 2)) (*.f64 -4 (pow.f64 i 6)))))","(/.f64 1/4 (+.f64 4 (neg.f64 (pow.f64 i -2))))","(/.f64 1/4 (+.f64 4 (/.f64 -1 (*.f64 i i))))","(/.f64 (/.f64 (*.f64 (*.f64 i i) (*.f64 i i)) (*.f64 (*.f64 2 i) (*.f64 2 i))) (-.f64 (*.f64 (*.f64 2 i) (*.f64 2 i)) 1))"]],"link":["."],"name":["Octave 3.8, jcobi/4, as called"],"oracle":[54.70450486597406],"outputs":[["(/.f64 1/4 (+.f64 4 (/.f64 -1 (*.f64 i i))))"]],"time":7.260986328125,"times":[["i",3.330078125],["(/.f64 (/.f64 (*.f64 (*.f64 i i) (*.f64 i i)) (*.f64 (*.f64 2 i) (*.f64 2 i))) (-.f64 (*.f64 (*.f64 2 i) (*.f64 2 i)) 1))",2.632080078125]],"type":"regimes"},{"compiler":[[10,8]],"egraph":[[1,10,13,2.8501000000000004e-5],[0,9,13,1.6959e-5]],"inputs":[["(/.f64 1/4 (+.f64 4 (/.f64 -1 (*.f64 i i))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 1/4 (+.f64 4 (/.f64 -1 (*.f64 i i))))"]],"stop":[["done",1],["saturated",1]],"time":8.162841796875,"type":"simplify"},{"time":0.011962890625,"type":"soundness"},{"compiler":[[10,8]],"remove-preprocessing":[[]],"time":9.22314453125,"type":"end"}]