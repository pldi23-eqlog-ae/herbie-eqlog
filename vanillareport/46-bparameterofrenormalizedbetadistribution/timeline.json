[{"compiler":[[26,19]],"method":["search"],"sampling":[[12,0.06915987524553202,0.004501170420553535,0.9263389543339144],[11,0.06824747583596036,0.006447622494306415,0.9253049016697332],[10,0.0656927574891597,0.00900234084110707,0.9253049016697332],[9,0.06423291843384504,0.01265193847939372,0.9231151430867612],[8,0.05936678824946284,0.01751806866377592,0.9231151430867612],[7,0.05644711013883352,0.02530387695878744,0.918249012902379],[6,0.04671484977006912,0.03503613732755184,0.918249012902379],[5,0.04671484977006912,0.04671484977006912,0.9065703004598618],[4,0.03114323318004608,0.06228646636009216,0.9065703004598618],[3,0.03114323318004608,0.09342969954013824,0.8754270672798157],[2,0.0,0.12457293272018433,0.8754270672798157],[1,0.0,0.12457293272018433,0.8754270672798157],[0,0.0,0.12457293272018433,0.8754270672798157]],"time":15.072998046875,"type":"analyze"},{"outcomes":[["body",256,"invalid",5.849609375,122],["body",256,"valid",393.5634765625,8256]],"time":407.2890625,"type":"sample"},{"compiler":[[15,11]],"egraph":[[0,2,2,2.333e-6],[5,4989,34,0.023505166],[4,977,34,0.010169708],[3,247,34,0.001958583],[2,82,34,0.000575625],[1,32,38,0.000188875],[0,14,38,8.0083e-5]],"inputs":[["0","1"],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","(*.f64 (-.f64 (/.f64 (*.f64 v (-.f64 1 v)) m) 1) (-.f64 1 v))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","(*.f64 (-.f64 1 m) (+.f64 (/.f64 m (/.f64 v (-.f64 1 m))) -1))","(*.f64 (-.f64 1 m) (+.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) -1))","(*.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(*.f64 (-.f64 1 m) (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","(*.f64 (-.f64 (/.f64 (*.f64 v (-.f64 1 v)) m) 1) (-.f64 1 v))","(*.f64 (-.f64 1 v) (+.f64 (/.f64 v (/.f64 m (-.f64 1 v))) -1))","(*.f64 (-.f64 1 v) (+.f64 (*.f64 (/.f64 v m) (-.f64 1 v)) -1))","(*.f64 (-.f64 1 v) (fma.f64 (/.f64 v m) (-.f64 1 v) -1))","(*.f64 (-.f64 1 v) (fma.f64 (-.f64 1 v) (/.f64 v m) -1))","(*.f64 (-.f64 1 v) (fma.f64 v (/.f64 (-.f64 1 v) m) -1))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":46.322021484375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[6,6381,17,0.028640666000000002],[5,2056,17,0.016530208],[4,475,17,0.004413708],[3,131,17,0.0010508739999999998],[2,46,17,0.000340541],[1,20,19,0.000126916],[0,9,19,5.7958e-5]],"inputs":[["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))"]],"method":["egg-herbie"],"outputs":[["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","(*.f64 (-.f64 1 m) (+.f64 (/.f64 m (/.f64 v (-.f64 1 m))) -1))","(*.f64 (-.f64 1 m) (+.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) -1))","(*.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1))","(*.f64 (-.f64 1 m) (fma.f64 (-.f64 1 m) (/.f64 m v) -1))"]],"stop":[["node limit",1]],"time":39.653076171875,"type":"simplify"},{"compiler":[[27,19]],"time":0.451904296875,"type":"eval"},{"alts":[["(*.f64 (-.f64 1 m) (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","fresh",0.08203125],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","next",0.05859375]],"compiler":[[14,10],[15,11],[14,10],[15,11]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.04296875],"time":1.89892578125,"type":"prune"},{"compiler":[[42,27]],"locations":[["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)",0.00390625,true],["(*.f64 m (-.f64 1 m))",0.01171875,true],["(/.f64 (*.f64 m (-.f64 1 m)) v)",0.03515625,true],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))",0.0390625,true]],"time":9.421142578125,"type":"localize"},{"count":[[4,63]],"series":[["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","v","-inf",0.14404296875],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","v","inf",0.14794921875],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","v","0",0.1689453125],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","m","-inf",0.1650390625],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","m","inf",0.263916015625],["(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)","m","0",0.159912109375],["(*.f64 m (-.f64 1 m))","m","-inf",0.302978515625],["(*.f64 m (-.f64 1 m))","m","inf",0.225830078125],["(*.f64 m (-.f64 1 m))","m","0",0.1650390625],["(/.f64 (*.f64 m (-.f64 1 m)) v)","v","-inf",0.217041015625],["(/.f64 (*.f64 m (-.f64 1 m)) v)","v","inf",0.251953125],["(/.f64 (*.f64 m (-.f64 1 m)) v)","v","0",0.282958984375],["(/.f64 (*.f64 m (-.f64 1 m)) v)","m","-inf",0.328857421875],["(/.f64 (*.f64 m (-.f64 1 m)) v)","m","inf",0.64794921875],["(/.f64 (*.f64 m (-.f64 1 m)) v)","m","0",0.3310546875],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","v","-inf",0.348876953125],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","v","inf",0.359130859375],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","v","0",0.559814453125],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","m","-inf",0.319091796875],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","m","inf",0.4208984375],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","m","0",0.464111328125]],"time":6.56201171875,"type":"series"},{"count":[[4,208]],"egraph":[[2,2947,45,0.025604458],[1,201,49,0.0037797499999999997],[0,9,49,0.000252208]],"inputs":[["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(*.f64 m (-.f64 1 m))","(-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) (*.f64 (neg.f64 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) (*.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) (-.f64 1 m)) (*.f64 -1 (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 1 m) (*.f64 (/.f64 m v) (-.f64 1 m))) (*.f64 (-.f64 1 m) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 1 m)) (fma.f64 (/.f64 m v) (-.f64 1 m) -1))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 1 m)) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 1 m)) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 1 m)) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 m 3)) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1)) (*.f64 (fma.f64 m (+.f64 m 1) 1) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (*.f64 m m)) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1)) (*.f64 (+.f64 m 1) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 m 3)) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1)) (*.f64 (fma.f64 m (+.f64 m 1) 1) (fma.f64 (/.f64 m v) (-.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (*.f64 m m)) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1)) (*.f64 (+.f64 m 1) (fma.f64 (/.f64 m v) (-.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1) (-.f64 1 (pow.f64 m 3))) (*.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1)) (fma.f64 m (+.f64 m 1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1) (-.f64 1 (pow.f64 m 3))) (*.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1) (fma.f64 m (+.f64 m 1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1) (-.f64 1 (*.f64 m m))) (*.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1)) (+.f64 m 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1) (-.f64 1 (*.f64 m m))) (*.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1) (+.f64 m 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 m 3)) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) (fma.f64 m (+.f64 m 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (*.f64 m m)) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) (+.f64 m 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1) (-.f64 1 m)) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1) (-.f64 1 m)) (fma.f64 (/.f64 m v) (-.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 m) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1)) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 m) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1)) (fma.f64 (/.f64 m v) (-.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) (-.f64 1 (pow.f64 m 3))) (fma.f64 m (+.f64 m 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) (-.f64 1 (*.f64 m m))) (+.f64 m 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (-.f64 1 m)) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) (*.f64 (neg.f64 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) (*.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 m) (*.f64 (/.f64 m v) (-.f64 1 m)) (*.f64 (-.f64 1 m) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) (-.f64 1 m) (*.f64 -1 (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) 1 (*.f64 (neg.f64 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) 1 (*.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 2) (*.f64 (neg.f64 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 2) (*.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 2) (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) (*.f64 (neg.f64 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 2) (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) (*.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) (sqrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) (*.f64 (neg.f64 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) (sqrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) (*.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1) (/.f64 1 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1))) (*.f64 (neg.f64 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1) (/.f64 1 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1))) (*.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1) (/.f64 1 (fma.f64 (/.f64 m v) (-.f64 1 m) 1)) (*.f64 (neg.f64 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1) (/.f64 1 (fma.f64 (/.f64 m v) (-.f64 1 m) 1)) (*.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1) (-.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1) (*.f64 (neg.f64 m) (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1) (-.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1) (*.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) (neg.f64 m)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 m v) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 m v) (-.f64 1 m)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (/.f64 1 (/.f64 v (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (*.f64 (-.f64 1 m) (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 m v) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 m) (*.f64 m (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (-.f64 1 m)) (/.f64 1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (-.f64 1 m)) (*.f64 (/.f64 1 v) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 2) (*.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2)) (cbrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2)) (*.f64 (cbrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) (*.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) (*.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (neg.f64 (-.f64 1 m))) (/.f64 1 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 v) (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m 1) (/.f64 (-.f64 1 m) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) 1) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m v) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 2) 1) (/.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) 1) (/.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (pow.f64 (cbrt.f64 v) 2)) (/.f64 (-.f64 1 m) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 v) -2) (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) (pow.f64 (cbrt.f64 v) 2)) (/.f64 m (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 2) (pow.f64 (cbrt.f64 v) 2)) (cbrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) (pow.f64 (cbrt.f64 v) 2)) (/.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (sqrt.f64 v)) (/.f64 (-.f64 1 m) (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) (sqrt.f64 v)) (/.f64 m (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 v -1/2) (/.f64 (*.f64 m (-.f64 1 m)) (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 2) (sqrt.f64 v)) (/.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 m (-.f64 1 m)) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (-.f64 1 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (/.f64 m v) (-.f64 1 m) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1)) 2) (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1)) (sqrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1)) -1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 m (*.f64 (neg.f64 m) m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 m (*.f64 m (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 m (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 m) (-.f64 1 m))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 m) (-.f64 1 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 m) (-.f64 1 m)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 m) (-.f64 1 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 m (-.f64 1 m)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 m 3)) m) (fma.f64 m (+.f64 m 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (*.f64 m m)) m) (+.f64 m 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (-.f64 1 (pow.f64 m 3))) (fma.f64 m (+.f64 m 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 m (-.f64 1 (*.f64 m m))) (+.f64 m 1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 m (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 m (-.f64 1 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 m (-.f64 1 m)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 m (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 m (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 m (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 m (-.f64 1 m))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m 1 (*.f64 (neg.f64 m) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m 1 (*.f64 m (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 m (*.f64 (neg.f64 m) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 m (*.f64 m (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 m) (cbrt.f64 (*.f64 m m)) (*.f64 (neg.f64 m) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 m) (cbrt.f64 (*.f64 m m)) (*.f64 m (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m m)) (cbrt.f64 m) (*.f64 (neg.f64 m) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 m m)) (cbrt.f64 m) (*.f64 m (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 m) (sqrt.f64 m) (*.f64 (neg.f64 m) m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 m) (sqrt.f64 m) (*.f64 m (neg.f64 m)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (/.f64 m v) (-.f64 1 m) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (*.f64 (/.f64 m v) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 m v) (-.f64 1 m) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 2) (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) (sqrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1) (/.f64 1 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1) (/.f64 1 (fma.f64 (/.f64 m v) (-.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1) (-.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1)) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (-.f64 1 (*.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1) (fma.f64 (/.f64 m v) (-.f64 1 m) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1)) (neg.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1)) (neg.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) (fma.f64 (/.f64 m v) (-.f64 1 m) 1)) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -3) -1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) 1) (+.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2) -1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log.f64 (*.f64 (/.f64 m v) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (*.f64 (log.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (/.f64 m v) (-.f64 1 m) -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 1 (/.f64 v (-.f64 1 m))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (*.f64 (-.f64 1 m) (/.f64 1 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (/.f64 m v) (-.f64 1 m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 m) (*.f64 m (/.f64 1 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (-.f64 1 m)) (/.f64 1 v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (-.f64 1 m)) (*.f64 (/.f64 1 v) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 m v) (-.f64 1 m)) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 2) (*.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (/.f64 1 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2)) (cbrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 v (-.f64 1 m)) m) -2)) (*.f64 (cbrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) (*.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) (/.f64 1 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) (*.f64 (sqrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (neg.f64 (-.f64 1 m))) (/.f64 1 (neg.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 v) (*.f64 m (-.f64 1 m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m 1) (/.f64 (-.f64 1 m) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 1 m) 1) (/.f64 m v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m v) (-.f64 1 m) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 2) 1) (/.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) 1) (/.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) v) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m (pow.f64 (cbrt.f64 v) 2)) (/.f64 (-.f64 1 m) (cbrt.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 v) -2) (/.f64 (*.f64 m (-.f64 1 m)) (cbrt.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 1 m) (pow.f64 (cbrt.f64 v) 2)) (/.f64 m (cbrt.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 2) (pow.f64 (cbrt.f64 v) 2)) (cbrt.f64 (*.f64 (/.f64 m v) (-.f64 1 m))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) (pow.f64 (cbrt.f64 v) 2)) (/.f64 (sqrt.f64 (*.f64 m (-.f64 1 m))) (cbrt.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m (sqrt.f64 v)) (/.f64 (-.f64 1 m) (sqrt.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (-.f64 1 m) (sqrt.f64 v)) (/.f64 m (sqrt.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 v -1/2) (/.f64 (*.f64 m (-.f64 1 m)) (sqrt.f64 v)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) 2) (sqrt.f64 v)) (/.f64 (cbrt.f64 (*.f64 m (-.f64 1 m))) (sqrt.f64 v)) -1)))))"]],"rules":[["egg-rr",66],["egg-rr",33],["egg-rr",54],["egg-rr",55]],"stop":[["node limit",1]],"time":59.02587890625,"type":"rewrite"},{"count":[[271,241]],"egraph":[[4,2982,687,0.019796707],[3,622,688,0.006117957],[2,215,770,0.001737624],[1,99,799,0.000680541],[0,38,864,0.000226291]],"inputs":[["-1","(-.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (*.f64 (+.f64 1 (/.f64 1 v)) m)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(*.f64 -1 (-.f64 1 m))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(*.f64 -1 (-.f64 1 m))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(/.f64 m v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","m","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 -1 (pow.f64 m 2))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(*.f64 -1 (pow.f64 m 2))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","-1","(-.f64 (/.f64 m v) 1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(/.f64 (*.f64 m (-.f64 1 m)) v)","-1","-1"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) 1)","(fma.f64 (+.f64 1 (/.f64 1 v)) m -1)","(+.f64 -1 (+.f64 m (/.f64 m v)))","(+.f64 m (+.f64 -1 (/.f64 m v)))","(-.f64 (/.f64 m v) (-.f64 1 m))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (*.f64 (+.f64 1 (/.f64 1 v)) m)) 1)","(+.f64 (*.f64 -2 (/.f64 (*.f64 m m) v)) (fma.f64 (+.f64 1 (/.f64 1 v)) m -1))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (fma.f64 (+.f64 1 (/.f64 1 v)) m -1))","(+.f64 -1 (fma.f64 -2 (*.f64 (/.f64 m v) m) (+.f64 m (/.f64 m v))))","(+.f64 m (+.f64 (fma.f64 -2 (*.f64 m (/.f64 m v)) (/.f64 m v)) -1))","(+.f64 m (+.f64 (*.f64 (/.f64 m v) (+.f64 (*.f64 m -2) 1)) -1))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(+.f64 (fma.f64 -2 (/.f64 (*.f64 m m) v) (fma.f64 (+.f64 1 (/.f64 1 v)) m (/.f64 (pow.f64 m 3) v))) -1)","(+.f64 -1 (fma.f64 -2 (/.f64 m (/.f64 v m)) (fma.f64 (+.f64 1 (/.f64 1 v)) m (/.f64 (pow.f64 m 3) v))))","(+.f64 -1 (fma.f64 -2 (*.f64 (/.f64 m v) m) (+.f64 m (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))))","(+.f64 (+.f64 m (/.f64 m v)) (+.f64 -1 (*.f64 (*.f64 m (/.f64 m v)) (+.f64 -2 m))))","(+.f64 (-.f64 (/.f64 m v) (-.f64 1 m)) (*.f64 (*.f64 m (/.f64 m v)) (+.f64 -2 m)))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 (*.f64 m (/.f64 m v)) (+.f64 -2 m))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (fma.f64 (+.f64 1 (/.f64 1 v)) m (/.f64 (pow.f64 m 3) v)))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (fma.f64 (+.f64 1 (/.f64 1 v)) m (/.f64 (pow.f64 m 3) v)))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (+.f64 m (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v))))","(+.f64 m (+.f64 (*.f64 (*.f64 m (/.f64 m v)) (+.f64 -2 m)) (/.f64 m v)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(+.f64 (fma.f64 -2 (/.f64 (*.f64 m m) v) (fma.f64 (+.f64 1 (/.f64 1 v)) m (/.f64 (pow.f64 m 3) v))) -1)","(+.f64 -1 (fma.f64 -2 (/.f64 m (/.f64 v m)) (fma.f64 (+.f64 1 (/.f64 1 v)) m (/.f64 (pow.f64 m 3) v))))","(+.f64 -1 (fma.f64 -2 (*.f64 (/.f64 m v) m) (+.f64 m (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))))","(+.f64 (+.f64 m (/.f64 m v)) (+.f64 -1 (*.f64 (*.f64 m (/.f64 m v)) (+.f64 -2 m))))","(+.f64 (-.f64 (/.f64 m v) (-.f64 1 m)) (*.f64 (*.f64 m (/.f64 m v)) (+.f64 -2 m)))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 (*.f64 m (/.f64 m v)) (+.f64 -2 m))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (fma.f64 (+.f64 1 (/.f64 1 v)) m (/.f64 (pow.f64 m 3) v)))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (fma.f64 (+.f64 1 (/.f64 1 v)) m (/.f64 (pow.f64 m 3) v)))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (+.f64 m (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v))))","(+.f64 m (+.f64 (*.f64 (*.f64 m (/.f64 m v)) (+.f64 -2 m)) (/.f64 m v)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(+.f64 (fma.f64 -2 (/.f64 (*.f64 m m) v) (fma.f64 (+.f64 1 (/.f64 1 v)) m (/.f64 (pow.f64 m 3) v))) -1)","(+.f64 -1 (fma.f64 -2 (/.f64 m (/.f64 v m)) (fma.f64 (+.f64 1 (/.f64 1 v)) m (/.f64 (pow.f64 m 3) v))))","(+.f64 -1 (fma.f64 -2 (*.f64 (/.f64 m v) m) (+.f64 m (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))))","(+.f64 (+.f64 m (/.f64 m v)) (+.f64 -1 (*.f64 (*.f64 m (/.f64 m v)) (+.f64 -2 m))))","(+.f64 (-.f64 (/.f64 m v) (-.f64 1 m)) (*.f64 (*.f64 m (/.f64 m v)) (+.f64 -2 m)))","(/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)","(*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))","(*.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 m v))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (neg.f64 (-.f64 1 m)))","(-.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))","(fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (+.f64 -1 m))","(fma.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 m v) (+.f64 -1 m))","(+.f64 m (fma.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 m v) -1))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (neg.f64 (-.f64 1 m)))","(-.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))","(fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (+.f64 -1 m))","(fma.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 m v) (+.f64 -1 m))","(+.f64 m (fma.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 m v) -1))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (neg.f64 (-.f64 1 m)))","(-.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))","(fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (+.f64 -1 m))","(fma.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 m v) (+.f64 -1 m))","(+.f64 m (fma.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 m v) -1))","(*.f64 -1 (-.f64 1 m))","(neg.f64 (-.f64 1 m))","(+.f64 -1 m)","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (neg.f64 (-.f64 1 m)))","(-.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))","(fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (+.f64 -1 m))","(fma.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 m v) (+.f64 -1 m))","(+.f64 m (fma.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 m v) -1))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (neg.f64 (-.f64 1 m)))","(-.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))","(fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (+.f64 -1 m))","(fma.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 m v) (+.f64 -1 m))","(+.f64 m (fma.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 m v) -1))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (neg.f64 (-.f64 1 m)))","(-.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))","(fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (+.f64 -1 m))","(fma.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 m v) (+.f64 -1 m))","(+.f64 m (fma.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 m v) -1))","(*.f64 -1 (-.f64 1 m))","(neg.f64 (-.f64 1 m))","(+.f64 -1 m)","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (neg.f64 (-.f64 1 m)))","(-.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))","(fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (+.f64 -1 m))","(fma.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 m v) (+.f64 -1 m))","(+.f64 m (fma.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 m v) -1))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (neg.f64 (-.f64 1 m)))","(-.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))","(fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (+.f64 -1 m))","(fma.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 m v) (+.f64 -1 m))","(+.f64 m (fma.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 m v) -1))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (neg.f64 (-.f64 1 m)))","(-.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))","(fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (+.f64 -1 m))","(fma.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 m v) (+.f64 -1 m))","(+.f64 m (fma.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 m v) -1))","(/.f64 m v)","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (/.f64 (neg.f64 (*.f64 m m)) v))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (/.f64 (neg.f64 (*.f64 m m)) v))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (/.f64 (neg.f64 (*.f64 m m)) v))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(/.f64 (neg.f64 (*.f64 m m)) v)","(/.f64 (*.f64 m (neg.f64 m)) v)","(*.f64 (/.f64 m v) (neg.f64 m))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (/.f64 (neg.f64 (*.f64 m m)) v))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (/.f64 (neg.f64 (*.f64 m m)) v))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (/.f64 (neg.f64 (*.f64 m m)) v))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(/.f64 (neg.f64 (*.f64 m m)) v)","(/.f64 (*.f64 m (neg.f64 m)) v)","(*.f64 (/.f64 m v) (neg.f64 m))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (/.f64 (neg.f64 (*.f64 m m)) v))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (/.f64 (neg.f64 (*.f64 m m)) v))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (/.f64 (neg.f64 (*.f64 m m)) v))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","m","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(fma.f64 -1 (*.f64 m m) m)","(-.f64 m (*.f64 m m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(fma.f64 -1 (*.f64 m m) m)","(-.f64 m (*.f64 m m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(fma.f64 -1 (*.f64 m m) m)","(-.f64 m (*.f64 m m))","(*.f64 -1 (pow.f64 m 2))","(neg.f64 (*.f64 m m))","(*.f64 m (neg.f64 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(fma.f64 -1 (*.f64 m m) m)","(-.f64 m (*.f64 m m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(fma.f64 -1 (*.f64 m m) m)","(-.f64 m (*.f64 m m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(fma.f64 -1 (*.f64 m m) m)","(-.f64 m (*.f64 m m))","(*.f64 -1 (pow.f64 m 2))","(neg.f64 (*.f64 m m))","(*.f64 m (neg.f64 m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(fma.f64 -1 (*.f64 m m) m)","(-.f64 m (*.f64 m m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(fma.f64 -1 (*.f64 m m) m)","(-.f64 m (*.f64 m m))","(+.f64 (*.f64 -1 (pow.f64 m 2)) m)","(fma.f64 -1 (*.f64 m m) m)","(-.f64 m (*.f64 m m))","-1","(-.f64 (/.f64 m v) 1)","(+.f64 (/.f64 m v) -1)","(+.f64 -1 (/.f64 m v))","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 m v) (-.f64 (/.f64 (neg.f64 (*.f64 m m)) v) 1))","(+.f64 -1 (-.f64 (/.f64 m v) (/.f64 m (/.f64 v m))))","(+.f64 -1 (-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m)))","(+.f64 -1 (*.f64 (-.f64 1 m) (/.f64 m v)))","(+.f64 -1 (*.f64 m (/.f64 (-.f64 1 m) v)))","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 m v) (-.f64 (/.f64 (neg.f64 (*.f64 m m)) v) 1))","(+.f64 -1 (-.f64 (/.f64 m v) (/.f64 m (/.f64 v m))))","(+.f64 -1 (-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m)))","(+.f64 -1 (*.f64 (-.f64 1 m) (/.f64 m v)))","(+.f64 -1 (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(/.f64 (neg.f64 (*.f64 m m)) v)","(/.f64 (*.f64 m (neg.f64 m)) v)","(*.f64 (/.f64 m v) (neg.f64 m))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (/.f64 (neg.f64 (*.f64 m m)) v))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 m v) (-.f64 (/.f64 (neg.f64 (*.f64 m m)) v) 1))","(+.f64 -1 (-.f64 (/.f64 m v) (/.f64 m (/.f64 v m))))","(+.f64 -1 (-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m)))","(+.f64 -1 (*.f64 (-.f64 1 m) (/.f64 m v)))","(+.f64 -1 (*.f64 m (/.f64 (-.f64 1 m) v)))","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 m v) (-.f64 (/.f64 (neg.f64 (*.f64 m m)) v) 1))","(+.f64 -1 (-.f64 (/.f64 m v) (/.f64 m (/.f64 v m))))","(+.f64 -1 (-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m)))","(+.f64 -1 (*.f64 (-.f64 1 m) (/.f64 m v)))","(+.f64 -1 (*.f64 m (/.f64 (-.f64 1 m) v)))","(*.f64 -1 (/.f64 (pow.f64 m 2) v))","(/.f64 (neg.f64 (*.f64 m m)) v)","(/.f64 (*.f64 m (neg.f64 m)) v)","(*.f64 (/.f64 m v) (neg.f64 m))","(+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v)))","(+.f64 (/.f64 m v) (/.f64 (neg.f64 (*.f64 m m)) v))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 m v) (-.f64 (/.f64 (neg.f64 (*.f64 m m)) v) 1))","(+.f64 -1 (-.f64 (/.f64 m v) (/.f64 m (/.f64 v m))))","(+.f64 -1 (-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m)))","(+.f64 -1 (*.f64 (-.f64 1 m) (/.f64 m v)))","(+.f64 -1 (*.f64 m (/.f64 (-.f64 1 m) v)))","(-.f64 (+.f64 (/.f64 m v) (*.f64 -1 (/.f64 (pow.f64 m 2) v))) 1)","(+.f64 (/.f64 m v) (-.f64 (/.f64 (neg.f64 (*.f64 m m)) v) 1))","(+.f64 -1 (-.f64 (/.f64 m v) (/.f64 m (/.f64 v m))))","(+.f64 -1 (-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m)))","(+.f64 -1 (*.f64 (-.f64 1 m) (/.f64 m v)))","(+.f64 -1 (*.f64 m (/.f64 (-.f64 1 m) v)))","(/.f64 (*.f64 m (-.f64 1 m)) v)","(+.f64 (/.f64 m v) (/.f64 (neg.f64 (*.f64 m m)) v))","(-.f64 (/.f64 m v) (/.f64 m (/.f64 v m)))","(-.f64 (/.f64 m v) (*.f64 (/.f64 m v) m))","(*.f64 (-.f64 1 m) (/.f64 m v))","(*.f64 m (/.f64 (-.f64 1 m) v))","-1","-1"]],"stop":[["node limit",1]],"time":41.525146484375,"type":"simplify"},{"compiler":[[4689,3068]],"time":53.786865234375,"type":"eval"},{"alts":[["(*.f64 (-.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 m 3)) m) (fma.f64 m (+.f64 m 1) 1)) v) 1) (-.f64 1 m))","fresh",0.3483200195368841],["(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","next",0.05859375],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","done",0.05859375],["(*.f64 (fma.f64 (/.f64 m (pow.f64 (cbrt.f64 v) 2)) (/.f64 (-.f64 1 m) (cbrt.f64 v)) -1) (-.f64 1 m))","fresh",0.46698779305326066]],"compiler":[[24,18],[17,13],[15,11],[20,14],[24,18],[17,13],[20,14]],"count":[[243,4]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[241,3],"picked":[1,1]}],"min-error":[0],"time":83.30908203125,"type":"prune"},{"compiler":[[51,37]],"locations":[["(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))",0.00390625,true],["(pow.f64 (-.f64 1 m) 2)",0.01171875,true],["(/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)",0.02734375,true],["(*.f64 m (pow.f64 (-.f64 1 m) 2))",0.04296875,true]],"time":11.432861328125,"type":"localize"},{"count":[[4,51]],"series":[["(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","v","-inf",0.173095703125],["(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","v","inf",0.19580078125],["(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","v","0",0.2001953125],["(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","m","-inf",0.210205078125],["(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","m","inf",0.193115234375],["(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","m","0",0.198974609375],["(pow.f64 (-.f64 1 m) 2)","m","-inf",0.14892578125],["(pow.f64 (-.f64 1 m) 2)","m","inf",0.157958984375],["(pow.f64 (-.f64 1 m) 2)","m","0",0.156982421875],["(/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)","v","-inf",0.308837890625],["(/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)","v","inf",0.35400390625],["(/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)","v","0",1.1708984375],["(/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)","m","-inf",0.287109375],["(/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)","m","inf",0.205078125],["(/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)","m","0",0.245849609375],["(*.f64 m (pow.f64 (-.f64 1 m) 2))","m","-inf",0.281982421875],["(*.f64 m (pow.f64 (-.f64 1 m) 2))","m","inf",0.31201171875],["(*.f64 m (pow.f64 (-.f64 1 m) 2))","m","0",0.302978515625]],"time":5.338134765625,"type":"series"},{"count":[[4,245]],"egraph":[[2,3664,47,0.027041459],[1,260,49,0.004824875],[0,12,51,0.000356083]],"inputs":[["(*.f64 m (pow.f64 (-.f64 1 m) 2))","(/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)","(pow.f64 (-.f64 1 m) 2)","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 m (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 m) (pow.f64 (-.f64 1 m) 2))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 m) (pow.f64 (-.f64 1 m) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 m) (pow.f64 (-.f64 1 m) 2)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 m) (pow.f64 (-.f64 1 m) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 m (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) 4) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) 6) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 m) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (fma.f64 2 (log1p.f64 (neg.f64 m)) (log.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (fma.f64 2 (log1p.f64 (neg.f64 m)) (log.f64 m)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (/.f64 1 (*.f64 v (pow.f64 (-.f64 1 m) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (*.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 m) 2) (*.f64 m (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) (/.f64 1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) (/.f64 1 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) (pow.f64 (cbrt.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) 2) (cbrt.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) 4)) (*.f64 (cbrt.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2))) (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) (sqrt.f64 v)) (/.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) (*.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 v) (*.f64 m (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m 1) (/.f64 (pow.f64 (-.f64 1 m) 2) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) 1) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) 4)) 1) (/.f64 (cbrt.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2))) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) 1) (/.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (pow.f64 (cbrt.f64 v) 2)) (/.f64 (pow.f64 (-.f64 1 m) 2) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 v) -2) (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (pow.f64 (cbrt.f64 v) 2)) (/.f64 m (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) 4)) (pow.f64 (cbrt.f64 v) 2)) (cbrt.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) (pow.f64 (cbrt.f64 v) 2)) (/.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (sqrt.f64 v)) (/.f64 (pow.f64 (-.f64 1 m) 2) (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (sqrt.f64 v)) (/.f64 m (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 v -1/2) (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) 4)) (sqrt.f64 v)) (/.f64 (cbrt.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2))) (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) (sqrt.f64 v)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (pow.f64 (-.f64 1 m) -2) (/.f64 v m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) -2) (/.f64 v m)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 m) (*.f64 (neg.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 m) (*.f64 (-.f64 1 m) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (-.f64 1 m) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (pow.f64 (-.f64 1 m) 2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (-.f64 1 m) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (-.f64 1 m) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (-.f64 1 m) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (-.f64 1 m) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (-.f64 1 m) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 m) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 m) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 m) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (pow.f64 (-.f64 1 m) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 4) (pow.f64 (cbrt.f64 (-.f64 1 m)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (pow.f64 (cbrt.f64 (-.f64 1 m)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 1 m)) (pow.f64 (-.f64 1 m) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 m) 3/2) (sqrt.f64 (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 m) (pow.f64 (cbrt.f64 (-.f64 1 m)) 2)) (cbrt.f64 (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (-.f64 1 (*.f64 m m)) 2) (pow.f64 (+.f64 m 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (-.f64 1 (pow.f64 m 3)) 2) (pow.f64 (+.f64 1 (fma.f64 m m m)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (*.f64 m m)) (-.f64 1 (pow.f64 m 3))) (*.f64 (+.f64 m 1) (+.f64 1 (fma.f64 m m m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 m 3)) (-.f64 1 (*.f64 m m))) (*.f64 (+.f64 1 (fma.f64 m m m)) (+.f64 m 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 m 3)) (-.f64 1 m)) (+.f64 1 (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (*.f64 m m)) (-.f64 1 m)) (+.f64 m 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 m) (-.f64 1 (pow.f64 m 3))) (+.f64 1 (fma.f64 m m m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 m) (-.f64 1 (*.f64 m m))) (+.f64 m 1))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (pow.f64 (-.f64 1 m) 2))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 1 m) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (-.f64 1 m) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (pow.f64 (-.f64 1 m) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 1 m) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log1p.f64 (neg.f64 m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log1p.f64 (neg.f64 m))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 1 m) (*.f64 (neg.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 1 m) (*.f64 (-.f64 1 m) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 m) 1 (*.f64 (neg.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 m) 1 (*.f64 (-.f64 1 m) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 m) -1 (*.f64 (neg.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 m) -1 (*.f64 (-.f64 1 m) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (-.f64 1 m) (*.f64 (neg.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (-.f64 1 m) (*.f64 (-.f64 1 m) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 1 m)) (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (*.f64 (neg.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 1 m)) (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (*.f64 (-.f64 1 m) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (cbrt.f64 (-.f64 1 m)) (*.f64 (neg.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (cbrt.f64 (-.f64 1 m)) (*.f64 (-.f64 1 m) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (neg.f64 (cbrt.f64 (-.f64 1 m))) (*.f64 (neg.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (neg.f64 (cbrt.f64 (-.f64 1 m))) (*.f64 (-.f64 1 m) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 1 m)) (sqrt.f64 (-.f64 1 m)) (*.f64 (neg.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 1 m)) (sqrt.f64 (-.f64 1 m)) (*.f64 (-.f64 1 m) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 1 m)) (neg.f64 (sqrt.f64 (-.f64 1 m))) (*.f64 (neg.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 1 m)) (neg.f64 (sqrt.f64 (-.f64 1 m))) (*.f64 (-.f64 1 m) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 1 m)) (*.f64 (sqrt.f64 (-.f64 1 m)) -1) (*.f64 (neg.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 1 m)) (*.f64 (sqrt.f64 (-.f64 1 m)) -1) (*.f64 (-.f64 1 m) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (pow.f64 m 3)) (/.f64 1 (+.f64 1 (fma.f64 m m m))) (*.f64 (neg.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (pow.f64 m 3)) (/.f64 1 (+.f64 1 (fma.f64 m m m))) (*.f64 (-.f64 1 m) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (*.f64 m m)) (/.f64 1 (+.f64 m 1)) (*.f64 (neg.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (*.f64 m m)) (/.f64 1 (+.f64 m 1)) (*.f64 (-.f64 1 m) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 4)) (sqrt.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 2)) (*.f64 (neg.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 4)) (sqrt.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 2)) (*.f64 (-.f64 1 m) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (-.f64 1 m))) (sqrt.f64 (-.f64 1 m)) (*.f64 (neg.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (-.f64 1 m))) (sqrt.f64 (-.f64 1 m)) (*.f64 (-.f64 1 m) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 2)) (cbrt.f64 (-.f64 1 m)) (*.f64 (neg.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 2)) (cbrt.f64 (-.f64 1 m)) (*.f64 (-.f64 1 m) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 (-.f64 1 m)) 2)) (cbrt.f64 (-.f64 1 m)) (*.f64 (neg.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 (-.f64 1 m)) 2)) (cbrt.f64 (-.f64 1 m)) (*.f64 (-.f64 1 m) (neg.f64 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 (-.f64 1 m))) (sqrt.f64 (-.f64 1 m)) (*.f64 (neg.f64 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 (-.f64 1 m))) (sqrt.f64 (-.f64 1 m)) (*.f64 (-.f64 1 m) (neg.f64 m)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (-.f64 1 m) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) (/.f64 (pow.f64 (-.f64 1 m) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) 2) (/.f64 1 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) 2) (cbrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) (sqrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 3) (pow.f64 (-.f64 1 m) 3)) (/.f64 1 (fma.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) (sqrt.f64 v)) (sqrt.f64 (-.f64 1 m))) (-.f64 (/.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) (sqrt.f64 v)) (sqrt.f64 (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2)) (+.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 3) (pow.f64 (-.f64 1 m) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 3) (pow.f64 (-.f64 1 m) 3)) (fma.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 3) (pow.f64 (-.f64 1 m) 3)) (+.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2) (*.f64 (-.f64 1 m) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 3) (pow.f64 (-.f64 1 m) 3))) (neg.f64 (fma.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) 2)) (neg.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (-.f64 1 m) 2) (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2)) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2)) (+.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 3) (pow.f64 (-.f64 1 m) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (-.f64 1 m)) (exp.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (-.f64 1 m))) (exp.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (-.f64 1 m)) (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (-.f64 1 m))) (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))) (exp.f64 (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) (+.f64 1 (expm1.f64 (-.f64 1 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))) (+.f64 1 (expm1.f64 (-.f64 1 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (-.f64 1 m))) (exp.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (-.f64 1 m)) (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (-.f64 1 m))) (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))) (exp.f64 (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) (+.f64 1 (expm1.f64 (-.f64 1 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))) (+.f64 1 (expm1.f64 (-.f64 1 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 1 (*.f64 v (pow.f64 (-.f64 1 m) -2))) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (*.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 1 v)) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (-.f64 1 m) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) (+.f64 (-.f64 1 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) (fma.f64 (neg.f64 (cbrt.f64 (-.f64 1 m))) (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 m) 1 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 m) -1 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 1 m) 2) (*.f64 m (/.f64 1 v)) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) (/.f64 1 v) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) (/.f64 1 (neg.f64 v)) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 1 (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (-.f64 1 m) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) 2) (/.f64 1 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) (+.f64 (-.f64 1 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) 2) (/.f64 1 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) (fma.f64 (neg.f64 (cbrt.f64 (-.f64 1 m))) (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (-.f64 1 m)) (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) 2) (+.f64 (-.f64 1 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) 2) (fma.f64 (neg.f64 (cbrt.f64 (-.f64 1 m))) (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) 2) (cbrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) (+.f64 (-.f64 1 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) 2) (cbrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) (fma.f64 (neg.f64 (cbrt.f64 (-.f64 1 m))) (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) (pow.f64 (cbrt.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) 2) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) 2) (cbrt.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) 4)) (*.f64 (cbrt.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2))) (/.f64 1 v)) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (cbrt.f64 (-.f64 1 m)) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (neg.f64 (cbrt.f64 (-.f64 1 m))) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 1 m)) (sqrt.f64 (-.f64 1 m)) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 1 m)) (neg.f64 (sqrt.f64 (-.f64 1 m))) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 1 m)) (*.f64 (sqrt.f64 (-.f64 1 m)) -1) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) (sqrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) (+.f64 (-.f64 1 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) (sqrt.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) (fma.f64 (neg.f64 (cbrt.f64 (-.f64 1 m))) (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) (sqrt.f64 v)) (/.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) (sqrt.f64 v)) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) (*.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) (/.f64 1 v)) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (pow.f64 m 3)) (/.f64 1 (+.f64 1 (fma.f64 m m m))) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 3) (pow.f64 (-.f64 1 m) 3)) (/.f64 1 (fma.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2))) (+.f64 (-.f64 1 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 3) (pow.f64 (-.f64 1 m) 3)) (/.f64 1 (fma.f64 (-.f64 1 m) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2))) (fma.f64 (neg.f64 (cbrt.f64 (-.f64 1 m))) (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 v) (*.f64 m (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (*.f64 m m)) (/.f64 1 (+.f64 m 1)) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) 1 (+.f64 (-.f64 1 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)) 1 (fma.f64 (neg.f64 (cbrt.f64 (-.f64 1 m))) (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 4)) (sqrt.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 2)) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (-.f64 1 m))) (sqrt.f64 (-.f64 1 m)) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m 1) (/.f64 (pow.f64 (-.f64 1 m) 2) v) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) 1) (/.f64 m v) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) 4)) 1) (/.f64 (cbrt.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2))) v) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) 1) (/.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) v) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m (pow.f64 (cbrt.f64 v) 2)) (/.f64 (pow.f64 (-.f64 1 m) 2) (cbrt.f64 v)) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 v) -2) (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) (cbrt.f64 v)) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (pow.f64 (cbrt.f64 v) 2)) (/.f64 m (cbrt.f64 v)) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) 4)) (pow.f64 (cbrt.f64 v) 2)) (cbrt.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) (pow.f64 (cbrt.f64 v) 2)) (/.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) (cbrt.f64 v)) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m (sqrt.f64 v)) (/.f64 (pow.f64 (-.f64 1 m) 2) (sqrt.f64 v)) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (sqrt.f64 v)) (/.f64 m (sqrt.f64 v)) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 v -1/2) (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) (sqrt.f64 v)) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) 4)) (sqrt.f64 v)) (/.f64 (cbrt.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2))) (sqrt.f64 v)) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) (sqrt.f64 v)) (sqrt.f64 (-.f64 1 m))) (-.f64 (/.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) (sqrt.f64 v)) (sqrt.f64 (-.f64 1 m))) (+.f64 (-.f64 1 m) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) (sqrt.f64 v)) (sqrt.f64 (-.f64 1 m))) (-.f64 (/.f64 (*.f64 (-.f64 1 m) (sqrt.f64 m)) (sqrt.f64 v)) (sqrt.f64 (-.f64 1 m))) (fma.f64 (neg.f64 (cbrt.f64 (-.f64 1 m))) (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (-.f64 1 m)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 2)) (cbrt.f64 (-.f64 1 m)) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 (-.f64 1 m)) 2)) (cbrt.f64 (-.f64 1 m)) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 (-.f64 1 m))) (sqrt.f64 (-.f64 1 m)) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))))"]],"rules":[["egg-rr",109],["egg-rr",68],["egg-rr",48],["egg-rr",20]],"stop":[["node limit",1]],"time":62.43994140625,"type":"rewrite"},{"count":[[296,284]],"egraph":[[4,2709,546,0.018804542],[3,608,562,0.00569675],[2,235,622,0.0017673340000000002],[1,110,657,0.0007421670000000001],[0,43,677,0.000229625]],"inputs":[["m","(+.f64 (*.f64 -2 (pow.f64 m 2)) m)","(+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 (pow.f64 m 3) m))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 (pow.f64 m 3) m))","(pow.f64 m 3)","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 m (pow.f64 m 3)))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 m (pow.f64 m 3)))","(pow.f64 m 3)","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 m (pow.f64 m 3)))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 m (pow.f64 m 3)))","(/.f64 m v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 m v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))","1","(+.f64 1 (*.f64 -2 m))","(+.f64 1 (+.f64 (*.f64 -2 m) (pow.f64 m 2)))","(+.f64 1 (+.f64 (*.f64 -2 m) (pow.f64 m 2)))","(pow.f64 m 2)","(+.f64 (*.f64 -2 m) (pow.f64 m 2))","(+.f64 1 (+.f64 (*.f64 -2 m) (pow.f64 m 2)))","(+.f64 1 (+.f64 (*.f64 -2 m) (pow.f64 m 2)))","(pow.f64 m 2)","(+.f64 (*.f64 -2 m) (pow.f64 m 2))","(+.f64 1 (+.f64 (*.f64 -2 m) (pow.f64 m 2)))","(+.f64 1 (+.f64 (*.f64 -2 m) (pow.f64 m 2)))","-1","(-.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (*.f64 (+.f64 1 (/.f64 1 v)) m)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)","(*.f64 -1 (-.f64 1 m))","(*.f64 -1 (-.f64 1 m))"]],"method":["egg-herbie"],"outputs":[["m","(+.f64 (*.f64 -2 (pow.f64 m 2)) m)","(fma.f64 -2 (*.f64 m m) m)","(fma.f64 m (*.f64 m -2) m)","(*.f64 m (fma.f64 m -2 1))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 (pow.f64 m 3) m))","(+.f64 (fma.f64 -2 (*.f64 m m) m) (pow.f64 m 3))","(+.f64 m (*.f64 (*.f64 m m) (+.f64 m -2)))","(fma.f64 (*.f64 m m) (+.f64 m -2) m)","(fma.f64 m (*.f64 m (+.f64 m -2)) m)","(+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 (pow.f64 m 3) m))","(+.f64 (fma.f64 -2 (*.f64 m m) m) (pow.f64 m 3))","(+.f64 m (*.f64 (*.f64 m m) (+.f64 m -2)))","(fma.f64 (*.f64 m m) (+.f64 m -2) m)","(fma.f64 m (*.f64 m (+.f64 m -2)) m)","(pow.f64 m 3)","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(fma.f64 -2 (*.f64 m m) (pow.f64 m 3))","(*.f64 (*.f64 m m) (+.f64 m -2))","(*.f64 m (*.f64 m (+.f64 m -2)))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 m (pow.f64 m 3)))","(+.f64 (fma.f64 -2 (*.f64 m m) m) (pow.f64 m 3))","(+.f64 m (*.f64 (*.f64 m m) (+.f64 m -2)))","(fma.f64 (*.f64 m m) (+.f64 m -2) m)","(fma.f64 m (*.f64 m (+.f64 m -2)) m)","(+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 m (pow.f64 m 3)))","(+.f64 (fma.f64 -2 (*.f64 m m) m) (pow.f64 m 3))","(+.f64 m (*.f64 (*.f64 m m) (+.f64 m -2)))","(fma.f64 (*.f64 m m) (+.f64 m -2) m)","(fma.f64 m (*.f64 m (+.f64 m -2)) m)","(pow.f64 m 3)","(+.f64 (*.f64 -2 (pow.f64 m 2)) (pow.f64 m 3))","(fma.f64 -2 (*.f64 m m) (pow.f64 m 3))","(*.f64 (*.f64 m m) (+.f64 m -2))","(*.f64 m (*.f64 m (+.f64 m -2)))","(+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 m (pow.f64 m 3)))","(+.f64 (fma.f64 -2 (*.f64 m m) m) (pow.f64 m 3))","(+.f64 m (*.f64 (*.f64 m m) (+.f64 m -2)))","(fma.f64 (*.f64 m m) (+.f64 m -2) m)","(fma.f64 m (*.f64 m (+.f64 m -2)) m)","(+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 m (pow.f64 m 3)))","(+.f64 (fma.f64 -2 (*.f64 m m) m) (pow.f64 m 3))","(+.f64 m (*.f64 (*.f64 m m) (+.f64 m -2)))","(fma.f64 (*.f64 m m) (+.f64 m -2) m)","(fma.f64 m (*.f64 m (+.f64 m -2)) m)","(/.f64 m v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 m v))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 m v))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 m v))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 m v))","(fma.f64 -2 (*.f64 m (/.f64 m v)) (/.f64 m v))","(*.f64 (/.f64 m v) (fma.f64 m -2 1))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))","(+.f64 (fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 m v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 m v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (/.f64 m v) (fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v)))","(+.f64 (/.f64 m v) (*.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2)))","(+.f64 (/.f64 m v) (*.f64 (/.f64 m v) (*.f64 m (+.f64 m -2))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))","(+.f64 (fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 m v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 m v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (/.f64 m v) (fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v)))","(+.f64 (/.f64 m v) (*.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2)))","(+.f64 (/.f64 m v) (*.f64 (/.f64 m v) (*.f64 m (+.f64 m -2))))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2))","(*.f64 (/.f64 m v) (*.f64 m (+.f64 m -2)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))","(+.f64 (fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 m v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 m v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (/.f64 m v) (fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v)))","(+.f64 (/.f64 m v) (*.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2)))","(+.f64 (/.f64 m v) (*.f64 (/.f64 m v) (*.f64 m (+.f64 m -2))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))","(+.f64 (fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 m v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 m v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (/.f64 m v) (fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v)))","(+.f64 (/.f64 m v) (*.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2)))","(+.f64 (/.f64 m v) (*.f64 (/.f64 m v) (*.f64 m (+.f64 m -2))))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2))","(*.f64 (/.f64 m v) (*.f64 m (+.f64 m -2)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))","(+.f64 (fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 m v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 m v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (/.f64 m v) (fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v)))","(+.f64 (/.f64 m v) (*.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2)))","(+.f64 (/.f64 m v) (*.f64 (/.f64 m v) (*.f64 m (+.f64 m -2))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))","(+.f64 (fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 m v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 m v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (/.f64 m v) (fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v)))","(+.f64 (/.f64 m v) (*.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2)))","(+.f64 (/.f64 m v) (*.f64 (/.f64 m v) (*.f64 m (+.f64 m -2))))","1","(+.f64 1 (*.f64 -2 m))","(+.f64 1 (*.f64 m -2))","(fma.f64 m -2 1)","(+.f64 1 (+.f64 (*.f64 -2 m) (pow.f64 m 2)))","(+.f64 1 (fma.f64 -2 m (*.f64 m m)))","(+.f64 1 (*.f64 m (+.f64 m -2)))","(fma.f64 m (+.f64 m -2) 1)","(+.f64 1 (+.f64 (*.f64 -2 m) (pow.f64 m 2)))","(+.f64 1 (fma.f64 -2 m (*.f64 m m)))","(+.f64 1 (*.f64 m (+.f64 m -2)))","(fma.f64 m (+.f64 m -2) 1)","(pow.f64 m 2)","(*.f64 m m)","(+.f64 (*.f64 -2 m) (pow.f64 m 2))","(fma.f64 -2 m (*.f64 m m))","(*.f64 m (+.f64 m -2))","(+.f64 1 (+.f64 (*.f64 -2 m) (pow.f64 m 2)))","(+.f64 1 (fma.f64 -2 m (*.f64 m m)))","(+.f64 1 (*.f64 m (+.f64 m -2)))","(fma.f64 m (+.f64 m -2) 1)","(+.f64 1 (+.f64 (*.f64 -2 m) (pow.f64 m 2)))","(+.f64 1 (fma.f64 -2 m (*.f64 m m)))","(+.f64 1 (*.f64 m (+.f64 m -2)))","(fma.f64 m (+.f64 m -2) 1)","(pow.f64 m 2)","(*.f64 m m)","(+.f64 (*.f64 -2 m) (pow.f64 m 2))","(fma.f64 -2 m (*.f64 m m))","(*.f64 m (+.f64 m -2))","(+.f64 1 (+.f64 (*.f64 -2 m) (pow.f64 m 2)))","(+.f64 1 (fma.f64 -2 m (*.f64 m m)))","(+.f64 1 (*.f64 m (+.f64 m -2)))","(fma.f64 m (+.f64 m -2) 1)","(+.f64 1 (+.f64 (*.f64 -2 m) (pow.f64 m 2)))","(+.f64 1 (fma.f64 -2 m (*.f64 m m)))","(+.f64 1 (*.f64 m (+.f64 m -2)))","(fma.f64 m (+.f64 m -2) 1)","-1","(-.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) 1)","(fma.f64 (+.f64 1 (/.f64 1 v)) m -1)","(fma.f64 m (+.f64 1 (/.f64 1 v)) -1)","(+.f64 m (-.f64 (/.f64 m v) 1))","(+.f64 m (+.f64 (/.f64 m v) -1))","(+.f64 (/.f64 m v) (+.f64 m -1))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (*.f64 (+.f64 1 (/.f64 1 v)) m)) 1)","(+.f64 (*.f64 -2 (/.f64 (*.f64 m m) v)) (fma.f64 (+.f64 1 (/.f64 1 v)) m -1))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (fma.f64 m (+.f64 1 (/.f64 1 v)) -1))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (+.f64 m (-.f64 (/.f64 m v) 1)))","(+.f64 m (+.f64 (fma.f64 -2 (*.f64 m (/.f64 m v)) (/.f64 m v)) -1))","(+.f64 m (+.f64 (*.f64 (/.f64 m v) (fma.f64 m -2 1)) -1))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(+.f64 (fma.f64 -2 (/.f64 (*.f64 m m) v) (fma.f64 (+.f64 1 (/.f64 1 v)) m (/.f64 (pow.f64 m 3) v))) -1)","(+.f64 -1 (fma.f64 -2 (/.f64 m (/.f64 v m)) (fma.f64 m (+.f64 1 (/.f64 1 v)) (/.f64 (pow.f64 m 3) v))))","(+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 -2 (*.f64 (/.f64 m v) m) (+.f64 m (-.f64 (/.f64 m v) 1))))","(+.f64 (/.f64 m v) (+.f64 (+.f64 m -1) (*.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2))))","(+.f64 m (+.f64 (/.f64 m v) (fma.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2) -1)))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2))","(*.f64 (/.f64 m v) (*.f64 m (+.f64 m -2)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (fma.f64 (+.f64 1 (/.f64 1 v)) m (/.f64 (pow.f64 m 3) v)))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (fma.f64 m (+.f64 1 (/.f64 1 v)) (/.f64 (pow.f64 m 3) v)))","(+.f64 (fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v)) (+.f64 m (/.f64 m v)))","(+.f64 (*.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2)) (+.f64 m (/.f64 m v)))","(+.f64 (/.f64 m v) (fma.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2) m))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(+.f64 (fma.f64 -2 (/.f64 (*.f64 m m) v) (fma.f64 (+.f64 1 (/.f64 1 v)) m (/.f64 (pow.f64 m 3) v))) -1)","(+.f64 -1 (fma.f64 -2 (/.f64 m (/.f64 v m)) (fma.f64 m (+.f64 1 (/.f64 1 v)) (/.f64 (pow.f64 m 3) v))))","(+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 -2 (*.f64 (/.f64 m v) m) (+.f64 m (-.f64 (/.f64 m v) 1))))","(+.f64 (/.f64 m v) (+.f64 (+.f64 m -1) (*.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2))))","(+.f64 m (+.f64 (/.f64 m v) (fma.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2) -1)))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2))","(*.f64 (/.f64 m v) (*.f64 m (+.f64 m -2)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v)))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (fma.f64 (+.f64 1 (/.f64 1 v)) m (/.f64 (pow.f64 m 3) v)))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (fma.f64 m (+.f64 1 (/.f64 1 v)) (/.f64 (pow.f64 m 3) v)))","(+.f64 (fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v)) (+.f64 m (/.f64 m v)))","(+.f64 (*.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2)) (+.f64 m (/.f64 m v)))","(+.f64 (/.f64 m v) (fma.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2) m))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (+.f64 1 (/.f64 1 v)) m) (/.f64 (pow.f64 m 3) v))) 1)","(+.f64 (fma.f64 -2 (/.f64 (*.f64 m m) v) (fma.f64 (+.f64 1 (/.f64 1 v)) m (/.f64 (pow.f64 m 3) v))) -1)","(+.f64 -1 (fma.f64 -2 (/.f64 m (/.f64 v m)) (fma.f64 m (+.f64 1 (/.f64 1 v)) (/.f64 (pow.f64 m 3) v))))","(+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 -2 (*.f64 (/.f64 m v) m) (+.f64 m (-.f64 (/.f64 m v) 1))))","(+.f64 (/.f64 m v) (+.f64 (+.f64 m -1) (*.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2))))","(+.f64 m (+.f64 (/.f64 m v) (fma.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2) -1)))","(/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)","(/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2)))","(*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))","(*.f64 m (/.f64 (pow.f64 (-.f64 1 m) 2) v))","(*.f64 -1 (-.f64 1 m))","(neg.f64 (-.f64 1 m))","(+.f64 m -1)","(*.f64 -1 (-.f64 1 m))","(neg.f64 (-.f64 1 m))","(+.f64 m -1)"]],"stop":[["node limit",1]],"time":40.10107421875,"type":"simplify"},{"compiler":[[6036,4165]],"time":71.724853515625,"type":"eval"},{"alts":[["(-.f64 (/.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) (/.f64 (pow.f64 (-.f64 1 m) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))))","fresh",11.3203125],["(+.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v))) (*.f64 -1 (-.f64 1 m)))","next",0.0234375],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","done",0.05859375]],"compiler":[[45,31],[25,18],[15,11],[45,31],[25,18]],"count":[[288,3]],"kept":[{"done":[1,1],"fresh":[2,0],"new":[284,2],"picked":[1,0]}],"min-error":[0],"time":102.480224609375,"type":"prune"},{"compiler":[[92,58]],"locations":[["(*.f64 -2 (/.f64 (pow.f64 m 2) v))",0.015625,true],["(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))",0.015625,true],["(/.f64 (pow.f64 m 3) v)",9.206192844869776,true],["(/.f64 (pow.f64 m 2) v)",11.065462324089662,true]],"time":20.661865234375,"type":"localize"},{"count":[[4,18]],"series":[["(*.f64 -2 (/.f64 (pow.f64 m 2) v))","v","-inf",0.14697265625],["(*.f64 -2 (/.f64 (pow.f64 m 2) v))","v","inf",0.158203125],["(*.f64 -2 (/.f64 (pow.f64 m 2) v))","v","0",0.148193359375],["(*.f64 -2 (/.f64 (pow.f64 m 2) v))","m","-inf",0.166015625],["(*.f64 -2 (/.f64 (pow.f64 m 2) v))","m","inf",0.302978515625],["(*.f64 -2 (/.f64 (pow.f64 m 2) v))","m","0",0.260986328125],["(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))","v","-inf",0.47900390625],["(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))","v","inf",0.449951171875],["(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))","v","0",0.43994140625],["(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))","m","-inf",0.26708984375],["(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))","m","inf",0.222900390625],["(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))","m","0",0.262939453125],["(/.f64 (pow.f64 m 3) v)","v","-inf",0.287109375],["(/.f64 (pow.f64 m 3) v)","v","inf",0.344970703125],["(/.f64 (pow.f64 m 3) v)","v","0",0.47900390625],["(/.f64 (pow.f64 m 3) v)","m","-inf",0.3291015625],["(/.f64 (pow.f64 m 3) v)","m","inf",0.333984375],["(/.f64 (pow.f64 m 3) v)","m","0",0.387939453125],["(/.f64 (pow.f64 m 2) v)","v","-inf",0.2880859375],["(/.f64 (pow.f64 m 2) v)","v","inf",0.35791015625],["(/.f64 (pow.f64 m 2) v)","v","0",0.6279296875],["(/.f64 (pow.f64 m 2) v)","m","-inf",0.192138671875],["(/.f64 (pow.f64 m 2) v)","m","inf",0.3701171875],["(/.f64 (pow.f64 m 2) v)","m","0",0.468994140625]],"time":8.02001953125,"type":"series"},{"count":[[4,208]],"egraph":[[2,4848,47,0.035385791],[1,333,47,0.006688499],[0,14,47,0.000425791]],"inputs":[["(/.f64 (pow.f64 m 2) v)","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v)))","(*.f64 -2 (/.f64 (pow.f64 m 2) v))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 m (/.f64 m v)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m m) (/.f64 1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (/.f64 m v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 m (/.f64 m v))) (pow.f64 (cbrt.f64 (*.f64 m (/.f64 m v))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 m (/.f64 m v))) 2) (cbrt.f64 (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 m 4)) (*.f64 (pow.f64 (cbrt.f64 m) 2) (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (sqrt.f64 v)) (/.f64 m (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m (neg.f64 m)) (/.f64 1 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 v) (*.f64 m m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 v) 2)) (/.f64 (*.f64 m m) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 v)) (/.f64 (*.f64 m m) (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m 1) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (pow.f64 (cbrt.f64 v) 2)) (/.f64 m (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 m 4)) 1) (/.f64 (pow.f64 (cbrt.f64 m) 2) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 m 4)) (pow.f64 (cbrt.f64 v) 2)) (cbrt.f64 (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 m 4)) (sqrt.f64 v)) (/.f64 (pow.f64 (cbrt.f64 m) 2) (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 m (/.f64 m v)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 m (/.f64 m v)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 m (/.f64 m v))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 m (sqrt.f64 v)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 v (*.f64 m m)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 m m) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 m 4) (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 m (/.f64 m v)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 m (/.f64 m v)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 m 6) (pow.f64 v 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 m (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 m (/.f64 m v))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (pow.f64 m 3) v))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 m (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 m m) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 m 3) (/.f64 1 v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 m 3) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (cbrt.f64 v)) (pow.f64 (/.f64 m (cbrt.f64 v)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 m (cbrt.f64 v)) 2) (/.f64 m (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 m 3/2) (sqrt.f64 v)) (/.f64 (pow.f64 m 3/2) (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (sqrt.f64 v)) (/.f64 (*.f64 m m) (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 m 3)) (/.f64 1 (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 v) (pow.f64 m 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 m 3/2) (*.f64 (pow.f64 m 3/2) (/.f64 1 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m m) (sqrt.f64 v)) (/.f64 m (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 v) 2)) (/.f64 (pow.f64 m 3) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 v)) (/.f64 (pow.f64 m 3) (sqrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m 1) (*.f64 m (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m m) 1) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 m 3/2) 1) (/.f64 (pow.f64 m 3/2) v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m (pow.f64 (cbrt.f64 v) 2)) (/.f64 (*.f64 m m) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 m m) (pow.f64 (cbrt.f64 v) 2)) (/.f64 m (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 m 3/2) (pow.f64 (cbrt.f64 v) 2)) (/.f64 (pow.f64 m 3/2) (cbrt.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 m 3) v) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 m (cbrt.f64 v)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 m 3/2) (sqrt.f64 v)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 m 3) v) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 v (pow.f64 m 3)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 m 3) (neg.f64 v)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 m 6) (*.f64 v v)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (pow.f64 m 3) v)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (pow.f64 m 3) v))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 m 3) v) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (pow.f64 m 3) v)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (pow.f64 m 3) v)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (pow.f64 m 3) v)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (pow.f64 m 3) v)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 (/.f64 (pow.f64 m 4) (*.f64 v v)) 4) (-.f64 (-.f64 (*.f64 (*.f64 m (/.f64 m v)) -2) (/.f64 m v)) (/.f64 (pow.f64 m 3) v))) (/.f64 (pow.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) 2) (-.f64 (-.f64 (*.f64 (*.f64 m (/.f64 m v)) -2) (/.f64 m v)) (/.f64 (pow.f64 m 3) v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))) 2) (cbrt.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))) (sqrt.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 (*.f64 m (/.f64 m v)) 3) -8 (pow.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) 3)) (/.f64 1 (fma.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) (fma.f64 (/.f64 1 v) (+.f64 (pow.f64 m 3) m) (neg.f64 (*.f64 (*.f64 m (/.f64 m v)) -2))) (*.f64 (/.f64 (pow.f64 m 4) (*.f64 v v)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 (/.f64 (pow.f64 m 4) (*.f64 v v)) 4) (pow.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) 2)) (/.f64 1 (-.f64 (-.f64 (*.f64 (*.f64 m (/.f64 m v)) -2) (/.f64 m v)) (/.f64 (pow.f64 m 3) v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) (fma.f64 (/.f64 1 v) (+.f64 (pow.f64 m 3) m) (neg.f64 (*.f64 (*.f64 m (/.f64 m v)) -2))) (*.f64 (/.f64 (pow.f64 m 4) (*.f64 v v)) 4)) (fma.f64 (pow.f64 (*.f64 m (/.f64 m v)) 3) -8 (pow.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (-.f64 (*.f64 (*.f64 m (/.f64 m v)) -2) (/.f64 m v)) (/.f64 (pow.f64 m 3) v)) (-.f64 (*.f64 (/.f64 (pow.f64 m 4) (*.f64 v v)) 4) (pow.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 (*.f64 m (/.f64 m v)) 3) -8 (pow.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) 3)) (fma.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) (fma.f64 (/.f64 1 v) (+.f64 (pow.f64 m 3) m) (neg.f64 (*.f64 (*.f64 m (/.f64 m v)) -2))) (*.f64 (/.f64 (pow.f64 m 4) (*.f64 v v)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 (*.f64 m (/.f64 m v)) 3) -8 (pow.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) 3)) (+.f64 (pow.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) 2) (-.f64 (*.f64 (/.f64 (pow.f64 m 4) (*.f64 v v)) 4) (*.f64 (*.f64 m (/.f64 m v)) (*.f64 -2 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (/.f64 (pow.f64 m 4) (*.f64 v v)) 4) (pow.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) 2)) (-.f64 (-.f64 (*.f64 (*.f64 m (/.f64 m v)) -2) (/.f64 m v)) (/.f64 (pow.f64 m 3) v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (pow.f64 (*.f64 m (/.f64 m v)) 3) -8 (pow.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) 3))) (neg.f64 (fma.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) (fma.f64 (/.f64 1 v) (+.f64 (pow.f64 m 3) m) (neg.f64 (*.f64 (*.f64 m (/.f64 m v)) -2))) (*.f64 (/.f64 (pow.f64 m 4) (*.f64 v v)) 4))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 (/.f64 (pow.f64 m 4) (*.f64 v v)) 4) (pow.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) 2))) (neg.f64 (-.f64 (-.f64 (*.f64 (*.f64 m (/.f64 m v)) -2) (/.f64 m v)) (/.f64 (pow.f64 m 3) v))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 (*.f64 m m) -2) (*.f64 v v) (*.f64 v (fma.f64 v (pow.f64 m 3) (*.f64 m v)))) (pow.f64 v 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 (*.f64 m m) -2) (fma.f64 (/.f64 (pow.f64 m 3) v) (-.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) (pow.f64 (/.f64 m v) 2)) (*.f64 v (+.f64 (pow.f64 (/.f64 m v) 3) (pow.f64 (/.f64 (pow.f64 m 3) v) 3)))) (*.f64 v (fma.f64 (/.f64 (pow.f64 m 3) v) (-.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) (pow.f64 (/.f64 m v) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 (*.f64 m m) -2) (/.f64 (-.f64 m (pow.f64 m 3)) v) (*.f64 v (-.f64 (pow.f64 (/.f64 m v) 2) (/.f64 (pow.f64 m 6) (*.f64 v v))))) (*.f64 v (/.f64 (-.f64 m (pow.f64 m 3)) v)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 v (pow.f64 m 3) (*.f64 m v)) v (*.f64 (*.f64 v v) (*.f64 (*.f64 m m) -2))) (pow.f64 v 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 (pow.f64 (/.f64 m v) 3) (pow.f64 (/.f64 (pow.f64 m 3) v) 3)) v (*.f64 (fma.f64 (/.f64 (pow.f64 m 3) v) (-.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) (pow.f64 (/.f64 m v) 2)) (*.f64 (*.f64 m m) -2))) (*.f64 (fma.f64 (/.f64 (pow.f64 m 3) v) (-.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) (pow.f64 (/.f64 m v) 2)) v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (-.f64 (pow.f64 (/.f64 m v) 2) (/.f64 (pow.f64 m 6) (*.f64 v v))) v (*.f64 (/.f64 (-.f64 m (pow.f64 m 3)) v) (*.f64 (*.f64 m m) -2))) (*.f64 (/.f64 (-.f64 m (pow.f64 m 3)) v) v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)) 3) (pow.f64 (/.f64 (pow.f64 m 3) v) 3)) (fma.f64 (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)) (-.f64 (/.f64 (pow.f64 m 6) (*.f64 v v)) (*.f64 (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)) (/.f64 (pow.f64 m 3) v)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) 2) (*.f64 (/.f64 (pow.f64 m 4) (*.f64 v v)) 4)) (fma.f64 (/.f64 1 v) (+.f64 (pow.f64 m 3) m) (neg.f64 (*.f64 (*.f64 m (/.f64 m v)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v))) (/.f64 (pow.f64 m 6) (*.f64 v v))) (-.f64 (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)) (/.f64 (pow.f64 m 3) v)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (pow.f64 m 3) v)) (exp.f64 (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 (pow.f64 m 3) v))) (exp.f64 (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 (pow.f64 m 3) v)) (*.f64 (pow.f64 (exp.f64 (*.f64 m (/.f64 m v))) -2) (exp.f64 (/.f64 m v)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 (pow.f64 m 3) v))) (*.f64 (pow.f64 (exp.f64 (*.f64 m (/.f64 m v))) -2) (exp.f64 (/.f64 m v)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (*.f64 m (/.f64 m v)) -2))) (exp.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 m (/.f64 m v))) -2) (+.f64 1 (expm1.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (*.f64 m (/.f64 m v)) -2))) (+.f64 1 (expm1.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)))) (pow.f64 (exp.f64 (*.f64 m (/.f64 m v))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v))) (+.f64 1 (expm1.f64 (*.f64 (*.f64 m (/.f64 m v)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)))) (+.f64 1 (expm1.f64 (*.f64 (*.f64 m (/.f64 m v)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 m (/.f64 m v))) -2) (exp.f64 (/.f64 m v))) (exp.f64 (/.f64 (pow.f64 m 3) v))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v))) (+.f64 1 (expm1.f64 (/.f64 (pow.f64 m 3) v)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 (*.f64 m (/.f64 m v))) -2) (exp.f64 (/.f64 m v))) (+.f64 1 (expm1.f64 (/.f64 (pow.f64 m 3) v)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (*.f64 m (/.f64 m v)) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 m (/.f64 1 v) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m m) (/.f64 m v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m m) (*.f64 (/.f64 1 v) -2) (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 m (/.f64 m v)) -2 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 m 3) (/.f64 1 v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 m 3) v) 1 (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -2 (*.f64 m (/.f64 m v)) (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 m (/.f64 m v)) -2) 1 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m v) 1 (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) 1 (*.f64 (*.f64 m (/.f64 m v)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (pow.f64 m 3) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (*.f64 m (/.f64 m v)) -2) (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 m v) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) (*.f64 (*.f64 m (/.f64 m v)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)) (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (*.f64 m (/.f64 m v)) -2)) (pow.f64 (cbrt.f64 (*.f64 (*.f64 m (/.f64 m v)) -2)) 2) (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (*.f64 m (/.f64 m v)) -2)) 2) (cbrt.f64 (*.f64 (*.f64 m (/.f64 m v)) -2)) (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 m) 2) (*.f64 (cbrt.f64 m) (/.f64 1 v)) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 m v)) (pow.f64 (cbrt.f64 (/.f64 m v)) 2) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 m v)) 2) (cbrt.f64 (/.f64 m v)) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m (cbrt.f64 v)) (pow.f64 (/.f64 m (cbrt.f64 v)) 2) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (/.f64 m (cbrt.f64 v)) 2) (/.f64 m (cbrt.f64 v)) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 m (/.f64 m v))) 2) (*.f64 (cbrt.f64 (*.f64 m (/.f64 m v))) -2) (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v))) 2) (*.f64 (*.f64 m (/.f64 m v)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v))) 2) (cbrt.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v))) (*.f64 (*.f64 m (/.f64 m v)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (/.f64 m (sqrt.f64 v)) (sqrt.f64 -2)) (*.f64 (/.f64 m (sqrt.f64 v)) (sqrt.f64 -2)) (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 m) (*.f64 (sqrt.f64 m) (/.f64 1 v)) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 m v)) (sqrt.f64 (/.f64 m v)) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 m 3/2) (sqrt.f64 v)) (/.f64 (pow.f64 m 3/2) (sqrt.f64 v)) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m (sqrt.f64 v)) (/.f64 (*.f64 m m) (sqrt.f64 v)) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m (sqrt.f64 v)) (*.f64 (/.f64 m (sqrt.f64 v)) -2) (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v))) (sqrt.f64 (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v))) (*.f64 (*.f64 m (/.f64 m v)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 m 3)) (/.f64 1 (neg.f64 v)) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 m) (/.f64 1 (neg.f64 v)) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 v (pow.f64 m 3) (*.f64 m v)) (/.f64 1 (*.f64 v v)) (*.f64 (*.f64 m (/.f64 m v)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (/.f64 m v) 3) (pow.f64 (/.f64 (pow.f64 m 3) v) 3)) (/.f64 1 (fma.f64 (/.f64 (pow.f64 m 3) v) (-.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)) (pow.f64 (/.f64 m v) 2))) (*.f64 (*.f64 m (/.f64 m v)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 v) m (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 v) (pow.f64 m 3) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 v) (+.f64 (pow.f64 m 3) m) (*.f64 (*.f64 m (/.f64 m v)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 v) (+.f64 m (pow.f64 m 3)) (*.f64 (*.f64 m (/.f64 m v)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (/.f64 m v) 2) (/.f64 (pow.f64 m 6) (*.f64 v v))) (/.f64 1 (/.f64 (-.f64 m (pow.f64 m 3)) v)) (*.f64 (*.f64 m (/.f64 m v)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 m 3/2) (*.f64 (pow.f64 m 3/2) (/.f64 1 v)) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (*.f64 m m) -2) (/.f64 1 v) (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)) 1 (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v))) (cbrt.f64 (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))) (cbrt.f64 (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v))) (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v))) (sqrt.f64 (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v))) (/.f64 (pow.f64 m 3) v))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -2 (pow.f64 (cbrt.f64 v) 2)) (/.f64 (*.f64 m m) (cbrt.f64 v)) (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -2 (sqrt.f64 v)) (/.f64 (*.f64 m m) (sqrt.f64 v)) (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 m m) (sqrt.f64 v)) (/.f64 m (sqrt.f64 v)) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 m) 2) 1) (/.f64 (cbrt.f64 m) v) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 m) 1) (/.f64 (sqrt.f64 m) v) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 v) 2)) (/.f64 m (cbrt.f64 v)) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 v) 2)) (/.f64 (pow.f64 m 3) (cbrt.f64 v)) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 m) 2) (pow.f64 (cbrt.f64 v) 2)) (cbrt.f64 (/.f64 m v)) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 m) (pow.f64 (cbrt.f64 v) 2)) (/.f64 (sqrt.f64 m) (cbrt.f64 v)) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 v)) (/.f64 m (sqrt.f64 v)) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 v)) (/.f64 (pow.f64 m 3) (sqrt.f64 v)) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 m) 2) (sqrt.f64 v)) (/.f64 (cbrt.f64 m) (sqrt.f64 v)) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m 1) (*.f64 m (/.f64 m v)) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 m m) 1) (/.f64 m v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 m 3/2) 1) (/.f64 (pow.f64 m 3/2) v) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 m (pow.f64 (cbrt.f64 v) 2)) (/.f64 (*.f64 m m) (cbrt.f64 v)) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 m m) (pow.f64 (cbrt.f64 v) 2)) (/.f64 m (cbrt.f64 v)) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 m 3/2) (pow.f64 (cbrt.f64 v) 2)) (/.f64 (pow.f64 m 3/2) (cbrt.f64 v)) (fma.f64 (*.f64 m (/.f64 m v)) -2 (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -2 (pow.f64 (cbrt.f64 (*.f64 m (/.f64 m v))) 2)) (cbrt.f64 (*.f64 m (/.f64 m v))) (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -2 (/.f64 m (sqrt.f64 v))) (/.f64 m (sqrt.f64 v)) (+.f64 (/.f64 (pow.f64 m 3) v) (/.f64 m v)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (*.f64 m (/.f64 m v)) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -2 (/.f64 v (*.f64 m m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 v (*.f64 (*.f64 m m) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 m m) -2) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 (*.f64 m m) -2)) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 m m) -2) 1) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 m m) -2) (pow.f64 (cbrt.f64 v) 2)) (cbrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 (*.f64 m m) -2) (sqrt.f64 v)) (sqrt.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 m (neg.f64 m)) -2) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 (*.f64 m (neg.f64 m))) (neg.f64 v))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 m (/.f64 m v)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (*.f64 m (/.f64 m v)) -2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 m (sqrt.f64 v)) (sqrt.f64 -2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (*.f64 m (/.f64 m v)) -2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (*.f64 (/.f64 (pow.f64 m 4) (*.f64 v v)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (*.f64 m (/.f64 m v))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (*.f64 m (/.f64 m v)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (*.f64 m (/.f64 m v)) -2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (*.f64 m (/.f64 m v)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (*.f64 m (/.f64 m v)) -2)) 1))))))"]],"rules":[["egg-rr",22],["egg-rr",117],["egg-rr",36],["egg-rr",33]],"stop":[["node limit",1]],"time":70.011962890625,"type":"rewrite"},{"count":[[226,218]],"egraph":[[5,6091,223,0.025811583],[4,1982,223,0.013984708],[3,540,226,0.0043615830000000005],[2,180,234,0.0013878739999999999],[1,71,258,0.000495833],[0,29,270,0.00014775]],"inputs":[["(/.f64 m v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 m v))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 (pow.f64 m 3) m)) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 (pow.f64 m 3) m)) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 (pow.f64 m 3) m)) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 (pow.f64 m 3) m)) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 m (pow.f64 m 3))) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 m (pow.f64 m 3))) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 m (pow.f64 m 3))) v)","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 m (pow.f64 m 3))) v)","(*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 m 2)) (+.f64 (*.f64 -1 (pow.f64 m 3)) (*.f64 -1 m))) v))","(*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 m 2)) (+.f64 (*.f64 -1 (pow.f64 m 3)) (*.f64 -1 m))) v))","(*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 m 2)) (+.f64 (*.f64 -1 (pow.f64 m 3)) (*.f64 -1 m))) v))","(*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 m 2)) (+.f64 (*.f64 -1 (pow.f64 m 3)) (*.f64 -1 m))) v))"]],"method":["egg-herbie"],"outputs":[["(/.f64 m v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 m v))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 m v))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 m v))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 m v))","(fma.f64 -2 (*.f64 m (/.f64 m v)) (/.f64 m v))","(/.f64 m (/.f64 v (fma.f64 m -2 1)))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(*.f64 (*.f64 m (/.f64 m v)) (+.f64 m -2))","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 (pow.f64 m 3) m)) v)","(/.f64 (fma.f64 -2 (*.f64 m m) (+.f64 m (pow.f64 m 3))) v)","(/.f64 (+.f64 m (*.f64 (*.f64 m m) (+.f64 -2 m))) v)","(/.f64 (fma.f64 (*.f64 m m) (+.f64 m -2) m) v)","(/.f64 (fma.f64 m (*.f64 m (+.f64 m -2)) m) v)","(*.f64 (/.f64 m v) (fma.f64 m (+.f64 m -2) 1))","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 (pow.f64 m 3) m)) v)","(/.f64 (fma.f64 -2 (*.f64 m m) (+.f64 m (pow.f64 m 3))) v)","(/.f64 (+.f64 m (*.f64 (*.f64 m m) (+.f64 -2 m))) v)","(/.f64 (fma.f64 (*.f64 m m) (+.f64 m -2) m) v)","(/.f64 (fma.f64 m (*.f64 m (+.f64 m -2)) m) v)","(*.f64 (/.f64 m v) (fma.f64 m (+.f64 m -2) 1))","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 (pow.f64 m 3) m)) v)","(/.f64 (fma.f64 -2 (*.f64 m m) (+.f64 m (pow.f64 m 3))) v)","(/.f64 (+.f64 m (*.f64 (*.f64 m m) (+.f64 -2 m))) v)","(/.f64 (fma.f64 (*.f64 m m) (+.f64 m -2) m) v)","(/.f64 (fma.f64 m (*.f64 m (+.f64 m -2)) m) v)","(*.f64 (/.f64 m v) (fma.f64 m (+.f64 m -2) 1))","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 (pow.f64 m 3) m)) v)","(/.f64 (fma.f64 -2 (*.f64 m m) (+.f64 m (pow.f64 m 3))) v)","(/.f64 (+.f64 m (*.f64 (*.f64 m m) (+.f64 -2 m))) v)","(/.f64 (fma.f64 (*.f64 m m) (+.f64 m -2) m) v)","(/.f64 (fma.f64 m (*.f64 m (+.f64 m -2)) m) v)","(*.f64 (/.f64 m v) (fma.f64 m (+.f64 m -2) 1))","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 m (pow.f64 m 3))) v)","(/.f64 (fma.f64 -2 (*.f64 m m) (+.f64 m (pow.f64 m 3))) v)","(/.f64 (+.f64 m (*.f64 (*.f64 m m) (+.f64 -2 m))) v)","(/.f64 (fma.f64 (*.f64 m m) (+.f64 m -2) m) v)","(/.f64 (fma.f64 m (*.f64 m (+.f64 m -2)) m) v)","(*.f64 (/.f64 m v) (fma.f64 m (+.f64 m -2) 1))","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 m (pow.f64 m 3))) v)","(/.f64 (fma.f64 -2 (*.f64 m m) (+.f64 m (pow.f64 m 3))) v)","(/.f64 (+.f64 m (*.f64 (*.f64 m m) (+.f64 -2 m))) v)","(/.f64 (fma.f64 (*.f64 m m) (+.f64 m -2) m) v)","(/.f64 (fma.f64 m (*.f64 m (+.f64 m -2)) m) v)","(*.f64 (/.f64 m v) (fma.f64 m (+.f64 m -2) 1))","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 m (pow.f64 m 3))) v)","(/.f64 (fma.f64 -2 (*.f64 m m) (+.f64 m (pow.f64 m 3))) v)","(/.f64 (+.f64 m (*.f64 (*.f64 m m) (+.f64 -2 m))) v)","(/.f64 (fma.f64 (*.f64 m m) (+.f64 m -2) m) v)","(/.f64 (fma.f64 m (*.f64 m (+.f64 m -2)) m) v)","(*.f64 (/.f64 m v) (fma.f64 m (+.f64 m -2) 1))","(/.f64 (+.f64 (*.f64 -2 (pow.f64 m 2)) (+.f64 m (pow.f64 m 3))) v)","(/.f64 (fma.f64 -2 (*.f64 m m) (+.f64 m (pow.f64 m 3))) v)","(/.f64 (+.f64 m (*.f64 (*.f64 m m) (+.f64 -2 m))) v)","(/.f64 (fma.f64 (*.f64 m m) (+.f64 m -2) m) v)","(/.f64 (fma.f64 m (*.f64 m (+.f64 m -2)) m) v)","(*.f64 (/.f64 m v) (fma.f64 m (+.f64 m -2) 1))","(*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 m 2)) (+.f64 (*.f64 -1 (pow.f64 m 3)) (*.f64 -1 m))) v))","(/.f64 (fma.f64 -2 (*.f64 m m) (+.f64 m (pow.f64 m 3))) v)","(/.f64 (+.f64 m (*.f64 (*.f64 m m) (+.f64 -2 m))) v)","(/.f64 (fma.f64 (*.f64 m m) (+.f64 m -2) m) v)","(/.f64 (fma.f64 m (*.f64 m (+.f64 m -2)) m) v)","(*.f64 (/.f64 m v) (fma.f64 m (+.f64 m -2) 1))","(*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 m 2)) (+.f64 (*.f64 -1 (pow.f64 m 3)) (*.f64 -1 m))) v))","(/.f64 (fma.f64 -2 (*.f64 m m) (+.f64 m (pow.f64 m 3))) v)","(/.f64 (+.f64 m (*.f64 (*.f64 m m) (+.f64 -2 m))) v)","(/.f64 (fma.f64 (*.f64 m m) (+.f64 m -2) m) v)","(/.f64 (fma.f64 m (*.f64 m (+.f64 m -2)) m) v)","(*.f64 (/.f64 m v) (fma.f64 m (+.f64 m -2) 1))","(*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 m 2)) (+.f64 (*.f64 -1 (pow.f64 m 3)) (*.f64 -1 m))) v))","(/.f64 (fma.f64 -2 (*.f64 m m) (+.f64 m (pow.f64 m 3))) v)","(/.f64 (+.f64 m (*.f64 (*.f64 m m) (+.f64 -2 m))) v)","(/.f64 (fma.f64 (*.f64 m m) (+.f64 m -2) m) v)","(/.f64 (fma.f64 m (*.f64 m (+.f64 m -2)) m) v)","(*.f64 (/.f64 m v) (fma.f64 m (+.f64 m -2) 1))","(*.f64 -1 (/.f64 (+.f64 (*.f64 2 (pow.f64 m 2)) (+.f64 (*.f64 -1 (pow.f64 m 3)) (*.f64 -1 m))) v))","(/.f64 (fma.f64 -2 (*.f64 m m) (+.f64 m (pow.f64 m 3))) v)","(/.f64 (+.f64 m (*.f64 (*.f64 m m) (+.f64 -2 m))) v)","(/.f64 (fma.f64 (*.f64 m m) (+.f64 m -2) m) v)","(/.f64 (fma.f64 m (*.f64 m (+.f64 m -2)) m) v)","(*.f64 (/.f64 m v) (fma.f64 m (+.f64 m -2) 1))"]],"stop":[["node limit",1]],"time":42.425048828125,"type":"simplify"},{"compiler":[[6366,3539]],"time":58.118896484375,"type":"eval"},{"alts":[["(-.f64 (/.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) (/.f64 (pow.f64 (-.f64 1 m) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))))","next",11.3203125],["(+.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v))) (*.f64 -1 (-.f64 1 m)))","done",0.0234375],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","done",0.05859375]],"compiler":[[45,31],[25,18],[15,11],[45,31]],"count":[[221,3]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[218,0],"picked":[1,1]}],"min-error":[0],"time":79.341064453125,"type":"prune"},{"compiler":[[134,85]],"locations":[["(fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))",0.0546875,true],["(/.f64 (pow.f64 (-.f64 1 m) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))",0.17578125,true],["(pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2)",0.35775375976844204,true],["(/.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))",10.702170559886621,true]],"time":26.861083984375,"type":"localize"},{"count":[[4,96]],"series":[["(fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))","v","-inf",0.218017578125],["(fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))","v","inf",0.22412109375],["(fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))","v","0",0.2021484375],["(fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))","m","-inf",0.22021484375],["(fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))","m","inf",0.191162109375],["(fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))","m","0",0.203125],["(/.f64 (pow.f64 (-.f64 1 m) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))","v","-inf",0.255126953125],["(/.f64 (pow.f64 (-.f64 1 m) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))","v","inf",0.322021484375],["(/.f64 (pow.f64 (-.f64 1 m) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))","v","0",0.382080078125],["(/.f64 (pow.f64 (-.f64 1 m) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))","m","-inf",0.5810546875],["(/.f64 (pow.f64 (-.f64 1 m) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))","m","inf",0.547119140625],["(/.f64 (pow.f64 (-.f64 1 m) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))","m","0",0.447998046875],["(pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2)","v","-inf",0.347900390625],["(pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2)","v","inf",0.261962890625],["(pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2)","v","0",0.3310546875],["(pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2)","m","-inf",0.31201171875],["(pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2)","m","inf",0.2900390625],["(pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2)","m","0",0.3310546875],["(/.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))","v","-inf",0.4208984375],["(/.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))","v","inf",0.573974609375],["(/.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))","v","0",0.601806640625],["(/.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))","m","-inf",0.55517578125],["(/.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))","m","inf",1.944091796875],["(/.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))","m","0",1.01904296875]],"time":11.221923828125,"type":"series"},{"count":[[4,146]],"egraph":[[2,3825,94,0.029773459],[1,288,94,0.0051980839999999995],[0,13,94,0.000358292]],"inputs":[["(/.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))","(pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2)","(/.f64 (pow.f64 (-.f64 1 m) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m)))","(fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))) (cbrt.f64 (exp.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (*.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (/.f64 1 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (/.f64 1 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 m v) 2) (*.f64 (pow.f64 (-.f64 1 m) 4) (/.f64 1 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) (pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) 2) (cbrt.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 4)) (*.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2))) (/.f64 1 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (sqrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) (/.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (sqrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (/.f64 m v) 2) (neg.f64 (pow.f64 (-.f64 1 m) 4))) (/.f64 1 (neg.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)) (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 1) (/.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 4)) 1) (/.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2))) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 m v) 2) 1) (/.f64 (pow.f64 (-.f64 1 m) 4) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 2))) (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (cbrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (cbrt.f64 (pow.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 2))) (/.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (cbrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 4)) (cbrt.f64 (pow.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 2))) (cbrt.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 m v) 2) (cbrt.f64 (pow.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 2))) (/.f64 (pow.f64 (-.f64 1 m) 4) (cbrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (sqrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 4)) (sqrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) (/.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2))) (sqrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (/.f64 m v) 2) (sqrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) (/.f64 (pow.f64 (-.f64 1 m) 4) (sqrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (sqrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) 3) (pow.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (neg.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 4) (pow.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) 3) (pow.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 (/.f64 m v) 2)) (pow.f64 (-.f64 1 m) 4))) (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 (/.f64 m v) 2)) (pow.f64 (-.f64 1 m) 4))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (pow.f64 (/.f64 m v) 2)) (pow.f64 (-.f64 1 m) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 (/.f64 m v) 2)) (pow.f64 (-.f64 1 m) 4)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (pow.f64 (/.f64 m v) 2)) (pow.f64 (-.f64 1 m) 4)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 m v) (*.f64 (pow.f64 (-.f64 1 m) 2) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 m) 2) (*.f64 (/.f64 m v) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 m v) 2) (pow.f64 (-.f64 1 m) 4))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2))) (cbrt.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2))) (*.f64 (cbrt.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 4)) (cbrt.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 1 m) (sqrt.f64 (/.f64 m v))) (*.f64 (*.f64 (-.f64 1 m) (sqrt.f64 (/.f64 m v))) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (-.f64 1 m) (sqrt.f64 (/.f64 m v))) 3) (*.f64 (-.f64 1 m) (sqrt.f64 (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (/.f64 m v)) (pow.f64 (-.f64 1 m) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (pow.f64 (-.f64 1 m) 2)) (/.f64 m v))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (cbrt.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)))) (cbrt.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) (*.f64 m (pow.f64 (-.f64 1 m) 2))) (*.f64 v v))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) v)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (*.f64 m (pow.f64 (-.f64 1 m) 2))) v)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (pow.f64 (/.f64 m v) 2)) (pow.f64 (-.f64 1 m) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (fma.f64 2 (log1p.f64 (neg.f64 m)) (log.f64 (/.f64 m v)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (fma.f64 2 (log1p.f64 (neg.f64 m)) (log.f64 (/.f64 m v)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))) (cbrt.f64 (exp.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 m) (*.f64 (-.f64 1 m) (/.f64 1 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 1 m) 2) (/.f64 1 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 1 m) 4)) (*.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (/.f64 1 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) 2) (cbrt.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) (sqrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) (/.f64 (-.f64 1 m) (sqrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (-.f64 1 m) 2)) (/.f64 1 (neg.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)) (pow.f64 (-.f64 1 m) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 2))) (/.f64 (pow.f64 (-.f64 1 m) 2) (cbrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) (/.f64 (pow.f64 (-.f64 1 m) 2) (sqrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) 1) (/.f64 (-.f64 1 m) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 1 m) 4)) 1) (/.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (-.f64 1 m) (cbrt.f64 (pow.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 2))) (/.f64 (-.f64 1 m) (cbrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 1 m) 4)) (cbrt.f64 (pow.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 2))) (cbrt.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (pow.f64 (-.f64 1 m) 4)) (sqrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) (/.f64 (pow.f64 (cbrt.f64 (-.f64 1 m)) 2) (sqrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 m) (sqrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) (pow.f64 (-.f64 1 m) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (pow.f64 (-.f64 1 m) 2) 3) (pow.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) (pow.f64 (-.f64 1 m) 2)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (neg.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (pow.f64 (-.f64 1 m) 2) 3) (pow.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (pow.f64 (-.f64 1 m) 2) (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (-.f64 1 m) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) (neg.f64 m))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) (cbrt.f64 (exp.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))) (log.f64 (cbrt.f64 (exp.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))) (log.f64 (sqrt.f64 (exp.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)) (cbrt.f64 (pow.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 2)) (cbrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)) (sqrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) (fma.f64 m (+.f64 m 1) 1) (*.f64 v (-.f64 1 (pow.f64 m 3)))) (*.f64 v (fma.f64 m (+.f64 m 1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) (+.f64 m 1) (*.f64 v (-.f64 1 (*.f64 m m)))) (*.f64 v (+.f64 m 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 3) (pow.f64 (-.f64 1 m) 3)) (fma.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2) (-.f64 (pow.f64 (-.f64 1 m) 2) (*.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 m v) 2)) (pow.f64 (-.f64 1 m) 2)) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (neg.f64 (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (-.f64 1 m)) (pow.f64 (exp.f64 (pow.f64 (-.f64 1 m) 2)) (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (-.f64 1 m))) (pow.f64 (exp.f64 (pow.f64 (-.f64 1 m) 2)) (/.f64 m v))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (-.f64 1 m)) (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (-.f64 1 m))) (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))) (exp.f64 (-.f64 1 m))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (pow.f64 (-.f64 1 m) 2)) (/.f64 m v)) (+.f64 1 (expm1.f64 (-.f64 1 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))) (+.f64 1 (expm1.f64 (-.f64 1 m)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (-.f64 (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) 1) m)) 1))))))"]],"rules":[["egg-rr",36],["egg-rr",38],["egg-rr",30],["egg-rr",42]],"stop":[["node limit",1]],"time":63.631103515625,"type":"rewrite"},{"count":[[242,242]],"egraph":[[2,3216,2919,0.019671959],[1,826,3109,0.0061862919999999995],[0,250,3238,0.001272292]],"inputs":[["(/.f64 (pow.f64 m 2) (pow.f64 v 2))","(+.f64 (/.f64 (pow.f64 m 2) (pow.f64 v 2)) (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 v 2))) (/.f64 1 (pow.f64 v 3))) (pow.f64 m 3))))","(+.f64 (/.f64 (pow.f64 m 2) (pow.f64 v 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 v 2))) (/.f64 1 (pow.f64 v 3))) (pow.f64 m 3))) (*.f64 (-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 v 3))) (*.f64 6 (/.f64 1 (pow.f64 v 2)))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 v) 1) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 v 2))) (/.f64 1 (pow.f64 v 3)))))) (pow.f64 m 4))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 4 (/.f64 1 (pow.f64 v 2))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 v 2))) (/.f64 1 (pow.f64 v 3))) v)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 v 3))) (*.f64 6 (/.f64 1 (pow.f64 v 2)))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 v) 1) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 v 2))) (/.f64 1 (pow.f64 v 3)))))) (-.f64 (/.f64 1 v) 1)) (/.f64 1 (pow.f64 v 3))))) (pow.f64 m 5))) (+.f64 (/.f64 (pow.f64 m 2) (pow.f64 v 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 v 2))) (/.f64 1 (pow.f64 v 3))) (pow.f64 m 3))) (*.f64 (-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 v 3))) (*.f64 6 (/.f64 1 (pow.f64 v 2)))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 v) 1) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 v 2))) (/.f64 1 (pow.f64 v 3)))))) (pow.f64 m 4)))))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (-.f64 (+.f64 1 (*.f64 6 (/.f64 1 v))) (*.f64 5 (/.f64 1 v))) m)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 -1 (+.f64 (*.f64 4 (/.f64 1 v)) (+.f64 1 (+.f64 (*.f64 -2 (-.f64 (/.f64 1 v) 1)) (*.f64 -2 (-.f64 (+.f64 1 (*.f64 6 (/.f64 1 v))) (*.f64 5 (/.f64 1 v)))))))) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (-.f64 (+.f64 1 (*.f64 6 (/.f64 1 v))) (*.f64 5 (/.f64 1 v))) m))))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 5 (/.f64 1 v)) (+.f64 1 (*.f64 6 (/.f64 1 v)))) m)) (/.f64 (pow.f64 m 3) v)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 5 (/.f64 1 v)) (+.f64 1 (*.f64 6 (/.f64 1 v)))) m)) (+.f64 (*.f64 -1 (+.f64 (*.f64 2 (-.f64 1 (/.f64 1 v))) (+.f64 1 (+.f64 (*.f64 4 (/.f64 1 v)) (*.f64 2 (-.f64 (*.f64 5 (/.f64 1 v)) (+.f64 1 (*.f64 6 (/.f64 1 v))))))))) (/.f64 (pow.f64 m 3) v))))","(/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)","(-.f64 (+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) m) 1)","(-.f64 (+.f64 (*.f64 v (-.f64 (/.f64 1 (*.f64 m (-.f64 1 m))) (/.f64 1 (-.f64 1 m)))) (+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) m)) 1)","(-.f64 (+.f64 (*.f64 v (-.f64 (/.f64 1 (*.f64 m (-.f64 1 m))) (/.f64 1 (-.f64 1 m)))) (+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (+.f64 m (*.f64 (-.f64 (/.f64 1 (*.f64 m (pow.f64 (-.f64 1 m) 2))) (/.f64 1 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 2)))) (pow.f64 v 2))))) 1)","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2))","(+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 3))))","(+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (+.f64 (/.f64 (*.f64 (pow.f64 m 4) (pow.f64 (-.f64 1 m) 5)) (pow.f64 v 4)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 3)))))","(+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (+.f64 (/.f64 (*.f64 (pow.f64 m 4) (pow.f64 (-.f64 1 m) 5)) (pow.f64 v 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 5) (pow.f64 (-.f64 1 m) 6)) (pow.f64 v 5))))))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2))","(+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 3))))","(+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (+.f64 (/.f64 (*.f64 (pow.f64 m 4) (pow.f64 (-.f64 1 m) 5)) (pow.f64 v 4)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 3)))))","(+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (+.f64 (/.f64 (*.f64 (pow.f64 m 4) (pow.f64 (-.f64 1 m) 5)) (pow.f64 v 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 5) (pow.f64 (-.f64 1 m) 6)) (pow.f64 v 5))))))","(/.f64 (pow.f64 m 2) (pow.f64 v 2))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 m 3) (pow.f64 v 2))) (/.f64 (pow.f64 m 2) (pow.f64 v 2)))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 m 3) (pow.f64 v 2))) (+.f64 (*.f64 6 (/.f64 (pow.f64 m 4) (pow.f64 v 2))) (/.f64 (pow.f64 m 2) (pow.f64 v 2))))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 m 3) (pow.f64 v 2))) (+.f64 (*.f64 6 (/.f64 (pow.f64 m 4) (pow.f64 v 2))) (+.f64 (/.f64 (pow.f64 m 2) (pow.f64 v 2)) (*.f64 -4 (/.f64 (pow.f64 m 5) (pow.f64 v 2))))))","(/.f64 (pow.f64 m 6) (pow.f64 v 2))","(+.f64 (/.f64 (pow.f64 m 6) (pow.f64 v 2)) (*.f64 -4 (/.f64 (pow.f64 m 5) (pow.f64 v 2))))","(+.f64 (*.f64 6 (/.f64 (pow.f64 m 4) (pow.f64 v 2))) (+.f64 (/.f64 (pow.f64 m 6) (pow.f64 v 2)) (*.f64 -4 (/.f64 (pow.f64 m 5) (pow.f64 v 2)))))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 m 3) (pow.f64 v 2))) (+.f64 (*.f64 6 (/.f64 (pow.f64 m 4) (pow.f64 v 2))) (+.f64 (/.f64 (pow.f64 m 6) (pow.f64 v 2)) (*.f64 -4 (/.f64 (pow.f64 m 5) (pow.f64 v 2))))))","(/.f64 (pow.f64 m 6) (pow.f64 v 2))","(+.f64 (/.f64 (pow.f64 m 6) (pow.f64 v 2)) (*.f64 -4 (/.f64 (pow.f64 m 5) (pow.f64 v 2))))","(+.f64 (*.f64 6 (/.f64 (pow.f64 m 4) (pow.f64 v 2))) (+.f64 (/.f64 (pow.f64 m 6) (pow.f64 v 2)) (*.f64 -4 (/.f64 (pow.f64 m 5) (pow.f64 v 2)))))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 m 3) (pow.f64 v 2))) (+.f64 (*.f64 6 (/.f64 (pow.f64 m 4) (pow.f64 v 2))) (+.f64 (/.f64 (pow.f64 m 6) (pow.f64 v 2)) (*.f64 -4 (/.f64 (pow.f64 m 5) (pow.f64 v 2))))))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","1","(+.f64 1 (*.f64 -1 (*.f64 (+.f64 1 (/.f64 1 v)) m)))","(+.f64 (*.f64 (-.f64 (+.f64 1 (*.f64 2 (/.f64 1 v))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 v) 1) (+.f64 1 (/.f64 1 v))))) (pow.f64 m 2)) (+.f64 1 (*.f64 -1 (*.f64 (+.f64 1 (/.f64 1 v)) m))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (/.f64 1 v)) v)) (+.f64 (/.f64 1 v) (*.f64 (-.f64 (+.f64 1 (*.f64 2 (/.f64 1 v))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 v) 1) (+.f64 1 (/.f64 1 v))))) (-.f64 (/.f64 1 v) 1)))) (pow.f64 m 3))) (+.f64 (*.f64 (-.f64 (+.f64 1 (*.f64 2 (/.f64 1 v))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 v) 1) (+.f64 1 (/.f64 1 v))))) (pow.f64 m 2)) (+.f64 1 (*.f64 -1 (*.f64 (+.f64 1 (/.f64 1 v)) m)))))","(/.f64 v m)","(-.f64 (+.f64 (/.f64 v m) (/.f64 v (pow.f64 m 3))) (/.f64 (*.f64 (pow.f64 v 2) (-.f64 (/.f64 1 v) 1)) (pow.f64 m 3)))","(-.f64 (+.f64 (/.f64 v m) (+.f64 (/.f64 v (pow.f64 m 3)) (*.f64 -1 (/.f64 (+.f64 (pow.f64 v 2) (*.f64 -2 (-.f64 v (*.f64 (pow.f64 v 2) (-.f64 (/.f64 1 v) 1))))) (pow.f64 m 4))))) (/.f64 (*.f64 (pow.f64 v 2) (-.f64 (/.f64 1 v) 1)) (pow.f64 m 3)))","(-.f64 (+.f64 (/.f64 v m) (+.f64 (/.f64 v (pow.f64 m 3)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 v 2) (*.f64 -2 (-.f64 v (*.f64 (pow.f64 v 2) (-.f64 (/.f64 1 v) 1))))) (pow.f64 m 4))) (*.f64 -1 (/.f64 (+.f64 (*.f64 v (*.f64 (-.f64 (/.f64 1 v) 1) (-.f64 v (*.f64 (pow.f64 v 2) (-.f64 (/.f64 1 v) 1))))) (*.f64 2 (+.f64 (pow.f64 v 2) (*.f64 -2 (-.f64 v (*.f64 (pow.f64 v 2) (-.f64 (/.f64 1 v) 1))))))) (pow.f64 m 5)))))) (/.f64 (*.f64 (pow.f64 v 2) (-.f64 (/.f64 1 v) 1)) (pow.f64 m 3)))","(/.f64 v m)","(+.f64 (/.f64 v m) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 v) (*.f64 (-.f64 1 (/.f64 1 v)) (pow.f64 v 2))) (pow.f64 m 3))))","(+.f64 (/.f64 v m) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 v) (*.f64 (-.f64 1 (/.f64 1 v)) (pow.f64 v 2))) (pow.f64 m 3))) (*.f64 -1 (/.f64 (+.f64 (pow.f64 v 2) (*.f64 2 (-.f64 (*.f64 -1 v) (*.f64 (-.f64 1 (/.f64 1 v)) (pow.f64 v 2))))) (pow.f64 m 4)))))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (pow.f64 v 2) (*.f64 2 (-.f64 (*.f64 -1 v) (*.f64 (-.f64 1 (/.f64 1 v)) (pow.f64 v 2))))) (pow.f64 m 5))) (+.f64 (/.f64 v m) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 v) (*.f64 (-.f64 1 (/.f64 1 v)) (pow.f64 v 2))) (*.f64 (-.f64 1 (/.f64 1 v)) v)) (pow.f64 m 5))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 v) (*.f64 (-.f64 1 (/.f64 1 v)) (pow.f64 v 2))) (pow.f64 m 3))) (*.f64 -1 (/.f64 (+.f64 (pow.f64 v 2) (*.f64 2 (-.f64 (*.f64 -1 v) (*.f64 (-.f64 1 (/.f64 1 v)) (pow.f64 v 2))))) (pow.f64 m 4)))))))","(/.f64 v m)","(+.f64 (/.f64 v m) (*.f64 -1 (/.f64 (pow.f64 v 2) (*.f64 (pow.f64 m 2) (-.f64 1 m)))))","(+.f64 (/.f64 v m) (+.f64 (/.f64 (pow.f64 v 3) (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 2))) (*.f64 -1 (/.f64 (pow.f64 v 2) (*.f64 (pow.f64 m 2) (-.f64 1 m))))))","(+.f64 (/.f64 v m) (+.f64 (/.f64 (pow.f64 v 3) (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 v 2) (*.f64 (pow.f64 m 2) (-.f64 1 m)))) (*.f64 -1 (/.f64 (pow.f64 v 4) (*.f64 (pow.f64 m 4) (pow.f64 (-.f64 1 m) 3)))))))","(-.f64 1 m)","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v))) m)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)))) m)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 3))) (*.f64 -1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v))))) m)","(-.f64 1 m)","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v))) m)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)))) m)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 3))) (*.f64 -1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v))))) m)","1","(+.f64 (*.f64 (-.f64 (/.f64 1 v) 1) m) 1)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (-.f64 (/.f64 1 v) 1) m) 1))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (-.f64 (/.f64 1 v) 1) m) (+.f64 1 (/.f64 (pow.f64 m 3) v))))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (-.f64 (/.f64 1 v) 1) m) (/.f64 (pow.f64 m 3) v)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 1 (+.f64 (*.f64 (-.f64 (/.f64 1 v) 1) m) (/.f64 (pow.f64 m 3) v))))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 -1 (*.f64 (-.f64 1 (/.f64 1 v)) m)) (/.f64 (pow.f64 m 3) v)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 1 (+.f64 (*.f64 -1 (*.f64 (-.f64 1 (/.f64 1 v)) m)) (/.f64 (pow.f64 m 3) v))))","(/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)","(-.f64 (+.f64 1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)) m)","(-.f64 (+.f64 1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)) m)","(-.f64 (+.f64 1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)) m)","(-.f64 1 m)","(-.f64 (+.f64 1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)) m)","(-.f64 (+.f64 1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)) m)","(-.f64 (+.f64 1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)) m)","(-.f64 1 m)","(-.f64 (+.f64 1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)) m)","(-.f64 (+.f64 1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)) m)","(-.f64 (+.f64 1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)) m)"]],"method":["egg-herbie"],"outputs":[["(/.f64 (pow.f64 m 2) (pow.f64 v 2))","(/.f64 (*.f64 m m) (*.f64 v v))","(*.f64 (/.f64 m v) (/.f64 m v))","(+.f64 (/.f64 (pow.f64 m 2) (pow.f64 v 2)) (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 v 2))) (/.f64 1 (pow.f64 v 3))) (pow.f64 m 3))))","(+.f64 (/.f64 (*.f64 m m) (*.f64 v v)) (neg.f64 (*.f64 (+.f64 (/.f64 3 (*.f64 v v)) (/.f64 1 (pow.f64 v 3))) (pow.f64 m 3))))","(-.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (*.f64 (+.f64 (/.f64 3 (*.f64 v v)) (/.f64 1 (pow.f64 v 3))) (pow.f64 m 3)))","(-.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (*.f64 (+.f64 (/.f64 (/.f64 3 v) v) (/.f64 1 (pow.f64 v 3))) (pow.f64 m 3)))","(+.f64 (/.f64 (pow.f64 m 2) (pow.f64 v 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 v 2))) (/.f64 1 (pow.f64 v 3))) (pow.f64 m 3))) (*.f64 (-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 v 3))) (*.f64 6 (/.f64 1 (pow.f64 v 2)))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 v) 1) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 v 2))) (/.f64 1 (pow.f64 v 3)))))) (pow.f64 m 4))))","(+.f64 (/.f64 (*.f64 m m) (*.f64 v v)) (fma.f64 -1 (*.f64 (+.f64 (/.f64 3 (*.f64 v v)) (/.f64 1 (pow.f64 v 3))) (pow.f64 m 3)) (*.f64 (+.f64 (/.f64 2 (pow.f64 v 3)) (-.f64 (/.f64 6 (*.f64 v v)) (neg.f64 (*.f64 (+.f64 (/.f64 3 (*.f64 v v)) (/.f64 1 (pow.f64 v 3))) (+.f64 (/.f64 1 v) -1))))) (pow.f64 m 4))))","(+.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (fma.f64 (+.f64 (/.f64 2 (pow.f64 v 3)) (+.f64 (/.f64 6 (*.f64 v v)) (*.f64 (+.f64 (/.f64 3 (*.f64 v v)) (/.f64 1 (pow.f64 v 3))) (+.f64 -1 (/.f64 1 v))))) (pow.f64 m 4) (*.f64 (+.f64 (/.f64 3 (*.f64 v v)) (/.f64 1 (pow.f64 v 3))) (neg.f64 (pow.f64 m 3)))))","(+.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (fma.f64 (+.f64 (+.f64 (/.f64 2 (pow.f64 v 3)) (/.f64 6 (*.f64 v v))) (*.f64 (+.f64 (/.f64 (/.f64 3 v) v) (/.f64 1 (pow.f64 v 3))) (+.f64 -1 (/.f64 1 v)))) (pow.f64 m 4) (*.f64 (+.f64 (/.f64 (/.f64 3 v) v) (/.f64 1 (pow.f64 v 3))) (neg.f64 (pow.f64 m 3)))))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 4 (/.f64 1 (pow.f64 v 2))) (+.f64 (*.f64 2 (/.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 v 2))) (/.f64 1 (pow.f64 v 3))) v)) (+.f64 (*.f64 (-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 v 3))) (*.f64 6 (/.f64 1 (pow.f64 v 2)))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 v) 1) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 v 2))) (/.f64 1 (pow.f64 v 3)))))) (-.f64 (/.f64 1 v) 1)) (/.f64 1 (pow.f64 v 3))))) (pow.f64 m 5))) (+.f64 (/.f64 (pow.f64 m 2) (pow.f64 v 2)) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 3 (/.f64 1 (pow.f64 v 2))) (/.f64 1 (pow.f64 v 3))) (pow.f64 m 3))) (*.f64 (-.f64 (+.f64 (*.f64 2 (/.f64 1 (pow.f64 v 3))) (*.f64 6 (/.f64 1 (pow.f64 v 2)))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 v) 1) (+.f64 (*.f64 3 (/.f64 1 (pow.f64 v 2))) (/.f64 1 (pow.f64 v 3)))))) (pow.f64 m 4)))))","(fma.f64 -1 (*.f64 (+.f64 (/.f64 4 (*.f64 v v)) (fma.f64 2 (/.f64 (+.f64 (/.f64 3 (*.f64 v v)) (/.f64 1 (pow.f64 v 3))) v) (fma.f64 (+.f64 (/.f64 2 (pow.f64 v 3)) (-.f64 (/.f64 6 (*.f64 v v)) (neg.f64 (*.f64 (+.f64 (/.f64 3 (*.f64 v v)) (/.f64 1 (pow.f64 v 3))) (+.f64 (/.f64 1 v) -1))))) (+.f64 (/.f64 1 v) -1) (/.f64 1 (pow.f64 v 3))))) (pow.f64 m 5)) (+.f64 (/.f64 (*.f64 m m) (*.f64 v v)) (fma.f64 -1 (*.f64 (+.f64 (/.f64 3 (*.f64 v v)) (/.f64 1 (pow.f64 v 3))) (pow.f64 m 3)) (*.f64 (+.f64 (/.f64 2 (pow.f64 v 3)) (-.f64 (/.f64 6 (*.f64 v v)) (neg.f64 (*.f64 (+.f64 (/.f64 3 (*.f64 v v)) (/.f64 1 (pow.f64 v 3))) (+.f64 (/.f64 1 v) -1))))) (pow.f64 m 4)))))","(fma.f64 (neg.f64 (+.f64 (/.f64 4 (*.f64 v v)) (fma.f64 2 (/.f64 (+.f64 (/.f64 3 (*.f64 v v)) (/.f64 1 (pow.f64 v 3))) v) (fma.f64 (+.f64 -1 (/.f64 1 v)) (+.f64 (/.f64 2 (pow.f64 v 3)) (+.f64 (/.f64 6 (*.f64 v v)) (*.f64 (+.f64 (/.f64 3 (*.f64 v v)) (/.f64 1 (pow.f64 v 3))) (+.f64 -1 (/.f64 1 v))))) (/.f64 1 (pow.f64 v 3)))))) (pow.f64 m 5) (+.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (fma.f64 (+.f64 (/.f64 2 (pow.f64 v 3)) (+.f64 (/.f64 6 (*.f64 v v)) (*.f64 (+.f64 (/.f64 3 (*.f64 v v)) (/.f64 1 (pow.f64 v 3))) (+.f64 -1 (/.f64 1 v))))) (pow.f64 m 4) (*.f64 (+.f64 (/.f64 3 (*.f64 v v)) (/.f64 1 (pow.f64 v 3))) (neg.f64 (pow.f64 m 3))))))","(+.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (-.f64 (fma.f64 (+.f64 (+.f64 (/.f64 2 (pow.f64 v 3)) (/.f64 6 (*.f64 v v))) (*.f64 (+.f64 (/.f64 (/.f64 3 v) v) (/.f64 1 (pow.f64 v 3))) (+.f64 -1 (/.f64 1 v)))) (pow.f64 m 4) (*.f64 (+.f64 (/.f64 (/.f64 3 v) v) (/.f64 1 (pow.f64 v 3))) (neg.f64 (pow.f64 m 3)))) (*.f64 (+.f64 (/.f64 (/.f64 4 v) v) (fma.f64 2 (/.f64 (+.f64 (/.f64 (/.f64 3 v) v) (/.f64 1 (pow.f64 v 3))) v) (fma.f64 (+.f64 -1 (/.f64 1 v)) (+.f64 (+.f64 (/.f64 2 (pow.f64 v 3)) (/.f64 6 (*.f64 v v))) (*.f64 (+.f64 (/.f64 (/.f64 3 v) v) (/.f64 1 (pow.f64 v 3))) (+.f64 -1 (/.f64 1 v)))) (/.f64 1 (pow.f64 v 3))))) (pow.f64 m 5))))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (-.f64 (+.f64 1 (*.f64 6 (/.f64 1 v))) (*.f64 5 (/.f64 1 v))) m)))","(+.f64 (fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v)) (*.f64 m (+.f64 1 (-.f64 (/.f64 6 v) (/.f64 5 v)))))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (fma.f64 m (+.f64 1 (*.f64 (/.f64 1 v) 1)) (/.f64 (pow.f64 m 3) v)))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (fma.f64 m (+.f64 1 (/.f64 1 v)) (/.f64 (pow.f64 m 3) v)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 -1 (+.f64 (*.f64 4 (/.f64 1 v)) (+.f64 1 (+.f64 (*.f64 -2 (-.f64 (/.f64 1 v) 1)) (*.f64 -2 (-.f64 (+.f64 1 (*.f64 6 (/.f64 1 v))) (*.f64 5 (/.f64 1 v)))))))) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 (-.f64 (+.f64 1 (*.f64 6 (/.f64 1 v))) (*.f64 5 (/.f64 1 v))) m))))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (fma.f64 -1 (+.f64 (+.f64 (/.f64 4 v) 1) (*.f64 -2 (+.f64 (+.f64 (/.f64 1 v) -1) (+.f64 1 (-.f64 (/.f64 6 v) (/.f64 5 v)))))) (+.f64 (/.f64 (pow.f64 m 3) v) (*.f64 m (+.f64 1 (-.f64 (/.f64 6 v) (/.f64 5 v)))))))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (-.f64 (fma.f64 m (+.f64 1 (*.f64 (/.f64 1 v) 1)) (/.f64 (pow.f64 m 3) v)) (+.f64 (/.f64 4 v) (fma.f64 -2 (+.f64 (/.f64 1 v) (+.f64 -1 (+.f64 1 (*.f64 (/.f64 1 v) 1)))) 1))))","(+.f64 (fma.f64 -2 (*.f64 (/.f64 m v) m) (fma.f64 m (+.f64 1 (/.f64 1 v)) (/.f64 (pow.f64 m 3) v))) (-.f64 (/.f64 -4 v) (fma.f64 -2 (+.f64 (/.f64 1 v) (+.f64 -1 (+.f64 1 (/.f64 1 v)))) 1)))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 5 (/.f64 1 v)) (+.f64 1 (*.f64 6 (/.f64 1 v)))) m)) (/.f64 (pow.f64 m 3) v)))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (fma.f64 -1 (*.f64 m (-.f64 (/.f64 5 v) (+.f64 1 (/.f64 6 v)))) (/.f64 (pow.f64 m 3) v)))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (-.f64 (/.f64 (pow.f64 m 3) v) (*.f64 m (-.f64 (/.f64 5 v) (+.f64 1 (/.f64 6 v))))))","(-.f64 (fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v)) (*.f64 m (+.f64 -1 (/.f64 -1 v))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 5 (/.f64 1 v)) (+.f64 1 (*.f64 6 (/.f64 1 v)))) m)) (+.f64 (*.f64 -1 (+.f64 (*.f64 2 (-.f64 1 (/.f64 1 v))) (+.f64 1 (+.f64 (*.f64 4 (/.f64 1 v)) (*.f64 2 (-.f64 (*.f64 5 (/.f64 1 v)) (+.f64 1 (*.f64 6 (/.f64 1 v))))))))) (/.f64 (pow.f64 m 3) v))))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (fma.f64 -1 (*.f64 m (-.f64 (/.f64 5 v) (+.f64 1 (/.f64 6 v)))) (fma.f64 -1 (fma.f64 2 (-.f64 1 (/.f64 1 v)) (+.f64 (+.f64 1 (/.f64 4 v)) (*.f64 2 (-.f64 (/.f64 5 v) (+.f64 1 (/.f64 6 v)))))) (/.f64 (pow.f64 m 3) v))))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (-.f64 (-.f64 (/.f64 (pow.f64 m 3) v) (+.f64 (fma.f64 2 (-.f64 (/.f64 5 v) (+.f64 1 (/.f64 6 v))) (/.f64 4 v)) (fma.f64 2 (+.f64 1 (/.f64 -1 v)) 1))) (*.f64 m (-.f64 (/.f64 5 v) (+.f64 1 (/.f64 6 v))))))","(+.f64 (-.f64 (fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v)) (*.f64 m (+.f64 -1 (/.f64 -1 v)))) (-.f64 (+.f64 -2 (/.f64 2 v)) (+.f64 1 (fma.f64 2 (+.f64 -1 (/.f64 -1 v)) (/.f64 4 v)))))","(/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)","(/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2)))","(*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))","(-.f64 (+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) m) 1)","(+.f64 (/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2))) (-.f64 m 1))","(+.f64 m (-.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 1))","(+.f64 m (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) -1))","(-.f64 (+.f64 (*.f64 v (-.f64 (/.f64 1 (*.f64 m (-.f64 1 m))) (/.f64 1 (-.f64 1 m)))) (+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) m)) 1)","(+.f64 (fma.f64 v (-.f64 (/.f64 (/.f64 1 m) (-.f64 1 m)) (/.f64 1 (-.f64 1 m))) (+.f64 m (/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2))))) -1)","(+.f64 -1 (+.f64 m (fma.f64 v (+.f64 (/.f64 (/.f64 1 m) (-.f64 1 m)) (/.f64 -1 (-.f64 1 m))) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))","(fma.f64 v (+.f64 (/.f64 (/.f64 1 (-.f64 1 m)) m) (/.f64 -1 (-.f64 1 m))) (+.f64 m (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) -1)))","(-.f64 (+.f64 (*.f64 v (-.f64 (/.f64 1 (*.f64 m (-.f64 1 m))) (/.f64 1 (-.f64 1 m)))) (+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (+.f64 m (*.f64 (-.f64 (/.f64 1 (*.f64 m (pow.f64 (-.f64 1 m) 2))) (/.f64 1 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 2)))) (pow.f64 v 2))))) 1)","(+.f64 (fma.f64 v (-.f64 (/.f64 (/.f64 1 m) (-.f64 1 m)) (/.f64 1 (-.f64 1 m))) (+.f64 (+.f64 m (/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2)))) (*.f64 (*.f64 v v) (-.f64 (/.f64 1 (*.f64 m (pow.f64 (-.f64 1 m) 2))) (/.f64 (/.f64 1 (*.f64 m m)) (pow.f64 (-.f64 1 m) 2)))))) -1)","(+.f64 -1 (+.f64 (fma.f64 (*.f64 v v) (+.f64 (/.f64 1 (*.f64 m (pow.f64 (-.f64 1 m) 2))) (/.f64 -1 (*.f64 (*.f64 m m) (pow.f64 (-.f64 1 m) 2)))) m) (fma.f64 v (+.f64 (/.f64 (/.f64 1 m) (-.f64 1 m)) (/.f64 -1 (-.f64 1 m))) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)))))","(fma.f64 v (+.f64 (/.f64 (/.f64 1 (-.f64 1 m)) m) (/.f64 -1 (-.f64 1 m))) (+.f64 (fma.f64 (*.f64 v v) (+.f64 (/.f64 1 (*.f64 m (pow.f64 (-.f64 1 m) 2))) (/.f64 -1 (*.f64 (*.f64 m m) (pow.f64 (-.f64 1 m) 2)))) m) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) -1)))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2))","(/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3)))","(*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 3))","(+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 3))))","(+.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (neg.f64 (/.f64 (pow.f64 m 3) (/.f64 (pow.f64 v 3) (pow.f64 (-.f64 1 m) 4)))))","(-.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (*.f64 (/.f64 (pow.f64 m 3) (pow.f64 v 3)) (pow.f64 (-.f64 1 m) 4)))","(-.f64 (*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 3)) (/.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 v m) 3)))","(+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (+.f64 (/.f64 (*.f64 (pow.f64 m 4) (pow.f64 (-.f64 1 m) 5)) (pow.f64 v 4)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 3)))))","(+.f64 (+.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (/.f64 (pow.f64 m 4) (/.f64 (pow.f64 v 4) (pow.f64 (-.f64 1 m) 5)))) (neg.f64 (/.f64 (pow.f64 m 3) (/.f64 (pow.f64 v 3) (pow.f64 (-.f64 1 m) 4)))))","(+.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (-.f64 (*.f64 (/.f64 (pow.f64 m 4) (pow.f64 v 4)) (pow.f64 (-.f64 1 m) 5)) (*.f64 (/.f64 (pow.f64 m 3) (pow.f64 v 3)) (pow.f64 (-.f64 1 m) 4))))","(+.f64 (-.f64 (*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 3)) (/.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 v m) 3))) (*.f64 (/.f64 (pow.f64 m 4) (pow.f64 v 4)) (pow.f64 (-.f64 1 m) 5)))","(+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (+.f64 (/.f64 (*.f64 (pow.f64 m 4) (pow.f64 (-.f64 1 m) 5)) (pow.f64 v 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 5) (pow.f64 (-.f64 1 m) 6)) (pow.f64 v 5))))))","(+.f64 (+.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (/.f64 (pow.f64 m 4) (/.f64 (pow.f64 v 4) (pow.f64 (-.f64 1 m) 5)))) (*.f64 -1 (+.f64 (/.f64 (pow.f64 m 3) (/.f64 (pow.f64 v 3) (pow.f64 (-.f64 1 m) 4))) (/.f64 (*.f64 (pow.f64 m 5) (pow.f64 (-.f64 1 m) 6)) (pow.f64 v 5)))))","(+.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (-.f64 (-.f64 (*.f64 (/.f64 (pow.f64 m 4) (pow.f64 v 4)) (pow.f64 (-.f64 1 m) 5)) (*.f64 (/.f64 (pow.f64 m 3) (pow.f64 v 3)) (pow.f64 (-.f64 1 m) 4))) (*.f64 (/.f64 (pow.f64 m 5) (pow.f64 v 5)) (pow.f64 (-.f64 1 m) 6))))","(+.f64 (-.f64 (*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 3)) (+.f64 (/.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 v m) 3)) (*.f64 (/.f64 (pow.f64 m 5) (pow.f64 v 5)) (pow.f64 (-.f64 1 m) 6)))) (*.f64 (/.f64 (pow.f64 m 4) (pow.f64 v 4)) (pow.f64 (-.f64 1 m) 5)))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2))","(/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3)))","(*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 3))","(+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 3))))","(+.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (neg.f64 (/.f64 (pow.f64 m 3) (/.f64 (pow.f64 v 3) (pow.f64 (-.f64 1 m) 4)))))","(-.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (*.f64 (/.f64 (pow.f64 m 3) (pow.f64 v 3)) (pow.f64 (-.f64 1 m) 4)))","(-.f64 (*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 3)) (/.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 v m) 3)))","(+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (+.f64 (/.f64 (*.f64 (pow.f64 m 4) (pow.f64 (-.f64 1 m) 5)) (pow.f64 v 4)) (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 3)))))","(+.f64 (+.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (/.f64 (pow.f64 m 4) (/.f64 (pow.f64 v 4) (pow.f64 (-.f64 1 m) 5)))) (neg.f64 (/.f64 (pow.f64 m 3) (/.f64 (pow.f64 v 3) (pow.f64 (-.f64 1 m) 4)))))","(+.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (-.f64 (*.f64 (/.f64 (pow.f64 m 4) (pow.f64 v 4)) (pow.f64 (-.f64 1 m) 5)) (*.f64 (/.f64 (pow.f64 m 3) (pow.f64 v 3)) (pow.f64 (-.f64 1 m) 4))))","(+.f64 (-.f64 (*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 3)) (/.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 v m) 3))) (*.f64 (/.f64 (pow.f64 m 4) (pow.f64 v 4)) (pow.f64 (-.f64 1 m) 5)))","(+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (+.f64 (/.f64 (*.f64 (pow.f64 m 4) (pow.f64 (-.f64 1 m) 5)) (pow.f64 v 4)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 3))) (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 5) (pow.f64 (-.f64 1 m) 6)) (pow.f64 v 5))))))","(+.f64 (+.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (/.f64 (pow.f64 m 4) (/.f64 (pow.f64 v 4) (pow.f64 (-.f64 1 m) 5)))) (*.f64 -1 (+.f64 (/.f64 (pow.f64 m 3) (/.f64 (pow.f64 v 3) (pow.f64 (-.f64 1 m) 4))) (/.f64 (*.f64 (pow.f64 m 5) (pow.f64 (-.f64 1 m) 6)) (pow.f64 v 5)))))","(+.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (-.f64 (-.f64 (*.f64 (/.f64 (pow.f64 m 4) (pow.f64 v 4)) (pow.f64 (-.f64 1 m) 5)) (*.f64 (/.f64 (pow.f64 m 3) (pow.f64 v 3)) (pow.f64 (-.f64 1 m) 4))) (*.f64 (/.f64 (pow.f64 m 5) (pow.f64 v 5)) (pow.f64 (-.f64 1 m) 6))))","(+.f64 (-.f64 (*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 3)) (+.f64 (/.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 v m) 3)) (*.f64 (/.f64 (pow.f64 m 5) (pow.f64 v 5)) (pow.f64 (-.f64 1 m) 6)))) (*.f64 (/.f64 (pow.f64 m 4) (pow.f64 v 4)) (pow.f64 (-.f64 1 m) 5)))","(/.f64 (pow.f64 m 2) (pow.f64 v 2))","(/.f64 (*.f64 m m) (*.f64 v v))","(*.f64 (/.f64 m v) (/.f64 m v))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 m 3) (pow.f64 v 2))) (/.f64 (pow.f64 m 2) (pow.f64 v 2)))","(fma.f64 -4 (/.f64 (pow.f64 m 3) (*.f64 v v)) (/.f64 (*.f64 m m) (*.f64 v v)))","(fma.f64 -4 (/.f64 (pow.f64 m 3) (*.f64 v v)) (*.f64 (/.f64 m v) (/.f64 m v)))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 m 3) (pow.f64 v 2))) (+.f64 (*.f64 6 (/.f64 (pow.f64 m 4) (pow.f64 v 2))) (/.f64 (pow.f64 m 2) (pow.f64 v 2))))","(fma.f64 -4 (/.f64 (pow.f64 m 3) (*.f64 v v)) (fma.f64 6 (/.f64 (pow.f64 m 4) (*.f64 v v)) (/.f64 (*.f64 m m) (*.f64 v v))))","(fma.f64 -4 (/.f64 (pow.f64 m 3) (*.f64 v v)) (fma.f64 6 (/.f64 (pow.f64 m 4) (*.f64 v v)) (*.f64 (/.f64 m v) (/.f64 m v))))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 m 3) (pow.f64 v 2))) (+.f64 (*.f64 6 (/.f64 (pow.f64 m 4) (pow.f64 v 2))) (+.f64 (/.f64 (pow.f64 m 2) (pow.f64 v 2)) (*.f64 -4 (/.f64 (pow.f64 m 5) (pow.f64 v 2))))))","(fma.f64 -4 (/.f64 (pow.f64 m 3) (*.f64 v v)) (+.f64 (fma.f64 6 (/.f64 (pow.f64 m 4) (*.f64 v v)) (/.f64 (*.f64 m m) (*.f64 v v))) (*.f64 -4 (/.f64 (pow.f64 m 5) (*.f64 v v)))))","(fma.f64 -4 (/.f64 (pow.f64 m 3) (*.f64 v v)) (fma.f64 6 (/.f64 (pow.f64 m 4) (*.f64 v v)) (fma.f64 -4 (/.f64 (pow.f64 m 5) (*.f64 v v)) (*.f64 (/.f64 m v) (/.f64 m v)))))","(+.f64 (fma.f64 6 (/.f64 (pow.f64 m 4) (*.f64 v v)) (*.f64 (/.f64 m v) (/.f64 m v))) (*.f64 (/.f64 -4 v) (+.f64 (/.f64 (pow.f64 m 5) v) (/.f64 (pow.f64 m 3) v))))","(/.f64 (pow.f64 m 6) (pow.f64 v 2))","(/.f64 (pow.f64 m 6) (*.f64 v v))","(+.f64 (/.f64 (pow.f64 m 6) (pow.f64 v 2)) (*.f64 -4 (/.f64 (pow.f64 m 5) (pow.f64 v 2))))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 m 5) (*.f64 v v))) (/.f64 (pow.f64 m 6) (*.f64 v v)))","(fma.f64 -4 (/.f64 (pow.f64 m 5) (*.f64 v v)) (/.f64 (pow.f64 m 6) (*.f64 v v)))","(+.f64 (*.f64 6 (/.f64 (pow.f64 m 4) (pow.f64 v 2))) (+.f64 (/.f64 (pow.f64 m 6) (pow.f64 v 2)) (*.f64 -4 (/.f64 (pow.f64 m 5) (pow.f64 v 2)))))","(fma.f64 6 (/.f64 (pow.f64 m 4) (*.f64 v v)) (+.f64 (*.f64 -4 (/.f64 (pow.f64 m 5) (*.f64 v v))) (/.f64 (pow.f64 m 6) (*.f64 v v))))","(fma.f64 6 (/.f64 (pow.f64 m 4) (*.f64 v v)) (fma.f64 -4 (/.f64 (pow.f64 m 5) (*.f64 v v)) (/.f64 (pow.f64 m 6) (*.f64 v v))))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 m 3) (pow.f64 v 2))) (+.f64 (*.f64 6 (/.f64 (pow.f64 m 4) (pow.f64 v 2))) (+.f64 (/.f64 (pow.f64 m 6) (pow.f64 v 2)) (*.f64 -4 (/.f64 (pow.f64 m 5) (pow.f64 v 2))))))","(fma.f64 -4 (/.f64 (pow.f64 m 3) (*.f64 v v)) (fma.f64 6 (/.f64 (pow.f64 m 4) (*.f64 v v)) (+.f64 (*.f64 -4 (/.f64 (pow.f64 m 5) (*.f64 v v))) (/.f64 (pow.f64 m 6) (*.f64 v v)))))","(fma.f64 -4 (/.f64 (pow.f64 m 3) (*.f64 v v)) (fma.f64 6 (/.f64 (pow.f64 m 4) (*.f64 v v)) (fma.f64 -4 (/.f64 (pow.f64 m 5) (*.f64 v v)) (/.f64 (pow.f64 m 6) (*.f64 v v)))))","(+.f64 (fma.f64 6 (/.f64 (pow.f64 m 4) (*.f64 v v)) (/.f64 (pow.f64 m 6) (*.f64 v v))) (*.f64 (/.f64 -4 v) (+.f64 (/.f64 (pow.f64 m 5) v) (/.f64 (pow.f64 m 3) v))))","(/.f64 (pow.f64 m 6) (pow.f64 v 2))","(/.f64 (pow.f64 m 6) (*.f64 v v))","(+.f64 (/.f64 (pow.f64 m 6) (pow.f64 v 2)) (*.f64 -4 (/.f64 (pow.f64 m 5) (pow.f64 v 2))))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 m 5) (*.f64 v v))) (/.f64 (pow.f64 m 6) (*.f64 v v)))","(fma.f64 -4 (/.f64 (pow.f64 m 5) (*.f64 v v)) (/.f64 (pow.f64 m 6) (*.f64 v v)))","(+.f64 (*.f64 6 (/.f64 (pow.f64 m 4) (pow.f64 v 2))) (+.f64 (/.f64 (pow.f64 m 6) (pow.f64 v 2)) (*.f64 -4 (/.f64 (pow.f64 m 5) (pow.f64 v 2)))))","(fma.f64 6 (/.f64 (pow.f64 m 4) (*.f64 v v)) (+.f64 (*.f64 -4 (/.f64 (pow.f64 m 5) (*.f64 v v))) (/.f64 (pow.f64 m 6) (*.f64 v v))))","(fma.f64 6 (/.f64 (pow.f64 m 4) (*.f64 v v)) (fma.f64 -4 (/.f64 (pow.f64 m 5) (*.f64 v v)) (/.f64 (pow.f64 m 6) (*.f64 v v))))","(+.f64 (*.f64 -4 (/.f64 (pow.f64 m 3) (pow.f64 v 2))) (+.f64 (*.f64 6 (/.f64 (pow.f64 m 4) (pow.f64 v 2))) (+.f64 (/.f64 (pow.f64 m 6) (pow.f64 v 2)) (*.f64 -4 (/.f64 (pow.f64 m 5) (pow.f64 v 2))))))","(fma.f64 -4 (/.f64 (pow.f64 m 3) (*.f64 v v)) (fma.f64 6 (/.f64 (pow.f64 m 4) (*.f64 v v)) (+.f64 (*.f64 -4 (/.f64 (pow.f64 m 5) (*.f64 v v))) (/.f64 (pow.f64 m 6) (*.f64 v v)))))","(fma.f64 -4 (/.f64 (pow.f64 m 3) (*.f64 v v)) (fma.f64 6 (/.f64 (pow.f64 m 4) (*.f64 v v)) (fma.f64 -4 (/.f64 (pow.f64 m 5) (*.f64 v v)) (/.f64 (pow.f64 m 6) (*.f64 v v)))))","(+.f64 (fma.f64 6 (/.f64 (pow.f64 m 4) (*.f64 v v)) (/.f64 (pow.f64 m 6) (*.f64 v v))) (*.f64 (/.f64 -4 v) (+.f64 (/.f64 (pow.f64 m 5) v) (/.f64 (pow.f64 m 3) v))))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 4)))","(*.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 (-.f64 1 m) 4) v))","(*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 4))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 4)))","(*.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 (-.f64 1 m) 4) v))","(*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 4))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 4)))","(*.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 (-.f64 1 m) 4) v))","(*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 4))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 4)))","(*.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 (-.f64 1 m) 4) v))","(*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 4))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 4)))","(*.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 (-.f64 1 m) 4) v))","(*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 4))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 4)))","(*.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 (-.f64 1 m) 4) v))","(*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 4))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 4)))","(*.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 (-.f64 1 m) 4) v))","(*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 4))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 4)))","(*.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 (-.f64 1 m) 4) v))","(*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 4))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 4)))","(*.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 (-.f64 1 m) 4) v))","(*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 4))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 4)))","(*.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 (-.f64 1 m) 4) v))","(*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 4))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 4)))","(*.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 (-.f64 1 m) 4) v))","(*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 4))","(/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 2))","(/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 4)))","(*.f64 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 (-.f64 1 m) 4) v))","(*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 4))","1","(+.f64 1 (*.f64 -1 (*.f64 (+.f64 1 (/.f64 1 v)) m)))","(+.f64 1 (neg.f64 (*.f64 m (+.f64 1 (/.f64 1 v)))))","(fma.f64 (+.f64 -1 (/.f64 -1 v)) m 1)","(+.f64 (*.f64 (-.f64 (+.f64 1 (*.f64 2 (/.f64 1 v))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 v) 1) (+.f64 1 (/.f64 1 v))))) (pow.f64 m 2)) (+.f64 1 (*.f64 -1 (*.f64 (+.f64 1 (/.f64 1 v)) m))))","(fma.f64 (-.f64 (+.f64 1 (/.f64 2 v)) (neg.f64 (*.f64 (+.f64 (/.f64 1 v) -1) (+.f64 1 (/.f64 1 v))))) (*.f64 m m) (+.f64 1 (neg.f64 (*.f64 m (+.f64 1 (/.f64 1 v))))))","(fma.f64 (*.f64 m m) (+.f64 (/.f64 2 v) (+.f64 1 (*.f64 (+.f64 1 (/.f64 -1 v)) (+.f64 -1 (/.f64 -1 v))))) (fma.f64 (+.f64 -1 (/.f64 -1 v)) m 1))","(fma.f64 (*.f64 m m) (+.f64 1 (+.f64 (/.f64 2 v) (*.f64 (+.f64 1 (/.f64 -1 v)) (+.f64 -1 (/.f64 -1 v))))) (fma.f64 (+.f64 -1 (/.f64 -1 v)) m 1))","(+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (/.f64 (+.f64 1 (/.f64 1 v)) v)) (+.f64 (/.f64 1 v) (*.f64 (-.f64 (+.f64 1 (*.f64 2 (/.f64 1 v))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 v) 1) (+.f64 1 (/.f64 1 v))))) (-.f64 (/.f64 1 v) 1)))) (pow.f64 m 3))) (+.f64 (*.f64 (-.f64 (+.f64 1 (*.f64 2 (/.f64 1 v))) (*.f64 -1 (*.f64 (-.f64 (/.f64 1 v) 1) (+.f64 1 (/.f64 1 v))))) (pow.f64 m 2)) (+.f64 1 (*.f64 -1 (*.f64 (+.f64 1 (/.f64 1 v)) m)))))","(fma.f64 -1 (*.f64 (pow.f64 m 3) (fma.f64 2 (/.f64 (+.f64 1 (/.f64 1 v)) v) (+.f64 (/.f64 1 v) (*.f64 (+.f64 (/.f64 1 v) -1) (-.f64 (+.f64 1 (/.f64 2 v)) (neg.f64 (*.f64 (+.f64 (/.f64 1 v) -1) (+.f64 1 (/.f64 1 v))))))))) (fma.f64 (-.f64 (+.f64 1 (/.f64 2 v)) (neg.f64 (*.f64 (+.f64 (/.f64 1 v) -1) (+.f64 1 (/.f64 1 v))))) (*.f64 m m) (+.f64 1 (neg.f64 (*.f64 m (+.f64 1 (/.f64 1 v)))))))","(-.f64 (fma.f64 (*.f64 m m) (+.f64 (/.f64 2 v) (+.f64 1 (*.f64 (+.f64 1 (/.f64 -1 v)) (+.f64 -1 (/.f64 -1 v))))) (fma.f64 (+.f64 -1 (/.f64 -1 v)) m 1)) (*.f64 (pow.f64 m 3) (+.f64 (/.f64 (+.f64 2 (/.f64 2 v)) v) (fma.f64 (+.f64 -1 (/.f64 1 v)) (+.f64 (/.f64 2 v) (+.f64 1 (*.f64 (+.f64 1 (/.f64 -1 v)) (+.f64 -1 (/.f64 -1 v))))) (/.f64 1 v)))))","(-.f64 (fma.f64 (*.f64 m m) (+.f64 1 (+.f64 (/.f64 2 v) (*.f64 (+.f64 1 (/.f64 -1 v)) (+.f64 -1 (/.f64 -1 v))))) (fma.f64 (+.f64 -1 (/.f64 -1 v)) m 1)) (*.f64 (pow.f64 m 3) (+.f64 (/.f64 (+.f64 2 (/.f64 2 v)) v) (fma.f64 (+.f64 -1 (/.f64 1 v)) (+.f64 1 (+.f64 (/.f64 2 v) (*.f64 (+.f64 1 (/.f64 -1 v)) (+.f64 -1 (/.f64 -1 v))))) (/.f64 1 v)))))","(/.f64 v m)","(-.f64 (+.f64 (/.f64 v m) (/.f64 v (pow.f64 m 3))) (/.f64 (*.f64 (pow.f64 v 2) (-.f64 (/.f64 1 v) 1)) (pow.f64 m 3)))","(+.f64 (/.f64 v m) (-.f64 (/.f64 v (pow.f64 m 3)) (/.f64 (*.f64 v v) (/.f64 (pow.f64 m 3) (+.f64 (/.f64 1 v) -1)))))","(+.f64 (/.f64 v m) (+.f64 (/.f64 v (pow.f64 m 3)) (/.f64 (*.f64 v v) (/.f64 (pow.f64 m 3) (+.f64 1 (/.f64 -1 v))))))","(+.f64 (/.f64 v m) (+.f64 (/.f64 v (pow.f64 m 3)) (/.f64 (+.f64 v -1) (/.f64 (pow.f64 m 3) v))))","(-.f64 (+.f64 (/.f64 v m) (+.f64 (/.f64 v (pow.f64 m 3)) (*.f64 -1 (/.f64 (+.f64 (pow.f64 v 2) (*.f64 -2 (-.f64 v (*.f64 (pow.f64 v 2) (-.f64 (/.f64 1 v) 1))))) (pow.f64 m 4))))) (/.f64 (*.f64 (pow.f64 v 2) (-.f64 (/.f64 1 v) 1)) (pow.f64 m 3)))","(-.f64 (+.f64 (+.f64 (/.f64 v m) (/.f64 v (pow.f64 m 3))) (neg.f64 (/.f64 (+.f64 (*.f64 v v) (*.f64 -2 (-.f64 v (*.f64 (*.f64 v v) (+.f64 (/.f64 1 v) -1))))) (pow.f64 m 4)))) (/.f64 (*.f64 v v) (/.f64 (pow.f64 m 3) (+.f64 (/.f64 1 v) -1))))","(+.f64 (-.f64 (/.f64 v (pow.f64 m 3)) (/.f64 (fma.f64 v v (*.f64 -2 (+.f64 v (*.f64 v (*.f64 v (+.f64 1 (/.f64 -1 v))))))) (pow.f64 m 4))) (-.f64 (/.f64 v m) (*.f64 (/.f64 (*.f64 v v) (pow.f64 m 3)) (+.f64 -1 (/.f64 1 v)))))","(+.f64 (-.f64 (/.f64 v (pow.f64 m 3)) (/.f64 (fma.f64 -2 (+.f64 v (*.f64 v (+.f64 v -1))) (*.f64 v v)) (pow.f64 m 4))) (+.f64 (/.f64 v m) (/.f64 (+.f64 v -1) (/.f64 (pow.f64 m 3) v))))","(-.f64 (+.f64 (/.f64 v m) (+.f64 (/.f64 v (pow.f64 m 3)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (pow.f64 v 2) (*.f64 -2 (-.f64 v (*.f64 (pow.f64 v 2) (-.f64 (/.f64 1 v) 1))))) (pow.f64 m 4))) (*.f64 -1 (/.f64 (+.f64 (*.f64 v (*.f64 (-.f64 (/.f64 1 v) 1) (-.f64 v (*.f64 (pow.f64 v 2) (-.f64 (/.f64 1 v) 1))))) (*.f64 2 (+.f64 (pow.f64 v 2) (*.f64 -2 (-.f64 v (*.f64 (pow.f64 v 2) (-.f64 (/.f64 1 v) 1))))))) (pow.f64 m 5)))))) (/.f64 (*.f64 (pow.f64 v 2) (-.f64 (/.f64 1 v) 1)) (pow.f64 m 3)))","(-.f64 (+.f64 (+.f64 (/.f64 v m) (/.f64 v (pow.f64 m 3))) (*.f64 -1 (+.f64 (/.f64 (+.f64 (*.f64 v v) (*.f64 -2 (-.f64 v (*.f64 (*.f64 v v) (+.f64 (/.f64 1 v) -1))))) (pow.f64 m 4)) (/.f64 (fma.f64 v (*.f64 (+.f64 (/.f64 1 v) -1) (-.f64 v (*.f64 (*.f64 v v) (+.f64 (/.f64 1 v) -1)))) (*.f64 2 (+.f64 (*.f64 v v) (*.f64 -2 (-.f64 v (*.f64 (*.f64 v v) (+.f64 (/.f64 1 v) -1))))))) (pow.f64 m 5))))) (/.f64 (*.f64 v v) (/.f64 (pow.f64 m 3) (+.f64 (/.f64 1 v) -1))))","(+.f64 (-.f64 (-.f64 (/.f64 v (pow.f64 m 3)) (/.f64 (fma.f64 v v (*.f64 -2 (+.f64 v (*.f64 v (*.f64 v (+.f64 1 (/.f64 -1 v))))))) (pow.f64 m 4))) (/.f64 (fma.f64 2 (fma.f64 v v (*.f64 -2 (+.f64 v (*.f64 v (*.f64 v (+.f64 1 (/.f64 -1 v))))))) (*.f64 v (*.f64 (+.f64 -1 (/.f64 1 v)) (+.f64 v (*.f64 v (*.f64 v (+.f64 1 (/.f64 -1 v)))))))) (pow.f64 m 5))) (-.f64 (/.f64 v m) (*.f64 (/.f64 (*.f64 v v) (pow.f64 m 3)) (+.f64 -1 (/.f64 1 v)))))","(+.f64 (-.f64 (/.f64 v (pow.f64 m 3)) (+.f64 (/.f64 (fma.f64 -2 (+.f64 v (*.f64 v (+.f64 v -1))) (*.f64 v v)) (pow.f64 m 4)) (/.f64 (+.f64 (*.f64 2 (*.f64 v v)) (*.f64 (+.f64 v (*.f64 v (+.f64 v -1))) (+.f64 -4 (-.f64 1 v)))) (pow.f64 m 5)))) (+.f64 (/.f64 v m) (/.f64 (+.f64 v -1) (/.f64 (pow.f64 m 3) v))))","(/.f64 v m)","(+.f64 (/.f64 v m) (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 v) (*.f64 (-.f64 1 (/.f64 1 v)) (pow.f64 v 2))) (pow.f64 m 3))))","(+.f64 (/.f64 v m) (neg.f64 (/.f64 (-.f64 (neg.f64 v) (*.f64 (*.f64 v v) (-.f64 1 (/.f64 1 v)))) (pow.f64 m 3))))","(-.f64 (/.f64 v m) (/.f64 (-.f64 (neg.f64 v) (*.f64 v (*.f64 v (+.f64 1 (/.f64 -1 v))))) (pow.f64 m 3)))","(-.f64 (/.f64 v m) (/.f64 (*.f64 v (+.f64 -1 (-.f64 1 v))) (pow.f64 m 3)))","(+.f64 (/.f64 v m) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 v) (*.f64 (-.f64 1 (/.f64 1 v)) (pow.f64 v 2))) (pow.f64 m 3))) (*.f64 -1 (/.f64 (+.f64 (pow.f64 v 2) (*.f64 2 (-.f64 (*.f64 -1 v) (*.f64 (-.f64 1 (/.f64 1 v)) (pow.f64 v 2))))) (pow.f64 m 4)))))","(+.f64 (/.f64 v m) (*.f64 -1 (+.f64 (/.f64 (-.f64 (neg.f64 v) (*.f64 (*.f64 v v) (-.f64 1 (/.f64 1 v)))) (pow.f64 m 3)) (/.f64 (+.f64 (*.f64 v v) (*.f64 2 (-.f64 (neg.f64 v) (*.f64 (*.f64 v v) (-.f64 1 (/.f64 1 v)))))) (pow.f64 m 4)))))","(-.f64 (-.f64 (/.f64 v m) (/.f64 (-.f64 (neg.f64 v) (*.f64 v (*.f64 v (+.f64 1 (/.f64 -1 v))))) (pow.f64 m 3))) (/.f64 (fma.f64 2 (-.f64 (neg.f64 v) (*.f64 v (*.f64 v (+.f64 1 (/.f64 -1 v))))) (*.f64 v v)) (pow.f64 m 4)))","(+.f64 (/.f64 (+.f64 v (*.f64 v (+.f64 v -1))) (pow.f64 m 3)) (-.f64 (/.f64 v m) (/.f64 (fma.f64 2 (*.f64 v (+.f64 -1 (-.f64 1 v))) (*.f64 v v)) (pow.f64 m 4))))","(+.f64 (*.f64 -2 (/.f64 (+.f64 (pow.f64 v 2) (*.f64 2 (-.f64 (*.f64 -1 v) (*.f64 (-.f64 1 (/.f64 1 v)) (pow.f64 v 2))))) (pow.f64 m 5))) (+.f64 (/.f64 v m) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 (*.f64 -1 v) (*.f64 (-.f64 1 (/.f64 1 v)) (pow.f64 v 2))) (*.f64 (-.f64 1 (/.f64 1 v)) v)) (pow.f64 m 5))) (+.f64 (*.f64 -1 (/.f64 (-.f64 (*.f64 -1 v) (*.f64 (-.f64 1 (/.f64 1 v)) (pow.f64 v 2))) (pow.f64 m 3))) (*.f64 -1 (/.f64 (+.f64 (pow.f64 v 2) (*.f64 2 (-.f64 (*.f64 -1 v) (*.f64 (-.f64 1 (/.f64 1 v)) (pow.f64 v 2))))) (pow.f64 m 4)))))))","(fma.f64 -2 (/.f64 (+.f64 (*.f64 v v) (*.f64 2 (-.f64 (neg.f64 v) (*.f64 (*.f64 v v) (-.f64 1 (/.f64 1 v)))))) (pow.f64 m 5)) (+.f64 (/.f64 v m) (fma.f64 -1 (/.f64 (-.f64 (neg.f64 v) (*.f64 (*.f64 v v) (-.f64 1 (/.f64 1 v)))) (/.f64 (pow.f64 m 5) (*.f64 v (-.f64 1 (/.f64 1 v))))) (*.f64 -1 (+.f64 (/.f64 (-.f64 (neg.f64 v) (*.f64 (*.f64 v v) (-.f64 1 (/.f64 1 v)))) (pow.f64 m 3)) (/.f64 (+.f64 (*.f64 v v) (*.f64 2 (-.f64 (neg.f64 v) (*.f64 (*.f64 v v) (-.f64 1 (/.f64 1 v)))))) (pow.f64 m 4)))))))","(fma.f64 -2 (/.f64 (fma.f64 2 (-.f64 (neg.f64 v) (*.f64 v (*.f64 v (+.f64 1 (/.f64 -1 v))))) (*.f64 v v)) (pow.f64 m 5)) (+.f64 (/.f64 v m) (-.f64 (-.f64 (/.f64 (neg.f64 (*.f64 (+.f64 1 (/.f64 -1 v)) (*.f64 v (-.f64 (neg.f64 v) (*.f64 v (*.f64 v (+.f64 1 (/.f64 -1 v)))))))) (pow.f64 m 5)) (/.f64 (-.f64 (neg.f64 v) (*.f64 v (*.f64 v (+.f64 1 (/.f64 -1 v))))) (pow.f64 m 3))) (/.f64 (fma.f64 2 (-.f64 (neg.f64 v) (*.f64 v (*.f64 v (+.f64 1 (/.f64 -1 v))))) (*.f64 v v)) (pow.f64 m 4)))))","(+.f64 (+.f64 (-.f64 (*.f64 (/.f64 (*.f64 v (+.f64 -1 (-.f64 1 v))) (pow.f64 m 5)) (-.f64 1 v)) (/.f64 (fma.f64 2 (*.f64 v (+.f64 -1 (-.f64 1 v))) (*.f64 v v)) (pow.f64 m 4))) (/.f64 (+.f64 v (*.f64 v (+.f64 v -1))) (pow.f64 m 3))) (fma.f64 -2 (/.f64 (fma.f64 2 (*.f64 v (+.f64 -1 (-.f64 1 v))) (*.f64 v v)) (pow.f64 m 5)) (/.f64 v m)))","(/.f64 v m)","(+.f64 (/.f64 v m) (*.f64 -1 (/.f64 (pow.f64 v 2) (*.f64 (pow.f64 m 2) (-.f64 1 m)))))","(+.f64 (/.f64 v m) (neg.f64 (/.f64 (/.f64 (*.f64 v v) (*.f64 m m)) (-.f64 1 m))))","(-.f64 (/.f64 v m) (/.f64 v (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v)))","(-.f64 (/.f64 v m) (/.f64 v (/.f64 (-.f64 1 m) (/.f64 v (*.f64 m m)))))","(+.f64 (/.f64 v m) (+.f64 (/.f64 (pow.f64 v 3) (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 2))) (*.f64 -1 (/.f64 (pow.f64 v 2) (*.f64 (pow.f64 m 2) (-.f64 1 m))))))","(+.f64 (/.f64 v m) (+.f64 (neg.f64 (/.f64 (/.f64 (*.f64 v v) (*.f64 m m)) (-.f64 1 m))) (/.f64 (/.f64 (pow.f64 v 3) (pow.f64 m 3)) (pow.f64 (-.f64 1 m) 2))))","(+.f64 (/.f64 v m) (-.f64 (/.f64 (pow.f64 v 3) (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 2))) (/.f64 v (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v))))","(+.f64 (-.f64 (/.f64 v m) (/.f64 v (/.f64 (-.f64 1 m) (/.f64 v (*.f64 m m))))) (/.f64 (pow.f64 (/.f64 v m) 3) (pow.f64 (-.f64 1 m) 2)))","(+.f64 (/.f64 v m) (+.f64 (/.f64 (pow.f64 v 3) (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 v 2) (*.f64 (pow.f64 m 2) (-.f64 1 m)))) (*.f64 -1 (/.f64 (pow.f64 v 4) (*.f64 (pow.f64 m 4) (pow.f64 (-.f64 1 m) 3)))))))","(+.f64 (+.f64 (/.f64 v m) (/.f64 (/.f64 (pow.f64 v 3) (pow.f64 m 3)) (pow.f64 (-.f64 1 m) 2))) (*.f64 -1 (+.f64 (/.f64 (/.f64 (*.f64 v v) (*.f64 m m)) (-.f64 1 m)) (/.f64 (/.f64 (pow.f64 v 4) (pow.f64 m 4)) (pow.f64 (-.f64 1 m) 3)))))","(+.f64 (/.f64 v m) (-.f64 (-.f64 (/.f64 (pow.f64 v 3) (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 2))) (/.f64 v (/.f64 (*.f64 (*.f64 m m) (-.f64 1 m)) v))) (/.f64 (/.f64 (pow.f64 v 4) (pow.f64 m 4)) (pow.f64 (-.f64 1 m) 3))))","(+.f64 (/.f64 v m) (-.f64 (/.f64 (pow.f64 (/.f64 v m) 3) (pow.f64 (-.f64 1 m) 2)) (+.f64 (/.f64 v (/.f64 (-.f64 1 m) (/.f64 v (*.f64 m m)))) (/.f64 (/.f64 (pow.f64 v 4) (pow.f64 m 4)) (pow.f64 (-.f64 1 m) 3)))))","(-.f64 1 m)","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v))) m)","(+.f64 1 (-.f64 (neg.f64 (/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2)))) m))","(-.f64 (-.f64 1 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) m)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)))) m)","(+.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (+.f64 1 (-.f64 (neg.f64 (/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2)))) m)))","(+.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (-.f64 (-.f64 1 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) m))","(+.f64 (*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 3)) (-.f64 (-.f64 1 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) m))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 3))) (*.f64 -1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v))))) m)","(+.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (/.f64 (pow.f64 m 3) (/.f64 (pow.f64 v 3) (pow.f64 (-.f64 1 m) 4))) (/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2)))))) m))","(+.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (-.f64 (-.f64 (-.f64 1 (*.f64 (/.f64 (pow.f64 m 3) (pow.f64 v 3)) (pow.f64 (-.f64 1 m) 4))) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) m))","(+.f64 (-.f64 1 (+.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (/.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 v m) 3)))) (fma.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 3) (neg.f64 m)))","(-.f64 1 m)","(-.f64 (+.f64 1 (*.f64 -1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v))) m)","(+.f64 1 (-.f64 (neg.f64 (/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2)))) m))","(-.f64 (-.f64 1 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) m)","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (+.f64 1 (*.f64 -1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)))) m)","(+.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (+.f64 1 (-.f64 (neg.f64 (/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2)))) m)))","(+.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (-.f64 (-.f64 1 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) m))","(+.f64 (*.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 3)) (-.f64 (-.f64 1 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) m))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 m 2) (pow.f64 (-.f64 1 m) 3)) (pow.f64 v 2)) (+.f64 1 (+.f64 (*.f64 -1 (/.f64 (*.f64 (pow.f64 m 3) (pow.f64 (-.f64 1 m) 4)) (pow.f64 v 3))) (*.f64 -1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v))))) m)","(+.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (-.f64 (+.f64 1 (*.f64 -1 (+.f64 (/.f64 (pow.f64 m 3) (/.f64 (pow.f64 v 3) (pow.f64 (-.f64 1 m) 4))) (/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2)))))) m))","(+.f64 (/.f64 (*.f64 m m) (/.f64 (*.f64 v v) (pow.f64 (-.f64 1 m) 3))) (-.f64 (-.f64 (-.f64 1 (*.f64 (/.f64 (pow.f64 m 3) (pow.f64 v 3)) (pow.f64 (-.f64 1 m) 4))) (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))) m))","(+.f64 (-.f64 1 (+.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (/.f64 (pow.f64 (-.f64 1 m) 4) (pow.f64 (/.f64 v m) 3)))) (fma.f64 (*.f64 (/.f64 m v) (/.f64 m v)) (pow.f64 (-.f64 1 m) 3) (neg.f64 m)))","1","(+.f64 (*.f64 (-.f64 (/.f64 1 v) 1) m) 1)","(fma.f64 (+.f64 (/.f64 1 v) -1) m 1)","(fma.f64 m (+.f64 -1 (/.f64 1 v)) 1)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (-.f64 (/.f64 1 v) 1) m) 1))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (fma.f64 (+.f64 (/.f64 1 v) -1) m 1))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (fma.f64 m (+.f64 -1 (/.f64 1 v)) 1))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (fma.f64 m (+.f64 -1 (/.f64 1 v)) 1))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (-.f64 (/.f64 1 v) 1) m) (+.f64 1 (/.f64 (pow.f64 m 3) v))))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (+.f64 1 (fma.f64 (+.f64 (/.f64 1 v) -1) m (/.f64 (pow.f64 m 3) v))))","(+.f64 1 (fma.f64 -2 (/.f64 m (/.f64 v m)) (fma.f64 m (+.f64 -1 (/.f64 1 v)) (/.f64 (pow.f64 m 3) v))))","(+.f64 (fma.f64 m (+.f64 -1 (/.f64 1 v)) 1) (fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v)))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 (-.f64 (/.f64 1 v) 1) m) (/.f64 (pow.f64 m 3) v)))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (fma.f64 (+.f64 (/.f64 1 v) -1) m (/.f64 (pow.f64 m 3) v)))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (fma.f64 m (+.f64 -1 (/.f64 1 v)) (/.f64 (pow.f64 m 3) v)))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (fma.f64 m (+.f64 -1 (/.f64 1 v)) (/.f64 (pow.f64 m 3) v)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 1 (+.f64 (*.f64 (-.f64 (/.f64 1 v) 1) m) (/.f64 (pow.f64 m 3) v))))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (+.f64 1 (fma.f64 (+.f64 (/.f64 1 v) -1) m (/.f64 (pow.f64 m 3) v))))","(+.f64 1 (fma.f64 -2 (/.f64 m (/.f64 v m)) (fma.f64 m (+.f64 -1 (/.f64 1 v)) (/.f64 (pow.f64 m 3) v))))","(+.f64 (fma.f64 m (+.f64 -1 (/.f64 1 v)) 1) (fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v)))","(/.f64 (pow.f64 m 3) v)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (/.f64 (pow.f64 m 3) v))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (*.f64 -1 (*.f64 (-.f64 1 (/.f64 1 v)) m)) (/.f64 (pow.f64 m 3) v)))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (fma.f64 (+.f64 (/.f64 1 v) -1) m (/.f64 (pow.f64 m 3) v)))","(fma.f64 -2 (/.f64 m (/.f64 v m)) (fma.f64 m (+.f64 -1 (/.f64 1 v)) (/.f64 (pow.f64 m 3) v)))","(fma.f64 -2 (*.f64 (/.f64 m v) m) (fma.f64 m (+.f64 -1 (/.f64 1 v)) (/.f64 (pow.f64 m 3) v)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 1 (+.f64 (*.f64 -1 (*.f64 (-.f64 1 (/.f64 1 v)) m)) (/.f64 (pow.f64 m 3) v))))","(fma.f64 -2 (/.f64 (*.f64 m m) v) (+.f64 1 (fma.f64 (+.f64 (/.f64 1 v) -1) m (/.f64 (pow.f64 m 3) v))))","(+.f64 1 (fma.f64 -2 (/.f64 m (/.f64 v m)) (fma.f64 m (+.f64 -1 (/.f64 1 v)) (/.f64 (pow.f64 m 3) v))))","(+.f64 (fma.f64 m (+.f64 -1 (/.f64 1 v)) 1) (fma.f64 -2 (*.f64 (/.f64 m v) m) (/.f64 (pow.f64 m 3) v)))","(/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)","(/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2)))","(*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2))","(-.f64 (+.f64 1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)) m)","(+.f64 1 (-.f64 (/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2))) m))","(+.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))","(-.f64 (+.f64 1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)) m)","(+.f64 1 (-.f64 (/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2))) m))","(+.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))","(-.f64 (+.f64 1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)) m)","(+.f64 1 (-.f64 (/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2))) m))","(+.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))","(-.f64 1 m)","(-.f64 (+.f64 1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)) m)","(+.f64 1 (-.f64 (/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2))) m))","(+.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))","(-.f64 (+.f64 1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)) m)","(+.f64 1 (-.f64 (/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2))) m))","(+.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))","(-.f64 (+.f64 1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)) m)","(+.f64 1 (-.f64 (/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2))) m))","(+.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))","(-.f64 1 m)","(-.f64 (+.f64 1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)) m)","(+.f64 1 (-.f64 (/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2))) m))","(+.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))","(-.f64 (+.f64 1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)) m)","(+.f64 1 (-.f64 (/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2))) m))","(+.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))","(-.f64 (+.f64 1 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v)) m)","(+.f64 1 (-.f64 (/.f64 m (/.f64 v (pow.f64 (-.f64 1 m) 2))) m))","(+.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) (-.f64 1 m))"]],"stop":[["node limit",1]],"time":54.1669921875,"type":"simplify"},{"compiler":[[15365,10376]],"time":155.532958984375,"type":"eval"},{"alts":[["(-.f64 (/.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) (/.f64 (pow.f64 (-.f64 1 m) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))))","done",11.3203125],["(+.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v))) (*.f64 -1 (-.f64 1 m)))","done",0.0234375],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))","done",0.05859375]],"compiler":[[45,31],[25,18],[15,11]],"count":[[293,3]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[290,0],"picked":[1,1]}],"min-error":[0],"time":108.5400390625,"type":"prune"},{"accuracy":[0.0234375],"baseline":[0.0234375],"branch":[["m",0.0234375,1],["v",0.0234375,1],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))",0.0234375,1]],"compiler":[[3,2],[3,2],[15,11],[148,101]],"count":[[7,1]],"inputs":[["(-.f64 (/.f64 (pow.f64 (*.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2)) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))) (/.f64 (pow.f64 (-.f64 1 m) 2) (fma.f64 (/.f64 m v) (pow.f64 (-.f64 1 m) 2) (-.f64 1 m))))","(+.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v))) (*.f64 -1 (-.f64 1 m)))","(*.f64 (-.f64 (/.f64 (/.f64 (*.f64 (-.f64 1 (pow.f64 m 3)) m) (fma.f64 m (+.f64 m 1) 1)) v) 1) (-.f64 1 m))","(+.f64 (/.f64 (*.f64 m (pow.f64 (-.f64 1 m) 2)) v) (*.f64 -1 (-.f64 1 m)))","(*.f64 (fma.f64 (/.f64 m (pow.f64 (cbrt.f64 v) 2)) (/.f64 (-.f64 1 m) (cbrt.f64 v)) -1) (-.f64 1 m))","(*.f64 (-.f64 1 m) (fma.f64 (-.f64 1 m) (/.f64 m v) -1))","(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))"]],"link":["."],"name":["b parameter of renormalized beta distribution"],"oracle":[11.609821435600399],"outputs":[["(+.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v))) (*.f64 -1 (-.f64 1 m)))"]],"time":13.02392578125,"times":[["m",3.838134765625],["v",4.067138671875],["(*.f64 (-.f64 (/.f64 (*.f64 m (-.f64 1 m)) v) 1) (-.f64 1 m))",2.658203125]],"type":"regimes"},{"compiler":[[23,16]],"egraph":[[8,91,31,0.000774917],[7,86,31,0.0006514579999999999],[6,76,31,0.0005222499999999999],[5,71,31,0.00040641699999999995],[4,62,31,0.000306542],[3,47,31,0.000213583],[2,37,31,0.000131208],[1,29,31,7.8917e-5],[0,19,33,3.7209e-5]],"inputs":[["(+.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v))) (*.f64 -1 (-.f64 1 m)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v))) (*.f64 -1 (-.f64 1 m)))","(+.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v))) (neg.f64 (-.f64 1 m)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v))) (-.f64 1 m))","(+.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 m 2) v)) (+.f64 (/.f64 m v) (/.f64 (pow.f64 m 3) v))) (+.f64 m -1))"]],"stop":[["done",1],["saturated",1]],"time":9.60693359375,"type":"simplify"},{"time":0.005126953125,"type":"soundness"},{"compiler":[[23,16]],"remove-preprocessing":[[]],"time":11.267822265625,"type":"end"}]