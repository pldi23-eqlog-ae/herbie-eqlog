[{"compiler":[[37,29]],"method":["search"],"sampling":[[12,0.9980475902557373,0.0014641284942626953,0.00048828125],[11,0.9965834617614746,0.0029282569885253906,0.00048828125],[10,0.9936552047729492,0.005856513977050781,0.00048828125],[9,0.9877986907958984,0.011713027954101563,0.00048828125],[8,0.9760856628417969,0.023426055908203125,0.00048828125],[7,0.9526596069335938,0.04685211181640625,0.00048828125],[6,0.9058074951171875,0.0937042236328125,0.00048828125],[5,0.812103271484375,0.187408447265625,0.00048828125],[4,0.499755859375,0.499755859375,0.00048828125],[3,0.2498779296875,0.7496337890625,0.00048828125],[2,0.0,0.99951171875,0.00048828125],[1,0.0,0.99951171875,0.00048828125],[0,0.0,0.99951171875,0.00048828125]],"time":4.59619140625,"type":"analyze"},{"outcomes":[["body",256,"valid",593.279052734375,8256]],"time":600.7587890625,"type":"sample"},{"compiler":[[36,28]],"egraph":[[0,1,1,1.667e-6],[13,6221,36,0.051918207],[12,5169,36,0.044194124],[11,5121,36,0.034937124],[10,4831,36,0.028894207],[9,4477,36,0.023162791000000002],[8,3257,36,0.018229916000000002],[7,2285,38,0.013394957000000002],[6,1049,42,0.009131499000000001],[5,618,42,0.0039869580000000005],[4,350,42,0.002031291],[3,134,42,0.000873083],[2,49,46,0.000358458],[1,23,48,0.000144874],[0,11,52,6.2583e-5]],"inputs":[["0"],["(/.f64 (+.f64 1 (*.f64 (/.f64 (*.f64 2 t) (+.f64 1 t)) (/.f64 (*.f64 2 t) (+.f64 1 t)))) (+.f64 2 (*.f64 (/.f64 (*.f64 2 t) (+.f64 1 t)) (/.f64 (*.f64 2 t) (+.f64 1 t)))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0"],["(/.f64 (+.f64 1 (*.f64 (/.f64 (*.f64 2 t) (+.f64 1 t)) (/.f64 (*.f64 2 t) (+.f64 1 t)))) (+.f64 2 (*.f64 (/.f64 (*.f64 2 t) (+.f64 1 t)) (/.f64 (*.f64 2 t) (+.f64 1 t)))))","(/.f64 (+.f64 1 (*.f64 (/.f64 2 (/.f64 (+.f64 1 t) t)) (/.f64 2 (/.f64 (+.f64 1 t) t)))) (+.f64 2 (*.f64 (/.f64 2 (/.f64 (+.f64 1 t) t)) (/.f64 2 (/.f64 (+.f64 1 t) t)))))","(/.f64 (fma.f64 (*.f64 (/.f64 2 (+.f64 1 t)) t) (*.f64 (/.f64 2 (+.f64 1 t)) t) 1) (fma.f64 (*.f64 (/.f64 2 (+.f64 1 t)) t) (*.f64 (/.f64 2 (+.f64 1 t)) t) 2))","(/.f64 (+.f64 1 (/.f64 t (/.f64 (+.f64 1 t) (/.f64 (*.f64 t 4) (+.f64 1 t))))) (+.f64 2 (/.f64 t (/.f64 (+.f64 1 t) (/.f64 (*.f64 t 4) (+.f64 1 t))))))","(/.f64 (fma.f64 (/.f64 (/.f64 4 (+.f64 1 t)) (+.f64 1 t)) (*.f64 t t) 1) (fma.f64 (/.f64 (/.f64 4 (+.f64 1 t)) (+.f64 1 t)) (*.f64 t t) 2))","(/.f64 (fma.f64 t (*.f64 t (/.f64 (/.f64 4 (+.f64 1 t)) (+.f64 1 t))) 1) (fma.f64 (/.f64 (/.f64 4 (+.f64 1 t)) (+.f64 1 t)) (*.f64 t t) 2))","(/.f64 (fma.f64 t (*.f64 4 (/.f64 (/.f64 t (+.f64 1 t)) (+.f64 1 t))) 1) (fma.f64 t (*.f64 4 (/.f64 (/.f64 t (+.f64 1 t)) (+.f64 1 t))) 2))","(/.f64 (fma.f64 t (*.f64 t (/.f64 4 (fma.f64 t (+.f64 2 t) 1))) 1) (fma.f64 (/.f64 4 (fma.f64 t (+.f64 2 t) 1)) (*.f64 t t) 2))","(/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 2 t))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 2 t))) 2))","(/.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":76.208984375,"type":"preprocess"},{"count":[[1,2]],"egraph":[[13,6221,36,0.053697458],[12,5169,36,0.043740917000000004],[11,5121,36,0.034564083],[10,4831,36,0.02869475],[9,4477,36,0.023044583],[8,3257,36,0.018140208],[7,2285,38,0.013322375000000001],[6,1049,42,0.009069500000000001],[5,618,42,0.003947333],[4,350,42,0.002016625],[3,134,42,0.000862584],[2,49,46,0.000351334],[1,23,48,0.00013908399999999998],[0,11,52,5.8042e-5]],"inputs":[["(/.f64 (+.f64 1 (*.f64 (/.f64 (*.f64 2 t) (+.f64 1 t)) (/.f64 (*.f64 2 t) (+.f64 1 t)))) (+.f64 2 (*.f64 (/.f64 (*.f64 2 t) (+.f64 1 t)) (/.f64 (*.f64 2 t) (+.f64 1 t)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 1 (*.f64 (/.f64 (*.f64 2 t) (+.f64 1 t)) (/.f64 (*.f64 2 t) (+.f64 1 t)))) (+.f64 2 (*.f64 (/.f64 (*.f64 2 t) (+.f64 1 t)) (/.f64 (*.f64 2 t) (+.f64 1 t)))))","(/.f64 (+.f64 1 (*.f64 (/.f64 2 (/.f64 (+.f64 1 t) t)) (/.f64 2 (/.f64 (+.f64 1 t) t)))) (+.f64 2 (*.f64 (/.f64 2 (/.f64 (+.f64 1 t) t)) (/.f64 2 (/.f64 (+.f64 1 t) t)))))","(/.f64 (fma.f64 (*.f64 (/.f64 2 (+.f64 1 t)) t) (*.f64 (/.f64 2 (+.f64 1 t)) t) 1) (fma.f64 (*.f64 (/.f64 2 (+.f64 1 t)) t) (*.f64 (/.f64 2 (+.f64 1 t)) t) 2))","(/.f64 (+.f64 1 (/.f64 t (/.f64 (+.f64 1 t) (/.f64 (*.f64 t 4) (+.f64 1 t))))) (+.f64 2 (/.f64 t (/.f64 (+.f64 1 t) (/.f64 (*.f64 t 4) (+.f64 1 t))))))","(/.f64 (fma.f64 (/.f64 (/.f64 4 (+.f64 1 t)) (+.f64 1 t)) (*.f64 t t) 1) (fma.f64 (/.f64 (/.f64 4 (+.f64 1 t)) (+.f64 1 t)) (*.f64 t t) 2))","(/.f64 (fma.f64 t (*.f64 t (/.f64 (/.f64 4 (+.f64 1 t)) (+.f64 1 t))) 1) (fma.f64 (/.f64 (/.f64 4 (+.f64 1 t)) (+.f64 1 t)) (*.f64 t t) 2))","(/.f64 (fma.f64 t (*.f64 4 (/.f64 (/.f64 t (+.f64 1 t)) (+.f64 1 t))) 1) (fma.f64 t (*.f64 4 (/.f64 (/.f64 t (+.f64 1 t)) (+.f64 1 t))) 2))","(/.f64 (fma.f64 t (*.f64 t (/.f64 4 (fma.f64 t (+.f64 2 t) 1))) 1) (fma.f64 (/.f64 4 (fma.f64 t (+.f64 2 t) 1)) (*.f64 t t) 2))","(/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 2 t))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 2 t))) 2))","(/.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2))"]],"stop":[["node limit",1]],"time":65.942138671875,"type":"simplify"},{"compiler":[[61,47]],"time":0.802001953125,"type":"eval"},{"alts":[["(/.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2))","next",0.00390625]],"compiler":[[26,20],[26,20]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.00390625],"time":1.510986328125,"type":"prune"},{"compiler":[[78,59]],"locations":[["(/.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2))",0.00390625,true],["(/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t))))",0.1015625,true]],"time":18.404052734375,"type":"localize"},{"count":[[2,24]],"series":[["(/.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2))","t","-inf",0.343994140625],["(/.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2))","t","inf",0.31201171875],["(/.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2))","t","0",0.366943359375],["(/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t))))","t","-inf",0.302978515625],["(/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t))))","t","inf",0.31591796875],["(/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t))))","t","0",0.41796875]],"time":2.223876953125,"type":"series"},{"count":[[2,63]],"egraph":[[2,3800,49,0.033108833000000004],[1,275,49,0.006985583],[0,12,49,0.000436833]],"inputs":[["(/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t))))","(/.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))))) (cbrt.f64 (exp.f64 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2)))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 4 (/.f64 1 (+.f64 (/.f64 1 t) (+.f64 t 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2)))) (cbrt.f64 (/.f64 16 (pow.f64 (+.f64 (/.f64 1 t) (+.f64 t 2)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 16 (pow.f64 (+.f64 (/.f64 1 t) (+.f64 t 2)) 2))) (cbrt.f64 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (hypot.f64 (pow.f64 t -1/2) (sqrt.f64 (+.f64 t 2)))) (/.f64 2 (hypot.f64 (pow.f64 t -1/2) (sqrt.f64 (+.f64 t 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -4 (/.f64 1 (neg.f64 (+.f64 (/.f64 1 t) (+.f64 t 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (/.f64 1 t) (+.f64 t 2))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 4 (+.f64 (pow.f64 t 3) (pow.f64 (+.f64 2 (/.f64 1 t)) 3))) (fma.f64 (+.f64 2 (/.f64 1 t)) (-.f64 (+.f64 2 (/.f64 1 t)) t) (*.f64 t t)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 4 (-.f64 (*.f64 t t) (pow.f64 (+.f64 2 (/.f64 1 t)) 2))) (-.f64 (-.f64 t (/.f64 1 t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 2 (hypot.f64 (pow.f64 t -1/2) (sqrt.f64 (+.f64 t 2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 (/.f64 1 t) (+.f64 t 2)) 1/4) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 16 (pow.f64 (+.f64 (/.f64 1 t) (+.f64 t 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)))) (cbrt.f64 (exp.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (/.f64 1 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)) 2)) (cbrt.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1)) 2) (*.f64 (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1)) (/.f64 1 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))) (sqrt.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1)) (*.f64 (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1)) (/.f64 1 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1)) (/.f64 1 (neg.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1)) 2) 1) (/.f64 (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1)) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1)) 1) (/.f64 (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1)) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)) 2)) (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1)) 2) (pow.f64 (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)) 2)) (cbrt.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1)) (pow.f64 (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)) 2)) (/.f64 (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1)) (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))) (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1)) 2) (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))) (/.f64 (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1)) (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (neg.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) 3) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2))) 1))))))"]],"rules":[["egg-rr",36],["egg-rr",27]],"stop":[["node limit",1]],"time":60.135986328125,"type":"rewrite"},{"count":[[87,91]],"egraph":[[4,3602,319,0.023474416999999997],[3,1174,319,0.008835292],[2,417,329,0.003595876],[1,161,332,0.001571959],[0,57,338,0.000436667]],"inputs":[["(*.f64 4 t)","(+.f64 (*.f64 -8 (pow.f64 t 2)) (*.f64 4 t))","(+.f64 (*.f64 12 (pow.f64 t 3)) (+.f64 (*.f64 -8 (pow.f64 t 2)) (*.f64 4 t)))","(+.f64 (*.f64 12 (pow.f64 t 3)) (+.f64 (*.f64 -16 (pow.f64 t 4)) (+.f64 (*.f64 -8 (pow.f64 t 2)) (*.f64 4 t))))","(/.f64 4 t)","(-.f64 (*.f64 4 (/.f64 1 t)) (*.f64 8 (/.f64 1 (pow.f64 t 2))))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 t 3))) (*.f64 4 (/.f64 1 t))) (*.f64 8 (/.f64 1 (pow.f64 t 2))))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 t 3))) (*.f64 4 (/.f64 1 t))) (+.f64 (*.f64 16 (/.f64 1 (pow.f64 t 4))) (*.f64 8 (/.f64 1 (pow.f64 t 2)))))","(/.f64 4 t)","(-.f64 (*.f64 4 (/.f64 1 t)) (*.f64 8 (/.f64 1 (pow.f64 t 2))))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 t 3))) (*.f64 4 (/.f64 1 t))) (*.f64 8 (/.f64 1 (pow.f64 t 2))))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 t 3))) (*.f64 4 (/.f64 1 t))) (+.f64 (*.f64 16 (/.f64 1 (pow.f64 t 4))) (*.f64 8 (/.f64 1 (pow.f64 t 2)))))","1/2","(+.f64 1/2 (pow.f64 t 2))","(+.f64 (*.f64 -2 (pow.f64 t 3)) (+.f64 1/2 (pow.f64 t 2)))","(+.f64 (*.f64 -2 (pow.f64 t 3)) (+.f64 1/2 (+.f64 (pow.f64 t 4) (pow.f64 t 2))))","5/6","(-.f64 5/6 (*.f64 2/9 (/.f64 1 t)))","(-.f64 (+.f64 (*.f64 1/27 (/.f64 1 (pow.f64 t 2))) 5/6) (*.f64 2/9 (/.f64 1 t)))","(-.f64 (+.f64 (*.f64 1/27 (/.f64 1 (pow.f64 t 2))) (+.f64 5/6 (*.f64 4/81 (/.f64 1 (pow.f64 t 3))))) (*.f64 2/9 (/.f64 1 t)))","5/6","(-.f64 5/6 (*.f64 2/9 (/.f64 1 t)))","(-.f64 (+.f64 (*.f64 1/27 (/.f64 1 (pow.f64 t 2))) 5/6) (*.f64 2/9 (/.f64 1 t)))","(-.f64 (+.f64 (*.f64 1/27 (/.f64 1 (pow.f64 t 2))) (+.f64 5/6 (*.f64 4/81 (/.f64 1 (pow.f64 t 3))))) (*.f64 2/9 (/.f64 1 t)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 4 t)","(+.f64 (*.f64 -8 (pow.f64 t 2)) (*.f64 4 t))","(fma.f64 -8 (*.f64 t t) (*.f64 4 t))","(fma.f64 4 t (*.f64 t (*.f64 t -8)))","(*.f64 t (+.f64 4 (*.f64 t -8)))","(*.f64 t (fma.f64 t -8 4))","(+.f64 (*.f64 12 (pow.f64 t 3)) (+.f64 (*.f64 -8 (pow.f64 t 2)) (*.f64 4 t)))","(fma.f64 12 (pow.f64 t 3) (fma.f64 -8 (*.f64 t t) (*.f64 4 t)))","(fma.f64 12 (pow.f64 t 3) (fma.f64 4 t (*.f64 t (*.f64 t -8))))","(fma.f64 4 t (*.f64 (*.f64 t t) (+.f64 -8 (*.f64 t 12))))","(*.f64 t (+.f64 4 (*.f64 t (fma.f64 t 12 -8))))","(+.f64 (*.f64 12 (pow.f64 t 3)) (+.f64 (*.f64 -16 (pow.f64 t 4)) (+.f64 (*.f64 -8 (pow.f64 t 2)) (*.f64 4 t))))","(fma.f64 12 (pow.f64 t 3) (fma.f64 -16 (pow.f64 t 4) (fma.f64 -8 (*.f64 t t) (*.f64 4 t))))","(fma.f64 12 (pow.f64 t 3) (fma.f64 -16 (pow.f64 t 4) (fma.f64 4 t (*.f64 t (*.f64 t -8)))))","(fma.f64 12 (pow.f64 t 3) (fma.f64 -16 (pow.f64 t 4) (*.f64 t (+.f64 4 (*.f64 t -8)))))","(fma.f64 t (fma.f64 t -8 4) (*.f64 (pow.f64 t 3) (+.f64 12 (*.f64 t -16))))","(/.f64 4 t)","(-.f64 (*.f64 4 (/.f64 1 t)) (*.f64 8 (/.f64 1 (pow.f64 t 2))))","(-.f64 (/.f64 4 t) (/.f64 8 (*.f64 t t)))","(+.f64 (/.f64 4 t) (/.f64 -8 (*.f64 t t)))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 t 3))) (*.f64 4 (/.f64 1 t))) (*.f64 8 (/.f64 1 (pow.f64 t 2))))","(+.f64 (/.f64 12 (pow.f64 t 3)) (-.f64 (/.f64 4 t) (/.f64 8 (*.f64 t t))))","(+.f64 (-.f64 (/.f64 4 t) (/.f64 8 (*.f64 t t))) (/.f64 12 (pow.f64 t 3)))","(+.f64 (/.f64 4 t) (+.f64 (/.f64 12 (pow.f64 t 3)) (/.f64 -8 (*.f64 t t))))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 t 3))) (*.f64 4 (/.f64 1 t))) (+.f64 (*.f64 16 (/.f64 1 (pow.f64 t 4))) (*.f64 8 (/.f64 1 (pow.f64 t 2)))))","(+.f64 (/.f64 12 (pow.f64 t 3)) (-.f64 (/.f64 4 t) (+.f64 (/.f64 8 (*.f64 t t)) (/.f64 16 (pow.f64 t 4)))))","(+.f64 (/.f64 12 (pow.f64 t 3)) (-.f64 (-.f64 (/.f64 4 t) (/.f64 8 (*.f64 t t))) (/.f64 16 (pow.f64 t 4))))","(+.f64 (/.f64 4 t) (+.f64 (/.f64 12 (pow.f64 t 3)) (+.f64 (/.f64 -8 (*.f64 t t)) (/.f64 -16 (pow.f64 t 4)))))","(+.f64 (/.f64 4 t) (-.f64 (/.f64 12 (pow.f64 t 3)) (-.f64 (/.f64 (/.f64 8 t) t) (/.f64 -16 (pow.f64 t 4)))))","(/.f64 4 t)","(-.f64 (*.f64 4 (/.f64 1 t)) (*.f64 8 (/.f64 1 (pow.f64 t 2))))","(-.f64 (/.f64 4 t) (/.f64 8 (*.f64 t t)))","(+.f64 (/.f64 4 t) (/.f64 -8 (*.f64 t t)))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 t 3))) (*.f64 4 (/.f64 1 t))) (*.f64 8 (/.f64 1 (pow.f64 t 2))))","(+.f64 (/.f64 12 (pow.f64 t 3)) (-.f64 (/.f64 4 t) (/.f64 8 (*.f64 t t))))","(+.f64 (-.f64 (/.f64 4 t) (/.f64 8 (*.f64 t t))) (/.f64 12 (pow.f64 t 3)))","(+.f64 (/.f64 4 t) (+.f64 (/.f64 12 (pow.f64 t 3)) (/.f64 -8 (*.f64 t t))))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 t 3))) (*.f64 4 (/.f64 1 t))) (+.f64 (*.f64 16 (/.f64 1 (pow.f64 t 4))) (*.f64 8 (/.f64 1 (pow.f64 t 2)))))","(+.f64 (/.f64 12 (pow.f64 t 3)) (-.f64 (/.f64 4 t) (+.f64 (/.f64 8 (*.f64 t t)) (/.f64 16 (pow.f64 t 4)))))","(+.f64 (/.f64 12 (pow.f64 t 3)) (-.f64 (-.f64 (/.f64 4 t) (/.f64 8 (*.f64 t t))) (/.f64 16 (pow.f64 t 4))))","(+.f64 (/.f64 4 t) (+.f64 (/.f64 12 (pow.f64 t 3)) (+.f64 (/.f64 -8 (*.f64 t t)) (/.f64 -16 (pow.f64 t 4)))))","(+.f64 (/.f64 4 t) (-.f64 (/.f64 12 (pow.f64 t 3)) (-.f64 (/.f64 (/.f64 8 t) t) (/.f64 -16 (pow.f64 t 4)))))","1/2","(+.f64 1/2 (pow.f64 t 2))","(+.f64 (*.f64 t t) 1/2)","(fma.f64 t t 1/2)","(+.f64 (*.f64 -2 (pow.f64 t 3)) (+.f64 1/2 (pow.f64 t 2)))","(fma.f64 -2 (pow.f64 t 3) (+.f64 (*.f64 t t) 1/2))","(fma.f64 (pow.f64 t 3) -2 (fma.f64 t t 1/2))","(fma.f64 t (fma.f64 t (*.f64 t -2) t) 1/2)","(fma.f64 t (*.f64 (fma.f64 t -2 1) t) 1/2)","(+.f64 (*.f64 -2 (pow.f64 t 3)) (+.f64 1/2 (+.f64 (pow.f64 t 4) (pow.f64 t 2))))","(fma.f64 -2 (pow.f64 t 3) (+.f64 1/2 (+.f64 (*.f64 t t) (pow.f64 t 4))))","(fma.f64 (pow.f64 t 3) -2 (+.f64 1/2 (fma.f64 t t (pow.f64 t 4))))","(+.f64 (pow.f64 t 4) (fma.f64 (pow.f64 t 3) -2 (fma.f64 t t 1/2)))","(fma.f64 (*.f64 t t) (fma.f64 t -2 (fma.f64 t t 1)) 1/2)","5/6","(-.f64 5/6 (*.f64 2/9 (/.f64 1 t)))","(-.f64 5/6 (/.f64 2/9 t))","(+.f64 5/6 (/.f64 -2/9 t))","(-.f64 (+.f64 (*.f64 1/27 (/.f64 1 (pow.f64 t 2))) 5/6) (*.f64 2/9 (/.f64 1 t)))","(+.f64 (/.f64 1/27 (*.f64 t t)) (-.f64 5/6 (/.f64 2/9 t)))","(+.f64 5/6 (+.f64 (/.f64 1/27 (*.f64 t t)) (/.f64 -2/9 t)))","(+.f64 (+.f64 5/6 (/.f64 -2/9 t)) (/.f64 1/27 (*.f64 t t)))","(-.f64 (+.f64 (*.f64 1/27 (/.f64 1 (pow.f64 t 2))) (+.f64 5/6 (*.f64 4/81 (/.f64 1 (pow.f64 t 3))))) (*.f64 2/9 (/.f64 1 t)))","(+.f64 (/.f64 1/27 (*.f64 t t)) (-.f64 (+.f64 5/6 (/.f64 4/81 (pow.f64 t 3))) (/.f64 2/9 t)))","(+.f64 (/.f64 1/27 (*.f64 t t)) (+.f64 5/6 (-.f64 (/.f64 4/81 (pow.f64 t 3)) (/.f64 2/9 t))))","(+.f64 5/6 (-.f64 (+.f64 (/.f64 1/27 (*.f64 t t)) (/.f64 4/81 (pow.f64 t 3))) (/.f64 2/9 t)))","(+.f64 5/6 (+.f64 (/.f64 1/27 (*.f64 t t)) (+.f64 (/.f64 4/81 (pow.f64 t 3)) (/.f64 -2/9 t))))","(+.f64 (+.f64 (+.f64 5/6 (/.f64 -2/9 t)) (/.f64 1/27 (*.f64 t t))) (/.f64 4/81 (pow.f64 t 3)))","5/6","(-.f64 5/6 (*.f64 2/9 (/.f64 1 t)))","(-.f64 5/6 (/.f64 2/9 t))","(+.f64 5/6 (/.f64 -2/9 t))","(-.f64 (+.f64 (*.f64 1/27 (/.f64 1 (pow.f64 t 2))) 5/6) (*.f64 2/9 (/.f64 1 t)))","(+.f64 (/.f64 1/27 (*.f64 t t)) (-.f64 5/6 (/.f64 2/9 t)))","(+.f64 5/6 (+.f64 (/.f64 1/27 (*.f64 t t)) (/.f64 -2/9 t)))","(+.f64 (+.f64 5/6 (/.f64 -2/9 t)) (/.f64 1/27 (*.f64 t t)))","(-.f64 (+.f64 (*.f64 1/27 (/.f64 1 (pow.f64 t 2))) (+.f64 5/6 (*.f64 4/81 (/.f64 1 (pow.f64 t 3))))) (*.f64 2/9 (/.f64 1 t)))","(+.f64 (/.f64 1/27 (*.f64 t t)) (-.f64 (+.f64 5/6 (/.f64 4/81 (pow.f64 t 3))) (/.f64 2/9 t)))","(+.f64 (/.f64 1/27 (*.f64 t t)) (+.f64 5/6 (-.f64 (/.f64 4/81 (pow.f64 t 3)) (/.f64 2/9 t))))","(+.f64 5/6 (-.f64 (+.f64 (/.f64 1/27 (*.f64 t t)) (/.f64 4/81 (pow.f64 t 3))) (/.f64 2/9 t)))","(+.f64 5/6 (+.f64 (/.f64 1/27 (*.f64 t t)) (+.f64 (/.f64 4/81 (pow.f64 t 3)) (/.f64 -2/9 t))))","(+.f64 (+.f64 (+.f64 5/6 (/.f64 -2/9 t)) (/.f64 1/27 (*.f64 t t))) (/.f64 4/81 (pow.f64 t 3)))"]],"stop":[["node limit",1]],"time":41.365966796875,"type":"simplify"},{"compiler":[[4001,3115]],"time":54.652099609375,"type":"eval"},{"alts":[["(cbrt.f64 (/.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) 3) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2) 3)))","next",0.00390625],["(/.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2))","done",0.00390625]],"compiler":[[31,25],[26,20],[31,25]],"count":[[133,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[132,1],"picked":[1,1]}],"min-error":[0],"time":35.512939453125,"type":"prune"},{"compiler":[[139,108]],"locations":[["(+.f64 (/.f64 1 t) (+.f64 t 2))",0.0078125,true],["(pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2) 3)",0.01171875,true],["(pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) 3)",0.021816259768442016,true],["(/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2)))",0.1015625,true]],"time":33.961181640625,"type":"localize"},{"count":[[4,48]],"series":[["(+.f64 (/.f64 1 t) (+.f64 t 2))","t","-inf",0.166015625],["(+.f64 (/.f64 1 t) (+.f64 t 2))","t","inf",0.14013671875],["(+.f64 (/.f64 1 t) (+.f64 t 2))","t","0",0.2099609375],["(pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2) 3)","t","-inf",0.2900390625],["(pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2) 3)","t","inf",0.286865234375],["(pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2) 3)","t","0",0.260986328125],["(pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) 3)","t","-inf",0.2080078125],["(pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) 3)","t","inf",0.27783203125],["(pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) 3)","t","0",0.422119140625],["(/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2)))","t","-inf",0.2080078125],["(/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2)))","t","inf",0.177978515625],["(/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2)))","t","0",0.218017578125]],"time":3.0419921875,"type":"series"},{"count":[[4,152]],"egraph":[[2,4025,63,0.034393251],[1,321,63,0.0063282090000000004],[0,14,63,0.000505292]],"inputs":[["(/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2)))","(pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) 3)","(pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2) 3)","(+.f64 (/.f64 1 t) (+.f64 t 2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))))) (cbrt.f64 (exp.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))))))) (log.f64 (cbrt.f64 (exp.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t))))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t))))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 4 (/.f64 1 (+.f64 t (+.f64 2 (/.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t))))) (pow.f64 (cbrt.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t))))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t))))) 2) (cbrt.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (hypot.f64 (pow.f64 t -1/2) (sqrt.f64 (+.f64 t 2)))) (/.f64 2 (hypot.f64 (pow.f64 t -1/2) (sqrt.f64 (+.f64 t 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -4 (/.f64 1 (+.f64 (neg.f64 (+.f64 t (/.f64 1 t))) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 t (+.f64 2 (/.f64 1 t)))) 4)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 4 (+.f64 (pow.f64 t -3) (pow.f64 (+.f64 t 2) 3))) (fma.f64 (+.f64 t 2) (-.f64 (+.f64 t 2) (/.f64 1 t)) (pow.f64 t -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 4 (-.f64 (pow.f64 t -2) (pow.f64 (+.f64 t 2) 2))) (-.f64 (/.f64 1 t) (+.f64 t 2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 2 (hypot.f64 (pow.f64 t -1/2) (sqrt.f64 (+.f64 t 2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (+.f64 t (+.f64 2 (/.f64 1 t))) 1/4) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (/.f64 16 (pow.f64 (+.f64 t (+.f64 2 (/.f64 1 t))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 t 4) (+.f64 t (+.f64 2 (/.f64 1 t)))) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 2)) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 2) (/.f64 (*.f64 t 4) (+.f64 t (+.f64 2 (/.f64 1 t))))) (*.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 3))) (cbrt.f64 (exp.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 3))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 3)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 2) (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1)) 2) (*.f64 (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1)) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1)) (*.f64 (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1)) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 3/2) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1)) 2) 3) (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1)) 3) (pow.f64 (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 2) 1) (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 2) (pow.f64 (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1)) 2)) (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 2) (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1))) (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 6))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 3 (log1p.f64 (/.f64 (*.f64 t 4) (+.f64 t (+.f64 2 (/.f64 1 t)))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log1p.f64 (/.f64 (*.f64 t 4) (+.f64 t (+.f64 2 (/.f64 1 t)))))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 2) (/.f64 (*.f64 t 4) (+.f64 t (+.f64 2 (/.f64 1 t)))) (*.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 t 4) (+.f64 t (+.f64 2 (/.f64 1 t)))) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 2) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) 2))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (*.f64 t 4) (+.f64 t (+.f64 2 (/.f64 1 t)))) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 2)) (*.f64 2 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 2) (/.f64 (*.f64 t 4) (+.f64 t (+.f64 2 (/.f64 1 t))))) (*.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 3))) (cbrt.f64 (exp.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 3))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 3)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 2) (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2)) 2) (*.f64 (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2)) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2)) (*.f64 (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2)) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 3/2) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2)) 2) 3) (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2)) 3) (pow.f64 (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 2) 1) (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 2) (pow.f64 (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2)) 2)) (cbrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 2) (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2))) (sqrt.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 6))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 3 (log.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 2) (/.f64 (*.f64 t 4) (+.f64 t (+.f64 2 (/.f64 1 t)))) (*.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (*.f64 t 4) (+.f64 t (+.f64 2 (/.f64 1 t)))) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 2) (*.f64 2 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) 2)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (+.f64 t (+.f64 2 (/.f64 1 t))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 t -2) (-.f64 (/.f64 1 t) (+.f64 t 2))) (/.f64 (pow.f64 (+.f64 t 2) 2) (-.f64 (/.f64 1 t) (+.f64 t 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 t (+.f64 2 (/.f64 1 t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 t (+.f64 2 (/.f64 1 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 t (+.f64 2 (/.f64 1 t)))) (pow.f64 (cbrt.f64 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2) (cbrt.f64 (+.f64 t (+.f64 2 (/.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (hypot.f64 (pow.f64 t -1/2) (sqrt.f64 (+.f64 t 2))) (hypot.f64 (pow.f64 t -1/2) (sqrt.f64 (+.f64 t 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 t -3) (pow.f64 (+.f64 t 2) 3)) (/.f64 1 (fma.f64 (+.f64 t 2) (-.f64 (+.f64 t 2) (/.f64 1 t)) (pow.f64 t -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 t -2) (pow.f64 (+.f64 t 2) 2)) (/.f64 1 (-.f64 (/.f64 1 t) (+.f64 t 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (+.f64 t 2) (-.f64 (+.f64 t 2) (/.f64 1 t)) (pow.f64 t -2)) (+.f64 (pow.f64 t -3) (pow.f64 (+.f64 t 2) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (/.f64 1 t) (+.f64 t 2)) (-.f64 (pow.f64 t -2) (pow.f64 (+.f64 t 2) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 t -3) (pow.f64 (+.f64 t 2) 3)) (fma.f64 (+.f64 t 2) (-.f64 (+.f64 t 2) (/.f64 1 t)) (pow.f64 t -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 t -3) (pow.f64 (+.f64 t 2) 3)) (+.f64 (pow.f64 (+.f64 t 2) 2) (-.f64 (pow.f64 t -2) (/.f64 (+.f64 t 2) t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 t -2) (pow.f64 (+.f64 t 2) 2)) (-.f64 (/.f64 1 t) (+.f64 t 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 t -3) (pow.f64 (+.f64 t 2) 3))) (neg.f64 (fma.f64 (+.f64 t 2) (-.f64 (+.f64 t 2) (/.f64 1 t)) (pow.f64 t -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 t -2) (pow.f64 (+.f64 t 2) 2))) (neg.f64 (-.f64 (/.f64 1 t) (+.f64 t 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (-.f64 (fma.f64 t t 4) (*.f64 t 2)) (*.f64 t (+.f64 8 (pow.f64 t 3)))) (*.f64 t (-.f64 (fma.f64 t t 4) (*.f64 t 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (-.f64 (fma.f64 t t 4) (*.f64 t 2)) (*.f64 (neg.f64 t) (+.f64 8 (pow.f64 t 3)))) (*.f64 (neg.f64 t) (-.f64 (fma.f64 t t 4) (*.f64 t 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (+.f64 t -2) (*.f64 t (fma.f64 t t -4))) (*.f64 t (+.f64 t -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1 (+.f64 t -2) (*.f64 (neg.f64 t) (fma.f64 t t -4))) (*.f64 (neg.f64 t) (+.f64 t -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 8 (pow.f64 t 3)) t (*.f64 (-.f64 (fma.f64 t t 4) (*.f64 t 2)) 1)) (*.f64 (-.f64 (fma.f64 t t 4) (*.f64 t 2)) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 t t -4) t (*.f64 (+.f64 t -2) 1)) (*.f64 (+.f64 t -2) t))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 8 (pow.f64 t 3)) (neg.f64 t) (*.f64 (-.f64 (fma.f64 t t 4) (*.f64 t 2)) -1)) (*.f64 (-.f64 (fma.f64 t t 4) (*.f64 t 2)) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (fma.f64 t t -4) (neg.f64 t) (*.f64 (+.f64 t -2) -1)) (*.f64 (+.f64 t -2) (neg.f64 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (+.f64 t (/.f64 1 t)) 3) 8) (fma.f64 (+.f64 t (/.f64 1 t)) (+.f64 t (/.f64 1 t)) (-.f64 4 (*.f64 (+.f64 t (/.f64 1 t)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (+.f64 t 2) 2) (pow.f64 t -2)) (-.f64 (+.f64 t 2) (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (+.f64 t (/.f64 1 t)) (+.f64 t (/.f64 1 t)) -4) (-.f64 (+.f64 t (/.f64 1 t)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 t (+.f64 2 (/.f64 1 t))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 t (+.f64 2 (/.f64 1 t))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 t (+.f64 2 (/.f64 1 t)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (hypot.f64 (pow.f64 t -1/2) (sqrt.f64 (+.f64 t 2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 t (+.f64 2 (/.f64 1 t))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 t (+.f64 2 (/.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 t (+.f64 2 (/.f64 1 t))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1 t))) (exp.f64 (+.f64 t 2))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 1 t)) (+.f64 1 (expm1.f64 (+.f64 t 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 1 t))) (+.f64 1 (expm1.f64 (+.f64 t 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (+.f64 t 2))) (exp.f64 (/.f64 1 t))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (+.f64 t 2)) (+.f64 1 (expm1.f64 (/.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (+.f64 t 2))) (+.f64 1 (expm1.f64 (/.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 t (+.f64 2 (/.f64 1 t))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 t (+.f64 2 (/.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 t (+.f64 2 (/.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 t (+.f64 2 (/.f64 1 t)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 t (+.f64 2 (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1 t) (+.f64 t 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 t 2) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 t (/.f64 1 t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t 1 (+.f64 2 (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 t) 1 (+.f64 t 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 t 2) 1 (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 t)) (cbrt.f64 (pow.f64 t -2)) (+.f64 t 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 t -2)) (/.f64 1 (cbrt.f64 t)) (+.f64 t 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 t 2)) (pow.f64 (cbrt.f64 (+.f64 t 2)) 2) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 t 2)) 2) (cbrt.f64 (+.f64 t 2)) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 t) (pow.f64 (cbrt.f64 t) 2) (+.f64 2 (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 t) 2) (cbrt.f64 t) (+.f64 2 (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 t -1/2) (pow.f64 t -1/2) (+.f64 t 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 t 2)) (sqrt.f64 (+.f64 t 2)) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 t) (sqrt.f64 t) (+.f64 2 (/.f64 1 t)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 1 (neg.f64 t)) (+.f64 t 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 8 (pow.f64 t 3)) (/.f64 1 (-.f64 (fma.f64 t t 4) (*.f64 t 2))) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 t t -4) (/.f64 1 (+.f64 t -2)) (/.f64 1 t))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 t (/.f64 1 t)) 1 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (+.f64 t (/.f64 1 t))) (cbrt.f64 (+.f64 t (/.f64 1 t)))) (cbrt.f64 (+.f64 t (/.f64 1 t))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 (pow.f64 t -1/2) (sqrt.f64 t)) (hypot.f64 (pow.f64 t -1/2) (sqrt.f64 t)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (pow.f64 (cbrt.f64 t) 2) -1) (pow.f64 (cbrt.f64 t) -1) (+.f64 t 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (sqrt.f64 t) -1) (pow.f64 (sqrt.f64 t) -1) (+.f64 t 2))))))"]],"rules":[["egg-rr",69],["egg-rr",28],["egg-rr",28],["egg-rr",27]],"stop":[["node limit",1]],"time":71.298828125,"type":"rewrite"},{"count":[[200,201]],"egraph":[[4,4983,562,0.029858000000000003],[3,1830,562,0.014136333000000001],[2,630,565,0.0046561250000000005],[1,240,573,0.0015586250000000001],[0,86,579,0.000442625]],"inputs":[["(*.f64 4 t)","(+.f64 (*.f64 -8 (pow.f64 t 2)) (*.f64 4 t))","(+.f64 (*.f64 12 (pow.f64 t 3)) (+.f64 (*.f64 -8 (pow.f64 t 2)) (*.f64 4 t)))","(+.f64 (*.f64 12 (pow.f64 t 3)) (+.f64 (*.f64 -16 (pow.f64 t 4)) (+.f64 (*.f64 -8 (pow.f64 t 2)) (*.f64 4 t))))","(/.f64 4 t)","(-.f64 (*.f64 4 (/.f64 1 t)) (*.f64 8 (/.f64 1 (pow.f64 t 2))))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 t 3))) (*.f64 4 (/.f64 1 t))) (*.f64 8 (/.f64 1 (pow.f64 t 2))))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 t 3))) (*.f64 4 (/.f64 1 t))) (+.f64 (*.f64 16 (/.f64 1 (pow.f64 t 4))) (*.f64 8 (/.f64 1 (pow.f64 t 2)))))","(/.f64 4 t)","(-.f64 (*.f64 4 (/.f64 1 t)) (*.f64 8 (/.f64 1 (pow.f64 t 2))))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 t 3))) (*.f64 4 (/.f64 1 t))) (*.f64 8 (/.f64 1 (pow.f64 t 2))))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 t 3))) (*.f64 4 (/.f64 1 t))) (+.f64 (*.f64 16 (/.f64 1 (pow.f64 t 4))) (*.f64 8 (/.f64 1 (pow.f64 t 2)))))","1","(+.f64 1 (*.f64 12 (pow.f64 t 2)))","(+.f64 (*.f64 -24 (pow.f64 t 3)) (+.f64 1 (*.f64 12 (pow.f64 t 2))))","(+.f64 (*.f64 -24 (pow.f64 t 3)) (+.f64 1 (+.f64 (*.f64 12 (pow.f64 t 2)) (*.f64 84 (pow.f64 t 4)))))","125","(-.f64 125 (*.f64 600 (/.f64 1 t)))","(-.f64 (+.f64 125 (*.f64 1860 (/.f64 1 (pow.f64 t 2)))) (*.f64 600 (/.f64 1 t)))","(-.f64 (+.f64 125 (*.f64 1860 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 4592 (/.f64 1 (pow.f64 t 3))) (*.f64 600 (/.f64 1 t))))","125","(-.f64 125 (*.f64 600 (/.f64 1 t)))","(-.f64 (+.f64 125 (*.f64 1860 (/.f64 1 (pow.f64 t 2)))) (*.f64 600 (/.f64 1 t)))","(-.f64 (+.f64 125 (*.f64 1860 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 4592 (/.f64 1 (pow.f64 t 3))) (*.f64 600 (/.f64 1 t))))","8","(+.f64 8 (*.f64 48 (pow.f64 t 2)))","(+.f64 8 (+.f64 (*.f64 48 (pow.f64 t 2)) (*.f64 -96 (pow.f64 t 3))))","(+.f64 8 (+.f64 (*.f64 48 (pow.f64 t 2)) (+.f64 (*.f64 240 (pow.f64 t 4)) (*.f64 -96 (pow.f64 t 3)))))","216","(-.f64 216 (*.f64 864 (/.f64 1 t)))","(-.f64 (+.f64 216 (*.f64 2448 (/.f64 1 (pow.f64 t 2)))) (*.f64 864 (/.f64 1 t)))","(-.f64 (+.f64 216 (*.f64 2448 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 864 (/.f64 1 t)) (*.f64 5696 (/.f64 1 (pow.f64 t 3)))))","216","(-.f64 216 (*.f64 864 (/.f64 1 t)))","(-.f64 (+.f64 216 (*.f64 2448 (/.f64 1 (pow.f64 t 2)))) (*.f64 864 (/.f64 1 t)))","(-.f64 (+.f64 216 (*.f64 2448 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 864 (/.f64 1 t)) (*.f64 5696 (/.f64 1 (pow.f64 t 3)))))","(/.f64 1 t)","(+.f64 2 (/.f64 1 t))","(+.f64 2 (+.f64 t (/.f64 1 t)))","(+.f64 2 (+.f64 t (/.f64 1 t)))","t","(+.f64 2 t)","(+.f64 2 (+.f64 t (/.f64 1 t)))","(+.f64 2 (+.f64 t (/.f64 1 t)))","t","(+.f64 2 t)","(+.f64 2 (+.f64 t (/.f64 1 t)))","(+.f64 2 (+.f64 t (/.f64 1 t)))"]],"method":["egg-herbie"],"outputs":[["(*.f64 4 t)","(+.f64 (*.f64 -8 (pow.f64 t 2)) (*.f64 4 t))","(fma.f64 -8 (*.f64 t t) (*.f64 4 t))","(fma.f64 4 t (*.f64 -8 (*.f64 t t)))","(*.f64 t (+.f64 4 (*.f64 t -8)))","(+.f64 (*.f64 12 (pow.f64 t 3)) (+.f64 (*.f64 -8 (pow.f64 t 2)) (*.f64 4 t)))","(fma.f64 12 (pow.f64 t 3) (fma.f64 -8 (*.f64 t t) (*.f64 4 t)))","(fma.f64 12 (pow.f64 t 3) (fma.f64 4 t (*.f64 -8 (*.f64 t t))))","(fma.f64 12 (pow.f64 t 3) (*.f64 t (+.f64 4 (*.f64 t -8))))","(*.f64 t (+.f64 (*.f64 t (+.f64 -8 (*.f64 t 12))) 4))","(+.f64 (*.f64 12 (pow.f64 t 3)) (+.f64 (*.f64 -16 (pow.f64 t 4)) (+.f64 (*.f64 -8 (pow.f64 t 2)) (*.f64 4 t))))","(fma.f64 12 (pow.f64 t 3) (fma.f64 -16 (pow.f64 t 4) (fma.f64 -8 (*.f64 t t) (*.f64 4 t))))","(fma.f64 12 (pow.f64 t 3) (fma.f64 -16 (pow.f64 t 4) (fma.f64 4 t (*.f64 -8 (*.f64 t t)))))","(fma.f64 -16 (pow.f64 t 4) (fma.f64 12 (pow.f64 t 3) (*.f64 t (+.f64 4 (*.f64 t -8)))))","(fma.f64 -16 (pow.f64 t 4) (*.f64 t (+.f64 (*.f64 t (+.f64 -8 (*.f64 t 12))) 4)))","(/.f64 4 t)","(-.f64 (*.f64 4 (/.f64 1 t)) (*.f64 8 (/.f64 1 (pow.f64 t 2))))","(-.f64 (/.f64 4 t) (/.f64 8 (*.f64 t t)))","(+.f64 (/.f64 4 t) (/.f64 -8 (*.f64 t t)))","(+.f64 (/.f64 4 t) (/.f64 (/.f64 -8 t) t))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 t 3))) (*.f64 4 (/.f64 1 t))) (*.f64 8 (/.f64 1 (pow.f64 t 2))))","(+.f64 (/.f64 12 (pow.f64 t 3)) (-.f64 (/.f64 4 t) (/.f64 8 (*.f64 t t))))","(+.f64 (/.f64 4 t) (-.f64 (/.f64 12 (pow.f64 t 3)) (/.f64 8 (*.f64 t t))))","(+.f64 (+.f64 (/.f64 4 t) (/.f64 -8 (*.f64 t t))) (/.f64 12 (pow.f64 t 3)))","(+.f64 (+.f64 (/.f64 4 t) (/.f64 (/.f64 -8 t) t)) (/.f64 12 (pow.f64 t 3)))","(-.f64 (/.f64 4 t) (+.f64 (/.f64 8 (*.f64 t t)) (/.f64 -12 (pow.f64 t 3))))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 t 3))) (*.f64 4 (/.f64 1 t))) (+.f64 (*.f64 16 (/.f64 1 (pow.f64 t 4))) (*.f64 8 (/.f64 1 (pow.f64 t 2)))))","(+.f64 (/.f64 12 (pow.f64 t 3)) (-.f64 (/.f64 4 t) (+.f64 (/.f64 8 (*.f64 t t)) (/.f64 16 (pow.f64 t 4)))))","(+.f64 (/.f64 12 (pow.f64 t 3)) (-.f64 (+.f64 (/.f64 4 t) (/.f64 -8 (*.f64 t t))) (/.f64 16 (pow.f64 t 4))))","(+.f64 (/.f64 4 t) (+.f64 (/.f64 12 (pow.f64 t 3)) (+.f64 (/.f64 -8 (*.f64 t t)) (/.f64 -16 (pow.f64 t 4)))))","(+.f64 (/.f64 12 (pow.f64 t 3)) (+.f64 (+.f64 (/.f64 4 t) (/.f64 (/.f64 -8 t) t)) (/.f64 -16 (pow.f64 t 4))))","(+.f64 (/.f64 4 t) (+.f64 (/.f64 12 (pow.f64 t 3)) (+.f64 (/.f64 (/.f64 -8 t) t) (/.f64 -16 (pow.f64 t 4)))))","(/.f64 4 t)","(-.f64 (*.f64 4 (/.f64 1 t)) (*.f64 8 (/.f64 1 (pow.f64 t 2))))","(-.f64 (/.f64 4 t) (/.f64 8 (*.f64 t t)))","(+.f64 (/.f64 4 t) (/.f64 -8 (*.f64 t t)))","(+.f64 (/.f64 4 t) (/.f64 (/.f64 -8 t) t))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 t 3))) (*.f64 4 (/.f64 1 t))) (*.f64 8 (/.f64 1 (pow.f64 t 2))))","(+.f64 (/.f64 12 (pow.f64 t 3)) (-.f64 (/.f64 4 t) (/.f64 8 (*.f64 t t))))","(+.f64 (/.f64 4 t) (-.f64 (/.f64 12 (pow.f64 t 3)) (/.f64 8 (*.f64 t t))))","(+.f64 (+.f64 (/.f64 4 t) (/.f64 -8 (*.f64 t t))) (/.f64 12 (pow.f64 t 3)))","(+.f64 (+.f64 (/.f64 4 t) (/.f64 (/.f64 -8 t) t)) (/.f64 12 (pow.f64 t 3)))","(-.f64 (/.f64 4 t) (+.f64 (/.f64 8 (*.f64 t t)) (/.f64 -12 (pow.f64 t 3))))","(-.f64 (+.f64 (*.f64 12 (/.f64 1 (pow.f64 t 3))) (*.f64 4 (/.f64 1 t))) (+.f64 (*.f64 16 (/.f64 1 (pow.f64 t 4))) (*.f64 8 (/.f64 1 (pow.f64 t 2)))))","(+.f64 (/.f64 12 (pow.f64 t 3)) (-.f64 (/.f64 4 t) (+.f64 (/.f64 8 (*.f64 t t)) (/.f64 16 (pow.f64 t 4)))))","(+.f64 (/.f64 12 (pow.f64 t 3)) (-.f64 (+.f64 (/.f64 4 t) (/.f64 -8 (*.f64 t t))) (/.f64 16 (pow.f64 t 4))))","(+.f64 (/.f64 4 t) (+.f64 (/.f64 12 (pow.f64 t 3)) (+.f64 (/.f64 -8 (*.f64 t t)) (/.f64 -16 (pow.f64 t 4)))))","(+.f64 (/.f64 12 (pow.f64 t 3)) (+.f64 (+.f64 (/.f64 4 t) (/.f64 (/.f64 -8 t) t)) (/.f64 -16 (pow.f64 t 4))))","(+.f64 (/.f64 4 t) (+.f64 (/.f64 12 (pow.f64 t 3)) (+.f64 (/.f64 (/.f64 -8 t) t) (/.f64 -16 (pow.f64 t 4)))))","1","(+.f64 1 (*.f64 12 (pow.f64 t 2)))","(+.f64 1 (*.f64 (*.f64 t t) 12))","(fma.f64 (*.f64 t t) 12 1)","(fma.f64 t (*.f64 t 12) 1)","(+.f64 (*.f64 -24 (pow.f64 t 3)) (+.f64 1 (*.f64 12 (pow.f64 t 2))))","(fma.f64 -24 (pow.f64 t 3) (+.f64 1 (*.f64 (*.f64 t t) 12)))","(fma.f64 (pow.f64 t 3) -24 (fma.f64 (*.f64 t t) 12 1))","(fma.f64 t (*.f64 t 12) (fma.f64 (pow.f64 t 3) -24 1))","(+.f64 (*.f64 -24 (pow.f64 t 3)) (+.f64 1 (+.f64 (*.f64 12 (pow.f64 t 2)) (*.f64 84 (pow.f64 t 4)))))","(fma.f64 -24 (pow.f64 t 3) (+.f64 1 (fma.f64 12 (*.f64 t t) (*.f64 (pow.f64 t 4) 84))))","(fma.f64 (pow.f64 t 3) -24 (+.f64 1 (fma.f64 (pow.f64 t 4) 84 (*.f64 t (*.f64 t 12)))))","(fma.f64 (pow.f64 t 3) -24 (fma.f64 t (*.f64 t 12) (fma.f64 (pow.f64 t 4) 84 1)))","(+.f64 1 (*.f64 (*.f64 t t) (+.f64 12 (*.f64 t (+.f64 (*.f64 t 84) -24)))))","125","(-.f64 125 (*.f64 600 (/.f64 1 t)))","(-.f64 125 (/.f64 600 t))","(+.f64 125 (/.f64 -600 t))","(-.f64 (+.f64 125 (*.f64 1860 (/.f64 1 (pow.f64 t 2)))) (*.f64 600 (/.f64 1 t)))","(+.f64 125 (-.f64 (/.f64 1860 (*.f64 t t)) (/.f64 600 t)))","(+.f64 (/.f64 1860 (*.f64 t t)) (+.f64 125 (/.f64 -600 t)))","(+.f64 125 (+.f64 (/.f64 1860 (*.f64 t t)) (/.f64 -600 t)))","(+.f64 (+.f64 125 (/.f64 -600 t)) (/.f64 1860 (*.f64 t t)))","(-.f64 (+.f64 125 (*.f64 1860 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 4592 (/.f64 1 (pow.f64 t 3))) (*.f64 600 (/.f64 1 t))))","(-.f64 (-.f64 (+.f64 125 (/.f64 1860 (*.f64 t t))) (/.f64 4592 (pow.f64 t 3))) (/.f64 600 t))","(+.f64 125 (-.f64 (+.f64 (/.f64 1860 (*.f64 t t)) (/.f64 -600 t)) (/.f64 4592 (pow.f64 t 3))))","(+.f64 (+.f64 (/.f64 1860 (*.f64 t t)) (/.f64 -600 t)) (-.f64 125 (/.f64 4592 (pow.f64 t 3))))","(+.f64 (+.f64 125 (/.f64 -600 t)) (-.f64 (/.f64 1860 (*.f64 t t)) (/.f64 4592 (pow.f64 t 3))))","(+.f64 125 (+.f64 (/.f64 1860 (*.f64 t t)) (-.f64 (/.f64 -600 t) (/.f64 4592 (pow.f64 t 3)))))","125","(-.f64 125 (*.f64 600 (/.f64 1 t)))","(-.f64 125 (/.f64 600 t))","(+.f64 125 (/.f64 -600 t))","(-.f64 (+.f64 125 (*.f64 1860 (/.f64 1 (pow.f64 t 2)))) (*.f64 600 (/.f64 1 t)))","(+.f64 125 (-.f64 (/.f64 1860 (*.f64 t t)) (/.f64 600 t)))","(+.f64 (/.f64 1860 (*.f64 t t)) (+.f64 125 (/.f64 -600 t)))","(+.f64 125 (+.f64 (/.f64 1860 (*.f64 t t)) (/.f64 -600 t)))","(+.f64 (+.f64 125 (/.f64 -600 t)) (/.f64 1860 (*.f64 t t)))","(-.f64 (+.f64 125 (*.f64 1860 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 4592 (/.f64 1 (pow.f64 t 3))) (*.f64 600 (/.f64 1 t))))","(-.f64 (-.f64 (+.f64 125 (/.f64 1860 (*.f64 t t))) (/.f64 4592 (pow.f64 t 3))) (/.f64 600 t))","(+.f64 125 (-.f64 (+.f64 (/.f64 1860 (*.f64 t t)) (/.f64 -600 t)) (/.f64 4592 (pow.f64 t 3))))","(+.f64 (+.f64 (/.f64 1860 (*.f64 t t)) (/.f64 -600 t)) (-.f64 125 (/.f64 4592 (pow.f64 t 3))))","(+.f64 (+.f64 125 (/.f64 -600 t)) (-.f64 (/.f64 1860 (*.f64 t t)) (/.f64 4592 (pow.f64 t 3))))","(+.f64 125 (+.f64 (/.f64 1860 (*.f64 t t)) (-.f64 (/.f64 -600 t) (/.f64 4592 (pow.f64 t 3)))))","8","(+.f64 8 (*.f64 48 (pow.f64 t 2)))","(+.f64 8 (*.f64 (*.f64 t t) 48))","(fma.f64 (*.f64 t t) 48 8)","(fma.f64 t (*.f64 t 48) 8)","(+.f64 8 (+.f64 (*.f64 48 (pow.f64 t 2)) (*.f64 -96 (pow.f64 t 3))))","(+.f64 8 (fma.f64 48 (*.f64 t t) (*.f64 (pow.f64 t 3) -96)))","(+.f64 8 (fma.f64 (pow.f64 t 3) -96 (*.f64 (*.f64 t t) 48)))","(fma.f64 t (*.f64 t 48) (fma.f64 (pow.f64 t 3) -96 8))","(fma.f64 (pow.f64 t 3) -96 (fma.f64 (*.f64 t t) 48 8))","(+.f64 8 (+.f64 (*.f64 48 (pow.f64 t 2)) (+.f64 (*.f64 240 (pow.f64 t 4)) (*.f64 -96 (pow.f64 t 3)))))","(+.f64 8 (fma.f64 48 (*.f64 t t) (fma.f64 240 (pow.f64 t 4) (*.f64 (pow.f64 t 3) -96))))","(+.f64 8 (fma.f64 (*.f64 t t) 48 (fma.f64 (pow.f64 t 3) -96 (*.f64 (pow.f64 t 4) 240))))","(+.f64 8 (fma.f64 (pow.f64 t 4) 240 (*.f64 (*.f64 t t) (+.f64 48 (*.f64 t -96)))))","(+.f64 8 (*.f64 (*.f64 t t) (+.f64 48 (*.f64 t (+.f64 -96 (*.f64 t 240))))))","216","(-.f64 216 (*.f64 864 (/.f64 1 t)))","(-.f64 216 (/.f64 864 t))","(+.f64 216 (/.f64 -864 t))","(-.f64 (+.f64 216 (*.f64 2448 (/.f64 1 (pow.f64 t 2)))) (*.f64 864 (/.f64 1 t)))","(+.f64 216 (-.f64 (/.f64 2448 (*.f64 t t)) (/.f64 864 t)))","(+.f64 216 (+.f64 (/.f64 2448 (*.f64 t t)) (/.f64 -864 t)))","(+.f64 (+.f64 216 (/.f64 -864 t)) (/.f64 2448 (*.f64 t t)))","(-.f64 (+.f64 216 (*.f64 2448 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 864 (/.f64 1 t)) (*.f64 5696 (/.f64 1 (pow.f64 t 3)))))","(-.f64 (+.f64 216 (-.f64 (/.f64 2448 (*.f64 t t)) (/.f64 864 t))) (/.f64 5696 (pow.f64 t 3)))","(-.f64 (+.f64 216 (/.f64 2448 (*.f64 t t))) (+.f64 (/.f64 864 t) (/.f64 5696 (pow.f64 t 3))))","(+.f64 216 (+.f64 (/.f64 2448 (*.f64 t t)) (+.f64 (/.f64 -864 t) (/.f64 -5696 (pow.f64 t 3)))))","(+.f64 (+.f64 216 (/.f64 2448 (*.f64 t t))) (+.f64 (/.f64 -864 t) (/.f64 -5696 (pow.f64 t 3))))","216","(-.f64 216 (*.f64 864 (/.f64 1 t)))","(-.f64 216 (/.f64 864 t))","(+.f64 216 (/.f64 -864 t))","(-.f64 (+.f64 216 (*.f64 2448 (/.f64 1 (pow.f64 t 2)))) (*.f64 864 (/.f64 1 t)))","(+.f64 216 (-.f64 (/.f64 2448 (*.f64 t t)) (/.f64 864 t)))","(+.f64 216 (+.f64 (/.f64 2448 (*.f64 t t)) (/.f64 -864 t)))","(+.f64 (+.f64 216 (/.f64 -864 t)) (/.f64 2448 (*.f64 t t)))","(-.f64 (+.f64 216 (*.f64 2448 (/.f64 1 (pow.f64 t 2)))) (+.f64 (*.f64 864 (/.f64 1 t)) (*.f64 5696 (/.f64 1 (pow.f64 t 3)))))","(-.f64 (+.f64 216 (-.f64 (/.f64 2448 (*.f64 t t)) (/.f64 864 t))) (/.f64 5696 (pow.f64 t 3)))","(-.f64 (+.f64 216 (/.f64 2448 (*.f64 t t))) (+.f64 (/.f64 864 t) (/.f64 5696 (pow.f64 t 3))))","(+.f64 216 (+.f64 (/.f64 2448 (*.f64 t t)) (+.f64 (/.f64 -864 t) (/.f64 -5696 (pow.f64 t 3)))))","(+.f64 (+.f64 216 (/.f64 2448 (*.f64 t t))) (+.f64 (/.f64 -864 t) (/.f64 -5696 (pow.f64 t 3))))","(/.f64 1 t)","(+.f64 2 (/.f64 1 t))","(+.f64 2 (+.f64 t (/.f64 1 t)))","(+.f64 t (+.f64 2 (/.f64 1 t)))","(+.f64 2 (+.f64 t (/.f64 1 t)))","(+.f64 t (+.f64 2 (/.f64 1 t)))","t","(+.f64 2 t)","(+.f64 t 2)","(+.f64 2 (+.f64 t (/.f64 1 t)))","(+.f64 t (+.f64 2 (/.f64 1 t)))","(+.f64 2 (+.f64 t (/.f64 1 t)))","(+.f64 t (+.f64 2 (/.f64 1 t)))","t","(+.f64 2 t)","(+.f64 t 2)","(+.f64 2 (+.f64 t (/.f64 1 t)))","(+.f64 t (+.f64 2 (/.f64 1 t)))","(+.f64 2 (+.f64 t (/.f64 1 t)))","(+.f64 t (+.f64 2 (/.f64 1 t)))"]],"stop":[["node limit",1]],"time":52.649169921875,"type":"simplify"},{"compiler":[[11779,9412]],"time":155.35595703125,"type":"eval"},{"alts":[["(cbrt.f64 (/.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) 3) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2) 3)))","done",0.00390625],["(/.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2))","done",0.00390625]],"compiler":[[31,25],[26,20]],"count":[[320,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[318,0],"picked":[1,1]}],"min-error":[0],"time":148.411865234375,"type":"prune"},{"accuracy":[0.00390625],"baseline":[0.00390625],"branch":[["t",0.00390625,1],["(/.f64 (+.f64 1 (*.f64 (/.f64 (*.f64 2 t) (+.f64 1 t)) (/.f64 (*.f64 2 t) (+.f64 1 t)))) (+.f64 2 (*.f64 (/.f64 (*.f64 2 t) (+.f64 1 t)) (/.f64 (*.f64 2 t) (+.f64 1 t)))))",0.00390625,1],["(*.f64 (/.f64 (*.f64 2 t) (+.f64 1 t)) (/.f64 (*.f64 2 t) (+.f64 1 t)))",0.00390625,1],["(/.f64 (*.f64 2 t) (+.f64 1 t))",0.00390625,1]],"compiler":[[2,1],[36,28],[16,12],[8,6],[91,71]],"count":[[3,1]],"inputs":[["(cbrt.f64 (/.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) 3) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2) 3)))","(/.f64 (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 1) (fma.f64 t (/.f64 4 (+.f64 t (+.f64 2 (/.f64 1 t)))) 2))","(/.f64 (+.f64 1 (*.f64 (/.f64 (*.f64 2 t) (+.f64 1 t)) (/.f64 (*.f64 2 t) (+.f64 1 t)))) (+.f64 2 (*.f64 (/.f64 (*.f64 2 t) (+.f64 1 t)) (/.f64 (*.f64 2 t) (+.f64 1 t)))))"]],"link":["."],"name":["Kahan p13 Example 1"],"oracle":[0.0078125],"outputs":[["(cbrt.f64 (/.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) 3) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2) 3)))"]],"time":11.303955078125,"times":[["t",3.02099609375],["(/.f64 (+.f64 1 (*.f64 (/.f64 (*.f64 2 t) (+.f64 1 t)) (/.f64 (*.f64 2 t) (+.f64 1 t)))) (+.f64 2 (*.f64 (/.f64 (*.f64 2 t) (+.f64 1 t)) (/.f64 (*.f64 2 t) (+.f64 1 t)))))",2.196044921875],["(*.f64 (/.f64 (*.f64 2 t) (+.f64 1 t)) (/.f64 (*.f64 2 t) (+.f64 1 t)))",2.10888671875],["(/.f64 (*.f64 2 t) (+.f64 1 t))",2.194091796875]],"type":"regimes"},{"compiler":[[31,25]],"egraph":[[1,20,44,5.5542000000000005e-5],[0,16,44,3.4125e-5]],"inputs":[["(cbrt.f64 (/.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) 3) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2) 3)))"]],"method":["egg-herbie"],"outputs":[["(cbrt.f64 (/.f64 (pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 1) 3) (pow.f64 (fma.f64 t (/.f64 4 (+.f64 (/.f64 1 t) (+.f64 t 2))) 2) 3)))"]],"stop":[["done",1],["saturated",1]],"time":8.649169921875,"type":"simplify"},{"time":0.015869140625,"type":"soundness"},{"compiler":[[31,25]],"remove-preprocessing":[[]],"time":16.7880859375,"type":"end"}]