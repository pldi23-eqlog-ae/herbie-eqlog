[{"compiler":[[10,6]],"method":["search"],"sampling":[[12,0.8780481526628137,0.12097552325576544,0.0009763240814208984],[11,0.8487798809073865,0.15024379501119256,0.0009763240814208984],[10,0.7648775018751621,0.23414617404341698,0.0009763240814208984],[9,0.7102433945983648,0.28878028132021427,0.0009763240814208984],[8,0.5619508177042007,0.43707285821437836,0.0009763240814208984],[7,0.46829234808683395,0.5307313278317451,0.0009763240814208984],[6,0.18731693923473358,0.8117067366838455,0.0009763240814208984],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":28.30810546875,"type":"analyze"},{"outcomes":[["body",256,"valid",274.2509765625,8256]],"time":281.641845703125,"type":"sample"},{"compiler":[[9,5]],"egraph":[[0,2,2,1.667e-6],[15,4554,20,0.064604792],[14,4554,20,0.055839124999999996],[13,4500,20,0.048130624999999996],[12,4392,20,0.040308917],[11,4182,20,0.032186875000000004],[10,3728,20,0.024082583],[9,2487,20,0.016265],[8,701,20,0.007428458000000001],[7,288,20,0.0031155420000000002],[6,162,20,0.0017710830000000001],[5,116,20,0.001015417],[4,56,20,0.0005518330000000001],[3,34,20,0.000286875],[2,22,20,0.00015991699999999998],[1,14,20,9.2e-5],[0,9,20,4.1875e-5]],"inputs":[["0","1"],["(/.f64 (+.f64 x y) (-.f64 x y))","(/.f64 (+.f64 y x) (-.f64 y x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (+.f64 x y) (-.f64 x y))","(/.f64 (+.f64 y x) (-.f64 y x))","(/.f64 (+.f64 x y) (-.f64 y x))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":88.55419921875,"type":"preprocess"},{"count":[[1,1]],"egraph":[[17,3414,10,0.065183625],[16,3414,10,0.056483333999999996],[15,3394,10,0.048728666999999996],[14,3372,10,0.041001167],[13,3216,10,0.032968917],[12,2769,10,0.024961417],[11,1878,10,0.017103917],[10,1152,10,0.009458126],[9,445,10,0.004843876],[8,216,10,0.002428042],[7,135,10,0.0015080419999999998],[6,91,10,0.000986917],[5,54,10,0.000565792],[4,31,10,0.000314],[3,21,10,0.00019341699999999998],[2,14,10,0.000116167],[1,9,10,6.995800000000001e-5],[0,6,10,3.2625e-5]],"inputs":[["(/.f64 (+.f64 x y) (-.f64 x y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (+.f64 x y) (-.f64 x y))"]],"stop":[["saturated",1]],"time":76.52392578125,"type":"simplify"},{"compiler":[[9,5]],"time":0.195068359375,"type":"eval"},{"alts":[["(/.f64 (+.f64 x y) (-.f64 x y))","next",0.02734375]],"compiler":[[9,5],[9,5]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[0.02734375],"time":0.682861328125,"type":"prune"},{"compiler":[[17,5]],"locations":[["(/.f64 (+.f64 x y) (-.f64 x y))",0.02734375,true]],"time":3.5859375,"type":"localize"},{"count":[[1,24]],"series":[["(/.f64 (+.f64 x y) (-.f64 x y))","y","-inf",0.424072265625],["(/.f64 (+.f64 x y) (-.f64 x y))","y","inf",0.35791015625],["(/.f64 (+.f64 x y) (-.f64 x y))","y","0",0.348876953125],["(/.f64 (+.f64 x y) (-.f64 x y))","x","-inf",0.360107421875],["(/.f64 (+.f64 x y) (-.f64 x y))","x","inf",0.43798828125],["(/.f64 (+.f64 x y) (-.f64 x y))","x","0",0.45703125]],"time":2.481201171875,"type":"series"},{"count":[[1,33]],"egraph":[[2,2163,10,0.020321791999999998],[1,140,10,0.002726251],[0,6,10,0.000154334]],"inputs":[["(/.f64 (+.f64 x y) (-.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) (/.f64 1 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (*.f64 (cbrt.f64 (+.f64 x y)) (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x y)) (*.f64 (sqrt.f64 (+.f64 x y)) (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 x y)) (/.f64 1 (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 x y)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) 1) (/.f64 (cbrt.f64 (+.f64 x y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 x y)) 1) (/.f64 (sqrt.f64 (+.f64 x y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 x y)) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 (sqrt.f64 (+.f64 x y)) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 x y))) (/.f64 (+.f64 x y) (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (+.f64 x y)) (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 x y) (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (+.f64 x y) 3) (pow.f64 (-.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))))"]],"rules":[["egg-rr",33]],"stop":[["node limit",1]],"time":38.455810546875,"type":"rewrite"},{"count":[[57,56]],"egraph":[[3,4850,312,0.024183084],[2,945,312,0.008420667],[1,259,441,0.001686751],[0,77,498,0.000380334]],"inputs":[["-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","1","(+.f64 1 (*.f64 2 (/.f64 y x)))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y))) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) (pow.f64 x 2)) (pow.f64 y 3)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y)))) (+.f64 1 (/.f64 x y)))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 x (*.f64 -1 x)) y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 x (*.f64 -1 x)) y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) (pow.f64 x 2)) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 x (*.f64 -1 x)) y)))) 1)"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(fma.f64 -2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(+.f64 (*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y)))) -1)","(fma.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) -1)","(fma.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","(+.f64 (fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) -1)","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -1))","(fma.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))) -1)","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 1 (neg.f64 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 y x) (/.f64 y x)))","(fma.f64 2 (/.f64 y x) 1)","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 (+.f64 1 (/.f64 y (/.f64 (*.f64 x x) (-.f64 y (neg.f64 y))))) (neg.f64 (/.f64 y x))))","(+.f64 (/.f64 y x) (+.f64 (+.f64 1 (/.f64 y x)) (*.f64 2 (*.f64 (/.f64 y x) (/.f64 y x)))))","(fma.f64 2 (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x))) 1)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 (+.f64 (+.f64 1 (/.f64 y (/.f64 (*.f64 x x) (-.f64 y (neg.f64 y))))) (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 3) (-.f64 y (neg.f64 y))))) (neg.f64 (/.f64 y x))))","(+.f64 (/.f64 y x) (+.f64 (+.f64 (+.f64 1 (/.f64 y x)) (*.f64 2 (*.f64 (/.f64 y x) (/.f64 y x)))) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x)))) 1)","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 1 (neg.f64 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 y x) (/.f64 y x)))","(fma.f64 2 (/.f64 y x) 1)","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 (+.f64 1 (/.f64 y (/.f64 (*.f64 x x) (-.f64 y (neg.f64 y))))) (neg.f64 (/.f64 y x))))","(+.f64 (/.f64 y x) (+.f64 (+.f64 1 (/.f64 y x)) (*.f64 2 (*.f64 (/.f64 y x) (/.f64 y x)))))","(fma.f64 2 (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x))) 1)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 (+.f64 (+.f64 1 (/.f64 y (/.f64 (*.f64 x x) (-.f64 y (neg.f64 y))))) (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 3) (-.f64 y (neg.f64 y))))) (neg.f64 (/.f64 y x))))","(+.f64 (/.f64 y x) (+.f64 (+.f64 (+.f64 1 (/.f64 y x)) (*.f64 2 (*.f64 (/.f64 y x) (/.f64 y x)))) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x)))) 1)","1","(+.f64 1 (*.f64 2 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 1 (neg.f64 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 y x) (/.f64 y x)))","(fma.f64 2 (/.f64 y x) 1)","(+.f64 1 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (/.f64 y x) (-.f64 (+.f64 1 (/.f64 y (/.f64 (*.f64 x x) (-.f64 y (neg.f64 y))))) (neg.f64 (/.f64 y x))))","(+.f64 (/.f64 y x) (+.f64 (+.f64 1 (/.f64 y x)) (*.f64 2 (*.f64 (/.f64 y x) (/.f64 y x)))))","(fma.f64 2 (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x))) 1)","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 (/.f64 y x) (-.f64 (+.f64 (+.f64 1 (/.f64 y (/.f64 (*.f64 x x) (-.f64 y (neg.f64 y))))) (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 3) (-.f64 y (neg.f64 y))))) (neg.f64 (/.f64 y x))))","(+.f64 (/.f64 y x) (+.f64 (+.f64 (+.f64 1 (/.f64 y x)) (*.f64 2 (*.f64 (/.f64 y x) (/.f64 y x)))) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x)))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) (+.f64 1 (/.f64 x y)))","(fma.f64 -2 (/.f64 x y) -1)","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y))) (+.f64 1 (/.f64 x y)))","(+.f64 (*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y)))) -1)","(fma.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) -1)","(fma.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) -1)","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) (pow.f64 x 2)) (pow.f64 y 3)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y)))) (+.f64 1 (/.f64 x y)))","(+.f64 (fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) -1)","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -1))","(fma.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))) -1)","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 x (*.f64 -1 x)) y)) 1)","(fma.f64 -2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 x (*.f64 -1 x)) y))) 1)","(+.f64 (*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y)))) -1)","(fma.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) -1)","(fma.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) (pow.f64 x 2)) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 x (*.f64 -1 x)) y)))) 1)","(+.f64 (fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) -1)","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -1))","(fma.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))) -1)"]],"stop":[["node limit",1]],"time":38.9150390625,"type":"simplify"},{"compiler":[[831,382]],"time":8.358154296875,"type":"eval"},{"alts":[["(-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)","fresh",0.02734375],["(log1p.f64 (expm1.f64 (/.f64 (+.f64 x y) (-.f64 x y))))","fresh",0.03191376953688403],["(*.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))","fresh",0.04753876953688403],["(log.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))","next",0.0234375],["(pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) -1)","fresh",0.03125]],"compiler":[[13,9],[11,7],[24,14],[11,7],[11,7],[13,9],[11,7],[24,14],[11,7],[11,7]],"count":[[57,5]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[56,5],"picked":[1,0]}],"min-error":[0.00390625],"time":10.7998046875,"type":"prune"},{"compiler":[[34,7]],"locations":[["(exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))",0.00390625,true],["(log.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))",0.01171875,true],["(/.f64 (+.f64 x y) (-.f64 x y))",0.02734375,false]],"time":6.464111328125,"type":"localize"},{"count":[[2,48]],"series":[["(exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))","y","-inf",0.6689453125],["(exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))","y","inf",0.64599609375],["(exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))","y","0",0.43798828125],["(exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))","x","-inf",0.489013671875],["(exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))","x","inf",0.52392578125],["(exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))","x","0",0.635986328125],["(log.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))","y","-inf",0.199951171875],["(log.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))","y","inf",0.21484375],["(log.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))","y","0",0.1640625],["(log.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))","x","-inf",0.230224609375],["(log.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))","x","inf",0.2041015625],["(log.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))","x","0",0.261962890625]],"time":4.906982421875,"type":"series"},{"count":[[2,71]],"egraph":[[2,2348,22,0.020831875],[1,163,22,0.0030371670000000003],[0,8,22,0.000188417]],"inputs":[["(log.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))","(exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) (/.f64 1 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (*.f64 (cbrt.f64 (+.f64 x y)) (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x y)) (*.f64 (sqrt.f64 (+.f64 x y)) (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 x y)) (/.f64 1 (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 x y)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) 1) (/.f64 (cbrt.f64 (+.f64 x y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 x y)) 1) (/.f64 (sqrt.f64 (+.f64 x y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 x y)) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 (sqrt.f64 (+.f64 x y)) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 x y))) (/.f64 (+.f64 x y) (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (+.f64 x y)) (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x y) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (/.f64 (-.f64 x y) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (+.f64 x y)) (/.f64 (-.f64 x y) (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 x y)) (neg.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 y 3)) (*.f64 (-.f64 x y) (fma.f64 x x (*.f64 y (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (+.f64 x y))) (neg.f64 (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) (pow.f64 y 3)) 1) (*.f64 (fma.f64 x x (*.f64 y (-.f64 y x))) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 x x) (*.f64 y y)) 1) (pow.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (sqrt.f64 (-.f64 x y))) (sqrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) 1) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 1 (-.f64 x y))) (fma.f64 x x (*.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 x y) (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (+.f64 x y) 3) (pow.f64 (-.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))) (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))) 2) (cbrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))) (sqrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (+.f64 x y)) (/.f64 1 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2)) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y)))) (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 1) (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))))))))"]],"rules":[["egg-rr",20],["egg-rr",51]],"stop":[["node limit",1]],"time":42.27490234375,"type":"rewrite"},{"count":[[119,124]],"egraph":[[2,2147,958,0.015494334],[1,590,1232,0.0039254170000000005],[0,185,1412,0.000827]],"inputs":[["-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","1","(+.f64 1 (*.f64 2 (/.f64 y x)))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y))) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) (pow.f64 x 2)) (pow.f64 y 3)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y)))) (+.f64 1 (/.f64 x y)))","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 x (*.f64 -1 x)) y)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 x (*.f64 -1 x)) y))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) (pow.f64 x 2)) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 x (*.f64 -1 x)) y)))) 1)","(exp.f64 -1)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (exp.f64 -1) x) y)) (exp.f64 -1))","(+.f64 (*.f64 2/3 (/.f64 (*.f64 (exp.f64 -1) (pow.f64 x 3)) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (exp.f64 -1) x) y)) (exp.f64 -1)))","(+.f64 (*.f64 2/3 (/.f64 (*.f64 (exp.f64 -1) (pow.f64 x 3)) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (exp.f64 -1) x) y)) (+.f64 (exp.f64 -1) (*.f64 2/3 (/.f64 (*.f64 (exp.f64 -1) (pow.f64 x 4)) (pow.f64 y 4))))))","(exp.f64 1)","(+.f64 (/.f64 (*.f64 (-.f64 y (*.f64 -1 y)) (exp.f64 1)) x) (exp.f64 1))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (*.f64 y (-.f64 y (*.f64 -1 y)))) (exp.f64 1)) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (-.f64 y (*.f64 -1 y)) (exp.f64 1)) x) (exp.f64 1)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (+.f64 (*.f64 1/6 (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))))) (exp.f64 1)) (pow.f64 x 3)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (*.f64 y (-.f64 y (*.f64 -1 y)))) (exp.f64 1)) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (-.f64 y (*.f64 -1 y)) (exp.f64 1)) x) (exp.f64 1))))","(exp.f64 1)","(+.f64 (/.f64 (*.f64 (-.f64 y (*.f64 -1 y)) (exp.f64 1)) x) (exp.f64 1))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (*.f64 y (-.f64 y (*.f64 -1 y)))) (exp.f64 1)) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (-.f64 y (*.f64 -1 y)) (exp.f64 1)) x) (exp.f64 1)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (*.f64 y (-.f64 y (*.f64 -1 y)))) (exp.f64 1)) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (-.f64 y (*.f64 -1 y)) (exp.f64 1)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y)))) (*.f64 -1 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 2))))) (exp.f64 1)) (pow.f64 x 3))) (exp.f64 1))))","(exp.f64 1)","(+.f64 (*.f64 2 (/.f64 (*.f64 y (exp.f64 1)) x)) (exp.f64 1))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 2) (exp.f64 1)) (pow.f64 x 2))) (+.f64 (*.f64 2 (/.f64 (*.f64 y (exp.f64 1)) x)) (exp.f64 1)))","(+.f64 (*.f64 22/3 (/.f64 (*.f64 (pow.f64 y 3) (exp.f64 1)) (pow.f64 x 3))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 2) (exp.f64 1)) (pow.f64 x 2))) (+.f64 (*.f64 2 (/.f64 (*.f64 y (exp.f64 1)) x)) (exp.f64 1))))","(exp.f64 -1)","(+.f64 (/.f64 (*.f64 (exp.f64 -1) (-.f64 (*.f64 -1 x) x)) y) (exp.f64 -1))","(+.f64 (/.f64 (*.f64 (exp.f64 -1) (-.f64 (*.f64 -1 x) x)) y) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 x) x) 2)) (*.f64 (-.f64 (*.f64 -1 x) x) x)) (exp.f64 -1)) (pow.f64 y 2)) (exp.f64 -1)))","(+.f64 (/.f64 (*.f64 (exp.f64 -1) (-.f64 (*.f64 -1 x) x)) y) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 x) x) 2)) (*.f64 (-.f64 (*.f64 -1 x) x) x)) (exp.f64 -1)) (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (exp.f64 -1) (+.f64 (*.f64 (-.f64 (*.f64 -1 x) x) (pow.f64 x 2)) (+.f64 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 x) x) 3)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 x) x) 2) x)))) (pow.f64 y 3)) (exp.f64 -1))))","(exp.f64 -1)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) (exp.f64 -1)) y)) (exp.f64 -1))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) (exp.f64 -1)) y)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 x (*.f64 -1 x)) x)) (*.f64 1/2 (pow.f64 (-.f64 x (*.f64 -1 x)) 2))) (exp.f64 -1)) (pow.f64 y 2)) (exp.f64 -1)))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) (exp.f64 -1)) y)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 x (*.f64 -1 x)) x)) (*.f64 1/2 (pow.f64 (-.f64 x (*.f64 -1 x)) 2))) (exp.f64 -1)) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 (-.f64 x (*.f64 -1 x)) (pow.f64 x 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 x (*.f64 -1 x)) 2) x)) (*.f64 1/6 (pow.f64 (-.f64 x (*.f64 -1 x)) 3)))) (exp.f64 -1)) (pow.f64 y 3))) (exp.f64 -1))))"]],"method":["egg-herbie"],"outputs":[["-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(fma.f64 -2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(+.f64 (*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y)))) -1)","(fma.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) -1)","(fma.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","(+.f64 (fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) -1)","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -1))","(fma.f64 -2 (+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (pow.f64 (/.f64 x y) 3)) -1)","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 1 (/.f64 y x)) (/.f64 (neg.f64 y) x))","(+.f64 1 (+.f64 (/.f64 y x) (/.f64 y x)))","(fma.f64 2 (/.f64 y x) 1)","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (neg.f64 y))) (*.f64 x x)))) (/.f64 (neg.f64 y) x))","(+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 (/.f64 y (*.f64 x x)) (+.f64 y y)) (/.f64 y x))))","(fma.f64 2 (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x))) 1)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 (+.f64 (+.f64 1 (/.f64 (*.f64 y (-.f64 y (neg.f64 y))) (*.f64 x x))) (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 3) (-.f64 y (neg.f64 y))))) (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (+.f64 (+.f64 1 (+.f64 (*.f64 (/.f64 y (*.f64 x x)) (+.f64 y y)) (/.f64 y x))) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))","(+.f64 1 (*.f64 2 (+.f64 (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x))) (pow.f64 (/.f64 y x) 3))))","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 1 (/.f64 y x)) (/.f64 (neg.f64 y) x))","(+.f64 1 (+.f64 (/.f64 y x) (/.f64 y x)))","(fma.f64 2 (/.f64 y x) 1)","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (neg.f64 y))) (*.f64 x x)))) (/.f64 (neg.f64 y) x))","(+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 (/.f64 y (*.f64 x x)) (+.f64 y y)) (/.f64 y x))))","(fma.f64 2 (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x))) 1)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 (+.f64 (+.f64 1 (/.f64 (*.f64 y (-.f64 y (neg.f64 y))) (*.f64 x x))) (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 3) (-.f64 y (neg.f64 y))))) (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (+.f64 (+.f64 1 (+.f64 (*.f64 (/.f64 y (*.f64 x x)) (+.f64 y y)) (/.f64 y x))) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))","(+.f64 1 (*.f64 2 (+.f64 (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x))) (pow.f64 (/.f64 y x) 3))))","1","(+.f64 1 (*.f64 2 (/.f64 y x)))","(-.f64 (+.f64 1 (/.f64 y x)) (/.f64 (neg.f64 y) x))","(+.f64 1 (+.f64 (/.f64 y x) (/.f64 y x)))","(fma.f64 2 (/.f64 y x) 1)","(+.f64 1 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (neg.f64 y))) (*.f64 x x)))) (/.f64 (neg.f64 y) x))","(+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 (/.f64 y (*.f64 x x)) (+.f64 y y)) (/.f64 y x))))","(fma.f64 2 (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x))) 1)","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 (/.f64 y x) (-.f64 (+.f64 (+.f64 1 (/.f64 (*.f64 y (-.f64 y (neg.f64 y))) (*.f64 x x))) (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 3) (-.f64 y (neg.f64 y))))) (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (+.f64 (+.f64 1 (+.f64 (*.f64 (/.f64 y (*.f64 x x)) (+.f64 y y)) (/.f64 y x))) (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))","(+.f64 1 (*.f64 2 (+.f64 (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x))) (pow.f64 (/.f64 y x) 3))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) (+.f64 1 (/.f64 x y)))","(fma.f64 -2 (/.f64 x y) -1)","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y))) (+.f64 1 (/.f64 x y)))","(+.f64 (*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y)))) -1)","(fma.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) -1)","(fma.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) -1)","(-.f64 (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) (pow.f64 x 2)) (pow.f64 y 3)) (+.f64 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) x) (pow.f64 y 2)) (*.f64 -1 (/.f64 x y)))) (+.f64 1 (/.f64 x y)))","(+.f64 (fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) -1)","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -1))","(fma.f64 -2 (+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (pow.f64 (/.f64 x y) 3)) -1)","-1","(-.f64 (*.f64 -1 (/.f64 (-.f64 x (*.f64 -1 x)) y)) 1)","(fma.f64 -2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 x (*.f64 -1 x)) y))) 1)","(+.f64 (*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y)))) -1)","(fma.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) -1)","(fma.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) (pow.f64 x 2)) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) x) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 x (*.f64 -1 x)) y)))) 1)","(+.f64 (fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) -1)","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -1))","(fma.f64 -2 (+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (pow.f64 (/.f64 x y) 3)) -1)","(exp.f64 -1)","(+.f64 (*.f64 -2 (/.f64 (*.f64 (exp.f64 -1) x) y)) (exp.f64 -1))","(fma.f64 -2 (/.f64 (exp.f64 -1) (/.f64 y x)) (exp.f64 -1))","(fma.f64 -2 (*.f64 (/.f64 (exp.f64 -1) y) x) (exp.f64 -1))","(fma.f64 -2 (*.f64 (/.f64 x y) (exp.f64 -1)) (exp.f64 -1))","(+.f64 (*.f64 2/3 (/.f64 (*.f64 (exp.f64 -1) (pow.f64 x 3)) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (exp.f64 -1) x) y)) (exp.f64 -1)))","(fma.f64 2/3 (/.f64 (exp.f64 -1) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (fma.f64 -2 (/.f64 (exp.f64 -1) (/.f64 y x)) (exp.f64 -1)))","(fma.f64 2/3 (*.f64 (/.f64 (exp.f64 -1) (pow.f64 y 3)) (pow.f64 x 3)) (fma.f64 -2 (*.f64 (/.f64 (exp.f64 -1) y) x) (exp.f64 -1)))","(fma.f64 2/3 (*.f64 (pow.f64 (/.f64 x y) 3) (exp.f64 -1)) (fma.f64 -2 (*.f64 (/.f64 x y) (exp.f64 -1)) (exp.f64 -1)))","(+.f64 (*.f64 2/3 (/.f64 (*.f64 (exp.f64 -1) (pow.f64 x 3)) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (*.f64 (exp.f64 -1) x) y)) (+.f64 (exp.f64 -1) (*.f64 2/3 (/.f64 (*.f64 (exp.f64 -1) (pow.f64 x 4)) (pow.f64 y 4))))))","(fma.f64 2/3 (/.f64 (exp.f64 -1) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (fma.f64 -2 (/.f64 (exp.f64 -1) (/.f64 y x)) (exp.f64 -1)) (*.f64 2/3 (/.f64 (exp.f64 -1) (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))","(fma.f64 2/3 (*.f64 (/.f64 (exp.f64 -1) (pow.f64 y 3)) (pow.f64 x 3)) (fma.f64 -2 (*.f64 (/.f64 (exp.f64 -1) y) x) (fma.f64 2/3 (*.f64 (/.f64 (exp.f64 -1) (pow.f64 y 4)) (pow.f64 x 4)) (exp.f64 -1))))","(fma.f64 2/3 (*.f64 (pow.f64 (/.f64 x y) 3) (exp.f64 -1)) (fma.f64 -2 (*.f64 (/.f64 x y) (exp.f64 -1)) (fma.f64 2/3 (*.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (exp.f64 -1)) (exp.f64 -1))))","(exp.f64 1)","(E.f64)","(+.f64 (/.f64 (*.f64 (-.f64 y (*.f64 -1 y)) (exp.f64 1)) x) (exp.f64 1))","(+.f64 (E.f64) (/.f64 (-.f64 y (neg.f64 y)) (/.f64 x (E.f64))))","(fma.f64 2 (/.f64 (E.f64) (/.f64 x y)) (E.f64))","(*.f64 (fma.f64 2 (/.f64 y x) 1) (E.f64))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (*.f64 y (-.f64 y (*.f64 -1 y)))) (exp.f64 1)) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (-.f64 y (*.f64 -1 y)) (exp.f64 1)) x) (exp.f64 1)))","(+.f64 (+.f64 (E.f64) (/.f64 (-.f64 y (neg.f64 y)) (/.f64 x (E.f64)))) (/.f64 (fma.f64 1/2 (pow.f64 (-.f64 y (neg.f64 y)) 2) (*.f64 y (-.f64 y (neg.f64 y)))) (/.f64 (*.f64 x x) (E.f64))))","(+.f64 (fma.f64 2 (/.f64 (E.f64) (/.f64 x y)) (E.f64)) (/.f64 (E.f64) (/.f64 (*.f64 x x) (fma.f64 1/2 (pow.f64 (+.f64 y y) 2) (*.f64 y (+.f64 y y))))))","(fma.f64 4 (*.f64 (*.f64 (/.f64 y (*.f64 x x)) y) (E.f64)) (*.f64 (fma.f64 2 (/.f64 y x) 1) (E.f64)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (+.f64 (*.f64 1/6 (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))))) (exp.f64 1)) (pow.f64 x 3)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (*.f64 y (-.f64 y (*.f64 -1 y)))) (exp.f64 1)) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (-.f64 y (*.f64 -1 y)) (exp.f64 1)) x) (exp.f64 1))))","(+.f64 (+.f64 (+.f64 (E.f64) (/.f64 (-.f64 y (neg.f64 y)) (/.f64 x (E.f64)))) (/.f64 (fma.f64 1/2 (pow.f64 (-.f64 y (neg.f64 y)) 2) (*.f64 y (-.f64 y (neg.f64 y)))) (/.f64 (*.f64 x x) (E.f64)))) (/.f64 (fma.f64 y (pow.f64 (-.f64 y (neg.f64 y)) 2) (fma.f64 1/6 (pow.f64 (-.f64 y (neg.f64 y)) 3) (*.f64 (*.f64 y y) (-.f64 y (neg.f64 y))))) (/.f64 (pow.f64 x 3) (E.f64))))","(+.f64 (fma.f64 2 (/.f64 (E.f64) (/.f64 x y)) (E.f64)) (+.f64 (/.f64 (E.f64) (/.f64 (*.f64 x x) (fma.f64 1/2 (pow.f64 (+.f64 y y) 2) (*.f64 y (+.f64 y y))))) (/.f64 (fma.f64 y (pow.f64 (+.f64 y y) 2) (fma.f64 1/6 (pow.f64 (+.f64 y y) 3) (*.f64 2 (pow.f64 y 3)))) (/.f64 (pow.f64 x 3) (E.f64)))))","(+.f64 (*.f64 (fma.f64 2 (/.f64 y x) 1) (E.f64)) (*.f64 (E.f64) (+.f64 (/.f64 (*.f64 y (*.f64 y 4)) (*.f64 x x)) (/.f64 (+.f64 (*.f64 2 (pow.f64 y 3)) (*.f64 (*.f64 y (*.f64 y 4)) (+.f64 y (*.f64 1/3 y)))) (pow.f64 x 3)))))","(exp.f64 1)","(E.f64)","(+.f64 (/.f64 (*.f64 (-.f64 y (*.f64 -1 y)) (exp.f64 1)) x) (exp.f64 1))","(+.f64 (E.f64) (/.f64 (-.f64 y (neg.f64 y)) (/.f64 x (E.f64))))","(fma.f64 2 (/.f64 (E.f64) (/.f64 x y)) (E.f64))","(*.f64 (fma.f64 2 (/.f64 y x) 1) (E.f64))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (*.f64 y (-.f64 y (*.f64 -1 y)))) (exp.f64 1)) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (-.f64 y (*.f64 -1 y)) (exp.f64 1)) x) (exp.f64 1)))","(+.f64 (+.f64 (E.f64) (/.f64 (-.f64 y (neg.f64 y)) (/.f64 x (E.f64)))) (/.f64 (fma.f64 1/2 (pow.f64 (-.f64 y (neg.f64 y)) 2) (*.f64 y (-.f64 y (neg.f64 y)))) (/.f64 (*.f64 x x) (E.f64))))","(+.f64 (fma.f64 2 (/.f64 (E.f64) (/.f64 x y)) (E.f64)) (/.f64 (E.f64) (/.f64 (*.f64 x x) (fma.f64 1/2 (pow.f64 (+.f64 y y) 2) (*.f64 y (+.f64 y y))))))","(fma.f64 4 (*.f64 (*.f64 (/.f64 y (*.f64 x x)) y) (E.f64)) (*.f64 (fma.f64 2 (/.f64 y x) 1) (E.f64)))","(+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (*.f64 y (-.f64 y (*.f64 -1 y)))) (exp.f64 1)) (pow.f64 x 2)) (+.f64 (/.f64 (*.f64 (-.f64 y (*.f64 -1 y)) (exp.f64 1)) x) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 -1/6 (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y)))) (*.f64 -1 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 2))))) (exp.f64 1)) (pow.f64 x 3))) (exp.f64 1))))","(+.f64 (/.f64 (fma.f64 1/2 (pow.f64 (-.f64 y (neg.f64 y)) 2) (*.f64 y (-.f64 y (neg.f64 y)))) (/.f64 (*.f64 x x) (E.f64))) (+.f64 (/.f64 (-.f64 y (neg.f64 y)) (/.f64 x (E.f64))) (fma.f64 -1 (/.f64 (fma.f64 -1/6 (pow.f64 (-.f64 y (neg.f64 y)) 3) (fma.f64 -1 (*.f64 (*.f64 y y) (-.f64 y (neg.f64 y))) (*.f64 (neg.f64 y) (pow.f64 (-.f64 y (neg.f64 y)) 2)))) (/.f64 (pow.f64 x 3) (E.f64))) (E.f64))))","(+.f64 (-.f64 (E.f64) (/.f64 (E.f64) (/.f64 (pow.f64 x 3) (-.f64 (-.f64 (*.f64 (pow.f64 (+.f64 y y) 3) -1/6) (*.f64 2 (pow.f64 y 3))) (*.f64 y (pow.f64 (+.f64 y y) 2)))))) (+.f64 (/.f64 (E.f64) (/.f64 x (+.f64 y y))) (/.f64 (E.f64) (/.f64 (*.f64 x x) (fma.f64 1/2 (pow.f64 (+.f64 y y) 2) (*.f64 y (+.f64 y y)))))))","(-.f64 (fma.f64 4 (*.f64 (*.f64 (/.f64 y (*.f64 x x)) y) (E.f64)) (*.f64 (fma.f64 2 (/.f64 y x) 1) (E.f64))) (*.f64 (/.f64 (E.f64) (pow.f64 x 3)) (+.f64 (*.f64 -2 (pow.f64 y 3)) (*.f64 (*.f64 y (*.f64 y 4)) (+.f64 (neg.f64 y) (*.f64 -1/3 y))))))","(exp.f64 1)","(E.f64)","(+.f64 (*.f64 2 (/.f64 (*.f64 y (exp.f64 1)) x)) (exp.f64 1))","(+.f64 (E.f64) (/.f64 (-.f64 y (neg.f64 y)) (/.f64 x (E.f64))))","(fma.f64 2 (/.f64 (E.f64) (/.f64 x y)) (E.f64))","(*.f64 (fma.f64 2 (/.f64 y x) 1) (E.f64))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 2) (exp.f64 1)) (pow.f64 x 2))) (+.f64 (*.f64 2 (/.f64 (*.f64 y (exp.f64 1)) x)) (exp.f64 1)))","(+.f64 (+.f64 (E.f64) (/.f64 (-.f64 y (neg.f64 y)) (/.f64 x (E.f64)))) (/.f64 (fma.f64 1/2 (pow.f64 (-.f64 y (neg.f64 y)) 2) (*.f64 y (-.f64 y (neg.f64 y)))) (/.f64 (*.f64 x x) (E.f64))))","(+.f64 (fma.f64 2 (/.f64 (E.f64) (/.f64 x y)) (E.f64)) (/.f64 (E.f64) (/.f64 (*.f64 x x) (fma.f64 1/2 (pow.f64 (+.f64 y y) 2) (*.f64 y (+.f64 y y))))))","(fma.f64 4 (*.f64 (*.f64 (/.f64 y (*.f64 x x)) y) (E.f64)) (*.f64 (fma.f64 2 (/.f64 y x) 1) (E.f64)))","(+.f64 (*.f64 22/3 (/.f64 (*.f64 (pow.f64 y 3) (exp.f64 1)) (pow.f64 x 3))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 2) (exp.f64 1)) (pow.f64 x 2))) (+.f64 (*.f64 2 (/.f64 (*.f64 y (exp.f64 1)) x)) (exp.f64 1))))","(fma.f64 22/3 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 x 3) (E.f64))) (fma.f64 4 (/.f64 (*.f64 y y) (/.f64 (*.f64 x x) (E.f64))) (fma.f64 2 (/.f64 y (/.f64 x (E.f64))) (E.f64))))","(fma.f64 22/3 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (E.f64)) (fma.f64 4 (/.f64 (*.f64 y y) (/.f64 x (/.f64 (E.f64) x))) (fma.f64 2 (/.f64 (E.f64) (/.f64 x y)) (E.f64))))","(fma.f64 22/3 (/.f64 (E.f64) (pow.f64 (/.f64 x y) 3)) (fma.f64 4 (*.f64 (*.f64 (/.f64 y (*.f64 x x)) y) (E.f64)) (*.f64 (fma.f64 2 (/.f64 y x) 1) (E.f64))))","(exp.f64 -1)","(+.f64 (/.f64 (*.f64 (exp.f64 -1) (-.f64 (*.f64 -1 x) x)) y) (exp.f64 -1))","(fma.f64 -2 (/.f64 (exp.f64 -1) (/.f64 y x)) (exp.f64 -1))","(fma.f64 -2 (*.f64 (/.f64 (exp.f64 -1) y) x) (exp.f64 -1))","(fma.f64 -2 (*.f64 (/.f64 x y) (exp.f64 -1)) (exp.f64 -1))","(+.f64 (/.f64 (*.f64 (exp.f64 -1) (-.f64 (*.f64 -1 x) x)) y) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 x) x) 2)) (*.f64 (-.f64 (*.f64 -1 x) x) x)) (exp.f64 -1)) (pow.f64 y 2)) (exp.f64 -1)))","(+.f64 (/.f64 (*.f64 (-.f64 (neg.f64 x) x) (exp.f64 -1)) y) (+.f64 (exp.f64 -1) (/.f64 (fma.f64 1/2 (pow.f64 (-.f64 (neg.f64 x) x) 2) (*.f64 x (-.f64 (neg.f64 x) x))) (/.f64 (*.f64 y y) (exp.f64 -1)))))","(+.f64 (fma.f64 -2 (*.f64 (/.f64 (exp.f64 -1) y) x) (exp.f64 -1)) (*.f64 (/.f64 (fma.f64 1/2 (pow.f64 (*.f64 -2 x) 2) (*.f64 -2 (*.f64 x x))) (*.f64 y y)) (exp.f64 -1)))","(+.f64 (exp.f64 -1) (*.f64 (/.f64 (exp.f64 -1) y) (+.f64 (*.f64 -2 x) (/.f64 (*.f64 (+.f64 x x) (-.f64 x x)) y))))","(+.f64 (/.f64 (*.f64 (exp.f64 -1) (-.f64 (*.f64 -1 x) x)) y) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 1/2 (pow.f64 (-.f64 (*.f64 -1 x) x) 2)) (*.f64 (-.f64 (*.f64 -1 x) x) x)) (exp.f64 -1)) (pow.f64 y 2)) (+.f64 (/.f64 (*.f64 (exp.f64 -1) (+.f64 (*.f64 (-.f64 (*.f64 -1 x) x) (pow.f64 x 2)) (+.f64 (*.f64 1/6 (pow.f64 (-.f64 (*.f64 -1 x) x) 3)) (*.f64 (pow.f64 (-.f64 (*.f64 -1 x) x) 2) x)))) (pow.f64 y 3)) (exp.f64 -1))))","(+.f64 (/.f64 (*.f64 (-.f64 (neg.f64 x) x) (exp.f64 -1)) y) (+.f64 (/.f64 (fma.f64 1/2 (pow.f64 (-.f64 (neg.f64 x) x) 2) (*.f64 x (-.f64 (neg.f64 x) x))) (/.f64 (*.f64 y y) (exp.f64 -1))) (+.f64 (exp.f64 -1) (/.f64 (exp.f64 -1) (/.f64 (pow.f64 y 3) (fma.f64 (-.f64 (neg.f64 x) x) (*.f64 x x) (fma.f64 1/6 (pow.f64 (-.f64 (neg.f64 x) x) 3) (*.f64 x (pow.f64 (-.f64 (neg.f64 x) x) 2)))))))))","(+.f64 (+.f64 (fma.f64 -2 (*.f64 (/.f64 (exp.f64 -1) y) x) (exp.f64 -1)) (*.f64 (/.f64 (fma.f64 1/2 (pow.f64 (*.f64 -2 x) 2) (*.f64 -2 (*.f64 x x))) (*.f64 y y)) (exp.f64 -1))) (*.f64 (/.f64 (exp.f64 -1) (pow.f64 y 3)) (+.f64 (*.f64 -2 (pow.f64 x 3)) (fma.f64 x (pow.f64 (*.f64 -2 x) 2) (*.f64 1/6 (pow.f64 (*.f64 -2 x) 3))))))","(+.f64 (+.f64 (exp.f64 -1) (*.f64 (/.f64 (exp.f64 -1) (pow.f64 y 3)) (+.f64 (*.f64 -2 (pow.f64 x 3)) (*.f64 (*.f64 (*.f64 x x) 4) (+.f64 (*.f64 -1/3 x) x))))) (*.f64 (/.f64 (exp.f64 -1) y) (+.f64 (*.f64 -2 x) (/.f64 (*.f64 (+.f64 x x) (-.f64 x x)) y))))","(exp.f64 -1)","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) (exp.f64 -1)) y)) (exp.f64 -1))","(fma.f64 -2 (/.f64 (exp.f64 -1) (/.f64 y x)) (exp.f64 -1))","(fma.f64 -2 (*.f64 (/.f64 (exp.f64 -1) y) x) (exp.f64 -1))","(fma.f64 -2 (*.f64 (/.f64 x y) (exp.f64 -1)) (exp.f64 -1))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) (exp.f64 -1)) y)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 x (*.f64 -1 x)) x)) (*.f64 1/2 (pow.f64 (-.f64 x (*.f64 -1 x)) 2))) (exp.f64 -1)) (pow.f64 y 2)) (exp.f64 -1)))","(+.f64 (/.f64 (*.f64 (-.f64 (neg.f64 x) x) (exp.f64 -1)) y) (+.f64 (exp.f64 -1) (/.f64 (fma.f64 1/2 (pow.f64 (-.f64 (neg.f64 x) x) 2) (*.f64 x (-.f64 (neg.f64 x) x))) (/.f64 (*.f64 y y) (exp.f64 -1)))))","(+.f64 (fma.f64 -2 (*.f64 (/.f64 (exp.f64 -1) y) x) (exp.f64 -1)) (*.f64 (/.f64 (fma.f64 1/2 (pow.f64 (*.f64 -2 x) 2) (*.f64 -2 (*.f64 x x))) (*.f64 y y)) (exp.f64 -1)))","(+.f64 (exp.f64 -1) (*.f64 (/.f64 (exp.f64 -1) y) (+.f64 (*.f64 -2 x) (/.f64 (*.f64 (+.f64 x x) (-.f64 x x)) y))))","(+.f64 (*.f64 -1 (/.f64 (*.f64 (-.f64 x (*.f64 -1 x)) (exp.f64 -1)) y)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 -1 (*.f64 (-.f64 x (*.f64 -1 x)) x)) (*.f64 1/2 (pow.f64 (-.f64 x (*.f64 -1 x)) 2))) (exp.f64 -1)) (pow.f64 y 2)) (+.f64 (*.f64 -1 (/.f64 (*.f64 (+.f64 (*.f64 (-.f64 x (*.f64 -1 x)) (pow.f64 x 2)) (+.f64 (*.f64 -1 (*.f64 (pow.f64 (-.f64 x (*.f64 -1 x)) 2) x)) (*.f64 1/6 (pow.f64 (-.f64 x (*.f64 -1 x)) 3)))) (exp.f64 -1)) (pow.f64 y 3))) (exp.f64 -1))))","(fma.f64 -1 (/.f64 (-.f64 x (neg.f64 x)) (/.f64 y (exp.f64 -1))) (+.f64 (/.f64 (fma.f64 -1 (*.f64 x (-.f64 x (neg.f64 x))) (*.f64 1/2 (pow.f64 (-.f64 x (neg.f64 x)) 2))) (/.f64 (*.f64 y y) (exp.f64 -1))) (fma.f64 -1 (/.f64 (fma.f64 (-.f64 x (neg.f64 x)) (*.f64 x x) (fma.f64 -1 (*.f64 x (pow.f64 (-.f64 x (neg.f64 x)) 2)) (*.f64 1/6 (pow.f64 (-.f64 x (neg.f64 x)) 3)))) (/.f64 (pow.f64 y 3) (exp.f64 -1))) (exp.f64 -1))))","(+.f64 (-.f64 (/.f64 (fma.f64 1/2 (pow.f64 (+.f64 x x) 2) (*.f64 -2 (*.f64 x x))) (/.f64 y (/.f64 (exp.f64 -1) y))) (/.f64 (fma.f64 (*.f64 x x) (+.f64 x x) (-.f64 (*.f64 1/6 (pow.f64 (+.f64 x x) 3)) (*.f64 x (pow.f64 (+.f64 x x) 2)))) (/.f64 (pow.f64 y 3) (exp.f64 -1)))) (fma.f64 -2 (*.f64 (/.f64 (exp.f64 -1) y) x) (exp.f64 -1)))","(+.f64 (-.f64 (exp.f64 -1) (*.f64 (/.f64 (+.f64 (*.f64 2 (pow.f64 x 3)) (*.f64 (*.f64 (*.f64 x x) 4) (-.f64 (*.f64 1/3 x) x))) (pow.f64 y 3)) (exp.f64 -1))) (*.f64 (/.f64 (exp.f64 -1) y) (+.f64 (*.f64 -2 x) (/.f64 (*.f64 (+.f64 x x) (-.f64 x x)) y))))"]],"stop":[["node limit",1]],"time":36.668212890625,"type":"simplify"},{"compiler":[[3278,1691]],"time":32.93994140625,"type":"eval"},{"alts":[["(log.f64 (exp.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))","fresh",0.04591752930532605],["(log.f64 (exp.f64 (log1p.f64 (expm1.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))","fresh",0.028007519536884032],["(log.f64 (exp.f64 (-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)))","next",0.0234375],["(+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))","fresh",0.04982377930532605]],"compiler":[[26,16],[13,9],[15,11],[25,12],[26,16],[13,9],[15,11],[25,12]],"count":[[185,4]],"kept":[{"done":[0,0],"fresh":[4,0],"new":[180,4],"picked":[1,0]}],"min-error":[0],"time":52.31591796875,"type":"prune"},{"compiler":[[63,23]],"locations":[["(log.f64 (exp.f64 (-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)))",0.01171875,true],["(-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)",0.01171875,true],["(/.f64 (+.f64 x y) (-.f64 x y))",0.02734375,false],["(+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))",3.3112837711646006,true]],"time":11.401123046875,"type":"localize"},{"count":[[3,72]],"series":[["(log.f64 (exp.f64 (-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)))","y","-inf",0.2080078125],["(log.f64 (exp.f64 (-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)))","y","inf",0.18798828125],["(log.f64 (exp.f64 (-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)))","y","0",0.175048828125],["(log.f64 (exp.f64 (-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)))","x","-inf",0.180908203125],["(log.f64 (exp.f64 (-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)))","x","inf",0.20703125],["(log.f64 (exp.f64 (-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)))","x","0",0.18701171875],["(-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)","y","-inf",0.219970703125],["(-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)","y","inf",0.197998046875],["(-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)","y","0",0.162841796875],["(-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)","x","-inf",0.202880859375],["(-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)","x","inf",0.197021484375],["(-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)","x","0",0.200927734375],["(+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))","y","-inf",0.473876953125],["(+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))","y","inf",0.41796875],["(+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))","y","0",0.242919921875],["(+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))","x","-inf",0.22509765625],["(+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))","x","inf",0.351806640625],["(+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))","x","0",0.4169921875]],"time":4.716796875,"type":"series"},{"count":[[3,299]],"egraph":[[2,3576,33,0.027183251000000002],[1,239,33,0.0044804169999999996],[0,11,45,0.000297792]],"inputs":[["(+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))","(-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)","(log.f64 (exp.f64 (-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (-.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) (/.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (-.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 2) (cbrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 2) (*.f64 (cbrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) (sqrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) (*.f64 (sqrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3)) (/.f64 1 (fma.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (/.f64 1 (-.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 1) (+.f64 1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) (-.f64 1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3)) (fma.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3)) (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (-.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (-.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3))) (neg.f64 (fma.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))) (neg.f64 (-.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) 1) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3)) 1) (fma.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) 1) (-.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 1) (+.f64 1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) (-.f64 1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x y) (/.f64 1 (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (*.f64 (cbrt.f64 (+.f64 x y)) (/.f64 1 (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 x y)) (*.f64 (sqrt.f64 (+.f64 x y)) (/.f64 1 (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (+.f64 x y)) (/.f64 1 (neg.f64 (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (expm1.f64 (*.f64 3 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) (/.f64 1 (+.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 x y)) (+.f64 x y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (expm1.f64 (*.f64 2 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) (/.f64 1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) 2) (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (sqrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) 1) (/.f64 (cbrt.f64 (+.f64 x y)) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (+.f64 x y)) 1) (/.f64 (sqrt.f64 (+.f64 x y)) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) -2) (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (+.f64 x y)) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 (sqrt.f64 (+.f64 x y)) (cbrt.f64 (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 x y) -1/2) (/.f64 (+.f64 x y) (sqrt.f64 (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (+.f64 x y)) (sqrt.f64 (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 x y) (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 x y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 1) (expm1.f64 (*.f64 1/2 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 x y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 x y) (*.f64 x x)) 1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) (log.f64 (/.f64 1 (E.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (+.f64 x y) (-.f64 x y))) (*.f64 1/2 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (*.f64 1/3 (/.f64 (+.f64 x y) (-.f64 x y)))) (*.f64 1/3 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (/.f64 (+.f64 x y) (-.f64 x y))) (*.f64 2 (*.f64 1/3 (/.f64 (+.f64 x y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) (/.f64 1 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (*.f64 (cbrt.f64 (+.f64 x y)) (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x y)) (*.f64 (sqrt.f64 (+.f64 x y)) (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 x y)) (/.f64 1 (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 1/3 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (*.f64 3 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) (/.f64 1 (+.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 x y)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (*.f64 2 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) (/.f64 1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 1/2 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (*.f64 3 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) 1) (/.f64 (cbrt.f64 (+.f64 x y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 x y)) 1) (/.f64 (sqrt.f64 (+.f64 x y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) -2) (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 x y)) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 (sqrt.f64 (+.f64 x y)) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) -1/2) (/.f64 (+.f64 x y) (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (+.f64 x y)) (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 1) (expm1.f64 (*.f64 1/2 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 x y) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (expm1.f64 (*.f64 3 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (expm1.f64 (*.f64 2 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x y) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (/.f64 (-.f64 x y) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (+.f64 x y)) (/.f64 (-.f64 x y) (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 x y)) (neg.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (expm1.f64 (*.f64 3 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) (+.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (expm1.f64 (*.f64 3 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) (+.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (-.f64 1 (*.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 y 3)) (*.f64 (-.f64 x y) (fma.f64 x x (*.f64 y (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (expm1.f64 (*.f64 2 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (expm1.f64 (*.f64 3 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y)))))) (neg.f64 (+.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (expm1.f64 (*.f64 2 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y)))))) (neg.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (+.f64 x y))) (neg.f64 (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) (pow.f64 y 3)) 1) (*.f64 (fma.f64 x x (*.f64 y (-.f64 y x))) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 x x) (*.f64 y y)) 1) (pow.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (sqrt.f64 (-.f64 x y))) (sqrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)) (+.f64 1 (-.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)) (-.f64 1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) 1) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 1 (-.f64 x y))) (fma.f64 x x (*.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (expm1.f64 (*.f64 3 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y)))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (expm1.f64 (*.f64 2 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y)))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 x y) (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (log.f64 (/.f64 (E.f64) (exp.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (+.f64 x y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (sqrt.f64 (-.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (/.f64 (+.f64 x y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (*.f64 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x y) (/.f64 1 (-.f64 x y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 2) (cbrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 2) (*.f64 (cbrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (*.f64 (cbrt.f64 (+.f64 x y)) (/.f64 1 (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) (sqrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) (*.f64 (sqrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 x y)) (*.f64 (sqrt.f64 (+.f64 x y)) (/.f64 1 (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (+.f64 x y)) (/.f64 1 (neg.f64 (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (expm1.f64 (*.f64 3 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) (/.f64 1 (+.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3)) (/.f64 1 (fma.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 x y)) (+.f64 x y) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (expm1.f64 (*.f64 2 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) (/.f64 1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (/.f64 1 (-.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 2) (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) (sqrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) 1) (/.f64 (cbrt.f64 (+.f64 x y)) (-.f64 x y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (+.f64 x y)) 1) (/.f64 (sqrt.f64 (+.f64 x y)) (-.f64 x y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) -2) (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (+.f64 x y)) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 (sqrt.f64 (+.f64 x y)) (cbrt.f64 (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 x y) -1/2) (/.f64 (+.f64 x y) (sqrt.f64 (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (+.f64 x y)) (sqrt.f64 (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 x y) (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 x y) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 1) (expm1.f64 (*.f64 1/2 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 1) (-.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 x y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 x y) (*.f64 x x)) 0)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 1 (*.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) (log.f64 (/.f64 1 (E.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 -1 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/2 (/.f64 (+.f64 x y) (-.f64 x y))) (*.f64 1/2 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 2 (*.f64 1/3 (/.f64 (+.f64 x y) (-.f64 x y)))) (*.f64 1/3 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 1/3 (/.f64 (+.f64 x y) (-.f64 x y))) (*.f64 2 (*.f64 1/3 (/.f64 (+.f64 x y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (log.f64 (/.f64 (E.f64) (exp.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 3) (+.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))) (/.f64 1 (+.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (/.f64 1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (log.f64 (neg.f64 (exp.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))) (log.f64 (neg.f64 (E.f64))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) (/.f64 1 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (*.f64 (cbrt.f64 (+.f64 x y)) (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x y)) (*.f64 (sqrt.f64 (+.f64 x y)) (/.f64 1 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 x y)) (/.f64 1 (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 3 (*.f64 1/3 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (*.f64 3 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) (/.f64 1 (+.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 x y)) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (expm1.f64 (*.f64 2 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) (/.f64 1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 1/2 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/3 (*.f64 3 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) 1) (/.f64 (cbrt.f64 (+.f64 x y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 x y)) 1) (/.f64 (sqrt.f64 (+.f64 x y)) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) -2) (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 x y)) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 (sqrt.f64 (+.f64 x y)) (cbrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 x y) -1/2) (/.f64 (+.f64 x y) (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (+.f64 x y)) (sqrt.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 1) (expm1.f64 (*.f64 1/2 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 x y) (*.f64 x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 x y) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (expm1.f64 (*.f64 3 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (expm1.f64 (*.f64 2 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 x y) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (/.f64 (-.f64 x y) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (+.f64 x y)) (/.f64 (-.f64 x y) (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 x y)) (neg.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (expm1.f64 (*.f64 3 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) (+.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (expm1.f64 (*.f64 3 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) (+.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (-.f64 1 (*.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 y 3)) (*.f64 (-.f64 x y) (fma.f64 x x (*.f64 y (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (-.f64 x y) (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (expm1.f64 (*.f64 2 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 x x) (*.f64 y y)) (pow.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (expm1.f64 (*.f64 3 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y)))))) (neg.f64 (+.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (expm1.f64 (*.f64 2 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y)))))) (neg.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (neg.f64 (+.f64 x y))) (neg.f64 (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) (pow.f64 y 3)) 1) (*.f64 (fma.f64 x x (*.f64 y (-.f64 y x))) (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 x x) (*.f64 y y)) 1) (pow.f64 (-.f64 x y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (sqrt.f64 (-.f64 x y))) (sqrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 1 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)) (+.f64 1 (-.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)) (-.f64 1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) 1) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (+.f64 x y) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (cbrt.f64 (-.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 1 (-.f64 x y))) (fma.f64 x x (*.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (expm1.f64 (*.f64 3 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y)))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (expm1.f64 (*.f64 2 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y)))))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (-.f64 x y) (+.f64 x y)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 x y) (neg.f64 (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (log.f64 (/.f64 (E.f64) (exp.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x hypot.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (sqrt.f64 (-.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (/.f64 (+.f64 x y) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (*.f64 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x y) (/.f64 1 (-.f64 x y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) (pow.f64 (cbrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 2) (cbrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 2) (*.f64 (cbrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (*.f64 (cbrt.f64 (+.f64 x y)) (/.f64 1 (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) (sqrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) (*.f64 (sqrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 x y)) (*.f64 (sqrt.f64 (+.f64 x y)) (/.f64 1 (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (+.f64 x y)) (/.f64 1 (neg.f64 (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (expm1.f64 (*.f64 3 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) (/.f64 1 (+.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3)) (/.f64 1 (fma.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 x y)) (+.f64 x y) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (expm1.f64 (*.f64 2 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) (/.f64 1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (/.f64 1 (-.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 2) (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) (sqrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) 1) (/.f64 (cbrt.f64 (+.f64 x y)) (-.f64 x y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (+.f64 x y)) 1) (/.f64 (sqrt.f64 (+.f64 x y)) (-.f64 x y)) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 x y)) -2) (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (+.f64 x y)) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (/.f64 (sqrt.f64 (+.f64 x y)) (cbrt.f64 (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (-.f64 x y) -1/2) (/.f64 (+.f64 x y) (sqrt.f64 (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (+.f64 x y)) (sqrt.f64 (-.f64 x y))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 x y) (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 x y) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)))) 1) (expm1.f64 (*.f64 1/2 (log1p.f64 (/.f64 (+.f64 x y) (-.f64 x y))))) 0)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 1) (-.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 x y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 x y) (*.f64 x x)) 0)))))"]],"rules":[["egg-rr",120],["egg-rr",117],["egg-rr",62]],"stop":[["node limit",1]],"time":63.451171875,"type":"rewrite"},{"count":[[371,235]],"egraph":[[3,6138,1035,0.027056749999999997],[2,1384,1049,0.011615416],[1,437,1401,0.00281225],[0,121,1529,0.000621333]],"inputs":[["(*.f64 -2 (/.f64 x y))","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","2","(-.f64 (+.f64 (/.f64 y x) 2) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 2 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 -1 (/.f64 y x)))","2","(-.f64 (+.f64 (/.f64 y x) 2) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 2 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 2 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(/.f64 (-.f64 (*.f64 -1 x) x) y)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) (/.f64 x y))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) (/.f64 x y))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1 (/.f64 x y))))) (/.f64 x y))","(*.f64 -2 (/.f64 x y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 x y))) (/.f64 (pow.f64 x 2) (pow.f64 y 2)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -1 (/.f64 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3))) (pow.f64 y 3))))) (/.f64 (pow.f64 x 2) (pow.f64 y 2)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1 (/.f64 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3))) (pow.f64 y 3)))))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 -1 (/.f64 y x)))","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","1","(+.f64 1 (*.f64 2 (/.f64 y x)))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) (+.f64 1 (/.f64 x y)))","-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3))) (pow.f64 y 3))))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))","-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 -1 (/.f64 y x)))","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","1","(+.f64 1 (*.f64 2 (/.f64 y x)))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","-1","(-.f64 (*.f64 -1 (/.f64 x y)) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) (+.f64 1 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) (+.f64 1 (/.f64 x y)))","-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3))) (pow.f64 y 3))))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 (/.f64 x y))","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y))))","(*.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))))","(*.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(*.f64 -2 (+.f64 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(*.f64 -2 (+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (+.f64 (pow.f64 (/.f64 x y) 3) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(*.f64 -2 (+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (+.f64 (pow.f64 (/.f64 x y) 3) (pow.f64 (/.f64 x y) 4))))","2","(-.f64 (+.f64 (/.f64 y x) 2) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 2 (/.f64 (neg.f64 y) x)))","(+.f64 2 (+.f64 (/.f64 y x) (/.f64 y x)))","(fma.f64 2 (/.f64 y x) 2)","(-.f64 (+.f64 (/.f64 y x) (+.f64 2 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 (+.f64 2 (/.f64 (*.f64 2 (*.f64 y y)) (*.f64 x x))) (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) (fma.f64 2 (*.f64 (/.f64 y x) (/.f64 y x)) 2)))","(+.f64 2 (*.f64 (/.f64 y x) (fma.f64 2 (/.f64 y x) 2)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (+.f64 2 (/.f64 y x)) (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (*.f64 y y) (*.f64 x x))))) (/.f64 (neg.f64 y) x))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) (fma.f64 2 (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) 2)))","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))) 2)","2","(-.f64 (+.f64 (/.f64 y x) 2) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 2 (/.f64 (neg.f64 y) x)))","(+.f64 2 (+.f64 (/.f64 y x) (/.f64 y x)))","(fma.f64 2 (/.f64 y x) 2)","(-.f64 (+.f64 (/.f64 y x) (+.f64 2 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 (+.f64 2 (/.f64 (*.f64 2 (*.f64 y y)) (*.f64 x x))) (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) (fma.f64 2 (*.f64 (/.f64 y x) (/.f64 y x)) 2)))","(+.f64 2 (*.f64 (/.f64 y x) (fma.f64 2 (/.f64 y x) 2)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 2 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (+.f64 2 (/.f64 y x)) (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (*.f64 y y) (*.f64 x x))))) (/.f64 (neg.f64 y) x))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) (fma.f64 2 (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) 2)))","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))) 2)","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 2 (/.f64 (neg.f64 y) x)))","(+.f64 2 (+.f64 (/.f64 y x) (/.f64 y x)))","(fma.f64 2 (/.f64 y x) 2)","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (/.f64 y x) (-.f64 (+.f64 2 (/.f64 (*.f64 2 (*.f64 y y)) (*.f64 x x))) (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) (fma.f64 2 (*.f64 (/.f64 y x) (/.f64 y x)) 2)))","(+.f64 2 (*.f64 (/.f64 y x) (fma.f64 2 (/.f64 y x) 2)))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(-.f64 (+.f64 (+.f64 2 (/.f64 y x)) (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (*.f64 y y) (*.f64 x x))))) (/.f64 (neg.f64 y) x))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) (fma.f64 2 (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) 2)))","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))) 2)","(/.f64 (-.f64 (*.f64 -1 x) x) y)","(*.f64 -2 (/.f64 x y))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) (/.f64 x y))","(*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y))))","(*.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))))","(*.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) (/.f64 x y))","(fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1 (/.f64 x y))))) (/.f64 x y))","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(*.f64 -2 (+.f64 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(*.f64 -2 (+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (+.f64 (pow.f64 (/.f64 x y) 3) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(*.f64 -2 (+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (+.f64 (pow.f64 (/.f64 x y) 3) (pow.f64 (/.f64 x y) 4))))","(*.f64 -2 (/.f64 x y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 x y))) (/.f64 (pow.f64 x 2) (pow.f64 y 2)))","(*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y))))","(*.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))))","(*.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -1 (/.f64 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3))) (pow.f64 y 3))))) (/.f64 (pow.f64 x 2) (pow.f64 y 2)))","(fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 -1 (/.f64 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3))) (pow.f64 y 3)))))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(-.f64 (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -2 (/.f64 x y) (*.f64 -1 (+.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (/.f64 (-.f64 (pow.f64 x 3) (neg.f64 (pow.f64 x 3))) (pow.f64 y 3)))))) (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(-.f64 (-.f64 (-.f64 (-.f64 (*.f64 -2 (/.f64 x y)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (/.f64 (*.f64 2 (pow.f64 x 3)) (pow.f64 y 3))) (*.f64 (/.f64 x y) (/.f64 x y))) (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(-.f64 (+.f64 (/.f64 (neg.f64 (pow.f64 x 4)) (pow.f64 y 4)) (*.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))))) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))","(-.f64 (-.f64 (*.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)))) (pow.f64 (/.f64 x y) 4)) (pow.f64 (/.f64 x y) 4))","-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(fma.f64 -2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(+.f64 (*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y)))) -1)","(fma.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) -1)","(fma.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","(+.f64 (fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) -1)","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -1))","(fma.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))) -1)","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 1 (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))","(fma.f64 2 (/.f64 y x) 1)","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 (+.f64 (/.f64 (*.f64 2 (*.f64 y y)) (*.f64 x x)) 1) (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) (fma.f64 2 (*.f64 (/.f64 y x) (/.f64 y x)) 1)))","(+.f64 (*.f64 (/.f64 y x) (fma.f64 2 (/.f64 y x) 2)) 1)","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (+.f64 (/.f64 y x) 1) (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (*.f64 y y) (*.f64 x x))))) (/.f64 (neg.f64 y) x))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) (fma.f64 2 (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) 1)))","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))) 1)","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 1 (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))","(fma.f64 2 (/.f64 y x) 1)","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 (+.f64 (/.f64 (*.f64 2 (*.f64 y y)) (*.f64 x x)) 1) (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) (fma.f64 2 (*.f64 (/.f64 y x) (/.f64 y x)) 1)))","(+.f64 (*.f64 (/.f64 y x) (fma.f64 2 (/.f64 y x) 2)) 1)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (+.f64 (/.f64 y x) 1) (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (*.f64 y y) (*.f64 x x))))) (/.f64 (neg.f64 y) x))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) (fma.f64 2 (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) 1)))","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))) 1)","1","(+.f64 1 (*.f64 2 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 1 (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))","(fma.f64 2 (/.f64 y x) 1)","(+.f64 1 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (/.f64 y x) (-.f64 (+.f64 (/.f64 (*.f64 2 (*.f64 y y)) (*.f64 x x)) 1) (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) (fma.f64 2 (*.f64 (/.f64 y x) (/.f64 y x)) 1)))","(+.f64 (*.f64 (/.f64 y x) (fma.f64 2 (/.f64 y x) 2)) 1)","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(-.f64 (+.f64 (+.f64 (/.f64 y x) 1) (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (*.f64 y y) (*.f64 x x))))) (/.f64 (neg.f64 y) x))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) (fma.f64 2 (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) 1)))","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) (+.f64 1 (/.f64 x y)))","(fma.f64 -2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) (+.f64 1 (/.f64 x y)))","(+.f64 (*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y)))) -1)","(fma.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) -1)","(fma.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) (+.f64 1 (/.f64 x y)))","(+.f64 (fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) -1)","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -1))","(fma.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))) -1)","-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(fma.f64 -2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))","(+.f64 (*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y)))) -1)","(fma.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) -1)","(fma.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3))) (pow.f64 y 3))))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))","(+.f64 (fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) -1)","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -1))","(fma.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))) -1)","-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(fma.f64 -2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 1)","(+.f64 (*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y)))) -1)","(fma.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) -1)","(fma.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 1)","(+.f64 (fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) -1)","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -1))","(fma.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))) -1)","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 1 (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))","(fma.f64 2 (/.f64 y x) 1)","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 (+.f64 (/.f64 (*.f64 2 (*.f64 y y)) (*.f64 x x)) 1) (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) (fma.f64 2 (*.f64 (/.f64 y x) (/.f64 y x)) 1)))","(+.f64 (*.f64 (/.f64 y x) (fma.f64 2 (/.f64 y x) 2)) 1)","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (+.f64 (/.f64 y x) 1) (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (*.f64 y y) (*.f64 x x))))) (/.f64 (neg.f64 y) x))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) (fma.f64 2 (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) 1)))","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))) 1)","1","(-.f64 (+.f64 (/.f64 y x) 1) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 1 (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))","(fma.f64 2 (/.f64 y x) 1)","(-.f64 (+.f64 (/.f64 y x) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 (+.f64 (/.f64 (*.f64 2 (*.f64 y y)) (*.f64 x x)) 1) (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) (fma.f64 2 (*.f64 (/.f64 y x) (/.f64 y x)) 1)))","(+.f64 (*.f64 (/.f64 y x) (fma.f64 2 (/.f64 y x) 2)) 1)","(-.f64 (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 1 (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (+.f64 (/.f64 y x) 1) (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (*.f64 y y) (*.f64 x x))))) (/.f64 (neg.f64 y) x))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) (fma.f64 2 (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) 1)))","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))) 1)","1","(+.f64 1 (*.f64 2 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 1 (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))","(fma.f64 2 (/.f64 y x) 1)","(+.f64 1 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (/.f64 y x) (-.f64 (+.f64 (/.f64 (*.f64 2 (*.f64 y y)) (*.f64 x x)) 1) (/.f64 (neg.f64 y) x)))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) (fma.f64 2 (*.f64 (/.f64 y x) (/.f64 y x)) 1)))","(+.f64 (*.f64 (/.f64 y x) (fma.f64 2 (/.f64 y x) 2)) 1)","(+.f64 1 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(-.f64 (+.f64 (+.f64 (/.f64 y x) 1) (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (*.f64 y y) (*.f64 x x))))) (/.f64 (neg.f64 y) x))","(+.f64 (/.f64 y x) (+.f64 (/.f64 y x) (fma.f64 2 (+.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) 1)))","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) 1))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 x y)) (+.f64 1 (/.f64 x y)))","(fma.f64 -2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) (+.f64 1 (/.f64 x y)))","(+.f64 (*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y)))) -1)","(fma.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) -1)","(fma.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) (+.f64 1 (/.f64 x y)))","(+.f64 (fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) -1)","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -1))","(fma.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))) -1)","-1","(-.f64 (*.f64 -2 (/.f64 x y)) 1)","(fma.f64 -2 (/.f64 x y) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))","(+.f64 (*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y)))) -1)","(fma.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) -1)","(fma.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) -1)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3))) (pow.f64 y 3))))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 1))","(+.f64 (fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) -1)","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -1))","(fma.f64 -2 (+.f64 (pow.f64 (/.f64 x y) 3) (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))) -1)"]],"stop":[["node limit",1]],"time":52.762939453125,"type":"simplify"},{"compiler":[[6114,3076]],"time":58.009033203125,"type":"eval"},{"alts":[["(-.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (/.f64 1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)))","fresh",0.02734375],["(log.f64 (exp.f64 (/.f64 (+.f64 1 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)) (+.f64 1 (-.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))))))","next",0.01953125],["(-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)","fresh",0.02734375]],"compiler":[[35,17],[41,23],[13,9],[35,17],[41,23],[13,9]],"count":[[295,3]],"kept":[{"done":[0,0],"fresh":[3,0],"new":[291,3],"picked":[1,0]}],"min-error":[0],"time":119.93603515625,"type":"prune"},{"compiler":[[223,92]],"locations":[["(pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)",0.02734375,true],["(/.f64 (+.f64 x y) (-.f64 x y))",0.02734375,false],["(pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)",0.045253759768442016,true],["(+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)",2.0053425065432817,true]],"time":31.0458984375,"type":"localize"},{"count":[[3,72]],"series":[["(pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)","y","-inf",0.321044921875],["(pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)","y","inf",0.322998046875],["(pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)","y","0",0.2509765625],["(pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)","x","-inf",0.398193359375],["(pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)","x","inf",0.385009765625],["(pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)","x","0",0.239013671875],["(pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)","y","-inf",0.767822265625],["(pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)","y","inf",0.736083984375],["(pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)","y","0",0.80712890625],["(pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)","x","-inf",1.262939453125],["(pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)","x","inf",1.02392578125],["(pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)","x","0",0.76513671875],["(+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)","y","-inf",0.23095703125],["(+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)","y","inf",0.2080078125],["(+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)","y","0",0.27099609375],["(+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)","x","-inf",0.3408203125],["(+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)","x","inf",0.35107421875],["(+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)","x","0",0.27001953125]],"time":9.30712890625,"type":"series"},{"count":[[3,129]],"egraph":[[2,3582,45,0.028356583999999997],[1,276,45,0.004835292],[0,12,45,0.000376375]],"inputs":[["(+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)","(pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)","(pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)) (/.f64 1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) (pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 2) (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) (sqrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 -1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3)) (/.f64 1 (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (-.f64 1 (/.f64 (*.f64 (+.f64 x y) -1) (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) -1) (/.f64 1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 4))) (sqrt.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 1) (-.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (-.f64 1 (/.f64 (*.f64 (+.f64 x y) -1) (-.f64 x y)))) (+.f64 -1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1) (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3)) (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (-.f64 1 (/.f64 (*.f64 (+.f64 x y) -1) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 -1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3)) (+.f64 1 (-.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (/.f64 (*.f64 (+.f64 x y) -1) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) -1) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 -1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3))) (neg.f64 (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (-.f64 1 (/.f64 (*.f64 (+.f64 x y) -1) (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) -1)) (neg.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (-.f64 -1 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (-.f64 1 (/.f64 (*.f64 (+.f64 x y) -1) (-.f64 x y)))) (+.f64 -1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1) (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) -1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fabs.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (*.f64 (log.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 x y) (/.f64 1 (-.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (*.f64 (cbrt.f64 (+.f64 x y)) (/.f64 1 (-.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) (sqrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 x y)) (*.f64 (sqrt.f64 (+.f64 x y)) (/.f64 1 (-.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (+.f64 x y)) (/.f64 1 (neg.f64 (-.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 x y)) (+.f64 x y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) 1) (/.f64 (cbrt.f64 (+.f64 x y)) (-.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (+.f64 x y)) 1) (/.f64 (sqrt.f64 (+.f64 x y)) (-.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (+.f64 x y) (cbrt.f64 (-.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (+.f64 x y)) (cbrt.f64 (pow.f64 (-.f64 x y) 2))) (/.f64 (sqrt.f64 (+.f64 x y)) (cbrt.f64 (-.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (-.f64 x y))) (/.f64 (+.f64 x y) (sqrt.f64 (-.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (sqrt.f64 (-.f64 x y))) (/.f64 (cbrt.f64 (+.f64 x y)) (sqrt.f64 (-.f64 x y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 x y) (-.f64 (*.f64 x x) (*.f64 y y))) (+.f64 x y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 x y) (-.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 y (+.f64 x y) (*.f64 x x)) -1)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)) (*.f64 -1 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)) (*.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (/.f64 (+.f64 x y) (-.f64 x y))) (*.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) -1) (*.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3))) (cbrt.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 2) (*.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 4)) (*.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) (*.f64 (sqrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3/2) (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) (cbrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 4))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 2)) (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (sqrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))) (sqrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 -1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3)) 3) (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (-.f64 1 (/.f64 (*.f64 (+.f64 x y) -1) (-.f64 x y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) -1) 3) (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3)) (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)) (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (-.f64 1 (/.f64 (*.f64 (+.f64 x y) -1) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) -1) (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (+.f64 -1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3))) (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (-.f64 1 (/.f64 (*.f64 (+.f64 x y) -1) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) -1)) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 6))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 3 (log.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (*.f64 -1 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (*.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (/.f64 (+.f64 x y) (-.f64 x y)) (*.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) -1 (*.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (/.f64 (+.f64 x y) (-.f64 x y))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) (*.f64 -1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) (*.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) (/.f64 (+.f64 x y) (-.f64 x y))) (*.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) -1) (*.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) (/.f64 (+.f64 x y) (-.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2))) (cbrt.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2))))) (log.f64 (cbrt.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)))) (log.f64 (sqrt.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 2) (cbrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 2) (*.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 4)) (pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3/2) (sqrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) (pow.f64 (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) 2)) (cbrt.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3)) (+.f64 -1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3))) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (-.f64 1 (/.f64 (*.f64 (+.f64 x y) -1) (-.f64 x y)))) (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (-.f64 1 (/.f64 (*.f64 (+.f64 x y) -1) (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) -1) (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) -1)) (*.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) -1) (+.f64 -1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3))) (*.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1) (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (-.f64 1 (/.f64 (*.f64 (+.f64 x y) -1) (-.f64 x y))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3)) (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) -1)) (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (-.f64 1 (/.f64 (*.f64 (+.f64 x y) -1) (-.f64 x y)))) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 -1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3)) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (-.f64 1 (/.f64 (*.f64 (+.f64 x y) -1) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) -1) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) (+.f64 -1 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 3))) (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) (-.f64 1 (/.f64 (*.f64 (+.f64 x y) -1) (-.f64 x y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) (+.f64 (pow.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2) -1)) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 2 (log.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 2 (log.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) (*.f64 -1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) (*.f64 (/.f64 (+.f64 x y) (-.f64 x y)) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) (/.f64 (+.f64 x y) (-.f64 x y)) (*.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) -1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) -1 (*.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) (/.f64 (+.f64 x y) (-.f64 x y))))))))"]],"rules":[["egg-rr",37],["egg-rr",37],["egg-rr",55]],"stop":[["node limit",1]],"time":58.32080078125,"type":"rewrite"},{"count":[[201,229]],"egraph":[[2,4833,2236,0.022867584],[1,1202,2649,0.008596834],[0,346,3183,0.001739375]],"inputs":[["-2","(-.f64 (*.f64 -2 (/.f64 x y)) 2)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 2)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 2)","(/.f64 (-.f64 y (*.f64 -1 y)) x)","(-.f64 (+.f64 (/.f64 y x) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 -1 (/.f64 y x)))","(/.f64 (-.f64 y (*.f64 -1 y)) x)","(-.f64 (+.f64 (/.f64 y x) (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 y (*.f64 -1 y))) (pow.f64 x 4)) (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(*.f64 2 (/.f64 y x))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 y x)))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 y x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 y x)))))","-2","(-.f64 (*.f64 -1 (/.f64 x y)) (+.f64 2 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) (+.f64 2 (/.f64 x y)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) (+.f64 2 (/.f64 x y)))","-2","(-.f64 (*.f64 -2 (/.f64 x y)) 2)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 2))","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3))) (pow.f64 y 3))))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 2))","-8","(-.f64 (*.f64 -24 (/.f64 x y)) 8)","(-.f64 (+.f64 (*.f64 -24 (/.f64 x y)) (*.f64 -48 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 8)","(-.f64 (+.f64 (*.f64 -80 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -24 (/.f64 x y)) (*.f64 -48 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))) 8)","(/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 3) (pow.f64 x 3))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 3) (pow.f64 x 3))))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 y 3) (-.f64 y (*.f64 -1 y)))) (*.f64 4 (pow.f64 y 4))) (-.f64 y (*.f64 -1 y))) (pow.f64 x 5)) (+.f64 (*.f64 8 (/.f64 (*.f64 (pow.f64 y 4) (-.f64 y (*.f64 -1 y))) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 5))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 3) (pow.f64 x 3)))))))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 8 (pow.f64 y 5)) (*.f64 4 (*.f64 (pow.f64 y 4) (-.f64 y (*.f64 -1 y))))) (-.f64 y (*.f64 -1 y))) (pow.f64 x 6)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 y 3) (-.f64 y (*.f64 -1 y)))) (*.f64 4 (pow.f64 y 4))) (-.f64 y (*.f64 -1 y))) (pow.f64 x 5)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 4 (*.f64 (pow.f64 y 3) (-.f64 y (*.f64 -1 y)))) (*.f64 4 (pow.f64 y 4)))) (pow.f64 x 6))) (+.f64 (*.f64 8 (/.f64 (*.f64 (pow.f64 y 4) (-.f64 y (*.f64 -1 y))) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 6))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 5))) (+.f64 (*.f64 8 (/.f64 (*.f64 (pow.f64 y 5) (-.f64 y (*.f64 -1 y))) (pow.f64 x 6))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 3) (pow.f64 x 3)))))))))))","(/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 3) (pow.f64 x 3))","(+.f64 (*.f64 2 (/.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (pow.f64 x 4))) (+.f64 (/.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (pow.f64 x 4)) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 3) (pow.f64 x 3))))","(+.f64 (*.f64 2 (/.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (pow.f64 x 4))) (+.f64 (/.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (pow.f64 x 4)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2))) (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2))) (-.f64 y (*.f64 -1 y)))) (*.f64 -1 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 3))))) (pow.f64 x 5))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 3) (pow.f64 x 3)))))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (pow.f64 x 6)) (+.f64 (*.f64 2 (/.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (pow.f64 x 4))) (+.f64 (/.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (pow.f64 x 4)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (pow.f64 x 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2))) (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2))) (-.f64 y (*.f64 -1 y)))) (*.f64 -1 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 3))))) (pow.f64 x 5))) (+.f64 (/.f64 (*.f64 y (*.f64 (-.f64 y (*.f64 -1 y)) (+.f64 (*.f64 2 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2))) (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2))))) (pow.f64 x 6)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (pow.f64 x 6))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 3) (pow.f64 x 3)))))))))","(*.f64 8 (/.f64 (pow.f64 y 3) (pow.f64 x 3)))","(+.f64 (*.f64 24 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 8 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))","(+.f64 (*.f64 24 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 8 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 48 (/.f64 (pow.f64 y 5) (pow.f64 x 5)))))","(+.f64 (*.f64 24 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 8 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 80 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (*.f64 48 (/.f64 (pow.f64 y 5) (pow.f64 x 5))))))","-8","(-.f64 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (*.f64 4 (/.f64 (-.f64 (*.f64 -1 x) x) y))) 8)","(-.f64 (+.f64 (*.f64 4 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 8 (pow.f64 x 2)) (pow.f64 (-.f64 (*.f64 -1 x) x) 2)) (pow.f64 y 2))) (+.f64 (*.f64 -8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -4 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) x) 2) (pow.f64 y 2))))))) 8)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 8 (pow.f64 x 3)) (*.f64 -4 (*.f64 (-.f64 (*.f64 -1 x) x) (pow.f64 x 2)))) (pow.f64 y 3))) (+.f64 (*.f64 4 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 (*.f64 -8 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 8 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) (pow.f64 x 2)) (pow.f64 y 3))) (+.f64 (*.f64 -4 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) x) 2) (pow.f64 y 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 8 (pow.f64 x 2)) (pow.f64 (-.f64 (*.f64 -1 x) x) 2)) (-.f64 (*.f64 -1 x) x)) (pow.f64 y 3)) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 8 (pow.f64 x 2)) (pow.f64 (-.f64 (*.f64 -1 x) x) 2)) (pow.f64 y 2))) (*.f64 -8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))))))) 8)","-8","(-.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 16 x) (*.f64 8 x)) y)) 8)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (*.f64 -4 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 16 x) (*.f64 8 x)) y)) (+.f64 (*.f64 -16 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 4 (/.f64 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)) (pow.f64 y 2)))))) 8)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (*.f64 -4 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 16 x) (*.f64 8 x)) y)) (+.f64 (*.f64 4 (/.f64 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)) (pow.f64 y 2))) (+.f64 (*.f64 -16 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (+.f64 (*.f64 -4 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3)))) (*.f64 4 (*.f64 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)) x)))) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (*.f64 -4 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)))) x)) (+.f64 (*.f64 -8 (*.f64 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)) x)) (*.f64 4 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3))))))) (pow.f64 y 3))))))) 8)","4","(+.f64 4 (*.f64 8 (/.f64 x y)))","(+.f64 4 (+.f64 (*.f64 8 (/.f64 x y)) (*.f64 12 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 4 (+.f64 (*.f64 8 (/.f64 x y)) (+.f64 (*.f64 12 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 16 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 2) (pow.f64 x 2))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 2) (pow.f64 x 2)))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 y (*.f64 -1 y))) (pow.f64 x 4))) (+.f64 (*.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 2) (pow.f64 x 2)))))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 4) (-.f64 y (*.f64 -1 y))) (pow.f64 x 5))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 y (*.f64 -1 y))) (pow.f64 x 4))) (+.f64 (*.f64 8 (/.f64 (pow.f64 y 5) (pow.f64 x 5))) (+.f64 (*.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 2) (pow.f64 x 2)))))))","(/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 2) (pow.f64 x 2))","(+.f64 (*.f64 2 (/.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 3))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 2) (pow.f64 x 2)))","(+.f64 (*.f64 2 (/.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 2) (pow.f64 x 2)))))","(+.f64 (*.f64 2 (/.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 2) (pow.f64 x 2))))))","(*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(+.f64 (*.f64 8 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(+.f64 (*.f64 8 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 12 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 (*.f64 8 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 12 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 16 (/.f64 (pow.f64 y 5) (pow.f64 x 5))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","4","(+.f64 (*.f64 -4 (/.f64 (-.f64 (*.f64 -1 x) x) y)) 4)","(+.f64 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) x) 2) (pow.f64 y 2)) (+.f64 (*.f64 -4 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 4 (*.f64 8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","(+.f64 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) x) 2) (pow.f64 y 2)) (+.f64 (*.f64 -4 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 (*.f64 8 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 4 (+.f64 (*.f64 -4 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) (pow.f64 x 2)) (pow.f64 y 3))) (*.f64 8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))))","4","(+.f64 4 (*.f64 8 (/.f64 x y)))","(+.f64 4 (+.f64 (*.f64 8 (/.f64 x y)) (+.f64 (*.f64 4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -4 (/.f64 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)) (pow.f64 y 2))))))","(+.f64 4 (+.f64 (*.f64 8 (/.f64 x y)) (+.f64 (*.f64 4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3)))) (*.f64 4 (*.f64 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)) x))) (pow.f64 y 3))) (*.f64 -4 (/.f64 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)) (pow.f64 y 2)))))))"]],"method":["egg-herbie"],"outputs":[["-2","(-.f64 (*.f64 -2 (/.f64 x y)) 2)","(fma.f64 -2 (/.f64 x y) -2)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 2)","(+.f64 (*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y)))) -2)","(fma.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) -2)","(fma.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) -2)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) 2)","(+.f64 (fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) -2)","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -2))","(fma.f64 -2 (+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (pow.f64 (/.f64 x y) 3)) -2)","(/.f64 (-.f64 y (*.f64 -1 y)) x)","(/.f64 (-.f64 y (neg.f64 y)) x)","(*.f64 2 (/.f64 y x))","(-.f64 (+.f64 (/.f64 y x) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 (*.f64 2 (/.f64 (*.f64 y y) (*.f64 x x))) (/.f64 (neg.f64 y) x)))","(*.f64 2 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))))","(*.f64 2 (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x))))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (*.f64 y y) (*.f64 x x)))) (/.f64 (neg.f64 y) x)))","(*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x)))))","(*.f64 2 (+.f64 (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x))) (pow.f64 (/.f64 y x) 3)))","(-.f64 (+.f64 (/.f64 y x) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (*.f64 y y) (*.f64 x x))))) (/.f64 (neg.f64 y) x)))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))))))","(*.f64 2 (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (+.f64 (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x))) (pow.f64 (/.f64 y x) 3))))","(/.f64 (-.f64 y (*.f64 -1 y)) x)","(/.f64 (-.f64 y (neg.f64 y)) x)","(*.f64 2 (/.f64 y x))","(-.f64 (+.f64 (/.f64 y x) (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 (*.f64 2 (/.f64 (*.f64 y y) (*.f64 x x))) (/.f64 (neg.f64 y) x)))","(*.f64 2 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))))","(*.f64 2 (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x))))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 (/.f64 y x) (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2)))) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (*.f64 y y) (*.f64 x x)))) (/.f64 (neg.f64 y) x)))","(*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x)))))","(*.f64 2 (+.f64 (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x))) (pow.f64 (/.f64 y x) 3)))","(-.f64 (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3)) (+.f64 (/.f64 y x) (+.f64 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 y (*.f64 -1 y))) (pow.f64 x 4)) (/.f64 (*.f64 y (-.f64 y (*.f64 -1 y))) (pow.f64 x 2))))) (*.f64 -1 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (*.f64 y y) (*.f64 x x))))) (/.f64 (neg.f64 y) x)))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))))))","(*.f64 2 (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (+.f64 (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x))) (pow.f64 (/.f64 y x) 3))))","(*.f64 2 (/.f64 y x))","(/.f64 (-.f64 y (neg.f64 y)) x)","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 y x)))","(+.f64 (/.f64 y x) (-.f64 (*.f64 2 (/.f64 (*.f64 y y) (*.f64 x x))) (/.f64 (neg.f64 y) x)))","(*.f64 2 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))))","(*.f64 2 (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 y x))))","(+.f64 (/.f64 y x) (-.f64 (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (*.f64 y y) (*.f64 x x)))) (/.f64 (neg.f64 y) x)))","(*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x)))))","(*.f64 2 (+.f64 (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x))) (pow.f64 (/.f64 y x) 3)))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 2 (/.f64 y x)))))","(+.f64 (/.f64 y x) (-.f64 (fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (*.f64 y y) (*.f64 x x))))) (/.f64 (neg.f64 y) x)))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))))))","(*.f64 2 (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (+.f64 (*.f64 (/.f64 y x) (+.f64 1 (/.f64 y x))) (pow.f64 (/.f64 y x) 3))))","-2","(-.f64 (*.f64 -1 (/.f64 x y)) (+.f64 2 (/.f64 x y)))","(fma.f64 -2 (/.f64 x y) -2)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 x y))) (+.f64 2 (/.f64 x y)))","(+.f64 (*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y)))) -2)","(fma.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) -2)","(fma.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) -2)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -1 (/.f64 x y)))) (+.f64 2 (/.f64 x y)))","(+.f64 (fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) -2)","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -2))","(fma.f64 -2 (+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (pow.f64 (/.f64 x y) 3)) -2)","-2","(-.f64 (*.f64 -2 (/.f64 x y)) 2)","(fma.f64 -2 (/.f64 x y) -2)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 2))","(+.f64 (*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y)))) -2)","(fma.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) -2)","(fma.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) -2)","(-.f64 (+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3))) (pow.f64 y 3))))) (+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) 2))","(+.f64 (fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))) -2)","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -2))","(fma.f64 -2 (+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (pow.f64 (/.f64 x y) 3)) -2)","-8","(-.f64 (*.f64 -24 (/.f64 x y)) 8)","(fma.f64 -24 (/.f64 x y) -8)","(fma.f64 (/.f64 x y) -24 -8)","(-.f64 (+.f64 (*.f64 -24 (/.f64 x y)) (*.f64 -48 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))) 8)","(+.f64 (fma.f64 -24 (/.f64 x y) (*.f64 (/.f64 (*.f64 x x) (*.f64 y y)) -48)) -8)","(fma.f64 (/.f64 x y) -24 (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) -48 -8))","(-.f64 (+.f64 (*.f64 -80 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 -24 (/.f64 x y)) (*.f64 -48 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))) 8)","(+.f64 (fma.f64 -80 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (fma.f64 -24 (/.f64 x y) (*.f64 (/.f64 (*.f64 x x) (*.f64 y y)) -48))) -8)","(fma.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) -80 (fma.f64 (/.f64 x y) -24 (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) -48 -8)))","(fma.f64 (pow.f64 (/.f64 x y) 3) -80 (fma.f64 (/.f64 x y) -24 (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) -48 -8)))","(/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 3) (pow.f64 x 3))","(/.f64 (pow.f64 (-.f64 y (neg.f64 y)) 3) (pow.f64 x 3))","(/.f64 (pow.f64 (+.f64 y y) 3) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) 8)","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 3) (pow.f64 x 3))))","(fma.f64 4 (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 y (neg.f64 y)) 2))) (fma.f64 2 (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 y (neg.f64 y)) 2))) (/.f64 (pow.f64 (-.f64 y (neg.f64 y)) 3) (pow.f64 x 3))))","(+.f64 (/.f64 (pow.f64 (+.f64 y y) 3) (pow.f64 x 3)) (*.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 x 4)) (pow.f64 (+.f64 y y) 2)) 6))","(+.f64 (*.f64 (pow.f64 (/.f64 y x) 3) 8) (*.f64 (*.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) 6))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 y 3) (-.f64 y (*.f64 -1 y)))) (*.f64 4 (pow.f64 y 4))) (-.f64 y (*.f64 -1 y))) (pow.f64 x 5)) (+.f64 (*.f64 8 (/.f64 (*.f64 (pow.f64 y 4) (-.f64 y (*.f64 -1 y))) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 5))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 3) (pow.f64 x 3)))))))","(fma.f64 4 (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 y (neg.f64 y)) 2))) (+.f64 (/.f64 (*.f64 4 (+.f64 (*.f64 (pow.f64 y 3) (-.f64 y (neg.f64 y))) (pow.f64 y 4))) (/.f64 (pow.f64 x 5) (-.f64 y (neg.f64 y)))) (fma.f64 8 (/.f64 (pow.f64 y 4) (/.f64 (pow.f64 x 5) (-.f64 y (neg.f64 y)))) (fma.f64 2 (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 y (neg.f64 y)) 2))) (fma.f64 2 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 x 5) (pow.f64 (-.f64 y (neg.f64 y)) 2))) (/.f64 (pow.f64 (-.f64 y (neg.f64 y)) 3) (pow.f64 x 3)))))))","(+.f64 (+.f64 (+.f64 (/.f64 (pow.f64 (+.f64 y y) 3) (pow.f64 x 3)) (/.f64 (*.f64 y (*.f64 y (pow.f64 (+.f64 y y) 3))) (pow.f64 x 5))) (fma.f64 8 (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 5)) (+.f64 y y)) (*.f64 (/.f64 y (pow.f64 x 4)) (pow.f64 (+.f64 y y) 3)))) (fma.f64 4 (*.f64 (/.f64 (*.f64 y y) (pow.f64 x 4)) (pow.f64 (+.f64 y y) 2)) (*.f64 (/.f64 (*.f64 4 (+.f64 (pow.f64 y 4) (*.f64 2 (pow.f64 y 4)))) (pow.f64 x 5)) (+.f64 y y))))","(+.f64 (fma.f64 8 (/.f64 (*.f64 2 (pow.f64 y 5)) (pow.f64 x 5)) (+.f64 (*.f64 (pow.f64 (/.f64 y x) 3) 8) (*.f64 4 (*.f64 (+.f64 y y) (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 5)) (/.f64 (pow.f64 y 3) (pow.f64 x 4))))))) (fma.f64 4 (*.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (/.f64 (*.f64 3 (*.f64 4 (*.f64 2 (pow.f64 y 5)))) (pow.f64 x 5))))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 8 (pow.f64 y 5)) (*.f64 4 (*.f64 (pow.f64 y 4) (-.f64 y (*.f64 -1 y))))) (-.f64 y (*.f64 -1 y))) (pow.f64 x 6)) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 4 (*.f64 (pow.f64 y 3) (-.f64 y (*.f64 -1 y)))) (*.f64 4 (pow.f64 y 4))) (-.f64 y (*.f64 -1 y))) (pow.f64 x 5)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 2) (+.f64 (*.f64 4 (*.f64 (pow.f64 y 3) (-.f64 y (*.f64 -1 y)))) (*.f64 4 (pow.f64 y 4)))) (pow.f64 x 6))) (+.f64 (*.f64 8 (/.f64 (*.f64 (pow.f64 y 4) (-.f64 y (*.f64 -1 y))) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 4) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 6))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 5))) (+.f64 (*.f64 8 (/.f64 (*.f64 (pow.f64 y 5) (-.f64 y (*.f64 -1 y))) (pow.f64 x 6))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 3) (pow.f64 x 3)))))))))))","(fma.f64 4 (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 y (neg.f64 y)) 2))) (+.f64 (+.f64 (/.f64 (fma.f64 8 (pow.f64 y 5) (*.f64 4 (*.f64 (-.f64 y (neg.f64 y)) (pow.f64 y 4)))) (/.f64 (pow.f64 x 6) (-.f64 y (neg.f64 y)))) (/.f64 (*.f64 4 (+.f64 (*.f64 (pow.f64 y 3) (-.f64 y (neg.f64 y))) (pow.f64 y 4))) (/.f64 (pow.f64 x 5) (-.f64 y (neg.f64 y))))) (fma.f64 2 (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 6) (*.f64 4 (+.f64 (*.f64 (pow.f64 y 3) (-.f64 y (neg.f64 y))) (pow.f64 y 4))))) (fma.f64 8 (/.f64 (pow.f64 y 4) (/.f64 (pow.f64 x 5) (-.f64 y (neg.f64 y)))) (fma.f64 2 (/.f64 (pow.f64 y 4) (/.f64 (pow.f64 x 6) (pow.f64 (-.f64 y (neg.f64 y)) 2))) (fma.f64 2 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 x 5) (pow.f64 (-.f64 y (neg.f64 y)) 2))) (fma.f64 8 (/.f64 (pow.f64 y 5) (/.f64 (pow.f64 x 6) (-.f64 y (neg.f64 y)))) (fma.f64 2 (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 y (neg.f64 y)) 2))) (/.f64 (pow.f64 (-.f64 y (neg.f64 y)) 3) (pow.f64 x 3))))))))))","(+.f64 (+.f64 (*.f64 (/.f64 (*.f64 4 (+.f64 (pow.f64 y 4) (*.f64 2 (pow.f64 y 4)))) (pow.f64 x 5)) (+.f64 y y)) (fma.f64 2 (*.f64 (/.f64 (*.f64 y y) (pow.f64 x 6)) (*.f64 4 (+.f64 (pow.f64 y 4) (*.f64 2 (pow.f64 y 4))))) (+.f64 (+.f64 (fma.f64 8 (*.f64 (/.f64 (pow.f64 y 5) (pow.f64 x 6)) (+.f64 y y)) (*.f64 (/.f64 y (pow.f64 x 4)) (pow.f64 (+.f64 y y) 3))) (+.f64 (/.f64 (pow.f64 (+.f64 y y) 3) (pow.f64 x 3)) (/.f64 (*.f64 y (*.f64 y (pow.f64 (+.f64 y y) 3))) (pow.f64 x 5)))) (fma.f64 8 (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 5)) (+.f64 y y)) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 6)) (pow.f64 (+.f64 y y) 3)))))) (fma.f64 4 (*.f64 (/.f64 (*.f64 y y) (pow.f64 x 4)) (pow.f64 (+.f64 y y) 2)) (/.f64 (+.f64 y y) (/.f64 (pow.f64 x 6) (fma.f64 4 (*.f64 (+.f64 y y) (pow.f64 y 4)) (*.f64 8 (pow.f64 y 5)))))))","(fma.f64 4 (*.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (+.f64 (fma.f64 8 (/.f64 (*.f64 2 (pow.f64 y 5)) (pow.f64 x 5)) (+.f64 (fma.f64 8 (/.f64 (*.f64 2 (pow.f64 y 6)) (pow.f64 x 6)) (*.f64 4 (*.f64 2 (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (pow.f64 (/.f64 y x) 3))))) (fma.f64 2 (/.f64 (*.f64 4 (pow.f64 y 6)) (pow.f64 x 6)) (*.f64 (/.f64 4 (pow.f64 x 5)) (*.f64 2 (pow.f64 y 5)))))) (*.f64 (/.f64 y (pow.f64 x 6)) (*.f64 3 (*.f64 4 (*.f64 2 (pow.f64 y 5)))))) (*.f64 (+.f64 y y) (+.f64 (/.f64 (*.f64 3 (*.f64 4 (pow.f64 y 4))) (pow.f64 x 5)) (/.f64 (fma.f64 4 (*.f64 2 (pow.f64 y 5)) (*.f64 8 (pow.f64 y 5))) (pow.f64 x 6))))))","(/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 3) (pow.f64 x 3))","(/.f64 (pow.f64 (-.f64 y (neg.f64 y)) 3) (pow.f64 x 3))","(/.f64 (pow.f64 (+.f64 y y) 3) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) 8)","(+.f64 (*.f64 2 (/.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (pow.f64 x 4))) (+.f64 (/.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (pow.f64 x 4)) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 3) (pow.f64 x 3))))","(fma.f64 4 (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 y (neg.f64 y)) 2))) (fma.f64 2 (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 y (neg.f64 y)) 2))) (/.f64 (pow.f64 (-.f64 y (neg.f64 y)) 3) (pow.f64 x 3))))","(+.f64 (/.f64 (pow.f64 (+.f64 y y) 3) (pow.f64 x 3)) (*.f64 (*.f64 (/.f64 (*.f64 y y) (pow.f64 x 4)) (pow.f64 (+.f64 y y) 2)) 6))","(+.f64 (*.f64 (pow.f64 (/.f64 y x) 3) 8) (*.f64 (*.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) 6))","(+.f64 (*.f64 2 (/.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (pow.f64 x 4))) (+.f64 (/.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (pow.f64 x 4)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2))) (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2))) (-.f64 y (*.f64 -1 y)))) (*.f64 -1 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 3))))) (pow.f64 x 5))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 3) (pow.f64 x 3)))))","(fma.f64 2 (/.f64 y (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 y (neg.f64 y)) 3))) (+.f64 (/.f64 y (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 y (neg.f64 y)) 3))) (fma.f64 -1 (/.f64 (fma.f64 -2 (*.f64 (*.f64 y y) (pow.f64 (-.f64 y (neg.f64 y)) 3)) (*.f64 -1 (+.f64 (*.f64 (-.f64 y (neg.f64 y)) (*.f64 3 (*.f64 (*.f64 y y) (pow.f64 (-.f64 y (neg.f64 y)) 2)))) (*.f64 (*.f64 y y) (pow.f64 (-.f64 y (neg.f64 y)) 3))))) (pow.f64 x 5)) (/.f64 (pow.f64 (-.f64 y (neg.f64 y)) 3) (pow.f64 x 3)))))","(+.f64 (-.f64 (/.f64 (pow.f64 (+.f64 y y) 3) (pow.f64 x 3)) (/.f64 (-.f64 (-.f64 (*.f64 -2 (*.f64 y (*.f64 y (pow.f64 (+.f64 y y) 3)))) (*.f64 3 (*.f64 y (*.f64 y (pow.f64 (+.f64 y y) 3))))) (*.f64 y (*.f64 y (pow.f64 (+.f64 y y) 3)))) (pow.f64 x 5))) (*.f64 3 (*.f64 (/.f64 y (pow.f64 x 4)) (pow.f64 (+.f64 y y) 3))))","(+.f64 (-.f64 (*.f64 (pow.f64 (/.f64 y x) 3) 8) (/.f64 (-.f64 (*.f64 (*.f64 4 (*.f64 2 (pow.f64 y 5))) -5) (*.f64 4 (*.f64 2 (pow.f64 y 5)))) (pow.f64 x 5))) (*.f64 (*.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) 6))","(+.f64 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (pow.f64 x 6)) (+.f64 (*.f64 2 (/.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (pow.f64 x 4))) (+.f64 (/.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (pow.f64 x 4)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (pow.f64 x 6))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 3))) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 2 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2))) (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2))) (-.f64 y (*.f64 -1 y)))) (*.f64 -1 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 3))))) (pow.f64 x 5))) (+.f64 (/.f64 (*.f64 y (*.f64 (-.f64 y (*.f64 -1 y)) (+.f64 (*.f64 2 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2))) (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2))))) (pow.f64 x 6)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 y (*.f64 -1 y)) 3)) (pow.f64 x 6))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 3) (pow.f64 x 3)))))))))","(+.f64 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 x 6) (pow.f64 (-.f64 y (neg.f64 y)) 3))) (fma.f64 2 (/.f64 y (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 y (neg.f64 y)) 3))) (+.f64 (/.f64 y (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 y (neg.f64 y)) 3))) (fma.f64 4 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 x 6) (pow.f64 (-.f64 y (neg.f64 y)) 3))) (fma.f64 -1 (/.f64 (fma.f64 -2 (*.f64 (*.f64 y y) (pow.f64 (-.f64 y (neg.f64 y)) 3)) (*.f64 -1 (+.f64 (*.f64 (-.f64 y (neg.f64 y)) (*.f64 3 (*.f64 (*.f64 y y) (pow.f64 (-.f64 y (neg.f64 y)) 2)))) (*.f64 (*.f64 y y) (pow.f64 (-.f64 y (neg.f64 y)) 3))))) (pow.f64 x 5)) (+.f64 (/.f64 (*.f64 y (*.f64 (-.f64 y (neg.f64 y)) (*.f64 3 (*.f64 (*.f64 y y) (pow.f64 (-.f64 y (neg.f64 y)) 2))))) (pow.f64 x 6)) (fma.f64 2 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 x 6) (pow.f64 (-.f64 y (neg.f64 y)) 3))) (/.f64 (pow.f64 (-.f64 y (neg.f64 y)) 3) (pow.f64 x 3)))))))))","(+.f64 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 6)) (pow.f64 (+.f64 y y) 3)) (+.f64 (fma.f64 4 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 6)) (pow.f64 (+.f64 y y) 3)) (-.f64 (+.f64 (*.f64 (/.f64 y (pow.f64 x 6)) (*.f64 3 (*.f64 y (*.f64 y (pow.f64 (+.f64 y y) 3))))) (fma.f64 2 (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 6)) (pow.f64 (+.f64 y y) 3)) (/.f64 (pow.f64 (+.f64 y y) 3) (pow.f64 x 3)))) (/.f64 (-.f64 (-.f64 (*.f64 -2 (*.f64 y (*.f64 y (pow.f64 (+.f64 y y) 3)))) (*.f64 3 (*.f64 y (*.f64 y (pow.f64 (+.f64 y y) 3))))) (*.f64 y (*.f64 y (pow.f64 (+.f64 y y) 3)))) (pow.f64 x 5)))) (*.f64 3 (*.f64 (/.f64 y (pow.f64 x 4)) (pow.f64 (+.f64 y y) 3)))))","(+.f64 (*.f64 (/.f64 2 (pow.f64 x 6)) (*.f64 4 (pow.f64 y 6))) (+.f64 (fma.f64 4 (*.f64 (/.f64 2 (pow.f64 x 6)) (*.f64 4 (pow.f64 y 6))) (+.f64 (*.f64 (/.f64 y (pow.f64 x 6)) (*.f64 3 (*.f64 4 (*.f64 2 (pow.f64 y 5))))) (-.f64 (fma.f64 2 (*.f64 (/.f64 2 (pow.f64 x 6)) (*.f64 4 (pow.f64 y 6))) (*.f64 (pow.f64 (/.f64 y x) 3) 8)) (/.f64 (-.f64 (*.f64 (*.f64 4 (*.f64 2 (pow.f64 y 5))) -5) (*.f64 4 (*.f64 2 (pow.f64 y 5)))) (pow.f64 x 5))))) (*.f64 (*.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) 6)))","(*.f64 8 (/.f64 (pow.f64 y 3) (pow.f64 x 3)))","(/.f64 (pow.f64 (-.f64 y (neg.f64 y)) 3) (pow.f64 x 3))","(/.f64 (pow.f64 (+.f64 y y) 3) (pow.f64 x 3))","(*.f64 (pow.f64 (/.f64 y x) 3) 8)","(+.f64 (*.f64 24 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 8 (/.f64 (pow.f64 y 3) (pow.f64 x 3))))","(fma.f64 24 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) 8))","(fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) 8 (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 24))","(fma.f64 (pow.f64 (/.f64 y x) 3) 8 (*.f64 (/.f64 24 (pow.f64 x 4)) (pow.f64 y 4)))","(+.f64 (*.f64 24 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 8 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 48 (/.f64 (pow.f64 y 5) (pow.f64 x 5)))))","(fma.f64 24 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 8 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 (*.f64 48 (pow.f64 y 5)) (pow.f64 x 5))))","(fma.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 24 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) 8 (*.f64 48 (/.f64 (pow.f64 y 5) (pow.f64 x 5)))))","(fma.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 24 (fma.f64 (pow.f64 (/.f64 y x) 3) 8 (*.f64 (/.f64 48 (pow.f64 x 5)) (pow.f64 y 5))))","(+.f64 (*.f64 24 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 8 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 80 (/.f64 (pow.f64 y 6) (pow.f64 x 6))) (*.f64 48 (/.f64 (pow.f64 y 5) (pow.f64 x 5))))))","(fma.f64 24 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 8 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 80 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (/.f64 (*.f64 48 (pow.f64 y 5)) (pow.f64 x 5)))))","(fma.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 24 (fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) 8 (fma.f64 48 (/.f64 (pow.f64 y 5) (pow.f64 x 5)) (*.f64 80 (/.f64 (pow.f64 y 6) (pow.f64 x 6))))))","(fma.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 24 (fma.f64 (pow.f64 (/.f64 y x) 3) 8 (fma.f64 80 (/.f64 (pow.f64 y 6) (pow.f64 x 6)) (*.f64 (/.f64 48 (pow.f64 x 5)) (pow.f64 y 5)))))","-8","(-.f64 (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (*.f64 4 (/.f64 (-.f64 (*.f64 -1 x) x) y))) 8)","(+.f64 (*.f64 (/.f64 (-.f64 (neg.f64 x) x) y) 12) -8)","(fma.f64 (*.f64 -2 (/.f64 x y)) 12 -8)","(-.f64 (+.f64 (*.f64 4 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 8 (pow.f64 x 2)) (pow.f64 (-.f64 (*.f64 -1 x) x) 2)) (pow.f64 y 2))) (+.f64 (*.f64 -8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -4 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) x) 2) (pow.f64 y 2))))))) 8)","(+.f64 (+.f64 (*.f64 (/.f64 (-.f64 (neg.f64 x) x) y) 12) (fma.f64 -2 (/.f64 (fma.f64 8 (*.f64 x x) (pow.f64 (-.f64 (neg.f64 x) x) 2)) (*.f64 y y)) (fma.f64 -8 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (*.f64 -4 (pow.f64 (-.f64 (neg.f64 x) x) 2)) (*.f64 y y))))) -8)","(+.f64 -8 (fma.f64 (*.f64 -2 (/.f64 x y)) 12 (fma.f64 -2 (/.f64 (fma.f64 (*.f64 x x) 8 (pow.f64 (*.f64 -2 x) 2)) (*.f64 y y)) (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) -8 (*.f64 (/.f64 -4 y) (/.f64 (pow.f64 (*.f64 -2 x) 2) y))))))","(+.f64 -8 (fma.f64 (*.f64 -2 (/.f64 x y)) 12 (fma.f64 -2 (/.f64 (fma.f64 (*.f64 x x) 8 (*.f64 x (*.f64 x 4))) (*.f64 y y)) (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) -8 (*.f64 (/.f64 -4 y) (/.f64 (*.f64 x (*.f64 x 4)) y))))))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 8 (pow.f64 x 3)) (*.f64 -4 (*.f64 (-.f64 (*.f64 -1 x) x) (pow.f64 x 2)))) (pow.f64 y 3))) (+.f64 (*.f64 4 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 (*.f64 8 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 (*.f64 -8 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 (*.f64 8 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) (pow.f64 x 2)) (pow.f64 y 3))) (+.f64 (*.f64 -4 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) x) 2) (pow.f64 y 2))) (+.f64 (/.f64 (*.f64 (+.f64 (*.f64 8 (pow.f64 x 2)) (pow.f64 (-.f64 (*.f64 -1 x) x) 2)) (-.f64 (*.f64 -1 x) x)) (pow.f64 y 3)) (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 8 (pow.f64 x 2)) (pow.f64 (-.f64 (*.f64 -1 x) x) 2)) (pow.f64 y 2))) (*.f64 -8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))))))) 8)","(+.f64 (fma.f64 -2 (/.f64 (fma.f64 8 (pow.f64 x 3) (*.f64 (*.f64 -4 (-.f64 (neg.f64 x) x)) (*.f64 x x))) (pow.f64 y 3)) (+.f64 (*.f64 (/.f64 (-.f64 (neg.f64 x) x) y) 12) (fma.f64 -8 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (fma.f64 8 (/.f64 (-.f64 (neg.f64 x) x) (/.f64 (pow.f64 y 3) (*.f64 x x))) (fma.f64 -4 (/.f64 (pow.f64 (-.f64 (neg.f64 x) x) 2) (*.f64 y y)) (+.f64 (/.f64 (fma.f64 8 (*.f64 x x) (pow.f64 (-.f64 (neg.f64 x) x) 2)) (/.f64 (pow.f64 y 3) (-.f64 (neg.f64 x) x))) (fma.f64 -2 (/.f64 (fma.f64 8 (*.f64 x x) (pow.f64 (-.f64 (neg.f64 x) x) 2)) (*.f64 y y)) (/.f64 (*.f64 -8 (*.f64 x x)) (*.f64 y y))))))))) -8)","(+.f64 -8 (fma.f64 -2 (/.f64 (fma.f64 (pow.f64 x 3) 8 (*.f64 -4 (*.f64 -2 (pow.f64 x 3)))) (pow.f64 y 3)) (fma.f64 (*.f64 -2 (/.f64 x y)) 12 (fma.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) -8 (fma.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) 8 (+.f64 (fma.f64 -2 (/.f64 (fma.f64 (*.f64 x x) 8 (pow.f64 (*.f64 -2 x) 2)) (*.f64 y y)) (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) -8 (*.f64 (/.f64 -4 y) (/.f64 (pow.f64 (*.f64 -2 x) 2) y)))) (*.f64 (/.f64 (fma.f64 (*.f64 x x) 8 (pow.f64 (*.f64 -2 x) 2)) (pow.f64 y 3)) (*.f64 -2 x))))))))","(+.f64 (fma.f64 (*.f64 -2 (/.f64 x y)) 12 (fma.f64 (pow.f64 (/.f64 x y) 3) -8 (fma.f64 (*.f64 -2 (pow.f64 (/.f64 x y) 3)) 8 (+.f64 (*.f64 (/.f64 (fma.f64 (*.f64 x x) 8 (*.f64 x (*.f64 x 4))) (*.f64 y y)) (fma.f64 -2 (/.f64 x y) -2)) (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) -8 (*.f64 (/.f64 -4 y) (/.f64 (*.f64 x (*.f64 x 4)) y))))))) (fma.f64 -2 (/.f64 (fma.f64 (pow.f64 x 3) 8 (neg.f64 (*.f64 (pow.f64 x 3) -8))) (pow.f64 y 3)) -8))","-8","(-.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 16 x) (*.f64 8 x)) y)) 8)","(fma.f64 -24 (/.f64 x y) -8)","(fma.f64 (/.f64 x y) -24 -8)","(-.f64 (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (*.f64 -4 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 16 x) (*.f64 8 x)) y)) (+.f64 (*.f64 -16 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 4 (/.f64 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)) (pow.f64 y 2)))))) 8)","(+.f64 (fma.f64 -2 (/.f64 (fma.f64 4 (*.f64 x x) (*.f64 -4 (-.f64 (neg.f64 (*.f64 x x)) (*.f64 x x)))) (*.f64 y y)) (fma.f64 -1 (/.f64 (*.f64 x 24) y) (fma.f64 -16 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 4 (/.f64 (-.f64 (neg.f64 (*.f64 x x)) (*.f64 x x)) (*.f64 y y)))))) -8)","(+.f64 -8 (fma.f64 -2 (/.f64 (fma.f64 (*.f64 x x) 4 (*.f64 -4 (*.f64 -2 (*.f64 x x)))) (*.f64 y y)) (-.f64 (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) -16 (*.f64 (*.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y))) 4)) (/.f64 x (/.f64 y 24)))))","(fma.f64 -2 (/.f64 (fma.f64 (*.f64 x x) 4 (*.f64 -8 (*.f64 x (neg.f64 x)))) (*.f64 y y)) (+.f64 (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) -16 (/.f64 (*.f64 (*.f64 x (neg.f64 x)) 8) (*.f64 y y))) (fma.f64 (/.f64 x y) -24 -8)))","(-.f64 (+.f64 (*.f64 -2 (/.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (*.f64 -4 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)))) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 16 x) (*.f64 8 x)) y)) (+.f64 (*.f64 4 (/.f64 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)) (pow.f64 y 2))) (+.f64 (*.f64 -16 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -2 (+.f64 (*.f64 -4 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3)))) (*.f64 4 (*.f64 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)) x)))) (+.f64 (*.f64 2 (*.f64 (+.f64 (*.f64 4 (pow.f64 x 2)) (*.f64 -4 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)))) x)) (+.f64 (*.f64 -8 (*.f64 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)) x)) (*.f64 4 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3))))))) (pow.f64 y 3))))))) 8)","(+.f64 (fma.f64 -2 (/.f64 (fma.f64 4 (*.f64 x x) (*.f64 -4 (-.f64 (neg.f64 (*.f64 x x)) (*.f64 x x)))) (*.f64 y y)) (fma.f64 -1 (/.f64 (*.f64 x 24) y) (fma.f64 4 (/.f64 (-.f64 (neg.f64 (*.f64 x x)) (*.f64 x x)) (*.f64 y y)) (fma.f64 -16 (/.f64 (*.f64 x x) (*.f64 y y)) (neg.f64 (/.f64 (fma.f64 -2 (fma.f64 -4 (-.f64 (pow.f64 x 3) (neg.f64 (pow.f64 x 3))) (*.f64 4 (*.f64 x (-.f64 (neg.f64 (*.f64 x x)) (*.f64 x x))))) (fma.f64 2 (*.f64 x (fma.f64 4 (*.f64 x x) (*.f64 -4 (-.f64 (neg.f64 (*.f64 x x)) (*.f64 x x))))) (fma.f64 -8 (*.f64 x (-.f64 (neg.f64 (*.f64 x x)) (*.f64 x x))) (*.f64 4 (-.f64 (pow.f64 x 3) (neg.f64 (pow.f64 x 3))))))) (pow.f64 y 3))))))) -8)","(+.f64 -8 (fma.f64 -2 (/.f64 (fma.f64 (*.f64 x x) 4 (*.f64 -4 (*.f64 -2 (*.f64 x x)))) (*.f64 y y)) (-.f64 (-.f64 (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) -16 (*.f64 (*.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y))) 4)) (/.f64 (fma.f64 -2 (fma.f64 4 (*.f64 -2 (pow.f64 x 3)) (*.f64 (*.f64 2 (pow.f64 x 3)) -4)) (fma.f64 2 (*.f64 x (fma.f64 (*.f64 x x) 4 (*.f64 -4 (*.f64 -2 (*.f64 x x))))) (fma.f64 4 (*.f64 2 (pow.f64 x 3)) (*.f64 -8 (*.f64 -2 (pow.f64 x 3)))))) (pow.f64 y 3))) (/.f64 x (/.f64 y 24)))))","(fma.f64 -2 (/.f64 (fma.f64 (*.f64 x x) 4 (*.f64 -8 (*.f64 x (neg.f64 x)))) (*.f64 y y)) (+.f64 (-.f64 (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) -16 (/.f64 (*.f64 (*.f64 x (neg.f64 x)) 8) (*.f64 y y))) (/.f64 (fma.f64 -2 (fma.f64 4 (*.f64 -2 (pow.f64 x 3)) (*.f64 (pow.f64 x 3) -8)) (fma.f64 2 (*.f64 x (fma.f64 (*.f64 x x) 4 (*.f64 -8 (*.f64 x (neg.f64 x))))) (fma.f64 -8 (*.f64 -2 (pow.f64 x 3)) (*.f64 (pow.f64 x 3) 8)))) (pow.f64 y 3))) (fma.f64 (/.f64 x y) -24 -8)))","4","(+.f64 4 (*.f64 8 (/.f64 x y)))","(+.f64 4 (/.f64 (*.f64 x 8) y))","(fma.f64 (/.f64 x y) 8 4)","(+.f64 4 (+.f64 (*.f64 8 (/.f64 x y)) (*.f64 12 (/.f64 (pow.f64 x 2) (pow.f64 y 2)))))","(+.f64 4 (fma.f64 8 (/.f64 x y) (/.f64 (*.f64 12 (*.f64 x x)) (*.f64 y y))))","(+.f64 4 (fma.f64 (/.f64 x y) 8 (*.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 12)))","(+.f64 (fma.f64 (/.f64 x y) 8 4) (*.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 12))","(+.f64 4 (+.f64 (*.f64 8 (/.f64 x y)) (+.f64 (*.f64 12 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 16 (/.f64 (pow.f64 x 3) (pow.f64 y 3))))))","(+.f64 4 (fma.f64 8 (/.f64 x y) (fma.f64 12 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) 16))))","(+.f64 4 (fma.f64 (/.f64 x y) 8 (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 12 (*.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) 16))))","(+.f64 (fma.f64 (/.f64 x y) 8 4) (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 12 (*.f64 (pow.f64 (/.f64 x y) 3) 16)))","(/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 2) (pow.f64 x 2))","(/.f64 (pow.f64 (-.f64 y (neg.f64 y)) 2) (*.f64 x x))","(/.f64 (pow.f64 (+.f64 y y) 2) (*.f64 x x))","(/.f64 (*.f64 (*.f64 4 y) y) (*.f64 x x))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 2) (pow.f64 x 2)))","(fma.f64 4 (/.f64 (*.f64 (*.f64 y y) (-.f64 y (neg.f64 y))) (pow.f64 x 3)) (/.f64 (pow.f64 (-.f64 y (neg.f64 y)) 2) (*.f64 x x)))","(fma.f64 4 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (/.f64 (pow.f64 (+.f64 y y) 2) (*.f64 x x)))","(fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 4 (*.f64 (pow.f64 (/.f64 y x) 3) 8))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 y (*.f64 -1 y))) (pow.f64 x 4))) (+.f64 (*.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 2) (pow.f64 x 2)))))","(fma.f64 4 (/.f64 (*.f64 (*.f64 y y) (-.f64 y (neg.f64 y))) (pow.f64 x 3)) (fma.f64 4 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 x 4) (-.f64 y (neg.f64 y)))) (fma.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 (-.f64 y (neg.f64 y)) 2) (*.f64 x x)))))","(+.f64 (fma.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 (+.f64 y y) 2) (*.f64 x x))) (*.f64 4 (*.f64 2 (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 (*.f64 3 (*.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))) (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 4 (*.f64 (pow.f64 (/.f64 y x) 3) 8)))","(+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 2) (-.f64 y (*.f64 -1 y))) (pow.f64 x 3))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 4) (-.f64 y (*.f64 -1 y))) (pow.f64 x 5))) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 3) (-.f64 y (*.f64 -1 y))) (pow.f64 x 4))) (+.f64 (*.f64 8 (/.f64 (pow.f64 y 5) (pow.f64 x 5))) (+.f64 (*.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 2) (pow.f64 x 2)))))))","(fma.f64 4 (/.f64 (*.f64 (*.f64 y y) (-.f64 y (neg.f64 y))) (pow.f64 x 3)) (fma.f64 4 (/.f64 (pow.f64 y 4) (/.f64 (pow.f64 x 5) (-.f64 y (neg.f64 y)))) (fma.f64 4 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 x 4) (-.f64 y (neg.f64 y)))) (fma.f64 8 (/.f64 (pow.f64 y 5) (pow.f64 x 5)) (fma.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 (-.f64 y (neg.f64 y)) 2) (*.f64 x x)))))))","(fma.f64 4 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (fma.f64 4 (*.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 5)) (+.f64 y y)) (fma.f64 4 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (fma.f64 8 (/.f64 (pow.f64 y 5) (pow.f64 x 5)) (fma.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 (+.f64 y y) 2) (*.f64 x x)))))))","(+.f64 (*.f64 (pow.f64 (/.f64 y x) 3) 8) (fma.f64 4 (/.f64 (*.f64 2 (pow.f64 y 5)) (pow.f64 x 5)) (+.f64 (*.f64 8 (/.f64 (pow.f64 y 5) (pow.f64 x 5))) (+.f64 (/.f64 (*.f64 (*.f64 4 y) y) (*.f64 x x)) (*.f64 3 (*.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4))))))))","(/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 2) (pow.f64 x 2))","(/.f64 (pow.f64 (-.f64 y (neg.f64 y)) 2) (*.f64 x x))","(/.f64 (pow.f64 (+.f64 y y) 2) (*.f64 x x))","(/.f64 (*.f64 (*.f64 4 y) y) (*.f64 x x))","(+.f64 (*.f64 2 (/.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 3))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 2) (pow.f64 x 2)))","(fma.f64 4 (/.f64 (*.f64 (*.f64 y y) (-.f64 y (neg.f64 y))) (pow.f64 x 3)) (/.f64 (pow.f64 (-.f64 y (neg.f64 y)) 2) (*.f64 x x)))","(fma.f64 4 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (/.f64 (pow.f64 (+.f64 y y) 2) (*.f64 x x)))","(fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 4 (*.f64 (pow.f64 (/.f64 y x) 3) 8))","(+.f64 (*.f64 2 (/.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4)) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 2) (pow.f64 x 2)))))","(fma.f64 4 (/.f64 (*.f64 (*.f64 y y) (-.f64 y (neg.f64 y))) (pow.f64 x 3)) (fma.f64 4 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 x 4) (-.f64 y (neg.f64 y)))) (fma.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 (-.f64 y (neg.f64 y)) 2) (*.f64 x x)))))","(+.f64 (fma.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 (+.f64 y y) 2) (*.f64 x x))) (*.f64 4 (*.f64 2 (+.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))))))","(+.f64 (*.f64 3 (*.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))) (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 4 (*.f64 (pow.f64 (/.f64 y x) 3) 8)))","(+.f64 (*.f64 2 (/.f64 (*.f64 y (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 3))) (+.f64 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4)) (+.f64 (*.f64 4 (/.f64 (*.f64 (pow.f64 y 3) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 5))) (+.f64 (*.f64 2 (/.f64 (*.f64 (pow.f64 y 2) (pow.f64 (-.f64 y (*.f64 -1 y)) 2)) (pow.f64 x 4))) (/.f64 (pow.f64 (-.f64 y (*.f64 -1 y)) 2) (pow.f64 x 2))))))","(fma.f64 2 (/.f64 y (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 y (neg.f64 y)) 2))) (+.f64 (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 y (neg.f64 y)) 2))) (fma.f64 4 (/.f64 (pow.f64 y 3) (/.f64 (pow.f64 x 5) (pow.f64 (-.f64 y (neg.f64 y)) 2))) (fma.f64 2 (/.f64 (*.f64 y y) (/.f64 (pow.f64 x 4) (pow.f64 (-.f64 y (neg.f64 y)) 2))) (/.f64 (pow.f64 (-.f64 y (neg.f64 y)) 2) (*.f64 x x))))))","(+.f64 (/.f64 (pow.f64 (+.f64 y y) 3) (pow.f64 x 3)) (+.f64 (+.f64 (/.f64 (pow.f64 (+.f64 y y) 2) (*.f64 x x)) (*.f64 3 (*.f64 (/.f64 (*.f64 y y) (pow.f64 x 4)) (pow.f64 (+.f64 y y) 2)))) (/.f64 (*.f64 (*.f64 (pow.f64 y 3) 4) (pow.f64 (+.f64 y y) 2)) (pow.f64 x 5))))","(+.f64 (+.f64 (*.f64 3 (*.f64 4 (/.f64 (pow.f64 y 4) (pow.f64 x 4)))) (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 4 (*.f64 (pow.f64 (/.f64 y x) 3) 8))) (*.f64 4 (/.f64 y (/.f64 (pow.f64 x 5) (*.f64 4 (pow.f64 y 4))))))","(*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))","(/.f64 (pow.f64 (-.f64 y (neg.f64 y)) 2) (*.f64 x x))","(/.f64 (pow.f64 (+.f64 y y) 2) (*.f64 x x))","(/.f64 (*.f64 (*.f64 4 y) y) (*.f64 x x))","(+.f64 (*.f64 8 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))","(fma.f64 4 (/.f64 (*.f64 (*.f64 y y) (-.f64 y (neg.f64 y))) (pow.f64 x 3)) (/.f64 (pow.f64 (-.f64 y (neg.f64 y)) 2) (*.f64 x x)))","(fma.f64 4 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (/.f64 (pow.f64 (+.f64 y y) 2) (*.f64 x x)))","(fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 4 (*.f64 (pow.f64 (/.f64 y x) 3) 8))","(+.f64 (*.f64 8 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 12 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(fma.f64 8 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 12 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (*.f64 (/.f64 (*.f64 y y) (*.f64 x x)) 4)))","(fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) 8 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 4 (/.f64 (*.f64 (pow.f64 y 4) 12) (pow.f64 x 4))))","(fma.f64 (pow.f64 (/.f64 y x) 3) 8 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 4 (*.f64 (/.f64 12 (pow.f64 x 4)) (pow.f64 y 4))))","(+.f64 (*.f64 8 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 12 (/.f64 (pow.f64 y 4) (pow.f64 x 4))) (+.f64 (*.f64 16 (/.f64 (pow.f64 y 5) (pow.f64 x 5))) (*.f64 4 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(fma.f64 8 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (fma.f64 12 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) (fma.f64 16 (/.f64 (pow.f64 y 5) (pow.f64 x 5)) (*.f64 (/.f64 (*.f64 y y) (*.f64 x x)) 4))))","(fma.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) 8 (fma.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 12 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 4 (/.f64 (*.f64 (pow.f64 y 5) 16) (pow.f64 x 5)))))","(fma.f64 (pow.f64 (/.f64 y x) 3) 8 (fma.f64 (/.f64 (pow.f64 y 4) (pow.f64 x 4)) 12 (fma.f64 (*.f64 (/.f64 y x) (/.f64 y x)) 4 (*.f64 (/.f64 16 (pow.f64 x 5)) (pow.f64 y 5)))))","4","(+.f64 (*.f64 -4 (/.f64 (-.f64 (*.f64 -1 x) x) y)) 4)","(fma.f64 -4 (/.f64 (-.f64 (neg.f64 x) x) y) 4)","(fma.f64 (*.f64 -2 (/.f64 x y)) -4 4)","(+.f64 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) x) 2) (pow.f64 y 2)) (+.f64 (*.f64 -4 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 4 (*.f64 8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))","(+.f64 (/.f64 (pow.f64 (-.f64 (neg.f64 x) x) 2) (*.f64 y y)) (fma.f64 -4 (/.f64 (-.f64 (neg.f64 x) x) y) (+.f64 4 (/.f64 (*.f64 (*.f64 x x) 8) (*.f64 y y)))))","(+.f64 (/.f64 (pow.f64 (*.f64 -2 x) 2) (*.f64 y y)) (fma.f64 (*.f64 -2 (/.f64 x y)) -4 (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 8 4)))","(+.f64 (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 8 4) (*.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 x y)) -4)))","(+.f64 (/.f64 (pow.f64 (-.f64 (*.f64 -1 x) x) 2) (pow.f64 y 2)) (+.f64 (*.f64 -4 (/.f64 (-.f64 (*.f64 -1 x) x) y)) (+.f64 (*.f64 8 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (+.f64 4 (+.f64 (*.f64 -4 (/.f64 (*.f64 (-.f64 (*.f64 -1 x) x) (pow.f64 x 2)) (pow.f64 y 3))) (*.f64 8 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))))))","(+.f64 (/.f64 (pow.f64 (-.f64 (neg.f64 x) x) 2) (*.f64 y y)) (fma.f64 -4 (/.f64 (-.f64 (neg.f64 x) x) y) (fma.f64 8 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (+.f64 4 (fma.f64 -4 (/.f64 (-.f64 (neg.f64 x) x) (/.f64 (pow.f64 y 3) (*.f64 x x))) (/.f64 (*.f64 (*.f64 x x) 8) (*.f64 y y)))))))","(+.f64 (/.f64 (pow.f64 (*.f64 -2 x) 2) (*.f64 y y)) (fma.f64 (*.f64 -2 (/.f64 x y)) -4 (+.f64 (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 8 (*.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) -4)) (fma.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) 8 4))))","(+.f64 (+.f64 (*.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 8 (/.f64 (*.f64 (neg.f64 x) -8) y))) (fma.f64 (pow.f64 (/.f64 x y) 3) 8 4)) (*.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 x y)) -4)))","4","(+.f64 4 (*.f64 8 (/.f64 x y)))","(+.f64 4 (/.f64 (*.f64 x 8) y))","(fma.f64 (/.f64 x y) 8 4)","(+.f64 4 (+.f64 (*.f64 8 (/.f64 x y)) (+.f64 (*.f64 4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -4 (/.f64 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)) (pow.f64 y 2))))))","(+.f64 4 (fma.f64 8 (/.f64 x y) (fma.f64 4 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 -4 (/.f64 (-.f64 (neg.f64 (*.f64 x x)) (*.f64 x x)) (*.f64 y y))))))","(+.f64 4 (fma.f64 (/.f64 x y) 8 (fma.f64 (*.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y))) -4 (/.f64 4 (*.f64 (/.f64 y x) (/.f64 y x))))))","(+.f64 (fma.f64 (/.f64 x y) 8 4) (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 4 (/.f64 (*.f64 -8 (*.f64 x (neg.f64 x))) (*.f64 y y))))","(+.f64 4 (+.f64 (*.f64 8 (/.f64 x y)) (+.f64 (*.f64 4 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -4 (-.f64 (pow.f64 x 3) (*.f64 -1 (pow.f64 x 3)))) (*.f64 4 (*.f64 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)) x))) (pow.f64 y 3))) (*.f64 -4 (/.f64 (-.f64 (*.f64 -1 (pow.f64 x 2)) (pow.f64 x 2)) (pow.f64 y 2)))))))","(+.f64 4 (fma.f64 8 (/.f64 x y) (fma.f64 4 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (fma.f64 -4 (-.f64 (pow.f64 x 3) (neg.f64 (pow.f64 x 3))) (*.f64 4 (*.f64 x (-.f64 (neg.f64 (*.f64 x x)) (*.f64 x x))))) (pow.f64 y 3)) (*.f64 -4 (/.f64 (-.f64 (neg.f64 (*.f64 x x)) (*.f64 x x)) (*.f64 y y)))))))","(+.f64 4 (fma.f64 (/.f64 x y) 8 (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 4 (fma.f64 (*.f64 -2 (*.f64 (/.f64 x y) (/.f64 x y))) -4 (/.f64 (neg.f64 (fma.f64 4 (*.f64 -2 (pow.f64 x 3)) (*.f64 (*.f64 2 (pow.f64 x 3)) -4))) (pow.f64 y 3))))))","(+.f64 (fma.f64 (/.f64 x y) 8 4) (-.f64 (fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) 4 (/.f64 (*.f64 -8 (*.f64 x (neg.f64 x))) (*.f64 y y))) (/.f64 (fma.f64 4 (*.f64 -2 (pow.f64 x 3)) (*.f64 (pow.f64 x 3) -8)) (pow.f64 y 3))))"]],"stop":[["node limit",1]],"time":56.744140625,"type":"simplify"},{"compiler":[[29157,15208]],"time":232.303955078125,"type":"eval"},{"alts":[["(-.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (/.f64 1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)))","fresh",0.02734375],["(log.f64 (exp.f64 (/.f64 (+.f64 1 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)) (+.f64 1 (-.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))))))","done",0.01953125],["(-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)","fresh",0.02734375]],"compiler":[[35,17],[41,23],[13,9]],"count":[[564,3]],"kept":[{"done":[0,0],"fresh":[2,2],"new":[561,0],"picked":[1,1]}],"min-error":[0],"time":398.720947265625,"type":"prune"},{"accuracy":[0.01953125],"baseline":[0.01953125],"branch":[["x",0.01953125,1],["y",0.01953125,1],["(/.f64 (+.f64 x y) (-.f64 x y))",0.01953125,1]],"compiler":[[3,2],[3,2],[9,5],[223,81]],"count":[[13,1]],"inputs":[["(-.f64 (/.f64 (pow.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)) (/.f64 1 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) 2)))","(log.f64 (exp.f64 (/.f64 (+.f64 1 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)) (+.f64 1 (-.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))))))","(-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)","(log.f64 (exp.f64 (*.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))","(log.f64 (exp.f64 (log1p.f64 (expm1.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))","(log.f64 (exp.f64 (-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)))","(+.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))))","(-.f64 (+.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))) 1)","(log1p.f64 (expm1.f64 (/.f64 (+.f64 x y) (-.f64 x y))))","(*.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (pow.f64 (cbrt.f64 (-.f64 x y)) 2)) (cbrt.f64 (/.f64 (+.f64 x y) (-.f64 x y))))","(log.f64 (exp.f64 (/.f64 (+.f64 x y) (-.f64 x y))))","(pow.f64 (/.f64 (-.f64 x y) (+.f64 x y)) -1)","(/.f64 (+.f64 x y) (-.f64 x y))"]],"link":["."],"name":["Linear.Projection:perspective from linear-1.19.1.3, A"],"oracle":[0.07458881837909412],"outputs":[["(log.f64 (exp.f64 (/.f64 (+.f64 1 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)) (+.f64 1 (-.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))))))"]],"time":16.112060546875,"times":[["x",5.46484375],["y",5.291015625],["(/.f64 (+.f64 x y) (-.f64 x y))",2.18798828125]],"type":"regimes"},{"compiler":[[41,23]],"egraph":[[7,68,59,0.000492084],[6,67,59,0.00041941799999999996],[5,64,59,0.00033783399999999996],[4,57,59,0.000263543],[3,48,59,0.000193043],[2,39,59,0.000130501],[1,29,59,8.0918e-5],[0,19,59,3.7709e-5]],"inputs":[["(log.f64 (exp.f64 (/.f64 (+.f64 1 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)) (+.f64 1 (-.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))))))"]],"method":["egg-herbie"],"outputs":[["(log.f64 (exp.f64 (/.f64 (+.f64 1 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)) (+.f64 1 (-.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1))))))","(log.f64 (exp.f64 (/.f64 (+.f64 1 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 3)) (+.f64 1 (+.f64 (pow.f64 (+.f64 (/.f64 (+.f64 x y) (-.f64 x y)) -1) 2) (-.f64 1 (/.f64 (+.f64 x y) (-.f64 x y))))))))"]],"stop":[["fuel",1],["saturated",1]],"time":9.968017578125,"type":"simplify"},{"time":0.005859375,"type":"soundness"},{"compiler":[[41,23]],"remove-preprocessing":[[]],"time":14.025146484375,"type":"end"}]