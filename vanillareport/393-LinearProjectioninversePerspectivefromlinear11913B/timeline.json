[{"compiler":[[12,8]],"method":["search"],"sampling":[[12,0.7921945555135608,0.20682912040501833,0.0009763240814208984],[11,0.7648775018751621,0.23414617404341698,0.0009763240814208984],[10,0.6087800525128841,0.39024362340569496,0.0009763240814208984],[9,0.5619508177042007,0.43707285821437836,0.0009763240814208984],[8,0.31219489872455597,0.6868287771940231,0.0009763240814208984],[7,0.24975591897964478,0.7492677569389343,0.0009763240814208984],[6,0.0,0.9990236759185791,0.0009763240814208984],[5,0.0,0.9990236759185791,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":47.530029296875,"type":"analyze"},{"outcomes":[["body",256,"invalid",0.06982421875,2],["body",256,"valid",306.381103515625,8256]],"time":313.935791015625,"type":"sample"},{"compiler":[[11,7]],"egraph":[[0,2,2,1.958e-6],[6,5203,20,0.023482667],[5,1096,20,0.011750209],[4,402,20,0.002862959],[3,201,20,0.001091834],[2,89,20,0.000497584],[1,35,26,0.000181792],[0,12,26,6.5667e-5]],"inputs":[["0","1"],["(/.f64 (-.f64 x y) (*.f64 (*.f64 x 2) y))","(/.f64 (-.f64 y x) (*.f64 (*.f64 y 2) x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 (-.f64 x y) (*.f64 (*.f64 x 2) y))","(/.f64 (-.f64 x y) (*.f64 x (*.f64 y 2)))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(/.f64 (-.f64 y x) (*.f64 (*.f64 y 2) x))","(/.f64 (-.f64 y x) (*.f64 x (*.f64 y 2)))","(+.f64 (/.f64 1/2 x) (/.f64 -1/2 y))","(-.f64 (/.f64 -1/2 y) (/.f64 -1/2 x))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":47.2451171875,"type":"preprocess"},{"count":[[1,2]],"egraph":[[8,7915,10,0.033400208],[7,4075,10,0.023270624],[6,1081,10,0.010266374],[5,539,10,0.0035460830000000002],[4,254,10,0.001625791],[3,124,10,0.000733208],[2,53,10,0.000326041],[1,19,13,0.000129166],[0,8,13,4.55e-5]],"inputs":[["(/.f64 (-.f64 x y) (*.f64 (*.f64 x 2) y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 (-.f64 x y) (*.f64 (*.f64 x 2) y))","(/.f64 (-.f64 x y) (*.f64 x (*.f64 2 y)))","(/.f64 (-.f64 x y) (*.f64 x (*.f64 y 2)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))"]],"stop":[["node limit",1]],"time":44.5849609375,"type":"simplify"},{"compiler":[[18,12]],"time":0.35009765625,"type":"eval"},{"alts":[["(-.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))","next",0.015625],["(/.f64 (-.f64 x y) (*.f64 (*.f64 x 2) y))","fresh",14.8175750598401]],"compiler":[[9,7],[11,7],[9,7],[11,7]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.01171875],"time":1.265869140625,"type":"prune"},{"compiler":[[18,12]],"locations":[["(-.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))",0.015625,true]],"time":4.76806640625,"type":"localize"},{"count":[[1,24]],"series":[["(-.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))","y","-inf",0.22998046875],["(-.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))","y","inf",0.220947265625],["(-.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))","y","0",0.4111328125],["(-.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))","x","-inf",0.246826171875],["(-.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))","x","inf",0.2529296875],["(-.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))","x","0",0.660888671875]],"time":2.10986328125,"type":"series"},{"count":[[1,152]],"egraph":[[2,2510,10,0.023186791],[1,168,10,0.0032804160000000004],[0,7,10,0.000227833]],"inputs":[["(-.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1/2 x) (/.f64 1/2 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1/2 x) (*.f64 (/.f64 1/2 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) (fma.f64 (neg.f64 (/.f64 1 y)) -1/2 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) (fma.f64 (/.f64 1/2 y) 1 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 -1/2 y))) (cbrt.f64 (/.f64 1/4 (*.f64 y y))) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) (+.f64 (/.f64 1/2 y) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) (fma.f64 -1 (/.f64 -1/2 y) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/4 (*.f64 y y)))) (cbrt.f64 (/.f64 -1/2 y)) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) (fma.f64 1/2 (/.f64 1 y) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 1/2 y) (/.f64 -1/2 x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 -1/2 (/.f64 1 x) (neg.f64 (*.f64 (/.f64 1 (neg.f64 y)) 1/2))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 y))) 1/2 (*.f64 (/.f64 1 (neg.f64 y)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 -1/2 x) 1 (neg.f64 (*.f64 (/.f64 1 (neg.f64 y)) 1/2))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 y))) 1/2 (*.f64 (/.f64 1 (neg.f64 y)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1 (/.f64 -1/2 x) (neg.f64 (*.f64 (/.f64 1 (neg.f64 y)) 1/2))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 y))) 1/2 (*.f64 (/.f64 1 (neg.f64 y)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (/.f64 -1/2 x)) (cbrt.f64 (pow.f64 (*.f64 x -2) -2)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 y)) 1/2))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 y))) 1/2 (*.f64 (/.f64 1 (neg.f64 y)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (cbrt.f64 (pow.f64 (*.f64 x -2) -2)) (cbrt.f64 (/.f64 -1/2 x)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 y)) 1/2))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 y))) 1/2 (*.f64 (/.f64 1 (neg.f64 y)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (sqrt.f64 (/.f64 -1/2 x)) (sqrt.f64 (/.f64 -1/2 x)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 y)) 1/2))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 y))) 1/2 (*.f64 (/.f64 1 (neg.f64 y)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 1/2 (/.f64 1 (neg.f64 x)) (neg.f64 (*.f64 (/.f64 1 (neg.f64 y)) 1/2))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 y))) 1/2 (*.f64 (/.f64 1 (neg.f64 y)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 (/.f64 1 x) -1/2 (neg.f64 (*.f64 (/.f64 1 (neg.f64 y)) 1/2))) (fma.f64 (neg.f64 (/.f64 1 (neg.f64 y))) 1/2 (*.f64 (/.f64 1 (neg.f64 y)) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))))) (log.f64 (sqrt.f64 (exp.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/2 (-.f64 (/.f64 1 x) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/2 (pow.f64 (-.f64 (/.f64 1 x) (/.f64 1 y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) 2) (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) (sqrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) (/.f64 1 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) (pow.f64 (/.f64 1 (*.f64 x y)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 -1/8 (pow.f64 x -3)) (*.f64 -1/8 (pow.f64 y -3))) (/.f64 1 (fma.f64 (/.f64 -1/2 y) (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y)) (pow.f64 (*.f64 x -2) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (*.f64 -1/8 (pow.f64 x -3)) (*.f64 -1/8 (pow.f64 y -3))) (pow.f64 (/.f64 1 (fma.f64 (/.f64 -1/2 y) (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y)) (pow.f64 (*.f64 x -2) -2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 x -2) -2) (/.f64 1/4 (*.f64 y y))) (/.f64 1 (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 x -2) -2) (/.f64 1/4 (*.f64 y y))) (pow.f64 (/.f64 1 (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 (/.f64 -1/2 x)) (sqrt.f64 (/.f64 -1/2 y))) (-.f64 (sqrt.f64 (/.f64 -1/2 x)) (sqrt.f64 (/.f64 -1/2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 1 1/3) (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (sqrt.f64 (/.f64 -1/2 x)) (sqrt.f64 (/.f64 -1/2 y))) 1) (pow.f64 (-.f64 (sqrt.f64 (/.f64 -1/2 x)) (sqrt.f64 (/.f64 -1/2 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (pow.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) 3)) 1/3) (pow.f64 (sqrt.f64 (pow.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) 2) (pow.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) 2)) 1/3) (cbrt.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (*.f64 (pow.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) 2) (sqrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)))) 1/3) (cbrt.f64 (sqrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)))) 2) 3) (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)))) 3) (pow.f64 (sqrt.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 x y) (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (/.f64 -1/2 y) (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y)) (pow.f64 (*.f64 x -2) -2)) (-.f64 (*.f64 -1/8 (pow.f64 x -3)) (*.f64 -1/8 (pow.f64 y -3)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y)) (-.f64 (pow.f64 (*.f64 x -2) -2) (/.f64 1/4 (*.f64 y y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) (*.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 -1/8 (pow.f64 x -3)) (*.f64 -1/8 (pow.f64 y -3))) (fma.f64 (/.f64 -1/2 y) (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y)) (pow.f64 (*.f64 x -2) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x -2) -2) (/.f64 1/4 (*.f64 y y))) (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x))) (neg.f64 (*.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (*.f64 -1/8 (pow.f64 x -3)) (*.f64 -1/8 (pow.f64 y -3)))) (neg.f64 (fma.f64 (/.f64 -1/2 y) (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y)) (pow.f64 (*.f64 x -2) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 x -2) -2) (/.f64 1/4 (*.f64 y y)))) (neg.f64 (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 y (*.f64 (*.f64 x -2) -1/2)) (*.f64 (*.f64 x -2) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 1/2 y) (*.f64 (neg.f64 x) -1/2)) (*.f64 (neg.f64 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 y -2) (*.f64 (*.f64 x -2) 1)) (*.f64 (*.f64 x -2) (*.f64 y -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 1/2 (*.f64 y -2)) (*.f64 (neg.f64 x) 1)) (*.f64 (neg.f64 x) (*.f64 y -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 -1/2 (neg.f64 y)) (*.f64 x 1/2)) (*.f64 x (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (neg.f64 y) (*.f64 (*.f64 x -2) 1/2)) (*.f64 (*.f64 x -2) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 1/2 (neg.f64 y)) (*.f64 (neg.f64 x) 1/2)) (*.f64 (neg.f64 x) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1/8 (pow.f64 x -3) (*.f64 1/8 (pow.f64 y -3))) (+.f64 (pow.f64 (*.f64 x -2) -2) (-.f64 (pow.f64 (/.f64 1/2 y) 2) (*.f64 (/.f64 -1/2 x) (/.f64 1/2 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x -2) -2) (pow.f64 (/.f64 1/2 y) 2)) (-.f64 (/.f64 -1/2 x) (/.f64 1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 -1/2 (*.f64 y -2) (neg.f64 x)) (*.f64 x (*.f64 y -2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 x y) (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (/.f64 -1/2 y) (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y)) (pow.f64 (*.f64 x -2) -2)) (-.f64 (*.f64 -1/8 (pow.f64 x -3)) (*.f64 -1/8 (pow.f64 y -3)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y)) (-.f64 (pow.f64 (*.f64 x -2) -2) (/.f64 1/4 (*.f64 y y)))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 -1/2 x))) (exp.f64 (/.f64 -1/2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (/.f64 -1/2 x)) (+.f64 1 (expm1.f64 (/.f64 -1/2 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 (/.f64 -1/2 x))) (+.f64 1 (expm1.f64 (/.f64 -1/2 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 -1/2 x))) (exp.f64 (/.f64 1/2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (/.f64 -1/2 x))) (/.f64 1 (exp.f64 (/.f64 -1/2 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 1/2 y)) (exp.f64 (/.f64 -1/2 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (/.f64 1/2 y)) (+.f64 1 (expm1.f64 (/.f64 -1/2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (/.f64 1 (exp.f64 (/.f64 -1/2 y))) (+.f64 1 (expm1.f64 (/.f64 -1/2 x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (/.f64 1 x) (/.f64 1/2 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (/.f64 1 x) (*.f64 (/.f64 1/2 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (neg.f64 (/.f64 1 y)) (/.f64 -1/2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (-.f64 (/.f64 1 x) (/.f64 1 y)) (fma.f64 (neg.f64 (/.f64 1 y)) -1/2 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (-.f64 (/.f64 1 x) (/.f64 1 y)) (fma.f64 (/.f64 1/2 y) 1 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (-.f64 (/.f64 1 x) (/.f64 1 y)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 -1/2 y))) (cbrt.f64 (/.f64 1/4 (*.f64 y y))) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (-.f64 (/.f64 1 x) (/.f64 1 y)) (+.f64 (/.f64 1/2 y) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1/2 x) 1 (/.f64 1/2 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1/2 x) 1 (*.f64 (/.f64 1/2 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) 1 (fma.f64 (neg.f64 (/.f64 1 y)) -1/2 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) 1 (fma.f64 (/.f64 1/2 y) 1 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) 1 (fma.f64 (neg.f64 (cbrt.f64 (/.f64 -1/2 y))) (cbrt.f64 (/.f64 1/4 (*.f64 y y))) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) 1 (+.f64 (/.f64 1/2 y) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -1/2 x) (/.f64 1/2 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 -1/2 x) (*.f64 (/.f64 1/2 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) (fma.f64 (neg.f64 (/.f64 1 y)) -1/2 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) (fma.f64 (/.f64 1/2 y) 1 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 -1/2 y))) (cbrt.f64 (/.f64 1/4 (*.f64 y y))) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y)) (+.f64 (/.f64 1/2 y) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 1/2 y) (/.f64 -1/2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 1/4 (*.f64 y y))) (neg.f64 (cbrt.f64 (/.f64 -1/2 y))) (/.f64 -1/2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) 2) (fma.f64 (neg.f64 (/.f64 1 y)) -1/2 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) 2) (fma.f64 (/.f64 1/2 y) 1 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) 2) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 -1/2 y))) (cbrt.f64 (/.f64 1/4 (*.f64 y y))) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) (pow.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) 2) (+.f64 (/.f64 1/2 y) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) 2) (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) (fma.f64 (neg.f64 (/.f64 1 y)) -1/2 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) 2) (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) (fma.f64 (/.f64 1/2 y) 1 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) 2) (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 -1/2 y))) (cbrt.f64 (/.f64 1/4 (*.f64 y y))) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) 2) (cbrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) (+.f64 (/.f64 1/2 y) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1/2 x)) (cbrt.f64 (pow.f64 (*.f64 x -2) -2)) (/.f64 1/2 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 -1/2 x)) (cbrt.f64 (pow.f64 (*.f64 x -2) -2)) (*.f64 (/.f64 1/2 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 x -2) -2)) (cbrt.f64 (/.f64 -1/2 x)) (/.f64 1/2 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (*.f64 x -2) -2)) (cbrt.f64 (/.f64 -1/2 x)) (*.f64 (/.f64 1/2 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 -1/2 y)) (neg.f64 (sqrt.f64 (/.f64 -1/2 y))) (/.f64 -1/2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) (sqrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) (fma.f64 (neg.f64 (/.f64 1 y)) -1/2 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) (sqrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) (fma.f64 (/.f64 1/2 y) 1 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) (sqrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 -1/2 y))) (cbrt.f64 (/.f64 1/4 (*.f64 y y))) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) (sqrt.f64 (+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))) (+.f64 (/.f64 1/2 y) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 -1/2 x)) (sqrt.f64 (/.f64 -1/2 x)) (/.f64 1/2 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 -1/2 x)) (sqrt.f64 (/.f64 -1/2 x)) (*.f64 (/.f64 1/2 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (/.f64 1 y) (/.f64 -1/2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (/.f64 1 (neg.f64 x)) (/.f64 1/2 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (/.f64 1 (neg.f64 x)) (*.f64 (/.f64 1/2 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) (/.f64 1 (*.f64 x y)) (fma.f64 (neg.f64 (/.f64 1 y)) -1/2 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) (/.f64 1 (*.f64 x y)) (fma.f64 (/.f64 1/2 y) 1 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) (/.f64 1 (*.f64 x y)) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 -1/2 y))) (cbrt.f64 (/.f64 1/4 (*.f64 y y))) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) (/.f64 1 (*.f64 x y)) (+.f64 (/.f64 1/2 y) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 -1/8 (pow.f64 x -3)) (*.f64 -1/8 (pow.f64 y -3))) (/.f64 1 (fma.f64 (/.f64 -1/2 y) (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y)) (pow.f64 (*.f64 x -2) -2))) (fma.f64 (neg.f64 (/.f64 1 y)) -1/2 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 -1/8 (pow.f64 x -3)) (*.f64 -1/8 (pow.f64 y -3))) (/.f64 1 (fma.f64 (/.f64 -1/2 y) (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y)) (pow.f64 (*.f64 x -2) -2))) (fma.f64 (/.f64 1/2 y) 1 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 -1/8 (pow.f64 x -3)) (*.f64 -1/8 (pow.f64 y -3))) (/.f64 1 (fma.f64 (/.f64 -1/2 y) (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y)) (pow.f64 (*.f64 x -2) -2))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 -1/2 y))) (cbrt.f64 (/.f64 1/4 (*.f64 y y))) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (*.f64 -1/8 (pow.f64 x -3)) (*.f64 -1/8 (pow.f64 y -3))) (/.f64 1 (fma.f64 (/.f64 -1/2 y) (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y)) (pow.f64 (*.f64 x -2) -2))) (+.f64 (/.f64 1/2 y) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 x) -1/2 (/.f64 1/2 y))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 x) -1/2 (*.f64 (/.f64 1/2 y) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 x -2) -2) (/.f64 1/4 (*.f64 y y))) (/.f64 1 (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))) (fma.f64 (neg.f64 (/.f64 1 y)) -1/2 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 x -2) -2) (/.f64 1/4 (*.f64 y y))) (/.f64 1 (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))) (fma.f64 (/.f64 1/2 y) 1 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 x -2) -2) (/.f64 1/4 (*.f64 y y))) (/.f64 1 (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 -1/2 y))) (cbrt.f64 (/.f64 1/4 (*.f64 y y))) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 x -2) -2) (/.f64 1/4 (*.f64 y y))) (/.f64 1 (+.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))) (+.f64 (/.f64 1/2 y) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (/.f64 1/2 y)) 2) (cbrt.f64 (/.f64 1/2 y)) (/.f64 -1/2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 1/2 y)) (sqrt.f64 (/.f64 1/2 y)) (/.f64 -1/2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (/.f64 -1/2 y))) (sqrt.f64 (/.f64 -1/2 y)) (/.f64 -1/2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (/.f64 -1/2 y) (/.f64 -1/2 x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 -1/2 x)) (sqrt.f64 (/.f64 -1/2 y))) (-.f64 (sqrt.f64 (/.f64 -1/2 x)) (sqrt.f64 (/.f64 -1/2 y))) (fma.f64 (neg.f64 (/.f64 1 y)) -1/2 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 -1/2 x)) (sqrt.f64 (/.f64 -1/2 y))) (-.f64 (sqrt.f64 (/.f64 -1/2 x)) (sqrt.f64 (/.f64 -1/2 y))) (fma.f64 (/.f64 1/2 y) 1 (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 -1/2 x)) (sqrt.f64 (/.f64 -1/2 y))) (-.f64 (sqrt.f64 (/.f64 -1/2 x)) (sqrt.f64 (/.f64 -1/2 y))) (fma.f64 (neg.f64 (cbrt.f64 (/.f64 -1/2 y))) (cbrt.f64 (/.f64 1/4 (*.f64 y y))) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 (/.f64 -1/2 x)) (sqrt.f64 (/.f64 -1/2 y))) (-.f64 (sqrt.f64 (/.f64 -1/2 x)) (sqrt.f64 (/.f64 -1/2 y))) (+.f64 (/.f64 1/2 y) (/.f64 -1/2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (cbrt.f64 (/.f64 1/4 (*.f64 y y)))) (cbrt.f64 (/.f64 -1/2 y)) (/.f64 -1/2 x))))))"]],"rules":[["egg-rr",152]],"stop":[["node limit",1]],"time":49.33203125,"type":"rewrite"},{"count":[[176,155]],"egraph":[[11,573,204,0.009228625],[10,567,204,0.007849208],[9,513,204,0.0064568329999999995],[8,400,204,0.0050106249999999995],[7,322,204,0.0034665],[6,229,204,0.002311875],[5,140,204,0.001430208],[4,91,204,0.0009105000000000001],[3,62,204,0.000587458],[2,43,204,0.000375542],[1,27,204,0.00021925],[0,13,204,8.8333e-5]],"inputs":[["(/.f64 -1/2 x)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(/.f64 1/2 y)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(/.f64 1/2 y)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(/.f64 1/2 y)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(/.f64 -1/2 x)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(/.f64 -1/2 x)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))"]],"method":["egg-herbie"],"outputs":[["(/.f64 -1/2 x)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(/.f64 1/2 y)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(/.f64 1/2 y)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(/.f64 1/2 y)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(/.f64 -1/2 x)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(/.f64 -1/2 x)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))"]],"stop":[["saturated",1]],"time":25.72119140625,"type":"simplify"},{"compiler":[[2856,2153]],"time":37.1259765625,"type":"eval"},{"alts":[["(fma.f64 (sqrt.f64 (/.f64 -1/2 x)) (sqrt.f64 (/.f64 -1/2 x)) (/.f64 1/2 y))","fresh",31.13671875],["(/.f64 (/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x) y)","next",9.12890625],["(-.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))","done",0.015625]],"compiler":[[14,11],[13,9],[9,7],[14,11],[13,9]],"count":[[157,3]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[155,2],"picked":[1,1]}],"min-error":[0],"time":34.48095703125,"type":"prune"},{"compiler":[[38,25]],"locations":[["(/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x)",0.03125,true],["(/.f64 (/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x) y)",8.552767120736007,true]],"time":8.552978515625,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x)","x","-inf",0.2490234375],["(/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x)","x","inf",0.141845703125],["(/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x)","x","0",0.2509765625],["(/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x)","y","-inf",0.201904296875],["(/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x)","y","inf",0.25390625],["(/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x)","y","0",0.22509765625],["(/.f64 (/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x) y)","x","-inf",0.385986328125],["(/.f64 (/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x) y)","x","inf",0.362060546875],["(/.f64 (/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x) y)","x","0",0.39892578125],["(/.f64 (/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x) y)","y","-inf",0.72314453125],["(/.f64 (/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x) y)","y","inf",0.493896484375],["(/.f64 (/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x) y)","y","0",0.631103515625]],"time":4.47900390625,"type":"series"},{"count":[[2,114]],"egraph":[[2,3470,19,0.027862333],[1,221,23,0.0044909170000000005],[0,9,23,0.0002875]],"inputs":[["(/.f64 (/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x) y)","(/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 -1/2 y) (*.f64 y x)) (/.f64 (*.f64 -1/2 x) (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 -1/2 (/.f64 y x)) y) (/.f64 -1/2 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/2 (-.f64 y x)) (/.f64 1 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/2 (-.f64 y x)) (*.f64 (/.f64 1 x) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) 2) (*.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y)) (pow.f64 (cbrt.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y)) 2) (cbrt.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) (*.f64 (sqrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) (/.f64 1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y)) (sqrt.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 1/2 (-.f64 y x)) x) (/.f64 1 (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (fma.f64 -1/2 (/.f64 y x) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1/2 y) (/.f64 (-.f64 y x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 1/4 (pow.f64 (-.f64 y x) 2))) y) (/.f64 (cbrt.f64 (*.f64 -1/2 (-.f64 y x))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 -1/2 (-.f64 y x))) y) (/.f64 (sqrt.f64 (*.f64 -1/2 (-.f64 y x))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -1/2 (-.f64 y x)) 1) (/.f64 (/.f64 1 x) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) 2) 1) (/.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) 1) (/.f64 (sqrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -1/2 (-.f64 y x)) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (/.f64 1 x) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 y) -2) (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) 2) (pow.f64 (cbrt.f64 y) 2)) (cbrt.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) (pow.f64 (cbrt.f64 y) 2)) (/.f64 (sqrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) (cbrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 -1/2 (-.f64 y x)) (sqrt.f64 y)) (/.f64 (/.f64 1 x) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 y -1/2) (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) 2) (sqrt.f64 y)) (/.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) (sqrt.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (fma.f64 -1/2 (/.f64 y x) 1/2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) 3) (pow.f64 y 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 y x) (*.f64 -1/2 (-.f64 y x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 y (fma.f64 -1/2 (/.f64 y x) 1/2)) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) (neg.f64 y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) 3) (pow.f64 y 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) y)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 -1/2 (/.f64 y x) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/2 (/.f64 y x) 1/2))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 -1/2 (/.f64 y x)) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 -1/2 (/.f64 y x) 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/2 (/.f64 (-.f64 y x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/2 (*.f64 (-.f64 y x) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1/2 (-.f64 y x)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 -1/2 (/.f64 y x) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) (pow.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) 2) (cbrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 1/4 (pow.f64 (-.f64 y x) 2))) (*.f64 (cbrt.f64 (*.f64 -1/2 (-.f64 y x))) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) (sqrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 -1/2 (-.f64 y x))) (*.f64 (sqrt.f64 (*.f64 -1/2 (-.f64 y x))) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 1/2 (-.f64 y x)) (/.f64 1 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (*.f64 -1/2 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1/2 (/.f64 x (cbrt.f64 x))) (/.f64 (-.f64 y x) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) -2) (/.f64 (*.f64 -1/2 (-.f64 y x)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -1/2 (sqrt.f64 x)) (/.f64 (-.f64 y x) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 x -1/2) (/.f64 (*.f64 -1/2 (-.f64 y x)) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 1/4 (pow.f64 (-.f64 y x) 2))) 1) (/.f64 (cbrt.f64 (*.f64 -1/2 (-.f64 y x))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 -1/2 (-.f64 y x))) 1) (/.f64 (sqrt.f64 (*.f64 -1/2 (-.f64 y x))) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 1/4 (pow.f64 (-.f64 y x) 2))) (/.f64 x (cbrt.f64 x))) (cbrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (*.f64 -1/2 (-.f64 y x))) (/.f64 x (cbrt.f64 x))) (/.f64 (sqrt.f64 (*.f64 -1/2 (-.f64 y x))) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 1/4 (pow.f64 (-.f64 y x) 2))) (sqrt.f64 x)) (/.f64 (cbrt.f64 (*.f64 -1/2 (-.f64 y x))) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 (*.f64 -1/2 (-.f64 y x)) 3) (pow.f64 x 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 -1/2 (-.f64 y x)) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 -1/2 (/.f64 y x) 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 -1/2 (/.f64 y x) 1/2) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (*.f64 -1/2 (-.f64 y x)) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 -1/2 (/.f64 y x) 1/2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1/2 (/.f64 y x) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1/2 y) (/.f64 1 x) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 -1/2 (/.f64 y x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 -1/2 (/.f64 y x))) 2) (cbrt.f64 (*.f64 -1/2 (/.f64 y x))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 -1/2 (/.f64 y x))) (sqrt.f64 (*.f64 -1/2 (/.f64 y x))) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1/2 (/.f64 x (cbrt.f64 x))) (/.f64 y (cbrt.f64 x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) -2) (/.f64 (*.f64 -1/2 y) (cbrt.f64 x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 -1/2 (sqrt.f64 x)) (/.f64 y (sqrt.f64 x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 x -1/2) (/.f64 (*.f64 -1/2 y) (sqrt.f64 x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y 1) (/.f64 -1/2 x) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 -1/2 y) 2)) 1) (/.f64 (cbrt.f64 (*.f64 -1/2 y)) x) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (*.f64 -1/2 y)) 1) (/.f64 (sqrt.f64 (*.f64 -1/2 y)) x) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (/.f64 x (cbrt.f64 x))) (/.f64 -1/2 (cbrt.f64 x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 -1/2 y) 2)) (/.f64 x (cbrt.f64 x))) (/.f64 (cbrt.f64 (*.f64 -1/2 y)) (cbrt.f64 x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (*.f64 -1/2 y)) (/.f64 x (cbrt.f64 x))) (/.f64 (sqrt.f64 (*.f64 -1/2 y)) (cbrt.f64 x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (sqrt.f64 x)) (/.f64 -1/2 (sqrt.f64 x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (pow.f64 (*.f64 -1/2 y) 2)) (sqrt.f64 x)) (/.f64 (cbrt.f64 (*.f64 -1/2 y)) (sqrt.f64 x)) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 (*.f64 -1/2 y)) (sqrt.f64 x)) (/.f64 (sqrt.f64 (*.f64 -1/2 y)) (sqrt.f64 x)) 1/2)))))"]],"rules":[["egg-rr",63],["egg-rr",51]],"stop":[["node limit",1]],"time":50.9599609375,"type":"rewrite"},{"count":[[162,122]],"egraph":[[19,6080,372,0.08458058299999999],[18,6076,372,0.07705424999999999],[17,5900,372,0.06933716699999999],[16,5656,372,0.060596124999999994],[15,5594,372,0.05139566699999999],[14,5428,372,0.04589237499999999],[13,5054,372,0.040706708999999994],[12,3652,372,0.035500291999999996],[11,2146,372,0.02658925],[10,1499,372,0.018534791999999998],[9,1258,372,0.013124458999999998],[8,930,372,0.009428124999999999],[7,682,372,0.006081125],[6,438,372,0.003699667],[5,222,372,0.002145167],[4,121,372,0.0012175419999999998],[3,78,372,0.0007711669999999999],[2,56,372,0.000498042],[1,35,372,0.000289542],[0,16,372,0.000119667]],"inputs":[["(/.f64 1/2 y)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(/.f64 -1/2 x)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(/.f64 -1/2 x)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(/.f64 -1/2 x)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(/.f64 1/2 y)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(/.f64 1/2 y)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","1/2","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(*.f64 -1/2 (/.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(*.f64 -1/2 (/.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(*.f64 -1/2 (/.f64 y x))","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","1/2","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","1/2","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)"]],"method":["egg-herbie"],"outputs":[["(/.f64 1/2 y)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(/.f64 -1/2 x)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(/.f64 -1/2 x)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(/.f64 -1/2 x)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(/.f64 1/2 y)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(/.f64 1/2 y)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","1/2","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(fma.f64 -1/2 (/.f64 y x) 1/2)","(fma.f64 y (/.f64 -1/2 x) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(fma.f64 -1/2 (/.f64 y x) 1/2)","(fma.f64 y (/.f64 -1/2 x) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(fma.f64 -1/2 (/.f64 y x) 1/2)","(fma.f64 y (/.f64 -1/2 x) 1/2)","(*.f64 -1/2 (/.f64 y x))","(/.f64 (*.f64 -1/2 y) x)","(*.f64 y (/.f64 -1/2 x))","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(fma.f64 -1/2 (/.f64 y x) 1/2)","(fma.f64 y (/.f64 -1/2 x) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(fma.f64 -1/2 (/.f64 y x) 1/2)","(fma.f64 y (/.f64 -1/2 x) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(fma.f64 -1/2 (/.f64 y x) 1/2)","(fma.f64 y (/.f64 -1/2 x) 1/2)","(*.f64 -1/2 (/.f64 y x))","(/.f64 (*.f64 -1/2 y) x)","(*.f64 y (/.f64 -1/2 x))","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(fma.f64 -1/2 (/.f64 y x) 1/2)","(fma.f64 y (/.f64 -1/2 x) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(fma.f64 -1/2 (/.f64 y x) 1/2)","(fma.f64 y (/.f64 -1/2 x) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(fma.f64 -1/2 (/.f64 y x) 1/2)","(fma.f64 y (/.f64 -1/2 x) 1/2)","(*.f64 -1/2 (/.f64 y x))","(/.f64 (*.f64 -1/2 y) x)","(*.f64 y (/.f64 -1/2 x))","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(fma.f64 -1/2 (/.f64 y x) 1/2)","(fma.f64 y (/.f64 -1/2 x) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(fma.f64 -1/2 (/.f64 y x) 1/2)","(fma.f64 y (/.f64 -1/2 x) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(fma.f64 -1/2 (/.f64 y x) 1/2)","(fma.f64 y (/.f64 -1/2 x) 1/2)","1/2","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(fma.f64 -1/2 (/.f64 y x) 1/2)","(fma.f64 y (/.f64 -1/2 x) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(fma.f64 -1/2 (/.f64 y x) 1/2)","(fma.f64 y (/.f64 -1/2 x) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(fma.f64 -1/2 (/.f64 y x) 1/2)","(fma.f64 y (/.f64 -1/2 x) 1/2)","1/2","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(fma.f64 -1/2 (/.f64 y x) 1/2)","(fma.f64 y (/.f64 -1/2 x) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(fma.f64 -1/2 (/.f64 y x) 1/2)","(fma.f64 y (/.f64 -1/2 x) 1/2)","(+.f64 (*.f64 -1/2 (/.f64 y x)) 1/2)","(fma.f64 -1/2 (/.f64 y x) 1/2)","(fma.f64 y (/.f64 -1/2 x) 1/2)"]],"stop":[["saturated",1]],"time":111.117919921875,"type":"simplify"},{"compiler":[[1664,993]],"time":21.029052734375,"type":"eval"},{"alts":[["(-.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))","done",0.015625],["(pow.f64 (*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y) -1)","next",8.139134390626403],["(/.f64 (/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x) y)","done",9.12890625]],"compiler":[[9,7],[13,9],[13,9],[13,9]],"count":[[125,3]],"kept":[{"done":[1,1],"fresh":[1,0],"new":[122,1],"picked":[1,1]}],"min-error":[0],"time":23.27197265625,"type":"prune"},{"compiler":[[41,16]],"locations":[["(*.f64 -2 (/.f64 x (-.f64 y x)))",0.01171875,true],["(/.f64 x (-.f64 y x))",0.015625,true],["(pow.f64 (*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y) -1)",0.03125,true],["(*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y)",7.612557120195459,true]],"time":7.631103515625,"type":"localize"},{"count":[[4,96]],"series":[["(*.f64 -2 (/.f64 x (-.f64 y x)))","y","-inf",0.218017578125],["(*.f64 -2 (/.f64 x (-.f64 y x)))","y","inf",0.223876953125],["(*.f64 -2 (/.f64 x (-.f64 y x)))","y","0",0.177978515625],["(*.f64 -2 (/.f64 x (-.f64 y x)))","x","-inf",0.23291015625],["(*.f64 -2 (/.f64 x (-.f64 y x)))","x","inf",0.2529296875],["(*.f64 -2 (/.f64 x (-.f64 y x)))","x","0",0.279052734375],["(/.f64 x (-.f64 y x))","y","-inf",0.221923828125],["(/.f64 x (-.f64 y x))","y","inf",0.242919921875],["(/.f64 x (-.f64 y x))","y","0",0.177001953125],["(/.f64 x (-.f64 y x))","x","-inf",0.22802734375],["(/.f64 x (-.f64 y x))","x","inf",0.239013671875],["(/.f64 x (-.f64 y x))","x","0",0.27490234375],["(pow.f64 (*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y) -1)","y","-inf",0.344970703125],["(pow.f64 (*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y) -1)","y","inf",0.39599609375],["(pow.f64 (*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y) -1)","y","0",1.1298828125],["(pow.f64 (*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y) -1)","x","-inf",0.31787109375],["(pow.f64 (*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y) -1)","x","inf",0.465087890625],["(pow.f64 (*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y) -1)","x","0",1.094970703125],["(*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y)","y","-inf",0.558837890625],["(*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y)","y","inf",0.366943359375],["(*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y)","y","0",0.89599609375],["(*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y)","x","-inf",0.333984375],["(*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y)","x","inf",0.427978515625],["(*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y)","x","0",0.5419921875]],"time":10.008056640625,"type":"series"},{"count":[[4,116]],"egraph":[[2,3076,43,0.0265075],[1,225,43,0.004238083],[0,10,46,0.0003055]],"inputs":[["(*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y)","(pow.f64 (*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y) -1)","(/.f64 x (-.f64 y x))","(*.f64 -2 (/.f64 x (-.f64 y x)))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 -2) (*.f64 y (/.f64 x (-.f64 y x))))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 -2) (*.f64 y (/.f64 x (-.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -2) (*.f64 y (/.f64 x (-.f64 y x)))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -2) (*.f64 y (/.f64 x (-.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x)))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (*.f64 -2 x) y) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (*.f64 -2 x)) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x)))) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x)))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x))))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x))))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 -2) (*.f64 y (/.f64 x (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x)))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x))))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y)))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y)) (pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y)) 2) (cbrt.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) (/.f64 1 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 y) (*.f64 (-.f64 (/.f64 y x) 1) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1/2 (pow.f64 (*.f64 y (/.f64 x (-.f64 y x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y)) (sqrt.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x))))) -2) (cbrt.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x)))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 y) (/.f64 -2 (-.f64 (/.f64 y x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1/2 (*.f64 y (/.f64 x (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y)) (sqrt.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x))))) -2) (cbrt.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x)))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 -2 (*.f64 y (/.f64 x (-.f64 y x)))) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (*.f64 (-.f64 (/.f64 y x) 1) -1/2) y)) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 x (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 x (-.f64 y x)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 x (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (-.f64 y x))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 x (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 x (-.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (-.f64 y x))) (cbrt.f64 (pow.f64 (/.f64 x (-.f64 y x)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 x (-.f64 y x)) 2)) (cbrt.f64 (/.f64 x (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (cbrt.f64 x) (/.f64 1 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (-.f64 y x))) (sqrt.f64 (/.f64 x (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 y x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) 1) (/.f64 (cbrt.f64 x) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (-.f64 y x)) -2) (/.f64 x (cbrt.f64 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 (pow.f64 (-.f64 y x) 2))) (cbrt.f64 (/.f64 x (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (cbrt.f64 (pow.f64 (-.f64 y x) 2))) (/.f64 (sqrt.f64 x) (cbrt.f64 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (-.f64 y x) -1/2) (/.f64 x (sqrt.f64 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 x x)) (sqrt.f64 (-.f64 y x))) (/.f64 (cbrt.f64 x) (sqrt.f64 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (pow.f64 y 3) (pow.f64 x 3))) (fma.f64 x (+.f64 x y) (*.f64 y y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (*.f64 y y) (*.f64 x x))) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (-.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (-.f64 y x)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (-.f64 (/.f64 y x) 1) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (-.f64 y x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (-.f64 y x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (-.f64 (/.f64 y x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 y x) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (/.f64 y x) 1) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (neg.f64 (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (-.f64 y x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 x (-.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (-.f64 (/.f64 y x) 1) -3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (-.f64 y x) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 x (-.f64 y x))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 -2 (-.f64 (/.f64 y x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (pow.f64 (exp.f64 -2) (/.f64 x (-.f64 y x)))) 2)) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 -2) (/.f64 x (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -2) (/.f64 x (-.f64 y x))))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 -2) (/.f64 x (-.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 -2 (-.f64 (/.f64 y x) 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -2 (-.f64 (/.f64 y x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 y x) (*.f64 -2 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 x) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 -2 x)) (neg.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 x) 1) (-.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 x) (cbrt.f64 (pow.f64 (-.f64 y x) 2))) (cbrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 -2 x) (sqrt.f64 (-.f64 y x))) (sqrt.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 x) -2) (neg.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 -2 (neg.f64 x)) (neg.f64 (-.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 -2 (-.f64 (/.f64 y x) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 -2 (-.f64 (/.f64 y x) 1)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 -2 (-.f64 (/.f64 y x) 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 -2 (-.f64 (/.f64 y x) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 -2 (-.f64 (/.f64 y x) 1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 y x) (*.f64 -2 x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 -2 (-.f64 (/.f64 y x) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 -2) (/.f64 x (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 -2 (-.f64 (/.f64 y x) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 -2 (-.f64 (/.f64 y x) 1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 -2 (-.f64 (/.f64 y x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 -2 (-.f64 (/.f64 y x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 -2 (-.f64 (/.f64 y x) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 -2 (-.f64 (/.f64 y x) 1))) 1))))))"]],"rules":[["egg-rr",27],["egg-rr",41],["egg-rr",29],["egg-rr",19]],"stop":[["node limit",1]],"time":53.7998046875,"type":"rewrite"},{"count":[[212,171]],"egraph":[[3,7092,1453,0.024650125000000002],[2,1804,1473,0.012836],[1,455,1711,0.0033647499999999997],[0,137,1781,0.000719667]],"inputs":[["(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(/.f64 -1/2 x)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(/.f64 1/2 y)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 y) (*.f64 1/2 y)) (pow.f64 x 2)))) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 y) (*.f64 1/2 y)) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (+.f64 (*.f64 1/2 (pow.f64 y 2)) (*.f64 -1 (*.f64 y (+.f64 (*.f64 -1/2 y) (*.f64 1/2 y)))))) (pow.f64 x 3))))) (*.f64 1/2 (/.f64 1 x)))","(/.f64 1/2 y)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 y) (*.f64 1/2 y)) (pow.f64 x 2)))) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1/2 y) (*.f64 1/2 y))) (pow.f64 x 3)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 y) (*.f64 1/2 y)) (pow.f64 x 2))) (*.f64 1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 3))))))) (*.f64 1/2 (/.f64 1 x)))","(/.f64 1/2 y)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(/.f64 -1/2 x)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) (pow.f64 y 2)))) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 x (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)))) (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/2 (pow.f64 x 2)))) (pow.f64 y 3))) (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) (pow.f64 y 2))))) (*.f64 1/2 (/.f64 1 x)))","(/.f64 -1/2 x)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) (pow.f64 y 2)))) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) (pow.f64 y 2))) (/.f64 (*.f64 x (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x))) (pow.f64 y 3)))))) (*.f64 1/2 (/.f64 1 x)))","(/.f64 x y)","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (/.f64 x y))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","-1","(-.f64 (*.f64 -1 (/.f64 y x)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 y x)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))) 1)","-1","(-.f64 (*.f64 -1 (/.f64 y x)) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))) 1)","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))) 1)","(/.f64 x y)","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (/.f64 x y))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(/.f64 x y)","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (/.f64 x y))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (/.f64 x y))","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(*.f64 -2 (/.f64 x y))","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(*.f64 -2 (/.f64 x y))","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(*.f64 -2 (+.f64 x (/.f64 x (/.f64 y x))))","(*.f64 -2 (+.f64 x (*.f64 (/.f64 x y) x)))","(*.f64 -2 (+.f64 x (/.f64 (*.f64 x x) y)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x)))","(*.f64 -2 (+.f64 (+.f64 x (/.f64 x (/.f64 y x))) (/.f64 (pow.f64 x 3) (*.f64 y y))))","(*.f64 -2 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))))","(*.f64 -2 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 (*.f64 x x) y))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 -2 (+.f64 (+.f64 x (/.f64 x (/.f64 y x))) (/.f64 (pow.f64 x 3) (*.f64 y y)))))","(*.f64 -2 (+.f64 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))) (/.f64 x (pow.f64 (/.f64 y x) 3))))","(*.f64 -2 (+.f64 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 (*.f64 x x) y))) (/.f64 x (pow.f64 (/.f64 y x) 3))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(*.f64 2 (+.f64 y (/.f64 y (/.f64 x y))))","(*.f64 2 (+.f64 y (*.f64 (/.f64 y x) y)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x))))","(*.f64 2 (+.f64 y (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x)))))","(*.f64 2 (+.f64 y (*.f64 (+.f64 1 (/.f64 y x)) (*.f64 (/.f64 y x) y))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 2 (+.f64 y (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x))))))","(*.f64 2 (+.f64 (*.f64 (+.f64 1 (/.f64 y x)) (*.f64 (/.f64 y x) y)) (+.f64 y (*.f64 (pow.f64 (/.f64 y x) 3) y))))","(*.f64 2 (+.f64 (+.f64 y (*.f64 (pow.f64 (/.f64 y x) 3) y)) (*.f64 (+.f64 1 (/.f64 y x)) (*.f64 (/.f64 y x) y))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(*.f64 2 (+.f64 y (/.f64 y (/.f64 x y))))","(*.f64 2 (+.f64 y (*.f64 (/.f64 y x) y)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x))))","(*.f64 2 (+.f64 y (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x)))))","(*.f64 2 (+.f64 y (*.f64 (+.f64 1 (/.f64 y x)) (*.f64 (/.f64 y x) y))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 2 (+.f64 y (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x))))))","(*.f64 2 (+.f64 (*.f64 (+.f64 1 (/.f64 y x)) (*.f64 (/.f64 y x) y)) (+.f64 y (*.f64 (pow.f64 (/.f64 y x) 3) y))))","(*.f64 2 (+.f64 (+.f64 y (*.f64 (pow.f64 (/.f64 y x) 3) y)) (*.f64 (+.f64 1 (/.f64 y x)) (*.f64 (/.f64 y x) y))))","(*.f64 2 y)","(+.f64 (*.f64 2 y) (*.f64 2 (/.f64 (pow.f64 y 2) x)))","(*.f64 2 (+.f64 y (/.f64 (*.f64 y y) x)))","(*.f64 2 (+.f64 y (/.f64 y (/.f64 x y))))","(*.f64 2 (+.f64 y (*.f64 (/.f64 y x) y)))","(+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x))))","(fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x))))","(*.f64 2 (+.f64 y (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x)))))","(*.f64 2 (+.f64 y (*.f64 (+.f64 1 (/.f64 y x)) (*.f64 (/.f64 y x) y))))","(+.f64 (*.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 2 y) (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 2 (/.f64 (pow.f64 y 2) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (fma.f64 2 y (*.f64 2 (+.f64 (/.f64 (pow.f64 y 3) (*.f64 x x)) (/.f64 (*.f64 y y) x)))))","(fma.f64 2 (/.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 2 (+.f64 y (+.f64 (/.f64 y (/.f64 x y)) (/.f64 (pow.f64 y 3) (*.f64 x x))))))","(*.f64 2 (+.f64 (*.f64 (+.f64 1 (/.f64 y x)) (*.f64 (/.f64 y x) y)) (+.f64 y (*.f64 (pow.f64 (/.f64 y x) 3) y))))","(*.f64 2 (+.f64 (+.f64 y (*.f64 (pow.f64 (/.f64 y x) 3) y)) (*.f64 (+.f64 1 (/.f64 y x)) (*.f64 (/.f64 y x) y))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(*.f64 -2 (+.f64 x (/.f64 x (/.f64 y x))))","(*.f64 -2 (+.f64 x (*.f64 (/.f64 x y) x)))","(*.f64 -2 (+.f64 x (/.f64 (*.f64 x x) y)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x)))","(*.f64 -2 (+.f64 (+.f64 x (/.f64 x (/.f64 y x))) (/.f64 (pow.f64 x 3) (*.f64 y y))))","(*.f64 -2 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))))","(*.f64 -2 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 (*.f64 x x) y))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 -2 (+.f64 (+.f64 x (/.f64 x (/.f64 y x))) (/.f64 (pow.f64 x 3) (*.f64 y y)))))","(*.f64 -2 (+.f64 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))) (/.f64 x (pow.f64 (/.f64 y x) 3))))","(*.f64 -2 (+.f64 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 (*.f64 x x) y))) (/.f64 x (pow.f64 (/.f64 y x) 3))))","(*.f64 -2 x)","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))","(*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))","(*.f64 -2 (+.f64 x (/.f64 x (/.f64 y x))))","(*.f64 -2 (+.f64 x (*.f64 (/.f64 x y) x)))","(*.f64 -2 (+.f64 x (/.f64 (*.f64 x x) y)))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x)))","(fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x)))","(*.f64 -2 (+.f64 (+.f64 x (/.f64 x (/.f64 y x))) (/.f64 (pow.f64 x 3) (*.f64 y y))))","(*.f64 -2 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))))","(*.f64 -2 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 (*.f64 x x) y))))","(+.f64 (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) y)) (*.f64 -2 x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (fma.f64 -2 (/.f64 (pow.f64 x 3) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) y) x))))","(fma.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 3)) (*.f64 -2 (+.f64 (+.f64 x (/.f64 x (/.f64 y x))) (/.f64 (pow.f64 x 3) (*.f64 y y)))))","(*.f64 -2 (+.f64 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (*.f64 (/.f64 x y) x))) (/.f64 x (pow.f64 (/.f64 y x) 3))))","(*.f64 -2 (+.f64 (+.f64 x (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 (*.f64 x x) y))) (/.f64 x (pow.f64 (/.f64 y x) 3))))","(/.f64 -1/2 x)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))","(/.f64 1/2 y)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 y) (*.f64 1/2 y)) (pow.f64 x 2)))) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 y) (*.f64 1/2 y)) (pow.f64 x 2))) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 (pow.f64 y 2)) (+.f64 (*.f64 1/2 (pow.f64 y 2)) (*.f64 -1 (*.f64 y (+.f64 (*.f64 -1/2 y) (*.f64 1/2 y)))))) (pow.f64 x 3))))) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))","(/.f64 1/2 y)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 y) (*.f64 1/2 y)) (pow.f64 x 2)))) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 (/.f64 (*.f64 y (+.f64 (*.f64 -1/2 y) (*.f64 1/2 y))) (pow.f64 x 3)) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1/2 y) (*.f64 1/2 y)) (pow.f64 x 2))) (*.f64 1/2 (/.f64 (pow.f64 y 2) (pow.f64 x 3))))))) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 y y) (pow.f64 x 3)) (+.f64 (/.f64 1/2 y) (+.f64 (/.f64 (*.f64 y (*.f64 y 0)) (pow.f64 x 3)) (fma.f64 -1 (/.f64 (*.f64 y 0) (*.f64 x x)) (*.f64 1/2 (/.f64 (*.f64 y y) (pow.f64 x 3))))))) (/.f64 1/2 x))","(fma.f64 -1/2 (/.f64 y (/.f64 (pow.f64 x 3) y)) (+.f64 (+.f64 (/.f64 1/2 y) (/.f64 0 (pow.f64 x 3))) (-.f64 (fma.f64 1/2 (/.f64 y (/.f64 (pow.f64 x 3) y)) (/.f64 0 (*.f64 x x))) (/.f64 1/2 x))))","(fma.f64 -1/2 (/.f64 (*.f64 y y) (pow.f64 x 3)) (+.f64 (*.f64 (/.f64 1/2 (pow.f64 x 3)) (*.f64 y y)) (+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 y (pow.f64 x 3)) y) (/.f64 1/2 y)) (fma.f64 -1/2 (*.f64 (/.f64 y (pow.f64 x 3)) y) (/.f64 -1/2 x)))","(/.f64 1/2 y)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))","(/.f64 -1/2 x)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) (pow.f64 y 2)))) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 -1 (*.f64 x (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)))) (+.f64 (*.f64 1/2 (pow.f64 x 2)) (*.f64 -1/2 (pow.f64 x 2)))) (pow.f64 y 3))) (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) (pow.f64 y 2))))) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))","(/.f64 -1/2 x)","(-.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))","(-.f64 (+.f64 (*.f64 1/2 (/.f64 1 y)) (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) (pow.f64 y 2)))) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (/.f64 1/2 y) (/.f64 1/2 x))","(+.f64 (/.f64 1/2 y) (/.f64 -1/2 x))","(+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))","(-.f64 (+.f64 (*.f64 -1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (+.f64 (*.f64 1/2 (/.f64 1 y)) (+.f64 (*.f64 1/2 (/.f64 (pow.f64 x 2) (pow.f64 y 3))) (+.f64 (*.f64 -1 (/.f64 (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x)) (pow.f64 y 2))) (/.f64 (*.f64 x (+.f64 (*.f64 1/2 x) (*.f64 -1/2 x))) (pow.f64 y 3)))))) (*.f64 1/2 (/.f64 1 x)))","(-.f64 (fma.f64 -1/2 (/.f64 (*.f64 x x) (pow.f64 y 3)) (+.f64 (/.f64 1/2 y) (fma.f64 1/2 (/.f64 (*.f64 x x) (pow.f64 y 3)) (fma.f64 -1 (/.f64 (*.f64 x 0) (*.f64 y y)) (/.f64 x (/.f64 (pow.f64 y 3) (*.f64 x 0))))))) (/.f64 1/2 x))","(+.f64 (+.f64 (+.f64 (/.f64 0 (pow.f64 y 3)) (fma.f64 1/2 (/.f64 x (/.f64 (pow.f64 y 3) x)) (/.f64 0 (*.f64 y y)))) (fma.f64 -1/2 (/.f64 x (/.f64 (pow.f64 y 3) x)) (/.f64 1/2 y))) (/.f64 -1/2 x))","(+.f64 (fma.f64 1/2 (*.f64 (/.f64 x (pow.f64 y 3)) x) (/.f64 1/2 y)) (fma.f64 -1/2 (*.f64 (/.f64 x (pow.f64 y 3)) x) (/.f64 -1/2 x)))","(/.f64 x y)","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (/.f64 x y))","(+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y)))","(+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (pow.f64 (/.f64 x y) 3))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (+.f64 (pow.f64 (/.f64 x y) 3) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (+.f64 (pow.f64 (/.f64 x y) 3) (pow.f64 (/.f64 x y) 4)))","-1","(-.f64 (*.f64 -1 (/.f64 y x)) 1)","(fma.f64 -1 (/.f64 y x) -1)","(-.f64 -1 (/.f64 y x))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))) 1)","(+.f64 (neg.f64 (/.f64 (*.f64 y y) (*.f64 x x))) (fma.f64 -1 (/.f64 y x) -1))","(fma.f64 -1 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) -1)","(-.f64 -1 (*.f64 (+.f64 1 (/.f64 y x)) (/.f64 y x)))","(+.f64 -1 (*.f64 (/.f64 y x) (-.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))) 1)","(+.f64 (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 y x)))) -1)","(+.f64 -1 (-.f64 (-.f64 (neg.f64 (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 (/.f64 y x) (/.f64 y x))))","(+.f64 -1 (-.f64 (*.f64 (/.f64 y x) (-.f64 -1 (/.f64 y x))) (pow.f64 (/.f64 y x) 3)))","(+.f64 (-.f64 -1 (pow.f64 (/.f64 y x) 3)) (*.f64 (/.f64 y x) (-.f64 -1 (/.f64 y x))))","-1","(-.f64 (*.f64 -1 (/.f64 y x)) 1)","(fma.f64 -1 (/.f64 y x) -1)","(-.f64 -1 (/.f64 y x))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))) 1)","(+.f64 (neg.f64 (/.f64 (*.f64 y y) (*.f64 x x))) (fma.f64 -1 (/.f64 y x) -1))","(fma.f64 -1 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) -1)","(-.f64 -1 (*.f64 (+.f64 1 (/.f64 y x)) (/.f64 y x)))","(+.f64 -1 (*.f64 (/.f64 y x) (-.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))) 1)","(+.f64 (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 y x)))) -1)","(+.f64 -1 (-.f64 (-.f64 (neg.f64 (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 (/.f64 y x) (/.f64 y x))))","(+.f64 -1 (-.f64 (*.f64 (/.f64 y x) (-.f64 -1 (/.f64 y x))) (pow.f64 (/.f64 y x) 3)))","(+.f64 (-.f64 -1 (pow.f64 (/.f64 y x) 3)) (*.f64 (/.f64 y x) (-.f64 -1 (/.f64 y x))))","-1","(-.f64 (*.f64 -1 (/.f64 y x)) 1)","(fma.f64 -1 (/.f64 y x) -1)","(-.f64 -1 (/.f64 y x))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (*.f64 -1 (/.f64 y x))) 1)","(+.f64 (neg.f64 (/.f64 (*.f64 y y) (*.f64 x x))) (fma.f64 -1 (/.f64 y x) -1))","(fma.f64 -1 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) -1)","(-.f64 -1 (*.f64 (+.f64 1 (/.f64 y x)) (/.f64 y x)))","(+.f64 -1 (*.f64 (/.f64 y x) (-.f64 -1 (/.f64 y x))))","(-.f64 (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 2) (pow.f64 x 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))) 1)","(+.f64 (fma.f64 -1 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 y x)))) -1)","(+.f64 -1 (-.f64 (-.f64 (neg.f64 (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 (/.f64 y x) (/.f64 y x))))","(+.f64 -1 (-.f64 (*.f64 (/.f64 y x) (-.f64 -1 (/.f64 y x))) (pow.f64 (/.f64 y x) 3)))","(+.f64 (-.f64 -1 (pow.f64 (/.f64 y x) 3)) (*.f64 (/.f64 y x) (-.f64 -1 (/.f64 y x))))","(/.f64 x y)","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (/.f64 x y))","(+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y)))","(+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (pow.f64 (/.f64 x y) 3))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (+.f64 (pow.f64 (/.f64 x y) 3) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (+.f64 (pow.f64 (/.f64 x y) 3) (pow.f64 (/.f64 x y) 4)))","(/.f64 x y)","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (/.f64 x y))","(+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y)))","(+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (pow.f64 (/.f64 x y) 3))","(+.f64 (/.f64 (pow.f64 x 2) (pow.f64 y 2)) (+.f64 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (/.f64 x y) (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (+.f64 (pow.f64 (/.f64 x y) 3) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (+.f64 (pow.f64 (/.f64 x y) 3) (pow.f64 (/.f64 x y) 4)))","(*.f64 -2 (/.f64 x y))","(/.f64 (*.f64 -2 x) y)","(/.f64 x (/.f64 y -2))","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y))))","(*.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))))","(*.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (pow.f64 (/.f64 x y) 3)))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(*.f64 -2 (+.f64 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(*.f64 -2 (+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (+.f64 (pow.f64 (/.f64 x y) 3) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(*.f64 -2 (+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (+.f64 (pow.f64 (/.f64 x y) 3) (pow.f64 (/.f64 x y) 4))))","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(fma.f64 2 (/.f64 y x) 2)","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 2 (*.f64 2 (+.f64 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x)))))","(fma.f64 2 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) 2)","(fma.f64 2 (*.f64 (+.f64 1 (/.f64 y x)) (/.f64 y x)) 2)","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 2 (fma.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (*.f64 2 (+.f64 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x))))))","(+.f64 2 (*.f64 2 (+.f64 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (+.f64 1 (/.f64 y x)) (/.f64 y x))) 2)","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(fma.f64 2 (/.f64 y x) 2)","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 2 (*.f64 2 (+.f64 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x)))))","(fma.f64 2 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) 2)","(fma.f64 2 (*.f64 (+.f64 1 (/.f64 y x)) (/.f64 y x)) 2)","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 2 (fma.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (*.f64 2 (+.f64 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x))))))","(+.f64 2 (*.f64 2 (+.f64 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (+.f64 1 (/.f64 y x)) (/.f64 y x))) 2)","2","(+.f64 2 (*.f64 2 (/.f64 y x)))","(fma.f64 2 (/.f64 y x) 2)","(+.f64 2 (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2)))))","(+.f64 2 (*.f64 2 (+.f64 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x)))))","(fma.f64 2 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) 2)","(fma.f64 2 (*.f64 (+.f64 1 (/.f64 y x)) (/.f64 y x)) 2)","(+.f64 2 (+.f64 (*.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (+.f64 (*.f64 2 (/.f64 y x)) (*.f64 2 (/.f64 (pow.f64 y 2) (pow.f64 x 2))))))","(+.f64 2 (fma.f64 2 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (*.f64 2 (+.f64 (/.f64 y x) (/.f64 (*.f64 y y) (*.f64 x x))))))","(+.f64 2 (*.f64 2 (+.f64 (+.f64 (/.f64 y x) (*.f64 (/.f64 y x) (/.f64 y x))) (/.f64 (pow.f64 y 3) (pow.f64 x 3)))))","(fma.f64 2 (+.f64 (pow.f64 (/.f64 y x) 3) (*.f64 (+.f64 1 (/.f64 y x)) (/.f64 y x))) 2)","(*.f64 -2 (/.f64 x y))","(/.f64 (*.f64 -2 x) y)","(/.f64 x (/.f64 y -2))","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y))))","(*.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))))","(*.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (pow.f64 (/.f64 x y) 3)))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(*.f64 -2 (+.f64 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(*.f64 -2 (+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (+.f64 (pow.f64 (/.f64 x y) 3) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(*.f64 -2 (+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (+.f64 (pow.f64 (/.f64 x y) 3) (pow.f64 (/.f64 x y) 4))))","(*.f64 -2 (/.f64 x y))","(/.f64 (*.f64 -2 x) y)","(/.f64 x (/.f64 y -2))","(+.f64 (*.f64 -2 (/.f64 x y)) (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))))","(*.f64 -2 (+.f64 (/.f64 x y) (/.f64 (*.f64 x x) (*.f64 y y))))","(*.f64 -2 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))))","(*.f64 -2 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -2 (/.f64 x y) (*.f64 -2 (+.f64 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (/.f64 x y) (+.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(*.f64 -2 (+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (pow.f64 (/.f64 x y) 3)))","(+.f64 (*.f64 -2 (/.f64 x y)) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -2 (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (*.f64 -2 (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(fma.f64 -2 (/.f64 x y) (fma.f64 -2 (/.f64 (*.f64 x x) (*.f64 y y)) (*.f64 -2 (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))))","(*.f64 -2 (+.f64 (+.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) (+.f64 (/.f64 (pow.f64 x 3) (pow.f64 y 3)) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(*.f64 -2 (+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (+.f64 (pow.f64 (/.f64 x y) 3) (/.f64 (pow.f64 x 4) (pow.f64 y 4)))))","(*.f64 -2 (+.f64 (*.f64 (+.f64 (/.f64 x y) 1) (/.f64 x y)) (+.f64 (pow.f64 (/.f64 x y) 3) (pow.f64 (/.f64 x y) 4))))"]],"stop":[["node limit",1]],"time":52.30810546875,"type":"simplify"},{"compiler":[[2955,1808]],"time":33.39111328125,"type":"eval"},{"alts":[["(-.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))","done",0.015625],["(pow.f64 (*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y) -1)","done",8.139134390626403],["(/.f64 (/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x) y)","done",9.12890625]],"compiler":[[9,7],[13,9],[13,9]],"count":[[174,3]],"kept":[{"done":[2,2],"fresh":[0,0],"new":[171,0],"picked":[1,1]}],"min-error":[0],"time":37.48486328125,"type":"prune"},{"accuracy":[0.015625],"baseline":[0.015625],"branch":[["x",0.015625,1],["y",0.015625,1],["(/.f64 (-.f64 x y) (*.f64 (*.f64 x 2) y))",0.015625,1]],"compiler":[[3,2],[3,2],[11,7],[52,35]],"count":[[5,1]],"inputs":[["(pow.f64 (*.f64 (*.f64 -2 (/.f64 x (-.f64 y x))) y) -1)","(fma.f64 (sqrt.f64 (/.f64 -1/2 x)) (sqrt.f64 (/.f64 -1/2 x)) (/.f64 1/2 y))","(/.f64 (/.f64 (-.f64 (*.f64 -1/2 y) (*.f64 -1/2 x)) x) y)","(-.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))","(/.f64 (-.f64 x y) (*.f64 (*.f64 x 2) y))"]],"link":["."],"name":["Linear.Projection:inversePerspective from linear-1.19.1.3, B"],"oracle":[44.050350954781145],"outputs":[["(-.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))"]],"time":11.762939453125,"times":[["x",3.6328125],["y",3.56201171875],["(/.f64 (-.f64 x y) (*.f64 (*.f64 x 2) y))",3.4150390625]],"type":"regimes"},{"compiler":[[9,7]],"egraph":[[4,20,10,0.000106042],[3,19,10,8.6583e-5],[2,17,10,6.6708e-5],[1,9,10,4.7125e-5],[0,7,10,1.65e-5]],"inputs":[["(-.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))"]],"method":["egg-herbie"],"outputs":[["(-.f64 (/.f64 -1/2 x) (/.f64 -1/2 y))","(+.f64 (/.f64 -1/2 x) (/.f64 1/2 y))"]],"stop":[["done",1],["saturated",1]],"time":8.507080078125,"type":"simplify"},{"time":0.011962890625,"type":"soundness"},{"compiler":[[9,7]],"remove-preprocessing":[[]],"time":7.989013671875,"type":"end"}]