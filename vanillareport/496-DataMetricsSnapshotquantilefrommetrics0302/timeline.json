[{"compiler":[[14,9]],"method":["search"],"sampling":[[12,0.17153955242975893,0.7943450865355315,0.03411536103470958],[11,0.12475603813073377,0.855748449053002,0.01949551281626427],[10,0.09356702859805033,0.9044812764478198,0.0019516949541298345],[9,0.062378019065366885,0.9356702859805033,0.0019516949541298345],[8,0.0,0.9980483050458702,0.0019516949541298345],[7,0.0,0.9980483050458702,0.0019516949541298345],[6,0.0,0.9980483050458702,0.0019516949541298345],[5,0.0,0.9980483050458702,0.0019516949541298345],[4,0.0,0.9980483050458702,0.0019516949541298345],[3,0.0,0.9980483050458702,0.0019516949541298345],[2,0.0,0.9980483050458702,0.0019516949541298345],[1,0.0,0.9980483050458702,0.0019516949541298345],[0,0.0,0.9980483050458702,0.0019516949541298345]],"time":131.9970703125,"type":"analyze"},{"outcomes":[["body",256,"invalid",169.440673828125,3902],["body",256,"valid",359.63232421875,8256]],"time":541.680908203125,"type":"sample"},{"compiler":[[13,8]],"egraph":[[0,4,4,3.833e-6],[6,7134,77,0.041937876],[5,4316,77,0.02778571],[4,2577,77,0.012029418],[3,608,77,0.004603584],[2,162,77,0.0011710840000000002],[1,56,77,0.00035220900000000003],[0,29,91,0.000126625]],"inputs":[["0","1","2","3"],["(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(+.f64 y (*.f64 (-.f64 x z) (-.f64 t y)))","(+.f64 z (*.f64 (-.f64 y x) (-.f64 t z)))","(+.f64 t (*.f64 (-.f64 y z) (-.f64 x t)))","(+.f64 x (*.f64 (-.f64 z y) (-.f64 t x)))","(+.f64 x (*.f64 (-.f64 t z) (-.f64 y x)))","(+.f64 x (*.f64 (-.f64 y t) (-.f64 z x)))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1","2","3"],["(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 y z) (-.f64 t x) x)","(+.f64 y (*.f64 (-.f64 x z) (-.f64 t y)))","(fma.f64 (-.f64 x z) (-.f64 t y) y)","(+.f64 z (*.f64 (-.f64 y x) (-.f64 t z)))","(fma.f64 (-.f64 y x) (-.f64 t z) z)","(+.f64 t (*.f64 (-.f64 y z) (-.f64 x t)))","(fma.f64 (-.f64 y z) (-.f64 x t) t)","(+.f64 x (*.f64 (-.f64 z y) (-.f64 t x)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 z y)))","(fma.f64 (-.f64 t x) (-.f64 z y) x)","(+.f64 x (*.f64 (-.f64 t z) (-.f64 y x)))","(+.f64 x (*.f64 (-.f64 y x) (-.f64 t z)))","(fma.f64 (-.f64 y x) (-.f64 t z) x)","(+.f64 x (*.f64 (-.f64 y t) (-.f64 z x)))","(fma.f64 (-.f64 y t) (-.f64 z x) x)"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":67.554931640625,"type":"preprocess"},{"count":[[1,2]],"egraph":[[17,7762,11,0.226820124],[16,7762,11,0.196318041],[15,7762,11,0.166587957],[14,5488,11,0.135927291],[13,5488,11,0.103188374],[12,5488,11,0.089683041],[11,5446,11,0.073957541],[10,5446,11,0.057959791],[9,5435,11,0.048885041],[8,5179,11,0.039199208],[7,4146,11,0.029122750000000003],[6,3033,11,0.017184667],[5,1557,11,0.009423042],[4,471,11,0.003364542],[3,123,11,0.001073542],[2,37,11,0.000285583],[1,15,11,0.000109417],[0,9,13,4.4375e-5]],"inputs":[["(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 y z) (-.f64 t x) x)"]],"stop":[["saturated",1]],"time":242.80517578125,"type":"simplify"},{"compiler":[[21,9]],"time":0.492919921875,"type":"eval"},{"alts":[["(fma.f64 (-.f64 y z) (-.f64 t x) x)","next",0.01953125]],"compiler":[[12,7],[12,7]],"count":[[3,1]],"kept":[{"done":[0,0],"fresh":[1,0],"new":[2,1],"picked":[0,0]}],"min-error":[0.01953125],"time":0.950927734375,"type":"prune"},{"compiler":[[22,7]],"locations":[["(fma.f64 (-.f64 y z) (-.f64 t x) x)",0.01953125,true]],"time":5.112060546875,"type":"localize"},{"count":[[1,48]],"series":[["(fma.f64 (-.f64 y z) (-.f64 t x) x)","x","-inf",0.40185546875],["(fma.f64 (-.f64 y z) (-.f64 t x) x)","x","inf",0.364013671875],["(fma.f64 (-.f64 y z) (-.f64 t x) x)","x","0",0.31103515625],["(fma.f64 (-.f64 y z) (-.f64 t x) x)","t","-inf",0.307861328125],["(fma.f64 (-.f64 y z) (-.f64 t x) x)","t","inf",0.35693359375],["(fma.f64 (-.f64 y z) (-.f64 t x) x)","t","0",0.486083984375],["(fma.f64 (-.f64 y z) (-.f64 t x) x)","z","-inf",0.27099609375],["(fma.f64 (-.f64 y z) (-.f64 t x) x)","z","inf",0.370849609375],["(fma.f64 (-.f64 y z) (-.f64 t x) x)","z","0",0.3349609375],["(fma.f64 (-.f64 y z) (-.f64 t x) x)","y","-inf",0.40576171875],["(fma.f64 (-.f64 y z) (-.f64 t x) x)","y","inf",0.411865234375],["(fma.f64 (-.f64 y z) (-.f64 t x) x)","y","0",0.508056640625]],"time":4.7958984375,"type":"series"},{"count":[[1,30]],"egraph":[[2,2636,11,0.026489625],[1,180,11,0.003971625],[0,8,11,0.000237583]],"inputs":[["(fma.f64 (-.f64 y z) (-.f64 t x) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 (-.f64 y z) (-.f64 t x) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 (-.f64 y z) (-.f64 t x)) 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x)))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 y z) (-.f64 t x) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x)) (pow.f64 (cbrt.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x)) 2) (cbrt.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x)) (sqrt.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (-.f64 y z) (-.f64 t x)) 3) (pow.f64 x 3)) (+.f64 (pow.f64 (*.f64 (-.f64 y z) (-.f64 t x)) 2) (-.f64 (*.f64 x x) (*.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (-.f64 y z) (-.f64 t x)) 2) (*.f64 x x)) (-.f64 (*.f64 (-.f64 y z) (-.f64 t x)) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (exp.f64 (*.f64 (-.f64 y z) (-.f64 t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (*.f64 (-.f64 y z) (-.f64 t x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 (-.f64 y z) (-.f64 t x))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x)) 1))))))"]],"rules":[["egg-rr",30]],"stop":[["node limit",1]],"time":47.571044921875,"type":"rewrite"},{"count":[[78,51]],"egraph":[[15,7090,485,0.21822471000000002],[14,7090,485,0.19417362600000002],[13,7090,485,0.166296084],[12,5056,485,0.138116334],[11,5056,485,0.107061625],[10,5015,485,0.09383274999999999],[9,4679,485,0.07766108299999999],[8,4679,485,0.057055207999999996],[7,4641,485,0.047538958],[6,4451,485,0.038431],[5,3821,485,0.02903025],[4,1820,485,0.016385167],[3,736,485,0.005559458],[2,239,488,0.001861625],[1,100,569,0.0006245000000000001],[0,36,753,0.000201625]],"inputs":[["(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 (*.f64 y (-.f64 t x)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 (*.f64 y (-.f64 t x)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 (*.f64 y (-.f64 t x)) x))","(*.f64 y (-.f64 t x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 x (*.f64 y (-.f64 t x))))","(*.f64 y (-.f64 t x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 y (-.f64 t x)) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(*.f64 -1 (*.f64 z (-.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(*.f64 -1 (*.f64 z (-.f64 t x)))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) x)","(fma.f64 -1 (*.f64 (-.f64 t x) z) x)","(-.f64 x (*.f64 (-.f64 t x) z))","(fma.f64 z (fma.f64 -1 t x) x)","(fma.f64 z (-.f64 x t) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 (*.f64 y (-.f64 t x)) x))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 (*.f64 y (-.f64 t x)) x))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 (*.f64 y (-.f64 t x)) x))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(*.f64 y (-.f64 t x))","(*.f64 (-.f64 t x) y)","(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 x (*.f64 y (-.f64 t x))))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 x (*.f64 y (-.f64 t x))))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 x (*.f64 y (-.f64 t x))))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(*.f64 y (-.f64 t x))","(*.f64 (-.f64 t x) y)","(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 x (*.f64 y (-.f64 t x))))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 x (*.f64 y (-.f64 t x))))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 x (*.f64 y (-.f64 t x))))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 y (-.f64 t x)) x)","(fma.f64 y (-.f64 t x) x)","(fma.f64 (-.f64 t x) y x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(*.f64 -1 (*.f64 z (-.f64 t x)))","(neg.f64 (*.f64 (-.f64 t x) z))","(*.f64 (-.f64 t x) (neg.f64 z))","(*.f64 z (fma.f64 -1 t x))","(*.f64 z (-.f64 x t))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(*.f64 -1 (*.f64 z (-.f64 t x)))","(neg.f64 (*.f64 (-.f64 t x) z))","(*.f64 (-.f64 t x) (neg.f64 z))","(*.f64 z (fma.f64 -1 t x))","(*.f64 z (-.f64 x t))","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 z (-.f64 t x))) (+.f64 x (*.f64 y (-.f64 t x))))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","(fma.f64 -1 (*.f64 x (-.f64 y z)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 -1 (*.f64 x (-.f64 y z)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(fma.f64 -1 (*.f64 x (-.f64 y z)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(fma.f64 -1 (*.f64 (-.f64 t x) z) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)"]],"stop":[["saturated",1]],"time":246.06298828125,"type":"simplify"},{"compiler":[[627,168]],"time":5.051025390625,"type":"eval"},{"alts":[["(pow.f64 (cbrt.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x)) 3)","fresh",0.6811677735163767],["(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 (*.f64 y (-.f64 t x)) x))","fresh",0.0234375],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","next",0.0234375],["(fma.f64 (-.f64 y z) (-.f64 t x) x)","done",0.01953125]],"compiler":[[15,10],[19,11],[19,11],[12,7],[15,10],[19,11],[19,11]],"count":[[52,4]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[51,3],"picked":[1,1]}],"min-error":[0],"time":9.494140625,"type":"prune"},{"compiler":[[53,17]],"locations":[["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)",0.00390625,true],["(*.f64 (-.f64 y z) x)",0.0078125,true],["(*.f64 t (-.f64 y z))",0.01171875,true],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))",0.01953125,true]],"time":8.62890625,"type":"localize"},{"count":[[4,129]],"series":[["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","x","-inf",0.287109375],["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","x","inf",0.2529296875],["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","x","0",0.224853515625],["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","z","-inf",0.218994140625],["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","z","inf",0.160888671875],["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","z","0",0.18896484375],["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","y","-inf",0.156005859375],["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","y","inf",0.180908203125],["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","y","0",0.192138671875],["(*.f64 (-.f64 y z) x)","x","-inf",0.176025390625],["(*.f64 (-.f64 y z) x)","x","inf",0.201171875],["(*.f64 (-.f64 y z) x)","x","0",0.214111328125],["(*.f64 (-.f64 y z) x)","z","-inf",0.164794921875],["(*.f64 (-.f64 y z) x)","z","inf",0.14599609375],["(*.f64 (-.f64 y z) x)","z","0",0.15185546875],["(*.f64 (-.f64 y z) x)","y","-inf",0.23486328125],["(*.f64 (-.f64 y z) x)","y","inf",0.14892578125],["(*.f64 (-.f64 y z) x)","y","0",0.173095703125],["(*.f64 t (-.f64 y z))","z","-inf",0.14892578125],["(*.f64 t (-.f64 y z))","z","inf",0.14794921875],["(*.f64 t (-.f64 y z))","z","0",0.170166015625],["(*.f64 t (-.f64 y z))","y","-inf",0.151123046875],["(*.f64 t (-.f64 y z))","y","inf",0.168212890625],["(*.f64 t (-.f64 y z))","y","0",0.156005859375],["(*.f64 t (-.f64 y z))","t","-inf",0.18798828125],["(*.f64 t (-.f64 y z))","t","inf",0.217041015625],["(*.f64 t (-.f64 y z))","t","0",0.22705078125],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","x","-inf",1.10595703125],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","x","inf",0.302001953125],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","x","0",0.368896484375],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","z","-inf",0.404052734375],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","z","inf",0.428955078125],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","z","0",0.94091796875],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","y","-inf",0.43701171875],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","y","inf",0.427978515625],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","y","0",0.489013671875],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","t","-inf",0.331787109375],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","t","inf",0.4091796875],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","t","0",0.736083984375]],"time":11.87109375,"type":"series"},{"count":[[4,245]],"egraph":[[2,4104,37,0.029311293],[1,270,41,0.005212834],[0,12,43,0.000299667]],"inputs":[["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","(*.f64 t (-.f64 y z))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 t (-.f64 y z)) 2) (-.f64 (*.f64 t (-.f64 y z)) (fma.f64 (-.f64 y z) x x))) (/.f64 (pow.f64 (fma.f64 (-.f64 y z) x x) 2) (-.f64 (*.f64 t (-.f64 y z)) (fma.f64 (-.f64 y z) x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x))) (pow.f64 (cbrt.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x))) 2) (cbrt.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x))) (sqrt.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 t (-.f64 y z)) 3) (pow.f64 (fma.f64 (-.f64 y z) x x) 3)) (/.f64 1 (fma.f64 (fma.f64 (-.f64 y z) x x) (-.f64 (fma.f64 (-.f64 y z) x x) (*.f64 t (-.f64 y z))) (pow.f64 (*.f64 t (-.f64 y z)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 t (-.f64 y z)) 2) (pow.f64 (fma.f64 (-.f64 y z) x x) 2)) (/.f64 1 (-.f64 (*.f64 t (-.f64 y z)) (fma.f64 (-.f64 y z) x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (fma.f64 (-.f64 y z) x x) (-.f64 (fma.f64 (-.f64 y z) x x) (*.f64 t (-.f64 y z))) (pow.f64 (*.f64 t (-.f64 y z)) 2)) (+.f64 (pow.f64 (*.f64 t (-.f64 y z)) 3) (pow.f64 (fma.f64 (-.f64 y z) x x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (*.f64 t (-.f64 y z)) (fma.f64 (-.f64 y z) x x)) (-.f64 (pow.f64 (*.f64 t (-.f64 y z)) 2) (pow.f64 (fma.f64 (-.f64 y z) x x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 t (-.f64 y z)) 3) (pow.f64 (fma.f64 (-.f64 y z) x x) 3)) (fma.f64 (fma.f64 (-.f64 y z) x x) (-.f64 (fma.f64 (-.f64 y z) x x) (*.f64 t (-.f64 y z))) (pow.f64 (*.f64 t (-.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 t (-.f64 y z)) 3) (pow.f64 (fma.f64 (-.f64 y z) x x) 3)) (+.f64 (pow.f64 (fma.f64 (-.f64 y z) x x) 2) (-.f64 (pow.f64 (*.f64 t (-.f64 y z)) 2) (*.f64 (*.f64 t (-.f64 y z)) (fma.f64 (-.f64 y z) x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 t (-.f64 y z)) 2) (pow.f64 (fma.f64 (-.f64 y z) x x) 2)) (-.f64 (*.f64 t (-.f64 y z)) (fma.f64 (-.f64 y z) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 t (-.f64 y z)) 3) (pow.f64 (fma.f64 (-.f64 y z) x x) 3))) (neg.f64 (fma.f64 (fma.f64 (-.f64 y z) x x) (-.f64 (fma.f64 (-.f64 y z) x x) (*.f64 t (-.f64 y z))) (pow.f64 (*.f64 t (-.f64 y z)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 t (-.f64 y z)) 2) (pow.f64 (fma.f64 (-.f64 y z) x x) 2))) (neg.f64 (-.f64 (*.f64 t (-.f64 y z)) (fma.f64 (-.f64 y z) x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x)) 3) (pow.f64 x 3)) (fma.f64 (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x)) (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x)) (-.f64 (*.f64 x x) (*.f64 (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x)) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (fma.f64 (-.f64 y z) x x) 2) (pow.f64 (*.f64 t (-.f64 y z)) 2)) (-.f64 (fma.f64 (-.f64 y z) x x) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x)) (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x))) (*.f64 x x)) (-.f64 (*.f64 t (-.f64 y z)) (fma.f64 (-.f64 y z) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 t (-.f64 y z)))) (exp.f64 (fma.f64 (-.f64 y z) x x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (-.f64 y z)) t) (+.f64 1 (expm1.f64 (fma.f64 (-.f64 y z) x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 t (-.f64 y z)))) (+.f64 1 (expm1.f64 (fma.f64 (-.f64 y z) x x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (exp.f64 (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (*.f64 (pow.f64 (exp.f64 (-.f64 y z)) t) (pow.f64 (exp.f64 x) (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (*.f64 (pow.f64 (exp.f64 (-.f64 y z)) t) (pow.f64 (exp.f64 x) (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 (-.f64 y z) x x))) (pow.f64 (exp.f64 (-.f64 y z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 (-.f64 y z) x x)) (+.f64 1 (expm1.f64 (*.f64 t (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 (-.f64 y z) x x))) (+.f64 1 (expm1.f64 (*.f64 t (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 (-.f64 y z)) t) (pow.f64 (exp.f64 x) (-.f64 y z))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 (-.f64 y z)) t) (pow.f64 (exp.f64 x) (-.f64 y z))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (-.f64 y z) (fma.f64 (-.f64 y z) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y z) t (fma.f64 (-.f64 y z) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y z) x (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y z) (neg.f64 x) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y z) (*.f64 x -1) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (-.f64 y z)) 1 (fma.f64 (-.f64 y z) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (-.f64 y z) x) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (-.f64 y z) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (neg.f64 (-.f64 y z)) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (fma.f64 (-.f64 y z) -1 1) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (+.f64 1 (neg.f64 (-.f64 y z))) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y z) x) -1 (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y z) x) 1 (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (-.f64 y z) x x) 1 (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 t (-.f64 y z)) (fma.f64 (-.f64 y z) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (-.f64 y z) x) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 (-.f64 y z) x x) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 (-.f64 y z) x x)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 y z) x x) 2)) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 y z) x x) 2)) (cbrt.f64 (fma.f64 (-.f64 y z) x x)) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (cbrt.f64 x) (-.f64 y z)) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) (*.f64 (cbrt.f64 (-.f64 y z)) x) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) (*.f64 (cbrt.f64 (-.f64 y z)) t) (fma.f64 (-.f64 y z) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 t t)) (*.f64 (cbrt.f64 t) (-.f64 y z)) (fma.f64 (-.f64 y z) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2) (fma.f64 (-.f64 y z) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2) (cbrt.f64 (*.f64 t (-.f64 y z))) (fma.f64 (-.f64 y z) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (-.f64 y z) x)) (pow.f64 (cbrt.f64 (*.f64 (-.f64 y z) x)) 2) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 y z) x)) 2) (cbrt.f64 (*.f64 (-.f64 y z) x)) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 y z) x)) 2) (neg.f64 (cbrt.f64 (*.f64 (-.f64 y z) x))) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 (-.f64 y z) x x)) (sqrt.f64 (fma.f64 (-.f64 y z) x x)) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (-.f64 y z)) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 y z)) (*.f64 (sqrt.f64 (-.f64 y z)) x) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 y z)) (*.f64 (sqrt.f64 (-.f64 y z)) t) (fma.f64 (-.f64 y z) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 t) (*.f64 (sqrt.f64 t) (-.f64 y z)) (fma.f64 (-.f64 y z) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 t (-.f64 y z))) (sqrt.f64 (*.f64 t (-.f64 y z))) (fma.f64 (-.f64 y z) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (-.f64 y z) x)) (sqrt.f64 (*.f64 (-.f64 y z) x)) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (-.f64 y z) x)) (neg.f64 (sqrt.f64 (*.f64 (-.f64 y z) x))) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (-.f64 y z) x)) (*.f64 (sqrt.f64 (*.f64 (-.f64 y z) x)) -1) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (*.f64 (-.f64 y z) x) 3) (pow.f64 x 3)) (/.f64 1 (fma.f64 x (fma.f64 (-.f64 y z) x x) (pow.f64 (*.f64 (-.f64 y z) x) 2))) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 (-.f64 y z) x) 2) (*.f64 x x)) (/.f64 1 (-.f64 (*.f64 (-.f64 y z) x) x)) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x)) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x))) (cbrt.f64 (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x)))) (cbrt.f64 (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x))) (sqrt.f64 (fma.f64 t (-.f64 y z) (*.f64 (-.f64 y z) x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (-.f64 y z) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 x) (-.f64 y z) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (*.f64 (-.f64 y z) x))) (sqrt.f64 (*.f64 (-.f64 y z) x)) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 y z) x)) 2)) (cbrt.f64 (*.f64 (-.f64 y z) x)) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (-.f64 y z) -1 1) x (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y z) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y z) (sqrt.f64 x)) (sqrt.f64 x) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (cbrt.f64 (-.f64 y z)) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sqrt.f64 (-.f64 y z))) (sqrt.f64 (-.f64 y z)) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (cbrt.f64 (-.f64 y z)) (fma.f64 (-.f64 y z) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (sqrt.f64 (-.f64 y z))) (sqrt.f64 (-.f64 y z)) (fma.f64 (-.f64 y z) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y z) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t) (fma.f64 (-.f64 y z) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y z) (sqrt.f64 t)) (sqrt.f64 t) (fma.f64 (-.f64 y z) x x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 (-.f64 y z) x)) 2)) (cbrt.f64 (*.f64 (-.f64 y z) x)) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 (*.f64 (-.f64 y z) x))) (sqrt.f64 (*.f64 (-.f64 y z) x)) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (-.f64 y z)) 1) x (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (-.f64 y z)) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x) (+.f64 x (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (-.f64 y z)) (sqrt.f64 x)) (sqrt.f64 x) (+.f64 x (*.f64 t (-.f64 y z))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y t) (*.f64 (neg.f64 z) t))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 t y) (*.f64 t (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 y z)) t)) (cbrt.f64 (pow.f64 (exp.f64 (-.f64 y z)) t)))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 (-.f64 y z)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 y z)) t))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 (-.f64 y z)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 t (-.f64 y z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 y 3) (pow.f64 z 3)) t) (fma.f64 y y (*.f64 z (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 y y) (*.f64 z z)) t) (+.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (fma.f64 y y (*.f64 z (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 t (-.f64 (*.f64 y y) (*.f64 z z))) (+.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 t (-.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 t (-.f64 y z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 t (-.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 t (-.f64 y z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (-.f64 y z)) t))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 t (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 t (-.f64 y z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 t (-.f64 y z))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t y (*.f64 t (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y t (*.f64 (neg.f64 z) t))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 (-.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y x) (*.f64 (neg.f64 z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x y) (*.f64 x (neg.f64 z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (-.f64 y z))) (cbrt.f64 (pow.f64 (exp.f64 x) (-.f64 y z))))) (log.f64 (cbrt.f64 (pow.f64 (exp.f64 x) (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (-.f64 y z)))) (log.f64 (sqrt.f64 (pow.f64 (exp.f64 x) (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (-.f64 y z) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 (-.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (pow.f64 y 3) (pow.f64 z 3)) x) (fma.f64 y y (*.f64 z (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 (*.f64 y y) (*.f64 z z)) x) (+.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (-.f64 (pow.f64 y 3) (pow.f64 z 3))) (fma.f64 y y (*.f64 z (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 x (-.f64 (*.f64 y y) (*.f64 z z))) (+.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (-.f64 y z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (-.f64 y z) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (-.f64 y z) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (-.f64 y z) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 (-.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (-.f64 y z) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 x) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 (-.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (-.f64 y z) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (-.f64 y z) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 x 3) (pow.f64 (-.f64 y z) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (-.f64 y z) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y x (*.f64 (neg.f64 z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x y (*.f64 x (neg.f64 z)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 x (*.f64 (-.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 (-.f64 y z) x x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 (-.f64 y z) x) 2) (-.f64 (*.f64 (-.f64 y z) x) x)) (/.f64 (*.f64 x x) (-.f64 (*.f64 (-.f64 y z) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (fma.f64 (-.f64 y z) -1 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 1 (neg.f64 (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 y z) x x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 (-.f64 y z) x x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 (-.f64 y z) x x)) (cbrt.f64 (pow.f64 (fma.f64 (-.f64 y z) x x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 (-.f64 y z) x x) 2)) (cbrt.f64 (fma.f64 (-.f64 y z) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 (-.f64 y z) x x)) (sqrt.f64 (fma.f64 (-.f64 y z) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 (-.f64 y z) x) 3) (pow.f64 x 3)) (/.f64 1 (fma.f64 x (fma.f64 (-.f64 y z) x x) (pow.f64 (*.f64 (-.f64 y z) x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 (-.f64 y z) x) 2) (*.f64 x x)) (/.f64 1 (-.f64 (*.f64 (-.f64 y z) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (-.f64 y z) -1 1) x)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 x (fma.f64 (-.f64 y z) x x) (pow.f64 (*.f64 (-.f64 y z) x) 2)) (+.f64 (pow.f64 (*.f64 (-.f64 y z) x) 3) (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (*.f64 (-.f64 y z) x) x) (-.f64 (pow.f64 (*.f64 (-.f64 y z) x) 2) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (-.f64 y z) x) 3) (pow.f64 x 3)) (fma.f64 x (fma.f64 (-.f64 y z) x x) (pow.f64 (*.f64 (-.f64 y z) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 (-.f64 y z) x) 3) (pow.f64 x 3)) (fma.f64 x x (-.f64 (pow.f64 (*.f64 (-.f64 y z) x) 2) (*.f64 x (*.f64 (-.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 (-.f64 y z) x) 2) (*.f64 x x)) (-.f64 (*.f64 (-.f64 y z) x) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (-.f64 y z) x) 3) (pow.f64 x 3))) (neg.f64 (fma.f64 x (fma.f64 (-.f64 y z) x x) (pow.f64 (*.f64 (-.f64 y z) x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 (-.f64 y z) x) 2) (*.f64 x x))) (neg.f64 (-.f64 (*.f64 (-.f64 y z) x) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x x (pow.f64 (*.f64 (-.f64 y z) x) 2)) (fma.f64 (-.f64 y z) x x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 (-.f64 y z) x x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 (-.f64 y z) x x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 (-.f64 y z) x x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 (-.f64 y z) x x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 (-.f64 y z) x x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 (-.f64 y z) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 (-.f64 y z) x x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 x) (pow.f64 (exp.f64 x) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (pow.f64 (exp.f64 x) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (*.f64 (-.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (*.f64 (-.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (pow.f64 (exp.f64 x) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (*.f64 (-.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (*.f64 (-.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 y z) x))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 x) (-.f64 y z)) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 (-.f64 y z) x))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 (-.f64 y z) x x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 (-.f64 y z) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 (-.f64 y z) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 (-.f64 y z) x x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 (-.f64 y z) x x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y z) x x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y z) (neg.f64 x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y z) (*.f64 x -1) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 (-.f64 y z) x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (-.f64 y z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (-.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (neg.f64 (-.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y z) x) -1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y z) x) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (-.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 (-.f64 y z) x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 (-.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (*.f64 (-.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (*.f64 (cbrt.f64 x) (-.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (-.f64 y z) 2)) (*.f64 (cbrt.f64 (-.f64 y z)) x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 (-.f64 y z) x)) (pow.f64 (cbrt.f64 (*.f64 (-.f64 y z) x)) 2) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 y z) x)) 2) (cbrt.f64 (*.f64 (-.f64 y z) x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 y z) x)) 2) (neg.f64 (cbrt.f64 (*.f64 (-.f64 y z) x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (-.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (-.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 y z)) (*.f64 (sqrt.f64 (-.f64 y z)) x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (-.f64 y z) x)) (sqrt.f64 (*.f64 (-.f64 y z) x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (-.f64 y z) x)) (neg.f64 (sqrt.f64 (*.f64 (-.f64 y z) x))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 (-.f64 y z) x)) (*.f64 (sqrt.f64 (*.f64 (-.f64 y z) x)) -1) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (-.f64 y z)) x x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 x) (-.f64 y z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 x) (-.f64 y z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (*.f64 (-.f64 y z) x))) (sqrt.f64 (*.f64 (-.f64 y z) x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 (-.f64 y z) x)) 2)) (cbrt.f64 (*.f64 (-.f64 y z) x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y z) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y z) (sqrt.f64 x)) (sqrt.f64 x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (cbrt.f64 (pow.f64 (-.f64 y z) 2))) (cbrt.f64 (-.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (sqrt.f64 (-.f64 y z))) (sqrt.f64 (-.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 (-.f64 y z) x)) 2)) (cbrt.f64 (*.f64 (-.f64 y z) x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 (*.f64 (-.f64 y z) x))) (sqrt.f64 (*.f64 (-.f64 y z) x)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (-.f64 y z)) 1) x x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (-.f64 y z)) (cbrt.f64 (*.f64 x x))) (cbrt.f64 x) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (neg.f64 (-.f64 y z)) (sqrt.f64 x)) (sqrt.f64 x) x)))))"]],"rules":[["egg-rr",81],["egg-rr",29],["egg-rr",24],["egg-rr",111]],"stop":[["node limit",1]],"time":62.2099609375,"type":"rewrite"},{"count":[[374,288]],"egraph":[[14,7232,1036,0.183364666],[13,7232,1036,0.160651875],[12,7232,1036,0.139025958],[11,5113,1036,0.11686183300000001],[10,5113,1036,0.08966095800000001],[9,5042,1036,0.07865554100000001],[8,4609,1036,0.065554416],[7,4609,1036,0.046914416],[6,4597,1036,0.038893666],[5,4382,1036,0.030520207],[4,3559,1036,0.021424957],[3,1339,1036,0.010835332],[2,501,1102,0.0037109990000000004],[1,191,1302,0.001279374],[0,60,1435,0.000360458]],"inputs":[["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(*.f64 (+.f64 t (*.f64 -1 x)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(*.f64 (+.f64 (*.f64 -1 t) x) z)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 y t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 y t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 y t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 -1 (*.f64 z x))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 -1 (*.f64 z x))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 -1 (*.f64 z x))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 z x) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 -1 (*.f64 y x))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(*.f64 -1 (*.f64 y x))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 -1 (*.f64 y x)) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(*.f64 z x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(*.f64 z x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x)","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(*.f64 t (-.f64 y z))","(*.f64 (-.f64 y z) t)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(*.f64 t (-.f64 y z))","(*.f64 (-.f64 y z) t)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) x))","(fma.f64 -1 (*.f64 z t) (fma.f64 z x x))","(+.f64 x (*.f64 z (-.f64 x t)))","(fma.f64 z (-.f64 x t) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(*.f64 (+.f64 t (*.f64 -1 x)) y)","(*.f64 y (+.f64 t (neg.f64 x)))","(*.f64 y (-.f64 t x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y))","(*.f64 y (+.f64 t (neg.f64 x)))","(*.f64 y (-.f64 t x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 y t (fma.f64 -1 (*.f64 y x) x))","(fma.f64 y (-.f64 t x) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(*.f64 (+.f64 (*.f64 -1 t) x) z)","(*.f64 z (fma.f64 -1 t x))","(*.f64 z (-.f64 x t))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z))","(*.f64 z (fma.f64 -1 t x))","(*.f64 z (-.f64 x t))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(*.f64 t (-.f64 y z))","(*.f64 (-.f64 y z) t)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x)) (*.f64 t (-.f64 y z)))","(fma.f64 -1 (*.f64 (-.f64 y z) x) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 (-.f64 y z) t x) (*.f64 (-.f64 y z) x))","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(*.f64 -1 (*.f64 t z))","(*.f64 (neg.f64 t) z)","(*.f64 z (neg.f64 t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 (-.f64 y z) t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 (-.f64 y z) t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 (-.f64 y z) t)","(*.f64 y t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 (-.f64 y z) t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 (-.f64 y z) t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 (-.f64 y z) t)","(*.f64 y t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 (-.f64 y z) t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 (-.f64 y z) t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 (-.f64 y z) t)","(*.f64 y t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 (-.f64 y z) t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 (-.f64 y z) t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 (-.f64 y z) t)","(*.f64 -1 (*.f64 t z))","(*.f64 (neg.f64 t) z)","(*.f64 z (neg.f64 t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 (-.f64 y z) t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 (-.f64 y z) t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 (-.f64 y z) t)","(*.f64 -1 (*.f64 t z))","(*.f64 (neg.f64 t) z)","(*.f64 z (neg.f64 t))","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 (-.f64 y z) t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 (-.f64 y z) t)","(+.f64 (*.f64 -1 (*.f64 t z)) (*.f64 y t))","(*.f64 (-.f64 y z) t)","(*.f64 -1 (*.f64 z x))","(neg.f64 (*.f64 z x))","(*.f64 z (neg.f64 x))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (neg.f64 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (neg.f64 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (neg.f64 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (neg.f64 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (neg.f64 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (neg.f64 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (neg.f64 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (neg.f64 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (neg.f64 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (neg.f64 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (neg.f64 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (neg.f64 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(*.f64 -1 (*.f64 z x))","(neg.f64 (*.f64 z x))","(*.f64 z (neg.f64 x))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (neg.f64 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (neg.f64 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (neg.f64 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(*.f64 -1 (*.f64 z x))","(neg.f64 (*.f64 z x))","(*.f64 z (neg.f64 x))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (neg.f64 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (neg.f64 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (neg.f64 (*.f64 z x)))","(*.f64 (-.f64 y z) x)","(+.f64 (*.f64 z x) x)","(fma.f64 z x x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(*.f64 -1 (*.f64 y x))","(neg.f64 (*.f64 y x))","(*.f64 x (neg.f64 y))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(*.f64 -1 (*.f64 y x))","(neg.f64 (*.f64 y x))","(*.f64 x (neg.f64 y))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 y x)) x)","(fma.f64 -1 (*.f64 y x) x)","(fma.f64 (neg.f64 y) x x)","(-.f64 x (*.f64 y x))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(*.f64 z x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(*.f64 z x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(*.f64 (+.f64 1 (*.f64 -1 (-.f64 y z))) x)","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)","(*.f64 -1 (*.f64 (-.f64 y (+.f64 1 z)) x))","(fma.f64 -1 (*.f64 (-.f64 y z) x) x)","(-.f64 x (*.f64 (-.f64 y z) x))","(fma.f64 x (-.f64 z y) x)"]],"stop":[["saturated",1]],"time":230.329833984375,"type":"simplify"},{"compiler":[[5294,1323]],"time":34.755126953125,"type":"eval"},{"alts":[["(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))","next",0.015625],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x))","fresh",0.01953125],["(fma.f64 (-.f64 y z) (-.f64 t x) x)","done",0.01953125],["(+.f64 (pow.f64 (sqrt.f64 (*.f64 t (-.f64 y z))) 2) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","fresh",29.37109375]],"compiler":[[17,9],[21,13],[12,7],[22,14],[17,9],[21,13],[22,14]],"count":[[292,4]],"kept":[{"done":[1,1],"fresh":[2,0],"new":[288,3],"picked":[1,0]}],"min-error":[0],"time":108.830078125,"type":"prune"},{"compiler":[[40,9]],"locations":[["(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))",0.01171875,true],["(+.f64 x (*.f64 t (-.f64 y z)))",0.01171875,true],["(*.f64 t (-.f64 y z))",0.01171875,false]],"time":6.8349609375,"type":"localize"},{"count":[[2,96]],"series":[["(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))","t","-inf",0.18798828125],["(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))","t","inf",0.176025390625],["(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))","t","0",0.25390625],["(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))","x","-inf",0.27099609375],["(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))","x","inf",0.259033203125],["(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))","x","0",0.26806640625],["(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))","z","-inf",0.246826171875],["(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))","z","inf",0.279052734375],["(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))","z","0",0.25],["(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))","y","-inf",0.2080078125],["(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))","y","inf",0.251220703125],["(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))","y","0",0.281982421875],["(+.f64 x (*.f64 t (-.f64 y z)))","z","-inf",0.156982421875],["(+.f64 x (*.f64 t (-.f64 y z)))","z","inf",0.186767578125],["(+.f64 x (*.f64 t (-.f64 y z)))","z","0",0.1630859375],["(+.f64 x (*.f64 t (-.f64 y z)))","y","-inf",0.18017578125],["(+.f64 x (*.f64 t (-.f64 y z)))","y","inf",0.16796875],["(+.f64 x (*.f64 t (-.f64 y z)))","y","0",0.1650390625],["(+.f64 x (*.f64 t (-.f64 y z)))","t","-inf",0.16796875],["(+.f64 x (*.f64 t (-.f64 y z)))","t","inf",0.1611328125],["(+.f64 x (*.f64 t (-.f64 y z)))","t","0",0.175048828125],["(+.f64 x (*.f64 t (-.f64 y z)))","x","-inf",0.1669921875],["(+.f64 x (*.f64 t (-.f64 y z)))","x","inf",0.156005859375],["(+.f64 x (*.f64 t (-.f64 y z)))","x","0",0.216064453125]],"time":5.278076171875,"type":"series"},{"count":[[2,154]],"egraph":[[2,3279,23,0.025654833999999998],[1,222,23,0.004183541999999999],[0,10,29,0.000233875]],"inputs":[["(+.f64 x (*.f64 t (-.f64 y z)))","(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 x (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 t (-.f64 y z) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (*.f64 x x) (fma.f64 t (-.f64 y z) x)) (/.f64 (pow.f64 (*.f64 t (-.f64 y z)) 2) (fma.f64 t (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 t (-.f64 y z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 t (-.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2) (/.f64 1 (fma.f64 t (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 t (-.f64 y z) x)) (cbrt.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2)) (cbrt.f64 (fma.f64 t (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 t (-.f64 y z) x)) (sqrt.f64 (fma.f64 t (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 x 3) (pow.f64 (*.f64 t (-.f64 y z)) 3)) (/.f64 1 (-.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2) (*.f64 (*.f64 x (-.f64 y z)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 t (-.f64 y z)))) (-.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 t (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2) (*.f64 (*.f64 x (-.f64 y z)) t)) (+.f64 (pow.f64 x 3) (pow.f64 (*.f64 t (-.f64 y z)) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (fma.f64 t (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2) (fma.f64 t (-.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (*.f64 t (-.f64 y z)) 3)) (-.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2) (*.f64 (*.f64 x (-.f64 y z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 x 3) (pow.f64 (*.f64 t (-.f64 y z)) 3)) (+.f64 (pow.f64 (*.f64 t (-.f64 y z)) 2) (-.f64 (*.f64 x x) (*.f64 (*.f64 x (-.f64 y z)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 x 3) (pow.f64 (*.f64 t (-.f64 y z)) 3))) (neg.f64 (-.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2) (*.f64 (*.f64 x (-.f64 y z)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2)) (neg.f64 (fma.f64 t (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 x 3) (pow.f64 (*.f64 t (-.f64 y z)) 3)) (fma.f64 x x (+.f64 (pow.f64 (*.f64 t (-.f64 y z)) 2) (*.f64 (*.f64 x (-.f64 y z)) t))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 t (-.f64 y z)) 2) (*.f64 x x)) (fma.f64 t (-.f64 y z) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 t (-.f64 y z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 t (-.f64 y z) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 t (-.f64 y z) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2) (*.f64 (*.f64 x (-.f64 y z)) t)) (+.f64 (pow.f64 x 3) (pow.f64 (*.f64 t (-.f64 y z)) 3))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 t (-.f64 y z) x)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 t (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 t (-.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (pow.f64 (exp.f64 t) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (*.f64 t (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (*.f64 t (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (pow.f64 (exp.f64 t) (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (*.f64 t (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (*.f64 t (-.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 t (-.f64 y z)))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 t) (-.f64 y z)) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 t (-.f64 y z)))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 t (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 t (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 t (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 t (-.f64 y z) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 t (-.f64 y z) x))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 t (-.f64 y z) x))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 t (-.f64 y z) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (neg.f64 t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 -1 (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2)) (cbrt.f64 (*.f64 t (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 (neg.f64 (sqrt.f64 (*.f64 t (-.f64 y z)))) (sqrt.f64 (*.f64 t (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (-.f64 y z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 y z) t x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (-.f64 y z)) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 t (-.f64 y z) x) 1 (fma.f64 (-.f64 y z) t (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 t (-.f64 y z) x) 1 (fma.f64 (neg.f64 t) (-.f64 y z) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 t (-.f64 y z) x) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t (-.f64 y z)))) (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 t (-.f64 y z) x) 1 (fma.f64 (neg.f64 (sqrt.f64 (*.f64 t (-.f64 y z)))) (sqrt.f64 (*.f64 t (-.f64 y z))) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (neg.f64 t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 -1 (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2)) (cbrt.f64 (*.f64 t (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 (neg.f64 (sqrt.f64 (*.f64 t (-.f64 y z)))) (sqrt.f64 (*.f64 t (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 t (-.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 t (-.f64 y z) x) (fma.f64 (-.f64 y z) t (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 t (-.f64 y z) x) (fma.f64 (neg.f64 t) (-.f64 y z) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 t (-.f64 y z) x) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t (-.f64 y z)))) (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 t (-.f64 y z) x) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 t (-.f64 y z)))) (sqrt.f64 (*.f64 t (-.f64 y z))) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2) (/.f64 1 (fma.f64 t (-.f64 y z) x)) (fma.f64 (-.f64 y z) t (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2) (/.f64 1 (fma.f64 t (-.f64 y z) x)) (fma.f64 (neg.f64 t) (-.f64 y z) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2) (/.f64 1 (fma.f64 t (-.f64 y z) x)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t (-.f64 y z)))) (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2) (/.f64 1 (fma.f64 t (-.f64 y z) x)) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 t (-.f64 y z)))) (sqrt.f64 (*.f64 t (-.f64 y z))) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 t (-.f64 y z) x)) (cbrt.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2)) (fma.f64 (-.f64 y z) t (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 t (-.f64 y z) x)) (cbrt.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2)) (fma.f64 (neg.f64 t) (-.f64 y z) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 t (-.f64 y z) x)) (cbrt.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t (-.f64 y z)))) (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 t (-.f64 y z) x)) (cbrt.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2)) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 t (-.f64 y z)))) (sqrt.f64 (*.f64 t (-.f64 y z))) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2)) (cbrt.f64 (fma.f64 t (-.f64 y z) x)) (fma.f64 (-.f64 y z) t (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2)) (cbrt.f64 (fma.f64 t (-.f64 y z) x)) (fma.f64 (neg.f64 t) (-.f64 y z) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2)) (cbrt.f64 (fma.f64 t (-.f64 y z) x)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t (-.f64 y z)))) (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2)) (cbrt.f64 (fma.f64 t (-.f64 y z) x)) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 t (-.f64 y z)))) (sqrt.f64 (*.f64 t (-.f64 y z))) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 (neg.f64 t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 -1 (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2)) (cbrt.f64 (*.f64 t (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (cbrt.f64 (*.f64 x x)) (*.f64 (neg.f64 (sqrt.f64 (*.f64 t (-.f64 y z)))) (sqrt.f64 (*.f64 t (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (*.f64 (neg.f64 t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (*.f64 -1 (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (*.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2)) (cbrt.f64 (*.f64 t (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x x)) (cbrt.f64 x) (*.f64 (neg.f64 (sqrt.f64 (*.f64 t (-.f64 y z)))) (sqrt.f64 (*.f64 t (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (-.f64 y z)) 2) (*.f64 (cbrt.f64 (-.f64 y z)) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 t) 2) (*.f64 (cbrt.f64 t) (-.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2) (cbrt.f64 (*.f64 t (-.f64 y z))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 t (-.f64 y z) x)) (sqrt.f64 (fma.f64 t (-.f64 y z) x)) (fma.f64 (-.f64 y z) t (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 t (-.f64 y z) x)) (sqrt.f64 (fma.f64 t (-.f64 y z) x)) (fma.f64 (neg.f64 t) (-.f64 y z) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 t (-.f64 y z) x)) (sqrt.f64 (fma.f64 t (-.f64 y z) x)) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t (-.f64 y z)))) (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 t (-.f64 y z) x)) (sqrt.f64 (fma.f64 t (-.f64 y z) x)) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 t (-.f64 y z)))) (sqrt.f64 (*.f64 t (-.f64 y z))) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (neg.f64 t) (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 -1 (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2)) (cbrt.f64 (*.f64 t (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 (neg.f64 (sqrt.f64 (*.f64 t (-.f64 y z)))) (sqrt.f64 (*.f64 t (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (-.f64 y z)) (*.f64 (sqrt.f64 (-.f64 y z)) t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 t) (*.f64 (sqrt.f64 t) (-.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 t (-.f64 y z))) (sqrt.f64 (*.f64 t (-.f64 y z))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 x 3) (pow.f64 (*.f64 t (-.f64 y z)) 3)) (/.f64 1 (-.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2) (*.f64 (*.f64 x (-.f64 y z)) t))) (fma.f64 (-.f64 y z) t (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 x 3) (pow.f64 (*.f64 t (-.f64 y z)) 3)) (/.f64 1 (-.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2) (*.f64 (*.f64 x (-.f64 y z)) t))) (fma.f64 (neg.f64 t) (-.f64 y z) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 x 3) (pow.f64 (*.f64 t (-.f64 y z)) 3)) (/.f64 1 (-.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2) (*.f64 (*.f64 x (-.f64 y z)) t))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t (-.f64 y z)))) (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 x 3) (pow.f64 (*.f64 t (-.f64 y z)) 3)) (/.f64 1 (-.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2) (*.f64 (*.f64 x (-.f64 y z)) t))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 t (-.f64 y z)))) (sqrt.f64 (*.f64 t (-.f64 y z))) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 t (-.f64 y z)))) (-.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 t (-.f64 y z)))) (fma.f64 (-.f64 y z) t (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 t (-.f64 y z)))) (-.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 t (-.f64 y z)))) (fma.f64 (neg.f64 t) (-.f64 y z) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 t (-.f64 y z)))) (-.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 t (-.f64 y z)))) (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t (-.f64 y z)))) (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 t (-.f64 y z)))) (-.f64 (sqrt.f64 x) (sqrt.f64 (*.f64 t (-.f64 y z)))) (fma.f64 (neg.f64 (sqrt.f64 (*.f64 t (-.f64 y z)))) (sqrt.f64 (*.f64 t (-.f64 y z))) (*.f64 t (-.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (pow.f64 (cbrt.f64 (-.f64 y z)) 2)) (cbrt.f64 (-.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (sqrt.f64 (-.f64 y z))) (sqrt.f64 (-.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y z) (pow.f64 (cbrt.f64 t) 2)) (cbrt.f64 t) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (-.f64 y z) (sqrt.f64 t)) (sqrt.f64 t) x)))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x (-.f64 y z)) (fma.f64 t (-.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x (-.f64 y z)) 1) (fma.f64 t (-.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (-.f64 y z) x) (*.f64 t (-.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (fma.f64 x (-.f64 y z) (*.f64 t (-.f64 y z))) x)))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x))))) (log.f64 (sqrt.f64 (exp.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x))) (pow.f64 (cbrt.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x))) 2) (cbrt.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x))) (sqrt.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (-.f64 y z)) 3) (pow.f64 (fma.f64 t (-.f64 y z) x) 3)) (+.f64 (pow.f64 (*.f64 x (-.f64 y z)) 2) (-.f64 (pow.f64 (fma.f64 t (-.f64 y z) x) 2) (*.f64 (*.f64 x (-.f64 y z)) (fma.f64 t (-.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (-.f64 y z)) 2) (pow.f64 (fma.f64 t (-.f64 y z) x) 2)) (-.f64 (*.f64 x (-.f64 y z)) (fma.f64 t (-.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x)) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 t (-.f64 y z) x)) (exp.f64 (*.f64 x (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 t (-.f64 y z) x))) (exp.f64 (*.f64 x (-.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 x (-.f64 y z))) (+.f64 1 (expm1.f64 (fma.f64 t (-.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (fma.f64 x (-.f64 y z) (fma.f64 t (-.f64 y z) x)))) 2))))))"]],"rules":[["egg-rr",35],["egg-rr",119]],"stop":[["node limit",1]],"time":54.366943359375,"type":"rewrite"},{"count":[[250,189]],"egraph":[[15,7141,829,0.204188833],[14,7141,829,0.18129325],[13,7141,829,0.15950175],[12,7141,829,0.13834925],[11,4963,829,0.11603175],[10,4963,829,0.087745292],[9,4963,829,0.075814042],[8,4936,829,0.06307162499999999],[7,4936,829,0.046852417],[6,4909,829,0.038817125],[5,4585,829,0.030456875],[4,3328,829,0.020702958],[3,1300,829,0.009841833],[2,470,901,0.003365375],[1,182,975,0.00118125],[0,58,1210,0.000332667]],"inputs":[["(*.f64 t (-.f64 y z))","(+.f64 (*.f64 t (-.f64 y z)) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","x","(+.f64 (*.f64 t (-.f64 y z)) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","x","(+.f64 (*.f64 t (-.f64 y z)) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","x","(+.f64 (*.f64 t (-.f64 y z)) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 t (-.f64 y z)) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 t (-.f64 y z)) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(+.f64 (*.f64 -1 (*.f64 t z)) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(*.f64 y t)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(*.f64 y t)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(+.f64 (*.f64 y t) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(*.f64 -1 (*.f64 t z))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(*.f64 (+.f64 t (*.f64 -1 x)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(*.f64 (+.f64 (*.f64 -1 t) x) z)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(*.f64 (-.f64 (+.f64 1 z) y) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x)))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x)))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x)))","(+.f64 (*.f64 (-.f64 z y) x) x)","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))"]],"method":["egg-herbie"],"outputs":[["(*.f64 t (-.f64 y z))","(+.f64 (*.f64 t (-.f64 y z)) x)","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(fma.f64 t (-.f64 y z) x)","x","(+.f64 (*.f64 t (-.f64 y z)) x)","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(fma.f64 t (-.f64 y z) x)","x","(+.f64 (*.f64 t (-.f64 y z)) x)","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(fma.f64 t (-.f64 y z) x)","x","(+.f64 (*.f64 t (-.f64 y z)) x)","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(fma.f64 t (-.f64 y z) x)","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 t (-.f64 y z)) x)","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(fma.f64 t (-.f64 y z) x)","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 t (-.f64 y z)) x)","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) x)","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) x)","(fma.f64 -1 (*.f64 t z) x)","(-.f64 x (*.f64 t z))","(fma.f64 t (neg.f64 z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(fma.f64 t (-.f64 y z) x)","(*.f64 y t)","(*.f64 t y)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(fma.f64 t (-.f64 y z) x)","(*.f64 y t)","(*.f64 t y)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 y t) x)","(fma.f64 y t x)","(fma.f64 t y x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(fma.f64 t (-.f64 y z) x)","(*.f64 -1 (*.f64 t z))","(*.f64 (neg.f64 t) z)","(*.f64 t (neg.f64 z))","(*.f64 z (neg.f64 t))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(fma.f64 t (-.f64 y z) x)","(*.f64 -1 (*.f64 t z))","(*.f64 (neg.f64 t) z)","(*.f64 t (neg.f64 z))","(*.f64 z (neg.f64 t))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 y t) x))","(fma.f64 t (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) x))","(fma.f64 -1 (*.f64 t z) (fma.f64 z x x))","(+.f64 x (*.f64 z (-.f64 x t)))","(fma.f64 z (-.f64 x t) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(*.f64 (+.f64 t (*.f64 -1 x)) y)","(*.f64 y (+.f64 t (neg.f64 x)))","(*.f64 y (-.f64 t x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y))","(*.f64 y (+.f64 t (neg.f64 x)))","(*.f64 y (-.f64 t x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 y t (fma.f64 -1 (*.f64 y x) x))","(fma.f64 y (-.f64 t x) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(*.f64 (+.f64 (*.f64 -1 t) x) z)","(*.f64 z (fma.f64 -1 t x))","(*.f64 z (-.f64 x t))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z))","(*.f64 z (fma.f64 -1 t x))","(*.f64 z (-.f64 x t))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(*.f64 (-.f64 (+.f64 1 z) y) x)","(*.f64 x (+.f64 1 (-.f64 z y)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (-.f64 (+.f64 1 z) y) x))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x))","(*.f64 x (+.f64 1 (-.f64 z y)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (-.f64 z y)) 1) x)))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 (-.f64 z y) x) x)","(*.f64 x (+.f64 1 (-.f64 z y)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)","(+.f64 (*.f64 (-.f64 z y) x) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (*.f64 t z) (fma.f64 (+.f64 t (neg.f64 x)) y (fma.f64 z x x)))","(fma.f64 z (-.f64 x t) (fma.f64 y (-.f64 t x) x))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 x t) (-.f64 z y) x)"]],"stop":[["saturated",1]],"time":243.81689453125,"type":"simplify"},{"compiler":[[4439,1005]],"time":28.984130859375,"type":"eval"},{"alts":[["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x))","next",0.01953125],["(fma.f64 (neg.f64 (-.f64 y z)) x (fma.f64 (fma.f64 t (-.f64 y z) x) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t (-.f64 y z)))) (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2) (*.f64 t (-.f64 y z)))))","fresh",0.2803688965266302],["(fma.f64 (-.f64 y z) (-.f64 t x) x)","done",0.01953125]],"compiler":[[21,13],[39,16],[12,7],[21,13],[39,16]],"count":[[221,3]],"kept":[{"done":[1,1],"fresh":[2,1],"new":[217,1],"picked":[1,0]}],"min-error":[0],"time":66.386962890625,"type":"prune"},{"compiler":[[67,19]],"locations":[["(+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x)",0.00390625,true],["(fma.f64 y x (*.f64 (neg.f64 z) x))",0.0078125,true],["(*.f64 t (-.f64 y z))",0.01171875,false],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x))",0.01953125,true]],"time":10.907958984375,"type":"localize"},{"count":[[3,120]],"series":[["(+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x)","z","-inf",0.156005859375],["(+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x)","z","inf",0.150146484375],["(+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x)","z","0",0.18212890625],["(+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x)","x","-inf",0.218994140625],["(+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x)","x","inf",0.239013671875],["(+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x)","x","0",0.22607421875],["(+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x)","y","-inf",0.18701171875],["(+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x)","y","inf",0.157958984375],["(+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x)","y","0",0.18408203125],["(fma.f64 y x (*.f64 (neg.f64 z) x))","z","-inf",0.14501953125],["(fma.f64 y x (*.f64 (neg.f64 z) x))","z","inf",0.147216796875],["(fma.f64 y x (*.f64 (neg.f64 z) x))","z","0",0.173095703125],["(fma.f64 y x (*.f64 (neg.f64 z) x))","x","-inf",0.27099609375],["(fma.f64 y x (*.f64 (neg.f64 z) x))","x","inf",0.2890625],["(fma.f64 y x (*.f64 (neg.f64 z) x))","x","0",1.491943359375],["(fma.f64 y x (*.f64 (neg.f64 z) x))","y","-inf",0.14599609375],["(fma.f64 y x (*.f64 (neg.f64 z) x))","y","inf",0.173095703125],["(fma.f64 y x (*.f64 (neg.f64 z) x))","y","0",0.15185546875],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x))","x","-inf",0.405029296875],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x))","x","inf",0.427001953125],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x))","x","0",0.489013671875],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x))","z","-inf",0.27783203125],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x))","z","inf",0.378173828125],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x))","z","0",0.363037109375],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x))","y","-inf",0.40185546875],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x))","y","inf",0.30712890625],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x))","y","0",0.3818359375],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x))","t","-inf",0.190185546875],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x))","t","inf",0.243896484375],["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x))","t","0",0.544189453125]],"time":9.85205078125,"type":"series"},{"count":[[3,198]],"egraph":[[2,4704,30,0.031176541999999998],[1,312,34,0.005975583],[0,14,45,0.000340958]],"inputs":[["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 t (+.f64 y z)) 2) (-.f64 (*.f64 t (+.f64 y z)) (fma.f64 x (+.f64 y z) x))) (/.f64 (pow.f64 (fma.f64 x (+.f64 y z) x) 2) (-.f64 (*.f64 t (+.f64 y z)) (fma.f64 x (+.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x))) (pow.f64 (cbrt.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x))) 2) (cbrt.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x))) (sqrt.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 t (+.f64 y z)) 3) (pow.f64 (fma.f64 x (+.f64 y z) x) 3)) (/.f64 1 (fma.f64 (fma.f64 x (+.f64 y z) x) (-.f64 (fma.f64 x (+.f64 y z) x) (*.f64 t (+.f64 y z))) (pow.f64 (*.f64 t (+.f64 y z)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 t (+.f64 y z)) 2) (pow.f64 (fma.f64 x (+.f64 y z) x) 2)) (/.f64 1 (-.f64 (*.f64 t (+.f64 y z)) (fma.f64 x (+.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (fma.f64 x (+.f64 y z) x) (-.f64 (fma.f64 x (+.f64 y z) x) (*.f64 t (+.f64 y z))) (pow.f64 (*.f64 t (+.f64 y z)) 2)) (+.f64 (pow.f64 (*.f64 t (+.f64 y z)) 3) (pow.f64 (fma.f64 x (+.f64 y z) x) 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (*.f64 t (+.f64 y z)) (fma.f64 x (+.f64 y z) x)) (-.f64 (pow.f64 (*.f64 t (+.f64 y z)) 2) (pow.f64 (fma.f64 x (+.f64 y z) x) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 t (+.f64 y z)) 3) (pow.f64 (fma.f64 x (+.f64 y z) x) 3)) (fma.f64 (fma.f64 x (+.f64 y z) x) (-.f64 (fma.f64 x (+.f64 y z) x) (*.f64 t (+.f64 y z))) (pow.f64 (*.f64 t (+.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 t (+.f64 y z)) 3) (pow.f64 (fma.f64 x (+.f64 y z) x) 3)) (+.f64 (pow.f64 (fma.f64 x (+.f64 y z) x) 2) (-.f64 (pow.f64 (*.f64 t (+.f64 y z)) 2) (*.f64 t (*.f64 (+.f64 y z) (fma.f64 x (+.f64 y z) x))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 t (+.f64 y z)) 2) (pow.f64 (fma.f64 x (+.f64 y z) x) 2)) (-.f64 (*.f64 t (+.f64 y z)) (fma.f64 x (+.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 t (+.f64 y z)) 3) (pow.f64 (fma.f64 x (+.f64 y z) x) 3))) (neg.f64 (fma.f64 (fma.f64 x (+.f64 y z) x) (-.f64 (fma.f64 x (+.f64 y z) x) (*.f64 t (+.f64 y z))) (pow.f64 (*.f64 t (+.f64 y z)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 t (+.f64 y z)) 2) (pow.f64 (fma.f64 x (+.f64 y z) x) 2))) (neg.f64 (-.f64 (*.f64 t (+.f64 y z)) (fma.f64 x (+.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z))) 3) (pow.f64 x 3)) (fma.f64 (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z))) (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z))) (-.f64 (*.f64 x x) (*.f64 (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z))) x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (fma.f64 x (+.f64 y z) x) 2) (pow.f64 (*.f64 t (+.f64 y z)) 2)) (-.f64 (fma.f64 x (+.f64 y z) x) (*.f64 t (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z))) (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z)))) (*.f64 x x)) (-.f64 (*.f64 t (+.f64 y z)) (fma.f64 x (+.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 t (+.f64 y z)))) (exp.f64 (fma.f64 x (+.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 y z)) t) (+.f64 1 (expm1.f64 (fma.f64 x (+.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 t (+.f64 y z)))) (+.f64 1 (expm1.f64 (fma.f64 x (+.f64 y z) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (exp.f64 (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (*.f64 (pow.f64 (exp.f64 (+.f64 y z)) t) (exp.f64 (*.f64 x (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (*.f64 (pow.f64 (exp.f64 (+.f64 y z)) t) (exp.f64 (*.f64 x (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 x (+.f64 y z) x))) (pow.f64 (exp.f64 (+.f64 y z)) t)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 x (+.f64 y z) x)) (+.f64 1 (expm1.f64 (*.f64 t (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (fma.f64 x (+.f64 y z) x))) (+.f64 1 (expm1.f64 (*.f64 t (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 y z)) t) (exp.f64 (*.f64 x (+.f64 y z)))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z)))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (*.f64 (pow.f64 (exp.f64 (+.f64 y z)) t) (exp.f64 (*.f64 x (+.f64 y z)))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 t (+.f64 y z) (fma.f64 x (+.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 y z) t (fma.f64 x (+.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (+.f64 y z)) 1 (fma.f64 x (+.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 x (+.f64 y z)) (+.f64 x (*.f64 t (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (+.f64 y z) (+.f64 x (*.f64 t (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (+.f64 y z)) -1 (+.f64 x (*.f64 t (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (+.f64 y z)) 1 (+.f64 x (*.f64 t (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 x (+.f64 y z) x) 1 (*.f64 t (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 t (+.f64 y z)) (fma.f64 x (+.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (+.f64 y z)) (+.f64 x (*.f64 t (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 x (+.f64 y z) x) (*.f64 t (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (+.f64 y z) 2)) (*.f64 (cbrt.f64 (+.f64 y z)) t) (fma.f64 x (+.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 t t)) (*.f64 (cbrt.f64 t) (+.f64 y z)) (fma.f64 x (+.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x (+.f64 y z))) (pow.f64 (cbrt.f64 (*.f64 x (+.f64 y z))) 2) (+.f64 x (*.f64 t (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 y z))) 2) (cbrt.f64 (*.f64 x (+.f64 y z))) (+.f64 x (*.f64 t (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 y z))) 2) (neg.f64 (cbrt.f64 (*.f64 x (+.f64 y z)))) (+.f64 x (*.f64 t (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 t (+.f64 y z))) (pow.f64 (cbrt.f64 (*.f64 t (+.f64 y z))) 2) (fma.f64 x (+.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 t (+.f64 y z))) 2) (cbrt.f64 (*.f64 t (+.f64 y z))) (fma.f64 x (+.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 x (+.f64 y z) x)) (cbrt.f64 (pow.f64 (fma.f64 x (+.f64 y z) x) 2)) (*.f64 t (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (fma.f64 x (+.f64 y z) x) 2)) (cbrt.f64 (fma.f64 x (+.f64 y z) x)) (*.f64 t (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (+.f64 y z)) (*.f64 (sqrt.f64 (+.f64 y z)) t) (fma.f64 x (+.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 t) (*.f64 (sqrt.f64 t) (+.f64 y z)) (fma.f64 x (+.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x (+.f64 y z))) (sqrt.f64 (*.f64 x (+.f64 y z))) (+.f64 x (*.f64 t (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x (+.f64 y z))) (neg.f64 (sqrt.f64 (*.f64 x (+.f64 y z)))) (+.f64 x (*.f64 t (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x (+.f64 y z))) (*.f64 (sqrt.f64 (*.f64 x (+.f64 y z))) -1) (+.f64 x (*.f64 t (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 t (+.f64 y z))) (sqrt.f64 (*.f64 t (+.f64 y z))) (fma.f64 x (+.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 x (+.f64 y z) x)) (sqrt.f64 (fma.f64 x (+.f64 y z) x)) (*.f64 t (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 y z)) 3) (pow.f64 x 3)) (/.f64 1 (fma.f64 x (fma.f64 x (+.f64 y z) x) (pow.f64 (*.f64 x (+.f64 y z)) 2))) (*.f64 t (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 (pow.f64 (*.f64 x (+.f64 y z)) 2) (*.f64 x x)) (/.f64 1 (-.f64 (*.f64 x (+.f64 y z)) x)) (*.f64 t (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z))) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z)))) (cbrt.f64 (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z))))) (cbrt.f64 (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z)))) (sqrt.f64 (fma.f64 t (+.f64 y z) (*.f64 x (+.f64 y z)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (*.f64 x (+.f64 y z)))) (sqrt.f64 (*.f64 x (+.f64 y z))) (+.f64 x (*.f64 t (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 y z))) 2)) (cbrt.f64 (*.f64 x (+.f64 y z))) (+.f64 x (*.f64 t (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 y z))) 2)) (cbrt.f64 (*.f64 x (+.f64 y z))) (+.f64 x (*.f64 t (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 (*.f64 x (+.f64 y z)))) (sqrt.f64 (*.f64 x (+.f64 y z))) (+.f64 x (*.f64 t (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (cbrt.f64 (pow.f64 (+.f64 y z) 2))) (cbrt.f64 (+.f64 y z)) (fma.f64 x (+.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 t (sqrt.f64 (+.f64 y z))) (sqrt.f64 (+.f64 y z)) (fma.f64 x (+.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 y z) (cbrt.f64 (*.f64 t t))) (cbrt.f64 t) (fma.f64 x (+.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (+.f64 y z) (sqrt.f64 t)) (sqrt.f64 t) (fma.f64 x (+.f64 y z) x))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x z) (*.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 y x) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 x (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (neg.f64 (*.f64 y x)) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y x) 1) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 y x) -1) (*.f64 (*.f64 x z) -1))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 -1 (*.f64 y x)) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (*.f64 (cbrt.f64 (exp.f64 (*.f64 x (+.f64 y z)))) (cbrt.f64 (exp.f64 (*.f64 x (+.f64 y z)))))) (log.f64 (cbrt.f64 (exp.f64 (*.f64 x (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (*.f64 x (+.f64 y z))))) (log.f64 (sqrt.f64 (exp.f64 (*.f64 x (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (*.f64 y x) (*.f64 x z))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 0 (*.f64 x (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 x (+.f64 y z)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (*.f64 x (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (+.f64 y z))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (+.f64 y z)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (+.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 x (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 x (+.f64 y z))) (pow.f64 (cbrt.f64 (*.f64 x (+.f64 y z))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 y z))) 2) (cbrt.f64 (*.f64 x (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 y z))) 2) (neg.f64 (cbrt.f64 (*.f64 x (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 x (+.f64 y z))) (sqrt.f64 (*.f64 x (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 x (+.f64 y z))) (neg.f64 (sqrt.f64 (*.f64 x (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 x (+.f64 y z))) (*.f64 (sqrt.f64 (*.f64 x (+.f64 y z))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (sqrt.f64 (*.f64 x (+.f64 y z)))) (sqrt.f64 (*.f64 x (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 y z))) 2)) (cbrt.f64 (*.f64 x (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 y z))) 2)) (cbrt.f64 (*.f64 x (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 -1 (sqrt.f64 (*.f64 x (+.f64 y z)))) (sqrt.f64 (*.f64 x (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 y x) 3) (pow.f64 (*.f64 x z) 3)) (fma.f64 (*.f64 y x) (*.f64 y x) (-.f64 (pow.f64 (*.f64 x z) 2) (*.f64 (*.f64 y x) (*.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 y x) (*.f64 y x) (pow.f64 (*.f64 x z) 2)) (*.f64 x (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (+.f64 y z)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 x (+.f64 y z))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 x (+.f64 y z))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 x (+.f64 y z)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (*.f64 x (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 x (+.f64 y z)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (*.f64 x (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 x (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 1 (+.f64 1 (expm1.f64 (*.f64 x (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 y x)) (pow.f64 (exp.f64 z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 (*.f64 y x)) (+.f64 1 (expm1.f64 (*.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (pow.f64 (exp.f64 z) x) (exp.f64 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 x z))) (exp.f64 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 y x)) (+.f64 1 (expm1.f64 (*.f64 x z)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 x (+.f64 y z)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 x (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 x (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 x (+.f64 y z))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 x (+.f64 y z))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 x (*.f64 x (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 x (+.f64 y z) x))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 (pow.f64 (*.f64 x (+.f64 y z)) 2) (-.f64 (*.f64 x (+.f64 y z)) x)) (/.f64 (*.f64 x x) (-.f64 (*.f64 x (+.f64 y z)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (+.f64 y z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x (+.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (+.f64 y z) x)) (cbrt.f64 (pow.f64 (fma.f64 x (+.f64 y z) x) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 x (+.f64 y z) x) 2)) (cbrt.f64 (fma.f64 x (+.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x (+.f64 y z) x)) (sqrt.f64 (fma.f64 x (+.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 y z)) 3) (pow.f64 x 3)) (/.f64 1 (fma.f64 x (fma.f64 x (+.f64 y z) x) (pow.f64 (*.f64 x (+.f64 y z)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 (pow.f64 (*.f64 x (+.f64 y z)) 2) (*.f64 x x)) (/.f64 1 (-.f64 (*.f64 x (+.f64 y z)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 x (fma.f64 x (+.f64 y z) x) (pow.f64 (*.f64 x (+.f64 y z)) 2)) (+.f64 (pow.f64 (*.f64 x (+.f64 y z)) 3) (pow.f64 x 3))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 (*.f64 x (+.f64 y z)) x) (-.f64 (pow.f64 (*.f64 x (+.f64 y z)) 2) (*.f64 x x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 y z)) 3) (pow.f64 x 3)) (fma.f64 x (fma.f64 x (+.f64 y z) x) (pow.f64 (*.f64 x (+.f64 y z)) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 y z)) 3) (pow.f64 x 3)) (fma.f64 x x (-.f64 (pow.f64 (*.f64 x (+.f64 y z)) 2) (*.f64 x (*.f64 x (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (pow.f64 (*.f64 x (+.f64 y z)) 2) (*.f64 x x)) (-.f64 (*.f64 x (+.f64 y z)) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 x (+.f64 y z)) 3) (pow.f64 x 3))) (neg.f64 (fma.f64 x (fma.f64 x (+.f64 y z) x) (pow.f64 (*.f64 x (+.f64 y z)) 2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 x (+.f64 y z)) 2) (*.f64 x x))) (neg.f64 (-.f64 (*.f64 x (+.f64 y z)) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x x (pow.f64 (*.f64 x (+.f64 y z)) 2)) (fma.f64 x (+.f64 y z) x))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (+.f64 y z) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (+.f64 y z) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x (+.f64 y z) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (+.f64 y z) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x (+.f64 y z) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 x (+.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 x (+.f64 y z) x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 x) (exp.f64 (*.f64 x (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (*.f64 x (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (*.f64 x (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (/.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (*.f64 x (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (exp.f64 (*.f64 x (+.f64 y z)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 x) (+.f64 1 (expm1.f64 (*.f64 x (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 x)) (+.f64 1 (expm1.f64 (*.f64 x (+.f64 y z))))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 x (+.f64 y z)))) (exp.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (exp.f64 (*.f64 x (+.f64 y z))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (*.f64 (+.f64 1 (expm1.f64 (*.f64 x (+.f64 y z)))) (+.f64 1 (expm1.f64 x))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (+.f64 y z) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x (+.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x (+.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 x (+.f64 y z) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (fma.f64 x (+.f64 y z) x)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 -1 (*.f64 x (+.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (+.f64 y z) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x 1 (*.f64 x (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (+.f64 y z)) -1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 x (+.f64 y z)) 1 x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 x (*.f64 x (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 x (+.f64 y z)) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 x) (pow.f64 (cbrt.f64 x) 2) (*.f64 x (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 x) 2) (cbrt.f64 x) (*.f64 x (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 x (+.f64 y z))) (pow.f64 (cbrt.f64 (*.f64 x (+.f64 y z))) 2) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 y z))) 2) (cbrt.f64 (*.f64 x (+.f64 y z))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 y z))) 2) (neg.f64 (cbrt.f64 (*.f64 x (+.f64 y z)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 x) (sqrt.f64 x) (*.f64 x (+.f64 y z)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x (+.f64 y z))) (sqrt.f64 (*.f64 x (+.f64 y z))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x (+.f64 y z))) (neg.f64 (sqrt.f64 (*.f64 x (+.f64 y z)))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 x (+.f64 y z))) (*.f64 (sqrt.f64 (*.f64 x (+.f64 y z))) -1) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (sqrt.f64 (*.f64 x (+.f64 y z)))) (sqrt.f64 (*.f64 x (+.f64 y z))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 y z))) 2)) (cbrt.f64 (*.f64 x (+.f64 y z))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (pow.f64 (cbrt.f64 (*.f64 x (+.f64 y z))) 2)) (cbrt.f64 (*.f64 x (+.f64 y z))) x)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 -1 (sqrt.f64 (*.f64 x (+.f64 y z)))) (sqrt.f64 (*.f64 x (+.f64 y z))) x)))))"]],"rules":[["egg-rr",60],["egg-rr",48],["egg-rr",90]],"stop":[["node limit",1]],"time":61.68701171875,"type":"rewrite"},{"count":[[318,239]],"egraph":[[14,7317,997,0.18832520900000002],[13,7317,997,0.16554275000000002],[12,7317,997,0.143887917],[11,5382,997,0.121588834],[10,5382,997,0.094270459],[9,5343,997,0.08299000100000001],[8,5008,997,0.069876167],[7,5008,997,0.050288042000000005],[6,5000,997,0.042079917],[5,4824,997,0.033452334],[4,3931,997,0.023989],[3,1539,997,0.012425791],[2,570,1069,0.004212208],[1,225,1281,0.00146575],[0,65,1660,0.000402333]],"inputs":[["(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) x)","(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) (+.f64 (*.f64 t (-.f64 y z)) x))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) (+.f64 (*.f64 t (-.f64 y z)) x))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) (+.f64 (*.f64 t (-.f64 y z)) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(*.f64 (+.f64 t (*.f64 -1 x)) y)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(*.f64 (+.f64 (*.f64 -1 t) x) z)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x))","(*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 z (*.f64 -1 y))) 1) x))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 z (*.f64 -1 y))) 1) x)) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 z (*.f64 -1 y))) 1) x)) (*.f64 t (-.f64 y z)))","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 z (*.f64 -1 y))) 1) x)) (*.f64 t (-.f64 y z)))","(*.f64 -1 (*.f64 z x))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 (+.f64 (*.f64 -1 z) y) x)","(*.f64 (+.f64 (*.f64 -1 z) y) x)","(*.f64 (+.f64 (*.f64 -1 z) y) x)","(*.f64 (+.f64 (*.f64 -1 z) y) x)","(*.f64 (+.f64 (*.f64 -1 z) y) x)","(*.f64 (+.f64 (*.f64 -1 z) y) x)","(*.f64 (+.f64 (*.f64 -1 z) y) x)","(*.f64 (+.f64 (*.f64 -1 z) y) x)","(*.f64 -1 (*.f64 x (+.f64 z (*.f64 -1 y))))","(*.f64 -1 (*.f64 x (+.f64 z (*.f64 -1 y))))","(*.f64 -1 (*.f64 x (+.f64 z (*.f64 -1 y))))","(*.f64 -1 (*.f64 x (+.f64 z (*.f64 -1 y))))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 -1 (*.f64 z x))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(*.f64 -1 (*.f64 z x))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(+.f64 (*.f64 z x) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(*.f64 -1 (*.f64 y x))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(*.f64 -1 (*.f64 y x))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x)","(*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x)","(*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x)","(*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x)","(*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x)","(*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x)","(*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x)","(*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 z (*.f64 -1 y))) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 z (*.f64 -1 y))) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 z (*.f64 -1 y))) 1) x))","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 z (*.f64 -1 y))) 1) x))","(+.f64 (*.f64 -1 (*.f64 y x)) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(*.f64 z x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(*.f64 z x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) x)","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))) (+.f64 (*.f64 t (-.f64 y z)) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) x))","(fma.f64 -1 (*.f64 z t) (fma.f64 z x x))","(+.f64 x (*.f64 z (-.f64 x t)))","(fma.f64 z (-.f64 x t) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) (+.f64 (*.f64 z x) x)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(*.f64 (+.f64 t (*.f64 -1 x)) y)","(*.f64 y (+.f64 t (neg.f64 x)))","(*.f64 y (-.f64 t x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 (+.f64 t (*.f64 -1 x)) y) x)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y))","(*.f64 y (+.f64 t (neg.f64 x)))","(*.f64 y (-.f64 t x))","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 t z)) (+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 (+.f64 (*.f64 -1 t) x) y)) x)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 y t) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 y t (fma.f64 -1 (*.f64 y x) x))","(fma.f64 y (-.f64 t x) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(*.f64 (+.f64 (*.f64 -1 t) x) z)","(*.f64 z (fma.f64 -1 t x))","(*.f64 z (-.f64 x t))","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 (+.f64 (*.f64 -1 t) x) z) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z))","(*.f64 z (fma.f64 -1 t x))","(*.f64 z (-.f64 x t))","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 (+.f64 t (*.f64 -1 x)) z)) (+.f64 (*.f64 y t) (+.f64 (*.f64 -1 (*.f64 y x)) x)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(*.f64 t (-.f64 y z))","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x)","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 t (-.f64 y z)) (*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 z (*.f64 -1 y))) 1) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 z (*.f64 -1 y))) 1) x)) (*.f64 t (-.f64 y z)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 z (*.f64 -1 y))) 1) x)) (*.f64 t (-.f64 y z)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(+.f64 (*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 z (*.f64 -1 y))) 1) x)) (*.f64 t (-.f64 y z)))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) (fma.f64 t (-.f64 y z) x))","(-.f64 (fma.f64 t (-.f64 y z) x) (*.f64 x (-.f64 y z)))","(+.f64 x (*.f64 (-.f64 t x) (-.f64 y z)))","(fma.f64 (-.f64 t x) (-.f64 y z) x)","(*.f64 -1 (*.f64 z x))","(*.f64 (neg.f64 z) x)","(*.f64 x (neg.f64 z))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(*.f64 (+.f64 (*.f64 -1 z) y) x)","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(*.f64 (+.f64 (*.f64 -1 z) y) x)","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(*.f64 (+.f64 (*.f64 -1 z) y) x)","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(*.f64 (+.f64 (*.f64 -1 z) y) x)","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(*.f64 (+.f64 (*.f64 -1 z) y) x)","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(*.f64 (+.f64 (*.f64 -1 z) y) x)","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(*.f64 (+.f64 (*.f64 -1 z) y) x)","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(*.f64 (+.f64 (*.f64 -1 z) y) x)","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(*.f64 -1 (*.f64 x (+.f64 z (*.f64 -1 y))))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(*.f64 -1 (*.f64 x (+.f64 z (*.f64 -1 y))))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(*.f64 -1 (*.f64 x (+.f64 z (*.f64 -1 y))))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(*.f64 -1 (*.f64 x (+.f64 z (*.f64 -1 y))))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(*.f64 y x)","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(*.f64 -1 (*.f64 z x))","(*.f64 (neg.f64 z) x)","(*.f64 x (neg.f64 z))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(*.f64 -1 (*.f64 z x))","(*.f64 (neg.f64 z) x)","(*.f64 x (neg.f64 z))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(+.f64 (*.f64 y x) (*.f64 -1 (*.f64 z x)))","(fma.f64 y x (*.f64 (neg.f64 z) x))","(*.f64 x (-.f64 y z))","(+.f64 (*.f64 z x) x)","(fma.f64 z x x)","(fma.f64 x z x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 (*.f64 -1 (*.f64 y x)) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(*.f64 -1 (*.f64 y x))","(*.f64 (neg.f64 y) x)","(*.f64 x (neg.f64 y))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(*.f64 -1 (*.f64 y x))","(*.f64 (neg.f64 y) x)","(*.f64 x (neg.f64 y))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x)","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x)","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x)","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x)","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x)","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x)","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x)","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(*.f64 (+.f64 (*.f64 -1 (+.f64 (*.f64 -1 z) y)) 1) x)","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 z (*.f64 -1 y))) 1) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 z (*.f64 -1 y))) 1) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 z (*.f64 -1 y))) 1) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(*.f64 -1 (*.f64 (-.f64 (*.f64 -1 (+.f64 z (*.f64 -1 y))) 1) x))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 -1 (*.f64 y x)) x)","(fma.f64 -1 (*.f64 y x) x)","(fma.f64 (neg.f64 y) x x)","(-.f64 x (*.f64 y x))","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(*.f64 z x)","(*.f64 x z)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(*.f64 z x)","(*.f64 x z)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)","(+.f64 (*.f64 z x) (+.f64 x (*.f64 -1 (*.f64 y x))))","(fma.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x)) x)","(-.f64 x (*.f64 x (-.f64 y z)))","(fma.f64 x (-.f64 z y) x)"]],"stop":[["saturated",1]],"time":233.614013671875,"type":"simplify"},{"compiler":[[5180,1388]],"time":34.455810546875,"type":"eval"},{"alts":[["(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x))","done",0.01953125],["(fma.f64 (neg.f64 (-.f64 y z)) x (fma.f64 (fma.f64 t (-.f64 y z) x) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t (-.f64 y z)))) (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2) (*.f64 t (-.f64 y z)))))","fresh",0.2803688965266302],["(fma.f64 (-.f64 y z) (-.f64 t x) x)","done",0.01953125]],"compiler":[[21,13],[39,16],[12,7]],"count":[[270,3]],"kept":[{"done":[1,1],"fresh":[1,1],"new":[267,0],"picked":[1,1]}],"min-error":[0],"time":93.4130859375,"type":"prune"},{"accuracy":[0.015625],"baseline":[0.015625],"branch":[["x",0.015625,1],["y",0.015625,1],["z",0.015625,1],["t",0.015625,1],["(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))",0.015625,1],["(-.f64 y z)",0.015625,1]],"compiler":[[5,4],[5,4],[5,4],[5,4],[13,8],[7,5],[145,50]],"count":[[9,1]],"inputs":[["(fma.f64 (neg.f64 (-.f64 y z)) x (fma.f64 (fma.f64 t (-.f64 y z) x) 1 (fma.f64 (neg.f64 (cbrt.f64 (*.f64 t (-.f64 y z)))) (pow.f64 (cbrt.f64 (*.f64 t (-.f64 y z))) 2) (*.f64 t (-.f64 y z)))))","(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))","(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (fma.f64 y x (*.f64 (neg.f64 z) x))) x))","(+.f64 (pow.f64 (sqrt.f64 (*.f64 t (-.f64 y z))) 2) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","(pow.f64 (cbrt.f64 (fma.f64 (-.f64 y z) (-.f64 t x) x)) 3)","(+.f64 (*.f64 -1 (*.f64 (-.f64 t x) z)) (+.f64 (*.f64 y (-.f64 t x)) x))","(+.f64 (*.f64 t (-.f64 y z)) (+.f64 (*.f64 -1 (*.f64 (-.f64 y z) x)) x))","(fma.f64 (-.f64 y z) (-.f64 t x) x)","(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))"]],"link":["."],"name":["Data.Metrics.Snapshot:quantile from metrics-0.3.0.2"],"oracle":[29.68632519536885],"outputs":[["(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))"]],"time":28.988037109375,"times":[["x",4.35400390625],["y",4.630859375],["z",4.245849609375],["t",4.43701171875],["(+.f64 x (*.f64 (-.f64 y z) (-.f64 t x)))",4.373779296875],["(-.f64 y z)",4.465087890625]],"type":"regimes"},{"compiler":[[16,9]],"egraph":[[5,62,17,0.000376292],[4,56,17,0.000290958],[3,39,17,0.00020154200000000003],[2,26,19,0.00011350100000000001],[1,18,19,6.0209000000000006e-5],[0,10,19,3.0917e-5]],"inputs":[["(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))"]],"method":["egg-herbie"],"outputs":[["(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 t (-.f64 y z))))","(fma.f64 (neg.f64 (-.f64 y z)) x (+.f64 x (*.f64 (-.f64 y z) t)))","(fma.f64 (+.f64 z (neg.f64 y)) x (+.f64 x (*.f64 (-.f64 y z) t)))","(fma.f64 (-.f64 z y) x (+.f64 x (*.f64 (-.f64 y z) t)))"]],"stop":[["fuel",1],["saturated",1]],"time":9.027099609375,"type":"simplify"},{"time":0.015869140625,"type":"soundness"},{"compiler":[[16,9]],"remove-preprocessing":[[]],"time":8.901123046875,"type":"end"}]