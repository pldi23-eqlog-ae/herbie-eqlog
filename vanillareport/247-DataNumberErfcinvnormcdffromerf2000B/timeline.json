[{"compiler":[[14,10]],"method":["search"],"sampling":[[12,0.8643896258436143,0.13463405007496476,0.0009763240814208984],[11,0.8214628272689879,0.1775608486495912,0.0009763240814208984],[10,0.7414628844708204,0.2575607914477587,0.0009763240814208984],[9,0.6634141597896814,0.33560951612889767,0.0009763240814208984],[8,0.5307313278317451,0.46829234808683395,0.0009763240814208984],[7,0.40585336834192276,0.5931703075766563,0.0009763240814208984],[6,0.24975591897964478,0.7492677569389343,0.0009763240814208984],[5,0.12487795948982239,0.8741457164287567,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":38.44189453125,"type":"analyze"},{"outcomes":[["body",2048,"valid",0.15087890625,1],["body",256,"valid",327.326171875,8255]],"time":336.781982421875,"type":"sample"},{"compiler":[[13,9]],"egraph":[[0,2,2,1.666e-6],[15,6735,28,0.063292626],[14,6735,28,0.049212792000000005],[13,6635,28,0.042958292],[12,6457,28,0.036908542],[11,5494,28,0.031352875],[10,3054,28,0.02224925],[9,1903,28,0.014774834],[8,1165,28,0.009920167],[7,557,28,0.005334792],[6,292,28,0.0026887919999999997],[5,165,28,0.001486251],[4,95,28,0.000781959],[3,65,28,0.000444126],[2,43,28,0.000247501],[1,28,32,0.000134543],[0,15,32,6.3959e-5]],"inputs":[["0","1"],["(-.f64 x (/.f64 y (+.f64 1 (/.f64 (*.f64 x y) 2))))","(-.f64 y (/.f64 x (+.f64 1 (/.f64 (*.f64 y x) 2))))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(-.f64 x (/.f64 y (+.f64 1 (/.f64 (*.f64 x y) 2))))","(-.f64 x (/.f64 y (+.f64 1 (/.f64 x (/.f64 2 y)))))","(-.f64 x (/.f64 y (+.f64 1 (*.f64 (/.f64 y 2) x))))","(-.f64 x (/.f64 y (fma.f64 (/.f64 y 2) x 1)))","(-.f64 x (/.f64 y (fma.f64 x (/.f64 y 2) 1)))","(-.f64 x (/.f64 y (fma.f64 x (*.f64 1/2 y) 1)))","(-.f64 x (/.f64 y (fma.f64 x (*.f64 y 1/2) 1)))","(+.f64 x (/.f64 y (fma.f64 x (*.f64 y -1/2) -1)))","(-.f64 x (/.f64 -1 (fma.f64 x -1/2 (/.f64 -1 y))))","(-.f64 y (/.f64 x (+.f64 1 (/.f64 (*.f64 y x) 2))))","(-.f64 y (/.f64 x (+.f64 1 (/.f64 x (/.f64 2 y)))))","(-.f64 y (/.f64 x (+.f64 1 (*.f64 (/.f64 y 2) x))))","(-.f64 y (/.f64 x (fma.f64 (/.f64 y 2) x 1)))","(-.f64 y (/.f64 x (fma.f64 x (/.f64 y 2) 1)))","(-.f64 y (/.f64 x (fma.f64 x (*.f64 1/2 y) 1)))","(-.f64 y (/.f64 x (fma.f64 x (*.f64 y 1/2) 1)))","(+.f64 y (/.f64 x (fma.f64 x (*.f64 y -1/2) -1)))"]],"stop":[["saturated",1],["node limit",1]],"symmetry":[[]],"time":87.18798828125,"type":"preprocess"},{"count":[[1,2]],"egraph":[[20,7887,14,0.093051208],[19,7887,14,0.082595458],[18,7775,14,0.074973125],[17,7152,14,0.06437762500000001],[16,7152,14,0.05568695800000001],[15,7146,14,0.04942016600000001],[14,7116,14,0.04359187500000001],[13,6950,14,0.03798100000000001],[12,6393,14,0.032192541000000005],[11,3878,14,0.023647249000000002],[10,1771,14,0.014992374000000001],[9,1056,14,0.008604958000000001],[8,497,14,0.0050345830000000005],[7,254,14,0.002456166],[6,172,14,0.001498875],[5,96,14,0.000903041],[4,60,14,0.000502416],[3,41,14,0.00031099999999999997],[2,28,14,0.000180666],[1,18,16,0.000103208],[0,10,16,4.95e-5]],"inputs":[["(-.f64 x (/.f64 y (+.f64 1 (/.f64 (*.f64 x y) 2))))"]],"method":["egg-herbie"],"outputs":[["(-.f64 x (/.f64 y (+.f64 1 (/.f64 (*.f64 x y) 2))))","(-.f64 x (/.f64 y (+.f64 1 (/.f64 x (/.f64 2 y)))))","(-.f64 x (/.f64 y (+.f64 1 (*.f64 (/.f64 x 2) y))))","(-.f64 x (/.f64 y (fma.f64 (/.f64 x 2) y 1)))","(-.f64 x (/.f64 y (fma.f64 y (/.f64 x 2) 1)))","(-.f64 x (/.f64 y (fma.f64 x (/.f64 y 2) 1)))","(-.f64 x (/.f64 y (fma.f64 x (*.f64 1/2 y) 1)))","(+.f64 x (/.f64 y (fma.f64 x (/.f64 y -2) -1)))","(+.f64 x (/.f64 y (fma.f64 x (*.f64 y -1/2) -1)))","(+.f64 x (/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y))))"]],"stop":[["node limit",1]],"time":105.51416015625,"type":"simplify"},{"compiler":[[23,16]],"time":0.431884765625,"type":"eval"},{"alts":[["(+.f64 x (/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y))))","next",0.0390625],["(-.f64 x (/.f64 y (+.f64 1 (/.f64 (*.f64 x y) 2))))","fresh",0.12258214846976202]],"compiler":[[12,9],[13,9],[12,9],[13,9]],"count":[[3,2]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[2,2],"picked":[0,0]}],"min-error":[0.0078125],"time":1.34716796875,"type":"prune"},{"compiler":[[34,24]],"locations":[["(fma.f64 x -1/2 (/.f64 -1 y))",0.0078125,true],["(/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y)))",0.08984375,true]],"time":8.260009765625,"type":"localize"},{"count":[[2,48]],"series":[["(fma.f64 x -1/2 (/.f64 -1 y))","y","-inf",0.150146484375],["(fma.f64 x -1/2 (/.f64 -1 y))","y","inf",0.22705078125],["(fma.f64 x -1/2 (/.f64 -1 y))","y","0",0.22705078125],["(fma.f64 x -1/2 (/.f64 -1 y))","x","-inf",0.2880859375],["(fma.f64 x -1/2 (/.f64 -1 y))","x","inf",0.279052734375],["(fma.f64 x -1/2 (/.f64 -1 y))","x","0",0.2841796875],["(/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y)))","y","-inf",0.35595703125],["(/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y)))","y","inf",0.34912109375],["(/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y)))","y","0",0.27783203125],["(/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y)))","x","-inf",0.337158203125],["(/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y)))","x","inf",0.469970703125],["(/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y)))","x","0",0.536865234375]],"time":3.953857421875,"type":"series"},{"count":[[2,46]],"egraph":[[2,1975,19,0.018743792999999998],[1,179,19,0.002797793],[0,9,19,0.000291834]],"inputs":[["(/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y)))","(fma.f64 x -1/2 (/.f64 -1 y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 -1 (/.f64 1 (neg.f64 (fma.f64 x -1/2 (/.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (fma.f64 x -1/2 (/.f64 -1 y)))) (cbrt.f64 (pow.f64 (fma.f64 x -1/2 (/.f64 -1 y)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (fma.f64 x -1/2 (/.f64 -1 y)) -2)) (/.f64 1 (cbrt.f64 (fma.f64 x -1/2 (/.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x -1/2 (/.f64 -1 y)) -1/2) (pow.f64 (fma.f64 x -1/2 (/.f64 -1 y)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 x -1/2 (/.f64 -1 y))) 2) -1) (pow.f64 (cbrt.f64 (fma.f64 x -1/2 (/.f64 -1 y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (fma.f64 x -1/2 (/.f64 -1 y))) -1) (pow.f64 (sqrt.f64 (fma.f64 x -1/2 (/.f64 -1 y))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x -1/2 (/.f64 -1 y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 1 (cbrt.f64 (fma.f64 x -1/2 (/.f64 -1 y)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x -1/2 (/.f64 -1 y)) -1/2) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x -1/2 (/.f64 -1 y)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log.f64 (fma.f64 x -1/2 (/.f64 -1 y)))))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 -1 y) (*.f64 x -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 x -1/2) (/.f64 -1 y))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (*.f64 (*.f64 x -1/2) 1) (/.f64 -1 y))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (fma.f64 x -1/2 (/.f64 -1 y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x -1/2 (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x -1/2 (/.f64 -1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x -1/2 (/.f64 -1 y))) (pow.f64 (cbrt.f64 (fma.f64 x -1/2 (/.f64 -1 y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x -1/2 (/.f64 -1 y))) 2) (cbrt.f64 (fma.f64 x -1/2 (/.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x -1/2 (/.f64 -1 y))) (sqrt.f64 (fma.f64 x -1/2 (/.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 x -1/2 (/.f64 -1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 (fma.f64 x -1/2 (/.f64 -1 y))) 2) (/.f64 1 (cbrt.f64 (fma.f64 x -1/2 (/.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (fma.f64 x -1/2 (/.f64 -1 y))) (pow.f64 (fma.f64 x -1/2 (/.f64 -1 y)) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 x -1/2 (/.f64 -1 y))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (+.f64 (pow.f64 (*.f64 x -1/2) 3) (pow.f64 (/.f64 -1 y) 3)) (+.f64 (*.f64 (*.f64 x -1/2) (*.f64 x -1/2)) (-.f64 (/.f64 1 (*.f64 y y)) (*.f64 (*.f64 x -1/2) (/.f64 -1 y)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 (*.f64 (*.f64 x -1/2) (*.f64 x -1/2)) (/.f64 1 (*.f64 y y))) (-.f64 (*.f64 x -1/2) (/.f64 -1 y)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x -1/2 (/.f64 -1 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x -1/2 (/.f64 -1 y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x -1/2 (/.f64 -1 y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x -1/2 (/.f64 -1 y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x -1/2 (/.f64 -1 y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 x -1/2 (/.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x -1/2 (/.f64 -1 y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x -1/2 (/.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x -1/2 (/.f64 -1 y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (fma.f64 x -1/2 (/.f64 -1 y))))))))"]],"rules":[["egg-rr",26],["egg-rr",20]],"stop":[["node limit",1]],"time":39.56103515625,"type":"rewrite"},{"count":[[94,66]],"egraph":[[4,5854,706,0.022536708],[3,1735,706,0.011406],[2,429,714,0.003392],[1,146,718,0.0010462919999999999],[0,53,754,0.00029425]],"inputs":[["(*.f64 -1 y)","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y))))","(/.f64 -2 x)","(-.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (*.f64 2 (/.f64 1 x)))","(-.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))))","(-.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))) (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))))","(/.f64 -2 x)","(-.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (*.f64 2 (/.f64 1 x)))","(-.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))))","(-.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))) (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))))","(*.f64 -1 y)","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(+.f64 (*.f64 1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y))))","(/.f64 -2 x)","(-.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (*.f64 2 (/.f64 1 x)))","(-.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))))","(-.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))) (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))))","(/.f64 -2 x)","(-.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (*.f64 2 (/.f64 1 x)))","(-.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))))","(-.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))) (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))))","(/.f64 -1 y)","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(*.f64 -1/2 x)","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(*.f64 -1/2 x)","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(/.f64 -1 y)","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(*.f64 -1/2 x)","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(*.f64 -1/2 x)","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))"]],"method":["egg-herbie"],"outputs":[["(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 1/2 (*.f64 (*.f64 y y) x) (neg.f64 y))","(fma.f64 1/2 (*.f64 y (*.f64 y x)) (neg.f64 y))","(fma.f64 (*.f64 y y) (*.f64 1/2 x) (neg.f64 y))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 1/2 (*.f64 (*.f64 y y) x) (fma.f64 -1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(-.f64 (fma.f64 1/2 (*.f64 y (*.f64 y x)) (*.f64 -1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)))) y)","(-.f64 (*.f64 x (+.f64 (*.f64 y (*.f64 y 1/2)) (*.f64 (pow.f64 y 3) (*.f64 -1/4 x)))) y)","(fma.f64 x (fma.f64 y (*.f64 y 1/2) (*.f64 x (*.f64 -1/4 (pow.f64 y 3)))) (neg.f64 y))","(+.f64 (*.f64 1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y))))","(fma.f64 1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)) (fma.f64 1/2 (*.f64 (*.f64 y y) x) (fma.f64 -1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y))))","(fma.f64 1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)) (-.f64 (fma.f64 1/2 (*.f64 y (*.f64 y x)) (*.f64 -1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)))) y))","(-.f64 (fma.f64 1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 x (+.f64 (*.f64 y (*.f64 y 1/2)) (*.f64 (pow.f64 y 3) (*.f64 -1/4 x))))) y)","(-.f64 (fma.f64 x (fma.f64 y (*.f64 y 1/2) (*.f64 x (*.f64 -1/4 (pow.f64 y 3)))) (*.f64 1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)))) y)","(fma.f64 x (fma.f64 y (*.f64 y 1/2) (*.f64 x (*.f64 -1/4 (pow.f64 y 3)))) (-.f64 (*.f64 (pow.f64 x 3) (*.f64 1/8 (pow.f64 y 4))) y))","(/.f64 -2 x)","(-.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (*.f64 2 (/.f64 1 x)))","(-.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 2 x))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 -2 x))","(+.f64 (/.f64 (/.f64 4 y) (*.f64 x x)) (/.f64 -2 x))","(-.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))))","(-.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 2 x) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3)))))","(-.f64 (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 -2 x)) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 (*.f64 y y) (pow.f64 x 3)))))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 y (*.f64 y (pow.f64 x 3))))))","(+.f64 (/.f64 (/.f64 4 y) (*.f64 x x)) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 (*.f64 y y) (pow.f64 x 3)))))","(-.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))) (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))))","(+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (-.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 2 x) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))))))","(+.f64 (-.f64 (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 -2 x)) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3)))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 (*.f64 y y) (pow.f64 x 3))))))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 y (*.f64 y (pow.f64 x 3)))))))","(+.f64 (+.f64 (/.f64 (/.f64 4 y) (*.f64 x x)) (/.f64 -2 x)) (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 -8 (*.f64 (*.f64 y y) (pow.f64 x 3)))))","(/.f64 -2 x)","(-.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (*.f64 2 (/.f64 1 x)))","(-.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 2 x))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 -2 x))","(+.f64 (/.f64 (/.f64 4 y) (*.f64 x x)) (/.f64 -2 x))","(-.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))))","(-.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 2 x) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3)))))","(-.f64 (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 -2 x)) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 (*.f64 y y) (pow.f64 x 3)))))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 y (*.f64 y (pow.f64 x 3))))))","(+.f64 (/.f64 (/.f64 4 y) (*.f64 x x)) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 (*.f64 y y) (pow.f64 x 3)))))","(-.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))) (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))))","(+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (-.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 2 x) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))))))","(+.f64 (-.f64 (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 -2 x)) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3)))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 (*.f64 y y) (pow.f64 x 3))))))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 y (*.f64 y (pow.f64 x 3)))))))","(+.f64 (+.f64 (/.f64 (/.f64 4 y) (*.f64 x x)) (/.f64 -2 x)) (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 -8 (*.f64 (*.f64 y y) (pow.f64 x 3)))))","(*.f64 -1 y)","(neg.f64 y)","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) x)) (*.f64 -1 y))","(fma.f64 1/2 (*.f64 (*.f64 y y) x) (neg.f64 y))","(fma.f64 1/2 (*.f64 y (*.f64 y x)) (neg.f64 y))","(fma.f64 (*.f64 y y) (*.f64 1/2 x) (neg.f64 y))","(+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y)))","(fma.f64 1/2 (*.f64 (*.f64 y y) x) (fma.f64 -1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y)))","(-.f64 (fma.f64 1/2 (*.f64 y (*.f64 y x)) (*.f64 -1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)))) y)","(-.f64 (*.f64 x (+.f64 (*.f64 y (*.f64 y 1/2)) (*.f64 (pow.f64 y 3) (*.f64 -1/4 x)))) y)","(fma.f64 x (fma.f64 y (*.f64 y 1/2) (*.f64 x (*.f64 -1/4 (pow.f64 y 3)))) (neg.f64 y))","(+.f64 (*.f64 1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3))) (+.f64 (*.f64 1/2 (*.f64 (pow.f64 y 2) x)) (+.f64 (*.f64 -1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (*.f64 -1 y))))","(fma.f64 1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)) (fma.f64 1/2 (*.f64 (*.f64 y y) x) (fma.f64 -1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (neg.f64 y))))","(fma.f64 1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)) (-.f64 (fma.f64 1/2 (*.f64 y (*.f64 y x)) (*.f64 -1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)))) y))","(-.f64 (fma.f64 1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 x (+.f64 (*.f64 y (*.f64 y 1/2)) (*.f64 (pow.f64 y 3) (*.f64 -1/4 x))))) y)","(-.f64 (fma.f64 x (fma.f64 y (*.f64 y 1/2) (*.f64 x (*.f64 -1/4 (pow.f64 y 3)))) (*.f64 1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)))) y)","(fma.f64 x (fma.f64 y (*.f64 y 1/2) (*.f64 x (*.f64 -1/4 (pow.f64 y 3)))) (-.f64 (*.f64 (pow.f64 x 3) (*.f64 1/8 (pow.f64 y 4))) y))","(/.f64 -2 x)","(-.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (*.f64 2 (/.f64 1 x)))","(-.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 2 x))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 -2 x))","(+.f64 (/.f64 (/.f64 4 y) (*.f64 x x)) (/.f64 -2 x))","(-.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))))","(-.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 2 x) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3)))))","(-.f64 (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 -2 x)) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 (*.f64 y y) (pow.f64 x 3)))))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 y (*.f64 y (pow.f64 x 3))))))","(+.f64 (/.f64 (/.f64 4 y) (*.f64 x x)) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 (*.f64 y y) (pow.f64 x 3)))))","(-.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))) (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))))","(+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (-.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 2 x) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))))))","(+.f64 (-.f64 (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 -2 x)) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3)))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 (*.f64 y y) (pow.f64 x 3))))))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 y (*.f64 y (pow.f64 x 3)))))))","(+.f64 (+.f64 (/.f64 (/.f64 4 y) (*.f64 x x)) (/.f64 -2 x)) (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 -8 (*.f64 (*.f64 y y) (pow.f64 x 3)))))","(/.f64 -2 x)","(-.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (*.f64 2 (/.f64 1 x)))","(-.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 2 x))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 -2 x))","(+.f64 (/.f64 (/.f64 4 y) (*.f64 x x)) (/.f64 -2 x))","(-.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))))","(-.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 2 x) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3)))))","(-.f64 (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 -2 x)) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 (*.f64 y y) (pow.f64 x 3)))))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 y (*.f64 y (pow.f64 x 3))))))","(+.f64 (/.f64 (/.f64 4 y) (*.f64 x x)) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 (*.f64 y y) (pow.f64 x 3)))))","(-.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))) (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))))","(+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (-.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 2 x) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))))))","(+.f64 (-.f64 (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 -2 x)) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3)))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 (*.f64 y y) (pow.f64 x 3))))))","(+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 -2 x) (/.f64 -8 (*.f64 y (*.f64 y (pow.f64 x 3)))))))","(+.f64 (+.f64 (/.f64 (/.f64 4 y) (*.f64 x x)) (/.f64 -2 x)) (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 -8 (*.f64 (*.f64 y y) (pow.f64 x 3)))))","(/.f64 -1 y)","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 x -1/2) (/.f64 1 y))","(fma.f64 x -1/2 (/.f64 -1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 x -1/2) (/.f64 1 y))","(fma.f64 x -1/2 (/.f64 -1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 x -1/2) (/.f64 1 y))","(fma.f64 x -1/2 (/.f64 -1 y))","(*.f64 -1/2 x)","(*.f64 x -1/2)","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 x -1/2) (/.f64 1 y))","(fma.f64 x -1/2 (/.f64 -1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 x -1/2) (/.f64 1 y))","(fma.f64 x -1/2 (/.f64 -1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 x -1/2) (/.f64 1 y))","(fma.f64 x -1/2 (/.f64 -1 y))","(*.f64 -1/2 x)","(*.f64 x -1/2)","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 x -1/2) (/.f64 1 y))","(fma.f64 x -1/2 (/.f64 -1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 x -1/2) (/.f64 1 y))","(fma.f64 x -1/2 (/.f64 -1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 x -1/2) (/.f64 1 y))","(fma.f64 x -1/2 (/.f64 -1 y))","(/.f64 -1 y)","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 x -1/2) (/.f64 1 y))","(fma.f64 x -1/2 (/.f64 -1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 x -1/2) (/.f64 1 y))","(fma.f64 x -1/2 (/.f64 -1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 x -1/2) (/.f64 1 y))","(fma.f64 x -1/2 (/.f64 -1 y))","(*.f64 -1/2 x)","(*.f64 x -1/2)","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 x -1/2) (/.f64 1 y))","(fma.f64 x -1/2 (/.f64 -1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 x -1/2) (/.f64 1 y))","(fma.f64 x -1/2 (/.f64 -1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 x -1/2) (/.f64 1 y))","(fma.f64 x -1/2 (/.f64 -1 y))","(*.f64 -1/2 x)","(*.f64 x -1/2)","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 x -1/2) (/.f64 1 y))","(fma.f64 x -1/2 (/.f64 -1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 x -1/2) (/.f64 1 y))","(fma.f64 x -1/2 (/.f64 -1 y))","(-.f64 (*.f64 -1/2 x) (/.f64 1 y))","(-.f64 (*.f64 x -1/2) (/.f64 1 y))","(fma.f64 x -1/2 (/.f64 -1 y))"]],"stop":[["node limit",1]],"time":41.882080078125,"type":"simplify"},{"compiler":[[1031,757]],"time":14.914794921875,"type":"eval"},{"alts":[["(+.f64 x (/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y))))","done",0.0390625],["(+.f64 x (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 x -1/2 (/.f64 -1 y))) 2) -1) (pow.f64 (cbrt.f64 (fma.f64 x -1/2 (/.f64 -1 y))) -1)))","fresh",0.3035126953688404],["(-.f64 x (/.f64 y (+.f64 1 (/.f64 (*.f64 x y) 2))))","next",0.12258214846976202]],"compiler":[[12,9],[25,20],[13,9],[25,20],[13,9]],"count":[[68,3]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[66,1],"picked":[1,1]}],"min-error":[0.00390625],"time":12.537109375,"type":"prune"},{"compiler":[[41,22]],"locations":[["(+.f64 1 (/.f64 (*.f64 x y) 2))",0.00390625,true],["(/.f64 (*.f64 x y) 2)",0.20590896151440566,true],["(/.f64 y (+.f64 1 (/.f64 (*.f64 x y) 2)))",9.206284338391937,true]],"time":8.158935546875,"type":"localize"},{"count":[[3,72]],"series":[["(+.f64 1 (/.f64 (*.f64 x y) 2))","y","-inf",0.142822265625],["(+.f64 1 (/.f64 (*.f64 x y) 2))","y","inf",0.14306640625],["(+.f64 1 (/.f64 (*.f64 x y) 2))","y","0",0.156005859375],["(+.f64 1 (/.f64 (*.f64 x y) 2))","x","-inf",0.14404296875],["(+.f64 1 (/.f64 (*.f64 x y) 2))","x","inf",0.168212890625],["(+.f64 1 (/.f64 (*.f64 x y) 2))","x","0",0.14404296875],["(/.f64 (*.f64 x y) 2)","y","-inf",0.248046875],["(/.f64 (*.f64 x y) 2)","y","inf",0.345947265625],["(/.f64 (*.f64 x y) 2)","y","0",0.406982421875],["(/.f64 (*.f64 x y) 2)","x","-inf",0.240966796875],["(/.f64 (*.f64 x y) 2)","x","inf",0.39013671875],["(/.f64 (*.f64 x y) 2)","x","0",0.381103515625],["(/.f64 y (+.f64 1 (/.f64 (*.f64 x y) 2)))","x","-inf",0.261962890625],["(/.f64 y (+.f64 1 (/.f64 (*.f64 x y) 2)))","x","inf",0.302001953125],["(/.f64 y (+.f64 1 (/.f64 (*.f64 x y) 2)))","x","0",0.279052734375],["(/.f64 y (+.f64 1 (/.f64 (*.f64 x y) 2)))","y","-inf",0.27587890625],["(/.f64 y (+.f64 1 (/.f64 (*.f64 x y) 2)))","y","inf",0.60498046875],["(/.f64 y (+.f64 1 (/.f64 (*.f64 x y) 2)))","y","0",0.39306640625]],"time":5.2431640625,"type":"series"},{"count":[[3,157]],"egraph":[[2,2651,26,0.024490541],[1,198,26,0.003647],[0,9,30,0.00028525]],"inputs":[["(/.f64 y (+.f64 1 (/.f64 (*.f64 x y) 2)))","(/.f64 (*.f64 x y) 2)","(+.f64 1 (/.f64 (*.f64 x y) 2))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (exp.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1)))) 2)) (log.f64 (cbrt.f64 (exp.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (exp.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1))))) (log.f64 (sqrt.f64 (exp.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1))))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (fma.f64 x (*.f64 y 1/2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 y) (/.f64 1 (fma.f64 x (*.f64 y 1/2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1))) (cbrt.f64 (pow.f64 (/.f64 (fma.f64 x (*.f64 y 1/2) 1) y) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (fma.f64 x (*.f64 y 1/2) 1) y) -2)) (cbrt.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (/.f64 1 (fma.f64 x (*.f64 y 1/2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1))) (sqrt.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (neg.f64 (fma.f64 x (*.f64 y 1/2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (fma.f64 x (*.f64 y 1/2) 1)) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) (fma.f64 x (*.f64 y 1/2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (fma.f64 x (*.f64 y 1/2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x (*.f64 y 1/2) 1)) -2) (/.f64 y (cbrt.f64 (fma.f64 x (*.f64 y 1/2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 (fma.f64 x (*.f64 y 1/2) 1)) 2)) (cbrt.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (fma.f64 x (*.f64 y 1/2) 1)) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (fma.f64 x (*.f64 y 1/2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (fma.f64 x (*.f64 y 1/2) 1) -1/2) (/.f64 y (sqrt.f64 (fma.f64 x (*.f64 y 1/2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (fma.f64 x (*.f64 y 1/2) 1))) (/.f64 (cbrt.f64 y) (sqrt.f64 (fma.f64 x (*.f64 y 1/2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (fma.f64 (pow.f64 (*.f64 y x) 3) 1/8 1)) (fma.f64 (*.f64 y (*.f64 x 1/2)) (fma.f64 (/.f64 x 2) y -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2))) (-.f64 1 (*.f64 y (*.f64 x 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (fma.f64 x (*.f64 y 1/2) 1) y) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 x (*.f64 y 1/2) 1) y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (pow.f64 y 3) (pow.f64 (fma.f64 x (*.f64 y 1/2) 1) 3)) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (fma.f64 x (*.f64 y 1/2) 1) y) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1)))) 2)) (cbrt.f64 (log.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1))))) (sqrt.f64 (log.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (neg.f64 (fma.f64 x (*.f64 y 1/2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (fma.f64 x (*.f64 y 1/2) 1) y) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 y 3) (pow.f64 (fma.f64 x (*.f64 y 1/2) 1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1)) 3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 x (*.f64 y 1/2) 1) y)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (/.f64 y (fma.f64 x (*.f64 y 1/2) 1))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 y) 1) (log1p.f64 (*.f64 y (*.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (log.f64 y) (*.f64 (log1p.f64 (*.f64 y (*.f64 x 1/2))) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 y) 1) (*.f64 (log1p.f64 (*.f64 y (*.f64 x 1/2))) 1)))))))","((#(struct:change #<rule egg-rr> (2) ((x +.f64 0 (*.f64 y (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (pow.f64 (cbrt.f64 (sqrt.f64 (pow.f64 (exp.f64 y) x))) 2)) (log.f64 (cbrt.f64 (sqrt.f64 (pow.f64 (exp.f64 y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (log.f64 (sqrt.f64 (sqrt.f64 (pow.f64 (exp.f64 y) x)))) (log.f64 (sqrt.f64 (sqrt.f64 (pow.f64 (exp.f64 y) x)))))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (fma.f64 x (*.f64 y 1/2) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (*.f64 x 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (*.f64 y (*.f64 x 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (/.f64 2 y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (*.f64 y 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y x) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (*.f64 x 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (*.f64 y x)) 2) (*.f64 (cbrt.f64 (*.f64 y x)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y (*.f64 x 1/2))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 y) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 y) x) -2)) (cbrt.f64 (*.f64 y (*.f64 x 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 y x)) (*.f64 (sqrt.f64 (*.f64 y x)) 1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (*.f64 y (*.f64 x 1/2))) (sqrt.f64 (*.f64 y (*.f64 x 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 y (neg.f64 x)) -1/2)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1/2 (*.f64 y x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x 2) y)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 y (*.f64 x 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log.f64 (*.f64 y (*.f64 x 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 2 y) x) -2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 y (*.f64 x 1/2))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 y (*.f64 x 1/2))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (/.f64 2 y) x) -3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 2 y) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (/.f64 (/.f64 2 y) x) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log.f64 (*.f64 y (*.f64 x 1/2)))) 2)) (cbrt.f64 (log.f64 (*.f64 y (*.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log.f64 (*.f64 y (*.f64 x 1/2))))) (sqrt.f64 (log.f64 (*.f64 y (*.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (*.f64 y x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (/.f64 2 y) x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (sqrt.f64 (pow.f64 (exp.f64 y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 y (*.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (/.f64 2 y) x) -3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 y (*.f64 x 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (*.f64 (log1p.f64 (*.f64 y (*.f64 x 1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 y (*.f64 x 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 y (*.f64 x 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 y (*.f64 x 1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (*.f64 y (*.f64 x 1/2)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (sqrt.f64 (*.f64 y (*.f64 x 1/2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 (/.f64 2 y) x) -3)) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 (/.f64 2 y) x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 y (*.f64 x 1/2))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log.f64 (*.f64 y (*.f64 x 1/2))) 3) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (-.f64 (*.f64 (log.f64 x) 1) (log.f64 (/.f64 2 y))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (fma.f64 x (*.f64 y 1/2) 1) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 x (*.f64 y 1/2) 1) 1 -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (fma.f64 x (*.f64 y 1/2) 1)) (pow.f64 (cbrt.f64 (fma.f64 x (*.f64 y 1/2) 1)) 2) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (fma.f64 x (*.f64 y 1/2) 1)) 2) (cbrt.f64 (fma.f64 x (*.f64 y 1/2) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (fma.f64 x (*.f64 y 1/2) 1)) (sqrt.f64 (fma.f64 x (*.f64 y 1/2) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (fma.f64 (pow.f64 (*.f64 y x) 3) 1/8 1) (/.f64 1 (fma.f64 (*.f64 y (*.f64 x 1/2)) (fma.f64 (/.f64 x 2) y -1) 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2)) (/.f64 1 (-.f64 1 (*.f64 y (*.f64 x 1/2)))) -1)))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (fma.f64 x (*.f64 y 1/2) 1))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (/.f64 1 (-.f64 1 (*.f64 y (*.f64 x 1/2)))) (/.f64 (pow.f64 (/.f64 (/.f64 2 y) x) -2) (-.f64 1 (*.f64 y (*.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (fma.f64 x (*.f64 y 1/2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 x (*.f64 y 1/2) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (fma.f64 x (*.f64 y 1/2) 1)) (pow.f64 (cbrt.f64 (fma.f64 x (*.f64 y 1/2) 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (fma.f64 x (*.f64 y 1/2) 1)) 2) (cbrt.f64 (fma.f64 x (*.f64 y 1/2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (fma.f64 x (*.f64 y 1/2) 1)) (sqrt.f64 (fma.f64 x (*.f64 y 1/2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (fma.f64 (pow.f64 (*.f64 y x) 3) 1/8 1) (/.f64 1 (fma.f64 (*.f64 y (*.f64 x 1/2)) (fma.f64 (/.f64 x 2) y -1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2)) (/.f64 1 (-.f64 1 (*.f64 y (*.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (fma.f64 (*.f64 y (*.f64 x 1/2)) (fma.f64 (/.f64 x 2) y -1) 1) (fma.f64 (pow.f64 (*.f64 y x) 3) 1/8 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 1 (*.f64 y (*.f64 x 1/2))) (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 (*.f64 y x) 3) 1/8 1) (fma.f64 (*.f64 y (*.f64 x 1/2)) (fma.f64 (/.f64 x 2) y -1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 (*.f64 y x) 3) 1/8 1) (fma.f64 (pow.f64 (*.f64 y x) 2) 1/4 (-.f64 1 (*.f64 y (*.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2)) (-.f64 1 (*.f64 y (*.f64 x 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (fma.f64 (pow.f64 (*.f64 y x) 3) 1/8 1)) (neg.f64 (fma.f64 (*.f64 y (*.f64 x 1/2)) (fma.f64 (/.f64 x 2) y -1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2))) (neg.f64 (-.f64 1 (*.f64 y (*.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (pow.f64 (*.f64 y x) 2) 1/4 -1) (fma.f64 (/.f64 x 2) y -1))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (fma.f64 x (*.f64 y 1/2) 1) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (E.f64) (log1p.f64 (*.f64 y (*.f64 x 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (*.f64 y 1/2) 1) 2) 1/2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (fma.f64 x (*.f64 y 1/2) 1) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (fma.f64 x (*.f64 y 1/2) 1)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (fma.f64 x (*.f64 y 1/2) 1)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (fma.f64 (*.f64 y (*.f64 x 1/2)) (fma.f64 (/.f64 x 2) y -1) 1) (fma.f64 (pow.f64 (*.f64 y x) 3) 1/8 1)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 (*.f64 y (*.f64 x 1/2))) (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (pow.f64 (cbrt.f64 (log1p.f64 (*.f64 y (*.f64 x 1/2)))) 2)) (cbrt.f64 (log1p.f64 (*.f64 y (*.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (exp.f64 (sqrt.f64 (log1p.f64 (*.f64 y (*.f64 x 1/2))))) (sqrt.f64 (log1p.f64 (*.f64 y (*.f64 x 1/2)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (fma.f64 x (*.f64 y 1/2) 1) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (fma.f64 x (*.f64 y 1/2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (fma.f64 x (*.f64 y 1/2) 1))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (fma.f64 x (*.f64 y 1/2) 1) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (fma.f64 x (*.f64 y 1/2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (fma.f64 x (*.f64 y 1/2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log1p.f64 (*.f64 y (*.f64 x 1/2))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log1p.f64 (*.f64 y (*.f64 x 1/2))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 3 (log1p.f64 (*.f64 y (*.f64 x 1/2)))) 1/3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (cbrt.f64 (fma.f64 x (*.f64 y 1/2) 1))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 1/2 (log1p.f64 (*.f64 y (*.f64 x 1/2)))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (*.f64 (log1p.f64 (*.f64 y (*.f64 x 1/2))) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (*.f64 x 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (*.f64 y (*.f64 x 1/2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (/.f64 1 (/.f64 2 y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 x (*.f64 y 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y x) 1/2 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (*.f64 x 1/2)) 1 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (pow.f64 (cbrt.f64 (*.f64 y x)) 2) (*.f64 (cbrt.f64 (*.f64 y x)) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 y (*.f64 x 1/2))) (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 y) x) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 (/.f64 2 y) x) -2)) (cbrt.f64 (*.f64 y (*.f64 x 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 y x)) (*.f64 (sqrt.f64 (*.f64 y x)) 1/2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (*.f64 y (*.f64 x 1/2))) (sqrt.f64 (*.f64 y (*.f64 x 1/2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 y (neg.f64 x)) -1/2 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1/2 (*.f64 y x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 x 2) y 1)))))"]],"rules":[["egg-rr",53],["egg-rr",52],["egg-rr",52]],"stop":[["node limit",1]],"time":51.7119140625,"type":"rewrite"},{"count":[[229,173]],"egraph":[[4,5293,864,0.022697457999999997],[3,1726,864,0.010895875],[2,434,876,0.003418167],[1,144,880,0.001046833],[0,50,924,0.000310375]],"inputs":[["y","(+.f64 y (*.f64 -1/2 (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (*.f64 -1/2 (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1/2 (*.f64 (pow.f64 y 2) x)))))","(/.f64 2 x)","(-.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))","(/.f64 2 x)","(-.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))","y","(+.f64 y (*.f64 -1/2 (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (*.f64 -1/2 (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1/2 (*.f64 (pow.f64 y 2) x)))))","(/.f64 2 x)","(-.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))","(/.f64 2 x)","(-.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","(*.f64 1/2 (*.f64 y x))","1","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(*.f64 1/2 (*.f64 y x))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(*.f64 1/2 (*.f64 y x))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","1","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(*.f64 1/2 (*.f64 y x))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(*.f64 1/2 (*.f64 y x))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))"]],"method":["egg-herbie"],"outputs":[["y","(+.f64 y (*.f64 -1/2 (*.f64 (pow.f64 y 2) x)))","(+.f64 y (*.f64 -1/2 (*.f64 (*.f64 y y) x)))","(fma.f64 -1/2 (*.f64 y (*.f64 y x)) y)","(fma.f64 y (*.f64 -1/2 (*.f64 y x)) y)","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (*.f64 -1/2 (*.f64 (pow.f64 y 2) x))))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (+.f64 y (*.f64 -1/2 (*.f64 (*.f64 y y) x))))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 y (*.f64 y x)) y))","(fma.f64 -1/2 (*.f64 y (*.f64 y x)) (fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) y))","(fma.f64 x (fma.f64 y (*.f64 y -1/2) (*.f64 1/4 (*.f64 x (pow.f64 y 3)))) y)","(fma.f64 x (fma.f64 y (*.f64 y -1/2) (*.f64 x (*.f64 1/4 (pow.f64 y 3)))) y)","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1/2 (*.f64 (pow.f64 y 2) x)))))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (+.f64 y (fma.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 -1/2 (*.f64 (*.f64 y y) x)))))","(+.f64 (fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 y (*.f64 y x)) y)) (*.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3))))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 y (*.f64 y x)) (fma.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)) y)))","(fma.f64 x (fma.f64 y (*.f64 y -1/2) (*.f64 1/4 (*.f64 x (pow.f64 y 3)))) (fma.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)) y))","(fma.f64 x (fma.f64 y (*.f64 y -1/2) (*.f64 x (*.f64 1/4 (pow.f64 y 3)))) (fma.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)) y))","(/.f64 2 x)","(-.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (/.f64 2 x) (/.f64 4 (*.f64 y (*.f64 x x))))","(+.f64 (/.f64 2 x) (/.f64 -4 (*.f64 y (*.f64 x x))))","(+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x)))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (/.f64 2 x) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3)))) (/.f64 4 (*.f64 y (*.f64 x x))))","(+.f64 (/.f64 2 x) (-.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (/.f64 4 (*.f64 y (*.f64 x x)))))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 8 (*.f64 y (*.f64 y (pow.f64 x 3)))) (/.f64 -4 (*.f64 y (*.f64 x x)))))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x))) (/.f64 (/.f64 (/.f64 8 (pow.f64 x 3)) y) y))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 (/.f64 (/.f64 8 y) y) (pow.f64 x 3)) (/.f64 (/.f64 -4 y) (*.f64 x x))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))","(+.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (-.f64 (/.f64 2 x) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 8 (*.f64 y (*.f64 y (pow.f64 x 3)))) (+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x))) (+.f64 (/.f64 (/.f64 (/.f64 8 (pow.f64 x 3)) y) y) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x))) (+.f64 (/.f64 (/.f64 (/.f64 8 y) y) (pow.f64 x 3)) (/.f64 (/.f64 -16 (pow.f64 y 3)) (pow.f64 x 4))))","(/.f64 2 x)","(-.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (/.f64 2 x) (/.f64 4 (*.f64 y (*.f64 x x))))","(+.f64 (/.f64 2 x) (/.f64 -4 (*.f64 y (*.f64 x x))))","(+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x)))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (/.f64 2 x) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3)))) (/.f64 4 (*.f64 y (*.f64 x x))))","(+.f64 (/.f64 2 x) (-.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (/.f64 4 (*.f64 y (*.f64 x x)))))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 8 (*.f64 y (*.f64 y (pow.f64 x 3)))) (/.f64 -4 (*.f64 y (*.f64 x x)))))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x))) (/.f64 (/.f64 (/.f64 8 (pow.f64 x 3)) y) y))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 (/.f64 (/.f64 8 y) y) (pow.f64 x 3)) (/.f64 (/.f64 -4 y) (*.f64 x x))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))","(+.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (-.f64 (/.f64 2 x) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 8 (*.f64 y (*.f64 y (pow.f64 x 3)))) (+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x))) (+.f64 (/.f64 (/.f64 (/.f64 8 (pow.f64 x 3)) y) y) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x))) (+.f64 (/.f64 (/.f64 (/.f64 8 y) y) (pow.f64 x 3)) (/.f64 (/.f64 -16 (pow.f64 y 3)) (pow.f64 x 4))))","y","(+.f64 y (*.f64 -1/2 (*.f64 (pow.f64 y 2) x)))","(+.f64 y (*.f64 -1/2 (*.f64 (*.f64 y y) x)))","(fma.f64 -1/2 (*.f64 y (*.f64 y x)) y)","(fma.f64 y (*.f64 -1/2 (*.f64 y x)) y)","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (*.f64 -1/2 (*.f64 (pow.f64 y 2) x))))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (+.f64 y (*.f64 -1/2 (*.f64 (*.f64 y y) x))))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 y (*.f64 y x)) y))","(fma.f64 -1/2 (*.f64 y (*.f64 y x)) (fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) y))","(fma.f64 x (fma.f64 y (*.f64 y -1/2) (*.f64 1/4 (*.f64 x (pow.f64 y 3)))) y)","(fma.f64 x (fma.f64 y (*.f64 y -1/2) (*.f64 x (*.f64 1/4 (pow.f64 y 3)))) y)","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1/2 (*.f64 (pow.f64 y 2) x)))))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (+.f64 y (fma.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 -1/2 (*.f64 (*.f64 y y) x)))))","(+.f64 (fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 y (*.f64 y x)) y)) (*.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3))))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 y (*.f64 y x)) (fma.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)) y)))","(fma.f64 x (fma.f64 y (*.f64 y -1/2) (*.f64 1/4 (*.f64 x (pow.f64 y 3)))) (fma.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)) y))","(fma.f64 x (fma.f64 y (*.f64 y -1/2) (*.f64 x (*.f64 1/4 (pow.f64 y 3)))) (fma.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)) y))","(/.f64 2 x)","(-.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (/.f64 2 x) (/.f64 4 (*.f64 y (*.f64 x x))))","(+.f64 (/.f64 2 x) (/.f64 -4 (*.f64 y (*.f64 x x))))","(+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x)))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (/.f64 2 x) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3)))) (/.f64 4 (*.f64 y (*.f64 x x))))","(+.f64 (/.f64 2 x) (-.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (/.f64 4 (*.f64 y (*.f64 x x)))))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 8 (*.f64 y (*.f64 y (pow.f64 x 3)))) (/.f64 -4 (*.f64 y (*.f64 x x)))))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x))) (/.f64 (/.f64 (/.f64 8 (pow.f64 x 3)) y) y))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 (/.f64 (/.f64 8 y) y) (pow.f64 x 3)) (/.f64 (/.f64 -4 y) (*.f64 x x))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))","(+.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (-.f64 (/.f64 2 x) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 8 (*.f64 y (*.f64 y (pow.f64 x 3)))) (+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x))) (+.f64 (/.f64 (/.f64 (/.f64 8 (pow.f64 x 3)) y) y) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x))) (+.f64 (/.f64 (/.f64 (/.f64 8 y) y) (pow.f64 x 3)) (/.f64 (/.f64 -16 (pow.f64 y 3)) (pow.f64 x 4))))","(/.f64 2 x)","(-.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (/.f64 2 x) (/.f64 4 (*.f64 y (*.f64 x x))))","(+.f64 (/.f64 2 x) (/.f64 -4 (*.f64 y (*.f64 x x))))","(+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x)))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (/.f64 2 x) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3)))) (/.f64 4 (*.f64 y (*.f64 x x))))","(+.f64 (/.f64 2 x) (-.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (/.f64 4 (*.f64 y (*.f64 x x)))))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 8 (*.f64 y (*.f64 y (pow.f64 x 3)))) (/.f64 -4 (*.f64 y (*.f64 x x)))))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x))) (/.f64 (/.f64 (/.f64 8 (pow.f64 x 3)) y) y))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 (/.f64 (/.f64 8 y) y) (pow.f64 x 3)) (/.f64 (/.f64 -4 y) (*.f64 x x))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))","(+.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (-.f64 (/.f64 2 x) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 8 (*.f64 y (*.f64 y (pow.f64 x 3)))) (+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x))) (+.f64 (/.f64 (/.f64 (/.f64 8 (pow.f64 x 3)) y) y) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x))) (+.f64 (/.f64 (/.f64 (/.f64 8 y) y) (pow.f64 x 3)) (/.f64 (/.f64 -16 (pow.f64 y 3)) (pow.f64 x 4))))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","1","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(fma.f64 1/2 (*.f64 y x) 1)","(fma.f64 y (*.f64 x 1/2) 1)","(fma.f64 x (*.f64 y 1/2) 1)","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(fma.f64 1/2 (*.f64 y x) 1)","(fma.f64 y (*.f64 x 1/2) 1)","(fma.f64 x (*.f64 y 1/2) 1)","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(fma.f64 1/2 (*.f64 y x) 1)","(fma.f64 y (*.f64 x 1/2) 1)","(fma.f64 x (*.f64 y 1/2) 1)","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(fma.f64 1/2 (*.f64 y x) 1)","(fma.f64 y (*.f64 x 1/2) 1)","(fma.f64 x (*.f64 y 1/2) 1)","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(fma.f64 1/2 (*.f64 y x) 1)","(fma.f64 y (*.f64 x 1/2) 1)","(fma.f64 x (*.f64 y 1/2) 1)","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(fma.f64 1/2 (*.f64 y x) 1)","(fma.f64 y (*.f64 x 1/2) 1)","(fma.f64 x (*.f64 y 1/2) 1)","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(fma.f64 1/2 (*.f64 y x) 1)","(fma.f64 y (*.f64 x 1/2) 1)","(fma.f64 x (*.f64 y 1/2) 1)","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(fma.f64 1/2 (*.f64 y x) 1)","(fma.f64 y (*.f64 x 1/2) 1)","(fma.f64 x (*.f64 y 1/2) 1)","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(fma.f64 1/2 (*.f64 y x) 1)","(fma.f64 y (*.f64 x 1/2) 1)","(fma.f64 x (*.f64 y 1/2) 1)","1","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(fma.f64 1/2 (*.f64 y x) 1)","(fma.f64 y (*.f64 x 1/2) 1)","(fma.f64 x (*.f64 y 1/2) 1)","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(fma.f64 1/2 (*.f64 y x) 1)","(fma.f64 y (*.f64 x 1/2) 1)","(fma.f64 x (*.f64 y 1/2) 1)","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(fma.f64 1/2 (*.f64 y x) 1)","(fma.f64 y (*.f64 x 1/2) 1)","(fma.f64 x (*.f64 y 1/2) 1)","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(fma.f64 1/2 (*.f64 y x) 1)","(fma.f64 y (*.f64 x 1/2) 1)","(fma.f64 x (*.f64 y 1/2) 1)","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(fma.f64 1/2 (*.f64 y x) 1)","(fma.f64 y (*.f64 x 1/2) 1)","(fma.f64 x (*.f64 y 1/2) 1)","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(fma.f64 1/2 (*.f64 y x) 1)","(fma.f64 y (*.f64 x 1/2) 1)","(fma.f64 x (*.f64 y 1/2) 1)","(*.f64 1/2 (*.f64 y x))","(*.f64 y (*.f64 x 1/2))","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(fma.f64 1/2 (*.f64 y x) 1)","(fma.f64 y (*.f64 x 1/2) 1)","(fma.f64 x (*.f64 y 1/2) 1)","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(fma.f64 1/2 (*.f64 y x) 1)","(fma.f64 y (*.f64 x 1/2) 1)","(fma.f64 x (*.f64 y 1/2) 1)","(+.f64 1 (*.f64 1/2 (*.f64 y x)))","(fma.f64 1/2 (*.f64 y x) 1)","(fma.f64 y (*.f64 x 1/2) 1)","(fma.f64 x (*.f64 y 1/2) 1)"]],"stop":[["node limit",1]],"time":45.115966796875,"type":"simplify"},{"compiler":[[2891,1969]],"time":36.596923828125,"type":"eval"},{"alts":[["(+.f64 x (/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y))))","done",0.0390625],["(-.f64 x (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2))) (-.f64 1 (*.f64 y (*.f64 x 1/2)))))","next",11.881034141584417]],"compiler":[[12,9],[23,17],[23,17]],"count":[[176,2]],"kept":[{"done":[1,1],"fresh":[1,0],"new":[173,1],"picked":[1,0]}],"min-error":[0],"time":51.815185546875,"type":"prune"},{"compiler":[[98,70]],"locations":[["(/.f64 (/.f64 2 y) x)",0.19921875,true],["(pow.f64 (/.f64 (/.f64 2 y) x) -2)",0.21226503907376806,true],["(/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2)))",4.172453441743337,true],["(*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2))) (-.f64 1 (*.f64 y (*.f64 x 1/2))))",15.274428670503214,true]],"time":23.15087890625,"type":"localize"},{"count":[[4,96]],"series":[["(/.f64 (/.f64 2 y) x)","x","-inf",0.14111328125],["(/.f64 (/.f64 2 y) x)","x","inf",0.14306640625],["(/.f64 (/.f64 2 y) x)","x","0",0.159912109375],["(/.f64 (/.f64 2 y) x)","y","-inf",0.141845703125],["(/.f64 (/.f64 2 y) x)","y","inf",0.166015625],["(/.f64 (/.f64 2 y) x)","y","0",0.14990234375],["(pow.f64 (/.f64 (/.f64 2 y) x) -2)","x","-inf",0.543212890625],["(pow.f64 (/.f64 (/.f64 2 y) x) -2)","x","inf",0.607177734375],["(pow.f64 (/.f64 (/.f64 2 y) x) -2)","x","0",0.6201171875],["(pow.f64 (/.f64 (/.f64 2 y) x) -2)","y","-inf",0.515869140625],["(pow.f64 (/.f64 (/.f64 2 y) x) -2)","y","inf",0.569091796875],["(pow.f64 (/.f64 (/.f64 2 y) x) -2)","y","0",0.620849609375],["(/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2)))","x","-inf",0.31787109375],["(/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2)))","x","inf",0.386962890625],["(/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2)))","x","0",0.299072265625],["(/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2)))","y","-inf",0.389892578125],["(/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2)))","y","inf",0.506103515625],["(/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2)))","y","0",0.456787109375],["(*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2))) (-.f64 1 (*.f64 y (*.f64 x 1/2))))","x","-inf",0.345947265625],["(*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2))) (-.f64 1 (*.f64 y (*.f64 x 1/2))))","x","inf",0.3720703125],["(*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2))) (-.f64 1 (*.f64 y (*.f64 x 1/2))))","x","0",0.327880859375],["(*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2))) (-.f64 1 (*.f64 y (*.f64 x 1/2))))","y","-inf",0.60888671875],["(*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2))) (-.f64 1 (*.f64 y (*.f64 x 1/2))))","y","inf",0.907958984375],["(*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2))) (-.f64 1 (*.f64 y (*.f64 x 1/2))))","y","0",0.447021484375]],"time":10.114013671875,"type":"series"},{"count":[[4,174]],"egraph":[[2,4944,59,0.035260875000000004],[1,363,61,0.006833375],[0,16,61,0.000485583]],"inputs":[["(*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2))) (-.f64 1 (*.f64 y (*.f64 x 1/2))))","(/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2)))","(pow.f64 (/.f64 (/.f64 2 y) x) -2)","(/.f64 (/.f64 2 y) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x +.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (fma.f64 (*.f64 y x) -1/2 1)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 y (/.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)) (fma.f64 (*.f64 y x) -1/2 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)) (*.f64 y (fma.f64 (*.f64 y x) -1/2 1))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (fma.f64 (*.f64 y x) -1/2 1) (/.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)) y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (*.f64 (pow.f64 (*.f64 y x) 3) 1/8)) (*.f64 (/.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)) y) (fma.f64 (*.f64 y (*.f64 x 1/2)) (fma.f64 y (*.f64 x 1/2) 1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (-.f64 1 (pow.f64 (*.f64 y (*.f64 x 1/2)) 2)) (*.f64 (/.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)) y) (fma.f64 y (*.f64 x 1/2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (fma.f64 (*.f64 y x) -1/2 1)) (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 (*.f64 y (fma.f64 (*.f64 y x) -1/2 1))) (neg.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (-.f64 1 (*.f64 (pow.f64 (*.f64 y x) 3) 1/8))) (*.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)) (fma.f64 (*.f64 y (*.f64 x 1/2)) (fma.f64 y (*.f64 x 1/2) 1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (-.f64 1 (*.f64 (pow.f64 (*.f64 y x) 3) 1/8))) (*.f64 (neg.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (fma.f64 (*.f64 y (*.f64 x 1/2)) (fma.f64 y (*.f64 x 1/2) 1) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 y (-.f64 1 (pow.f64 (*.f64 y (*.f64 x 1/2)) 2))) (*.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)) (fma.f64 y (*.f64 x 1/2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (-.f64 1 (pow.f64 (*.f64 y (*.f64 x 1/2)) 2))) (*.f64 (neg.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (fma.f64 y (*.f64 x 1/2) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (*.f64 (pow.f64 (*.f64 y x) 3) 1/8)) y) (*.f64 (fma.f64 (*.f64 y (*.f64 x 1/2)) (fma.f64 y (*.f64 x 1/2) 1) 1) (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (*.f64 y (*.f64 x 1/2)) 2)) y) (*.f64 (fma.f64 y (*.f64 x 1/2) 1) (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (*.f64 (pow.f64 (*.f64 y x) 3) 1/8)) 1) (*.f64 (fma.f64 (*.f64 y (*.f64 x 1/2)) (fma.f64 y (*.f64 x 1/2) 1) 1) (/.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (*.f64 y (*.f64 x 1/2)) 2)) 1) (*.f64 (fma.f64 y (*.f64 x 1/2) 1) (/.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)) y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (*.f64 (pow.f64 (*.f64 y x) 3) 1/8)) (neg.f64 y)) (*.f64 (fma.f64 (*.f64 y (*.f64 x 1/2)) (fma.f64 y (*.f64 x 1/2) 1) 1) (neg.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (*.f64 y (*.f64 x 1/2)) 2)) (neg.f64 y)) (*.f64 (fma.f64 y (*.f64 x 1/2) 1) (neg.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (fma.f64 (*.f64 y x) -1/2 1)) 1) (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (fma.f64 (*.f64 y x) -1/2 1)) (pow.f64 (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 2)) (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 (*.f64 y (fma.f64 (*.f64 y x) -1/2 1)) (sqrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (sqrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (neg.f64 y) (fma.f64 (*.f64 y x) -1/2 1)) (neg.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (*.f64 (pow.f64 (*.f64 y x) 3) 1/8)) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (fma.f64 (*.f64 y (*.f64 x 1/2)) (fma.f64 y (*.f64 x 1/2) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (-.f64 1 (pow.f64 (*.f64 y (*.f64 x 1/2)) 2)) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (fma.f64 y (*.f64 x 1/2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (-.f64 1 (*.f64 (pow.f64 (*.f64 y x) 3) 1/8))) (fma.f64 (*.f64 y (*.f64 x 1/2)) (fma.f64 y (*.f64 x 1/2) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (-.f64 1 (pow.f64 (*.f64 y (*.f64 x 1/2)) 2))) (fma.f64 y (*.f64 x 1/2) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (*.f64 (fma.f64 (*.f64 y x) -1/2 1) (neg.f64 y)) (neg.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (fma.f64 (*.f64 y x) -1/2 1)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (fma.f64 (*.f64 y x) -1/2 1)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (fma.f64 (*.f64 y x) -1/2 1))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (fma.f64 (*.f64 y x) -1/2 1))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (fma.f64 (*.f64 y x) -1/2 1)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (pow.f64 (exp.f64 (fma.f64 (*.f64 y x) -1/2 1)) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (fma.f64 (*.f64 y x) -1/2 1)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (fma.f64 (*.f64 y x) -1/2 1)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 3) (pow.f64 (fma.f64 (*.f64 y x) -1/2 1) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (*.f64 (pow.f64 (fma.f64 (*.f64 y x) -1/2 1) 3) (pow.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (fma.f64 (*.f64 y x) -1/2 1))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (fma.f64 (*.f64 y x) -1/2 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (fma.f64 (*.f64 y x) -1/2 1))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (fma.f64 (*.f64 y x) -1/2 1))) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 1 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 y (/.f64 1 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 1 (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 1 (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 2)) (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 2)) (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 2)) (cbrt.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 2)) (cbrt.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (sqrt.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (sqrt.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y) (/.f64 1 (neg.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (neg.f64 y) (/.f64 1 (neg.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) y (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) y (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 2)) (/.f64 y (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 2)) (/.f64 y (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 2)) (cbrt.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 2)) (cbrt.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (/.f64 y (sqrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 1 (sqrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (/.f64 y (sqrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -6))) (+.f64 (+.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -4)) (pow.f64 (/.f64 2 (*.f64 y x)) -2)) (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -6))) (+.f64 (+.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -4)) (pow.f64 (/.f64 2 (*.f64 y x)) -2)) (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -4))) (+.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)) (*.f64 (*.f64 (*.f64 y x) -1/2) (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -4))) (+.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)) (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (*.f64 (*.f64 y x) -1/2)))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 y (/.f64 1 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (cbrt.f64 (pow.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 2)) (cbrt.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (*.f64 y y)) (*.f64 (cbrt.f64 y) (/.f64 1 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (sqrt.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 y) (*.f64 (sqrt.f64 y) (/.f64 1 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 y) (/.f64 1 (neg.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) y)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y y)) 1) (/.f64 (cbrt.f64 y) (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) 1) (/.f64 (sqrt.f64 y) (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 2)) (/.f64 y (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (pow.f64 (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 2)) (cbrt.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 y) (pow.f64 (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 2)) (/.f64 (sqrt.f64 y) (cbrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (/.f64 y (sqrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (*.f64 y y)) (sqrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (/.f64 (cbrt.f64 y) (sqrt.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -6))) (+.f64 (+.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -4)) (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -4))) (+.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)) y) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 y (neg.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 y 3) (pow.f64 (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) 1))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 2 (*.f64 y x)) -2) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 2 (*.f64 y x)) -2)) (cbrt.f64 (pow.f64 (/.f64 2 (*.f64 y x)) -4)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 2 (*.f64 y x)) -4)) (cbrt.f64 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (*.f64 x (*.f64 y 1/2)) (*.f64 x (*.f64 y 1/2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (/.f64 2 y) -2) (pow.f64 (/.f64 1 x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 2 (*.f64 y x))) 2) -2) (pow.f64 (cbrt.f64 (/.f64 2 (*.f64 y x))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 2 (*.f64 y x))) -2) (pow.f64 (sqrt.f64 (/.f64 2 (*.f64 y x))) -2))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 2 (*.f64 y x)) -4))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (pow.f64 (/.f64 2 (*.f64 y x)) -2))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 2 (*.f64 y x)) -6))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (pow.f64 (/.f64 2 (*.f64 y x)) -2)) 1))))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 1 (+.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (*.f64 (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2)))) (cbrt.f64 (+.f64 1 (pow.f64 (/.f64 2 (*.f64 y x)) -2))) -1)))) (#(struct:change #<rule egg-rr> (2) ((x fma.f64 (hypot.f64 1 (*.f64 x (*.f64 y 1/2))) (hypot.f64 1 (*.f64 x (*.f64 y 1/2))) -1)))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (exp.f64 (log1p.f64 (/.f64 2 (*.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 2 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 (/.f64 1 y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (/.f64 1 (*.f64 y x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 2 (*.f64 (/.f64 1 y) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 y) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (*.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 4 (*.f64 y y))) (*.f64 (cbrt.f64 (/.f64 2 y)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 2 (*.f64 y x))) (pow.f64 (cbrt.f64 (/.f64 2 (*.f64 y x))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 2 (*.f64 y x))) 2) (cbrt.f64 (/.f64 2 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 2 y)) (*.f64 (sqrt.f64 (/.f64 2 y)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 2 (*.f64 y x))) (sqrt.f64 (/.f64 2 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 -2 y) (/.f64 1 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (/.f64 2 y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 4 (*.f64 y y))) 1) (/.f64 (cbrt.f64 (/.f64 2 y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 2 y)) 1) (/.f64 (sqrt.f64 (/.f64 2 y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (cbrt.f64 (*.f64 x x))) (/.f64 (/.f64 2 y) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (cbrt.f64 (*.f64 x x))) (/.f64 (/.f64 1 y) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 4 (*.f64 y y))) (cbrt.f64 (*.f64 x x))) (cbrt.f64 (/.f64 2 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (/.f64 2 y)) (cbrt.f64 (*.f64 x x))) (/.f64 (sqrt.f64 (/.f64 2 y)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 (/.f64 2 y) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 2 (sqrt.f64 x)) (/.f64 (/.f64 1 y) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (cbrt.f64 (/.f64 4 (*.f64 y y))) (sqrt.f64 x)) (/.f64 (cbrt.f64 (/.f64 2 y)) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 2 (*.f64 y x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 2 (*.f64 y x)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 2 (*.f64 y x))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (*.f64 x (*.f64 y 1/2)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 2 (*.f64 y x))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (/.f64 2 y) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 2 (*.f64 y x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 2 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (+.f64 1 (expm1.f64 (/.f64 2 (*.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 2 (*.f64 y x)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (/.f64 2 y) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 2 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 2 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 2 (*.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (*.f64 (log.f64 (/.f64 2 (*.f64 y x))) 1))))))"]],"rules":[["egg-rr",38],["egg-rr",20],["egg-rr",35],["egg-rr",81]],"stop":[["node limit",1]],"time":70.2509765625,"type":"rewrite"},{"count":[[270,206]],"egraph":[[4,7742,1698,0.033406833],[3,3494,1698,0.01890575],[2,806,1698,0.006590624999999999],[1,257,1702,0.001879542],[0,86,1742,0.000520917]],"inputs":[["y","(+.f64 y (*.f64 -1/2 (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (*.f64 -1/2 (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1/2 (*.f64 (pow.f64 y 2) x)))))","(/.f64 2 x)","(-.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))","(/.f64 2 x)","(-.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))","y","(+.f64 y (*.f64 -1/2 (*.f64 (pow.f64 y 2) x)))","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (*.f64 -1/2 (*.f64 (pow.f64 y 2) x))))","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1/2 (*.f64 (pow.f64 y 2) x)))))","(/.f64 2 x)","(-.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))","(/.f64 2 x)","(-.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))","y","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) y)","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (*.f64 1/16 (*.f64 (pow.f64 y 5) (pow.f64 x 4)))))","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 1/64 (*.f64 (pow.f64 y 7) (pow.f64 x 6))) (+.f64 y (*.f64 1/16 (*.f64 (pow.f64 y 5) (pow.f64 x 4))))))","(/.f64 -4 (*.f64 y (pow.f64 x 2)))","(neg.f64 (+.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(neg.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (+.f64 (*.f64 64 (/.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))))","(neg.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (+.f64 (*.f64 256 (/.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 x 8)))) (+.f64 (*.f64 64 (/.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))))","(/.f64 -4 (*.f64 y (pow.f64 x 2)))","(neg.f64 (+.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(neg.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (+.f64 (*.f64 64 (/.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))))","(neg.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (+.f64 (*.f64 256 (/.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 x 8)))) (+.f64 (*.f64 64 (/.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))))","y","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) y)","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (*.f64 1/16 (*.f64 (pow.f64 y 5) (pow.f64 x 4)))))","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 1/64 (*.f64 (pow.f64 y 7) (pow.f64 x 6))) (+.f64 y (*.f64 1/16 (*.f64 (pow.f64 y 5) (pow.f64 x 4))))))","(/.f64 -4 (*.f64 y (pow.f64 x 2)))","(neg.f64 (+.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(neg.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (+.f64 (*.f64 64 (/.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))))","(neg.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (+.f64 (*.f64 256 (/.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 x 8)))) (+.f64 (*.f64 64 (/.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))))","(/.f64 -4 (*.f64 y (pow.f64 x 2)))","(neg.f64 (+.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(neg.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (+.f64 (*.f64 64 (/.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))))","(neg.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (+.f64 (*.f64 256 (/.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 x 8)))) (+.f64 (*.f64 64 (/.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))","(/.f64 2 (*.f64 y x))"]],"method":["egg-herbie"],"outputs":[["y","(+.f64 y (*.f64 -1/2 (*.f64 (pow.f64 y 2) x)))","(+.f64 y (*.f64 -1/2 (*.f64 (*.f64 y y) x)))","(fma.f64 -1/2 (*.f64 y (*.f64 y x)) y)","(fma.f64 (*.f64 y y) (*.f64 -1/2 x) y)","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (*.f64 -1/2 (*.f64 (pow.f64 y 2) x))))","(+.f64 (fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) y) (*.f64 -1/2 (*.f64 (*.f64 y y) x)))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 y (*.f64 y x)) y))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 (*.f64 y y) (*.f64 -1/2 x) y))","(fma.f64 -1/2 (*.f64 y (*.f64 y x)) (fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) y))","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1/2 (*.f64 (pow.f64 y 2) x)))))","(+.f64 (fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) y) (fma.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 -1/2 (*.f64 (*.f64 y y) x))))","(+.f64 (fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 y (*.f64 y x)) y)) (*.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3))))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 y (*.f64 y x)) (fma.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)) y)))","(/.f64 2 x)","(-.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (/.f64 2 x) (/.f64 4 (*.f64 y (*.f64 x x))))","(+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x)))","(-.f64 (/.f64 2 x) (/.f64 (/.f64 (/.f64 4 x) x) y))","(+.f64 (/.f64 2 x) (/.f64 -4 (*.f64 y (*.f64 x x))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(+.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (-.f64 (/.f64 2 x) (/.f64 4 (*.f64 y (*.f64 x x)))))","(+.f64 (/.f64 2 x) (-.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (/.f64 4 (*.f64 y (*.f64 x x)))))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 (/.f64 8 (pow.f64 x 3)) (*.f64 y y)) (/.f64 -4 (*.f64 y (*.f64 x x)))))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 -4 (*.f64 y (*.f64 x x)))) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))","(-.f64 (+.f64 (/.f64 2 x) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3)))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (+.f64 (/.f64 (/.f64 -4 y) (*.f64 x x)) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(+.f64 (/.f64 2 x) (-.f64 (+.f64 (/.f64 (/.f64 8 (pow.f64 x 3)) (*.f64 y y)) (/.f64 -4 (*.f64 y (*.f64 x x)))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))))","(+.f64 (/.f64 2 x) (-.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (-.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))))))","(/.f64 2 x)","(-.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (/.f64 2 x) (/.f64 4 (*.f64 y (*.f64 x x))))","(+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x)))","(-.f64 (/.f64 2 x) (/.f64 (/.f64 (/.f64 4 x) x) y))","(+.f64 (/.f64 2 x) (/.f64 -4 (*.f64 y (*.f64 x x))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(+.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (-.f64 (/.f64 2 x) (/.f64 4 (*.f64 y (*.f64 x x)))))","(+.f64 (/.f64 2 x) (-.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (/.f64 4 (*.f64 y (*.f64 x x)))))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 (/.f64 8 (pow.f64 x 3)) (*.f64 y y)) (/.f64 -4 (*.f64 y (*.f64 x x)))))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 -4 (*.f64 y (*.f64 x x)))) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))","(-.f64 (+.f64 (/.f64 2 x) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3)))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (+.f64 (/.f64 (/.f64 -4 y) (*.f64 x x)) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(+.f64 (/.f64 2 x) (-.f64 (+.f64 (/.f64 (/.f64 8 (pow.f64 x 3)) (*.f64 y y)) (/.f64 -4 (*.f64 y (*.f64 x x)))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))))","(+.f64 (/.f64 2 x) (-.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (-.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))))))","y","(+.f64 y (*.f64 -1/2 (*.f64 (pow.f64 y 2) x)))","(+.f64 y (*.f64 -1/2 (*.f64 (*.f64 y y) x)))","(fma.f64 -1/2 (*.f64 y (*.f64 y x)) y)","(fma.f64 (*.f64 y y) (*.f64 -1/2 x) y)","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (*.f64 -1/2 (*.f64 (pow.f64 y 2) x))))","(+.f64 (fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) y) (*.f64 -1/2 (*.f64 (*.f64 y y) x)))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 y (*.f64 y x)) y))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 (*.f64 y y) (*.f64 -1/2 x) y))","(fma.f64 -1/2 (*.f64 y (*.f64 y x)) (fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) y))","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (+.f64 (*.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3))) (*.f64 -1/2 (*.f64 (pow.f64 y 2) x)))))","(+.f64 (fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) y) (fma.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)) (*.f64 -1/2 (*.f64 (*.f64 y y) x))))","(+.f64 (fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 y (*.f64 y x)) y)) (*.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3))))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 -1/2 (*.f64 y (*.f64 y x)) (fma.f64 -1/8 (*.f64 (pow.f64 y 4) (pow.f64 x 3)) y)))","(/.f64 2 x)","(-.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (/.f64 2 x) (/.f64 4 (*.f64 y (*.f64 x x))))","(+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x)))","(-.f64 (/.f64 2 x) (/.f64 (/.f64 (/.f64 4 x) x) y))","(+.f64 (/.f64 2 x) (/.f64 -4 (*.f64 y (*.f64 x x))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(+.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (-.f64 (/.f64 2 x) (/.f64 4 (*.f64 y (*.f64 x x)))))","(+.f64 (/.f64 2 x) (-.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (/.f64 4 (*.f64 y (*.f64 x x)))))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 (/.f64 8 (pow.f64 x 3)) (*.f64 y y)) (/.f64 -4 (*.f64 y (*.f64 x x)))))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 -4 (*.f64 y (*.f64 x x)))) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))","(-.f64 (+.f64 (/.f64 2 x) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3)))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (+.f64 (/.f64 (/.f64 -4 y) (*.f64 x x)) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(+.f64 (/.f64 2 x) (-.f64 (+.f64 (/.f64 (/.f64 8 (pow.f64 x 3)) (*.f64 y y)) (/.f64 -4 (*.f64 y (*.f64 x x)))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))))","(+.f64 (/.f64 2 x) (-.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (-.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))))))","(/.f64 2 x)","(-.f64 (*.f64 2 (/.f64 1 x)) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(-.f64 (/.f64 2 x) (/.f64 4 (*.f64 y (*.f64 x x))))","(+.f64 (/.f64 2 x) (/.f64 (/.f64 -4 y) (*.f64 x x)))","(-.f64 (/.f64 2 x) (/.f64 (/.f64 (/.f64 4 x) x) y))","(+.f64 (/.f64 2 x) (/.f64 -4 (*.f64 y (*.f64 x x))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))","(+.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (-.f64 (/.f64 2 x) (/.f64 4 (*.f64 y (*.f64 x x)))))","(+.f64 (/.f64 2 x) (-.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (/.f64 4 (*.f64 y (*.f64 x x)))))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 (/.f64 8 (pow.f64 x 3)) (*.f64 y y)) (/.f64 -4 (*.f64 y (*.f64 x x)))))","(+.f64 (+.f64 (/.f64 2 x) (/.f64 -4 (*.f64 y (*.f64 x x)))) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))))","(-.f64 (+.f64 (*.f64 8 (/.f64 1 (*.f64 (pow.f64 y 2) (pow.f64 x 3)))) (*.f64 2 (/.f64 1 x))) (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))","(-.f64 (+.f64 (/.f64 2 x) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3)))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))))","(+.f64 (/.f64 2 x) (+.f64 (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))) (+.f64 (/.f64 (/.f64 -4 y) (*.f64 x x)) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(+.f64 (/.f64 2 x) (-.f64 (+.f64 (/.f64 (/.f64 8 (pow.f64 x 3)) (*.f64 y y)) (/.f64 -4 (*.f64 y (*.f64 x x)))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))))","(+.f64 (/.f64 2 x) (-.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (-.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 8 (*.f64 (*.f64 y y) (pow.f64 x 3))))))","y","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) y)","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) y)","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (*.f64 1/16 (*.f64 (pow.f64 y 5) (pow.f64 x 4)))))","(+.f64 (fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) y) (*.f64 1/16 (*.f64 (pow.f64 x 4) (pow.f64 y 5))))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 (*.f64 1/16 (pow.f64 y 5)) (pow.f64 x 4) y))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 (pow.f64 x 4) (*.f64 1/16 (pow.f64 y 5)) y))","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 1/64 (*.f64 (pow.f64 y 7) (pow.f64 x 6))) (+.f64 y (*.f64 1/16 (*.f64 (pow.f64 y 5) (pow.f64 x 4))))))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 1/64 (*.f64 (pow.f64 y 7) (pow.f64 x 6)) (+.f64 y (*.f64 1/16 (*.f64 (pow.f64 x 4) (pow.f64 y 5))))))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 1/64 (*.f64 (pow.f64 y 7) (pow.f64 x 6)) (fma.f64 (*.f64 1/16 (pow.f64 y 5)) (pow.f64 x 4) y)))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 (pow.f64 x 4) (*.f64 1/16 (pow.f64 y 5)) (fma.f64 (pow.f64 y 7) (*.f64 1/64 (pow.f64 x 6)) y)))","(/.f64 -4 (*.f64 y (pow.f64 x 2)))","(/.f64 (/.f64 -4 y) (*.f64 x x))","(/.f64 -4 (*.f64 y (*.f64 x x)))","(neg.f64 (+.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(neg.f64 (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))))","(+.f64 (/.f64 (/.f64 -4 y) (*.f64 x x)) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))","(+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))","(neg.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (+.f64 (*.f64 64 (/.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))))","(neg.f64 (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 64 (*.f64 (pow.f64 y 5) (pow.f64 x 6))))))","(-.f64 (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 (/.f64 64 (pow.f64 x 6)) (pow.f64 y 5))))","(+.f64 (+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (/.f64 -64 (*.f64 (pow.f64 y 5) (pow.f64 x 6))))","(+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 -64 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))))","(neg.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (+.f64 (*.f64 256 (/.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 x 8)))) (+.f64 (*.f64 64 (/.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))))","(neg.f64 (+.f64 (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 256 (*.f64 (pow.f64 y 7) (pow.f64 x 8)))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 64 (*.f64 (pow.f64 y 5) (pow.f64 x 6))))))","(-.f64 (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 (/.f64 64 (pow.f64 x 6)) (pow.f64 y 5)) (/.f64 256 (*.f64 (pow.f64 y 7) (pow.f64 x 8))))))","(+.f64 (+.f64 (+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (/.f64 -64 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (/.f64 -256 (*.f64 (pow.f64 y 7) (pow.f64 x 8))))","(-.f64 (+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 (/.f64 -256 (pow.f64 x 8)) (pow.f64 y 7))) (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 64 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))))","(/.f64 -4 (*.f64 y (pow.f64 x 2)))","(/.f64 (/.f64 -4 y) (*.f64 x x))","(/.f64 -4 (*.f64 y (*.f64 x x)))","(neg.f64 (+.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(neg.f64 (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))))","(+.f64 (/.f64 (/.f64 -4 y) (*.f64 x x)) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))","(+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))","(neg.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (+.f64 (*.f64 64 (/.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))))","(neg.f64 (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 64 (*.f64 (pow.f64 y 5) (pow.f64 x 6))))))","(-.f64 (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 (/.f64 64 (pow.f64 x 6)) (pow.f64 y 5))))","(+.f64 (+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (/.f64 -64 (*.f64 (pow.f64 y 5) (pow.f64 x 6))))","(+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 -64 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))))","(neg.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (+.f64 (*.f64 256 (/.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 x 8)))) (+.f64 (*.f64 64 (/.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))))","(neg.f64 (+.f64 (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 256 (*.f64 (pow.f64 y 7) (pow.f64 x 8)))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 64 (*.f64 (pow.f64 y 5) (pow.f64 x 6))))))","(-.f64 (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 (/.f64 64 (pow.f64 x 6)) (pow.f64 y 5)) (/.f64 256 (*.f64 (pow.f64 y 7) (pow.f64 x 8))))))","(+.f64 (+.f64 (+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (/.f64 -64 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (/.f64 -256 (*.f64 (pow.f64 y 7) (pow.f64 x 8))))","(-.f64 (+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 (/.f64 -256 (pow.f64 x 8)) (pow.f64 y 7))) (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 64 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))))","y","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) y)","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) y)","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 y (*.f64 1/16 (*.f64 (pow.f64 y 5) (pow.f64 x 4)))))","(+.f64 (fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) y) (*.f64 1/16 (*.f64 (pow.f64 x 4) (pow.f64 y 5))))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 (*.f64 1/16 (pow.f64 y 5)) (pow.f64 x 4) y))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 (pow.f64 x 4) (*.f64 1/16 (pow.f64 y 5)) y))","(+.f64 (*.f64 1/4 (*.f64 (pow.f64 y 3) (pow.f64 x 2))) (+.f64 (*.f64 1/64 (*.f64 (pow.f64 y 7) (pow.f64 x 6))) (+.f64 y (*.f64 1/16 (*.f64 (pow.f64 y 5) (pow.f64 x 4))))))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 1/64 (*.f64 (pow.f64 y 7) (pow.f64 x 6)) (+.f64 y (*.f64 1/16 (*.f64 (pow.f64 x 4) (pow.f64 y 5))))))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 1/64 (*.f64 (pow.f64 y 7) (pow.f64 x 6)) (fma.f64 (*.f64 1/16 (pow.f64 y 5)) (pow.f64 x 4) y)))","(fma.f64 1/4 (*.f64 (pow.f64 y 3) (*.f64 x x)) (fma.f64 (pow.f64 x 4) (*.f64 1/16 (pow.f64 y 5)) (fma.f64 (pow.f64 y 7) (*.f64 1/64 (pow.f64 x 6)) y)))","(/.f64 -4 (*.f64 y (pow.f64 x 2)))","(/.f64 (/.f64 -4 y) (*.f64 x x))","(/.f64 -4 (*.f64 y (*.f64 x x)))","(neg.f64 (+.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(neg.f64 (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))))","(+.f64 (/.f64 (/.f64 -4 y) (*.f64 x x)) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))","(+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))","(neg.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (+.f64 (*.f64 64 (/.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))))","(neg.f64 (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 64 (*.f64 (pow.f64 y 5) (pow.f64 x 6))))))","(-.f64 (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 (/.f64 64 (pow.f64 x 6)) (pow.f64 y 5))))","(+.f64 (+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (/.f64 -64 (*.f64 (pow.f64 y 5) (pow.f64 x 6))))","(+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 -64 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))))","(neg.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (+.f64 (*.f64 256 (/.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 x 8)))) (+.f64 (*.f64 64 (/.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))))","(neg.f64 (+.f64 (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 256 (*.f64 (pow.f64 y 7) (pow.f64 x 8)))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 64 (*.f64 (pow.f64 y 5) (pow.f64 x 6))))))","(-.f64 (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 (/.f64 64 (pow.f64 x 6)) (pow.f64 y 5)) (/.f64 256 (*.f64 (pow.f64 y 7) (pow.f64 x 8))))))","(+.f64 (+.f64 (+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (/.f64 -64 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (/.f64 -256 (*.f64 (pow.f64 y 7) (pow.f64 x 8))))","(-.f64 (+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 (/.f64 -256 (pow.f64 x 8)) (pow.f64 y 7))) (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 64 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))))","(/.f64 -4 (*.f64 y (pow.f64 x 2)))","(/.f64 (/.f64 -4 y) (*.f64 x x))","(/.f64 -4 (*.f64 y (*.f64 x x)))","(neg.f64 (+.f64 (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))) (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))))","(neg.f64 (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))))","(+.f64 (/.f64 (/.f64 -4 y) (*.f64 x x)) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))","(+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))))","(neg.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (+.f64 (*.f64 64 (/.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2)))))))","(neg.f64 (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 64 (*.f64 (pow.f64 y 5) (pow.f64 x 6))))))","(-.f64 (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 (/.f64 64 (pow.f64 x 6)) (pow.f64 y 5))))","(+.f64 (+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (/.f64 -64 (*.f64 (pow.f64 y 5) (pow.f64 x 6))))","(+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 -64 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))))","(neg.f64 (+.f64 (*.f64 16 (/.f64 1 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (+.f64 (*.f64 256 (/.f64 1 (*.f64 (pow.f64 y 7) (pow.f64 x 8)))) (+.f64 (*.f64 64 (/.f64 1 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (*.f64 4 (/.f64 1 (*.f64 y (pow.f64 x 2))))))))","(neg.f64 (+.f64 (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 256 (*.f64 (pow.f64 y 7) (pow.f64 x 8)))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (/.f64 64 (*.f64 (pow.f64 y 5) (pow.f64 x 6))))))","(-.f64 (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (+.f64 (/.f64 4 (*.f64 y (*.f64 x x))) (+.f64 (/.f64 (/.f64 64 (pow.f64 x 6)) (pow.f64 y 5)) (/.f64 256 (*.f64 (pow.f64 y 7) (pow.f64 x 8))))))","(+.f64 (+.f64 (+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 -16 (*.f64 (pow.f64 y 3) (pow.f64 x 4)))) (/.f64 -64 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))) (/.f64 -256 (*.f64 (pow.f64 y 7) (pow.f64 x 8))))","(-.f64 (+.f64 (/.f64 -4 (*.f64 y (*.f64 x x))) (/.f64 (/.f64 -256 (pow.f64 x 8)) (pow.f64 y 7))) (+.f64 (/.f64 16 (*.f64 (pow.f64 y 3) (pow.f64 x 4))) (/.f64 64 (*.f64 (pow.f64 y 5) (pow.f64 x 6)))))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(*.f64 1/4 (*.f64 (pow.f64 y 2) (pow.f64 x 2)))","(*.f64 1/4 (*.f64 (*.f64 y y) (*.f64 x x)))","(*.f64 (*.f64 y y) (*.f64 (*.f64 x x) 1/4))","(*.f64 (*.f64 y y) (*.f64 x (*.f64 x 1/4)))","(*.f64 y (*.f64 (*.f64 y (*.f64 x x)) 1/4))","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)","(/.f64 2 (*.f64 y x))","(/.f64 (/.f64 2 y) x)"]],"stop":[["node limit",1]],"time":65.275146484375,"type":"simplify"},{"compiler":[[6073,4065]],"time":64.802001953125,"type":"eval"},{"alts":[["(+.f64 x (/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y))))","done",0.0390625],["(-.f64 x (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2))) (-.f64 1 (*.f64 y (*.f64 x 1/2)))))","done",11.881034141584417]],"compiler":[[12,9],[23,17]],"count":[[208,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[206,0],"picked":[1,1]}],"min-error":[0],"time":61.35888671875,"type":"prune"},{"accuracy":[0.0390625],"baseline":[0.0390625],"branch":[["x",0.0390625,1],["y",0.0390625,1],["(-.f64 x (/.f64 y (+.f64 1 (/.f64 (*.f64 x y) 2))))",0.0390625,1]],"compiler":[[3,2],[3,2],[13,9],[67,49]],"count":[[4,1]],"inputs":[["(-.f64 x (*.f64 (/.f64 y (-.f64 1 (pow.f64 (/.f64 (/.f64 2 y) x) -2))) (-.f64 1 (*.f64 y (*.f64 x 1/2)))))","(+.f64 x (*.f64 (pow.f64 (pow.f64 (cbrt.f64 (fma.f64 x -1/2 (/.f64 -1 y))) 2) -1) (pow.f64 (cbrt.f64 (fma.f64 x -1/2 (/.f64 -1 y))) -1)))","(+.f64 x (/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y))))","(-.f64 x (/.f64 y (+.f64 1 (/.f64 (*.f64 x y) 2))))"]],"link":["."],"name":["Data.Number.Erf:$cinvnormcdf from erf-2.0.0.0, B"],"oracle":[12.121383067416373],"outputs":[["(+.f64 x (/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y))))"]],"time":11.8759765625,"times":[["x",3.3818359375],["y",3.56005859375],["(-.f64 x (/.f64 y (+.f64 1 (/.f64 (*.f64 x y) 2))))",3.5400390625]],"type":"regimes"},{"compiler":[[12,9]],"egraph":[[1,13,14,3.7583e-5],[0,10,14,2.3583e-5]],"inputs":[["(+.f64 x (/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y))))"]],"method":["egg-herbie"],"outputs":[["(+.f64 x (/.f64 1 (fma.f64 x -1/2 (/.f64 -1 y))))"]],"stop":[["done",1],["saturated",1]],"time":8.337158203125,"type":"simplify"},{"time":0.013916015625,"type":"soundness"},{"compiler":[[12,9]],"remove-preprocessing":[[]],"time":8.842041015625,"type":"end"}]