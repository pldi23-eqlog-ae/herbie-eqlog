[{"compiler":[[8,5]],"method":["search"],"sampling":[[12,0.9224383648252115,0.07658531109336764,0.0009763240814208984],[11,0.8780481526628137,0.12097552325576544,0.0009763240814208984],[10,0.8487798809073865,0.15024379501119256,0.0009763240814208984],[9,0.7648775018751621,0.23414617404341698,0.0009763240814208984],[8,0.7102433945983648,0.28878028132021427,0.0009763240814208984],[7,0.5619508177042007,0.43707285821437836,0.0009763240814208984],[6,0.46829234808683395,0.5307313278317451,0.0009763240814208984],[5,0.18731693923473358,0.8117067366838455,0.0009763240814208984],[4,0.0,0.9990236759185791,0.0009763240814208984],[3,0.0,0.9990236759185791,0.0009763240814208984],[2,0.0,0.9990236759185791,0.0009763240814208984],[1,0.0,0.9990236759185791,0.0009763240814208984],[0,0.0,0.9990236759185791,0.0009763240814208984]],"time":19.10791015625,"type":"analyze"},{"outcomes":[["body",256,"valid",255.416015625,8256]],"time":263.2041015625,"type":"sample"},{"compiler":[[7,4]],"egraph":[[0,2,2,1.25e-6],[1,8,14,6.0125e-5],[0,7,14,3.55e-5]],"inputs":[["0","1"],["(/.f64 x (+.f64 x y))","(/.f64 y (+.f64 y x))"]],"method":["egg-herbie","egg-herbie"],"outputs":[["0","1"],["(/.f64 x (+.f64 x y))","(/.f64 y (+.f64 y x))","(/.f64 y (+.f64 x y))"]],"stop":[["saturated",1],["saturated",1]],"symmetry":[[]],"time":21.678955078125,"type":"preprocess"},{"count":[[1,1]],"egraph":[[1,6,7,5.0291e-5],[0,5,7,2.8166e-5]],"inputs":[["(/.f64 x (+.f64 x y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (+.f64 x y))"]],"stop":[["saturated",1]],"time":10.967041015625,"type":"simplify"},{"compiler":[[7,4]],"time":0.205810546875,"type":"eval"},{"alts":[["(/.f64 x (+.f64 x y))","next",0.015625]],"compiler":[[7,4],[7,4]],"count":[[2,1]],"kept":[{"done":[0,0],"fresh":[1,1],"new":[1,1],"picked":[0,0]}],"min-error":[0.015625],"time":0.610107421875,"type":"prune"},{"compiler":[[12,4]],"locations":[["(/.f64 x (+.f64 x y))",0.015625,true]],"time":2.6650390625,"type":"localize"},{"count":[[1,24]],"series":[["(/.f64 x (+.f64 x y))","y","-inf",0.27490234375],["(/.f64 x (+.f64 x y))","y","inf",0.321044921875],["(/.f64 x (+.f64 x y))","y","0",0.262939453125],["(/.f64 x (+.f64 x y))","x","-inf",0.2958984375],["(/.f64 x (+.f64 x y))","x","inf",0.3759765625],["(/.f64 x (+.f64 x y))","x","0",0.48095703125]],"time":2.10400390625,"type":"series"},{"count":[[1,33]],"egraph":[[2,1766,7,0.017779],[1,115,7,0.002275417],[0,5,7,0.000134625]],"inputs":[["(/.f64 x (+.f64 x y))"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 x (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 2) (cbrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 x) 2) (*.f64 (cbrt.f64 x) (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (sqrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 x) (*.f64 (sqrt.f64 x) (/.f64 1 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 x) (/.f64 1 (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (/.f64 x (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (cbrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 x y))) (/.f64 x (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (+.f64 x y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) 2)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) x) -1)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 x (neg.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (+.f64 x y))))))))"]],"rules":[["egg-rr",33]],"stop":[["node limit",1]],"time":35.35205078125,"type":"rewrite"},{"count":[[57,47]],"egraph":[[3,1351,345,0.013443416],[2,317,387,0.002576791],[1,104,438,0.0007250409999999999],[0,36,471,0.000190083]],"inputs":[["(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y))","(-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 (neg.f64 x) y) 1) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 x y) (/.f64 x y)))","(fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (/.f64 x y) -1) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 (/.f64 x y) (/.f64 x y)))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (fma.f64 (/.f64 x y) (/.f64 x y) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(*.f64 (fma.f64 (/.f64 x y) (/.f64 x y) 1) (*.f64 (+.f64 (/.f64 (neg.f64 x) y) 1) (/.f64 x y)))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (neg.f64 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (neg.f64 (/.f64 y x)) (/.f64 (*.f64 y y) (*.f64 x x))))","(+.f64 (-.f64 1 (/.f64 y x)) (*.f64 (/.f64 y x) (/.f64 y x)))","(+.f64 1 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)))","(fma.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)) 1)","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 y x)))))","(+.f64 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (-.f64 1 (/.f64 y x)))","(-.f64 (+.f64 1 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1))) (pow.f64 (/.f64 y x) 3))","(-.f64 (fma.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)) 1) (pow.f64 (/.f64 y x) 3))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (neg.f64 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (neg.f64 (/.f64 y x)) (/.f64 (*.f64 y y) (*.f64 x x))))","(+.f64 (-.f64 1 (/.f64 y x)) (*.f64 (/.f64 y x) (/.f64 y x)))","(+.f64 1 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)))","(fma.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)) 1)","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 y x)))))","(+.f64 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (-.f64 1 (/.f64 y x)))","(-.f64 (+.f64 1 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1))) (pow.f64 (/.f64 y x) 3))","(-.f64 (fma.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)) 1) (pow.f64 (/.f64 y x) 3))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (neg.f64 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (neg.f64 (/.f64 y x)) (/.f64 (*.f64 y y) (*.f64 x x))))","(+.f64 (-.f64 1 (/.f64 y x)) (*.f64 (/.f64 y x) (/.f64 y x)))","(+.f64 1 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)))","(fma.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)) 1)","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (*.f64 -1 (+.f64 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (/.f64 y x)))))","(+.f64 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (-.f64 1 (/.f64 y x)))","(-.f64 (+.f64 1 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1))) (pow.f64 (/.f64 y x) 3))","(-.f64 (fma.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)) 1) (pow.f64 (/.f64 y x) 3))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y))","(-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 (neg.f64 x) y) 1) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 x y) (/.f64 x y)))","(fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (/.f64 x y) -1) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 (/.f64 x y) (/.f64 x y)))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (fma.f64 (/.f64 x y) (/.f64 x y) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(*.f64 (fma.f64 (/.f64 x y) (/.f64 x y) 1) (*.f64 (+.f64 (/.f64 (neg.f64 x) y) 1) (/.f64 x y)))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y))","(-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 (neg.f64 x) y) 1) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 x y) (/.f64 x y)))","(fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (/.f64 x y) -1) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 (/.f64 x y) (/.f64 x y)))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (fma.f64 (/.f64 x y) (/.f64 x y) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(*.f64 (fma.f64 (/.f64 x y) (/.f64 x y) 1) (*.f64 (+.f64 (/.f64 (neg.f64 x) y) 1) (/.f64 x y)))"]],"stop":[["node limit",1]],"time":28.826904296875,"type":"simplify"},{"compiler":[[542,239]],"time":5.89404296875,"type":"eval"},{"alts":[["(pow.f64 (/.f64 (+.f64 x y) x) -1)","next",0.17140060698003678],["(pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) 2)","fresh",12.08984375],["(/.f64 x (+.f64 x y))","done",0.015625]],"compiler":[[9,6],[10,7],[7,4],[9,6],[10,7]],"count":[[48,3]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[47,2],"picked":[1,1]}],"min-error":[0],"time":7.988037109375,"type":"prune"},{"compiler":[[20,7]],"locations":[["(/.f64 (+.f64 x y) x)",0.0078125,true],["(pow.f64 (/.f64 (+.f64 x y) x) -1)",0.16749435698003678,true]],"time":3.890869140625,"type":"localize"},{"count":[[2,48]],"series":[["(/.f64 (+.f64 x y) x)","y","-inf",0.22119140625],["(/.f64 (+.f64 x y) x)","y","inf",0.2880859375],["(/.f64 (+.f64 x y) x)","y","0",0.21484375],["(/.f64 (+.f64 x y) x)","x","-inf",0.280029296875],["(/.f64 (+.f64 x y) x)","x","inf",0.31591796875],["(/.f64 (+.f64 x y) x)","x","0",0.220947265625],["(pow.f64 (/.f64 (+.f64 x y) x) -1)","y","-inf",0.260009765625],["(pow.f64 (/.f64 (+.f64 x y) x) -1)","y","inf",0.22802734375],["(pow.f64 (/.f64 (+.f64 x y) x) -1)","y","0",0.22900390625],["(pow.f64 (/.f64 (+.f64 x y) x) -1)","x","-inf",0.276123046875],["(pow.f64 (/.f64 (+.f64 x y) x) -1)","x","inf",0.219970703125],["(pow.f64 (/.f64 (+.f64 x y) x) -1)","x","0",0.275146484375]],"time":3.173095703125,"type":"series"},{"count":[[2,73]],"egraph":[[2,2226,14,0.019918666],[1,157,14,0.002942333],[0,7,17,0.000201083]],"inputs":[["(pow.f64 (/.f64 (+.f64 x y) x) -1)","(/.f64 (+.f64 x y) x)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 x (+.f64 x y))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 x (/.f64 1 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 x y)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 x (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 x (+.f64 x y))) (cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) x) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) x) -2)) (cbrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (sqrt.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 x y) -1) (pow.f64 (/.f64 1 x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) x)) 2) -1) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (sqrt.f64 (/.f64 (+.f64 x y) x)) -1) (pow.f64 (sqrt.f64 (/.f64 (+.f64 x y) x)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) 1) (/.f64 (cbrt.f64 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) 1) (/.f64 (sqrt.f64 x) (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (/.f64 x (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (/.f64 (cbrt.f64 x) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (/.f64 (sqrt.f64 x) (cbrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 (+.f64 x y))) (/.f64 x (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 x) 2) (sqrt.f64 (+.f64 x y))) (/.f64 (cbrt.f64 x) (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 x) (sqrt.f64 (+.f64 x y))) (/.f64 (sqrt.f64 x) (sqrt.f64 (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 x y)) x)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (neg.f64 (+.f64 x y))) (neg.f64 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (+.f64 (pow.f64 x 3) (pow.f64 y 3))) (fma.f64 x x (*.f64 y (-.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 x (-.f64 (*.f64 x x) (*.f64 y y))) (-.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 x (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (/.f64 (+.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 x y) x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (/.f64 (+.f64 x y) x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (cbrt.f64 x) 2) (/.f64 (+.f64 x y) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 x) (/.f64 (+.f64 x y) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (neg.f64 x) (neg.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) (sqrt.f64 (/.f64 (+.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (sqrt.f64 (+.f64 x y))) (sqrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x 1) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (+.f64 x y)) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) x)) 2)) (cbrt.f64 (/.f64 (+.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 x (pow.f64 (cbrt.f64 (+.f64 x y)) 2)) (cbrt.f64 (+.f64 x y)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (+.f64 x y) x) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 x (+.f64 x y)) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 x 3) (pow.f64 (+.f64 x y) 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 x (+.f64 x y))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 x (+.f64 x y))))))))","((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (/.f64 (+.f64 x y) x)) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (+.f64 x y) (/.f64 1 x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (+.f64 x y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (/.f64 (+.f64 x y) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (/.f64 (+.f64 x y) x)) (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) x)) 2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) x)) 2) (cbrt.f64 (/.f64 (+.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (*.f64 (cbrt.f64 (+.f64 x y)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (/.f64 (+.f64 x y) x)) (sqrt.f64 (/.f64 (+.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (sqrt.f64 (+.f64 x y)) (*.f64 (sqrt.f64 (+.f64 x y)) (/.f64 1 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (neg.f64 (+.f64 x y)) (/.f64 1 (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 x) (+.f64 x y))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) 1) (/.f64 (cbrt.f64 (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 x y)) 1) (/.f64 (sqrt.f64 (+.f64 x y)) x))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (pow.f64 (cbrt.f64 x) 2)) (/.f64 (+.f64 x y) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (pow.f64 (cbrt.f64 x) 2)) (cbrt.f64 (/.f64 (+.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (sqrt.f64 (+.f64 x y)) (pow.f64 (cbrt.f64 x) 2)) (/.f64 (sqrt.f64 (+.f64 x y)) (cbrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (sqrt.f64 x)) (/.f64 (+.f64 x y) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 (pow.f64 (cbrt.f64 (+.f64 x y)) 2) (sqrt.f64 x)) (/.f64 (cbrt.f64 (+.f64 x y)) (sqrt.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 (+.f64 x y) x) 1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (/.f64 x (+.f64 x y)) -1)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (pow.f64 (/.f64 (+.f64 x y) x) 3) 1/3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (cbrt.f64 (/.f64 (+.f64 x y) x)) 3)))) (#(struct:change #<rule egg-rr> (2) ((x pow.f64 (sqrt.f64 (/.f64 (+.f64 x y) x)) 2)))) (#(struct:change #<rule egg-rr> (2) ((x neg.f64 (/.f64 (+.f64 x y) (neg.f64 x)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (/.f64 (+.f64 x y) x) 2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (/.f64 (+.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (/.f64 (+.f64 x y) x) 3))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (/.f64 (pow.f64 (+.f64 x y) 3) (pow.f64 x 3)))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (/.f64 (+.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (/.f64 (+.f64 x y) x)))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (log.f64 (/.f64 (+.f64 x y) x)))))))"]],"rules":[["egg-rr",31],["egg-rr",42]],"stop":[["node limit",1]],"time":41.0419921875,"type":"rewrite"},{"count":[[121,90]],"egraph":[[3,1352,486,0.013411459],[2,319,528,0.002631292],[1,106,579,0.000757333],[0,38,612,0.000210167]],"inputs":[["(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(/.f64 y x)","(+.f64 1 (/.f64 y x))","(+.f64 1 (/.f64 y x))","(+.f64 1 (/.f64 y x))","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) 1)","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) 1)","1","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) 1)","(+.f64 (/.f64 y x) 1)","(/.f64 y x)","(+.f64 1 (/.f64 y x))","(+.f64 1 (/.f64 y x))","(+.f64 1 (/.f64 y x))","(/.f64 y x)","(+.f64 1 (/.f64 y x))","(+.f64 1 (/.f64 y x))","(+.f64 1 (/.f64 y x))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y))","(-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 (neg.f64 x) y) 1) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 x y) (/.f64 x y)))","(fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (/.f64 x y) -1) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 (/.f64 x y) (/.f64 x y)))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (fma.f64 (/.f64 x y) (/.f64 x y) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(*.f64 (fma.f64 (/.f64 x y) (/.f64 x y) 1) (*.f64 (+.f64 (/.f64 (neg.f64 x) y) 1) (/.f64 x y)))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (neg.f64 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (neg.f64 (/.f64 y x)) (/.f64 (*.f64 y y) (*.f64 x x))))","(+.f64 (-.f64 1 (/.f64 y x)) (*.f64 (/.f64 y x) (/.f64 y x)))","(+.f64 1 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)))","(fma.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)) 1)","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (neg.f64 (/.f64 y x)))))","(+.f64 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (-.f64 1 (/.f64 y x)))","(-.f64 (+.f64 1 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1))) (pow.f64 (/.f64 y x) 3))","(-.f64 (fma.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)) 1) (pow.f64 (/.f64 y x) 3))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (neg.f64 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (neg.f64 (/.f64 y x)) (/.f64 (*.f64 y y) (*.f64 x x))))","(+.f64 (-.f64 1 (/.f64 y x)) (*.f64 (/.f64 y x) (/.f64 y x)))","(+.f64 1 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)))","(fma.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)) 1)","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (neg.f64 (/.f64 y x)))))","(+.f64 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (-.f64 1 (/.f64 y x)))","(-.f64 (+.f64 1 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1))) (pow.f64 (/.f64 y x) 3))","(-.f64 (fma.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)) 1) (pow.f64 (/.f64 y x) 3))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (neg.f64 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (neg.f64 (/.f64 y x)) (/.f64 (*.f64 y y) (*.f64 x x))))","(+.f64 (-.f64 1 (/.f64 y x)) (*.f64 (/.f64 y x) (/.f64 y x)))","(+.f64 1 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1)))","(fma.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)) 1)","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (neg.f64 (/.f64 y x)))))","(+.f64 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (-.f64 1 (/.f64 y x)))","(-.f64 (+.f64 1 (*.f64 (/.f64 y x) (+.f64 (/.f64 y x) -1))) (pow.f64 (/.f64 y x) 3))","(-.f64 (fma.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)) 1) (pow.f64 (/.f64 y x) 3))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y))","(-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 (neg.f64 x) y) 1) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 x y) (/.f64 x y)))","(fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (/.f64 x y) -1) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 (/.f64 x y) (/.f64 x y)))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (fma.f64 (/.f64 x y) (/.f64 x y) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(*.f64 (fma.f64 (/.f64 x y) (/.f64 x y) 1) (*.f64 (+.f64 (/.f64 (neg.f64 x) y) 1) (/.f64 x y)))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y))","(-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 (neg.f64 x) y) 1) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (*.f64 (/.f64 x y) (/.f64 x y)))","(fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (/.f64 x y) -1) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 (/.f64 x y) (/.f64 x y)))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (fma.f64 (/.f64 x y) (/.f64 x y) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(*.f64 (fma.f64 (/.f64 x y) (/.f64 x y) 1) (*.f64 (+.f64 (/.f64 (neg.f64 x) y) 1) (/.f64 x y)))","(/.f64 y x)","(+.f64 1 (/.f64 y x))","(+.f64 1 (/.f64 y x))","(+.f64 1 (/.f64 y x))","1","(+.f64 (/.f64 y x) 1)","(+.f64 1 (/.f64 y x))","(+.f64 (/.f64 y x) 1)","(+.f64 1 (/.f64 y x))","(+.f64 (/.f64 y x) 1)","(+.f64 1 (/.f64 y x))","1","(+.f64 (/.f64 y x) 1)","(+.f64 1 (/.f64 y x))","(+.f64 (/.f64 y x) 1)","(+.f64 1 (/.f64 y x))","(+.f64 (/.f64 y x) 1)","(+.f64 1 (/.f64 y x))","1","(+.f64 (/.f64 y x) 1)","(+.f64 1 (/.f64 y x))","(+.f64 (/.f64 y x) 1)","(+.f64 1 (/.f64 y x))","(+.f64 (/.f64 y x) 1)","(+.f64 1 (/.f64 y x))","(/.f64 y x)","(+.f64 1 (/.f64 y x))","(+.f64 1 (/.f64 y x))","(+.f64 1 (/.f64 y x))","(/.f64 y x)","(+.f64 1 (/.f64 y x))","(+.f64 1 (/.f64 y x))","(+.f64 1 (/.f64 y x))"]],"stop":[["node limit",1]],"time":30.118896484375,"type":"simplify"},{"compiler":[[1063,450]],"time":11.198974609375,"type":"eval"},{"alts":[["(/.f64 x (+.f64 x y))","done",0.015625],["(pow.f64 (+.f64 (/.f64 y x) 1) -1)","next",0.16749435698003678]],"compiler":[[7,4],[9,7],[9,7]],"count":[[93,2]],"kept":[{"done":[1,1],"fresh":[1,0],"new":[90,1],"picked":[1,0]}],"min-error":[0],"time":18.43115234375,"type":"prune"},{"compiler":[[21,11]],"locations":[["(pow.f64 (+.f64 (/.f64 y x) 1) -1)",0.16749435698003678,true]],"time":4.384033203125,"type":"localize"},{"count":[[1,24]],"series":[["(pow.f64 (+.f64 (/.f64 y x) 1) -1)","x","-inf",0.217041015625],["(pow.f64 (+.f64 (/.f64 y x) 1) -1)","x","inf",0.18994140625],["(pow.f64 (+.f64 (/.f64 y x) 1) -1)","x","0",0.2099609375],["(pow.f64 (+.f64 (/.f64 y x) 1) -1)","y","-inf",0.235107421875],["(pow.f64 (+.f64 (/.f64 y x) 1) -1)","y","inf",0.47705078125],["(pow.f64 (+.f64 (/.f64 y x) 1) -1)","y","0",0.262939453125]],"time":1.679931640625,"type":"series"},{"count":[[1,21]],"egraph":[[2,2152,10,0.019675375],[1,170,10,0.0030585],[0,8,10,0.00024275]],"inputs":[["(pow.f64 (+.f64 (/.f64 y x) 1) -1)"]],"method":["batch-egg-rewrite"],"outputs":[["((#(struct:change #<rule egg-rr> (2) ((x -.f64 (+.f64 1 (exp.f64 (neg.f64 (log1p.f64 (/.f64 y x))))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 1 (exp.f64 (neg.f64 (log1p.f64 (/.f64 y x)))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (exp.f64 (neg.f64 (log1p.f64 (/.f64 y x)))) 1)))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (exp.f64 (neg.f64 (log1p.f64 (/.f64 y x))))) (cbrt.f64 (pow.f64 (+.f64 (/.f64 y x) 1) -2)))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (cbrt.f64 (pow.f64 (+.f64 (/.f64 y x) 1) -2)) (cbrt.f64 (exp.f64 (neg.f64 (log1p.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (+.f64 (/.f64 y x) 1) -1/2) (pow.f64 (+.f64 (/.f64 y x) 1) -1/2))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (pow.f64 (cbrt.f64 (+.f64 (/.f64 y x) 1)) 2) -1) (pow.f64 (cbrt.f64 (+.f64 (/.f64 y x) 1)) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (pow.f64 (hypot.f64 1 (sqrt.f64 (/.f64 y x))) -1) (pow.f64 (hypot.f64 1 (sqrt.f64 (/.f64 y x))) -1))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 1 (pow.f64 (/.f64 y x) 3))) (+.f64 (pow.f64 (/.f64 y x) 2) (-.f64 1 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x *.f64 (/.f64 1 (+.f64 (pow.f64 (/.f64 y x) 2) -1)) (+.f64 (/.f64 y x) -1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (+.f64 (/.f64 y x) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 1 (/.f64 (+.f64 (/.f64 y x) 1) 1))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 -1 (neg.f64 (+.f64 (/.f64 y x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (pow.f64 (+.f64 (/.f64 y x) 1) -1/2) (hypot.f64 1 (sqrt.f64 (/.f64 y x))))))) (#(struct:change #<rule egg-rr> (2) ((x /.f64 (/.f64 1 (pow.f64 (cbrt.f64 (+.f64 (/.f64 y x) 1)) 2)) (cbrt.f64 (+.f64 (/.f64 y x) 1)))))) (#(struct:change #<rule egg-rr> (2) ((x sqrt.f64 (pow.f64 (+.f64 (/.f64 y x) 1) -2))))) (#(struct:change #<rule egg-rr> (2) ((x log.f64 (exp.f64 (exp.f64 (neg.f64 (log1p.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x cbrt.f64 (pow.f64 (exp.f64 (neg.f64 (log1p.f64 (/.f64 y x)))) 3))))) (#(struct:change #<rule egg-rr> (2) ((x expm1.f64 (log1p.f64 (exp.f64 (neg.f64 (log1p.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x log1p.f64 (expm1.f64 (exp.f64 (neg.f64 (log1p.f64 (/.f64 y x))))))))) (#(struct:change #<rule egg-rr> (2) ((x exp.f64 (neg.f64 (log1p.f64 (/.f64 y x))))))))"]],"rules":[["egg-rr",21]],"stop":[["node limit",1]],"time":36.806884765625,"type":"rewrite"},{"count":[[45,35]],"egraph":[[3,1354,345,0.013350207999999999],[2,317,387,0.0025609170000000002],[1,104,438,0.000715667],[0,36,471,0.000188792]],"inputs":[["1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))"]],"method":["egg-herbie"],"outputs":[["1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (neg.f64 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (neg.f64 (/.f64 y x)) (/.f64 (*.f64 y y) (*.f64 x x))))","(+.f64 (-.f64 1 (/.f64 y x)) (*.f64 (/.f64 y x) (/.f64 y x)))","(+.f64 1 (*.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x))))","(fma.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)) 1)","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (neg.f64 (/.f64 y x)))))","(+.f64 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (-.f64 1 (/.f64 y x)))","(+.f64 1 (-.f64 (*.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x))) (pow.f64 (/.f64 y x) 3)))","(-.f64 (fma.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)) 1) (pow.f64 (/.f64 y x) 3))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y))","(-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 (neg.f64 x) y) 1) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))","(+.f64 (-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))","(-.f64 (/.f64 x y) (-.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (pow.f64 (/.f64 x y) 3)))","(fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (/.f64 x y) -1) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 (/.f64 x y) (/.f64 x y)))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (fma.f64 (/.f64 x y) (/.f64 x y) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(*.f64 (fma.f64 (/.f64 x y) (/.f64 x y) 1) (*.f64 (+.f64 (/.f64 (neg.f64 x) y) 1) (/.f64 x y)))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y))","(-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 (neg.f64 x) y) 1) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))","(+.f64 (-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))","(-.f64 (/.f64 x y) (-.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (pow.f64 (/.f64 x y) 3)))","(fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (/.f64 x y) -1) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 (/.f64 x y) (/.f64 x y)))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (fma.f64 (/.f64 x y) (/.f64 x y) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(*.f64 (fma.f64 (/.f64 x y) (/.f64 x y) 1) (*.f64 (+.f64 (/.f64 (neg.f64 x) y) 1) (/.f64 x y)))","(/.f64 x y)","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (/.f64 x y))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y))","(-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y)))","(*.f64 (+.f64 (/.f64 (neg.f64 x) y) 1) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))))","(+.f64 (fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (/.f64 x y)) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))","(+.f64 (-.f64 (/.f64 x y) (*.f64 (/.f64 x y) (/.f64 x y))) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))","(-.f64 (/.f64 x y) (-.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (pow.f64 (/.f64 x y) 3)))","(fma.f64 (*.f64 (/.f64 x y) (/.f64 x y)) (+.f64 (/.f64 x y) -1) (/.f64 x y))","(+.f64 (*.f64 -1 (/.f64 (pow.f64 x 2) (pow.f64 y 2))) (+.f64 (*.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(fma.f64 -1 (/.f64 (*.f64 x x) (*.f64 y y)) (fma.f64 -1 (/.f64 (pow.f64 x 4) (pow.f64 y 4)) (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3)))))","(-.f64 (-.f64 (+.f64 (/.f64 x y) (/.f64 (pow.f64 x 3) (pow.f64 y 3))) (/.f64 (pow.f64 x 4) (pow.f64 y 4))) (*.f64 (/.f64 x y) (/.f64 x y)))","(-.f64 (+.f64 (/.f64 x y) (pow.f64 (/.f64 x y) 3)) (fma.f64 (/.f64 x y) (/.f64 x y) (/.f64 (pow.f64 x 4) (pow.f64 y 4))))","(*.f64 (fma.f64 (/.f64 x y) (/.f64 x y) 1) (*.f64 (+.f64 (/.f64 (neg.f64 x) y) 1) (/.f64 x y)))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (neg.f64 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (neg.f64 (/.f64 y x)) (/.f64 (*.f64 y y) (*.f64 x x))))","(+.f64 (-.f64 1 (/.f64 y x)) (*.f64 (/.f64 y x) (/.f64 y x)))","(+.f64 1 (*.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x))))","(fma.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)) 1)","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (neg.f64 (/.f64 y x)))))","(+.f64 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (-.f64 1 (/.f64 y x)))","(+.f64 1 (-.f64 (*.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x))) (pow.f64 (/.f64 y x) 3)))","(-.f64 (fma.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)) 1) (pow.f64 (/.f64 y x) 3))","1","(+.f64 1 (*.f64 -1 (/.f64 y x)))","(+.f64 1 (neg.f64 (/.f64 y x)))","(-.f64 1 (/.f64 y x))","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (*.f64 -1 (/.f64 y x))))","(+.f64 1 (+.f64 (neg.f64 (/.f64 y x)) (/.f64 (*.f64 y y) (*.f64 x x))))","(+.f64 (-.f64 1 (/.f64 y x)) (*.f64 (/.f64 y x) (/.f64 y x)))","(+.f64 1 (*.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x))))","(fma.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)) 1)","(+.f64 1 (+.f64 (/.f64 (pow.f64 y 2) (pow.f64 x 2)) (+.f64 (*.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (*.f64 -1 (/.f64 y x)))))","(+.f64 1 (+.f64 (/.f64 (*.f64 y y) (*.f64 x x)) (fma.f64 -1 (/.f64 (pow.f64 y 3) (pow.f64 x 3)) (neg.f64 (/.f64 y x)))))","(+.f64 (-.f64 (*.f64 (/.f64 y x) (/.f64 y x)) (/.f64 (pow.f64 y 3) (pow.f64 x 3))) (-.f64 1 (/.f64 y x)))","(+.f64 1 (-.f64 (*.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x))) (pow.f64 (/.f64 y x) 3)))","(-.f64 (fma.f64 (/.f64 y x) (+.f64 -1 (/.f64 y x)) 1) (pow.f64 (/.f64 y x) 3))"]],"stop":[["node limit",1]],"time":28.297119140625,"type":"simplify"},{"compiler":[[441,233]],"time":5.032958984375,"type":"eval"},{"alts":[["(/.f64 x (+.f64 x y))","done",0.015625],["(pow.f64 (+.f64 (/.f64 y x) 1) -1)","done",0.16749435698003678]],"compiler":[[7,4],[9,7]],"count":[[37,2]],"kept":[{"done":[1,1],"fresh":[0,0],"new":[35,0],"picked":[1,1]}],"min-error":[0],"time":4.887939453125,"type":"prune"},{"accuracy":[0.015625],"baseline":[0.015625],"branch":[["x",0.015625,1],["y",0.015625,1],["(/.f64 x (+.f64 x y))",0.015625,1]],"compiler":[[3,2],[3,2],[7,4],[29,15]],"count":[[4,1]],"inputs":[["(pow.f64 (+.f64 (/.f64 y x) 1) -1)","(pow.f64 (/.f64 (+.f64 x y) x) -1)","(pow.f64 (sqrt.f64 (/.f64 x (+.f64 x y))) 2)","(/.f64 x (+.f64 x y))"]],"link":["."],"name":["AI.Clustering.Hierarchical.Internal:average from clustering-0.2.1, A"],"oracle":[12.206556856980036],"outputs":[["(/.f64 x (+.f64 x y))"]],"time":10.1201171875,"times":[["x",3.256103515625],["y",3.27392578125],["(/.f64 x (+.f64 x y))",2.823974609375]],"type":"regimes"},{"compiler":[[7,4]],"egraph":[[1,6,7,1.9749e-5],[0,5,7,1.2083e-5]],"inputs":[["(/.f64 x (+.f64 x y))"]],"method":["egg-herbie"],"outputs":[["(/.f64 x (+.f64 x y))"]],"stop":[["done",1],["saturated",1]],"time":7.970947265625,"type":"simplify"},{"time":0.00390625,"type":"soundness"},{"compiler":[[7,4]],"remove-preprocessing":[[]],"time":7.588134765625,"type":"end"}]